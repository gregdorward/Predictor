{"version":3,"sources":["components/Button.js","components/OddsRadio.js","components/createBadge.js","components/createStatsDiv.js","components/Div.js","logic/getForm.js","components/Slider.js","components/CollapsableElement.js","components/Increment.js","logic/getBTTSPotential.js","components/Carousel.js","components/KofiButton.js","components/SliderDiff.js","logic/getScorePredictions.js","components/LeagueTable.js","logic/getFixtures.js","components/PreviousGames.js","components/HeadToHead.js","components/Table.js","logic/getTeamStats.js","logic/compareFormTrend.js","components/Chart.js","components/SofaScore.js","logic/getStats.js","components/Fixture.js","logic/dataSlice.js","logic/store.js","App.js","components/images/xg-tipping-high-resolution-logo-transparent.png","components/Logo.js","reportWebVitals.js","components/Team.js","index.js"],"names":["Button","props","id","text","variant","type","onClick","onClickEvent","className","style","selectedOdds","OddsRadio","handleOptionChange","setState","value","state","this","name","checked","onChange","Component","CreateBadge","image","ClassName","src","alt","flexShrink","Stats","styleForm","formIndicator","styleBTTS","BTTSBoolean","clicked","formRun","Results","homeOrAway","ResultsHorA","homeOrAwayResults","BTTSArray","FormTextString","FavouriteRecord","goals","conceeded","possession","XG","XGConceded","XGSwing","toFixed","goalDifference","goalDifferenceHomeOrAway","sot","dangerousAttacks","undefined","leaguePosition","homeOrAwayLeaguePosition","winPercentage","drawPercentage","lossPercentage","ppg","formTrend","CardsTotal","CornersAverage","Div","getForm","match","teams","homeId","awayId","fixtureForm","i","team","fetch","process","response","json","then","formData","lastMatchTimestamp","last_updated_match_timestamp","length","rangeValue","Slide","useState","range","setRange","fractionalValue","setFractionalValue","useEffect","roundedValueOne","Math","round","roundedValueTwo","fractionalOne","oddslib","from","to","precision","fractionalTwo","error","console","log","sx","width","color","event","newValue","valueLabelDisplay","step","min","max","valueLabelFormat","index","Collapsable","transitionTime","trigger","classNameButton","buttonText","classNameFlex","classNameTwo","element","classNameThree","elementTwo","incrementValue","riskLevel","Increment","IncrementItem","getNewTips","allTips","DecreaseItem","show","getBTTSPotential","homeGoals","awayGoals","unroundedHomeGoals","unroundedAwayGoals","homeBTTS","bttsAllPercentageHome","homeOnlyBTTS","bttsPercentageHomeHome","awayOnlyBTTS","bttsPercentageAwayAway","awayBTTS","bttsAllPercentageAway","homeG","awayG","combinedBTTS","bttsFraction","status","awayOdds","btts","bttsChosen","totalGoals","rawFinalHomeGoals","rawFinalAwayGoals","SwiperCore","use","EffectCoverflow","Pagination","Slider","effect","autoHeight","grabCursor","centeredSlides","slidesPerView","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","pagination","clickable","element2","element3","element4","element5","StyledKofiButton","title","kofiID","minimumXG","minimumGD","minimumGDHorA","minimumLast10","SlideDiff","finalHomeGoals","finalAwayGoals","homeOdds","setValue","useCase","marks","parseFloat","lower","upper","Headers","append","drawPredictions","sumStatDAWin","sumStatDALoss","sumStatPossessionWin","sumStatPossessionLoss","sumStatSOTWin","sumStatSOTLoss","sumStatPPGLast10Win","sumStatPPGLast10Loss","sumOddsWin","sumOddsLoss","sumXGForWin","sumXGForLoss","sumXGAgainstWin","sumXGAgainstLoss","allDrawOutcomes","totalROI","totalInvestment","totalProfit","convertTimestamp","timestamp","newDate","Date","toLocaleDateString","split","day","month","year","converted","getPointsFromLastX","lastX","pointsAddition","points","forEach","game","getPastLeagueResults","hOrA","form","completeData","date","allLeagueResultsArrayOfObjects","leagueIndex","fixtures","teamsHomeResults","filter","fixture","home_name","item","date_unix","sort","a","b","teamsAwayResults","away_name","homeResults","awayResults","oddsSumHome","oddsSumAway","favouriteCount","underdogCount","winningFavouriteCount","drawingFavouriteCount","beatenFavouriteCount","winningUnderdogCount","drawingUnderdogCount","beatenUnderdogCount","resultedGame","homeGoalCount","team_a_xg","awayGoalCount","team_b_xg","team_a_possession","team_a_shots","team_a_shotsOnTarget","team_b_shotsOnTarget","team_a_dangerous_attacks","team_a_corners","odds_ft_1","odds_ft_2","homeTeam","awayTeam","XGAgainst","scored","shots","sotAgainst","corners","dateRaw","oddsHome","oddsAway","result","push","team_b_possession","team_b_shots","team_b_dangerous_attacks","team_b_corners","reversedResultsHome","reversedResultsAway","y","allClearFavouriteResultsHome","allClearFavouriteResultsAway","simlarGameResultsHome","concat","allSlightFavouriteResultsHome","allSlightFavouriteResultsAway","allTossupResultsHome","allTossupResultsAway","allUnderdogResultsHome","allUnderdogResultsAway","allMassiveUnderdogResultsHome","allMassiveUnderdogResultsAway","z","simlarGameResultsAway","allTeamResults","allTeamResultsHome","allTeamResultsAway","points6","map","res","slice","pointsSum6","reduce","avPoints6","points5","pointsSum5","avPoints5","pointsAll","pointsSumAll","avPointsAll","resultsAll","resultsHome","resultsAway","avScoredLast5","avScoredLast5Sum","avConceededLast5","avConceededLast5Sum","avDALast5","avDALast5Sum","avSOTLast5","avSOTLast5Sum","avSOTAgainstLast5","avSOTAgainstLast5Sum","avShotsLast5","avShotsLast5Sum","avCornersLast5","avCornersLast5Sum","avPosessionLast5","avPosessionLast5Sum","avXGLast5","avXGLast5Sum","avXGAgainstLast5","avXGAgainstLast5Sum","averageOddsHome","averageOddsAway","oddsReliabilityWin","oddsReliabilityDraw","oddsReliabilityLose","oddsReliabilityWinAsUnderdog","oddsReliabilityDrawAsUnderdog","oddsReliabilityLoseAsUnderdog","reliableIndicator","unreliableIndicator","predictabilityScore","reliabilityString","teamGoalsHome","teamGoalsAway","teamGoalsAll","teamGoalsAllRecentAtStart","reverse","teamConceededHome","teamConceededAway","teamConceededAll","teamConceededAllRecentAtStart","teamXGForAll","teamXGAgainstAll","teamXGForAllRecentAtStart","teamXGAgainstAllRecentAtStart","teamXGForHome","teamXGAgainstHome","teamXGForAway","teamXGAgainstAway","XGSum","avgXGScored","XGAgainstSum","avgXGConceeded","shortTermXGDiff","longTermXGDiff","XGChangeRecently","possessionSum","avgPossession","possessionHome","possessionSumHome","avgPossessionHome","possessionAway","possessionSumAway","avgPossessionAway","dangerousAttacksSum","avgDangerousAttacks","dangerousAttacksHome","dangerousAttacksSumHome","avgDangerousAttacksHome","dangerousAttacksAway","dangerousAttacksSumAway","avgDangerousAttacksAway","shotsSum","avgShots","shotsHome","shotsSumHome","avgShotsHome","shotsAway","shotsSumAway","avgShotsAway","shotsOnTarget","shotsOnTargetSum","avgShotsOnTarget","shotsOnTargetHome","shotsOnTargetSumHome","avgShotsOnTargetHome","shotsOnTargetAway","shotsOnTargetSumAway","avgShotsOnTargetAway","shotsOnTargetAgainst","shotsOnTargetSumAgainst","avgShotsOnTargetAgainst","shotsOnTargetAgainstHome","shotsOnTargetSumAgainstHome","avgShotsOnTargetAgainstHome","shotsOnTargetAgainstAway","shotsOnTargetSumAgainstAway","avgShotsOnTargetAgainstAway","cornersSum","cornersAv","cornersHome","cornersSumHome","cornersAvHome","cornersAway","cornersSumAway","cornersAvAway","last5XG","last5XGSum","last5XGAvgFor","last5XGHome","last5XGSumHome","last5XGAvgForHome","last5XGAway","last5XGSumAway","last5XGAvgForAway","XGSumHome","avgXGScoredHome","XGSumAway","avgXGScoredAway","XGAgainstSumHome","avgXGConceededHome","XGAgainstSumAway","avgXGConceededAway","last5XGAgainst","last5XGAgainstSum","last5XGAvgAgainst","last5XGAgainstHome","last5XGAgainstSumHome","last5XGAvgAgainstHome","last5XGAgainstAway","last5XGAgainstSumAway","last5XGAvgAgainstAway","XGDiffNonAverage","XGDiffNonAverageLast5","XGOverall","XGlast5","avgShotValue","XGAgainstAvgOverall","XGAgainstlast5","AveragePossessionOverall","AverageDangerousAttacksOverall","AverageCorners","AverageShotsOnTargetOverall","AverageShotsOnTargetAgainstOverall","alpha","beta","allGoalsArrayHomeRecent","allConceededArrayHomeRecent","allGoalsArrayHome","allConceededArrayHome","allGoalsArrayHomeOnly","allConceededArrayHomeOnly","sum","sumTwo","predictGoalsWithExponentialSmoothing","forAndAgainstRollingAv","forAndAgainstRollingAvHomeOrAway","allGoalsArrayAwayRecent","allConceededArrayAwayRecent","allGoalsArrayAway","allConceededArrayAway","allGoalsArrayAwayOnly","allConceededArrayAwayOnly","bttsHome","bttsAway","bttsAll","bttsHomeCount","bttsHomeString","bttsHomePercentage","bttsAwayCount","bttsAwayString","bttsAwayPercentage","bttsAllCount","bttsAllString","bttsAllPercentage","r","x","predictNextWeightedMovingAverage","teamGoalsHomeRollingAverage","teamGoalsAwayRollingAverage","RoundedXGFor","xg","RoundedXGAgainst","RoundedXGForHome","RoundedXGAgainstHome","RoundedXGForAway","RoundedXGAgainstAway","XGPrediction","XGPredictionHome","XGPredictionAway","teamConceededHomeRollingAverage","teamConceededAwayRollingAverage","avgScored","sumHome","avgScoredHome","sumAway","avgScoredAway","last5","last5Sum","last5AvgScored","last5Home","last5SumHome","last5AvgScoredHome","last5Away","last5SumAway","last5AvgScoredAway","last5Conceeded","last5ConceededSum","last5AvgConceeded","last5ConceededHome","last5ConceededSumHome","last5AvgConceededHome","last5ConceededAway","last5ConceededSumAway","last5AvgConceededAway","last10","last10Sum","last10AvgScored","last10Conceeded","last10ConceededSum","last10AvgConceeded","last5Goals","last5GoalsConceeded","last5GoalDiff","last10Goals","last10GoalsConceeded","last10GoalDiff","teamGoalsAllRollingAverage","teamGoalsConceededAllRollingAverage","avgConceeded","teamConceededHomeOnlySum","teamConceededAvgHomeOnly","teamConceededAwayOnlySum","teamConceededAvgAwayOnly","numbers","windowSize","startIndex","window","weights","Array","_","acc","num","movingAverage","w","calculateWeightedAverage","arr","weightedSum","totalWeight","weight","pow","teamGoalsFor","teamGoalsAgainst","lambdaFor","lambdaAgainst","predictedGoalsFor","predictedGoalsAgainst","goalsFor","goalsAgainst","calculateDifference","num1","num2","comparison","metricOne","metricTwo","stat1","stat2","statDiff","getClinicalRating","dangerousAttackConversion","rating","score","getPointsDifferential","pointsHomeAvg","pointsAwayAvg","diff","differential","getPointWeighting","pointsDiff","pointsDiffWeightingHome","pointsDiffWeightingAway","compareFormTrend","recentForm","distantForm","scoreTotal","recent","distant","getPointAverage","pointTotal","games","poissonDistribution","lambda","k","numerator","exp","denominator","factorial","n","calculateAverageGoals","adjustGoalsAvg","goalsAvg","strengthRatio","predictScore","goalsForTeam1","goalsAgainstTeam1","goalsForTeam2","goalsAgainstTeam2","team1Metrics","team2Metrics","team1AverageGoalsFor","team1AverageGoalsAgainst","team2AverageGoalsFor","team2AverageGoalsAgainst","team1StrengthRatio","team2StrengthRatio","adjustedTeam1AverageGoals","adjustedTeam2AverageGoals","adjustedTeam1AverageGoalsAgainst","adjustedTeam2AverageGoalsAgainst","maxGoals","scores","j","team1GoalExpectation","team2GoalExpectation","isFinite","probability","team1Score","team2Score","top5Scores","generateGoals","homeForm","awayForm","attackingStrength","defensiveStrengthScoreGeneration","homeAttackVsAwayDefenceComparison","awayAttackVsHomeDefenceComparison","defensiveStrength","attackingStrengthLast5","defensiveStrengthScoreGenerationLast5","homeAttackVsAwayDefenceComparisonLast5","awayAttackVsHomeDefenceComparisonLast5","attackingStrengthHomeOnly","defensiveStrengthScoreGenerationAwayOnly","homeAttackVsAwayDefenceComparisonHomeOnly","attackingStrengthAwayOnly","defensiveStrengthScoreGenerationHomeOnly","awayAttackVsHomeDefenceComparisonAwayOnly","oddsComparisonHome","oddsComparisonAway","XGRating","lastGame","last2Points","XGdifferentialValueRaw","abs","calculateScore","divider","calculate","allForm","find","home","teamName","away","PlayedHome","PlayedAway","LastFiveForm","previousToLastGame","last2","twoGameAverage","last3Points","threeGameAverage","last5Points","fiveGameAverage","last6Points","sixGameAverage","last10Points","tenGameAverage","lastHomeOrAwayPoints","homeOrAwayAverage","ScoredAverage","ScoredOverall","ConcededAverage","ConcededOverall","ScoredAverageShortTerm","ConcededAverageShortTerm","longTermAverageGoals","longTermAverageConceeded","recentGoalDiff","distantGoalDiff","recentDA","distantDA","recentPosession","distantPosession","recentCleanSheet","CleanSheetPercentage","distantCleanSheet","recentFormArray","distantFormArray","formTrendScore","expectedGoals","ScoredAverageShortAndLongTerm","conceededAverageShortAndLongTerm","longTermGoalDifference","shortTermGoalDifference","XGdifferential","XGdifferentialRecent","actualToXGDifferenceRecent","formHome","formAway","homeTenGameAvg","awayTenGameAvg","homeTwoGameAvg","awayTwoGameAvg","pointsDiff10","pointsDiff2","last10WeightingHome","last10WeightingAway","last2WeightingHome","last2WeightingAway","clinicalRating","clinicalScore","XGdifferentialValue","leagueID","predictedGoalsBasedOnHomeAv","predictedGoalsBasedOnAwayAv","allTeamGoalsBasedOnAverages","predictedGoalsConceededBasedOnHomeAv","predictedGoalsConceededBasedOnAwayAv","allTeamGoalsConceededBasedOnAverages","averageScoredLeague","averageConceededLeague","last10btts","last10bttsHome","last10bttsAway","bttsPercentageHomeAway","bttsPercentageAwayHome","homeTeamHomePositionRaw","awayTeamAwayPositionRaw","homePositionHomeOnly","awayPositionAwayOnly","homePosition","homeRawPosition","awayPosition","awayRawPosition","improving","AttackingPotency","AttacksHome","AttacksAverage","attackingMetricsHome","AverageShots","AverageShotsOnTarget","Corners","attackingMetricsHomeLast5","attackingMetricsHomeOnly","attackingMetricsAwayOnly","attackingMetricsAway","attackingMetricsAwayLast5","defensiveMetricsHome","defensiveMetricsHomeLast5","defensiveMetricsAway","defensiveMetricsAwayLast5","defensiveMetricsHomeOnly","defensiveMetricsAwayOnly","attackingMetrics","defensiveMetrics","calculateAttackingStrength","attackingStrengthScoreGeneration","calculateDefensiveStrength","defensiveStrengthLast5","defensiveStrengthHomeOnly","defensiveStrengthAwayOnly","calculateMetricStrength","possessionStrength","possessionStrengthLast5","possessionStrengthHomeOnly","possessionStrengthAwayOnly","directnessOverall","directnessOverallLast5","directnessHomeOnly","directnessAwayOnly","directnessOverallStrength","directnessOverallStrengthLast5","directnessHomeStrength","directnessAwayStrength","shootingAccuracy","shootingAccuracyLast5","shootingAccuracyHomeOnly","shootingAccuracyAwayOnly","accuracyOverallStrength","accuracyOverallStrengthLast5","accuracyHomeStrength","accuracyAwayStrength","xgForStrength","xgForStrengthLast5","xgForStrengthHomeOnly","xgAgainstStrength","xgAgainstStrengthLast5","xgAgainstStrengthHomeOnly","xgForStrengthAwayOnly","xgAgainstStrengthAwayOnly","parseInt","actualToXGDifference","teamGoalsCalc","weighting","odds","scorePredictionsHA","scorePredictions","homeGoalDiff","awayGoalDiff","goalsDifferential","rollingAverageGoalsDifferential","GoalsInGamesAverageHome","GoalsInGamesAverageAway","factorOneHome","factorOneAway","scoreDiff","experimentalHomeGoals","experimentalAwayGoals","floor","prediction","includeInMultis","pointsDifferential","pointsDifferentialValue","pointsDifferentialValueRaw","rollingGoalDiffDifferential","rollingGoalDiff","rollingGoalDiffValue","dangerousAttacksDifferential","dangerousAttacksDiff","dangerousAttacksDiffValue","winner","outcome","predictionOutcome","over25PredictionOutcome","bttsOutcome","total","total2","drawOdds","omit","last10PointDiffHomePerspective","last10PointDiffAwayPerspective","XGDiffBetweenTeamsHomePerspective","XGDiffBetweenTeamsAwayPerspective","goalDiffHomeOrAwayComparison","goalDifferenceComparison","profit","getSuccessMeasure","sumProfit","investment","exactScores","successCount","netProfit","hasOwnProperty","exactScore","ROI","operand","operandTwo","exactScoreHitRate","successRate","ReactDOM","render","document","getElementById","price","combinations","gamesInExotic","exoticStake","exoticString","allTipsSorted","newArray","bestBets","Over25Tips","XGDiffTips","rollingDiffTips","dangerousAttacksDiffTips","pointsDiffTips","exoticArray","bttsArray","accumulatedOdds","predictions","array","tip","indexOf","rawOdds","renderTips","getScorePrediction","mocked","mock","Promise","all","matches","game_week","goalsA","goalsB","unroundedGoalsA","unroundedGoalsB","outcomeSymbol","over25PredictionOutcomeSymbol","bttsOutcomeSymbol","fractionHome","teamComparisonScore","predictionObject","comparisonScore","rawComparisonScore","goalDifferential","experimentalCalc","fractionAway","Over25PredictionObject","decimalOdds","homeDoubleChance","over25Odds","doubleChanceOutcome","goalTotalUnrounded","XGPredictionObject","otherTeam","pointsDiffObject","rollingDiffObject","dangerousAttacksDiffObject","RenderAllFixtures","bool","getMultis","getCoverBetMaxReturns","getAccumulatorPrice","priceArray","minAccSize","stake","perms","getUniquePermutations","permLength","permutations","newArr","splice","twoDimArrayUnion","arr1","arr2","duplicate","NewlineText","str","toggleState","setIsOff","upArrow","StyledTableCell2","withStyles","theme","head","backgroundColor","padding","paddingTop","paddingBottom","textAlign","fontSize","fontFamily","margin","body","TableCell","StyledTableCell","StyledTableRow","root","TableRow","LeagueTable","singleResult","rows","Teams","component","scope","Name","Played","Wins","Draws","Losses","For","Against","GoalDifference","Points","Form","Key","leagueResults","team_a_red_cards","team_b_red_cards","leagueResultsOlder","getTopScorersTeam","ID","sorted","league","order","sortedByForm","LastWeeksResults","GamesPlayed","LeagueID","TableContainer","Paper","Table","marginTop","marginBottom","TableHead","TableBody","mostRecentGameweek","seasonAVG_home","seasonAVG_away","seasonBTTSPercentage","seasonOver05Percentage_overall","seasonOver15Percentage_overall","seasonOver25Percentage_overall","seasonOver35Percentage_overall","seasonOver45Percentage_overall","over75CornersPercentage_overall","over85CornersPercentage_overall","over95CornersPercentage_overall","over105CornersPercentage_overall","over115CornersPercentage_overall","over125CornersPercentage_overall","cornersAVG_overall","cardsAVG_overall","top_scorers","known_as","club_team_id","goals_overall","fixtureResponse","leagueInstance","lastThreeFormHome","lastThreeFormAway","lastFiveFormHome","lastFiveFormAway","lastSixFormHome","lastSixFormAway","lastTenFormHome","lastTenFormAway","leagueOrAll","formRunHome","formRunAway","WDLinLeagueHome","WDLinLeagueAway","HomeAverageGoals","homeAverageGoals","HomeAverageConceded","homeAverageConceded","AwayAverageGoals","awayAverageGoals","AwayAverageConceded","awayAverageConceded","require","fixtureArray","arrayOfGames","leagueGames","leagueArray","leagueIdArray","tableArray","worldCupArray","generateTables","allResults","currentLeagueId","data","specific_tables","groups","table","currentTeam","wdl_record","toUpperCase","Position","cleanName","matchesPlayed","seasonWins_overall","seasonDraws_overall","seasonLosses_overall","seasonGoals","seasonConceded_home","seasonConceded_away","seasonGoalDifference","LastXPoints","wdl","seasonConceded","group","league_table","all_matches_table_overall","results","mostRecentGame","pop","gameweeksResults","leagueTable","leagueStatistics","stats","statistics","createFixture","mockBool","roundedHomeOdds","roundedAwayOdds","homeFraction","awayFraction","bttsOdds","roundedBTTSOdds","homeTeamWinsPercentage","homeTeamWinPercentage","homeTeamLossesPercentage","homeTeamLossPercentage","homeTeamDrawsPercentage","homeTeamDrawPercentage","awayTeamWinsPercentage","awayTeamWinPercentage","awayTeamLossesPercentage","awayTeamLossPercentage","awayTeamDrawsPercentage","awayTeamDrawPercentage","Fixture","isFunctionRunning","generateFixtures","footyStatsFormattedDate","current","todaysDate","dateSS","getPrefix","position","teamPositionPrefix","updateResults","method","headers","Accept","JSON","stringify","height","fill","url","formUrl","formArray","leaguesStored","storedForm","isFormStored","isStoredLocally","orderedLeagues","leaguePositions","allLeagueResults","leagues","allGames","sofaScore","events","time","startTimestamp","homeScore","display","awayScore","startDate","getTime","targetDate","orderedLeague","gamesFiltered","gamesShortened","pager","current_page","max_page","page2","page2Data","gamesConcat","gamesConcatFiltered","mostRecentResults","shortenedResults","pre_match_teamA_overall_ppg","pre_match_teamB_overall_ppg","leagueObj","homeLeague","awayLeague","all_matches_table_home","all_matches_table_away","regularSeason","season","string","stringHome","stringAway","rawPosition","homeFormName","awayFormName","homeSeasonWinPercentage","seasonWins","awaySeasonWinPercentage","homeSeasonLossPercentage","seasonLosses_home","awaySeasonLossPercentage","seasonLosses_away","homeSeasonDrawPercentage","seasonDraws","awaySeasonDrawPercentage","homeSeasonMatchesPlayed","awaySeasonMatchesPlayed","played","competition_id","unixTimestamp","dateObject","previousLeagueName","leagueName","toLocaleString","hour","minute","odds_ft_x","odds_doublechance_1x","awayDoubleChance","odds_doublechance_x2","odds_btts_yes","homeID","awayID","homeTeamInfo","awayTeamInfo","homeTeaminLeague","awayTeaminLeague","teamPositionHome","teamPositionHomeTable","teamPositionAwayTable","homeTeamWinPercentageHome","awayTeamWinPercentageAway","homeTeamLossPercentageHome","awayTeamLossPercentageAway","homeTeamDrawPercentageHome","awayTeamDrawPercentageAway","teamPositionAway","homePrefix","homePrefixHomeTable","awayPrefix","awayPrefixAwayTable","homeSeasonPPG","awaySeasonPPG","homeTeaminHomeLeague","awayTeaminAwayLeague","homeFormString5","additional_info","formRun_overall","awayFormString5","homeFormString6","awayFormString6","homeFormString10","awayFormString10","homeFormRun","formRun_home","awayFormRun","formRun_away","season_format","xg_for_avg_overall","xg_for_avg_home","seasonScoredNum_overall","seasonScoredAVG_home","seasonMatchesPlayed_home","seasonMatchesPlayed_away","seasonConcededNum_overall","seasonConcededAVG_home","xg_against_avg_overall","XGAgainstAverage","xg_against_avg_home","seasonCSPercentage_overall","possessionAVG_overall","AveragePossession","possessionAVG_home","shotsOnTargetAVG_overall","shotsOnTargetAVG_home","dangerous_attacks_avg_overall","PPG","seasonPPG_overall","attacks_avg_home","AttacksAway","attacks_avg_away","AverageDangerousAttacks","dangerous_attacks_avg_home","homeAttackAdvantage","homeDefenceAdvantage","BTTSPercentage","seasonBTTSPercentage_home","LeagueOrAll","LeaguePosition","LeagueAverageGoals","LeagueAverageConceded","shotsAVG_overall","shotsAVG_home","seasonGoalDifference_overall","seasonGoalDifference_home","seasonBTTSPercentage_overall","cardsTotal_overall","scoredBothHalvesPercentage_overall","AverageShotsHomeOrAway","lastThreeForm","LastSixForm","LastTenForm","SeasonPPG","WinPercentage","LossPercentage","DrawPercentage","BttsPercentage","BttsPercentageHomeOrAway","ScoredBothHalvesPercentage","LastMatch","WDLRecord","xg_for_avg_away","seasonScoredAVG_away","seasonConcededAVG_away","xg_against_avg_away","possessionAVG_away","shotsOnTargetAVG_away","dangerous_attacks_avg_away","seasonBTTSPercentage_away","shotsAVG_away","seasonGoalDifference_away","teamIDHome","teamIDAway","leagueId","homeBadge","home_image","awayBadge","away_image","homePpg","home_ppg","awayPpg","away_ppg","homeTeamHomePosition","awayTeamAwayPosition","odds_ft_over25","btts_potential","stadium","stadium_name","expectedGoalsHomeToDate","team_a_xg_prematch","expectedGoalsAwayToDate","team_b_xg_prematch","setTimeout","PreviousGames","getKeysByValue","object","Object","keys","key","reducedArr","team_a_id","team_b_id","teamNameHome","teamObject","teamNameAway","getDate","getMonth","getFullYear","team_a_goals","team_b_goals","HeadToHead","homeWins","awayWins","draws","averageGoals","bestHomeOdds","bestAwayOdds","lineHeight","CustomizedTables","align","o05Stat","o05Odds","u05Odds","o15Stat","o15Odds","u15Odds","o25Stat","o25Odds","u25Odds","o35Stat","o35Odds","u35Odds","getTeamStats","identifier","getBTTSPercentage","getFairOdds","impliedProbability","impliedProbabilityDivided","homeToal","awayTotal","fixtureHistory","matchArr","h2h","previous_matches_ids","reducedMatchArr","oddsComparisonHomeArray","oddsComparisonAwayArray","odds_comparison","sortedHomeOdds","entries","sortedAwayOdds","bestHomeOddsProvider","bestAwayOddsProvider","previous_matches_results","totalMatches","teamMappings","betting_stats","bttsPercentage","BTTSForecast","fairOddsBTTSYes","fairOddsBTTSNo","team_a_wins","team_b_wins","draw","avg_goals","over05Percentage","over15Percentage","o15Forecast","o15_potential","odds_ft_over05","odds_ft_under05","odds_ft_over15","odds_ft_under15","over25Percentage","o25Forecast","o25_potential","odds_ft_under25","over35Percentage","o35Forecast","o35_potential","odds_ft_over35","odds_ft_under35","BTTSStat","BTTSOdds","BTTSOddsNo","odds_btts_no","CornersStat","CornersForecast","corners_potential","CornersOdds","odds_corners_over_105","getOverOrUnderText","xgSum","overUnderAchievingSum","getXGDifferential","xgFor","xgAgainst","xgDiff","goalDiff","compareXgAndGoalDiff","getAttackingSummary","goalsRecent","goalsLongTerm","getDefenceSummary","cleansheetStat","lastx","ten","five","xgText","attackString","defenceString","pointsAverageTotal","GenerateFormSummary","Chart","data1","options","responsive","aspectRatio","maintainAspectRatio","layout","elements","point","radius","scales","suggestedMin","suggestedMax","grid","borderWidth","borderColor","ticks","font","size","plugins","legend","labels","boxHeight","datasets","label","team1","tension","team2","data2","DoughnutChart","rotation","hoverOffset","cutout","circumference","RadarChart","angleLines","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","BarChart","datasetOne","idx","numOne","numTwo","tempArr","firstNum","secondNum","findLargestNum","indexAxis","bar","tooltip","enabled","context","dataIndex","dataset","BarChartTwo","subtitle","bottom","barThickness","ChartJS","register","CategoryScale","LinearScale","RadialLinearScale","PointElement","ArcElement","Filler","BarElement","LineElement","Title","Tooltip","Legend","SubTitle","SofaLineupsWidget","differenceInSeconds","minutes","iframeSrc","currentTime","maxWidth","border","scrolling","frameborder","metric","ranges","normalizedValue","normValue","metricName","metricValue","averagePossession","accuracyOverall","Error","weightedScore","rollingGoalDiffTotalHome","rollingGoalDiffTotalAway","displayBool","testBool","styling","alert","getPointsFromGames","formArr","pairings","W","D","L","arrayOfIndividualPoints","getLastGameResult","homeXG","awayXG","homeShots","awayShots","homeSot","awaySot","homeDangerousAttacks","awayDangerousAttacks","homePossession","awayPossession","homeRed","awayRed","homePPG","awayPPG","singleSimilarResult","StatsHome","gameCount","formDataHome","Last5","gameArrayHomeTeamHomeGames","homeTenGameAverage","homeSixGameAverage","homeFiveGameAverage","homeLastGame","FormTextStringHome","StatsAway","formDataAway","gameArrayAwayTeamAwayGames","awayTenGameAverage","awaySixGameAverage","awayFiveGameAverage","awayLastGame","FormTextStringAway","getGameIdByHomeTeam","homeTeamName","matchingGames","includes","gameStats","gameArrayHome","gameArrayAway","goalDiffHomeMovingAv","goalDiffAwayMovingAv","getEMA","p","pos","resultHome","resultHomeOnly","timeZone","won","goalsScored","goalsConceeded","wonHomeOrAwayOnly","goalDiffArrayHome","cumulativeSumHome","resultAway","resultAwayOnly","wonAwayOrAwayOnly","goalDiffArrayAway","cumulativeSumAway","bttsArrayHome","bttsArrayAway","homeFormTrend","awayFormTrend","formTextStringHome","formTextStringAway","favouriteRecordHome","favouriteRecordAway","homeXGRating","awayXGRating","homeAttackStrength","homeAttackStrengthLast5","homeOnlyAttackStrength","homeDefenceStrength","homeDefenceStrengthLast5","homeOnlyDefenceStrength","homePossessionStrength","homePossessionStrengthLast5","homeOnlyPossessionStrength","homeXGForStrength","homeXGForStrengthLast5","homeOnlyXGForStrength","homeXGAgainstStrength","homeXGAgainstStrengthLast5","homeOnlyXGAgainstStrength","homeDirectnessStrength","homeDirectnessStrengthLast5","homeOnlyDirectnessStrength","homeAccuracyOverallStrength","homeAccuracyOverallStrengthLast5","homeOnlyAccuracyOverallStrength","awayAttackStrength","awayAttackStrengthLast5","awayOnlyAttackStrength","awayDefenceStrength","awayDefenceStrengthLast5","awayOnlyDefenceStrength","awayPossessionStrength","awayPossessionStrengthLast5","awayOnlyPossessionStrength","awayXGForStrength","awayXGForStrengthLast5","awayOnlyXGForStrength","awayXGAgainstStrength","awayXGAgainstStrengthLast5","awayOnlyXGAgainstStrength","awayDirectnessStrength","awayDirectnessStrengthLast5","awayOnlyDirectnessStrength","awayAccuracyOverallStrength","awayAccuracyOverallStrengthLast5","awayOnlyAccuracyOverallStrength","formPointsHome","formPointsAway","AverageGoals","AverageConceeded","AverageXG","AverageXGConceded","Last5PPG","formArrayHome","formArrayAway","chartType","overviewHome","overviewAway","similarGamesHome","similarGamesAway","matchingGame","toString","resultValue","count","mockValue","initialState","dataHome","localStorage","getItem","dataAway","dataHomeDef","dataAwayDef","homeDetails","awayDetails","fixtureDetails","dataSlice","createSlice","reducers","setData","action","payload","actions","store","configureStore","reducer","dataReducer","GetDivider","matchStatus","isPrediction","renderLeagueName","renderTable","SingleFixture","dispatch","useDispatch","StoreData","homeTeamBadge","awayTeamName","awayTeamBadge","setItem","key1","key2","open","createStatsDiv","onMouseDown","handleButtonClick","List","today","todayFootyStats","todaySS","tomorrow","tomorrowFootyStats","tomorrowSS","dateFootyStats","lastSaturday","lastSaturdayFootyStats","lastSaturdaySS","tomorrowsDate","yesterdaysDate","saturdayDate","historicDate","dateString","Logo","myImage","fixtureList","availableLeagues","leagueOrder","decrementDate","calculateDate","convertTimestampForSofaScore","renderButtons","String","padStart","setDate","getDay","textJoined","newText","leagueList","mapOrder","A","B","welcomeTextOne","welcomeTextTwo","App","getLeagueList","href","target","rel","mockedFixtures","TwitterShareButton","boxShadow","TwitterIcon","RedditShareButton","RedditIcon","FacebookShareButton","quote","FacebookIcon","WhatsappShareButton","separator","WhatsappIcon","TelegramShareButton","TelegramIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","TeamPage","dataState","fetchData","storedFixtureDetailsJson","responseHome","responseAway","indexHome","findIndex","indexAway","test","scoredOverallHome","playedHomeOnly","scoredOverallHomeOnly","seasonScoredNum_home","conceededOverallHome","conceededOverallHomeOnly","seasonConcededNum_home","PPGOverallHome","PPGOverallHomeOnly","seasonPPG_home","leaguePosition_overallHome","leaguePosition_overall","leaguePosition_HomeOnly","leaguePosition_home","averageAttendance","average_attendance_home","BTTSPercentage_overallHome","BTTSAndWinPercentage_Home","BTTS_and_win_percentage_overall","BTTSAndLosePercentage_Home","BTTS_and_lose_percentage_overall","BTTSBothHalvesHome","BTTS_both_halves_percentage_overall","GoalDifferenceHT_overall_Home","GoalDifferenceHT_overall","GD_2hg_overall_Home","gd_2hg_overall","leadingAtHTPercentage_overallHome","leadingAtHTPercentage_overall","seasonOver15Percentage_overallHome","seasonOver25Percentage_overallHome","seasonOver35Percentage_overallHome","seasonOver45Percentage_overallHome","scoredBothHalvesPercentage_overallHome","shots_on_target_per_goals_scored_overallHome","shots_on_target_per_goals_scored_overall","cornersTotalAVG_overallHome","cornersTotalAVG_overall","cardsAVG_overallHome","foulsAVG_overallHome","foulsAVG_overall","penalties_won_per_match_overallHome","penalties_won_per_match_overall","penalty_in_a_match_percentage_overallHome","penalty_in_a_match_percentage_overall","scoredOverallAway","playedAwayOnly","scoredOverallAwayOnly","seasonScoredNum_away","conceededOverallAway","conceededOverallAwayOnly","seasonConcededNum_away","PPGOverallAway","PPGOverallAwayOnly","seasonPPG_away","leaguePosition_overallAway","leaguePosition_AwayOnly","leaguePosition_away","BTTSPercentage_overallAway","BTTSAndWinPercentage_Away","BTTSAndLosePercentage_Away","BTTSBothHalvesAway","GoalDifferenceHT_overall_Away","GD_2hg_overall_Away","leadingAtHTPercentage_overallAway","seasonOver15Percentage_overallAway","seasonOver25Percentage_overallAway","seasonOver35Percentage_overallAway","seasonOver45Percentage_overallAway","scoredBothHalvesPercentage_overallAway","shots_on_target_per_goals_scored_overallAway","cornersTotalAVG_overallAway","cardsAVG_overallAway","foulsAVG_overallAway","penalties_won_per_match_overallAway","penalty_in_a_match_percentage_overallAway","storedDataHome","useSelector","jsonDataHome","parse","propertyNamesHome","storedDataHomeDef","jsonDataHomeDef","propertyNamesHomeDef","storedDataallTeamResultsHome","jsonDataallTeamResultsHome","propertyNamesallTeamResultsHome","values","jsonHomeDetails","storedDataAway","jsonDataAway","propertyNamesAway","storedDataAwayDef","jsonDataAwayDef","propertyNamesAwayDef","storedDataallTeamResultsAway","jsonDataallTeamResultsAway","propertyNamesallTeamResultsAway","jsonAwayDetails","storedFixtureDetails","stacked","path","Team","exact"],"mappings":"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","file":"static/js/main.67bf295b.chunk.js","sourcesContent":["import React from \"react\";\n\nexport function Button(props) {\n  return (\n    <div id=\"Button\">\n      <button data-cy={props.text} variant=\"primary\" type=\"button\" onClick={props.onClickEvent} className={props.className} style={props.style}>\n        {props.text}\n      </button>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nexport var selectedOdds = \"Fractional odds\";\n\nexport class OddsRadio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOdds: this.props.value,\n    };\n  }\n\n  handleOptionChange = () => {\n    this.setState({\n      selectedOdds: this.props.value,\n    });\n    selectedOdds = this.state.selectedOdds;\n  };\n\n  render() {\n    return (\n      <section className=\"dark2\">\n        <div className={this.props.className}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"odds\"\n              checked={this.state.checked}\n              onChange={this.handleOptionChange}\n              data-cy={this.props.value}\n            />\n            <span className=\"design\"></span>\n            <span className=\"text\">{this.props.value}</span>\n          </label>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default OddsRadio;\n","import React from \"react\";\n\nexport function CreateBadge(props) {\n\n  if(props.image === \"-\"){\n    return (\n      <div className={props.ClassName} />\n    );\n  } else {\n    return (\n      <img\n        src={`https://cdn.footystats.org/img/${props.image}`}\n        className={props.ClassName}\n        alt={props.alt}\n        flex-shrink={props.flexShrink}\n      />\n    );\n  }\n}\n","import React, { Fragment } from \"react\";\n\nfunction Stats(props) {\n  let shouldOpen = props.clicked;\n  function styleForm(formIndicator) {\n    let className;\n    if (formIndicator === \"W\") {\n      className = \"win\";\n    } else if (formIndicator === \"D\") {\n      className = \"draw\";\n    } else if (formIndicator === \"L\") {\n      className = \"loss\";\n    }\n    return className;\n  }\n\n  function styleBTTS(BTTSBoolean) {\n    let className;\n    if (BTTSBoolean === \"\\u2714\") {\n      className = \"BTTSTrue\";\n    } else if (BTTSBoolean === \"\\u2718\") {\n      className = \"BTTSFalse\";\n    }\n    return className;\n  }\n\n  if (props.formRun) {\n    return (\n      <Fragment>\n        <ul className={props.className} style={props.style}>\n          <li className=\"FormHeader\">League results (most recent on right)</li>\n          <li key={`last5League`} className=\"last5League\">\n            <span className={styleForm(props.Results[0])}>\n              {props.Results[0]}\n            </span>\n            <span className={styleForm(props.Results[1])}>\n              {props.Results[1]}\n            </span>\n            <span className={styleForm(props.Results[2])}>\n              {props.Results[2]}\n            </span>\n            <span className={styleForm(props.Results[3])}>\n              {props.Results[3]}\n            </span>\n            <span className={styleForm(props.Results[4])}>\n              {props.Results[4]}\n            </span>\n            <span className={styleForm(props.Results[5])}>\n              {props.Results[5]}\n            </span>\n          </li>\n          <li className=\"FormHeader\">\n            {props.homeOrAway} form (most recent on right)\n          </li>\n          <li\n            key={`last5${props.homeOrAwayResults}`}\n            className=\"FormHomeOrAway\"\n          >\n            <span className={styleForm(props.ResultsHorA[0])}>\n              {props.ResultsHorA[0]}\n            </span>\n            <span className={styleForm(props.ResultsHorA[1])}>\n              {props.ResultsHorA[1]}\n            </span>\n            <span className={styleForm(props.ResultsHorA[2])}>\n              {props.ResultsHorA[2]}\n            </span>\n            <span className={styleForm(props.ResultsHorA[3])}>\n              {props.ResultsHorA[3]}\n            </span>\n            <span className={styleForm(props.ResultsHorA[4])}>\n              {props.ResultsHorA[4]}\n            </span>\n            <span className={styleForm(props.ResultsHorA[5])}>\n              {props.ResultsHorA[5]}\n            </span>\n          </li>\n          <li\n            key=\"BTTSArrayHomeOrAway\"\n            className=\"BTTSArrayHomeOrAway\"\n            data-cy={props.name + \"BTTSArrayHomeOrAway\"}\n          >\n            <div className=\"BTTSResults\">BTTS</div>\n            <span className={styleBTTS(props.BTTSArray[5])}>\n              {props.BTTSArray[5]}\n            </span>\n            <span className={styleBTTS(props.BTTSArray[4])}>\n              {props.BTTSArray[4]}\n            </span>\n            <span className={styleBTTS(props.BTTSArray[3])}>\n              {props.BTTSArray[3]}\n            </span>\n            <span className={styleBTTS(props.BTTSArray[2])}>\n              {props.BTTSArray[2]}\n            </span>\n            <span className={styleBTTS(props.BTTSArray[1])}>\n              {props.BTTSArray[1]}\n            </span>\n            <span className={styleBTTS(props.BTTSArray[0])}>\n              {props.BTTSArray[0]}\n            </span>\n          </li>\n          <div className=\"FormSummaries\">\n          <li className=\"FormSummaryHome\">{props.FormTextString}</li>\n          <li className=\"FavouriteSummaryHome\">{props.FavouriteRecord}</li>\n          </div>\n          <div className=\"AllStats\">\n          <li\n            key=\"TeamScored\"\n            className=\"TeamScored\"\n            data-cy={props.name + \"teamScored\"}\n          >\n            {`Avg goals scored - ${props.goals}`}\n          </li>\n          <li\n            key=\"TeamConceeded\"\n            className=\"TeamConceeded\"\n            data-cy={props.name + \"teamConceded\"}\n          >\n            {`Avg goals conceeded - ${props.conceeded}`}\n          </li>\n          <li\n            key=\"TeamPossession\"\n            className=\"TeamPossession\"\n            data-cy={props.name + \"teamPossession\"}\n          >\n            {`Avg possession - ${props.possession}%`}\n          </li>\n          <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name + \"teamXG\"}>\n            {`Avg XG - ${props.XG}`}\n          </li>\n          <li\n            key=\"TeamXGConceded\"\n            className=\"TeamXGConceded\"\n            data-cy={props.name + \"teamXGConceded\"}\n          >\n            {`Avg XG conceded - ${props.XGConceded}`}\n          </li>\n          <li\n            key=\"TeamXGSwing\"\n            className=\"TeamXGSwing\"\n            data-cy={props.name + \"teamXGSwing\"}\n          >\n            {`XG difference swing (last 5): ${props.XGSwing.toFixed(2)}`}\n          </li>\n          <li\n            key=\"goalDifference\"\n            className=\"goalDifference\"\n            data-cy={props.name + \"goalDifference\"}\n          >\n            {`Goal difference : `}\n            <span>{props.goalDifference}</span>\n          </li>\n          <li\n            key=\"goalDifferenceHorA\"\n            className=\"goalDifferenceHorA\"\n            data-cy={props.name + \"goalDifference\"}\n          >\n            {`Goal difference ${props.homeOrAway} : ${props.goalDifferenceHomeOrAway}`}\n          </li>\n          <li\n            key=\"AverageSOT\"\n            className=\"AverageSOT\"\n            data-cy={props.name + \"averageSOT\"}\n          >\n            {`Avg shots on target - ${props.sot}`}\n          </li>\n          <li\n            key=\"DangerousAttacks\"\n            className=\"DangerousAttacks\"\n            data-cy={props.name + \"dangerousAttacks\"}\n          >\n            {`Avg dangerous attacks - ${props.dangerousAttacks}`}\n          </li>\n          <li\n            key=\"LeaguePosition\"\n            className=\"LeaguePosition\"\n            data-cy={props.name + \"leaguePosition\"}\n          >\n            {`League position - ${\n              props.leaguePosition !== undefined ? props.leaguePosition : \"N/A\"\n            }`}\n          </li>\n          <li\n            key=\"LeaguePositionHomeOrAway\"\n            className=\"LeaguePositionHomeOrAway\"\n            data-cy={`${props.name}LeaguePositionHomeOrAway`}\n          >\n            {`Position (${props.homeOrAway} only) - ${\n              props.homeOrAwayLeaguePosition !== undefined\n                ? props.homeOrAwayLeaguePosition\n                : \"N/A\"\n            }`}\n          </li>\n          <li\n            key=\"WinPercentage\"\n            className=\"WinPercentage\"\n            data-cy={props.name + \"WinPercentage\"}\n          >\n            {`${props.homeOrAway} wins - ${props.winPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"DrawPercentage\"\n            className=\"DrawPercentage\"\n            data-cy={props.name + \"DrawPercentage\"}\n          >\n            {`${props.homeOrAway} draws - ${props.drawPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"LossPercentage\"\n            className=\"LossPercentage\"\n            data-cy={props.name + \"LossPercentage\"}\n          >\n            {`${props.homeOrAway} losses - ${props.lossPercentage.toFixed(1)}%`}\n          </li>\n          <li key=\"PPG\" className=\"PPG\" data-cy={props.name + \"PPG\"}>\n            {`Season PPG - ${props.ppg}`}\n          </li>\n          <li\n            key=\"FormTrend10a\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 10 PPG: ${props.formTrend[0]}`}\n          </li>\n          <li\n            key=\"FormTrend10b\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 6 PPG: ${props.formTrend[1]}`}\n          </li>\n          <li\n            key=\"FormTrend10c\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 5 PPG: ${props.formTrend[2]}.`}\n          </li>\n          <li\n            key=\"CardsTotal\"\n            className=\"CardsTotal\"\n            data-cy={props.name + \"CardsTotal\"}\n          >\n            {`Cards total: ${props.CardsTotal}`}\n          </li>\n          <li\n            key=\"CornersAverage\"\n            className=\"CornersAverage\"\n            data-cy={props.name + \"CornersAverage\"}\n          >\n            {`Corners average: ${props.CornersAverage}`}\n          </li>\n          </div>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  } else {\n    return (\n      <Fragment>\n        <ul className={props.className} style={props.style}>\n        <div className=\"FormSummaries\">\n          <li className=\"FormSummaryHome\">{props.FormTextString}</li>\n          <li className=\"FavouriteSummaryAway\">{props.FavouriteRecord}</li>\n          </div>\n          <div className=\"AllStats\">\n          <li\n            key=\"TeamScored\"\n            className=\"TeamScored\"\n            data-cy={props.name + \"teamScored\"}\n          >\n            {`Avg goals scored - ${props.goals}`}\n          </li>\n          <li\n            key=\"TeamConceeded\"\n            className=\"TeamConceeded\"\n            data-cy={props.name + \"teamConceded\"}\n          >\n            {`Avg goals conceeded - ${props.conceeded}`}\n          </li>\n          <li\n            key=\"TeamPossession\"\n            className=\"TeamPossession\"\n            data-cy={props.name + \"teamPossession\"}\n          >\n            {`Avg possession - ${props.possession}%`}\n          </li>\n          <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name + \"teamXG\"}>\n            {`Avg XG - ${props.XG}`}\n          </li>\n          <li\n            key=\"TeamXGConceded\"\n            className=\"TeamXGConceded\"\n            data-cy={props.name + \"teamXGConceded\"}\n          >\n            {`Avg XG conceded - ${props.XGConceded}`}\n          </li>\n          <li\n            key=\"TeamXGSwing\"\n            className=\"TeamXGSwing\"\n            data-cy={props.name + \"teamXGSwing\"}\n          >\n            {`XG difference swing (last 5): ${props.XGSwing.toFixed(2)}`}\n          </li>\n          <li\n            key=\"AverageSOT\"\n            className=\"AverageSOT\"\n            data-cy={props.name + \"averageSOT\"}\n          >\n            {`Avg shots on target - ${props.sot}`}\n          </li>\n          <li\n            key=\"DangerousAttacks\"\n            className=\"DangerousAttacks\"\n            data-cy={props.name + \"dangerousAttacks\"}\n          >\n            {`Avg dangerous attacks - ${props.dangerousAttacks}`}\n          </li>\n          <li\n            key=\"LeaguePosition\"\n            className=\"LeaguePosition\"\n            data-cy={props.name + \"leaguePosition\"}\n          >\n            {`League position - ${props.leaguePosition}`}\n          </li>\n\n          <li\n            key=\"LeaguePositionHomeOrAway\"\n            className=\"LeaguePositionHomeOrAway\"\n            data-cy={props.name + \"LeaguePositionHomeOrAway\"}\n          >\n            {`Position (${props.homeOrAway} only) - ${props.homeOrAwayLeaguePosition}`}\n          </li>\n          <li\n            key=\"WinPercentage\"\n            className=\"WinPercentage\"\n            data-cy={props.name + \"WinPercentage\"}\n          >\n            {`${props.homeOrAway} wins - ${props.winPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"DrawPercentage\"\n            className=\"DrawPercentage\"\n            data-cy={props.name + \"DrawPercentage\"}\n          >\n            {`${props.homeOrAway} draws - ${props.drawPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"LossPercentage\"\n            className=\"LossPercentage\"\n            data-cy={props.name + \"LossPercentage\"}\n          >\n            {`${props.homeOrAway} losses - ${props.lossPercentage.toFixed(1)}%`}\n          </li>\n          <li key=\"PPG\" className=\"PPG\" data-cy={props.name + \"PPG\"}>\n            {`Season PPG - ${props.ppg}`}\n          </li>\n          <li\n            key=\"FormTrend10a\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 10 PPG: ${props.formTrend[0]}`}\n          </li>\n          <li\n            key=\"FormTrend10b\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 6 PPG: ${props.formTrend[1]}`}\n          </li>\n          <li\n            key=\"FormTrend10c\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 5 PPG: ${props.formTrend[2]}.`}\n          </li>\n          <li\n            key=\"CardsTotal\"\n            className=\"CardsTotal\"\n            data-cy={props.name + \"CardsTotal\"}\n          >\n            {`Cards total: ${props.CardsTotal}`}\n          </li>\n          <li\n            key=\"CornersAverage\"\n            className=\"CornersAverage\"\n            data-cy={props.name + \"CornersAverage\"}\n          >\n            {`Corners average: ${props.CornersAverage}`}\n          </li>\n          </div>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Stats;\n","import React from \"react\";\n\nfunction Div(props) {\n  return (\n    <div id={props.id} onClick={props.onClick} style={props.style} className={props.className}>{props.text}</div>\n  );\n}\n\nexport default Div;\n","export async function getForm(match) {\n  const teams = [match.homeId, match.awayId];\n  const fixtureForm = [];\n\n  for (let i = 0; i < teams.length; i++) {\n    const team = teams[i];\n\n    let response = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}formTeam/${team}`\n    );\n    await response.json().then((formData) => {\n      formData.lastMatchTimestamp = formData.last_updated_match_timestamp\n      fixtureForm[i] = formData;\n    });\n  }\n  return fixtureForm;\n}\n","import React, { useState, useEffect } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport { selectedOdds } from \"../components/OddsRadio\";\nimport oddslib from \"oddslib\";\nexport let rangeValue = [1, 10];\n\nexport const Slide = (props) => {\n  const [range, setRange] = useState([1.1, 10]);\n  const [fractionalValue, setFractionalValue] = useState([\"1/9\", \"10/1\"]);\n\n  useEffect(() => {\n    if (selectedOdds === \"Fractional odds\") {\n      let roundedValueOne = (Math.round(range[0] * 5) / 5).toFixed(1);\n      let roundedValueTwo = (Math.round(range[1] * 5) / 5).toFixed(1);\n\n      try {\n        const fractionalOne = oddslib\n          .from(\"decimal\", roundedValueOne)\n          .to(\"fractional\", { precision: 1 });\n        const fractionalTwo = oddslib\n          .from(\"decimal\", roundedValueTwo)\n          .to(\"fractional\", { precision: 1 });\n        setFractionalValue([fractionalOne, fractionalTwo]);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [range]);\n\n  const handleChange = (event, newValue) => {\n    setRange(newValue);\n    rangeValue = newValue;\n  };\n\n  return (\n    <Slider\n      aria-label=\"Always visible\"\n      value={range}\n      sx={{\n        width: \"90%\",\n        color: \"#030061\",\n      }}\n      onChange={handleChange}\n      valueLabelDisplay=\"auto\"\n      step={0.1}\n      min={1.1}\n      max={10}\n      valueLabelFormat={(value, index) =>\n        selectedOdds === \"Fractional odds\" ? fractionalValue[index] : value\n      }\n    />\n  );\n};\n","import React from \"react\";\nimport Collapsible from \"react-collapsible\";\n\nconst Collapsable = (props) => {\n  return (\n    <Collapsible transitionTime={300} trigger={<button className={props.classNameButton}>{props.buttonText}</button>} className={props.className? props.className: \"Collapsable\"}>\n      <div className={props.classNameFlex? props.classNameFlex: \"\"}>\n      <span className={props.classNameTwo? props.classNameTwo: props.buttonText} style={props.style} key={`123${props.buttonText}`}>{props.element}</span>\n      <span className={props.classNameThree? props.classNameTwo: props.buttonText} key={`456${props.buttonText}`}>{props.elementTwo}</span>\n      </div>\n    </Collapsible>\n  );\n};\n\n\nexport default Collapsable;","import React, { Component, Fragment } from \"react\";\nimport { getNewTips } from \"../logic/getScorePredictions\"\nimport {allTips} from \"../logic/getScorePredictions\"\nexport var incrementValue = 3;\n\nexport var riskLevel = 10;\n\nclass Increment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      incrementValue,\n      riskLevel,\n      show: true,\n    };\n  }\n\n  IncrementItem = () => {\n    if(incrementValue > 1){\n    this.setState({ incrementValue: this.state.incrementValue - 1 });\n    this.setState({ riskLevel: this.state.riskLevel - 1 });\n    incrementValue = (this.state.incrementValue - 1);\n    riskLevel = this.state.riskLevel - 1;\n    }\n    getNewTips(allTips)\n  };\n  DecreaseItem = () => {\n    if(incrementValue > 0){\n      this.setState({ incrementValue: this.state.incrementValue + 1 });\n      this.setState({ riskLevel: this.state.riskLevel + 1 });\n      incrementValue = (this.state.incrementValue + 1);\n      riskLevel = this.state.riskLevel + 1;\n    }\n    getNewTips(allTips)\n  };\n\n  render() {\n    return (\n      <Fragment>\n          <button className=\"IncrementButton\" onClick={this.IncrementItem}>\n            -\n          </button>\n          <button className=\"DecrementButton\" onClick={this.DecreaseItem}>\n            +\n          </button>\n      </Fragment>\n\n    );\n  }\n}\n\nexport default Increment;\n","export async function getBTTSPotential(\n  match,\n  homeGoals,\n  awayGoals,\n  unroundedHomeGoals,\n  unroundedAwayGoals\n) {\n  const homeBTTS = match.bttsAllPercentageHome;\n  const homeOnlyBTTS = match.bttsPercentageHomeHome;\n  const awayOnlyBTTS = match.bttsPercentageAwayAway;\n  const awayBTTS = match.bttsAllPercentageAway;\n  const homeG = homeGoals;\n  const awayG = awayGoals;\n\n  match.combinedBTTS = (homeBTTS + awayBTTS) / 2;\n\n  if (\n    match.bttsFraction !== \"N/A\" &&\n    match.status !== \"suspended\" &&\n    match.status !== \"canceled\"\n  ) {\n    if (\n      homeBTTS > 55 &&\n      awayBTTS > 55 &&\n      homeOnlyBTTS > 55 &&\n      awayOnlyBTTS > 55 &&\n      match.awayOdds < 4 &&\n      match.awayOdds > 1.3 &&\n      homeG >= 1 &&\n      awayG >= 1 \n    ) {\n      match.btts = true;\n      match.bttsChosen = true;\n      match.totalGoals = match.rawFinalHomeGoals + match.rawFinalAwayGoals;\n    } else {\n      match.btts = false;\n      match.bttsChosen = false;\n    }\n  }\n  return match;\n}\n","import SwiperCore, { EffectCoverflow, Pagination } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/swiper-bundle.min.css\";\nimport \"swiper/swiper.min.css\";\n\nSwiperCore.use([EffectCoverflow, Pagination]);\n\nexport const Slider = (props) => {\n  return (\n    <Swiper\n      effect={\"coverflow\"}\n      autoHeight={true}\n      grabCursor={true}\n      centeredSlides={true}\n      slidesPerView={1}\n      coverflowEffect={{\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: false,\n      }}\n      pagination={{ clickable: true }}\n      className=\"mySwiper\"\n    >\n      <SwiperSlide>\n       {props.element}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element2}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element3}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element4}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element5}\n      </SwiperSlide>\n    </Swiper>\n  );\n};\n","import KofiButton from \"kofi-button\"\n\nexport const StyledKofiButton = (props) => {\n  return (\n    <KofiButton className=\"kofi-button\" color=\"#030061\" title={props.buttonText} kofiID=\"H2H0AX25Z\" />\n  )\n}","import React, { useState } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nexport let minimumXG = 0;\nexport let minimumGD = 0;\nexport let minimumGDHorA = 0;\nexport let minimumLast10 = 0;\n\nfunction SlideDiff(props) {\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n\n    switch (true) {\n      case props.useCase === \"xg\":\n        minimumXG = newValue;\n        break;\n      case props.useCase === \"gd\":\n        minimumGD = newValue;\n        break;\n      case props.useCase === \"gdHorA\":\n        minimumGDHorA = newValue;\n        break;\n      case props.useCase === \"last10\":\n        minimumLast10 = newValue;\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Slider\n      aria-label=\"Always visible\"\n      value={value}\n      sx={{\n        width: \"90%\",\n        color: \"#030061\",\n      }}\n      onChange={handleChange}\n      step={1}\n      marks={props.marks}\n      valueLabelDisplay=\"auto\"\n      min={parseFloat(props.lower)}\n      max={parseFloat(props.upper)}\n    />\n  );\n}\n\nexport default SlideDiff;\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { matches, diff } from \"./getFixtures\";\nimport { RenderAllFixtures } from \"../logic/getFixtures\";\nimport Div from \"../components/Div\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { allForm } from \"../logic/getFixtures\";\nimport Increment from \"../components/Increment\";\nimport { incrementValue } from \"../components/Increment\";\nimport { getBTTSPotential } from \"../logic/getBTTSPotential\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport { Slider } from \"../components/Carousel\";\nimport { StyledKofiButton } from \"../components/KofiButton\";\nimport {\n  calculateAttackingStrength,\n  calculateDefensiveStrength,\n  calculateMetricStrength,\n  getXGtoActualDifferentialStrength,\n} from \"./getStats\";\nimport { rangeValue } from \"../components/Slider\";\nimport {\n  minimumGD,\n  minimumXG,\n  minimumLast10,\n  minimumGDHorA,\n} from \"../components/SliderDiff\";\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nlet finalHomeGoals;\nlet finalAwayGoals;\nlet rawFinalHomeGoals;\nlet rawFinalAwayGoals;\nlet homeOdds;\nlet awayOdds;\nlet totalGoals = 0;\nlet totalGoals2 = 0;\nlet numberOfGames = 0;\nlet drawPredictions = 0;\nlet homePredictions = 0;\nlet awayPredictions = 0;\nlet allOutcomes = 0;\nlet homeOutcomes = 0;\nlet awayOutcomes = 0;\nlet winAmount = 0;\nlet lossAmount = 0;\nlet sumStatDAWin = 0;\nlet sumStatDALoss = 0;\nlet sumStatPossessionWin = 0;\nlet sumStatPossessionLoss = 0;\nlet sumStatSOTWin = 0;\nlet sumStatSOTLoss = 0;\nlet sumStatPPGLast10Win = 0;\nlet sumStatPPGLast10Loss = 0;\nlet sumOddsWin = 0;\nlet sumOddsLoss = 0;\nlet sumXGForWin = 0;\nlet sumXGForLoss = 0;\nlet sumXGAgainstWin = 0;\nlet sumXGAgainstLoss = 0;\nlet allWinOutcomes = 0;\nlet allLossOutcomes = 0;\nlet allDrawOutcomes = 0;\nlet totalROI = 0;\nlet totalInvestment = 0;\nlet totalProfit = 0;\nexport let formObjectHome;\nexport let formObjectAway;\nexport let clicked = false;\n\nexport var renderPredictions;\n\nasync function convertTimestamp(timestamp) {\n  let newDate = new Date(timestamp * 1000);\n  let [day, month, year] = newDate.toLocaleDateString(\"en-US\").split(\"/\");\n\n  let converted = `${year}-${day}-${month}`;\n\n  return converted;\n}\n\nexport function getPointsFromLastX(lastX) {\n  let points = 0;\n  let pointsAddition;\n\n  try {\n    lastX.forEach((game) => {\n      switch (true) {\n        case game === \"W\":\n          pointsAddition = 3;\n          break;\n        case game === \"D\":\n          pointsAddition = 1;\n          break;\n        case game === \"L\":\n          pointsAddition = 0;\n          break;\n        default:\n          break;\n      }\n\n      points = points + pointsAddition;\n    });\n    return points;\n  } catch (error) {\n    console.log(error);\n    return \"N/A\";\n  }\n}\n\nasync function getPastLeagueResults(team, game, hOrA, form) {\n  form.completeData = true;\n  let date = game.date;\n  if (allLeagueResultsArrayOfObjects[game.leagueIndex].fixtures.length > 10) {\n    let teamsHomeResults = allLeagueResultsArrayOfObjects[\n      game.leagueIndex\n    ].fixtures.filter((fixture) => fixture.home_name === team);\n\n    teamsHomeResults = teamsHomeResults\n      .filter(function (item) {\n        return item.date_unix < date;\n      })\n      .sort((a, b) => a.date_unix - b.date_unix);\n\n    let teamsAwayResults = allLeagueResultsArrayOfObjects[\n      game.leagueIndex\n    ].fixtures.filter((fixture) => fixture.away_name === team);\n\n    teamsAwayResults = teamsAwayResults\n      .filter(function (item) {\n        return item.date_unix < date;\n      })\n      .sort((a, b) => a.date_unix - b.date_unix);\n\n    let homeResults = [];\n    let awayResults = [];\n    let oddsSumHome = 0;\n    let oddsSumAway = 0;\n    let favouriteCount = 0;\n    let underdogCount = 0;\n    let winningFavouriteCount = 0;\n    let drawingFavouriteCount = 0;\n    let beatenFavouriteCount = 0;\n    let winningUnderdogCount = 0;\n    let drawingUnderdogCount = 0;\n    let beatenUnderdogCount = 0;\n    for (let index = 0; index < teamsHomeResults.length; index++) {\n      const resultedGame = teamsHomeResults[index];\n\n      homeResults.push({\n        homeTeam: resultedGame.home_name,\n        homeGoals: resultedGame.homeGoalCount,\n        XG: resultedGame.team_a_xg,\n        awayTeam: resultedGame.away_name,\n        awayGoals: resultedGame.awayGoalCount,\n        XGAgainst: resultedGame.team_b_xg,\n        possession: resultedGame.team_a_possession,\n        scored: resultedGame.homeGoalCount,\n        conceeded: resultedGame.awayGoalCount,\n        shots: resultedGame.team_a_shots,\n        sot: resultedGame.team_a_shotsOnTarget,\n        sotAgainst: resultedGame.team_b_shotsOnTarget,\n        dangerousAttacks: resultedGame.team_a_dangerous_attacks,\n        corners: resultedGame.team_a_corners,\n        date: await convertTimestamp(resultedGame.date_unix),\n        dateRaw: resultedGame.date_unix,\n        oddsHome: resultedGame.odds_ft_1,\n        oddsAway: resultedGame.odds_ft_2,\n        btts:\n          resultedGame.homeGoalCount > 0 && resultedGame.awayGoalCount > 0\n            ? true\n            : false,\n        points:\n          resultedGame.homeGoalCount > resultedGame.awayGoalCount\n            ? 3\n            : resultedGame.homeGoalCount < resultedGame.awayGoalCount\n            ? 0\n            : 1,\n        result:\n          resultedGame.homeGoalCount > resultedGame.awayGoalCount\n            ? \"W\"\n            : resultedGame.homeGoalCount < resultedGame.awayGoalCount\n            ? \"L\"\n            : \"D\",\n      });\n      oddsSumHome = oddsSumHome + resultedGame.odds_ft_1;\n      favouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2\n          ? favouriteCount + 1\n          : favouriteCount + 0;\n      winningFavouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? winningFavouriteCount + 1\n          : winningFavouriteCount + 0;\n      drawingFavouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingFavouriteCount + 1\n          : drawingFavouriteCount + 0;\n      beatenFavouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? beatenFavouriteCount + 1\n          : beatenFavouriteCount + 0;\n\n      underdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2\n          ? underdogCount + 1\n          : underdogCount + 0;\n      winningUnderdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? winningUnderdogCount + 1\n          : winningUnderdogCount + 0;\n      drawingUnderdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingUnderdogCount + 1\n          : drawingUnderdogCount + 0;\n      beatenUnderdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? beatenUnderdogCount + 1\n          : beatenUnderdogCount + 0;\n    }\n    for (let index = 0; index < teamsAwayResults.length; index++) {\n      const resultedGame = teamsAwayResults[index];\n      awayResults.push({\n        homeTeam: resultedGame.home_name,\n        homeGoals: resultedGame.homeGoalCount,\n        XG: resultedGame.team_b_xg,\n        awayTeam: resultedGame.away_name,\n        awayGoals: resultedGame.awayGoalCount,\n        XGAgainst: resultedGame.team_a_xg,\n        possession: resultedGame.team_b_possession,\n        scored: resultedGame.awayGoalCount,\n        conceeded: resultedGame.homeGoalCount,\n        shots: resultedGame.team_b_shots,\n        sot: resultedGame.team_b_shotsOnTarget,\n        sotAgainst: resultedGame.team_a_shotsOnTarget,\n        dangerousAttacks: resultedGame.team_b_dangerous_attacks,\n        corners: resultedGame.team_b_corners,\n        date: await convertTimestamp(resultedGame.date_unix),\n        dateRaw: resultedGame.date_unix,\n        oddsHome: resultedGame.odds_ft_1,\n        oddsAway: resultedGame.odds_ft_2,\n        btts:\n          resultedGame.homeGoalCount > 0 && resultedGame.awayGoalCount > 0\n            ? true\n            : false,\n        points:\n          resultedGame.homeGoalCount > resultedGame.awayGoalCount\n            ? 0\n            : resultedGame.homeGoalCount < resultedGame.awayGoalCount\n            ? 3\n            : 1,\n        result:\n          resultedGame.homeGoalCount > resultedGame.awayGoalCount\n            ? \"L\"\n            : resultedGame.homeGoalCount < resultedGame.awayGoalCount\n            ? \"W\"\n            : \"D\",\n      });\n      oddsSumAway = oddsSumAway + resultedGame.odds_ft_2;\n      favouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2\n          ? favouriteCount + 1\n          : favouriteCount + 0;\n      winningFavouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? winningFavouriteCount + 1\n          : winningFavouriteCount + 0;\n      drawingFavouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingFavouriteCount + 1\n          : drawingFavouriteCount + 0;\n      beatenFavouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? beatenFavouriteCount + 1\n          : beatenFavouriteCount + 0;\n\n      underdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2\n          ? underdogCount + 1\n          : underdogCount + 0;\n      winningUnderdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? winningUnderdogCount + 1\n          : winningUnderdogCount + 0;\n      drawingUnderdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingUnderdogCount + 1\n          : drawingUnderdogCount + 0;\n      beatenUnderdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? beatenUnderdogCount + 1\n          : beatenUnderdogCount + 0;\n    }\n\n    let reversedResultsHome = homeResults;\n    let reversedResultsAway = awayResults;\n\n    if (game.homeTeam === team) {\n      let y = game.homeOdds;\n      //Clear fav\n      if (y <= 1.5) {\n        const allClearFavouriteResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 1.45\n        );\n        const allClearFavouriteResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 1.45\n        );\n\n        form.simlarGameResultsHome = allClearFavouriteResultsHome\n          .concat(allClearFavouriteResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //fav\n      else if (y <= 2.1) {\n        const allSlightFavouriteResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 2.1 && fixture.oddsHome > 1.45\n        );\n        const allSlightFavouriteResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 2.1 && fixture.oddsAway > 1.45\n        );\n        game.simlarGameResultsHome = allSlightFavouriteResultsHome\n          .concat(allSlightFavouriteResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //Tossup\n      else if (y <= 2.75) {\n        const allTossupResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 2.75 && fixture.oddsHome > 2.1\n        );\n        const allTossupResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 2.75 && fixture.oddsAway > 2.1\n        );\n        game.simlarGameResultsHome = allTossupResultsHome\n          .concat(allTossupResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //Underdog\n      else if (y <= 4) {\n        const allUnderdogResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 4 && fixture.oddsHome > 2.75\n        );\n        const allUnderdogResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 4 && fixture.oddsAway > 2.75\n        );\n        game.simlarGameResultsHome = allUnderdogResultsHome\n          .concat(allUnderdogResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //MassiveUnderdog\n      else if (y > 4) {\n        const allMassiveUnderdogResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome > 4\n        );\n        const allMassiveUnderdogResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway > 4\n        );\n        game.simlarGameResultsHome = allMassiveUnderdogResultsHome\n          .concat(allMassiveUnderdogResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n    } else if (game.awayTeam === team) {\n      let z = game.awayOdds;\n      //Clear fav\n      if (z <= 1.5) {\n        const allClearFavouriteResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 1.45\n        );\n        const allClearFavouriteResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 1.45\n        );\n\n        game.simlarGameResultsAway = allClearFavouriteResultsHome\n          .concat(allClearFavouriteResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //fav\n      else if (z <= 2.1) {\n        const allSlightFavouriteResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 2.1 && fixture.oddsHome > 1.45\n        );\n        const allSlightFavouriteResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 2.1 && fixture.oddsAway > 1.45\n        );\n        game.simlarGameResultsAway = allSlightFavouriteResultsHome\n          .concat(allSlightFavouriteResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //Tossup\n      else if (z <= 2.75) {\n        const allTossupResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 2.75 && fixture.oddsHome > 2.1\n        );\n        const allTossupResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 2.75 && fixture.oddsAway > 2.1\n        );\n        game.simlarGameResultsAway = allTossupResultsHome\n          .concat(allTossupResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //Underdog\n      else if (z <= 4) {\n        const allUnderdogResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 4 && fixture.oddsHome > 2.75\n        );\n        const allUnderdogResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 4 && fixture.oddsAway > 2.75\n        );\n        game.simlarGameResultsAway = allUnderdogResultsHome\n          .concat(allUnderdogResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //MassiveUnderdog\n      else if (z > 4) {\n        const allMassiveUnderdogResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome > 4.5\n        );\n        const allMassiveUnderdogResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway > 4.5\n        );\n        game.simlarGameResultsAway = allMassiveUnderdogResultsHome\n          .concat(allMassiveUnderdogResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n    }\n\n    const allTeamResults = reversedResultsHome\n      .concat(reversedResultsAway)\n      .sort((a, b) => a.dateRaw - b.dateRaw);\n\n    const allTeamResultsHome = reversedResultsHome.sort(\n      (a, b) => b.dateRaw - a.dateRaw\n    );\n    const allTeamResultsAway = reversedResultsAway.sort(\n      (a, b) => b.dateRaw - a.dateRaw\n    );\n\n    form.allTeamResults = allTeamResults.sort((b, a) => a.dateRaw - b.dateRaw);\n\n    const points6 = allTeamResults.map((res) => res.points).slice(0, 6);\n    const pointsSum6 = points6.reduce((a, b) => a + b, 0);\n    form.avPoints6 = pointsSum6 / points6.length;\n\n    const points5 = allTeamResults.map((res) => res.points).slice(0, 5);\n    const pointsSum5 = points5.reduce((a, b) => a + b, 0);\n    form.avPoints5 = pointsSum5 / points5.length;\n\n    const pointsAll = allTeamResults.map((res) => res.points);\n    const pointsSumAll = pointsAll.reduce((a, b) => a + b, 0);\n    form.avPointsAll = pointsSumAll / pointsAll.length;\n\n    const resultsAll = allTeamResults.map((res) => res.result);\n    const resultsHome = allTeamResultsHome.map((res) => res.result);\n    const resultsAway = allTeamResultsAway.map((res) => res.result);\n\n    form.resultsAll = resultsAll.slice(0, 6);\n    form.resultsHome = resultsHome.slice(0, 6);\n    form.resultsAway = resultsAway.slice(0, 6);\n\n    const avScoredLast5 = allTeamResults.map((res) => res.scored).slice(0, 5);\n    const avScoredLast5Sum = avScoredLast5.reduce((a, b) => a + b, 0);\n    form.avScoredLast5 = avScoredLast5Sum / avScoredLast5.length;\n    const avConceededLast5 = allTeamResults\n      .map((res) => res.conceeded)\n      .slice(0, 5);\n    const avConceededLast5Sum = avConceededLast5.reduce((a, b) => a + b, 0);\n    form.avConceededLast5 = avConceededLast5Sum / avConceededLast5.length;\n    const avDALast5 = allTeamResults\n      .map((res) => res.dangerousAttacks)\n      .slice(0, 5);\n    const avDALast5Sum = avDALast5.reduce((a, b) => a + b, 0);\n    form.avDALast5 = avDALast5Sum / avDALast5.length;\n    const avSOTLast5 = allTeamResults.map((res) => res.sot).slice(0, 5);\n    const avSOTLast5Sum = avSOTLast5.reduce((a, b) => a + b, 0);\n    form.avSOTLast5 = avSOTLast5Sum / avSOTLast5.length;\n    const avSOTAgainstLast5 = allTeamResults\n      .map((res) => res.sotAgainst)\n      .slice(0, 5);\n    const avSOTAgainstLast5Sum = avSOTAgainstLast5.reduce((a, b) => a + b, 0);\n    form.avSOTAgainstLast5 = avSOTAgainstLast5Sum / avSOTAgainstLast5.length;\n    const avShotsLast5 = allTeamResults.map((res) => res.shots).slice(0, 5);\n    const avShotsLast5Sum = avShotsLast5.reduce((a, b) => a + b, 0);\n    form.avShotsLast5 = avShotsLast5Sum / avShotsLast5.length;\n    const avCornersLast5 = allTeamResults.map((res) => res.corners).slice(0, 5);\n    const avCornersLast5Sum = avCornersLast5.reduce((a, b) => a + b, 0);\n    form.avCornersLast5 = avCornersLast5Sum / avCornersLast5.length;\n    const avPosessionLast5 = allTeamResults\n      .map((res) => res.possession)\n      .slice(0, 6);\n    const avPosessionLast5Sum = avPosessionLast5.reduce((a, b) => a + b, 0);\n    form.avPosessionLast5 = avPosessionLast5Sum / avPosessionLast5.length;\n    const avXGLast5 = allTeamResults.map((res) => res.XG).slice(0, 5);\n    const avXGLast5Sum = avXGLast5.reduce((a, b) => a + b, 0);\n    form.avXGLast5 = avXGLast5Sum / avXGLast5.length;\n    const avXGAgainstLast5 = allTeamResults\n      .map((res) => res.XGAgainst)\n      .slice(0, 5);\n\n    // console.log(form.teamName);\n\n    // console.log(\"avConceededLast5\")\n    // console.log(avConceededLast5)\n    // console.log(\"avSOTLast5\")\n    // console.log(avSOTLast5)\n\n    // console.log(\"avSOTAgainstLast5\")\n    // console.log(avSOTAgainstLast5)\n\n    // console.log(\"avShotsLast5\")\n    // console.log(avShotsLast5)\n\n    // console.log(\"avCornersLast5\")\n    // console.log(avCornersLast5)\n\n    // console.log(\"avPosessionLast5\")\n    // console.log(avPosessionLast5)\n\n    // console.log(\"avXGLast5\")\n    // console.log(avXGLast5)\n\n    // console.log(\"avXGAgainstLast5\")\n    // console.log(avXGAgainstLast5)\n\n    const avXGAgainstLast5Sum = avXGAgainstLast5.reduce((a, b) => a + b, 0);\n    form.avXGAgainstLast5 = avXGAgainstLast5Sum / avXGAgainstLast5.length;\n\n    const averageOddsHome = oddsSumHome / teamsHomeResults.length;\n    const averageOddsAway = oddsSumAway / teamsAwayResults.length;\n    form.favouriteCount = favouriteCount;\n    form.winningFavouriteCount = winningFavouriteCount;\n    form.drawingFavouriteCount = drawingFavouriteCount;\n    form.beatenFavouriteCount = beatenFavouriteCount;\n\n    form.underdogCount = underdogCount;\n    form.winningUnderdogCount = winningUnderdogCount;\n    form.drawingUnderdogCount = drawingUnderdogCount;\n    form.beatenUnderdogCount = beatenUnderdogCount;\n\n    form.oddsReliabilityWin =\n      favouriteCount > 0\n        ? (form.winningFavouriteCount / form.favouriteCount) * 100\n        : 0;\n    form.oddsReliabilityDraw =\n      favouriteCount > 0\n        ? (form.drawingFavouriteCount / form.favouriteCount) * 100\n        : 0;\n    form.oddsReliabilityLose =\n      favouriteCount > 0\n        ? (form.beatenFavouriteCount / form.favouriteCount) * 100\n        : 0;\n\n    form.oddsReliabilityWinAsUnderdog =\n      underdogCount > 0\n        ? (form.winningUnderdogCount / form.underdogCount) * 100\n        : 0;\n    form.oddsReliabilityDrawAsUnderdog =\n      underdogCount > 0\n        ? (form.drawingUnderdogCount / form.underdogCount) * 100\n        : 0;\n    form.oddsReliabilityLoseAsUnderdog =\n      underdogCount > 0\n        ? (form.beatenUnderdogCount / form.underdogCount) * 100\n        : 0;\n\n    form.reliableIndicator =\n      form.winningFavouriteCount + form.beatenUnderdogCount;\n    form.unreliableIndicator =\n      form.beatenFavouriteCount +\n      form.drawingFavouriteCount +\n      form.winningUnderdogCount +\n      form.drawingUnderdogCount;\n\n    form.predictabilityScore =\n      form.reliableIndicator / form.unreliableIndicator;\n\n    let reliabilityString;\n\n    switch (true) {\n      case form.predictabilityScore < 0.3:\n        reliabilityString =\n          \"Odds have been an extremely unreliable indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 0.3 && form.predictabilityScore < 0.8:\n        reliabilityString =\n          \"Odds have been an unreliable indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 0.8 && form.predictabilityScore < 1.2:\n        reliabilityString =\n          \"Odds have been a decent indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 1.2 && form.predictabilityScore < 1.7:\n        reliabilityString =\n          \"Odds have been a good indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 1.7 && form.predictabilityScore < 2.2:\n        reliabilityString =\n          \"Odds have been a very good indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 2.2:\n        reliabilityString =\n          \"Odds have been an excellent indicator of actual performance so far this season\";\n        break;\n      default:\n        break;\n    }\n\n    form.reliabilityString = reliabilityString;\n\n    const teamGoalsHome = reversedResultsHome.map((res) => res.scored);\n\n    const teamGoalsAway = awayResults.map((res) => res.scored);\n    const teamGoalsAll = allTeamResults.map((res) => res.scored);\n    const teamGoalsAllRecentAtStart = teamGoalsAll.reverse();\n    const teamConceededHome = homeResults.map((res) => res.conceeded);\n    const teamConceededAway = awayResults.map((res) => res.conceeded);\n    const teamConceededAll = allTeamResults.map((res) => res.conceeded);\n    const teamConceededAllRecentAtStart = teamConceededAll.reverse();\n\n    const teamXGForAll = allTeamResults.map((res) => res.XG);\n    const teamXGAgainstAll = allTeamResults.map((res) => res.XGAgainst);\n    const teamXGForAllRecentAtStart = teamXGForAll.reverse();\n    const teamXGAgainstAllRecentAtStart = teamXGAgainstAll.reverse();\n\n    const teamXGForHome = homeResults.map((res) => res.XG);\n    const teamXGAgainstHome = homeResults.map((res) => res.XGAgainst);\n    const teamXGForAway = awayResults.map((res) => res.XG);\n    const teamXGAgainstAway = awayResults.map((res) => res.XGAgainst);\n\n    const XGSum = teamXGForAll.reduce((a, b) => a + b, 0);\n    const avgXGScored = XGSum / teamXGForAll.length || 0;\n    const XGAgainstSum = teamXGAgainstAll.reduce((a, b) => a + b, 0);\n    const avgXGConceeded = XGAgainstSum / teamXGAgainstAll.length || 0;\n\n    const shortTermXGDiff = form.avXGLast5 - form.avXGAgainstLast5\n    const longTermXGDiff = avgXGScored - avgXGConceeded\n\n    form.XGChangeRecently = shortTermXGDiff - longTermXGDiff\n\n    const possession = allTeamResults.map((res) => res.possession);\n    const possessionSum = possession.reduce((a, b) => a + b, 0);\n    const avgPossession = possessionSum / possession.length || 0;\n\n    const possessionHome = homeResults.map((res) => res.possession);\n    const possessionSumHome = possessionHome.reduce((a, b) => a + b, 0);\n    form.avgPossessionHome = possessionSumHome / possessionHome.length || 0;\n\n    const possessionAway = awayResults.map((res) => res.possession);\n    const possessionSumAway = possessionAway.reduce((a, b) => a + b, 0);\n    form.avgPossessionAway = possessionSumAway / possessionAway.length || 0;\n\n    const dangerousAttacks = allTeamResults.map((res) => res.dangerousAttacks);\n    const dangerousAttacksSum = dangerousAttacks.reduce((a, b) => a + b, 0);\n    const avgDangerousAttacks =\n      dangerousAttacksSum / dangerousAttacks.length || 0;\n\n    const dangerousAttacksHome = homeResults.map((res) => res.dangerousAttacks);\n    const dangerousAttacksSumHome = dangerousAttacksHome.reduce(\n      (a, b) => a + b,\n      0\n    );\n    form.avgDangerousAttacksHome =\n      dangerousAttacksSumHome / dangerousAttacksHome.length || 0;\n\n    const dangerousAttacksAway = awayResults.map((res) => res.dangerousAttacks);\n    const dangerousAttacksSumAway = dangerousAttacksAway.reduce(\n      (a, b) => a + b,\n      0\n    );\n    form.avgDangerousAttacksAway =\n      dangerousAttacksSumAway / dangerousAttacksAway.length || 0;\n\n    const shots = allTeamResults.map((res) => res.shots);\n    const shotsSum = shots.reduce((a, b) => a + b, 0);\n    const avgShots = shotsSum / shots.length || 0;\n    form.avgShots = avgShots;\n\n    const shotsHome = homeResults.map((res) => res.shots);\n    const shotsSumHome = shotsHome.reduce((a, b) => a + b, 0);\n    form.avgShotsHome = shotsSumHome / shotsHome.length || 0;\n\n    const shotsAway = awayResults.map((res) => res.shots);\n    const shotsSumAway = shotsAway.reduce((a, b) => a + b, 0);\n    form.avgShotsAway = shotsSumAway / shotsAway.length || 0;\n\n    const shotsOnTarget = allTeamResults.map((res) => res.sot);\n    const shotsOnTargetSum = shotsOnTarget.reduce((a, b) => a + b, 0);\n    const avgShotsOnTarget = shotsOnTargetSum / shotsOnTarget.length || 0;\n\n    const shotsOnTargetHome = homeResults.map((res) => res.sot);\n    const shotsOnTargetSumHome = shotsOnTargetHome.reduce((a, b) => a + b, 0);\n    form.avgShotsOnTargetHome =\n      shotsOnTargetSumHome / shotsOnTargetHome.length || 0;\n\n    const shotsOnTargetAway = awayResults.map((res) => res.sot);\n    const shotsOnTargetSumAway = shotsOnTargetAway.reduce((a, b) => a + b, 0);\n    form.avgShotsOnTargetAway =\n      shotsOnTargetSumAway / shotsOnTargetAway.length || 0;\n\n    const shotsOnTargetAgainst = allTeamResults.map((res) => res.sotAgainst);\n    const shotsOnTargetSumAgainst = shotsOnTargetAgainst.reduce(\n      (a, b) => a + b,\n      0\n    );\n    const avgShotsOnTargetAgainst =\n      shotsOnTargetSumAgainst / shotsOnTargetAgainst.length || 0;\n\n    const shotsOnTargetAgainstHome = homeResults.map((res) => res.sotAgainst);\n    const shotsOnTargetSumAgainstHome = shotsOnTargetAgainstHome.reduce(\n      (a, b) => a + b,\n      0\n    );\n    form.avgShotsOnTargetAgainstHome =\n      shotsOnTargetSumAgainstHome / shotsOnTargetAgainstHome.length || 0;\n\n    const shotsOnTargetAgainstAway = awayResults.map((res) => res.sotAgainst);\n    const shotsOnTargetSumAgainstAway = shotsOnTargetAgainstAway.reduce(\n      (a, b) => a + b,\n      0\n    );\n    form.avgShotsOnTargetAgainstAway =\n      shotsOnTargetSumAgainstAway / shotsOnTargetAgainstAway.length || 0;\n\n    const corners = allTeamResults.map((res) => res.corners);\n    const cornersSum = corners.reduce((a, b) => a + b, 0);\n    const cornersAv = cornersSum / corners.length || 0;\n\n    const cornersHome = homeResults.map((res) => res.corners);\n    const cornersSumHome = cornersHome.reduce((a, b) => a + b, 0);\n    form.cornersAvHome = cornersSumHome / cornersHome.length || 0;\n\n    const cornersAway = awayResults.map((res) => res.corners);\n    const cornersSumAway = cornersAway.reduce((a, b) => a + b, 0);\n    form.cornersAvAway = cornersSumAway / cornersAway.length || 0;\n\n    const last5XG = teamXGForAllRecentAtStart.slice(0, 5);\n    const last5XGSum = last5XG.reduce((a, b) => a + b, 0);\n    const last5XGAvgFor = last5XGSum / last5XG.length || 0;\n\n    const last5XGHome = teamXGForHome.slice(0, 5);\n    const last5XGSumHome = last5XGHome.reduce((a, b) => a + b, 0);\n    form.last5XGAvgForHome = last5XGSumHome / last5XGHome.length || 0;\n\n    const last5XGAway = teamXGForAway.slice(0, 5);\n    const last5XGSumAway = last5XGAway.reduce((a, b) => a + b, 0);\n    form.last5XGAvgForAway = last5XGSumAway / last5XGAway.length || 0;\n\n    const XGSumHome = teamXGForHome.reduce((a, b) => a + b, 0);\n    form.avgXGScoredHome = XGSumHome / teamXGForHome.length || 0;\n\n    const XGSumAway = teamXGForAway.reduce((a, b) => a + b, 0);\n    form.avgXGScoredAway = XGSumAway / teamXGForAway.length || 0;\n\n    const XGAgainstSumHome = teamXGAgainstHome.reduce((a, b) => a + b, 0);\n    form.avgXGConceededHome = XGAgainstSumHome / teamXGAgainstHome.length || 0;\n\n    const XGAgainstSumAway = teamXGAgainstAway.reduce((a, b) => a + b, 0);\n    form.avgXGConceededAway = XGAgainstSumAway / teamXGAgainstAway.length || 0;\n\n    const last5XGAgainst = teamXGAgainstAllRecentAtStart.slice(0, 5);\n    const last5XGAgainstSum = last5XGAgainst.reduce((a, b) => a + b, 0);\n    const last5XGAvgAgainst = last5XGAgainstSum / last5XGAgainst.length || 0;\n\n    const last5XGAgainstHome = teamXGForHome.slice(0, 5);\n    const last5XGAgainstSumHome = last5XGAgainstHome.reduce((a, b) => a + b, 0);\n    form.last5XGAvgAgainstHome =\n      last5XGAgainstSumHome / last5XGAgainstHome.length || 0;\n\n    const last5XGAgainstAway = teamXGForAway.slice(0, 5);\n    const last5XGAgainstSumAway = last5XGAgainstAway.reduce((a, b) => a + b, 0);\n    form.last5XGAvgAgainstAway =\n      last5XGAgainstSumAway / last5XGAgainstAway.length || 0;\n\n    form.XGDiffNonAverage = XGSum - XGAgainstSum;\n    form.XGDiffNonAverageLast5 = last5XGSum - last5XGAgainstSum;\n\n    form.XGOverall = parseFloat(avgXGScored.toFixed(2));\n    form.XGlast5 = parseFloat(last5XGAvgFor.toFixed(2));\n\n    form.avgShotValue = (form.XGOverall / form.avgShots) * 100;\n\n    form.XGAgainstAvgOverall = parseFloat(avgXGConceeded.toFixed(2));\n    form.XGAgainstlast5 = parseFloat(last5XGAvgAgainst.toFixed(2));\n\n    form.AveragePossessionOverall = parseFloat(avgPossession.toFixed(1));\n    form.AverageDangerousAttacksOverall = parseFloat(\n      avgDangerousAttacks.toFixed(1)\n    );\n    form[\"Average Shots\"] = parseFloat(avgShots.toFixed(1));\n    form.AverageCorners = parseFloat(cornersAv.toFixed(1));\n    form.AverageShotsOnTargetOverall = parseFloat(avgShotsOnTarget.toFixed(1));\n    form.AverageShotsOnTargetAgainstOverall = parseFloat(\n      avgShotsOnTargetAgainst.toFixed(1)\n    );\n    const alpha = 0.65;\n    const beta = 0.65;\n\n    let forAndAgainstRollingAv;\n    let forAndAgainstRollingAvHomeOrAway;\n\n    if (hOrA === \"home\") {\n      form.allGoalsArrayHomeRecent = teamGoalsAllRecentAtStart\n        .slice(0, 20)\n        .reverse();\n      form.allConceededArrayHomeRecent = teamConceededAllRecentAtStart\n        .slice(0, 20)\n        .reverse();\n      form.allGoalsArrayHome = teamGoalsAllRecentAtStart;\n      form.allConceededArrayHome = teamConceededAllRecentAtStart;\n      form.allGoalsArrayHomeOnly = teamGoalsHome;\n      form.allConceededArrayHomeOnly = teamConceededHome;\n      const sum = teamGoalsHome.reduce((a, b) => a + b, 0);\n      const sumTwo = teamConceededHome.reduce((a, b) => a + b, 0);\n      form.goalDifferenceHomeOrAway = sum - sumTwo;\n\n      forAndAgainstRollingAv = await predictGoalsWithExponentialSmoothing(\n        form.allGoalsArrayHome,\n        form.allConceededArrayHome,\n        alpha\n      );\n\n      forAndAgainstRollingAvHomeOrAway =\n        await predictGoalsWithExponentialSmoothing(\n          form.allGoalsArrayHomeOnly.reverse(),\n          form.allConceededArrayHomeOnly.reverse(),\n          beta\n        );\n    } else if (hOrA === \"away\") {\n      form.allGoalsArrayAwayRecent = teamGoalsAllRecentAtStart.slice(0, 20);\n      form.allConceededArrayAwayRecent = teamConceededAllRecentAtStart.slice(\n        0,\n        20\n      );\n      form.allGoalsArrayAway = teamGoalsAllRecentAtStart;\n      form.allConceededArrayAway = teamConceededAllRecentAtStart;\n      form.allGoalsArrayAwayOnly = teamGoalsAway;\n      form.allConceededArrayAwayOnly = teamConceededAway;\n      const sum = teamGoalsAway.reduce((a, b) => a + b, 0);\n      const sumTwo = teamConceededAway.reduce((a, b) => a + b, 0);\n      form.goalDifferenceHomeOrAway = sum - sumTwo;\n      forAndAgainstRollingAv = await predictGoalsWithExponentialSmoothing(\n        form.allGoalsArrayAway,\n        form.allConceededArrayAway,\n        alpha\n      );\n\n      forAndAgainstRollingAvHomeOrAway =\n        await predictGoalsWithExponentialSmoothing(\n          form.allGoalsArrayAwayOnly.reverse(),\n          form.allConceededArrayAwayOnly.reverse(),\n          beta\n        );\n    }\n\n    let bttsHome = homeResults.map((res) => res.btts);\n    if (bttsHome.length > 10) {\n      bttsHome = bttsHome.slice(-10);\n    }\n\n    let bttsAway = awayResults.map((res) => res.btts);\n    if (bttsAway.length > 10) {\n      bttsAway = bttsAway.slice(-10);\n    }\n\n    let bttsAll = allTeamResults.map((res) => res.btts);\n    if (bttsAll.length > 10) {\n      bttsAll = bttsAll.slice(-10);\n    }\n\n    const bttsHomeCount = bttsHome.filter((btts) => btts === true);\n    const bttsHomeString = `${bttsHomeCount.length}/${bttsHome.length}`;\n    const bttsHomePercentage = (\n      (bttsHomeCount.length / bttsHome.length) *\n      100\n    ).toFixed(0);\n\n    const bttsAwayCount = bttsAway.filter((btts) => btts === true);\n    const bttsAwayString = `${bttsAwayCount.length}/${bttsAway.length}`;\n    const bttsAwayPercentage = (\n      (bttsAwayCount.length / bttsAway.length) *\n      100\n    ).toFixed(0);\n    const bttsAllCount = bttsAll.filter((btts) => btts === true);\n    const bttsAllString = `${bttsAllCount.length}/${bttsAll.length}`;\n    const bttsAllPercentage = (\n      (bttsAllCount.length / bttsAll.length) *\n      100\n    ).toFixed(0);\n    form.bttsAllPercentage = bttsAllPercentage;\n    form.bttsHomePercentage = bttsHomePercentage;\n    form.bttsAwayPercentage = bttsAwayPercentage;\n\n    let r = 10;\n    let x = 10;\n\n    const teamGoalsHomeRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsHome,\n      teamGoalsHome.length < x ? teamGoalsHome.length : x\n    );\n\n    const teamGoalsAwayRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsAway,\n      teamGoalsAway.length < x ? teamGoalsAway.length : x\n    );\n\n    const RoundedXGFor = teamXGForAll.map((xg) => xg);\n    const RoundedXGAgainst = teamXGAgainstAll.map((xg) => xg);\n    const RoundedXGForHome = teamXGForHome.map((xg) => xg);\n    const RoundedXGAgainstHome = teamXGAgainstHome.map((xg) => xg);\n    const RoundedXGForAway = teamXGForAway.map((xg) => xg);\n    const RoundedXGAgainstAway = teamXGAgainstAway.map((xg) => xg);\n\n\n    form.XGPrediction = await predictGoalsWithExponentialSmoothing(\n      RoundedXGFor,\n      RoundedXGAgainst,\n      alpha\n    );\n\n    form.XGPredictionHome = await predictGoalsWithExponentialSmoothing(\n      RoundedXGForHome,\n      RoundedXGAgainstHome,\n      beta\n    );\n\n    form.XGPredictionAway = await predictGoalsWithExponentialSmoothing(\n      RoundedXGForAway,\n      RoundedXGAgainstAway,\n      beta\n    );\n\n    const teamConceededHomeRollingAverage =\n      await predictNextWeightedMovingAverage(\n        teamConceededHome,\n        teamConceededHome.length < x ? teamConceededHome.length : x\n      );\n\n    const teamConceededAwayRollingAverage =\n      await predictNextWeightedMovingAverage(\n        teamConceededAway,\n        teamConceededAway.length < x ? teamConceededAway.length : x\n      );\n\n    const sum = teamGoalsAll.reduce((a, b) => a + b, 0);\n    const avgScored = sum / teamGoalsAll.length || 0;\n    form.avgScored = parseFloat(avgScored.toFixed(2));\n\n    const sumHome = teamGoalsHome.reduce((a, b) => a + b, 0);\n    const avgScoredHome = sumHome / teamGoalsHome.length || 0;\n    form.avgScoredHome = parseFloat(avgScoredHome.toFixed(2));\n\n    const sumAway = teamGoalsAway.reduce((a, b) => a + b, 0);\n    const avgScoredAway = sumAway / teamGoalsAway.length || 0;\n    form.avgScoredAway = parseFloat(avgScoredAway.toFixed(2));\n\n    const last5 = teamGoalsAllRecentAtStart.slice(0, 5);\n    const last5Sum = last5.reduce((a, b) => a + b, 0);\n    const last5AvgScored = parseFloat(last5Sum / last5.length || 0);\n\n    const last5Home = teamGoalsHome.slice(0, 5);\n    const last5SumHome = last5Home.reduce((a, b) => a + b, 0);\n    form.last5AvgScoredHome = parseFloat(last5SumHome / last5Home.length || 0);\n\n    const last5Away = teamGoalsAway.slice(0, 5);\n    const last5SumAway = last5Away.reduce((a, b) => a + b, 0);\n    form.last5AvgScoredAway = parseFloat(last5SumAway / last5Away.length || 0);\n\n    const last5Conceeded = teamConceededAllRecentAtStart.slice(0, 5);\n    const last5ConceededSum = last5Conceeded.reduce((a, b) => a + b, 0);\n    const last5AvgConceeded = parseFloat(\n      last5ConceededSum / last5Conceeded.length || 0\n    );\n\n    const last5ConceededHome = teamConceededHome.slice(0, 5);\n    const last5ConceededSumHome = last5ConceededHome.reduce((a, b) => a + b, 0);\n    form.last5AvgConceededHome = parseFloat(\n      last5ConceededSumHome / last5ConceededHome.length || 0\n    );\n\n    const last5ConceededAway = teamConceededAway.slice(0, 5);\n    const last5ConceededSumAway = last5ConceededAway.reduce((a, b) => a + b, 0);\n    form.last5AvgConceededAway = parseFloat(\n      last5ConceededSumAway / last5ConceededAway.length || 0\n    );\n\n    const last10 = teamGoalsAllRecentAtStart.slice(0, 10);\n    const last10Sum = last10.reduce((a, b) => a + b, 0);\n    const last10AvgScored = parseFloat(last10Sum / last10.length || 0);\n\n    const last10Conceeded = teamConceededAllRecentAtStart.slice(0, 10);\n    const last10ConceededSum = last10Conceeded.reduce((a, b) => a + b, 0);\n    const last10AvgConceeded = parseFloat(\n      last10ConceededSum / last10Conceeded.length || 0\n    );\n\n    form.last5Goals = parseFloat(last5AvgScored.toFixed(2));\n    form.last5GoalsConceeded = parseFloat(last5AvgConceeded.toFixed(2));\n    form.last5GoalDiff = form.last5Goals - form.last5GoalsConceeded;\n    form.last10Goals = parseFloat(last10AvgScored.toFixed(2));\n    form.last10GoalsConceeded = parseFloat(last10AvgConceeded.toFixed(2));\n    form.last10GoalDiff = form.last10Goals - form.last10GoalsConceeded;\n\n    const teamGoalsAllRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsAll,\n      teamGoalsAll.length < r ? teamGoalsAll.length : r\n    );\n\n    const teamGoalsConceededAllRollingAverage =\n      await predictNextWeightedMovingAverage(\n        last10Conceeded,\n        last10Conceeded.length < 10 ? last10Conceeded.length : 10\n      );\n\n    const sumTwo = teamConceededAll.reduce((a, b) => a + b, 0);\n    const avgConceeded = sumTwo / teamConceededAll.length || 0;\n    form.avgConceeded = parseFloat(avgConceeded.toFixed(2));\n\n    const teamConceededHomeOnlySum = teamConceededHome.reduce(\n      (a, b) => a + b,\n      0\n    );\n    const teamConceededAvgHomeOnly =\n      teamConceededHomeOnlySum / teamConceededHome.length || 0;\n    form.teamConceededAvgHomeOnly = teamConceededAvgHomeOnly;\n\n    const teamConceededAwayOnlySum = teamConceededAway.reduce(\n      (a, b) => a + b,\n      0\n    );\n    const teamConceededAvgAwayOnly =\n      teamConceededAwayOnlySum / teamConceededAway.length || 0;\n    form.teamConceededAvgAwayOnly = teamConceededAvgAwayOnly;\n\n    form.goalDifference = sum - sumTwo;\n\n    // console.log(teamGoalsHomeRollingAverage)\n    // console.log(teamGoalsAwayRollingAverage)\n    // console.log(teamGoalsAllRollingAverage)\n    // console.log(teamConceededHomeRollingAverage)\n    // console.log(teamConceededAwayRollingAverage)\n    // console.log(teamGoalsConceededAllRollingAverage)\n    // console.log(averageOddsHome)\n    // console.log(averageOddsAway)\n    // console.log(avgScored)\n    // console.log(avgConceeded)\n    // console.log(form.XGPrediction)\n    // console.log(forAndAgainstRollingAvHomeOrAway)\n    // console.log(forAndAgainstRollingAv)\n\n    return [\n      teamGoalsHomeRollingAverage,\n      teamGoalsAwayRollingAverage,\n      teamGoalsAllRollingAverage,\n      teamConceededHomeRollingAverage,\n      teamConceededAwayRollingAverage,\n      teamGoalsConceededAllRollingAverage,\n      averageOddsHome,\n      averageOddsAway,\n      avgScored,\n      avgConceeded,\n      bttsAllString,\n      bttsHomeString,\n      bttsAwayString,\n      bttsAllPercentage,\n      bttsHomePercentage,\n      bttsAwayPercentage,\n      forAndAgainstRollingAvHomeOrAway,\n      forAndAgainstRollingAv,\n    ];\n  } else {\n    return null;\n  }\n}\n\nasync function predictNextWeightedMovingAverage(numbers, windowSize) {\n  const startIndex = numbers.length - windowSize;\n  const window = numbers.slice(startIndex);\n  const weights = Array.from(\n    { length: windowSize },\n    (_, i) => (i + 1) / ((windowSize * (windowSize + 1)) / 2)\n  );\n  const sum = window.reduce((acc, num, i) => acc + num * weights[i], 0);\n  const movingAverage = sum / weights.reduce((acc, w) => acc + w, 0);\n  return parseFloat(movingAverage.toFixed(2));\n}\n\n// Function to calculate the weighted average using exponential smoothing\nasync function calculateWeightedAverage(arr, alpha) {\n  let weightedSum = 0;\n  let totalWeight = 0;\n\n  for (let i = arr.length - 1; i >= 0; i--) {\n    const weight = Math.pow(1 - alpha, arr.length - 1 - i);\n    weightedSum += arr[i] * weight;\n    totalWeight += weight;\n  }\n\n  return weightedSum / totalWeight;\n}\n\n// Function to predict goals scored and conceded for a team with exponential smoothing\nasync function predictGoalsWithExponentialSmoothing(\n  teamGoalsFor,\n  teamGoalsAgainst,\n  alpha\n) {\n  const lambdaFor = await calculateWeightedAverage(teamGoalsFor, alpha);\n  const lambdaAgainst = await calculateWeightedAverage(teamGoalsAgainst, alpha);\n\n  // You can fine-tune these values based on your model and data\n  const predictedGoalsFor = lambdaFor;\n  const predictedGoalsAgainst = lambdaAgainst;\n\n  return {\n    goalsFor: predictedGoalsFor,\n    goalsAgainst: predictedGoalsAgainst,\n  };\n}\n\nasync function calculateDifference(num1, num2) {\n  return num1 >= num2 ? num1 - num2 : -(num2 - num1);\n}\n\nexport async function comparison(metricOne, metricTwo) {\n  let stat1 = parseFloat(metricOne);\n  let stat2 = parseFloat(metricTwo);\n  let statDiff;\n\n  statDiff = await calculateDifference(stat1, stat2);\n\n  return parseFloat(statDiff);\n}\n\nexport async function compareStat(statOne, statTwo) {\n  let stat1 = parseFloat(statOne);\n  let stat2 = parseFloat(statTwo);\n  let statDiff;\n  // console.log( await normalizeValues(12, 2, 0, 1))\n  // console.log(await diff(1.8571428571428571, 1.14285714285714285))\n\n  if (stat1 === 0) {\n    stat1 = stat1 + 1;\n    stat2 = stat2 + 1;\n  }\n  if (stat2 === 0) {\n    stat2 = stat2 + 1;\n    stat2 = stat2 + 1;\n  }\n\n  const { normalizedValue1, normalizedValue2 } = await normalizeValues(\n    stat1,\n    stat2,\n    0,\n    1\n  );\n\n  const finalValue1 = normalizedValue1;\n  const finalValue2 = normalizedValue2;\n\n  statDiff = await diff(finalValue1, finalValue2);\n\n  // if (statDiff > 0.3 || statDiff < -0.3) {\n  //   // console.log(statDiff)\n  // } else {\n  //   statDiff = 0;\n  // }\n  return statDiff;\n}\n\nexport async function getClinicalRating(form) {\n  let rating;\n  let score;\n  switch (true) {\n    case form.dangerousAttackConversion <= 15:\n      rating = \"excellent\";\n      score = 0.8;\n      break;\n\n    case form.dangerousAttackConversion > 15 &&\n      form.dangerousAttackConversion <= 20:\n      rating = \"great\";\n      score = 0.9;\n      break;\n\n    case form.dangerousAttackConversion > 20 &&\n      form.dangerousAttackConversion <= 25:\n      rating = \"very good\";\n      score = 0.95;\n      break;\n\n    case form.dangerousAttackConversion > 25 &&\n      form.dangerousAttackConversion <= 32.5:\n      rating = \"good\";\n      score = 0.98;\n      break;\n\n    case form.dangerousAttackConversion > 30 &&\n      form.dangerousAttackConversion <= 35:\n      rating = \"above average\";\n      score = 0.99;\n      break;\n\n    case form.dangerousAttackConversion > 35 &&\n      form.dangerousAttackConversion <= 40:\n      rating = \"average\";\n      score = 1;\n      break;\n\n    case form.dangerousAttackConversion > 40 &&\n      form.dangerousAttackConversion <= 45:\n      rating = \"below average\";\n      score = 1.01;\n      break;\n\n    case form.dangerousAttackConversion > 45 &&\n      form.dangerousAttackConversion <= 50:\n      rating = \"poor\";\n      score = 1.05;\n      break;\n\n    case form.dangerousAttackConversion > 50 &&\n      form.dangerousAttackConversion <= 55:\n      rating = \"very poor\";\n      score = 1.1;\n      break;\n\n    case form.dangerousAttackConversion > 55 &&\n      form.dangerousAttackConversion <= 60:\n      rating = \"terrible\";\n      score = 1.2;\n      break;\n\n    case form.dangerousAttackConversion > 60:\n      rating = \"awful\";\n      score = 1.3;\n      break;\n\n    default:\n      break;\n  }\n\n  return [rating, score];\n}\n\nexport async function getPointsDifferential(pointsHomeAvg, pointsAwayAvg) {\n  const differential = await diff(pointsHomeAvg, pointsAwayAvg);\n  return parseFloat(differential);\n}\n\nexport async function getPointWeighting(pointsDiff) {\n  let pointsDiffWeightingHome;\n  let pointsDiffWeightingAway;\n\n  switch (true) {\n    case pointsDiff >= 2.5:\n      pointsDiffWeightingHome = 0.3;\n      pointsDiffWeightingAway = -0.3;\n      break;\n    case pointsDiff >= 2 && pointsDiff < 2.5:\n      pointsDiffWeightingHome = 0.2;\n      pointsDiffWeightingAway = -0.2;\n      break;\n    case pointsDiff >= 1.5 && pointsDiff < 2:\n      pointsDiffWeightingHome = 0.15;\n      pointsDiffWeightingAway = -0.15;\n      break;\n    case pointsDiff >= 1 && pointsDiff < 1.5:\n      pointsDiffWeightingHome = 0.1;\n      pointsDiffWeightingAway = -0.1;\n      break;\n    case pointsDiff >= 0.5 && pointsDiff < 1:\n      pointsDiffWeightingHome = 0.05;\n      pointsDiffWeightingAway = -0.05;\n      break;\n    case pointsDiff > -0.5 && pointsDiff < 0.5:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n      break;\n    case pointsDiff <= -0.5 && pointsDiff > -1:\n      pointsDiffWeightingHome = -0.05;\n      pointsDiffWeightingAway = 0.05;\n      break;\n    case pointsDiff <= -1 && pointsDiff > -1.5:\n      pointsDiffWeightingHome = -0.1;\n      pointsDiffWeightingAway = 0.1;\n      break;\n    case pointsDiff <= -1.5 && pointsDiff > -2:\n      pointsDiffWeightingHome = -0.15;\n      pointsDiffWeightingAway = 0.15;\n      break;\n    case pointsDiff <= -2 && pointsDiff > -2.5:\n      pointsDiffWeightingHome = -0.2;\n      pointsDiffWeightingAway = 0.2;\n      break;\n    case pointsDiff <= -2.5:\n      pointsDiffWeightingHome = -0.3;\n      pointsDiffWeightingAway = 0.3;\n      break;\n    default:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n  }\n  return [pointsDiffWeightingHome, pointsDiffWeightingAway];\n}\n\nexport async function compareFormTrend(recentForm, distantForm) {\n  let score;\n  let scoreTotal = 0;\n\n  for (let index = 0; index < recentForm.length; index++) {\n    const recent = recentForm[index];\n    const distant = distantForm[index];\n\n    if (recent > distant) {\n      score = 1.05;\n    } else if (recent === distant) {\n      score = 1;\n    } else if (recent < distant) {\n      score = 0.95;\n    }\n    scoreTotal = scoreTotal + score / recentForm.length;\n  }\n\n  return scoreTotal;\n}\n\nexport async function getPointAverage(pointTotal, games) {\n  return pointTotal / games;\n}\n\nasync function poissonDistribution(lambda, k) {\n  const numerator = Math.exp(-lambda) * Math.pow(lambda, k);\n  const denominator = factorial(k);\n  return numerator / denominator;\n}\n\nfunction factorial(n) {\n  if (n === 0 || n === 1) {\n    return 1;\n  }\n  let result = 1;\n  for (let i = 2; i <= n; i++) {\n    result *= i;\n  }\n  return result;\n}\n\nasync function calculateAverageGoals(goalsFor) {\n  const totalGoals = goalsFor.reduce((sum, goals) => sum + goals, 0);\n  return totalGoals / goalsFor.length;\n}\n\nasync function adjustGoalsAvg(goalsAvg, strengthRatio) {\n  return goalsAvg * strengthRatio;\n}\n\nasync function normalizeDifference(value1, value2) {\n  // Calculate the absolute difference between the two values\n  const difference = Math.abs(value1 - value2);\n\n  // Define a fixed maximum possible difference (you can adjust this value based on your needs)\n  const maxDifference = 25; // Adjust this based on your expected data\n\n  // Normalize the difference to a 0-1 range\n  const normalizedDifference = difference / maxDifference;\n\n  // Map to range 0.25 to 1.75 inversely for value1 and value2\n  const scaleMin = 0.8;\n  const scaleMax = 1.2;\n\n  // The multiplier now stretches across the 0.25 to 1.75 range (difference is 1.5)\n  const multiplier = 0.2;\n\n  let value1Normalized, value2Normalized;\n\n  if (value1 > value2) {\n    value1Normalized = 1 + normalizedDifference * multiplier; // Closer to 1.75\n    value2Normalized = 1 - normalizedDifference * multiplier; // Closer to 0.25\n  } else if (value1 < value2) {\n    value1Normalized = 1 - normalizedDifference * multiplier; // Closer to 0.25\n    value2Normalized = 1 + normalizedDifference * multiplier; // Closer to 1.75\n  } else {\n    // If the values are equal, normalize both to 1\n    value1Normalized = 1;\n    value2Normalized = 1;\n  }\n\n  return {\n    value1Normalized: Math.max(scaleMin, Math.min(value1Normalized, scaleMax)),\n    value2Normalized: Math.max(scaleMin, Math.min(value2Normalized, scaleMax)),\n  };\n}\n\nasync function predictScore(\n  goalsForTeam1,\n  goalsAgainstTeam1,\n  goalsForTeam2,\n  goalsAgainstTeam2,\n  team1Metrics,\n  team2Metrics,\n  game\n) {\n  let team1AverageGoalsFor = await calculateAverageGoals(goalsForTeam1);\n  let team1AverageGoalsAgainst = await calculateAverageGoals(goalsAgainstTeam1);\n  let team2AverageGoalsFor = await calculateAverageGoals(goalsForTeam2);\n  let team2AverageGoalsAgainst = await calculateAverageGoals(goalsAgainstTeam2);\n\n  let team1StrengthRatio = 1;\n  let team2StrengthRatio = 1;\n\n  let adjustedTeam1AverageGoals = await adjustGoalsAvg(\n    team1AverageGoalsFor,\n    team1StrengthRatio\n  );\n  let adjustedTeam2AverageGoals = await adjustGoalsAvg(\n    team2AverageGoalsFor,\n    team2StrengthRatio\n  );\n\n  let adjustedTeam1AverageGoalsAgainst = await adjustGoalsAvg(\n    team1AverageGoalsAgainst,\n    team2StrengthRatio\n  );\n  let adjustedTeam2AverageGoalsAgainst = await adjustGoalsAvg(\n    team2AverageGoalsAgainst,\n    team1StrengthRatio\n  );\n\n  let maxGoals = 5; // Set the maximum number of goals to predict\n\n  const scores = [];\n\n  for (let i = 0; i <= maxGoals; i++) {\n    for (let j = 0; j <= maxGoals; j++) {\n      let team1GoalExpectation =\n        (adjustedTeam1AverageGoals + adjustedTeam2AverageGoalsAgainst) / 2;\n      // (adjustedTeam2AverageGoalsAgainst / adjustedTeam1AverageGoalsAgainst);\n      let team2GoalExpectation =\n        (adjustedTeam2AverageGoals + adjustedTeam1AverageGoalsAgainst) / 2;\n      // (adjustedTeam1AverageGoalsAgainst / adjustedTeam2AverageGoalsAgainst);\n\n      if (!isFinite(team1GoalExpectation)) {\n        team1GoalExpectation = 0;\n      }\n\n      if (!isFinite(team2GoalExpectation)) {\n        team2GoalExpectation = 0;\n      }\n\n      const probability =\n        (await poissonDistribution(team1GoalExpectation, i)) *\n        (await poissonDistribution(team2GoalExpectation, j));\n      scores.push({\n        team1Score: i,\n        team2Score: j,\n        probability,\n      });\n    }\n  }\n\n  scores.sort((a, b) => b.probability - a.probability); // Sort scores in descending order by probability\n  const top5Scores = scores.slice(0, 5); // Get the top 5 scores\n\n  // for (const score of top5Scores) {\n  //   console.log(\n  //     `Team 1: ${score.team1Score} - Team 2: ${score.team2Score} (${(\n  //       score.probability * 100\n  //     ).toFixed(2)}%)`\n  //   );\n  // }\n  return top5Scores;\n}\n\nasync function normalizeValues(value1, value2, minRange, maxRange) {\n  if (\n    typeof value1 !== \"number\" ||\n    typeof value2 !== \"number\" ||\n    typeof minRange !== \"number\" ||\n    typeof maxRange !== \"number\"\n  ) {\n    throw new Error(\"All arguments must be numbers.\");\n  }\n\n  // Calculate the absolute values of the inputs\n\n  const absValue1 = Math.abs(value1);\n  const absValue2 = Math.abs(value2);\n\n  // Calculate the total sum of the absolute values\n  const totalAbs = absValue1 + absValue2;\n\n  // Calculate the normalized values based on the ratio of absolute values\n  const normalizedAbsValue1 =\n    (absValue1 / totalAbs) * (maxRange - minRange) + minRange;\n  const normalizedAbsValue2 =\n    (absValue2 / totalAbs) * (maxRange - minRange) + minRange;\n\n  // Adjust the signs of the normalized values based on the original values\n  const normalizedValue1 =\n    value1 >= 0 ? normalizedAbsValue1 : -normalizedAbsValue1;\n  const normalizedValue2 =\n    value2 >= 0 ? normalizedAbsValue2 : -normalizedAbsValue2;\n\n  return { normalizedValue1, normalizedValue2 };\n}\n\nexport async function generateGoals(homeForm, awayForm, match) {\n  let homeGoals = 0;\n  let awayGoals = 0;\n\n  const homeAttackVsAwayDefenceComparison = await comparison(\n    homeForm.attackingStrength,\n    awayForm.defensiveStrengthScoreGeneration\n  );\n  const awayAttackVsHomeDefenceComparison = await comparison(\n    awayForm.attackingStrength,\n    homeForm.defensiveStrengthScoreGeneration\n  );\n\n  const homeOverallVsAwayOverallComparison = await comparison(\n    homeForm.attackingStrength + homeForm.defensiveStrength,\n    awayForm.attackingStrength + awayForm.defensiveStrength\n  );\n\n  const awayOverallVsHomeOverallComparison = await comparison(\n    awayForm.attackingStrength + awayForm.defensiveStrength,\n    homeForm.attackingStrength + homeForm.defensiveStrength\n  );\n\n  const homeAttackVsAwayDefenceComparisonLast5 = await comparison(\n    homeForm.attackingStrengthLast5,\n    awayForm.defensiveStrengthScoreGenerationLast5\n  );\n  const awayAttackVsHomeDefenceComparisonLast5 = await comparison(\n    awayForm.attackingStrengthLast5,\n    homeForm.defensiveStrengthScoreGenerationLast5\n  );\n\n  const homeAttackVsAwayDefenceComparisonHomeOnly = await comparison(\n    homeForm.attackingStrengthHomeOnly,\n    awayForm.defensiveStrengthScoreGenerationAwayOnly\n  );\n  const awayAttackVsHomeDefenceComparisonAwayOnly = await comparison(\n    awayForm.attackingStrengthAwayOnly,\n    homeForm.defensiveStrengthScoreGenerationHomeOnly\n  );\n\n  const pointsComparisonHome = await comparison(\n    homeForm.avPoints6,\n    awayForm.avPoints6\n  );\n\n  const pointsComparisonAway = await comparison(\n    awayForm.avPoints6,\n    homeForm.avPoints6\n  );\n\n  const oddsComparisonHome = await comparison(match.awayOdds, match.homeOdds);\n  const oddsComparisonAway = await comparison(match.homeOdds, match.awayOdds);\n\n  homeForm.XGRating =\n    homeForm.attackingStrength +\n    homeForm.defensiveStrengthScoreGeneration +\n    homeForm.attackingStrengthLast5 +\n    homeForm.defensiveStrengthScoreGenerationLast5 +\n    homeForm.attackingStrengthHomeOnly +\n    homeForm.defensiveStrengthScoreGenerationHomeOnly;\n\n  awayForm.XGRating =\n    awayForm.attackingStrength +\n    awayForm.defensiveStrengthScoreGeneration +\n    awayForm.attackingStrengthLast5 +\n    awayForm.defensiveStrengthScoreGenerationLast5 +\n    awayForm.attackingStrengthAwayOnly +\n    awayForm.defensiveStrengthScoreGenerationAwayOnly;\n\n  const XGRatingHomeComparison = await comparison(\n    homeForm.XGRating,\n    awayForm.XGRating\n  );\n\n  const XGRatingAwayComparison = await comparison(\n    awayForm.XGRating,\n    homeForm.XGRating\n  );\n\n  homeGoals =\n    0 +\n    homeAttackVsAwayDefenceComparison * 2 +\n    // XGRatingHomeComparison * 0.25 +\n    homeAttackVsAwayDefenceComparisonLast5 * 1 +\n    homeAttackVsAwayDefenceComparisonHomeOnly * 1\n   +\n  oddsComparisonHome * 0.125;\n\n  awayGoals =\n    0 +\n    awayAttackVsHomeDefenceComparison * 2 +\n    // XGRatingAwayComparison * 0.25 +\n    awayAttackVsHomeDefenceComparisonLast5 * 1 +\n    awayAttackVsHomeDefenceComparisonAwayOnly * 1\n   +\n  oddsComparisonAway * 0.125;\n\n  // if (homeForm.actualToXGDifference > 0.5) {\n  //   homeGoals = homeGoals + homeForm.actualToXGDifference / 10;\n  // } else if (homeForm.actualToXGDifference < -0.5) {\n  //   homeGoals = homeGoals + homeForm.actualToXGDifference / 10;\n  // }\n\n  // if (awayForm.actualToXGDifference > 0.5) {\n  //   awayGoals = awayGoals + awayForm.actualToXGDifference / 10;\n  // } else if (awayForm.actualToXGDifference < -0.5) {\n  //   awayGoals = awayGoals + awayForm.actualToXGDifference / 10;\n  // }\n\n  if (\n    homeForm.lastGame === \"L\" ||\n    homeForm.last2Points < 2 ||\n    awayForm.last2Points >= 5 ||\n    match.XGdifferentialValueRaw < 0\n  ) {\n    awayGoals = awayGoals + 0.25;\n  } else if (\n    awayForm.lastGame === \"L\" ||\n    awayForm.last2Points < 2 ||\n    homeForm.last2Points >= 5 ||\n    match.XGdifferentialValueRaw > 0\n  ) {\n    homeGoals = homeGoals + 0.25;\n  }\n\n  // if(homeForm.last5Points > homeForm.last10Points){\n  //   homeGoals = homeGoals + 0.1;\n  //   awayGoals = awayGoals - 0.1;\n\n  // } else if (awayForm.last5Points > awayForm.last10Points){\n  //   awayGoals = awayGoals + 0.1;\n  //   homeGoals = homeGoals - 0.1;\n  // }\n\n  // Cumalative ROI for all 2193 match outcomes: + 4.18%\n\n  if (homeGoals < 0 && awayGoals < 0) {\n    if (homeGoals < awayGoals) {\n      homeGoals = homeGoals + awayGoals / 5;\n      awayGoals = awayGoals - homeGoals / 5;\n    } else if (homeGoals > awayGoals) {\n      homeGoals = homeGoals - awayGoals / 5;\n      awayGoals = awayGoals + homeGoals / 5;\n    }\n  } else if (homeGoals < 0){\n    awayGoals = awayGoals + (Math.abs(homeGoals) / 2)\n  } else if (awayGoals < 0){\n    homeGoals = homeGoals + (Math.abs(awayGoals) / 2)\n  }\n\n  return [homeGoals, awayGoals];\n}\n\nexport async function compareTeams(homeForm, awayForm, match) {\n  // let homeAttackStrength = homeForm.attackingStrength;\n  // let homeDefenceStrength = homeForm.defensiveStrength;\n  // let homePossessionStrength = homeForm.possessionStrength;\n  // let awayAttackStrength = awayForm.attackingStrength;\n  // let awayDefenceStrength = awayForm.defensiveStrength;\n  // let awayPossessionStrength = awayForm.possessionStrength;\n  // let homeAttackStrengthLast5 = homeForm.attackingStrengthLast5;\n  // let homeDefenceStrengthLast5 = homeForm.defensiveStrengthLast5;\n  // let homePossessionStrengthLast5 = homeForm.possessionStrengthLast5;\n  // let awayAttackStrengthLast5 = awayForm.attackingStrengthLast5;\n  // let awayDefenceStrengthLast5 = awayForm.defensiveStrengthLast5;\n  // let awayPossessionStrengthLast5 = awayForm.possessionStrengthLast5;\n  // let homeAttackStrengthHome = homeForm.attackingStrengthHomeOnly;\n  // let homeDefenceStrengthHome = homeForm.defensiveStrengthHomeOnly;\n  // let homePossessionStrengthHome = homeForm.possessionStrengthHomeOnly;\n  // let awayAttackStrengthAway = awayForm.attackingStrengthAwayOnly;\n  // let awayDefenceStrengthAway = awayForm.defensiveStrengthAwayOnly;\n  // let awayPossessionStrengthAway = awayForm.possessionStrengthAwayOnly;\n  // const attackStrengthComparison = await compareStat(\n  //   homeAttackStrength,\n  //   awayAttackStrength\n  // );\n  // const attackStrengthHAComparison = await compareStat(\n  //   homeAttackStrengthHome,\n  //   awayAttackStrengthAway\n  // );\n  // const defenceStrengthComparison = await compareStat(\n  //   homeDefenceStrength,\n  //   awayDefenceStrength\n  // );\n  // const defenceStrengthHAComparison = await compareStat(\n  //   homeDefenceStrengthHome,\n  //   awayDefenceStrengthAway\n  // );\n  // const attackStrengthComparisonLast5 = await compareStat(\n  //   homeAttackStrengthLast5,\n  //   awayAttackStrengthLast5\n  // );\n  // const defenceStrengthComparisonLast5 = await compareStat(\n  //   homeDefenceStrengthLast5,\n  //   awayDefenceStrengthLast5\n  // );\n  // const possessiontrengthComparison = await compareStat(\n  //   homePossessionStrength,\n  //   awayPossessionStrength\n  // );\n  // const possessiontrengthComparisonLast5 = await compareStat(\n  //   homePossessionStrengthLast5,\n  //   awayPossessionStrengthLast5\n  // );\n  // const possessionHAStrengthComparison = await compareStat(\n  //   homePossessionStrengthHome,\n  //   awayPossessionStrengthAway\n  // );\n  // // const xgActualComparison = await compareStat(\n  // //   homeForm.actualToXGDifference,\n  // //   awayForm.actualToXGDifference\n  // // );\n  // // const XGComparison = await compareStat(\n  // //   homeForm.XGDiffNonAverage,\n  // //   awayForm.XGDiffNonAverage\n  // // );\n  // // const XGComparisonLast5 = await compareStat(\n  // //   homeForm.XGDiffNonAverageLast5,\n  // //   awayForm.XGDiffNonAverageLast5\n  // // )\n  // const homeAwayPointAverageComparison = await compareStat(\n  //   homeForm.homeOrAwayAverage,\n  //   awayForm.homeOrAwayAverage\n  // );\n  // // const fiveGameComparison = await compareStat(\n  // //   homeForm.last5Points,\n  // //   awayForm.last5Points\n  // // );\n  // // const last5GDComparison = await compareStat(\n  // //   homeForm.last5GoalDiff,\n  // //   awayForm.last5GoalDiff\n  // // )\n  // let oddsComparison = await compareStat(match.awayOdds, match.homeOdds);\n  // // const homeAdvantage = await compareStat(\n  // //   parseFloat(homeForm.homeAttackAdvantage) / 2,\n  // //   1\n  // // );\n  // // const dangerousAttacksWithConverstionComparison = await compareStat(\n  // //   homeForm.AverageDangerousAttacksOverall *\n  // //     homeForm.dangerousAttackConversion,\n  // //   awayForm.AverageDangerousAttacksOverall * awayForm.dangerousAttackConversion\n  // // );\n  // match.goalDiffHomeOrAwayComparison =\n  //   parseFloat(homeForm.goalDifferenceHomeOrAway) -\n  //   parseFloat(awayForm.goalDifferenceHomeOrAway);\n  // match.goalDifferenceComparison =\n  //   parseFloat(homeForm.goalDifference) - parseFloat(awayForm.goalDifference);\n  // const goalDiffHomeOrAwayComparison = await compareStat(\n  //   homeForm.goalDifferenceHomeOrAway,\n  //   awayForm.goalDifferenceHomeOrAway\n  // );\n  // const overallDirectnessComparison = await compareStat(\n  //   homeForm.directnessOverallStrength,\n  //   awayForm.directnessOverallStrength\n  // );\n  // // const hOrADirectnessComparison = await compareStat(\n  // //   homeForm.directnessHomeOnly,\n  // //   awayForm.directnessAwayOnly\n  // // );\n  // const accuracyComparison = await compareStat(\n  //   homeForm.accuracyOverallStrength,\n  //   awayForm.accuracyOverallStrength\n  // );\n  // const accuracyComparisonLast5 = await compareStat(\n  //   homeForm.accuracyOverallStrengthLast5,\n  //   awayForm.accuracyOverallStrengthLast5\n  // );\n  // // console.log(match.game)\n  // // console.log(attackStrengthComparison);\n  // // console.log(defenceStrengthComparison);\n  // // console.log(possessiontrengthComparison);\n  // // console.log(attackStrengthComparisonLast5);\n  // // console.log(defenceStrengthComparisonLast5);\n  // // console.log(attackStrengthHAComparison);\n  // // console.log(defenceStrengthHAComparison);\n  // // console.log(homeAwayPointAverageComparison);\n  // // console.log(goalDiffHomeOrAwayComparison);\n  // // // console.log(oddsComparison);\n  // // console.log(overallDirectnessComparison);\n  // // console.log(accuracyComparisonLast5);\n  // // console.log(accuracyComparison);\n  // // let calculation =\n  // //   attackStrengthComparison * 0 +\n  // //   attackStrengthComparisonLast5 * 0 +\n  // //   attackStrengthHAComparison * 1 +\n  // //   defenceStrengthComparison * 0 +\n  // //   defenceStrengthComparisonLast5 * 0 +\n  // //   defenceStrengthHAComparison * 1 +\n  // //   possessiontrengthComparison * 0 +\n  // //   possessionHAStrengthComparison * 0 +\n  // //   possessiontrengthComparisonLast5 * 1 +\n  // //   // xgToActualDiffComparison * 1 +\n  // //   // xgForStrengthRecentComparison * 1 +\n  // //   // xgAgainstStrengthRecentComparison * 1 +\n  // //   homeAwayPointAverageComparison * 5 +\n  // //   goalDiffHomeOrAwayComparison * 0 +\n  // //   // xgActualComparison * 0 +\n  // //   // xgForComparison * 1 +\n  // //   // xgAgainstComparison * 1 +\n  // //   // XGComparison * 0 +\n  // //   oddsComparison * 2 +\n  // //   // dangerousAttacksWithConverstionComparison * 0.05 +\n  // //   overallDirectnessComparison * 0 +\n  // //   // hOrADirectnessComparison * 0 +\n  // //   accuracyComparisonLast5 * 0 +\n  // //   accuracyComparison * 0;\n  // // // console.log(match.game)\n  // // // console.log(calculation)\n  // let calculation =\n  //   attackStrengthComparisonLast5 * 2 +\n  //   attackStrengthHAComparison * 1 +\n  //   defenceStrengthComparisonLast5 * 2 +\n  //   defenceStrengthHAComparison * 1 +\n  //   possessionHAStrengthComparison * 1 +\n  //   possessiontrengthComparisonLast5 * 1 +\n  //   possessiontrengthComparison * 1 +\n  //   // xgToActualDiffComparison * 1 +\n  //   // xgForStrengthRecentComparison * 1 +\n  //   // xgAgainstStrengthRecentComparison * 1 +\n  //   homeAwayPointAverageComparison * 2 +\n  //   goalDiffHomeOrAwayComparison * 0 +\n  //   // xgActualComparison * 1 +\n  //   // xgForComparison * 1 +\n  //   // xgAgainstComparison * 1 +\n  //   oddsComparison * 0 +\n  //   // dangerousAttacksWithConverstionComparison * 0.05 +\n  //   overallDirectnessComparison * 0 +\n  //   accuracyComparison * 1;\n  // let homeWinOutcomeProbability =\n  //   match.homeTeamWinPercentage + match.awayTeamLossPercentage;\n  // let awayWinOutcomeProbability =\n  //   match.homeTeamLossPercentage + match.awayTeamWinPercentage;\n  // let drawOutcomeProbability =\n  //   match.homeTeamDrawPercentage + match.awayTeamDrawPercentage;\n  // if (\n  //   drawOutcomeProbability > homeWinOutcomeProbability &&\n  //   drawOutcomeProbability > awayWinOutcomeProbability\n  // ) {\n  //   switch (true) {\n  //     case drawOutcomeProbability > 100:\n  //       calculation = calculation / 3;\n  //       break;\n  //     default:\n  //       calculation = calculation * 1;\n  //       break;\n  //   }\n  // } else {\n  //   calculation = calculation * 1;\n  // }\n  // if (calculation > 0) {\n  //   if (\n  //     homeForm.lastGame === \"L\" ||\n  //     homeForm.last2Points < 2 ||\n  //     awayForm.last2Points >= 5 ||\n  //     match.XGdifferentialValueRaw < 0\n  //   ) {\n  //     calculation = calculation / 2;\n  //   }\n  // } else if (calculation < 0) {\n  //   if (\n  //     awayForm.lastGame === \"L\" ||\n  //     awayForm.last2Points < 2 ||\n  //     homeForm.last2Points >= 5 ||\n  //     match.XGdifferentialValueRaw > 0\n  //   ) {\n  //     calculation = calculation / 2;\n  //   }\n  // }\n  // // if (homeForm.averageOddsHome !== null || awayForm.averageOddsAway !== null) {\n  // //   if (\n  // //     calculation > 0 &&\n  // //     homeForm.averageOddsHome < match.homeOdds &&\n  // //     awayForm.averageOddsAway > match.awayOdds\n  // //   ) {\n  // //     calculation = calculation / 2;\n  // //   } else if (\n  // //     calculation > 0 &&\n  // //     homeForm.averageOddsHome > match.homeOdds &&\n  // //     awayForm.averageOddsAway < match.awayOdds\n  // //   ) {\n  // //     calculation = calculation * 1.25;\n  // //   } else {\n  // //     calculation = calculation * 1;\n  // //   }\n  // //   if (\n  // //     calculation < 0 &&\n  // //     awayForm.averageOddsAway < match.awayOdds &&\n  // //     homeForm.averageOddsHome > match.homeOdds\n  // //   ) {\n  // //     calculation = calculation / 2;\n  // //   } else if (\n  // //     calculation < 0 &&\n  // //     awayForm.averageOddsAway > match.awayOdds &&\n  // //     homeForm.averageOddsHome < match.homeOdds\n  // //   ) {\n  // //     calculation = calculation * 1.25;\n  // //   } else {\n  // //     calculation = calculation * 1;\n  // //   }\n  // // }\n  // if (\n  //   calculation > 0 &&\n  //   homeForm.improving === true &&\n  //   awayForm.improving === false\n  // ) {\n  //   console.log(homeForm);\n  //   calculation = calculation * 1.5;\n  // } else if (\n  //   calculation < 0 &&\n  //   awayForm.improving === true &&\n  //   awayForm.improving === false\n  // ) {\n  //   calculation = calculation * 1.5;\n  // } else if (\n  //   calculation > 0 &&\n  //   homeForm.improving === false &&\n  //   awayForm.improving === true\n  // ) {\n  //   calculation = calculation / 2;\n  // } else if (\n  //   calculation < 0 &&\n  //   awayForm.improving === false &&\n  //   homeForm.improving === true\n  // ) {\n  //   calculation = calculation / 2;\n  // }\n  // // if (\n  // //   (calculation < 0 && homeForm.oddsReliabilityWin < 50) ||\n  // //   (calculation < 0 && awayForm.oddsReliabilityWinAsUnderdog > 45)\n  // // ) {\n  // //   calculation = calculation / 2;\n  // // } else if (\n  // //   (calculation > 0 && awayForm.oddsReliabilityWin < 50) ||\n  // //   (calculation > 0 && homeForm.oddsReliabilityWinAsUnderdog > 45)\n  // // ) {\n  // //   calculation = calculation / 2;\n  // // }\n  // // if (calculation < 0 && homeForm.predictabilityScore < 0.3) {\n  // //   calculation = calculation / 2;\n  // // } else if (calculation > 0 && awayForm.predictabilityScore < 0.3) {\n  // //   calculation = calculation / 2;\n  // // }\n  // return calculation;\n}\n\nexport async function roundCustom(num, form, otherForm) {\n  let wholeNumber = Math.floor(num);\n  let remainder = num - wholeNumber;\n  let goals;\n\n  // switch (true) {\n  //   case remainder >= 0.9:\n  //     switch (true) {\n  //       default:\n  //         goals = Math.round(num);\n  //         break;\n  //     }\n  //     break;\n  //   case remainder >= 0.8 && remainder < 0.9:\n  //     switch (true) {\n  //       case form.actualToXGDifference >= 0:\n  //         goals = Math.ceil(num);\n  //         break;\n  //       case form.actualToXGDifference < 0:\n  //         goals = Math.floor(num);\n  //         break;\n  //       default:\n  //         goals = Math.round(num);\n  //         break;\n  //     }\n  //     break;\n  //   case remainder >= 0.6 && remainder < 0.8:\n  //     switch (true) {\n  //       case form.actualToXGDifference >= 10:\n  //         goals = Math.ceil(num);\n  //         break;\n  //       case form.actualToXGDifference < 10:\n  //         goals = Math.floor(num);\n  //         break;\n  //       default:\n  //         goals = Math.round(num);\n  //         break;\n  //     }\n  //     break;\n  //   case remainder >= 0.5 && remainder < 0.6:\n  //     switch (true) {\n  //       case form.actualToXGDifference >= 20:\n  //         goals = Math.ceil(num);\n  //         break;\n  //       case form.actualToXGDifference < 20:\n  //         goals = Math.floor(num);\n  //         break;\n  //       default:\n  //         goals = Math.round(num);\n  //         break;\n  //     }\n  //     break;\n  //   default:\n  //     goals = Math.floor(num);\n  //     break;\n  // }\n\n  if (remainder > 0.75) {\n    goals = Math.ceil(num);\n  } else {\n    goals = Math.floor(num);\n  }\n\n  return goals;\n}\n\n//Calculates scores based on prior XG figures, weighted by odds\nlet i = 0;\n\nexport async function calculateScore(match, index, divider, calculate) {\n  i++;\n\n  let teams;\n\n  if (\n    calculate === true &&\n    allForm.find(\n      (game) =>\n        game.home.teamName === match.homeTeam &&\n        game.away.teamName === match.awayTeam\n    )\n  ) {\n    teams = [\n      allForm.find((game) => game.home.teamName === match.homeTeam).home,\n      allForm.find((game) => game.away.teamName === match.awayTeam).away,\n    ];\n  } else {\n    calculate = false;\n  }\n\n  let formHome;\n  let formAway;\n\n  if (calculate) {\n    for (let i = 0; i < teams.length; i++) {\n      if (teams[0][index].PlayedHome <= 1 || teams[1][index].PlayedAway <= 1) {\n        index = 2;\n        divider = 10;\n      }\n\n      teams[i][index].lastGame = teams[i][index].LastFiveForm[4];\n      teams[i][index].previousToLastGame = teams[i][index].LastFiveForm[3];\n\n      let last2 = [\n        teams[i][index].lastGame,\n        teams[i][index].previousToLastGame,\n      ];\n\n      teams[i][index].last2Points = getPointsFromLastX(last2);\n\n      teams[i][index].twoGameAverage = await getPointAverage(\n        teams[i][index].last2Points,\n        2\n      );\n      teams[i][index].threeGameAverage = await getPointAverage(\n        teams[i][index].last3Points,\n        3\n      );\n      teams[i][index].fiveGameAverage = await getPointAverage(\n        teams[i][index].last5Points,\n        5\n      );\n      teams[i][index].sixGameAverage = await getPointAverage(\n        teams[i][index].last6Points,\n        6\n      );\n      teams[i][index].tenGameAverage = await getPointAverage(\n        teams[i][index].last10Points,\n        10\n      );\n\n      if (teams[i][index].formRun) {\n        teams[i][index].lastHomeOrAwayPoints = getPointsFromLastX(\n          teams[i][index].formRun\n        );\n\n        teams[i][index].homeOrAwayAverage = await getPointAverage(\n          teams[i][index].lastHomeOrAwayPoints,\n          teams[i][index].formRun.length\n        );\n      }\n\n      teams[i][0].ScoredAverage = teams[i][0].ScoredOverall / 5;\n      teams[i][1].ScoredAverage = teams[i][1].ScoredOverall / 6;\n      teams[i][2].ScoredAverage = teams[i][2].ScoredOverall / 10;\n\n      teams[i][0].ConcededAverage = teams[i][0].ConcededOverall / 5;\n      teams[i][1].ConcededAverage = teams[i][1].ConcededOverall / 6;\n      teams[i][2].ConcededAverage = teams[i][2].ConcededOverall / 10;\n\n      if (teams[i][1].ScoredAverage === 0) {\n        teams[i][1].ScoredAverage = teams[i][index].ScoredOverall / 10;\n        teams[i][1].ScoredOverall = teams[i][2].ScoredOverall / 2;\n      }\n\n      if (teams[i][1].ConcededAverage === 0) {\n        teams[i][1].ConcededAverage = teams[i][index].ConcededOverall / 10;\n        teams[i][1].ConcededOverall = teams[i][2].ConcededOverall / 2;\n      }\n\n      teams[i][index].ScoredAverageShortTerm = teams[i][0].ScoredOverall / 5;\n      teams[i][index].ConcededAverageShortTerm =\n        teams[i][0].ConcededOverall / 5;\n\n      teams[i][index].longTermAverageGoals = teams[i][2].ScoredOverall / 10;\n      teams[i][index].longTermAverageConceeded =\n        teams[i][2].ConcededOverall / 10;\n\n      let recentGoalDiff =\n        teams[i][index].ScoredAverageShortTerm -\n        teams[i][index].ConcededAverageShortTerm;\n      let distantGoalDiff =\n        teams[i][index].longTermAverageGoals -\n        teams[i][index].longTermAverageConceeded;\n\n      let recentDA = teams[i][0].AverageDangerousAttacksOverall;\n      let distantDA = teams[i][2].AverageDangerousAttacksOverall;\n\n      let recentPosession = teams[i][0].AveragePossessionOverall;\n      let distantPosession = teams[i][2].AveragePossessionOverall;\n\n      let recentCleanSheet = teams[i][0].CleanSheetPercentage;\n      let distantCleanSheet = teams[i][2].CleanSheetPercentage;\n\n      let recentFormArray = [\n        recentGoalDiff,\n        recentDA,\n        recentPosession,\n        recentCleanSheet,\n      ];\n      let distantFormArray = [\n        distantGoalDiff,\n        distantDA,\n        distantPosession,\n        distantCleanSheet,\n      ];\n\n      teams[i][index].formTrendScore = await compareFormTrend(\n        recentFormArray,\n        distantFormArray\n      );\n\n      teams[i][index].expectedGoals = parseFloat(teams[i][index].XG);\n\n      teams[i][index].ScoredAverageShortAndLongTerm =\n        (teams[i][index].ScoredOverall / 10 +\n          teams[i][index].ScoredAverageShortTerm) /\n        2;\n\n      teams[i][index].conceededAverageShortAndLongTerm =\n        (teams[i][index].ConcededOverall / 10 +\n          teams[i][index].ConcededAverageShortTerm) /\n        2;\n\n      teams[i][index].longTermGoalDifference =\n        teams[i][2].ScoredAverage - teams[i][2].ConcededAverage;\n\n      teams[i][index].shortTermGoalDifference =\n        teams[i][0].ScoredAverage - teams[i][0].ConcededAverage;\n\n      teams[i][index].XGdifferential = await diff(\n        teams[i][index].XGOverall,\n        teams[i][index].XGAgainstAvgOverall\n      );\n\n      teams[i][index].XGdifferentialRecent = await diff(\n        teams[i][0].XGOverall,\n        teams[i][0].XGAgainstAvgOverall\n      );\n\n      teams[i][index].actualToXGDifferenceRecent = await diff(\n        teams[i][index].XGdifferentialRecent,\n        teams[i][index].shortTermGoalDifference\n      );\n    }\n\n    homeOdds = match.homeOdds;\n    awayOdds = match.awayOdds;\n\n    formHome = teams[0][index];\n    formAway = teams[1][index];\n\n    // if (\n    //   (formHome.XGOverall - formHome.XGAgainstAvgOverall) < (formHome.last5XG - formHome.XGAgainstlast5)\n    // ) {\n    //   formHome.improving = true;\n    // } else {\n    //   formHome.improving = false;\n    // }\n\n    // if (\n    //   (formAway.XGOverall - formAway.XGAgainstAvgOverall) < (formAway.last5XG - formAway.XGAgainstlast5)\n    // ) {\n    //   formAway.improving = true;\n    // } else {\n    //   formAway.improving = false;\n    // }\n\n    let homeTenGameAvg = formHome.last10Points / 10;\n    let awayTenGameAvg = formAway.last10Points / 10;\n\n    let homeTwoGameAvg = formHome.last2Points / 2;\n    let awayTwoGameAvg = formAway.last2Points / 2;\n\n    let pointsDiff10 = await getPointsDifferential(\n      homeTenGameAvg,\n      awayTenGameAvg\n    );\n\n    let pointsDiff2 = await getPointsDifferential(\n      homeTwoGameAvg,\n      awayTwoGameAvg\n    );\n\n    let [last10WeightingHome, last10WeightingAway] = await getPointWeighting(\n      pointsDiff10\n    );\n\n    let [last2WeightingHome, last2WeightingAway] = await getPointWeighting(\n      pointsDiff2\n    );\n\n    formHome.dangerousAttackConversion =\n      (formHome.ScoredAverageShortAndLongTerm /\n        formHome.AverageDangerousAttacksOverall) *\n      100;\n    formAway.dangerousAttackConversion =\n      (formAway.ScoredAverageShortAndLongTerm /\n        formAway.AverageDangerousAttacksOverall) *\n      100;\n\n    [formHome.clinicalRating, formHome.clinicalScore] = await getClinicalRating(\n      formHome\n    );\n    [formAway.clinicalRating, formAway.clinicalScore] = await getClinicalRating(\n      formAway\n    );\n\n    let XGdifferential = await diff(\n      formHome.XGdifferential,\n      formAway.XGdifferential\n    );\n\n    formHome.teamName = match.homeTeam;\n    formAway.teamName = match.awayTeam;\n\n    match.XGdifferentialValue = Math.abs(XGdifferential);\n    match.XGdifferentialValueRaw = parseFloat(XGdifferential);\n    if (\n      allLeagueResultsArrayOfObjects[match.leagueIndex].fixtures.length > 10 &&\n      match.leagueID !== 7956\n    ) {\n      [\n        formHome.predictedGoalsBasedOnHomeAv,\n        formHome.predictedGoalsBasedOnAwayAv,\n        formHome.allTeamGoalsBasedOnAverages,\n        formHome.predictedGoalsConceededBasedOnHomeAv,\n        formHome.predictedGoalsConceededBasedOnAwayAv,\n        formHome.allTeamGoalsConceededBasedOnAverages,\n        formHome.averageOddsHome,\n        formHome.averageOddsAway,\n        formHome.averageScoredLeague,\n        formHome.averageConceededLeague,\n        formHome.last10btts,\n        formHome.last10bttsHome,\n        formHome.last10bttsAway,\n        match.bttsAllPercentageHome,\n        match.bttsPercentageHomeHome,\n        match.bttsPercentageHomeAway,\n        formHome.forAndAgainstRollingAvHomeOrAway,\n        formHome.forAndAgainstRollingAv,\n      ] = await getPastLeagueResults(match.homeTeam, match, \"home\", formHome);\n\n      [\n        formAway.predictedGoalsBasedOnHomeAv,\n        formAway.predictedGoalsBasedOnAwayAv,\n        formAway.allTeamGoalsBasedOnAverages,\n        formAway.predictedGoalsConceededBasedOnHomeAv,\n        formAway.predictedGoalsConceededBasedOnAwayAv,\n        formAway.allTeamGoalsConceededBasedOnAverages,\n        formAway.averageOddsHome,\n        formAway.averageOddsAway,\n        formAway.averageScoredLeague,\n        formAway.averageConceededLeague,\n        formAway.last10btts,\n        formAway.last10bttsHome,\n        formAway.last10bttsAway,\n        match.bttsAllPercentageAway,\n        match.bttsPercentageAwayHome,\n        match.bttsPercentageAwayAway,\n        formAway.forAndAgainstRollingAvHomeOrAway,\n        formAway.forAndAgainstRollingAv,\n      ] = await getPastLeagueResults(match.awayTeam, match, \"away\", formAway);\n    } else {\n      formHome.completeData = false;\n      formHome.predictedGoalsBasedOnHomeAv = formHome.ScoredAverage;\n      formHome.predictedGoalsBasedOnAwayAv = formHome.ConcededAverage;\n      formHome.allTeamGoalsBasedOnAverages = formHome.ScoredAverage;\n      formHome.forAndAgainstRollingAv = {\n        goalsFor: formHome.ScoredAverage,\n        goalsAgainst: formHome.ConcededAverage,\n      };\n      formHome.forAndAgainstRollingAvHomeOrAway = {\n        goalsFor: formHome.ScoredAverage,\n        goalsAgainst: formHome.ConcededAverage,\n      };\n      formHome.predictedGoalsConceededBasedOnHomeAv = formHome.ConcededAverage;\n      formHome.predictedGoalsConceededBasedOnAwayAv = formHome.ConcededAverage;\n      formHome.allTeamGoalsConceededBasedOnAverages = formHome.ConcededAverage;\n      formHome.averageOddsHome = null;\n      formHome.averageOddsAway = null;\n      formHome.averageScoredLeague = null;\n      formHome.averageConceededLeague = null;\n      formHome.goalDifference =\n        formHome.ScoredOverall - formHome.ConcededOverall;\n      formHome.goalDifferenceHomeOrAway =\n        formHome.ScoredOverall - formHome.ConcededOverall;\n      formHome.last10btts = null;\n      formHome.last10bttsHome = null;\n      formHome.last10bttsAway = null;\n      formHome.allTeamResults = [];\n      formHome.resultsAll = [];\n      formHome.resultsHome = [];\n      formHome.resultsAway = [];\n      match.bttsAllPercentageHome = \"\";\n      match.bttsPercentageHomeHome = \"\";\n      match.bttsPercentageHomeAway = \"\";\n      formAway.completeData = false;\n      formAway.predictedGoalsBasedOnHomeAv = formAway.ScoredAverage;\n      formAway.predictedGoalsBasedOnAwayAv = formAway.ConcededAverage;\n      formAway.allTeamGoalsBasedOnAverages = formAway.ScoredAverage;\n      formAway.forAndAgainstRollingAv = {\n        goalsFor: formAway.ScoredAverage,\n        goalsAgainst: formAway.ConcededAverage,\n      };\n      formAway.forAndAgainstRollingAvHomeOrAway = {\n        goalsFor: formAway.ScoredAverage,\n        goalsAgainst: formAway.ConcededAverage,\n      };\n      formAway.predictedGoalsConceededBasedOnHomeAv = formAway.ConcededAverage;\n      formAway.predictedGoalsConceededBasedOnAwayAv = formAway.ConcededAverage;\n      formAway.allTeamGoalsConceededBasedOnAverages = formAway.ConcededAverage;\n      formAway.averageOddsHome = null;\n      formAway.averageOddsAway = null;\n      formAway.averageScoredLeague = null;\n      formAway.averageConceededLeague = null;\n      formAway.goalDifference =\n        formAway.ScoredOverall - formAway.ConcededOverall;\n      formAway.goalDifferenceHomeOrAway =\n        formAway.ScoredOverall - formAway.ConcededOverall;\n\n      formAway.last10btts = null;\n      formAway.last10bttsHome = null;\n      formAway.last10bttsAway = null;\n      formAway.allTeamResults = [];\n      formAway.resultsAll = [];\n      formAway.resultsHome = [];\n      formAway.resultsAway = [];\n      match.bttsAllPercentageAway = \"\";\n      match.bttsPercentageAwayHome = \"\";\n      match.bttsPercentageAwayAway = \"\";\n    }\n\n    if (\n      typeof formHome.homeTeamHomePositionRaw === \"number\" &&\n      typeof formAway.awayTeamAwayPositionRaw === \"number\"\n    ) {\n      formHome.homePositionHomeOnly = parseFloat(\n        formHome.homeTeamHomePositionRaw\n      );\n      formAway.awayPositionAwayOnly = parseFloat(\n        formAway.awayTeamAwayPositionRaw\n      );\n      formHome.homePosition = parseFloat(formHome.homeRawPosition);\n      formAway.awayPosition = parseFloat(formAway.awayRawPosition);\n    } else {\n      formHome.homePositionHomeOnly = \"N/A\";\n      formAway.awayPositionAwayOnly = \"N/A\";\n      formHome.homePosition = \"N/A\";\n      formAway.awayPosition = \"N/A\";\n    }\n\n    if (formHome.last10Goals && formAway.last10Goals !== 0) {\n      if (\n        formHome.last5Goals - formHome.last5GoalsConceeded >\n        formHome.last10Goals - formHome.last10GoalsConceeded\n      ) {\n        formHome.improving = true;\n      } else {\n        formHome.improving = false;\n      }\n\n      if (\n        formAway.last5Goals - formAway.last5GoalsConceeded >\n        formAway.last10Goals - formAway.last10GoalsConceeded\n      ) {\n        formAway.improving = true;\n      } else {\n        formAway.improving = false;\n      }\n    }\n\n    formHome.AttackingPotency = (formHome.XG / formHome.AttacksHome) * 100;\n    formAway.AttackingPotency = (formAway.XG / formAway.AttacksAverage) * 100;\n\n    let teamComparisonScore;\n\n    const attackingMetricsHome = {\n      \"Average Dangerous Attacks\": formHome.AverageDangerousAttacksOverall,\n      \"Average Shots\": formHome.AverageShots,\n      \"Average Shot Value\": formHome.avgShotValue,\n      \"Average Shots On Target\": formHome.AverageShotsOnTargetOverall\n        ? formHome.AverageShotsOnTargetOverall\n        : formHome.AverageShotsOnTarget,\n      \"Average Expected Goals\": formHome.XGOverall\n        ? formHome.XGOverall\n        : formHome.expectedGoals,\n      \"Recent XG\": formHome.XGlast5 ? formHome.XGlast5 : formHome.XGOverall,\n      \"Average Goals\": formHome.avgScored\n        ? formHome.avgScored\n        : formHome.ScoredAverage,\n      Corners: formHome.AverageCorners\n        ? formHome.AverageCorners\n        : formHome.CornersAverage,\n    };\n\n    const attackingMetricsHomeLast5 = {\n      \"Average Dangerous Attacks\": formHome.avDALast5\n        ? formHome.avDALast5\n        : formHome.AverageDangerousAttacksOverall,\n      \"Average Shots\": formHome.avShotsLast5\n        ? formHome.avShotsLast5\n        : formHome.AverageShots,\n      \"Average Shot Value\": formHome.avgShotValue,\n      \"Average Shots On Target\": formHome.avSOTLast5\n        ? formHome.avSOTLast5\n        : formHome.AverageShotsOnTarget,\n      \"Average Expected Goals\": formHome.XGlast5\n        ? formHome.XGlast5\n        : formHome.XGOverall,\n      \"Recent XG\": formHome.XGlast5 ? formHome.XGlast5 : formHome.XGOverall,\n      \"Average Goals\": formHome.avScoredLast5\n        ? formHome.avScoredLast5\n        : formHome.ScoredAverage,\n      Corners: formHome.avCornersLast5\n        ? formHome.avCornersLast5\n        : formHome.CornersAverage,\n    };\n\n    const attackingMetricsHomeOnly = {\n      \"Average Dangerous Attacks\": formHome.avgDangerousAttacksHome\n        ? formHome.avgDangerousAttacksHome\n        : formHome.AverageDangerousAttacksOverall,\n      \"Average Shots\": formHome.avgShotsHome\n        ? formHome.avgShotsHome\n        : formHome.AverageShots,\n      \"Average Shot Value\": formHome.avgShotValue,\n      \"Average Shots On Target\": formHome.avgShotsOnTargetHome\n        ? formHome.avgShotsOnTargetHome\n        : formHome.AverageShotsOnTarget,\n      \"Average Expected Goals\": formHome.avgXGScoredHome\n        ? formHome.avgXGScoredHome\n        : formHome.XGOverall,\n      \"Recent XG\": formHome.last5XGAvgForHome\n        ? formHome.last5XGAvgForHome\n        : formHome.XGOverall,\n      \"Average Goals\": formHome.avgScoredHome\n        ? formHome.avgScoredHome\n        : formHome.ScoredAverage,\n      Corners: formHome.cornersAvHome\n        ? formHome.cornersAvHome\n        : formHome.CornersAverage,\n    };\n\n    const attackingMetricsAwayOnly = {\n      \"Average Dangerous Attacks\": formAway.avgDangerousAttacksAway\n        ? formAway.avgDangerousAttacksAway\n        : formAway.AverageDangerousAttacksOverall,\n      \"Average Shots\": formAway.avgShotsAway\n        ? formAway.avgShotsAway\n        : formAway.AverageShots,\n      \"Average Shot Value\": formAway.avgShotValue,\n      \"Average Shots On Target\": formAway.avgShotsOnTargetAway\n        ? formAway.avgShotsOnTargetAway\n        : formAway.AverageShotsOnTarget,\n      \"Average Expected Goals\": formAway.avgXGScoredAway\n        ? formAway.avgXGScoredAway\n        : formAway.XGOverall,\n      \"Recent XG\": formAway.last5XGAvgForAway\n        ? formAway.last5XGAvgForAway\n        : formAway.XGOverall,\n      \"Average Goals\": formAway.avgScoredAway\n        ? formAway.avgScoredAway\n        : formAway.ScoredAverage,\n      Corners: formAway.cornersAvAway\n        ? formAway.cornersAvAway\n        : formAway.CornersAverage,\n    };\n\n    const attackingMetricsAway = {\n      \"Average Dangerous Attacks\": formAway.AverageDangerousAttacksOverall,\n      \"Average Shots\": formAway.AverageShots,\n      \"Average Shot Value\": formAway.avgShotValue,\n      \"Average Shots On Target\": formAway.AverageShotsOnTargetOverall\n        ? formAway.AverageShotsOnTargetOverall\n        : formAway.AverageShotsOnTarget,\n      \"Average Expected Goals\": formAway.XGOverall\n        ? formAway.XGOverall\n        : formAway.expectedGoals,\n      \"Recent XG\": formAway.XGlast5 ? formAway.XGlast5 : formAway.XGOverall,\n      \"Average Goals\": formAway.avgScored\n        ? formAway.avgScored\n        : formAway.ScoredAverage,\n      Corners: formAway.AverageCorners\n        ? formAway.AverageCorners\n        : formAway.CornersAverage,\n    };\n\n    const attackingMetricsAwayLast5 = {\n      \"Average Dangerous Attacks\": formAway.avDALast5\n        ? formAway.avDALast5\n        : formAway.AverageDangerousAttacksOverall,\n      \"Average Shots\": formAway.avShotsLast5\n        ? formAway.avShotsLast5\n        : formAway.AverageShots,\n      \"Average Shot Value\": formAway.avgShotValue,\n      \"Average Shots On Target\": formAway.avSOTLast5\n        ? formAway.avSOTLast5\n        : formAway.AverageShotsOnTarget,\n      \"Average Expected Goals\": formAway.XGlast5\n        ? formAway.XGlast5\n        : formAway.XGOverall,\n      \"Recent XG\": formAway.XGlast5 ? formAway.XGlast5 : formAway.XGOverall,\n      \"Average Goals\": formAway.avScoredLast5\n        ? formAway.avScoredLast5\n        : formAway.ScoredAverage,\n      Corners: formAway.avCornersLast5\n        ? formAway.avCornersLast5\n        : formAway.CornersAverage,\n    };\n\n    const defensiveMetricsHome = {\n      \"Average XG Against\": formHome.XGAgainstAvgOverall\n        ? formHome.XGAgainstAvgOverall\n        : formHome.XGAgainstAvgOverall,\n      \"Recent XG Against\": formHome.XGAgainstlast5\n        ? formHome.XGAgainstlast5\n        : formHome.XGAgainstAvgOverall,\n      \"Average Goals Against\": formHome.avgConceeded\n        ? formHome.avgConceeded\n        : formHome.ConcededAverage,\n      \"Average SOT Against\": formHome.AverageShotsOnTargetAgainstOverall\n        ? formHome.AverageShotsOnTargetAgainstOverall\n        : 5,\n    };\n\n    const defensiveMetricsHomeLast5 = {\n      \"Average XG Against\": formHome.XGAgainstlast5\n        ? formHome.XGAgainstlast5\n        : formHome.XGAgainstAvgOverall,\n      \"Recent XG Against\": formHome.avXGAgainstLast5\n        ? formHome.avXGAgainstLast5\n        : formHome.XGAgainstAvgOverall,\n      \"Average Goals Against\": formHome.avConceededLast5\n        ? formHome.avConceededLast5\n        : formHome.ConcededAverage,\n      \"Average SOT Against\": formHome.avSOTAgainstLast5\n        ? formHome.avSOTAgainstLast5\n        : 5,\n    };\n\n    const defensiveMetricsAway = {\n      \"Average XG Against\": formAway.XGAgainstAvgOverall\n        ? formAway.XGAgainstAvgOverall\n        : formAway.XGAgainstAvgOverall,\n      \"Recent XG Against\": formAway.XGAgainstlast5\n        ? formAway.XGAgainstlast5\n        : formAway.XGAgainstAvgOverall,\n      \"Average Goals Against\": formAway.avgConceeded\n        ? formAway.avgConceeded\n        : formAway.ConcededAverage,\n      \"Average SOT Against\": formAway.AverageShotsOnTargetAgainstOverall\n        ? formAway.AverageShotsOnTargetAgainstOverall\n        : 5,\n    };\n\n    const defensiveMetricsAwayLast5 = {\n      \"Average XG Against\": formAway.XGAgainstlast5\n        ? formAway.XGAgainstlast5\n        : formAway.XGAgainstAvgOverall,\n      \"Recent XG Against\": formAway.avXGAgainstLast5\n        ? formAway.avXGAgainstLast5\n        : formAway.XGAgainstAvgOverall,\n      \"Average Goals Against\": formAway.avConceededLast5\n        ? formAway.avConceededLast5\n        : formAway.ConcededAverage,\n      \"Average SOT Against\": formAway.avSOTAgainstLast5\n        ? formAway.avSOTAgainstLast5\n        : 5,\n    };\n\n    const defensiveMetricsHomeOnly = {\n      \"Average XG Against\": formHome.avgXGConceededHome\n        ? formHome.avgXGConceededHome\n        : formHome.XGAgainstAvgOverall,\n      \"Recent XG Against\": formHome.last5XGAvgAgainstHome\n        ? formHome.last5XGAvgAgainstHome\n        : formHome.XGAgainstAvgOverall,\n      \"Average Goals Against\": formHome.teamConceededAvgHomeOnly\n        ? formHome.teamConceededAvgHomeOnly\n        : formHome.ConcededAverage,\n      \"Average SOT Against\": formHome.avgShotsOnTargetAgainstHome\n        ? formHome.avgShotsOnTargetAgainstHome\n        : 5,\n    };\n\n    const defensiveMetricsAwayOnly = {\n      \"Average XG Against\": formAway.avgXGConceededAway\n        ? formAway.avgXGConceededAway\n        : formAway.XGAgainstAvgOverall,\n      \"Recent XG Against\": formAway.last5XGAvgAgainstAway\n        ? formAway.last5XGAvgAgainstAway\n        : formAway.XGAgainstAvgOverall,\n      \"Average Goals Against\": formAway.teamConceededAvgAwayOnly\n        ? formAway.teamConceededAvgAwayOnly\n        : formAway.ConcededAverage,\n      \"Average SOT Against\": formAway.avgShotsOnTargetAgainstAway\n        ? formAway.avgShotsOnTargetAgainstAway\n        : 5,\n    };\n\n    formHome.attackingMetrics = attackingMetricsHome;\n    formHome.defensiveMetrics = defensiveMetricsHome;\n    formAway.attackingMetrics = attackingMetricsAway;\n    formAway.defensiveMetrics = defensiveMetricsAway;\n\n    formHome.attackingStrength = await calculateAttackingStrength(\n      attackingMetricsHome\n    );\n\n    formHome.attackingStrengthScoreGeneration =\n      await calculateAttackingStrength(attackingMetricsHome);\n\n    formHome.attackingStrengthLast5 = await calculateAttackingStrength(\n      attackingMetricsHomeLast5\n    );\n\n    formHome.attackingStrengthHomeOnly = await calculateAttackingStrength(\n      attackingMetricsHomeOnly\n    );\n\n    formAway.attackingStrength = await calculateAttackingStrength(\n      attackingMetricsAway\n    );\n\n    formAway.attackingStrengthLast5 = await calculateAttackingStrength(\n      attackingMetricsAwayLast5\n    );\n\n    formAway.attackingStrengthAwayOnly = await calculateAttackingStrength(\n      attackingMetricsAwayOnly\n    );\n\n    formHome.defensiveStrength = await calculateDefensiveStrength(\n      defensiveMetricsHome\n    );\n\n    formHome.defensiveStrengthScoreGeneration =\n      await calculateDefensiveStrength(defensiveMetricsHome, 0.7);\n\n    formHome.defensiveStrengthLast5 = await calculateDefensiveStrength(\n      defensiveMetricsHomeLast5\n    );\n\n    formHome.defensiveStrengthScoreGenerationLast5 =\n      await calculateDefensiveStrength(defensiveMetricsHomeLast5, 0.7);\n\n    formHome.defensiveStrengthHomeOnly = await calculateDefensiveStrength(\n      defensiveMetricsHomeOnly\n    );\n\n    formHome.defensiveStrengthScoreGenerationHomeOnly =\n      await calculateDefensiveStrength(defensiveMetricsHomeOnly, 0.7);\n\n    formAway.defensiveStrength = await calculateDefensiveStrength(\n      defensiveMetricsAway\n    );\n\n    formAway.defensiveStrengthScoreGeneration =\n      await calculateDefensiveStrength(defensiveMetricsAway, 0.7);\n\n    formAway.defensiveStrengthLast5 = await calculateDefensiveStrength(\n      defensiveMetricsAwayLast5\n    );\n\n    formAway.defensiveStrengthScoreGenerationLast5 =\n      await calculateDefensiveStrength(defensiveMetricsAwayLast5, 0.7);\n\n    formAway.defensiveStrengthAwayOnly = await calculateDefensiveStrength(\n      defensiveMetricsAwayOnly\n    );\n\n    formAway.defensiveStrengthScoreGenerationAwayOnly =\n      await calculateDefensiveStrength(defensiveMetricsAwayOnly, 0.7);\n\n    formHome.possessionStrength = await calculateMetricStrength(\n      \"averagePossession\",\n      formHome.AveragePossessionOverall\n        ? formHome.AveragePossessionOverall\n        : formHome.AveragePossessionOverall\n    );\n\n    formHome.possessionStrengthLast5 = await calculateMetricStrength(\n      \"averagePossession\",\n      formHome.avPosessionLast5\n        ? formHome.avPosessionLast5\n        : formHome.AveragePossessionOverall\n    );\n\n    formHome.possessionStrengthHomeOnly = await calculateMetricStrength(\n      \"averagePossession\",\n      formHome.avgPossessionHome\n        ? formHome.avgPossessionHome\n        : formHome.AveragePossessionOverall\n    );\n\n    formAway.possessionStrengthLast5 = await calculateMetricStrength(\n      \"averagePossession\",\n      formAway.avPosessionLast5\n        ? formAway.avPosessionLast5\n        : formAway.AveragePossessionOverall\n    );\n\n    formAway.possessionStrength = await calculateMetricStrength(\n      \"averagePossession\",\n      formAway.AveragePossessionOverall\n        ? formAway.AveragePossessionOverall\n        : formAway.AveragePossessionOverall\n    );\n\n    formAway.possessionStrengthAwayOnly = await calculateMetricStrength(\n      \"averagePossession\",\n      formAway.avgPossessionAway\n        ? formAway.avgPossessionAway\n        : formAway.AveragePossessionOverall\n    );\n\n    formHome.directnessOverall =\n      (formHome.AverageShots / formHome.AveragePossessionOverall) * 10;\n\n    formHome.directnessOverallLast5 =\n      (formHome.avShotsLast5 / formHome.avPosessionLast5) * 10;\n\n    formAway.directnessOverallLast5 =\n      (formAway.avShotsLast5 / formAway.avPosessionLast5) * 10;\n\n    formHome.directnessHomeOnly =\n      (formHome.avgShotsHome / formHome.avgPossessionHome) * 10;\n\n    formAway.directnessOverall =\n      (formAway.AverageShots / formAway.AveragePossessionOverall) * 10;\n\n    formAway.directnessAwayOnly =\n      (formAway.avgShotsAway / formAway.avgPossessionAway) * 10;\n\n    formHome.directnessOverallStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formHome.directnessOverall\n    );\n\n    formHome.directnessOverallStrengthLast5 = await calculateMetricStrength(\n      \"directnessOverall\",\n      formHome.directnessOverallLast5\n    );\n\n    formHome.directnessHomeStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formHome.directnessHomeOnly\n    );\n\n    formAway.directnessOverallStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formAway.directnessOverall\n    );\n\n    formAway.directnessOverallStrengthLast5 = await calculateMetricStrength(\n      \"directnessOverall\",\n      formAway.directnessOverallLast5\n    );\n\n    formAway.directnessAwayStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formAway.directnessAwayOnly\n    );\n\n    formHome.shootingAccuracy =\n      (formHome.AverageShotsOnTargetOverall\n        ? formHome.AverageShotsOnTargetOverall\n        : formHome.AverageShotsOnTarget / formHome.avgShots) *\n      formHome.AverageShotsOnTargetOverall\n        ? formHome.AverageShotsOnTargetOverall\n        : formHome.AverageShotsOnTarget;\n\n    formHome.shootingAccuracyLast5 =\n      (formHome.avSOTLast5 / formHome.avShotsLast5) * formHome.avSOTLast5;\n\n    formAway.shootingAccuracyLast5 =\n      (formAway.avSOTLast5 / formAway.avShotsLast5) * formAway.avSOTLast5;\n\n    formHome.shootingAccuracyHomeOnly =\n      (formHome.avgShotsOnTargetHome / formHome.avgShotsHome) *\n      formHome.avgShotsOnTargetHome;\n\n    formAway.shootingAccuracy =\n      (formAway.AverageShotsOnTargetOverall\n        ? formAway.AverageShotsOnTargetOverall\n        : formAway.AverageShotsOnTarget / formAway.avgShots) *\n      formAway.AverageShotsOnTargetOverall\n        ? formAway.AverageShotsOnTargetOverall\n        : formAway.AverageShotsOnTarget;\n\n    formAway.shootingAccuracyAwayOnly =\n      (formAway.avgShotsOnTargetAway / formAway.avgShotsAway) *\n      formAway.avgShotsOnTargetAway;\n\n    formHome.accuracyOverallStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formHome.shootingAccuracy\n    );\n\n    formHome.accuracyOverallStrengthLast5 = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formHome.shootingAccuracyLast5\n    );\n\n    formHome.accuracyHomeStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formHome.shootingAccuracyHomeOnly\n    );\n\n    formAway.accuracyOverallStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formAway.shootingAccuracy\n    );\n\n    formAway.accuracyOverallStrengthLast5 = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formAway.shootingAccuracyLast5\n    );\n\n    formAway.accuracyAwayStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formAway.shootingAccuracyAwayOnly\n    );\n\n    formHome.xgForStrength = await calculateMetricStrength(\n      \"xgFor\",\n      formHome.XGOverall\n    );\n\n    formHome.xgForStrengthLast5 = await calculateMetricStrength(\n      \"xgFor\",\n      formHome.XGlast5\n    );\n\n    formHome.xgForStrengthHomeOnly = await calculateMetricStrength(\n      \"xgFor\",\n      formHome.avgXGScoredHome\n    );\n\n    formHome.xgAgainstStrength = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formHome.XGAgainstAvgOverall\n    );\n\n    formHome.xgAgainstStrengthLast5 = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formHome.XGAgainstlast5\n    );\n\n    formHome.xgAgainstStrengthHomeOnly = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formHome.avgXGConceededHome\n    );\n\n    formAway.xgForStrength = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.XGOverall\n    );\n\n    formAway.xgForStrengthLast5 = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.last5XGAvgFor\n    );\n\n    formAway.xgForStrengthLast5 = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.XGlast5\n    );\n\n    formAway.xgForStrengthAwayOnly = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.avgXGScoredAway\n    );\n\n    formAway.xgAgainstStrength = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formAway.XGAgainstAvgOverall\n    );\n\n    formAway.xgAgainstStrengthLast5 = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formAway.XGAgainstlast5\n    );\n\n    formAway.xgAgainstStrengthAwayOnly = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formAway.avgXGConceededAway\n    );\n\n    formHome.actualToXGDifference = parseInt(\n      await diff(formHome.XGDiffNonAverage, formHome.goalDifference)\n    );\n\n    formAway.actualToXGDifference = parseInt(\n      await diff(formAway.XGDiffNonAverage, formAway.goalDifference)\n    );\n\n    // teamComparisonScore = await compareTeams(formHome, formAway, match);\n\n    [formHome.teamGoalsCalc, formAway.teamGoalsCalc] = await generateGoals(\n      formHome,\n      formAway,\n      match\n    );\n\n    // teamComparisonScore = teamComparisonScore * 0.3;\n    // LEAVE\n\n    // if (teamComparisonScore > 0.45) {\n    //   teamComparisonScore = 0.45;\n    // } else if (teamComparisonScore < -0.45) {\n    //   teamComparisonScore = -0.45;\n    // }\n\n    // if (teamComparisonScore < 0) {\n    //   formHome.teamStrengthWeighting = 1 + teamComparisonScore / 1;\n    //   formAway.teamStrengthWeighting = 1 - teamComparisonScore / 1;\n    // } else if (teamComparisonScore >= 0) {\n    //   formHome.teamStrengthWeighting = 1 + teamComparisonScore / 1;\n    //   formAway.teamStrengthWeighting = 1 - teamComparisonScore / 1;\n    // }\n\n    // teamComparisonScore = 0;\n\n    // match.teamComparisonScore = teamComparisonScore.toFixed(2);\n    // match.goalWeighting = 1 + parseFloat(match.teamComparisonScore)\n\n    let team1Metrics = {\n      weighting: formHome.teamGoalsCalc,\n      odds: match.homeOdds,\n      XGRating: formHome.XGRating,\n      actualToXGDifference: formHome.actualToXGDifference,\n      // Add other relevant metrics here\n    };\n\n    let team2Metrics = {\n      weighting: formAway.teamGoalsCalc,\n      odds: match.awayOdds,\n      XGRating: formAway.XGRating,\n      actualToXGDifference: formAway.actualToXGDifference,\n      // Add other relevant metrics here\n    };\n\n    // pass arrays of league goals and conceeded\n    let scorePredictions;\n    let scorePredictionsHA;\n    let scorePredictionsRecent;\n\n    if (\n      formHome.allConceededArrayHome !== undefined &&\n      formAway.allConceededArrayAway !== undefined\n    ) {\n      scorePredictionsRecent = await predictScore(\n        formHome.allGoalsArrayHomeRecent,\n        formHome.allConceededArrayHomeRecent,\n        formAway.allGoalsArrayAwayRecent,\n        formAway.allConceededArrayAwayRecent,\n        team1Metrics,\n        team2Metrics,\n        match.game\n      );\n      scorePredictionsHA = await predictScore(\n        formHome.allGoalsArrayHomeOnly,\n        formHome.allConceededArrayHomeOnly,\n        formAway.allGoalsArrayAwayOnly,\n        formAway.allConceededArrayAwayOnly,\n        team1Metrics,\n        team2Metrics,\n        match.game\n      );\n      scorePredictions = await predictScore(\n        formHome.allGoalsArrayHome,\n        formHome.allConceededArrayHome,\n        formAway.allGoalsArrayAway,\n        formAway.allConceededArrayAway,\n        team1Metrics,\n        team2Metrics,\n        match.game\n      );\n    }\n\n    let finalHomeGoals;\n    let finalAwayGoals;\n\n    const homeGoalDiff =\n      formHome.ScoredAverageShortAndLongTerm -\n      formHome.conceededAverageShortAndLongTerm;\n    const awayGoalDiff =\n      formAway.ScoredAverageShortAndLongTerm -\n      formAway.conceededAverageShortAndLongTerm;\n\n    formHome.goalsDifferential =\n      parseFloat(await diff(homeGoalDiff, awayGoalDiff)) / 1;\n    formAway.goalsDifferential =\n      parseFloat(await diff(awayGoalDiff, homeGoalDiff)) / 1;\n\n    formHome.rollingAverageGoalsDifferential = parseFloat(\n      formHome.allTeamGoalsBasedOnAverages -\n        formHome.allTeamGoalsConceededBasedOnAverages\n    );\n    formAway.rollingAverageGoalsDifferential = parseFloat(\n      formAway.allTeamGoalsBasedOnAverages -\n        formAway.allTeamGoalsConceededBasedOnAverages\n    );\n\n    match.GoalsInGamesAverageHome =\n      formHome.avScoredLast5 + formHome.avConceededLast5;\n\n    match.GoalsInGamesAverageAway =\n      formAway.avScoredLast5 + formAway.avConceededLast5;\n\n    let factorOneHome;\n    let factorOneAway;\n\n    factorOneHome =\n      // homeLeagueOrAllFormAverageGoals * 1 +\n      // formHome.last5Goals * 0.5 +\n      // formAway.last5GoalsConceeded * 0.5 +\n      (formHome.forAndAgainstRollingAvHomeOrAway.goalsFor * 2 +\n        formAway.forAndAgainstRollingAvHomeOrAway.goalsAgainst * 2 +\n        formHome.forAndAgainstRollingAv.goalsFor * 0 +\n        formAway.forAndAgainstRollingAv.goalsAgainst * 0 +\n        formHome.allTeamGoalsBasedOnAverages * 0 +\n        formAway.allTeamGoalsConceededBasedOnAverages * 0 +\n        // formHome.XGOverall * 1 +\n        // formAway.XGAgainstAvgOverall * 1 +\n        last10WeightingHome * 0 +\n        last2WeightingHome * 1) /\n      8;\n\n    factorOneAway =\n      // awayLeagueOrAllFormAverageGoals * 1 +\n      // formAway.last5Goals * 0.5 +\n      // formHome.last5GoalsConceeded * 0.5 +\n      (formAway.forAndAgainstRollingAvHomeOrAway.goalsFor * 2 +\n        formHome.forAndAgainstRollingAvHomeOrAway.goalsAgainst * 2 +\n        formAway.forAndAgainstRollingAv.goalsFor * 0 +\n        formHome.forAndAgainstRollingAv.goalsAgainst * 0 +\n        formAway.allTeamGoalsBasedOnAverages * 0 +\n        formHome.allTeamGoalsConceededBasedOnAverages * 0 +\n        // formAway.XGOverall * 1 +\n        // formHome.XGAgainstAvgOverall * 1 +\n        last10WeightingAway * 0 +\n        last2WeightingAway * 1) /\n      8;\n\n    let factorTwoHome;\n    let factorTwoAway;\n\n    if (\n      scorePredictions !== undefined &&\n      scorePredictions[0].probability !== 1\n    ) {\n      factorTwoHome =\n        // scorePredictions[0].team1Score +\n        // scorePredictionsRecent[0].team1Score +\n        scorePredictionsHA[0].team1Score / 2;\n      factorTwoAway =\n        // scorePredictions[0].team2Score +\n        // scorePredictionsRecent[0].team2Score +\n        scorePredictionsHA[0].team2Score / 2;\n    } else {\n      factorTwoHome = factorOneHome;\n      factorTwoAway = factorOneAway;\n    }\n\n    let homeComparisonWeighting;\n    let awayComparisonWeighting;\n    match.scoreDiff = await diff(factorOneHome, factorOneAway);\n\n    if (teamComparisonScore > 0) {\n      homeComparisonWeighting = 1 + Math.abs(teamComparisonScore);\n      awayComparisonWeighting = 1 + -Math.abs(teamComparisonScore);\n    } else if (teamComparisonScore < 0) {\n      homeComparisonWeighting = 1 + -Math.abs(teamComparisonScore);\n      awayComparisonWeighting = 1 + Math.abs(teamComparisonScore);\n    } else {\n      homeComparisonWeighting = 1;\n      awayComparisonWeighting = 1;\n    }\n\n    console.log(match.game)\n    console.log(formHome)\n    console.log(formAway)\n\n    // ROI\n   // Cumalative ROI for all 1402 match outcomes: + 7.58%\n\n\n    // let experimentalHomeGoals = formHome.teamGoalsCalc;\n    let experimentalHomeGoals =\n      (\n        // factorOneHome * 1 +\n        // formHome.allTeamGoalsBasedOnAverages +\n        // formAway.allTeamGoalsConceededBasedOnAverages +\n        // formHome.predictedGoalsBasedOnHomeAv + \n        // formAway.predictedGoalsConceededBasedOnAwayAv +\n        // formHome.XGPredictionHome.goalsFor +\n        // formAway.XGPredictionAway.goalsAgainst +\n        formHome.teamGoalsCalc +\n        parseFloat(formHome.actualToXGDifferenceRecent) +\n        (formHome.XGChangeRecently * 2)\n      )\n        /\n      1;\n\n    // (factorOneHome * homeComparisonWeighting +\n    //   (formHome.teamGoalsCalc * 2) +\n    //   factorTwoHome) /\n    // 4;\n    // (formHome.forAndAgainstRollingAvHomeOrAway.goalsFor + formAway.forAndAgainstRollingAvHomeOrAway.goalsAgainst) / 2\n\n    // let experimentalAwayGoals = formAway.teamGoalsCalc;\n    let experimentalAwayGoals =\n      (\n        // factorOneAway * 1 +\n        // formAway.allTeamGoalsBasedOnAverages +\n        // formHome.allTeamGoalsConceededBasedOnAverages +\n        // formAway.predictedGoalsBasedOnAwayAv +\n        // formHome.predictedGoalsConceededBasedOnHomeAv +\n        // formAway.XGPredictionAway.goalsFor +\n        // formHome.XGPredictionHome.goalsAgainst +\n        formAway.teamGoalsCalc +\n        parseFloat(formAway.actualToXGDifferenceRecent) +\n        (formAway.XGChangeRecently * 2)\n      ) /\n      1;\n\n    // (factorOneAway * awayComparisonWeighting +\n    //   (formAway.teamGoalsCalc * 2) +\n    //   factorTwoAway) /\n    // 4;\n    // (formAway.forAndAgainstRollingAvHomeOrAway.goalsFor + formHome.forAndAgainstRollingAvHomeOrAway.goalsAgainst) / 2\n\n    let rawFinalHomeGoals = experimentalHomeGoals;\n    let rawFinalAwayGoals = experimentalAwayGoals;\n\n    // if(rawFinalHomeGoals < 0){\n    //   rawFinalHomeGoals = 0\n    // }\n\n    // if(rawFinalAwayGoals < 0){\n    //   rawFinalAwayGoals = 0\n    // }\n\n    match.rawFinalHomeGoals = rawFinalHomeGoals;\n    match.rawFinalAwayGoals = rawFinalAwayGoals;\n\n    // if (rawFinalHomeGoals < 1 && rawFinalHomeGoals > 0 && rawFinalAwayGoals < 1 && rawFinalAwayGoals > 0) {\n    //   if (\n    //     formHome.CleanSheetPercentage < 45 &&\n    //     formAway.CleanSheetPercentage < 45\n    //   ) {\n    //     finalHomeGoals = Math.ceil(rawFinalHomeGoals);\n    //     finalAwayGoals = Math.ceil(rawFinalAwayGoals);\n    //   } else {\n    //     finalHomeGoals = Math.floor(rawFinalHomeGoals);\n    //     finalAwayGoals = Math.floor(rawFinalAwayGoals);\n    //   }\n    // }\n    // else if (rawFinalHomeGoals < 0 && rawFinalAwayGoals < 0) {\n    //   if (\n    //     formHome.CleanSheetPercentage < 45 &&\n    //     formAway.CleanSheetPercentage < 45\n    //   ) {\n    //     finalHomeGoals = 1;\n    //     finalAwayGoals = 1;\n    //   } else {\n    //     finalHomeGoals = Math.floor(rawFinalHomeGoals);\n    //     finalAwayGoals = Math.floor(rawFinalAwayGoals);\n    //   }\n    // }\n    // else {\n    //   finalHomeGoals = Math.floor(rawFinalHomeGoals);\n    //   finalAwayGoals = Math.floor(rawFinalAwayGoals);\n    // }\n\n    if (rawFinalHomeGoals < 0) {\n      rawFinalHomeGoals = 0;\n    }\n\n    if (rawFinalAwayGoals < 0) {\n      rawFinalAwayGoals = 0;\n    }\n\n\n    finalHomeGoals = Math.floor(rawFinalHomeGoals);\n    finalAwayGoals = Math.floor(rawFinalAwayGoals);\n\n    // finalHomeGoals = rawFinalHomeGoals;\n    // finalAwayGoals = rawFinalAwayGoals;\n\n    // finalHomeGoals = Math.round(rawFinalHomeGoals);\n    // finalAwayGoals = Math.round(rawFinalAwayGoals);\n\n    // if (finalHomeGoals > formHome.avgScored + 2) {\n    //   finalHomeGoals = Math.round((finalHomeGoals + formHome.avgScored) / 2);\n    // }\n\n    // if (finalAwayGoals > formAway.avgScored + 2) {\n    //   finalAwayGoals = Math.round((finalAwayGoals + formAway.avgScored) / 2);\n    // }\n\n    // if (finalAwayGoals < 0) {\n    //   let difference = Math.abs(\n    //     parseFloat((await diff(0, finalAwayGoals)) / 2)\n    //   );\n    //   rawFinalHomeGoals = rawFinalHomeGoals + difference;\n    //   finalAwayGoals = 0;\n    // }\n\n    // if (finalHomeGoals < 0) {\n    //   let difference = Math.abs(\n    //     parseFloat((await diff(0, finalHomeGoals)) / 2)\n    //   );\n    //   rawFinalAwayGoals = rawFinalAwayGoals + difference;\n    //   finalHomeGoals = 0;\n    // }\n\n    if (match.status !== \"suspended\") {\n      if (finalHomeGoals > finalAwayGoals) {\n        match.prediction = \"homeWin\";\n        homePredictions = homePredictions + 1;\n        if (\n          formHome.lastGame === \"L\" ||\n          formHome.last2Points < 3 ||\n          formAway.last2Points > 4 ||\n          formHome.oddsReliabilityWin < 50\n        ) {\n          match.includeInMultis = false;\n        } else {\n          match.includeInMultis = true;\n        }\n      } else if (finalAwayGoals > finalHomeGoals) {\n        match.prediction = \"awayWin\";\n        awayPredictions = awayPredictions + 1;\n        if (\n          formAway.lastGame === \"L\" ||\n          formAway.last2Points < 3 ||\n          formHome.last2Points > 4 ||\n          formAway.oddsReliabilityWin < 50\n        ) {\n          match.includeInMultis = false;\n        } else {\n          match.includeInMultis = true;\n        }\n      } else if (finalHomeGoals === finalAwayGoals) {\n        match.prediction = \"draw\";\n        drawPredictions = drawPredictions + 1;\n      }\n    }\n\n    console.log(`drawPredictions: ${drawPredictions}`);\n\n    if (\n      (XGdifferential > 1 && match.prediction === \"homeWin\") ||\n      (XGdifferential < -1.6 && match.prediction === \"awayWin\")\n    ) {\n      match.XGdifferential = true;\n    } else {\n      match.XGdifferential = false;\n    }\n\n    if (\n      (pointsDiff10 > 1.2 && match.prediction === \"homeWin\") ||\n      (pointsDiff10 < -1.2 && match.prediction === \"awayWin\")\n    ) {\n      match.pointsDifferential = true;\n      match.pointsDifferentialValue = Math.abs(pointsDiff10);\n      match.pointsDifferentialValueRaw = parseFloat(pointsDiff10);\n    } else {\n      match.pointsDiff10 = false;\n      match.pointsDifferentialValue = Math.abs(pointsDiff10);\n      match.pointsDifferentialValueRaw = parseFloat(pointsDiff10);\n    }\n\n    let rollingGoalDiffDifferential = await diff(\n      formHome.rollingAverageGoalsDifferential,\n      formAway.rollingAverageGoalsDifferential\n    );\n\n    if (\n      (rollingGoalDiffDifferential > 1.5 && match.prediction === \"homeWin\") ||\n      (rollingGoalDiffDifferential < -1.5 && match.prediction === \"awayWin\")\n    ) {\n      match.rollingGoalDiff = true;\n      match.rollingGoalDiffValue = rollingGoalDiffDifferential;\n    } else {\n      match.rollingGoalDiff = false;\n      match.rollingGoalDiffValue = rollingGoalDiffDifferential;\n    }\n\n    let dangerousAttacksDifferential = await diff(\n      formHome.AverageDangerousAttacksOverall,\n      formAway.AverageDangerousAttacksOverall\n    );\n\n    if (\n      (dangerousAttacksDifferential > 20 && match.prediction === \"homeWin\") ||\n      (dangerousAttacksDifferential < -20 && match.prediction === \"awayWin\")\n    ) {\n      match.dangerousAttacksDiff = true;\n      match.dangerousAttacksDiffValue = dangerousAttacksDifferential;\n    } else {\n      match.dangerousAttacksDiff = false;\n      match.dangerousAttacksDiffValue = dangerousAttacksDifferential;\n    }\n\n    switch (true) {\n      case match.status !== \"complete\":\n        break;\n      case match.homeGoals > match.awayGoals:\n        match.winner = match.homeTeam;\n        match.outcome = \"homeWin\";\n        homeOutcomes = homeOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formHome.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formAway.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formHome.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formAway.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formHome.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formAway.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formHome.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formAway.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += homeOdds;\n        sumOddsLoss = sumOddsLoss += awayOdds;\n        sumXGForWin = sumXGForWin += formHome.XGOverall;\n        sumXGForLoss = sumXGForLoss += formAway.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formHome.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formAway.XGAgainstAvgOverall;\n        break;\n      case match.homeGoals === match.awayGoals:\n        match.winner = \"draw\";\n        match.outcome = \"draw\";\n        allOutcomes = allOutcomes + 1;\n        allDrawOutcomes = allDrawOutcomes + 1;\n        break;\n      case match.homeGoals < match.awayGoals:\n        match.winner = match.awayTeam;\n        match.outcome = \"awayWin\";\n        allOutcomes = allOutcomes + 1;\n        awayOutcomes = awayOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formAway.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formHome.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formAway.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formHome.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formAway.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formHome.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formAway.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formHome.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += awayOdds;\n        sumOddsLoss = sumOddsLoss += homeOdds;\n        sumXGForWin = sumXGForWin += formAway.XGOverall;\n        sumXGForLoss = sumXGForLoss += formHome.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formAway.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formHome.XGAgainstAvgOverall;\n        break;\n      default:\n        break;\n    }\n\n    console.log(`allDrawOutcomes: ${allDrawOutcomes}`);\n\n    if (match.status === \"complete\") {\n      if (match.prediction === match.outcome) {\n        match.predictionOutcome = \"Won\";\n        winAmount = winAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      } else if (match.prediction !== match.outcome) {\n        match.predictionOutcome = \"Lost\";\n        lossAmount = lossAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      }\n    }\n\n    if (match.status === \"complete\") {\n      if (match.homeGoals + match.awayGoals > 2) {\n        match.over25PredictionOutcome = \"Won\";\n      } else {\n        match.over25PredictionOutcome = \"Lost\";\n      }\n    }\n\n    if (\n      match.status === \"complete\" &&\n      match.homeGoals > 0 &&\n      match.awayGoals > 0\n    ) {\n      match.bttsOutcome = \"bttsWon\";\n    } else {\n      match.bttsOutcome = \"bttsLost\";\n    }\n\n    match.formHome = formHome;\n    match.formAway = formAway;\n\n    // formObjectHome = formHome;\n    // formObjectAway = formAway;\n\n    // console.log(formObjectHome)\n    // console.log(formObjectAway)\n\n    let total = parseInt(finalHomeGoals + finalAwayGoals);\n    totalGoals = totalGoals + total;\n\n    let total2 = parseInt(match.homeGoals + match.awayGoals);\n    totalGoals2 = totalGoals2 + total2;\n\n    numberOfGames = numberOfGames + 1;\n\n    if (finalHomeGoals < 0) {\n      finalHomeGoals = 0;\n    }\n\n    if (finalAwayGoals < 0) {\n      finalAwayGoals = 0;\n    }\n\n    if (match.status === \"suspended\") {\n      finalHomeGoals = \"P\";\n      finalAwayGoals = \"P\";\n    }\n\n    if (\n      finalHomeGoals > finalAwayGoals &&\n      (match.homeOdds < rangeValue[0] || match.homeOdds > rangeValue[1])\n    ) {\n      match.omit = true;\n    } else if (\n      finalAwayGoals > finalHomeGoals &&\n      (match.awayOdds < rangeValue[0] || match.awayOdds > rangeValue[1])\n    ) {\n      match.omit = true;\n    } else if (\n      finalHomeGoals === finalAwayGoals &&\n      (match.drawOdds < rangeValue[0] || match.drawOdds > rangeValue[1])\n    ) {\n      match.omit = true;\n    }\n\n    const last10PointDiffHomePerspective = Math.abs(\n      formHome.last10Points - formAway.last10Points\n    );\n\n    const last10PointDiffAwayPerspective = Math.abs(\n      formAway.last10Points - formHome.last10Points\n    );\n\n    const XGDiffBetweenTeamsHomePerspective = Math.abs(\n      formHome.XGDiffNonAverage - formAway.XGDiffNonAverage\n    );\n    const XGDiffBetweenTeamsAwayPerspective = Math.abs(\n      formAway.XGDiffNonAverage - formHome.XGDiffNonAverage\n    );\n\n    match.goalDiffHomeOrAwayComparison =\n      parseFloat(formHome.goalDifferenceHomeOrAway) -\n      parseFloat(formAway.goalDifferenceHomeOrAway);\n\n    match.goalDifferenceComparison =\n      parseFloat(formHome.goalDifference) - parseFloat(formAway.goalDifference);\n\n    switch (true) {\n      case finalHomeGoals > finalAwayGoals:\n        if (minimumXG !== 0 && XGDiffBetweenTeamsHomePerspective < minimumXG) {\n          match.omit = true;\n        }\n        if (\n          minimumLast10 !== 0 &&\n          last10PointDiffHomePerspective < minimumLast10\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGDHorA !== 0 &&\n          match.goalDiffHomeOrAwayComparison < minimumGDHorA\n        ) {\n          match.omit = true;\n        }\n        if (minimumGD !== 0 && match.goalDifferenceComparison < minimumGD) {\n          match.omit = true;\n        }\n        break;\n      case finalHomeGoals < finalAwayGoals:\n        if (minimumXG !== 0 && XGDiffBetweenTeamsAwayPerspective < minimumXG) {\n          match.omit = true;\n        }\n        if (\n          minimumLast10 !== 0 &&\n          last10PointDiffAwayPerspective < minimumLast10\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGDHorA !== 0 &&\n          Math.abs(match.goalDiffHomeOrAwayComparison) < minimumGDHorA\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGD !== 0 &&\n          Math.abs(match.goalDifferenceComparison) < minimumGD\n        ) {\n          match.omit = true;\n        }\n        break;\n      case finalHomeGoals === finalAwayGoals:\n        if (\n          minimumXG !== 0 &&\n          Math.abs(XGDiffBetweenTeamsHomePerspective) < minimumXG\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumLast10 !== 0 &&\n          last10PointDiffHomePerspective < minimumLast10\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGDHorA !== 0 &&\n          Math.abs(match.goalDiffHomeOrAwayComparison) < minimumGDHorA\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGD !== 0 &&\n          Math.abs(match.goalDifferenceComparison) < minimumGD\n        ) {\n          match.omit = true;\n        }\n        break;\n      default:\n        break;\n    }\n\n    // if (\n    //   match.game_week < 4\n    //   // match.omit === true\n    //   // match.game_week < 3 &&\n    // ) {\n    //   finalHomeGoals = \"-\";\n    //   finalAwayGoals = \"-\";\n    //   match.status = \"notEnoughData\";\n    // }\n\n    return [\n      finalHomeGoals,\n      finalAwayGoals,\n      rawFinalHomeGoals,\n      rawFinalAwayGoals,\n    ];\n  } else {\n    finalHomeGoals = \"\";\n    finalAwayGoals = \"\";\n    rawFinalHomeGoals = \"\";\n    rawFinalAwayGoals = \"\";\n    match.status = \"notEnoughData\";\n    match.profit = 0;\n  }\n\n  return [finalHomeGoals, finalAwayGoals, rawFinalHomeGoals, rawFinalAwayGoals];\n}\n\nasync function getSuccessMeasure(fixtures) {\n  let sumProfit = 0;\n  let investment = 0;\n  let exactScores = 0;\n  let successCount = 0;\n  let profit = 0;\n  let netProfit = 0;\n\n  // await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}tips/${dateStamp}`, {\n  //   method: \"PUT\",\n  //   headers: {\n  //     Accept: \"application/json\",\n  //     \"Content-Type\": \"application/json\",\n  //   },\n  //   body: JSON.stringify(matches)\n  // })\n\n  for (let i = 0; i < fixtures.length; i++) {\n    if (\n      fixtures[i].status === \"complete\" &&\n      fixtures[i].hasOwnProperty(\"prediction\") &&\n      fixtures[i].omit !== true\n    ) {\n      sumProfit = sumProfit + fixtures[i].profit;\n      investment = investment + 1;\n      netProfit = (sumProfit - investment).toFixed(2);\n      profit = parseFloat(netProfit);\n      if (fixtures[i].exactScore === true) {\n        exactScores = exactScores + 1;\n      }\n      if (fixtures[i].predictionOutcome === \"Won\") {\n        successCount = successCount + 1;\n      }\n    }\n  }\n\n  totalInvestment = totalInvestment + investment;\n  totalProfit = totalProfit + profit;\n  let ROI = (profit / investment) * 100;\n  totalROI = (totalProfit / totalInvestment) * 100;\n  console.log(`Total Profit : ${totalProfit}`);\n  console.log(`Total Investment : ${totalInvestment}`);\n  console.log(`Total ROI : ${totalROI}`);\n  var operand = ROI >= 0 ? \"+\" : \"\";\n  var operandTwo = totalROI >= 0 ? \"+\" : \"\";\n  let exactScoreHitRate = ((exactScores / investment) * 100).toFixed(1);\n  let successRate = ((successCount / investment) * 100).toFixed(1);\n\n  if (investment > 0) {\n    ReactDOM.render(\n      <Fragment>\n        <Div\n          className={\"SuccessMeasure\"}\n          text={`ROI for \n            all ${investment} W/D/W \n            outcomes: ${operand} ${ROI.toFixed(2)}%`}\n        />\n        <p>{`Correct W/D/W predictions: ${successCount} (${successRate}%)`}</p>\n        <p>{`Exact scores predicted: ${exactScores} (${exactScoreHitRate}%)`}</p>\n        <Div\n          className={\"SuccessMeasure\"}\n          text={`Cumalative ROI for \n            all ${totalInvestment} match outcomes: ${operandTwo} ${totalROI.toFixed(\n            2\n          )}%`}\n        />\n      </Fragment>,\n      document.getElementById(\"successMeasure2\")\n    );\n  } else {\n    return;\n  }\n}\n\nexport var tips = [];\nexport var allTips = [];\nlet allTipsSorted = [];\nvar newArray = [];\nvar bestBets = [];\nvar price;\nvar Over25Tips = [];\nvar XGDiffTips = [];\nvar rollingDiffTips = [];\nvar dangerousAttacksDiffTips = [];\nvar pointsDiffTips = [];\nvar combinations;\nvar exoticArray = [];\nvar gamesInExotic;\nvar minimumExotic;\nvar exoticStake;\nvar exoticString;\nvar bttsArray = [];\nvar accumulatedOdds = 1;\nlet predictions = [];\n\nexport async function getNewTips(array) {\n  // allTips = [];\n  newArray = [];\n  accumulatedOdds = 1;\n\n  if (array.length > 1 && incrementValue > 0) {\n    array.forEach((tip) => {\n      if (\n        array.indexOf(tip) < incrementValue\n        // tip.goalDifferential >= incrementValue && tip.comparisonScore > 0\n      ) {\n        newArray.push(tip);\n        accumulatedOdds = parseFloat(accumulatedOdds) * parseFloat(tip.rawOdds);\n      }\n    });\n  }\n  await renderTips(newArray);\n}\n\nexport async function getScorePrediction(day, mocked) {\n  let mock = mocked;\n  clicked = true;\n  tips = [];\n  bestBets = [];\n  // price = 0\n  bttsArray = [];\n  Over25Tips = [];\n  XGDiffTips = [];\n  pointsDiffTips = [];\n  rollingDiffTips = [];\n  dangerousAttacksDiffTips = [];\n  allTips = [];\n\n  let index = 2;\n  let divider = 10;\n\n  ReactDOM.render(<div></div>, document.getElementById(\"GeneratePredictions\"));\n\n  await Promise.all(\n    matches.map(async (match) => {\n      // if there are no stored predictions, calculate them based on live data\n      if (match) {\n        switch (true) {\n          case match.status === \"canceled\":\n            match.goalsA = \"P\";\n            match.goalsB = \"P\";\n            match.completeData = false;\n            await calculateScore(match, index, divider, false);\n            break;\n          case match.leagueID === 6935 ||\n            match.leagueID === 7061 ||\n            (match.game_week < 3 && match.game_week !== 0):\n            match.goalsA = \"x\";\n            match.goalsB = \"x\";\n            match.completeData = false;\n            await calculateScore(match, index, divider, true);\n            break;\n          default:\n            [\n              match.goalsA,\n              match.goalsB,\n              match.unroundedGoalsA,\n              match.unroundedGoalsB,\n              match.completeData = true,\n            ] = await calculateScore(match, index, divider, true);\n            break;\n        }\n      } else {\n        [\n          match.goalsA,\n          match.goalsB,\n          match.unroundedGoalsA,\n          match.unroundedGoalsB,\n        ] = await calculateScore(match, index, divider, true);\n      }\n\n      await getBTTSPotential(\n        match,\n        match.goalsA,\n        match.goalsB,\n        match.unroundedGoalsA,\n        match.unroundedGoalsB\n      );\n\n      let predictionObject;\n      let Over25PredictionObject;\n      let XGPredictionObject;\n      let pointsDiffObject;\n      let rollingDiffObject;\n      let dangerousAttacksDiffObject;\n\n      if (match.status === \"complete\" && match.prediction) {\n        match.outcomeSymbol =\n          match.predictionOutcome === \"Won\" ? \"\\u2714\" : \"\\u2718\";\n        match.over25PredictionOutcomeSymbol =\n          match.over25PredictionOutcome === \"Won\" ? \"\\u2714\" : \"\\u2718\";\n        match.bttsOutcomeSymbol =\n          match.bttsOutcome === \"bttsWon\" ? \"\\u2714\" : \"\\u2718\";\n      } else {\n        match.outcomeSymbol = \"\";\n        match.over25PredictionOutcomeSymbol = \"\";\n        match.bttsOutcomeSymbol = \"\";\n      }\n\n      //STICK\n\n      if (\n        match.unroundedGoalsA - match.unroundedGoalsB > 0.65 &&\n        match.homeOdds !== 0 &&\n        match.fractionHome !== \"N/A\" &&\n        match.includeInMultis !== false &&\n        match.omit !== true\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.status !== \"notEnoughData\" &&\n          match.homeOdds < 3\n        ) {\n          predictionObject = {\n            team: `${match.homeTeam} to win`,\n            game:\n              match.status === \"complete\"\n                ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n                : match.game,\n            odds: match.fractionHome,\n            rawOdds: match.homeOdds,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            outcome: match.predictionOutcome,\n            outcomeSymbol: match.outcomeSymbol,\n            goalDifferential: parseFloat(\n              await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n            ),\n            experimentalCalc: (\n              (match.unroundedGoalsA - match.unroundedGoalsB) *\n              Math.abs(match.teamComparisonScore)\n            ).toFixed(2),\n            XGdifferentialValue: parseFloat(match.XGdifferentialValue),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formHome.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n\n            if (\n              match.unroundedGoalsA - match.unroundedGoalsB >\n              incrementValue\n            ) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      } else if (\n        match.unroundedGoalsB - match.unroundedGoalsA > 1.75 &&\n        match.awayOdds !== 0 &&\n        match.fractionAway !== \"N/A\" &&\n        match.includeInMultis !== false &&\n        match.omit !== true\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.status !== \"notEnoughData\" &&\n          match.awayOdds < 3.5\n        ) {\n          predictionObject = {\n            team: `${match.awayTeam} to win`,\n            game:\n              match.status === \"complete\"\n                ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n                : match.game,\n            rawOdds: match.awayOdds,\n            odds: match.fractionAway,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            outcome: match.predictionOutcome,\n            outcomeSymbol: match.outcomeSymbol,\n            goalDifferential:\n              parseFloat(\n                await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n              ) - 1,\n            experimentalCalc: (\n              (match.unroundedGoalsB - match.unroundedGoalsA) *\n              Math.abs(match.teamComparisonScore)\n            ).toFixed(2),\n            XGdifferentialValue: parseFloat(match.XGdifferentialValue),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formAway.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n            if (match.unroundedGoalsB - match.unroundedGoalsA > 2) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      }\n\n      if (\n        match.btts === true &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\" &&\n        match.status !== \"notEnoughData\"\n      ) {\n        bttsArray.push(match);\n      }\n      if (\n        match.unroundedGoalsA + match.unroundedGoalsB > 4 &&\n        match.goalsA + match.goalsB > 2 &&\n        match.GoalsInGamesAverageHome > 3 &&\n        match.GoalsInGamesAverageAway > 3\n      ) {\n        Over25PredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: match.homeTeam,\n          decimalOdds: match.homeDoubleChance,\n          rawOdds: match.over25Odds,\n          odds: match.over25Odds,\n          comparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.over25PredictionOutcomeSymbol,\n          doubleChanceOutcome: match.over25PredictionOutcome,\n          goalTotalUnrounded: match.unroundedGoalsA + match.unroundedGoalsB,\n        };\n        Over25Tips.push(Over25PredictionObject);\n      }\n\n      if (\n        match.XGdifferential === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        XGPredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          XGdifferentialValue: match.XGdifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        XGDiffTips.push(XGPredictionObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        XGPredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          XGdifferentialValue: match.XGdifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        XGDiffTips.push(XGPredictionObject);\n      }\n\n      if (\n        match.pointsDifferential === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        pointsDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          pointsDifferentialValue: match.pointsDifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        pointsDiffTips.push(pointsDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        pointsDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          pointsDifferentialValue: match.pointsDifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        pointsDiffTips.push(pointsDiffObject);\n      }\n\n      if (\n        match.rollingGoalDiff === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        rollingDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        rollingDiffTips.push(rollingDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        rollingDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        rollingDiffTips.push(rollingDiffObject);\n      }\n\n      if (\n        match.dangerousAttacksDiff === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        dangerousAttacksDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        dangerousAttacksDiffTips.push(dangerousAttacksDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        dangerousAttacksDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        dangerousAttacksDiffTips.push(dangerousAttacksDiffObject);\n      }\n\n      predictions.push(match);\n    })\n  );\n  ReactDOM.render(\n    <RenderAllFixtures matches={matches} result={true} bool={mock} />,\n    document.getElementById(\"FixtureContainer\")\n  );\n  await getSuccessMeasure(matches);\n  await getMultis();\n  await getNewTips(allTipsSorted);\n\n  // await renderTips();\n}\n\nasync function getMultis() {\n  allTipsSorted = allTips.sort(function (a, b) {\n    return b.goalDifferential - a.goalDifferential;\n  });\n\n  bestBets.sort(function (a, b) {\n    if (a.goalDifferential === b.goalDifferential) {\n      return b.comparisonScore - a.comparisonScore;\n    } else {\n      return b.goalDifferential > a.goalDifferential ? 1 : -1;\n    }\n  });\n\n  bttsArray.sort(function (a, b) {\n    return b.combinedBTTS - a.combinedBTTS;\n  });\n\n  Over25Tips.sort(function (a, b) {\n    return b.goalTotalUnrounded - a.goalTotalUnrounded;\n  });\n\n  XGDiffTips.sort(function (a, b) {\n    return Math.abs(b.XGdifferentialValue) - Math.abs(a.XGdifferentialValue);\n  });\n\n  pointsDiffTips.sort(function (a, b) {\n    return (\n      Math.abs(b.pointsDifferentialValue) - Math.abs(a.pointsDifferentialValue)\n    );\n  });\n\n  rollingDiffTips.sort(function (a, b) {\n    return Math.abs(b.rollingGoalDiffValue) - Math.abs(a.rollingGoalDiffValue);\n  });\n\n  dangerousAttacksDiffTips.sort(function (a, b) {\n    return (\n      Math.abs(b.dangerousAttacksDiffValue) -\n      Math.abs(a.dangerousAttacksDiffValue)\n    );\n  });\n\n  exoticArray = [];\n  gamesInExotic = 0;\n  exoticStake = 0;\n  exoticString = \"\";\n\n  switch (true) {\n    case allTips.length >= 10:\n      for (let i = 0; i < 10; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 10;\n      minimumExotic = 8;\n      exoticStake = 0.1;\n      exoticString = \"45 8-folds, 10 9-folds and 1 10-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 9:\n      for (let i = 0; i < 9; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 9;\n      minimumExotic = 7;\n      exoticStake = 0.1;\n      exoticString = \"36 7-folds, 9 8-folds and 1 9-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 8:\n      for (let i = 0; i < 8; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 8;\n      minimumExotic = 6;\n      exoticStake = 0.1;\n      exoticString = \"28 6-folds, 8 7-folds and 1 8-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 7:\n      for (let i = 0; i < 7; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 7;\n      minimumExotic = 6;\n      exoticStake = 1;\n      exoticString = \"7 6-folds and 1 7-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 6:\n      for (let i = 0; i < 6; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 6;\n      minimumExotic = 5;\n      exoticStake = 1;\n      exoticString = \"6 5-folds and 1 6-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 5:\n      for (let i = 0; i < 5; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 5;\n      minimumExotic = 4;\n      exoticStake = 1;\n      exoticString = \"5 4-folds and 1 5-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case Over25Tips.length >= 4:\n      for (let i = 0; i < 4; i++) {\n        let game = Over25Tips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 4;\n      minimumExotic = 3;\n      exoticStake = 1;\n      exoticString = \"4 3-folds and 1 4-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    default:\n      break;\n  }\n}\n\nexport function getAccumulatorPrice(priceArray) {\n  var result = 1;\n  for (var i = 0; i < priceArray.length; i++)\n    result = result * priceArray[i].rawOdds;\n\n  return result;\n}\n\nexport function getCoverBetMaxReturns(priceArray, minAccSize, stake) {\n  var total = 0;\n  combinations = 0;\n\n  for (var i = minAccSize; i <= priceArray.length; i++) {\n    var perms = getUniquePermutations(priceArray, i);\n    combinations = combinations + perms.length;\n\n    for (var j = 0; j < perms.length; j++)\n      total += getAccumulatorPrice(perms[j]) * stake;\n  }\n  return parseFloat(total.toFixed(2));\n}\n\nfunction getUniquePermutations(arr, permLength) {\n  if (arr.length <= permLength) return [arr];\n\n  var permutations = [];\n  var newArr = [];\n\n  newArr = arr.slice(0);\n\n  for (var i = 0; i < arr.length; i++) {\n    newArr = arr.slice(0);\n    newArr.splice(i, 1);\n    permutations = twoDimArrayUnion(\n      permutations,\n      getUniquePermutations(newArr, permLength)\n    );\n  }\n  return permutations;\n}\n\nfunction twoDimArrayUnion(arr1, arr2) {\n  for (var i = 0; i < arr2.length; i++) {\n    var duplicate = false;\n\n    for (var j = 0; j < arr1.length; j++)\n      if (arr1[j].length === arr2[i].length)\n        for (var k = 0; k < arr1[j].length; k++)\n          if (arr1[j][k] !== arr2[i][k]) break;\n          else if (k === arr1[j].length - 1) duplicate = true;\n\n    if (!duplicate) arr1.push(arr2[i]);\n  }\n\n  return arr1;\n}\n\nfunction NewlineText(props) {\n  const text = props.text;\n  const newText = text.split(\"\\n\").map((str) => <p>{str}</p>);\n\n  return newText;\n}\n\nasync function renderTips() {\n  if (newArray.length > 0) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <div className=\"BestPredictionsExplainer\">\n                  Add or remove a selection using the buttons below. Predictions\n                  are ordered by confidence in the outcome.\n                </div>\n                {newArray.map((tip) => (\n                  <li key={`${tip.game}acca`}>\n                    <div>\n                      {tip.team}: {tip.odds}{\" \"}\n                      <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                    </div>\n                    <div className=\"TipGame\">{tip.game}</div>\n                  </li>\n                ))}\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  No games fit the criteria\n                </h4>\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  }\n\n  if (exoticArray.length > 4) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Exotic of the day\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  <NewlineText\n                    text={`${gamesInExotic} games: ${exoticString}\\nStake per multi: ${exoticStake} units - ${combinations} combinations\\nTotal stake: ${(\n                      exoticStake * combinations\n                    ).toFixed(2)} unit(s)`}\n                  />\n                  {`Potential winnings: ${price.toFixed(2)} units`}\n                </h4>\n                {exoticArray.map((tip) => (\n                  <li key={tip.team}>\n                    {tip.team}: {tip.odds}{\" \"}\n                    <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                    <div>{tip.game}</div>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Exotic of the day\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  Not enough games for this feature\n                </h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  }\n\n  if (Over25Tips.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Over 2.5 goals tips\"}\n            element={\n              <ul className=\"LongshotPredictions\" id=\"LongshotPredictions\">\n                <h4>Over 2.5 goals</h4>\n                {Over25Tips.map((tip) => (\n                  <li key={tip.team}>\n                    {tip.game} - Odds: {tip.odds}{\" \"}\n                    <span className={`${tip.doubleChanceOutcome}`}>\n                      {tip.outcomeSymbol}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Over 2.5 goals tips\"}\n            element={\n              <ul className=\"LongshotPredictions\" id=\"LongshotPredictions\">\n                <h4>No games fit the criteria</h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  }\n\n  if (bttsArray.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"BTTS games\"}\n            element={\n              <ul className=\"BTTSGames\" id=\"BTTSGames\">\n                <h4>Games with highest chance of BTTS</h4>\n                {bttsArray.map((game) => (\n                  <li key={game.game}>\n                    {`${game.game} odds: ${game.bttsFraction}`}{\" \"}\n                    <span className={game.bttsOutcome}>\n                      {game.bttsOutcomeSymbol}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"BTTS games\"}\n            element={\n              <ul className=\"BTTSGames\" id=\"BTTSGames\">\n                <h4>No games fit the criteria</h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  }\n\n  ReactDOM.render(\n    <div>\n      <Collapsable\n        buttonText={\"XG tips\"}\n        element={\n          <Slider\n            element={\n              XGDiffTips.length > 0 ? (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>Games with greatest XG Differentials</h4>\n                  {XGDiffTips.map((tip) => (\n                    <li key={tip.game}>\n                      {tip.game} | {tip.prediction} {tip.odds}{\" \"}\n                      <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>Games with greatest XG Differentials</h4>\n                  <li key={\"noPPGDiff\"}>\n                    Sorry, no games fit this criteria today\n                  </li>\n                </ul>\n              )\n            }\n            element2={\n              pointsDiffTips.length > 0 ? (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest points per game differentials (last 10)\n                  </h4>\n                  {pointsDiffTips.map((game) => (\n                    <li key={game.game}>\n                      {game.game} | {game.prediction} {game.odds}{\" \"}\n                      <span className={game.outcome}>{game.outcomeSymbol}</span>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest points per game differentials (last 10)\n                  </h4>\n                  <li key={\"noPPGDiff\"}>\n                    Sorry, no games fit this criteria today\n                  </li>\n                </ul>\n              )\n            }\n            element3={\n              rollingDiffTips.length > 0 ? (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest rolling goal difference differentials\n                  </h4>\n                  {rollingDiffTips.map((game) => (\n                    <li key={game.game}>\n                      {game.game} | {game.prediction} {game.odds}{\" \"}\n                      <span className={game.outcome}>{game.outcomeSymbol}</span>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest rolling goal difference differentials\n                  </h4>\n                  <li key={\"noPPGDiff\"}>\n                    Sorry, no games fit this criteria today\n                  </li>\n                </ul>\n              )\n            }\n            element4={\n              dangerousAttacksDiffTips.length > 0 ? (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest average dangerous attacks differentials\n                  </h4>\n                  {dangerousAttacksDiffTips.map((game) => (\n                    <li key={game.game}>\n                      {game.game} | {game.prediction} {game.odds}{\" \"}\n                      <span className={game.outcome}>{game.outcomeSymbol}</span>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest average dangerous attacks differentials\n                  </h4>\n                  <li key={\"noPPGDiff\"}>\n                    Sorry, no games fit this criteria today\n                  </li>\n                </ul>\n              )\n            }\n            element5={\n              <div className=\"DonationButton\">\n                <h2>Help with running costs</h2>\n                <h4>\n                  Monthly costs are rising and each donation helps keep XG\n                  Tipping free to use\n                </h4>\n                <StyledKofiButton buttonText=\"No sign up donation\" />\n              </div>\n            }\n          ></Slider>\n        }\n      ></Collapsable>\n      <div className=\"FiltersSelected\">\n        <h4>Filters selected:</h4>\n        <ul className=\"FiltersSelectedList\">\n          <li>Minimum goal difference spread: {minimumGD}</li>\n          <li>\n            Minimum goal difference spread (home or away only): {minimumGDHorA}\n          </li>\n          <li>Minimum XG difference spread: {minimumXG}</li>\n          <li>Minimum PPG difference spread: {minimumLast10}</li>\n          <li>\n            Odds range: {rangeValue[0]} - {rangeValue[1]}\n          </li>\n        </ul>\n      </div>\n    </div>,\n    document.getElementById(\"insights\")\n  );\n}\n","import React, { useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Collapsable from \"../components/CollapsableElement\";\n// import TeamOfTheWeek from \"../components/TeamOfTheWeek\";\n// import TeamOfTheSeason from \"../components/TeamOfTheSeason\";\n\nexport var toggleState = false;\nexport var setIsOff = false;\n\nconst upArrow = \"\\u{25B2}\";\n\nconst StyledTableCell2 = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"rgba(226, 226, 226, 1)\",\n    color: \"white\",\n    padding: \"0.35em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    textAlign: \"left\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    fontSize: \"1.9em\",\n    textAlign: \"left\",\n    fontFamily: \"inherit\",\n    padding: \"0.5em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"#030061\",\n  },\n}))(TableCell);\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"white\",\n    color: \"#030061\",\n    padding: \"0.5em\",\n    paddingTop: \"1em\",\n    paddingBottom: \"1em\",\n    textAlign: \"center\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    // backgroundColor: \"#030061\",\n    fontSize: \"1.9em\",\n    textAlign: \"center\",\n    fontFamily: \"inherit\",\n    padding: \"0.35em\",\n    paddingTop: \"1em\",\n    paddingBottom: \"1em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"#030061\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#rgba(226, 226, 226, 0.424)\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#rgba(226, 226, 226, 1)\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\nfunction styleForm(formIndicator) {\n  let className;\n  if (formIndicator === \"W\") {\n    className = \"winLeague\";\n  } else if (formIndicator === \"D\") {\n    className = \"drawLeague\";\n  } else if (formIndicator === \"L\") {\n    className = \"lossLeague\";\n  }\n  return className;\n}\n\nexport default function LeagueTable(props) {\n  [toggleState, setIsOff] = useState(false);\n\n  let rows = props.Teams.map((team, i) => (\n    <StyledTableRow key={`${props.Key}row${i}`}>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${i + 1}`}\n      </StyledTableCell>\n      <StyledTableCell2 component=\"th\" scope=\"row\" style={{ width: \"15em\" }}>\n        {`${team.Name}`}\n      </StyledTableCell2>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Played}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Wins}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Draws}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Losses}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.For}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Against}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.GoalDifference}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Points}`}\n      </StyledTableCell>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ textAlign: \"center\" }}\n      >\n        <span className={styleForm(team.Form[0])}>\n          {team.Form[0] !== undefined ? team.Form[0] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[1])}>\n          {team.Form[1] !== undefined ? team.Form[1] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[2])}>\n          {team.Form[2] !== undefined ? team.Form[2] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[3])}>\n          {team.Form[3] !== undefined ? team.Form[3] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[4])}>\n          {team.Form[4] !== undefined ? team.Form[4] : \"\"}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  ));\n\n  const leagueResults = [];\n  let singleResult;\n  if (props.Results) {\n    props.Results.forEach((result) => {\n      singleResult = (\n        <div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_xg}</span>\n            <span className=\"column\">XG</span>\n            <span className=\"column\">{result.team_b_xg}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shots}</span>\n            <span className=\"column\">Shots</span>\n            <span className=\"column\">{result.team_b_shots}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shotsOnTarget}</span>\n            <span className=\"column\">SOT</span>\n            <span className=\"column\">{result.team_b_shotsOnTarget}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_dangerous_attacks}</span>\n            <span className=\"column\">Dangerous Attacks</span>\n            <span className=\"column\">{result.team_b_dangerous_attacks}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_possession}%</span>\n            <span className=\"column\">Possession</span>\n            <span className=\"column\">{result.team_b_possession}%</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_red_cards}</span>\n            <span className=\"column\">Red cards</span>\n            <span className=\"column\">{result.team_b_red_cards}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.odds_ft_1}</span>\n            <span className=\"column\">Odds (pre-match)</span>\n            <span className=\"column\">{result.odds_ft_2}</span>\n          </div>\n        </div>\n      );\n\n      leagueResults.push(\n        <Collapsable\n          classNameButton=\"ResultButton\"\n          buttonText={\n            <div className=\"ResultRowOverview\">\n              <div className=\"columnOverviewHome\">{result.home_name}</div>\n              <span className=\"columnOverviewScore\">\n                {result.homeGoalCount} : {result.awayGoalCount}\n              </span>\n              <div className=\"columnOverviewAway\">{result.away_name}</div>\n            </div>\n          }\n          element={singleResult}\n        />\n      );\n    });\n  }\n\n  const leagueResultsOlder = [];\n  if (props.LastWeeksResults) {\n    props.LastWeeksResults.forEach((result) => {\n      singleResult = (\n        <div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_xg}</span>\n            <span className=\"column\">XG</span>\n            <span className=\"column\">{result.team_b_xg}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shots}</span>\n            <span className=\"column\">Shots</span>\n            <span className=\"column\">{result.team_b_shots}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shotsOnTarget}</span>\n            <span className=\"column\">SOT</span>\n            <span className=\"column\">{result.team_b_shotsOnTarget}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_dangerous_attacks}</span>\n            <span className=\"column\">Dangerous Attacks</span>\n            <span className=\"column\">{result.team_b_dangerous_attacks}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_possession}</span>\n            <span className=\"column\">Possession</span>\n            <span className=\"column\">{result.team_b_possession}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_red_cards}</span>\n            <span className=\"column\">Red cards</span>\n            <span className=\"column\">{result.team_b_red_cards}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.odds_ft_1}</span>\n            <span className=\"column\">Odds (pre-match)</span>\n            <span className=\"column\">{result.odds_ft_2}</span>\n          </div>\n        </div>\n      );\n\n      leagueResultsOlder.push(\n        <Collapsable\n          classNameButton=\"ResultButton\"\n          buttonText={\n            <div className=\"ResultRowOverview\">\n              <div className=\"columnOverviewHome\">{result.home_name}</div>\n              <span className=\"columnOverviewScore\">\n                {result.homeGoalCount} : {result.awayGoalCount}\n              </span>\n              <div className=\"columnOverviewAway\">{result.away_name}</div>\n            </div>\n          }\n          element={singleResult}\n        />\n      );\n    });\n  }\n\n  function getTopScorersTeam(id) {\n    let found = props.Teams.find((team) => team.ID === id);\n    return found.Name;\n  }\n\n  async function sorted(league, value, order) {\n    let sortedByForm;\n    if (order === \"desc\") {\n      sortedByForm = league.sort((a, b) => b[value] - a[value]);\n    } else {\n      sortedByForm = league.sort((a, b) => a[value] - b[value]);\n    }\n    setIsOff(!toggleState);\n    return sortedByForm;\n  }\n\n  if (\n    props.GamesPlayed > 3 &&\n    props.Teams[0].LeagueID !== 7956 &&\n    props.Teams[0].LeagueID !== 6969 &&\n    props.Teams[0].LeagueID !== 11084\n  ) {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table\n            className=\"Table\"\n            aria-label=\"customized table\"\n            key={props.Key}\n            style={{ marginTop: \"2em\", marginBottom: \"1em\" }}\n          >\n            <TableHead>\n              <TableRow>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"Points\", \"desc\")}\n                  >\n                    Pts {upArrow}\n                  </button>\n                </td>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"LastXPoints\", \"desc\")}\n                  >\n                    Last 5 {upArrow}\n                  </button>\n                </td>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n          <h5>{`${props.mostRecentGameweek} results`}</h5>\n          <div className=\"ResultsList\" id=\"ResultsList\">\n            <ul>{leagueResults}</ul>\n          </div>\n          <div className=\"LeagueStatisticsHeader\">League Statistics</div>\n          {/* <TeamOfTheWeek></TeamOfTheWeek>\n          <TeamOfTheSeason></TeamOfTheSeason> */}\n          <div className=\"LeagueStatistics\">\n            <ul className=\"LeagueStatsColumn\">\n              <li>Average home goals: {props.Stats.seasonAVG_home}</li>\n              <li>Average away goals: {props.Stats.seasonAVG_away}</li>\n              <li>BTTS: {props.Stats.seasonBTTSPercentage}%</li>\n              <li>\n                Over 0.5 goals: {props.Stats.seasonOver05Percentage_overall}%\n              </li>\n              <li>\n                Over 1.5 goals: {props.Stats.seasonOver15Percentage_overall}%\n              </li>\n              <li>\n                Over 2.5 goals: {props.Stats.seasonOver25Percentage_overall}%\n              </li>\n              <li>\n                Over 3.5 goals: {props.Stats.seasonOver35Percentage_overall}%\n              </li>\n              <li>\n                Over 4.5 goals: {props.Stats.seasonOver45Percentage_overall}%\n              </li>\n            </ul>\n            <ul className=\"LeagueStatsColumn\">\n              <li>\n                Over 7.5 corners: {props.Stats.over75CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 8.5 corners: {props.Stats.over85CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 9.5 corners: {props.Stats.over95CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 10.5 corners:{\" \"}\n                {props.Stats.over105CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 11.5 corners:{\" \"}\n                {props.Stats.over115CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 12.5 corners:{\" \"}\n                {props.Stats.over125CornersPercentage_overall}%\n              </li>\n              <li>Corners average: {props.Stats.cornersAVG_overall}</li>\n              <li>Cards average: {props.Stats.cardsAVG_overall}</li>\n            </ul>\n            <ul className=\"TopScorersColumn\">\n              <h4>Top scorers</h4>\n              <li>\n                {props.Stats.top_scorers[0].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[0].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[0].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[1].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[1].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[1].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[2].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[2].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[2].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[3].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[3].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[3].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[4].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[4].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[4].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[5].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[5].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[5].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[6].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[6].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[6].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[7].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[7].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[7].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[8].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[8].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[8].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[9].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[9].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[9].goals_overall}\n              </li>\n            </ul>\n          </div>\n        </TableContainer>\n      );\n    }\n  } else if (props.Teams[0].LeagueID === 4340) {\n    return null;\n  } else {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table aria-label=\"customized table\" key={props.Key}>\n            <TableHead>\n              <TableRow>\n                <button\n                  className=\"SortedColumn\"\n                  style={{ textAlign: \"center\" }}\n                  onClick={() => sorted(props.Teams, \"Position\")}\n                >\n                  {upArrow}\n                </button>{\" \"}\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <StyledTableCell>Pts</StyledTableCell>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"LastXPoints\", \"desc\")}\n                  >\n                    Last 5 {upArrow}\n                  </button>\n                </td>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n        </TableContainer>\n      );\n    }\n  }\n}\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { orderedLeagues } from \"../App\";\nimport { getForm } from \"./getForm\";\nimport { Fixture } from \"../components/Fixture\";\nimport { Button } from \"../components/Button\";\nimport { Slide } from \"../components/Slider\";\nimport { getScorePrediction } from \"../logic/getScorePredictions\";\nimport { ThreeDots } from \"react-loading-icons\";\nimport { selectedOdds } from \"../components/OddsRadio\";\nimport LeagueTable from \"../components/LeagueTable\";\nimport { getPointsFromLastX } from \"../logic/getScorePredictions\";\nimport SlideDiff from \"../components/SliderDiff\";\nimport Collapsable from \"../components/CollapsableElement\";\n\nvar oddslib = require(\"oddslib\");\n\n// require(\"dotenv\").config();\n\nvar fixtureResponse;\nvar fixtureArray = [];\nexport var matches = [];\nexport var resultedMatches = [];\nexport let arrayOfGames = [];\n\nvar league;\nvar leagueID;\nvar leagueGames = [];\nexport var leagueArray = [];\nvar leagueIdArray = [];\nexport var leagueStatsArray = [];\nexport let leagueInstance;\nexport let groupInstance;\nexport let allLeagueResultsArrayOfObjects = [];\nvar lastThreeFormHome;\nvar lastThreeFormAway;\nvar lastFiveFormHome;\nvar lastFiveFormAway;\nvar lastSixFormHome;\nvar lastSixFormAway;\nvar lastTenFormHome;\nvar lastTenFormAway;\nvar leagueOrAll;\nvar formRunHome;\nvar formRunAway;\nlet WDLinLeagueHome;\nlet WDLinLeagueAway;\nlet HomeAverageGoals;\nlet homeAverageGoals;\nlet HomeAverageConceded;\nlet homeAverageConceded;\nlet AwayAverageGoals;\nlet awayAverageGoals;\nlet AwayAverageConceded;\nlet awayAverageConceded;\n\n// export var [currentDay, month, year] = new Date()\n//   .toLocaleDateString(\"en-US\", { timeZone: \"Europe/London\" })\n//   .split(\"/\");\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nexport let allForm = [];\nexport let tableArray = [];\nexport let worldCupArray = [];\ngroupInstance = [];\nleagueInstance = [];\n\nasync function convertTimestampForSofaScore(timestamp) {\n  let newDate = new Date(timestamp);\n\n  let year = newDate.getFullYear();\n  let month = String(newDate.getMonth() + 1).padStart(2, '0'); // Adding 1 to month because it is zero-based\n  let day = String(newDate.getDate()).padStart(2, '0');\n  \n  let converted = `${year}-${month}-${day}`;\n\n  return converted;\n}\n\nasync function convertTimestamp(timestamp) {\n  let newDate = new Date(timestamp);\n  let [day, month, year] = newDate.toLocaleDateString(\"en-US\").split(\"/\");\n\n  let converted = `${year}-${day}-${month}`;\n\n  return converted;\n}\n\n\nexport async function generateTables(a, leagueIdArray, allResults) {\n  // leagueIdArray = [];\n  tableArray = [];\n  worldCupArray = [];\n  let i = 0;\n  leagueArray.forEach(function (league) {\n    let currentLeagueId = leagueIdArray[i];\n    i++;\n    leagueInstance = [];\n    //Skip MLS which has a weird format\n    if (\n      !league.data.specific_tables[0].groups &&\n      currentLeagueId !== 6969 &&\n      league.data.specific_tables[0].table\n    ) {\n      for (\n        let index = 0;\n        index < league.data.specific_tables[0].table.length;\n        index++\n      ) {\n        let currentTeam = league.data.specific_tables[0].table[index];\n        let last5;\n        if (currentTeam.wdl_record.length < 5) {\n          last5 = currentTeam.wdl_record\n            .slice(`-${currentTeam.wdl_record.length}`)\n            .toUpperCase();\n        } else {\n          last5 = currentTeam.wdl_record.slice(-5).toUpperCase();\n        }\n\n        const team = {\n          LeagueID: currentLeagueId,\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          ID: currentTeam.id,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: last5,\n          LastXPoints: getPointsFromLastX(last5.split(\"\")),\n          Points: currentTeam.points,\n          wdl: currentTeam.wdl_record,\n          seasonGoals: currentTeam.seasonGoals,\n          seasonConceded: currentTeam.seasonConceded,\n        };\n        leagueInstance.push(team);\n      }\n      tableArray.push({ id: currentLeagueId, table: leagueInstance });\n    } else if (currentLeagueId === 11084) {\n      // for (let x = 0; x < league.data.specific_tables[0].groups.length; x++) {\n      // for (\n      //   let index = 0;\n      //   index < league.data.specific_tables[0].groups[x].table.length;\n      //   index++\n      // )\n      league.data.specific_tables[0].groups.forEach((group) => {\n        leagueInstance = [];\n        for (let index = 0; index < group.table.length; index++) {\n          let currentTeam = group.table[index];\n          let last5 = \"N/A\";\n          const team = {\n            LeagueID: currentLeagueId,\n            Position: index + 1,\n            Name: currentTeam.cleanName,\n            ID: currentTeam.id,\n            Played: currentTeam.matchesPlayed,\n            Wins: currentTeam.seasonWins_overall,\n            Draws: currentTeam.seasonDraws_overall,\n            Losses: currentTeam.seasonLosses_overall,\n            For: currentTeam.seasonGoals,\n            Against:\n              currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n            GoalDifference: currentTeam.seasonGoalDifference,\n            Form: last5,\n            LastXPoints: getPointsFromLastX(last5.split(\"\")),\n            Points: currentTeam.points,\n            wdl: currentTeam.wdl_record,\n            seasonGoals: currentTeam.seasonGoals,\n            seasonConceded: currentTeam.seasonConceded,\n          };\n          leagueInstance.push(team);\n        }\n        worldCupArray.push({\n          group: group.name,\n          table: leagueInstance,\n        });\n      });\n    } else if (league.data.league_table === null) {\n      for (\n        let index = 0;\n        index < league.data.all_matches_table_overall.length;\n        index++\n      ) {\n        let currentTeam = league.data.all_matches_table_overall[index];\n        let last5 = \"N/A\";\n        const team = {\n          LeagueID: currentLeagueId,\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          ID: currentTeam.id,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: last5,\n          LastXPoints: getPointsFromLastX(last5.split(\"\")),\n          Points: currentTeam.points,\n          wdl: currentTeam.wdl_record,\n          seasonGoals: currentTeam.seasonGoals,\n          seasonConceded: currentTeam.seasonConceded,\n        };\n        leagueInstance.push(team);\n      }\n\n      tableArray.push({ id: currentLeagueId, table: leagueInstance });\n    }\n  });\n}\n\nexport async function renderTable(index, results, id) {\n  let league;\n  //World cup table rendering\n\n  // let mostRecentGame = results.fixtures.pop();\n  let mostRecentGame = results.fixtures.pop();\n\n  let mostRecentGameweek = \"Latest\";\n\n  const gameweeksResults = results.fixtures.filter(\n    (games) => games.game_week === mostRecentGame.game_week\n  );\n\n  // const lastGameweeksResults = results.fixtures.filter(\n  //   (games) => games.game_week === mostRecentGameweek - 1\n  // );\n\n  const leagueTable = tableArray.filter((table) => table.id === id);\n\n  league = leagueTable[0].table;\n\n  let statistics;\n  let leagueStatistics = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}leagueStats/${id}`\n  );\n  await leagueStatistics.json().then((stats) => {\n    statistics = stats.data;\n  });\n\n  if (league !== undefined) {\n    ReactDOM.render(\n      <LeagueTable\n        Teams={league}\n        Stats={statistics}\n        Key={`League${index}`}\n        GamesPlayed={statistics.game_week}\n        Results={gameweeksResults}\n        mostRecentGameweek={mostRecentGameweek}\n      />,\n      document.getElementById(`leagueName${id}`)\n    );\n  }\n}\n\nasync function createFixture(match, result, mockBool) {\n  let roundedHomeOdds;\n  let roundedAwayOdds;\n  let roundedBTTSOdds;\n  let homeFraction;\n  let awayFraction;\n  let bttsFraction;\n\n  if (selectedOdds === \"Fractional odds\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      roundedHomeOdds = (Math.round(match.homeOdds * 5) / 5).toFixed(1);\n      roundedAwayOdds = (Math.round(match.awayOdds * 5) / 5).toFixed(1);\n\n      if (roundedHomeOdds < 1.1) {\n        roundedHomeOdds = 1.1;\n      }\n      if (roundedAwayOdds < 1.1) {\n        roundedAwayOdds = 1.1;\n      }\n\n      if (match.homeOdds === 0.1 && match.awayOdds === 0.1) {\n        match.homeOdds = 3;\n        roundedHomeOdds = 3;\n        match.awayOdds = 3;\n        roundedAwayOdds = 3;\n      }\n\n      try {\n        homeFraction = oddslib\n          .from(\"decimal\", roundedHomeOdds)\n          .to(\"fractional\", { precision: 1 });\n        awayFraction = oddslib\n          .from(\"decimal\", roundedAwayOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      roundedBTTSOdds = (Math.round(match.bttsOdds * 5) / 5).toFixed(1);\n\n      if (roundedBTTSOdds < 1.1) {\n        roundedBTTSOdds = 1.1;\n      }\n\n      try {\n        bttsFraction = oddslib\n          .from(\"decimal\", roundedBTTSOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  } else if (selectedOdds === \"Decimal odds\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      homeFraction = match.homeOdds;\n      awayFraction = match.awayOdds;\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      bttsFraction = match.bttsOdds;\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  }\n\n  match.omit = false;\n  match.homeTeamWinsPercentage = match.homeTeamWinPercentage;\n  match.homeTeamLossesPercentage = match.homeTeamLossPercentage;\n  match.homeTeamDrawsPercentage = match.homeTeamDrawPercentage;\n\n  match.awayTeamWinsPercentage = match.awayTeamWinPercentage;\n  match.awayTeamLossesPercentage = match.awayTeamLossPercentage;\n  match.awayTeamDrawsPercentage = match.awayTeamDrawPercentage;\n  match.fractionHome = homeFraction;\n  match.fractionAway = awayFraction;\n\n  match.bttsFraction = bttsFraction;\n\n  match.game = match.homeTeam + \" v \" + match.awayTeam;\n\n  // ReactDOM.render(\n  //   <Fixture\n  //     fixtures={matches}\n  //     result={result}\n  //     mock={mockBool}\n  //     className={\"individualFixture\"}\n  //   />,\n  //   document.getElementById(\"FixtureContainer\")\n  // );\n}\n\nexport function RenderAllFixtures(props) {\n  return (\n    <Fixture\n      fixtures={props.matches}\n      result={props.result}\n      mock={false}\n      className={\"individualFixture\"}\n    />\n  );\n}\n//     document.getElementById(\"FixtureContainer\")\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nlet isFunctionRunning = false;\n\nexport async function generateFixtures(\n  day,\n  date,\n  selectedOdds,\n  footyStatsFormattedDate,\n  current,\n  todaysDate,\n  dateSS\n) {\n  if (!isFunctionRunning) {\n    isFunctionRunning = true;\n    // const randomInt = Math.random() * 10\n\n    // if(randomInt >= 7){\n    //   alert(\"XGTipping is now serving over 2000 users a month,1 relying on donations to cover increasing running costs. If you can afford to do so and like what we do, please, help us stay subscription fee today by tapping to Donation button at the bottom of the page\")\n    // }\n\n    ReactDOM.render(\n      <div>\n        <div className=\"LoadingText\">\n          Loading all league, fixture & form data, please be patient...\n        </div>\n        <ThreeDots height=\"3em\" fill=\"#030061\" />\n      </div>,\n      document.getElementById(\"Loading\")\n    );\n\n    //cleanup if different day is selected\n    ReactDOM.render(\n      <div></div>,\n      document.getElementById(\"GeneratePredictions\")\n    );\n    ReactDOM.render(<div></div>, document.getElementById(\"successMeasure2\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"bestPredictions\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"exoticOfTheDay\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"insights\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"longShots\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"BTTS\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"draws\"));\n\n    const url = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${footyStatsFormattedDate}`;\n    const formUrl = `${process.env.REACT_APP_EXPRESS_SERVER}form/${date}`;\n\n    matches = [];\n    fixtureArray = [];\n\n    league = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${todaysDate}`\n    );\n\n    ReactDOM.render(<div></div>, document.getElementById(\"FixtureContainer\"));\n\n    fixtureResponse = await fetch(url);\n\n    await fixtureResponse.json().then((fixtures) => {\n      fixtureArray = Array.from(fixtures.data);\n    });\n\n    let form;\n    let formArray = [];\n    allForm = [];\n    var isFormStored;\n    var isStoredLocally;\n    var leaguesStored = false;\n    let storedForm = await fetch(formUrl);\n    if (storedForm.status === 201 || storedForm.status === 200) {\n      await storedForm.json().then((form) => {\n        formArray = Array.from(form.allForm);\n        isFormStored = true;\n        isStoredLocally = true;\n        allForm = formArray;\n      });\n    } else {\n      isFormStored = false;\n      isStoredLocally = false;\n    }\n\n    leagueIdArray = [];\n    for (let i = 0; i < orderedLeagues.length; i++) {\n      leagueID = orderedLeagues[i].element.id;\n      leagueIdArray.push(leagueID);\n    }\n\n    var leaguePositions = [];\n    leagueArray = [];\n\n    let allLeagueResults;\n\n    allLeagueResults = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}results`\n    );\n\n    if(league.status === 200){\n      leaguesStored = true;\n      console.log(\"leagues fetched from s3\")\n    }\n\n    if (league.status === 200 && allLeagueResults.status === 201) {\n      console.log(\"Not fetching leagues\");\n      await league.json().then((leagues) => {\n        leagueArray = Array.from(leagues.leagueArray);\n      });\n      updateResults(false);\n\n      await allLeagueResults.json().then((allGames) => {\n        allLeagueResultsArrayOfObjects = Array.from(allGames);\n      });\n\n      leaguesStored = true;\n      generateTables(\n        leagueArray,\n        leagueIdArray,\n        allLeagueResultsArrayOfObjects\n      );\n      arrayOfGames = []\n\n      const sofaScore = await fetch(`https://www.sofascore.com/api/v1/sport/football/scheduled-events/${dateSS}`)\n      await sofaScore.json().then((games) => {\n        games.events.forEach((game) => {\n          arrayOfGames.push({\n            homeTeam: game.homeTeam.name,\n            awayTeam: game.awayTeam.name,\n            id: game.id,\n            time: game.startTimestamp,\n            homeGoals: game.homeScore.display != undefined ? game.homeScore.display : \"-\",\n            awayGoals: game.awayScore.display != undefined ? game.awayScore.display : \"-\"\n          })\n        })\n      })\n\n      const sofaScoreLeagues = await fetch('')\n    } else {\n      allLeagueResultsArrayOfObjects = [];\n      console.log(\"Fetching leagues\");\n      for (let i = 0; i < orderedLeagues.length; i++) {\n        league = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}tables/${orderedLeagues[i].element.id}/${todaysDate}`\n        );\n        // eslint-disable-next-line no-loop-func\n        await league.json().then((table) => {\n          leagueArray.push(table);\n        });\n        leaguesStored = false;\n      }\n\n      //set variable for date X amount of days in the past and use that to filter the results\n\n      let startDate = (new Date().getTime() / 1000).toFixed(0);\n      // deduct 3 months\n      let targetDate = startDate - 23778463;\n\n      for (const orderedLeague of orderedLeagues) {\n        let fixtures = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${orderedLeague.element.id}`\n        );\n\n        let games = await fixtures.json();\n        let gamesFiltered;\n        let gamesShortened;\n        if (games.pager.current_page < games.pager.max_page) {\n          const page2 = await fetch(\n            `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${orderedLeague.element.id}&page=2`\n          );\n          let page2Data = await page2.json();\n\n          const gamesConcat = games.data.concat(page2Data.data);\n          const gamesConcatFiltered = gamesConcat.filter((game) => game.status === \"complete\");\n\n          let mostRecentResults = gamesConcatFiltered.filter(\n            (game) => game.date_unix > targetDate\n          );\n          let sorted = mostRecentResults.sort((a, b) => a.date_unix - b.date_unix);\n          gamesShortened = sorted.slice(-600);\n          gamesFiltered = gamesShortened;\n        } else {\n\n          gamesFiltered = games.data.filter(\n            (game) => game.status === \"complete\"\n          );\n\n          if (current) {\n            let mostRecentResults = gamesFiltered.filter(\n              (game) => game.date_unix > targetDate\n            );\n            gamesFiltered = mostRecentResults.slice(-600);\n          }\n        }\n\n        // let mostRecentResults = gamesFiltered.filter(\n        //   (game) => game.date_unix > targetDate\n        // );\n\n        const shortenedResults = gamesFiltered.map(\n          ({\n            home_name,\n            away_name,\n            homeGoalCount,\n            awayGoalCount,\n            date_unix,\n            team_a_xg,\n            team_b_xg,\n            odds_ft_1,\n            odds_ft_2,\n            team_a_shots,\n            team_b_shots,\n            team_a_corners,\n            team_b_corners,\n            team_a_shotsOnTarget,\n            team_b_shotsOnTarget,\n            team_a_red_cards,\n            team_b_red_cards,\n            team_a_possession,\n            team_b_possession,\n            team_a_dangerous_attacks,\n            team_b_dangerous_attacks,\n            pre_match_teamA_overall_ppg,\n            pre_match_teamB_overall_ppg,\n            game_week,\n          }) => ({\n            home_name,\n            away_name,\n            homeGoalCount,\n            awayGoalCount,\n            date_unix,\n            team_a_xg,\n            team_b_xg,\n            odds_ft_1,\n            odds_ft_2,\n            team_a_shots,\n            team_b_shots,\n            team_a_corners,\n            team_b_corners,\n            team_a_shotsOnTarget,\n            team_b_shotsOnTarget,\n            team_a_red_cards,\n            team_b_red_cards,\n            team_a_possession,\n            team_b_possession,\n            team_a_dangerous_attacks,\n            team_b_dangerous_attacks,\n            pre_match_teamA_overall_ppg,\n            pre_match_teamB_overall_ppg,\n            game_week,\n          })\n        );\n\n        let leagueObj = {\n          // leagueObject[orderedLeague] = {\n          name: orderedLeague.name,\n          id: orderedLeague.element.id,\n          fixtures: shortenedResults,\n        };\n\n        allLeagueResultsArrayOfObjects.push(leagueObj);\n      }\n      updateResults(true);\n      generateTables(\n        leagueArray,\n        leagueIdArray,\n        allLeagueResultsArrayOfObjects\n      );\n    }\n\n    let teamPositionPrefix;\n\n    async function getPrefix(position) {\n      switch (position) {\n        case 1:\n        case 21:\n        case 31:\n        case 41:\n          teamPositionPrefix = \"st\";\n          break;\n        case 2:\n        case 22:\n        case 32:\n        case 42:\n          teamPositionPrefix = \"nd\";\n          break;\n        case 3:\n        case 23:\n        case 33:\n        case 43:\n          teamPositionPrefix = \"rd\";\n          break;\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18:\n        case 19:\n        case 20:\n        case 24:\n        case 25:\n        case 26:\n        case 27:\n        case 28:\n        case 29:\n        case 30:\n        case 34:\n        case 35:\n        case 36:\n        case 37:\n        case 38:\n        case 39:\n        case 40:\n        case 44:\n        case 45:\n        case 46:\n        case 47:\n        case 48:\n          teamPositionPrefix = \"th\";\n          break;\n        default:\n          break;\n      }\n      return teamPositionPrefix;\n    }\n\n    for (let i = 0; i < leagueArray.length; i++) {\n      let leagueInstance;\n      let homeLeague;\n      let awayLeague;\n\n      if (leagueArray[i].data.league_table !== null) {\n        leagueInstance = leagueArray[i].data.league_table;\n        homeLeague = leagueArray[i].data.all_matches_table_home;\n        awayLeague = leagueArray[i].data.all_matches_table_away;\n      } else {\n        leagueInstance = leagueArray[i].data.all_matches_table_overall;\n        homeLeague = leagueArray[i].data.all_matches_table_home;\n        awayLeague = leagueArray[i].data.all_matches_table_away;\n      }\n\n      for (let x = 0; x < leagueInstance.length; x++) {\n        let regularSeason = leagueArray[i].data.specific_tables.find(\n          (season) =>\n            season.round === \"Regular Season\" ||\n            season.round === \"2024\" ||\n            season.round === \"2024/2025\" ||\n            season.round === \"Apertura\" ||\n            season.round === \"1st Phase\"\n          // season.round === \"North\" ||\n          // season.round === \"South\"\n        );\n        let string;\n\n        if (regularSeason !== undefined && regularSeason.table) {\n          string = regularSeason.table[x];\n          homeLeague = leagueArray[i].data.all_matches_table_home;\n          awayLeague = leagueArray[i].data.all_matches_table_away;\n        } else {\n          string = leagueArray[i].data.all_matches_table_overall[x];\n          homeLeague = leagueArray[i].data.all_matches_table_home;\n          awayLeague = leagueArray[i].data.all_matches_table_away;\n        }\n\n        let stringHome = homeLeague[x];\n        let stringAway = awayLeague[x];\n\n\n        if(string){\n          leaguePositions.push({\n            name: string.cleanName,\n            position: x + 1,\n            rawPosition: x + 1,\n            homeFormName: stringHome ? stringHome.cleanName : string.cleanName,\n            awayFormName: stringAway ? stringAway.cleanName : string.cleanName,\n            homeSeasonWinPercentage: stringHome\n              ? stringHome.seasonWins\n              : string.seasonWins,\n            awaySeasonWinPercentage: stringAway\n              ? stringAway.seasonWins\n              : string.seasonWins,\n            homeSeasonLossPercentage: stringHome\n              ? stringHome.seasonLosses_home\n              : string.seasonLosses_home,\n            awaySeasonLossPercentage: stringAway\n              ? stringAway.seasonLosses_away\n              : string.seasonLosses_away,\n            homeSeasonDrawPercentage: stringHome\n              ? stringHome.seasonDraws\n              : string.seasonDraws,\n            awaySeasonDrawPercentage: stringAway\n              ? stringAway.seasonDraws\n              : string.seasonDraws,\n            homeSeasonMatchesPlayed: stringHome\n              ? stringHome.matchesPlayed\n              : string.matchesPlayed,\n            awaySeasonMatchesPlayed: stringAway\n              ? stringAway.matchesPlayed\n              : string.matchesPlayed,\n            ppg: string.points / string.matchesPlayed,\n            wdl: string.wdl_record ? string.wdl_record : \"\",\n            played: string.matchesPlayed,\n            seasonGoals: string.seasonGoals,\n            seasonConceded: string.seasonConceded,\n          });\n        }\n      }\n    }\n\n    let previousLeagueName;\n\n    for (let i = 0; i < orderedLeagues.length; i++) {\n      leagueID = orderedLeagues[i].element.id;\n      leagueGames = fixtureArray.filter(\n        (game) => game.competition_id === orderedLeagues[i].element.id\n      );\n\n      for (const fixture of leagueGames) {\n        const unixTimestamp = fixture.date_unix;\n        const milliseconds = unixTimestamp * 1000;\n        const dateObject = new Date(milliseconds);\n\n        let match = {};\n        if (orderedLeagues[i].name !== previousLeagueName) {\n          match.leagueName = orderedLeagues[i].name;\n          match.leagueIndex = i;\n          match.leagueID = leagueID;\n        } else {\n          match.leagueName = null;\n          match.leagueIndex = i;\n          match.leagueID = leagueID;\n        }\n        match.id = fixture.id;\n        match.competition_id = fixture.competition_id;\n        match.date = fixture.date_unix;\n        match.time = dateObject.toLocaleString(\"en-GB\", {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n        });\n        match.homeTeam = fixture.home_name;\n        match.awayTeam = fixture.away_name;\n\n        match.homeOdds = +fixture.odds_ft_1.toFixed(2);\n        match.awayOdds = +fixture.odds_ft_2.toFixed(2);\n        match.drawOdds = +fixture.odds_ft_x.toFixed(2);\n        match.homeDoubleChance = fixture.odds_doublechance_1x;\n        match.awayDoubleChance = fixture.odds_doublechance_x2;\n        match.bttsOdds = fixture.odds_btts_yes;\n        match.homeId = fixture.homeID;\n        match.awayId = fixture.awayID;\n        match.form = [];\n        match.homeTeamInfo = [];\n        match.awayTeamInfo = [];\n        match.btts = false;\n\n        previousLeagueName = orderedLeagues[i].name;\n\n        let homeTeaminLeague;\n        let awayTeaminLeague;\n        let teamPositionHome;\n        let teamPositionHomeTable;\n        let teamPositionAwayTable;\n        let homeTeamWinPercentageHome;\n        let awayTeamWinPercentageAway;\n        let homeTeamLossPercentageHome;\n        let awayTeamLossPercentageAway;\n        let homeTeamDrawPercentageHome;\n        let awayTeamDrawPercentageAway;\n        let teamPositionAway;\n        let homePrefix;\n        let homePrefixHomeTable;\n        let awayPrefix;\n        let awayPrefixAwayTable;\n        let homeSeasonPPG;\n        let awaySeasonPPG;\n\n        try {\n          homeTeaminLeague = leaguePositions.find(\n            (team) => team.name === match.homeTeam\n          );\n\n          let homeTeaminHomeLeague = leaguePositions.find(\n            (team) => team.homeFormName === match.homeTeam\n          );\n          teamPositionHome = homeTeaminLeague.position;\n          teamPositionHomeTable = homeTeaminHomeLeague.position;\n\n          WDLinLeagueHome = Array.from(homeTeaminLeague.wdl.toUpperCase());\n          HomeAverageGoals =\n            homeTeaminLeague.seasonGoals / homeTeaminLeague.played;\n          HomeAverageConceded =\n            homeTeaminLeague.seasonConceded / homeTeaminLeague.played;\n\n          homeTeamWinPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonWinPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homeTeamLossPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonLossPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homeTeamDrawPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonDrawPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homePrefix = await getPrefix(teamPositionHome);\n          homePrefixHomeTable = await getPrefix(teamPositionHomeTable);\n\n          homeSeasonPPG = homeTeaminLeague.ppg.toFixed(2);\n        } catch (error) {\n          console.log(error);\n          teamPositionHome = \"N/A\";\n          homePrefix = \"\";\n          homePrefixHomeTable = \"\";\n          homeSeasonPPG = \"N/A\";\n          homeTeaminLeague = {\n            rawPosition: \"N/A\",\n          };\n          WDLinLeagueHome = \"N/A\";\n        }\n\n        try {\n          awayTeaminLeague = leaguePositions.find(\n            (team) => team.name === match.awayTeam\n          );\n\n          let awayTeaminAwayLeague = leaguePositions.find(\n            (team) => team.awayFormName === match.awayTeam\n          );\n\n          teamPositionAway = awayTeaminLeague.position;\n          teamPositionAwayTable = awayTeaminAwayLeague.position;\n\n          WDLinLeagueAway = Array.from(awayTeaminLeague.wdl.toUpperCase());\n          AwayAverageGoals =\n            awayTeaminLeague.seasonGoals / awayTeaminLeague.played;\n          AwayAverageConceded =\n            awayTeaminLeague.seasonConceded / awayTeaminLeague.played;\n\n          awayTeamWinPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonWinPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayTeamLossPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonLossPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayTeamDrawPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonDrawPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayPrefix = await getPrefix(teamPositionAway);\n          awayPrefixAwayTable = await getPrefix(teamPositionAwayTable);\n\n          awaySeasonPPG = awayTeaminLeague.ppg.toFixed(2);\n        } catch (error) {\n          console.log(error);\n          teamPositionAway = \"N/A\";\n          awayPrefix = \"\";\n          awaySeasonPPG = \"N/A\";\n          awayTeaminLeague = {\n            rawPosition: \"N/A\",\n          };\n          WDLinLeagueAway = \"N/A\";\n        }\n\n        if (!isFormStored) {\n          form = await getForm(match);\n\n          let homeFormString5 =\n            form[0].data[0].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString5 =\n            form[1].data[0].stats.additional_info.formRun_overall.toUpperCase();\n          let homeFormString6 =\n            form[0].data[1].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString6 =\n            form[1].data[1].stats.additional_info.formRun_overall.toUpperCase();\n          let homeFormString10 =\n            form[0].data[2].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString10 =\n            form[1].data[2].stats.additional_info.formRun_overall.toUpperCase();\n\n          let homeFormRun =\n            form[0].data[2].stats.additional_info.formRun_home.toUpperCase();\n          let awayFormRun =\n            form[1].data[2].stats.additional_info.formRun_away.toUpperCase();\n\n          if (WDLinLeagueHome.length >= 10) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = WDLinLeagueHome.slice(-6);\n            lastTenFormHome = WDLinLeagueHome.slice(-10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = WDLinLeagueAway.slice(-6);\n            lastTenFormAway = WDLinLeagueAway.slice(-10);\n            leagueOrAll = \"League\";\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else if (WDLinLeagueHome.length >= 6) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = WDLinLeagueHome.slice(-6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = WDLinLeagueAway.slice(-6);\n            lastTenFormAway = Array.from(awayFormString10);\n            leagueOrAll = \"League\";\n\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else if (WDLinLeagueHome.length >= 5) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = Array.from(homeFormString6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = Array.from(awayFormString6);\n            lastTenFormAway = Array.from(awayFormString10);\n            leagueOrAll = \"League\";\n\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else {\n            lastThreeFormHome = [\n              homeFormString5[2],\n              homeFormString5[3],\n              homeFormString5[4],\n            ];\n            lastFiveFormHome = Array.from(homeFormString5);\n            lastSixFormHome = Array.from(homeFormString6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = [\n              awayFormString5[2],\n              awayFormString5[3],\n              awayFormString5[4],\n            ];\n\n            lastFiveFormAway = Array.from(awayFormString5);\n            lastSixFormAway = Array.from(awayFormString6);\n            lastTenFormAway = Array.from(awayFormString10);\n\n            leagueOrAll = \"All\";\n\n            homeAverageGoals = undefined;\n            homeAverageConceded = undefined;\n            awayAverageGoals = undefined;\n            awayAverageConceded = undefined;\n          }\n\n          formRunHome = Array.from(homeFormRun);\n          formRunAway = Array.from(awayFormRun);\n\n          if (\n            teamPositionHome === 0 ||\n            form[0].data[0].season_format !== \"Domestic League\"\n          ) {\n            teamPositionHome = \"N/A\";\n            teamPositionHomeTable = \"N/A\";\n            homePrefix = \"\";\n            homePrefixHomeTable = \"\";\n          }\n\n          if (\n            teamPositionAway === 0 ||\n            form[0].data[0].season_format !== \"Domestic League\"\n          ) {\n            teamPositionAway = \"N/A\";\n            teamPositionAwayTable = \"N/A\";\n            awayPrefix = \"\";\n            awayPrefixAwayTable = \"\";\n          }\n\n          allForm.push({\n            id: match.id,\n            teamIDHome: match.homeId,\n            teamIDAway: match.awayId,\n            leagueId: leagueID,\n            home: {\n              teamName: match.homeTeam,\n              0: {\n                XGOverall: parseFloat(form[0].data[0].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[0].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[0].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[0].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[0].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[0].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[0].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[0].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[0].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[0].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[0].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[0].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[0].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[0].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[0].stats.shotsOnTargetAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[0].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[0].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[0].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[0].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[0].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[0].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[0].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[0].stats.seasonBTTSPercentage_home\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition: homeTeaminLeague.rawPosition !== undefined\n                  ? homeTeaminLeague.rawPosition\n                  : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n              1: {\n                XGOverall: parseFloat(form[0].data[1].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[1].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[1].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[1].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[1].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[1].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[1].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[1].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[1].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[1].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[1].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[1].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[1].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[1].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[1].stats.shotsOnTargetAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[1].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[1].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[1].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[1].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[1].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[1].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[1].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[1].stats.seasonBTTSPercentage_home\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition: homeTeaminLeague.rawPosition !== undefined\n                  ? homeTeaminLeague.rawPosition\n                  : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n              2: {\n                XGOverall: parseFloat(form[0].data[2].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[2].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[2].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[2].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[2].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[2].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[2].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[2].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[2].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[2].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[2].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[2].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[2].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[2].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[2].stats.shotsOnTargetAVG_home\n                ),\n                AverageShots: parseFloat(\n                  form[0].data[2].stats.shotsAVG_overall\n                ),\n                AverageShotsHomeOrAway: parseFloat(\n                  form[0].data[2].stats.shotsAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[2].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[2].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[2].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[2].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[2].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[2].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[2].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[2].stats.seasonBTTSPercentage_home\n                ),\n                lastThreeForm: lastThreeFormHome.reverse(),\n                LastFiveForm: lastFiveFormHome.reverse(),\n                LastSixForm: lastSixFormHome.reverse(),\n                LastTenForm: lastTenFormHome.reverse(),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition: homeTeaminLeague.rawPosition !== undefined\n                  ? homeTeaminLeague.rawPosition\n                  : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                SeasonPPG: homeSeasonPPG,\n                WinPercentage: homeTeamWinPercentageHome,\n                LossPercentage: homeTeamLossPercentageHome,\n                DrawPercentage: homeTeamDrawPercentageHome,\n                formRun: formRunHome,\n                goalDifference:\n                  form[0].data[2].stats.seasonGoalDifference_overall,\n                goalDifferenceHomeOrAway:\n                  form[0].data[2].stats.seasonGoalDifference_home,\n                BttsPercentage:\n                  form[0].data[2].stats.seasonBTTSPercentage_overall,\n                BttsPercentageHomeOrAway:\n                  form[0].data[2].stats.seasonBTTSPercentage_home,\n                CardsTotal: form[0].data[2].stats.cardsTotal_overall,\n                CornersAverage: form[0].data[2].stats.cornersAVG_overall,\n                ScoredBothHalvesPercentage:\n                  form[0].data[2].stats.scoredBothHalvesPercentage_overall,\n                LastMatch: await convertTimestamp(\n                  form[0].data[0].last_updated_match_timestamp\n                ),\n                WDLRecord: WDLinLeagueHome,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n            },\n            away: {\n              teamName: match.awayTeam,\n              0: {\n                XGOverall: parseFloat(form[1].data[0].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[0].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[0].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[0].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[0].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[0].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[0].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[0].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[0].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[0].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[0].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[0].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[0].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[0].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[0].stats.shotsOnTargetAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[0].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[0].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[0].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[0].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[0].stats.seasonBTTSPercentage_away\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n              1: {\n                XGOverall: parseFloat(form[1].data[1].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[1].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[1].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[1].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[1].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[1].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[1].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[1].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[1].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[1].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[1].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[1].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[1].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[1].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[1].stats.shotsOnTargetAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[1].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[1].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[1].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[1].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[1].stats.seasonBTTSPercentage_away\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n              2: {\n                XGOverall: parseFloat(form[1].data[2].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[2].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[2].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[2].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[2].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[2].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[2].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[2].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[2].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[2].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[2].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[2].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[2].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[2].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[2].stats.shotsOnTargetAVG_away\n                ),\n                AverageShots: parseFloat(\n                  form[1].data[2].stats.shotsAVG_overall\n                ),\n                AverageShotsHomeOrAway: parseFloat(\n                  form[1].data[2].stats.shotsAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[2].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[2].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[2].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[2].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[2].stats.seasonBTTSPercentage_away\n                ),\n                lastThreeForm: lastThreeFormAway.reverse(),\n                LastFiveForm: lastFiveFormAway.reverse(),\n                LastSixForm: lastSixFormAway.reverse(),\n                LastTenForm: lastTenFormAway.reverse(),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                SeasonPPG: awaySeasonPPG,\n                WinPercentage: awayTeamWinPercentageAway,\n                LossPercentage: awayTeamLossPercentageAway,\n                DrawPercentage: awayTeamDrawPercentageAway,\n                formRun: formRunAway,\n                goalDifference:\n                  form[1].data[2].stats.seasonGoalDifference_overall,\n                goalDifferenceHomeOrAway:\n                  form[1].data[2].stats.seasonGoalDifference_away,\n                BttsPercentage:\n                  form[1].data[2].stats.seasonBTTSPercentage_overall,\n                BttsPercentageHomeOrAway:\n                  form[1].data[2].stats.seasonBTTSPercentage_away,\n                CardsTotal: form[1].data[2].stats.cardsTotal_overall,\n                CornersAverage: form[1].data[2].stats.cornersAVG_overall,\n                ScoredBothHalvesPercentage:\n                  form[1].data[2].stats.scoredBothHalvesPercentage_overall,\n                LastMatch: await convertTimestamp(\n                  form[1].data[0].last_updated_match_timestamp\n                ),\n                WDLRecord: WDLinLeagueAway,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n            },\n          });\n        }\n\n        match.homeBadge = fixture.home_image;\n        match.awayBadge = fixture.away_image;\n\n        match.homePpg = fixture.home_ppg.toFixed(2);\n        match.awayPpg = fixture.away_ppg.toFixed(2);\n\n        match.lastFiveFormHome = lastFiveFormHome;\n        match.lastFiveFormAway = lastFiveFormAway;\n\n        match.homeRawPosition = homeTeaminLeague.rawPosition;\n        match.awayRawPosition = awayTeaminLeague.rawPosition;\n\n        match.homeTeamHomePosition = `${teamPositionHomeTable}${homePrefixHomeTable}`;\n        match.awayTeamAwayPosition = `${teamPositionAwayTable}${awayPrefixAwayTable}`;\n\n        match.homeTeamHomePositionRaw = teamPositionHomeTable;\n        match.awayTeamAwayPositionRaw = teamPositionAwayTable;\n\n        match.homeTeamWinPercentage = homeTeamWinPercentageHome;\n        match.awayTeamWinPercentage = awayTeamWinPercentageAway;\n\n        match.homeTeamLossPercentage = homeTeamLossPercentageHome;\n        match.awayTeamLossPercentage = awayTeamLossPercentageAway;\n\n        match.homeTeamDrawPercentage = homeTeamDrawPercentageHome;\n        match.awayTeamDrawPercentage = awayTeamDrawPercentageAway;\n        match.status = fixture.status;\n        match.over25Odds = fixture.odds_ft_over25;\n        match.btts_potential = fixture.btts_potential;\n        match.game = match.homeTeam + \" v \" + match.awayTeam;\n        match.stadium = fixture.stadium_name;\n        match.homeGoals = fixture.homeGoalCount;\n        match.awayGoals = fixture.awayGoalCount;\n\n        match.expectedGoalsHomeToDate = fixture.team_a_xg_prematch;\n        match.expectedGoalsAwayToDate = fixture.team_b_xg_prematch;\n        match.game_week = fixture.game_week;\n\n        if (match.status !== \"canceled\" || match.status !== \"suspended\") {\n          matches.push(match);\n          await createFixture(match, false);\n        }\n      }\n\n      if (matches.length > 0) {\n        ReactDOM.render(\n          <Fragment>\n            <Button\n              text={\"Get Predictions & League stats\"}\n              onClickEvent={() => getScorePrediction(day)}\n              className={\"GeneratePredictions\"}\n            />\n            <div className=\"Version\">Prediction engine v1.1.0 (17/10/24)</div>\n            <Collapsable\n              buttonText={\"Filters\"}\n              element={\n                <div className=\"FilterContainer\">\n                  <h6>\n                    Use the below filters to remove predictions that don't meet\n                    the set criteria. These will be greyed out and not included\n                    in multi-builders and ROI stats\n                  </h6>\n                  <h6>Goals for/against differential filter (BETA)</h6>\n                  <div>\n                    I'm looking for tips where the goal differential between\n                    teams is at least...\n                  </div>\n                  <SlideDiff\n                    value=\"0\"\n                    text=\"all games\"\n                    useCase=\"gd\"\n                    lower=\"0\"\n                    upper=\"30\"\n                  ></SlideDiff>\n                  <h6>\n                    Goals for/against home or away differential filter (BETA)\n                  </h6>\n                  <div>\n                    I'm looking for tips where the goal differential (home or\n                    away only) between teams is at least...\n                  </div>\n                  <SlideDiff\n                    value=\"0\"\n                    text=\"all games\"\n                    useCase=\"gdHorA\"\n                    lower=\"0\"\n                    upper=\"30\"\n                  ></SlideDiff>\n                  <Fragment>\n                    <h6>XG for/against differential filter (BETA)</h6>\n                    <div>\n                      I'm looking for tips where the XG differential between\n                      teams is at least...\n                    </div>\n                    <SlideDiff\n                      value=\"0\"\n                      text=\"all games\"\n                      useCase=\"xg\"\n                      lower=\"0\"\n                      upper=\"30\"\n                    ></SlideDiff>\n                  </Fragment>\n                  <Fragment>\n                    <h6>Last 10 points differential filter (BETA)</h6>\n                    <div>\n                      I'm looking for tips where the points differential between\n                      teams is at least...\n                    </div>\n                    <SlideDiff\n                      value=\"0\"\n                      text=\"all games\"\n                      useCase=\"last10\"\n                      lower=\"0\"\n                      upper=\"30\"\n                    ></SlideDiff>\n                  </Fragment>\n                  <Fragment>\n                    <h6>Choose your risk profile</h6>\n                    <div>\n                      I'm looking for tips where the odds are between...\n                    </div>\n                    <Slide value=\"1\" text=\"all games\"></Slide>\n                  </Fragment>\n                </div>\n              }\n            />\n            ,\n          </Fragment>,\n          document.getElementById(\"GeneratePredictions\")\n        );\n      }\n\n      // }\n    }\n\n    ReactDOM.render(\n      <div>\n        <div className=\"LoadingText\"></div>\n      </div>,\n      document.getElementById(\"Loading\")\n    );\n\n    async function updateResults(bool) {\n      console.log(\"updating results\");\n      if (allLeagueResultsArrayOfObjects.length > 0 && bool === true) {\n        await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}results`, {\n          method: \"DELETE\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }).then(async () => {\n          await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}results`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(allLeagueResultsArrayOfObjects),\n          });\n        });\n      } else {\n        console.log(\"EMPTY RESULTS\");\n      }\n    }\n\n    if (!isStoredLocally) {\n      await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}allForm/${date}`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ allForm }),\n      });\n      await updateResults(true);\n    }\n    if (!leaguesStored) {\n      await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${todaysDate}`,\n        {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ leagueArray }),\n        }\n      );\n    }\n    // const allFixtures = await RenderAllFixtures(matches, false)\n    ReactDOM.render(\n      <RenderAllFixtures matches={matches} result={false} bool={false} />,\n      document.getElementById(\"FixtureContainer\")\n    );\n    // ReactDOM.render(<RenderAllFixtures matches={matches} bool={false}/>),document.getElementById(\"FixtureContainer\")\n    setTimeout(() => {\n      isFunctionRunning = false;\n    }, 3000);\n  }\n}\n","import React from \"react\";\n\nfunction PreviousGames(props) {\n  // Function to find the key(s) from a given value\n  function getKeysByValue(object, value) {\n    // Use Object.keys() and filter to find keys with the given value\n    return Object.keys(object).filter((key) => object[key] === value);\n  }\n\n  // Capture the array of JSX elements created by map\n  const games = props.reducedArr.map((result, index) => {\n    // Example usage\n    const home = result.team_a_id; // The value you want to find the key for\n    const away = result.team_b_id; // The value you want to find the key for\n\n    const teamNameHome = getKeysByValue(props.teamObject, home);\n    const teamNameAway = getKeysByValue(props.teamObject, away);\n    const unixTimestamp = result.date_unix;\n    const milliseconds = unixTimestamp * 1000;\n    const dateObject = new Date(milliseconds);\n    const date = `${dateObject.getDate()}/${\n      dateObject.getMonth() + 1\n    }/${dateObject.getFullYear()}`;\n\n    return (\n      <>\n        <li key=\"lastGameDetail\" className=\"LastGameDetail\">\n          {`${date}`}\n        </li>\n        <div className=\"LastGameOverview\" key={index}>\n          <div className=\"LastGameHome\">{`${teamNameHome}`}</div>\n          <span className=\"LastGameScore\">{`${result.team_a_goals}`}</span>\n          <span className=\"LastGameScore\">{`${result.team_b_goals}`}</span>\n          <div className=\"LastGameAway\">{`${teamNameAway}`}</div>{\" \"}\n          {/* Changed team_b_id */}\n        </div>\n      </>\n    );\n  });\n\n  // Return the array of JSX elements\n  return <>{games}</>;\n}\n\nexport default PreviousGames;\n","import React from \"react\";\nimport PreviousGames from \"../components/PreviousGames\"\n\nfunction HeadToHead(props) {\n  return (\n    <ul className={props.className} style={props.style}>\n      <li key=\"Stadium\" className=\"Stadium\" data-cy={props.name + \"Stadium\"}>\n        {`Venue - ${props.stadium}`}\n      </li>\n      <div className=\"KeyStatsOne\">\n      <li key=\"h2h\" className=\"h2h\" data-cy={props.name + \"h2h\"}>\n        {`Matches played: ${props.matches}`}\n      </li>\n      <li key=\"homeWins\" className=\"homeWins\" data-cy={props.name + \"homeWins\"}>\n        {`${props.homeTeam} wins: ${props.homeWins}`}\n      </li>\n      <li key=\"awayWins\" className=\"awayWins\" data-cy={props.name + \"awayWins\"}>\n        {`${props.awayTeam} wins: ${props.awayWins}`}\n      </li>\n      <li key=\"draws\" className=\"draws\" data-cy={props.name + \"draws\"}>\n        {`Draws: ${props.draws}`}\n      </li>\n      </div>\n      <div className=\"KeyStatsTwo\">\n      <li\n        key=\"averageGoals\"\n        className=\"averageGoals\"\n        data-cy={props.name + \"averageGoals\"}\n      >\n        {`Average goals in fixture: ${props.averageGoals}`}\n      </li>\n      <li\n        key=\"bestHomeOdds\"\n        className=\"bestHomeOdds\"\n        data-cy={props.name + \"bestHomeOdds\"}\n      >\n        {`Best oods for home win @: ${props.bestHomeOdds}`}\n      </li>\n      <li\n        key=\"bestAwayOdds\"\n        className=\"bestAwayOdds\"\n        data-cy={props.name + \"bestAwayOdds\"}\n      >\n        {`Best oods for away win @: ${props.bestAwayOdds}`}\n      </li>\n      </div>\n      {/* <li\n        key=\"lastGameDetail\"\n        className=\"LastGameDetail\"\n        data-cy={props.name + \"Last\"}\n      >\n        {`Last meeting - ${props.lastGameStadiumName} ${props.lastGameDate}`}\n      </li> */}\n      <PreviousGames reducedArr={props.reducedArr} teamObject={props.teamObject}></PreviousGames>\n      {/* <div className=\"LastGameOverview\">\n        <div\n          key=\"lastGame\"\n          className=\"LastGameHome\"\n          data-cy={props.name + \"LastGame\"}\n        >\n          {`${props.lastGameHomeTeam}`}\n        </div>\n        <span className=\"LastGameScore\">{`${props.lastGameHomeGoals}`}</span>\n        <span className=\"LastGameScore\">{`${props.lastGameAwayGoals}`}</span>\n        <div className=\"LastGameAway\">{`${props.lastGameAwayTeam}`}</div>\n      </div> */}\n\n      {/* <li\n        key=\"secondToLastGameDetail\"\n        className=\"secondToLastGameDetail\"\n        data-cy={props.name + \"secondToLast\"}\n      >\n        {`Second to last meeting - ${props.secondToLastGameStadiumName} ${props.secondToLastGameDate}`}\n      </li>\n      <div className=\"LastGameOverview\">\n        <div\n          key=\"lastGame\"\n          className=\"LastGameHome\"\n          data-cy={props.name + \"LastGame\"}\n        >\n          {`${props.secondToLastGameHomeTeam}`}\n        </div>\n        <span className=\"LastGameScore\">{`${props.secondToLastGameHomeGoals}`}</span>\n        <span className=\"LastGameScore\">{`${props.secondToLastGameAwayGoals}`}</span>\n        <div className=\"LastGameAway\">\n          {`${props.secondToLastGameAwayTeam}`}\n        </div>\n      </div> */}\n    </ul>\n  );\n}\n\nexport default HeadToHead;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    // backgroundColor: \"#dedddd\",\n    padding: 10,\n    textAlign: \"center\",\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    // border: \"none\",\n    margin: \"none\",\n    color: 'white',\n    lineHeight: '2em',\n    backgroundColor: '#030061',\n  },\n  body: {\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    padding: 10,\n    color: 'white',\n    // border: \"none\",\n    margin: \"none\",\n    backgroundColor: '#030061',\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#030061\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#030052\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\n\nexport default function CustomizedTables(props) {\n\n\n  return (\n    <TableContainer className=\"StatsTable\">\n      <Table aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Stat</StyledTableCell>\n            <StyledTableCell>H2H history</StyledTableCell>\n            <StyledTableCell>XGTipping forecast</StyledTableCell>\n            <StyledTableCell>Odds (yes)</StyledTableCell>\n            <StyledTableCell>Odds (no)</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        <StyledTableRow key=\"O05\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 0.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o05Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o05Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u05Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O15\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 1.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o15Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o15Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u15Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O25\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 2.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o25Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o25Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u25Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O35\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 3.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o35Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o35Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u35Odds}</StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport HeadToHead from \"../components/HeadToHead\";\nimport { Fragment } from \"react\";\nimport CustomizedTables from \"../components/Table\";\n\nexport async function getTeamStats(\n  id,\n  home,\n  away,\n  homeBTTS,\n  homeOnlyBTTS,\n  awayBTTS,\n  awayOnlyBTTS\n) {\n  let identifier = id;\n  let bestHomeOdds;\n  let bestHomeOddsProvider;\n  let bestAwayOdds;\n  let bestAwayOddsProvider;\n\n  let match = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}match/${identifier}`\n  );\n  await match.json().then(async (match) => {\n    const matchArr = match.data.h2h.previous_matches_ids;\n    const reducedMatchArr = matchArr.slice(0, 10)\n\n    let oddsComparisonHomeArray = [];\n    let oddsComparisonAwayArray = [];\n\n    if (match.data.odds_comparison) {\n      oddsComparisonHomeArray = match.data.odds_comparison[\"FT Result\"][1];\n      oddsComparisonAwayArray = match.data.odds_comparison[\"FT Result\"][2];\n\n      let sortedHomeOdds = Object.entries(oddsComparisonHomeArray).sort(\n        (a, b) => b[1] - a[1]\n      );\n      let sortedAwayOdds = Object.entries(oddsComparisonAwayArray).sort(\n        (a, b) => b[1] - a[1]\n      );\n\n      bestHomeOddsProvider = sortedHomeOdds[0][0];\n      bestHomeOdds = sortedHomeOdds[0][1];\n      bestAwayOddsProvider = sortedAwayOdds[0][0];\n      bestAwayOdds = sortedAwayOdds[0][1];\n    } else {\n      bestHomeOddsProvider = \"N/A\";\n      bestHomeOdds = \"N/A\";\n      bestAwayOddsProvider = \"N/A\";\n      bestAwayOdds = \"N/A\";\n    }\n\n    async function getBTTSPercentage(\n      homeToal,\n      home,\n      awayTotal,\n      away,\n      fixtureHistory\n    ) {\n\n      let total = homeToal + home + awayTotal + away + fixtureHistory;\n      return total / 5;\n    }\n\n    async function getFairOdds(impliedProbability) {\n      let impliedProbabilityDivided = impliedProbability / 100;\n      return (1 / impliedProbabilityDivided).toFixed(2);\n    }\n\n\n\n    if (match.data.h2h.previous_matches_results.totalMatches > 0) {\n\n      let homeTeam = match.data.home_name;\n      let awayTeam = match.data.away_name;\n\n      let teamMappings = {\n        [homeTeam]: match.data.homeID,\n        [awayTeam]: match.data.awayID\n      };\n\n      reducedMatchArr.sort((a, b) => b.date_unix - a.date_unix);\n\n      let date;\n      // await previousMatch.json().then(async (game) => {\n      //   previousMatchDetails = game.data;\n      //   const unixTimestamp = previousMatchDetails.date_unix;\n      //   const milliseconds = unixTimestamp * 1000;\n      //   dateObject = new Date(milliseconds);\n      //   date = `${dateObject.getDate()}/${\n      //     dateObject.getMonth() + 1\n      //   }/${dateObject.getFullYear()}`;\n\n      //   let secondToPreviousMatch;\n      //   let dateObject2;\n\n      //   // if (secondMatchExists !== false) {\n      //   //   secondToPreviousMatch = await fetch(\n      //   //     `${process.env.REACT_APP_EXPRESS_SERVER}match/${secondToLastMatch}`\n      //   //   );\n      //   //   await secondToPreviousMatch.json().then((game) => {\n      //   //     secondToPreviousMatchDetails = game.data;\n      //   //     const unixTimestamp = secondToPreviousMatchDetails.date_unix;\n      //   //     const milliseconds = unixTimestamp * 1000;\n      //   //     dateObject2 = new Date(milliseconds);\n      //   //     date2 = `${dateObject2.getDate()}/${\n      //   //       dateObject2.getMonth() + 1\n      //   //     }/${dateObject2.getFullYear()}`;\n      //   //   });\n      //   // }\n      // });\n\n\n      const BTTSForecast = await getBTTSPercentage(\n        homeBTTS,\n        homeOnlyBTTS,\n        awayBTTS,\n        awayOnlyBTTS,\n        match.data.h2h.betting_stats.bttsPercentage\n      );\n      const fairOddsBTTSYes = await getFairOdds(BTTSForecast);\n      const fairOddsBTTSNo = await getFairOdds(100 - BTTSForecast);\n\n      ReactDOM.render(\n        <Fragment>\n          <h3>Fixture history</h3>\n          <HeadToHead\n            className={\"PreviousMatchStats\"}\n            homeTeam={home}\n            awayTeam={away}\n            reducedArr={reducedMatchArr}\n            teamObject={teamMappings}\n            stadium={match.data.stadium_name}\n            matches={match.data.h2h.previous_matches_results.totalMatches}\n            homeWins={match.data.h2h.previous_matches_results.team_a_wins}\n            awayWins={match.data.h2h.previous_matches_results.team_b_wins}\n            draws={match.data.h2h.previous_matches_results.draw}\n            averageGoals={match.data.h2h.betting_stats.avg_goals}\n            bestHomeOdds={`${bestHomeOddsProvider} - ${bestHomeOdds}`}\n            bestAwayOdds={`${bestAwayOddsProvider} - ${bestAwayOdds}`}\n            // lastGameStadiumName={\n            //   previousMatchDetails.stadium_name\n            //     ? previousMatchDetails.stadium_name\n            //     : \"-\"\n            // }\n            // lastGameHomeGoals={\n            //   previousMatchDetails.homeGoalCount !== undefined\n            //     ? previousMatchDetails.homeGoalCount\n            //     : \"-\"\n            // }\n            // lastGameAwayGoals={\n            //   previousMatchDetails.awayGoalCount !== undefined\n            //     ? previousMatchDetails.awayGoalCount\n            //     : \"-\"\n            // }\n            // lastGameHomeTeam={\n            //   previousMatchDetails.home_name\n            //     ? previousMatchDetails.home_name\n            //     : \"-\"\n            // }\n            // lastGameAwayTeam={\n            //   previousMatchDetails.away_name\n            //     ? previousMatchDetails.away_name\n            //     : \"-\"\n            // }\n            // lastGameDate={!isNaN(date) ? date : \"-\"}\n            // secondToLastGameStadiumName={\n            //   secondToPreviousMatchDetails.stadium_name\n            //     ? secondToPreviousMatchDetails.stadium_name\n            //     : \"-\"\n            // }\n            // secondToLastGameHomeGoals={\n            //   secondToPreviousMatchDetails.homeGoalCount !== undefined\n            //     ? secondToPreviousMatchDetails.homeGoalCount\n            //     : \"-\"\n            // }\n            // secondToLastGameAwayGoals={\n            //   secondToPreviousMatchDetails.awayGoalCount !== undefined\n            //     ? secondToPreviousMatchDetails.awayGoalCount\n            //     : \"-\"\n            // }\n            // secondToLastGameHomeTeam={\n            //   secondToPreviousMatchDetails.home_name\n            //     ? secondToPreviousMatchDetails.home_name\n            //     : \"-\"\n            // }\n            // secondToLastGameAwayTeam={\n            //   secondToPreviousMatchDetails.away_name\n            //     ? secondToPreviousMatchDetails.away_name\n            //     : \"-\"\n            // }\n            // secondToLastGameDate={!isNaN(date2) ? date2 : \"-\"}\n          ></HeadToHead>\n          <CustomizedTables\n            o05Stat={match.data.h2h.betting_stats.over05Percentage}\n            o15Stat={match.data.h2h.betting_stats.over15Percentage}\n            o15Forecast={match.data.o15_potential}\n            o05Odds={match.data.odds_ft_over05}\n            u05Odds={match.data.odds_ft_under05}\n            o15Odds={match.data.odds_ft_over15}\n            u15Odds={match.data.odds_ft_under15}\n            o25Stat={match.data.h2h.betting_stats.over25Percentage}\n            o25Forecast={match.data.o25_potential}\n            o25Odds={match.data.odds_ft_over25}\n            u25Odds={match.data.odds_ft_under25}\n            o35Stat={match.data.h2h.betting_stats.over35Percentage}\n            o35Forecast={match.data.o35_potential}\n            o35Odds={match.data.odds_ft_over35}\n            u35Odds={match.data.odds_ft_under35}\n            BTTSStat={match.data.h2h.betting_stats.bttsPercentage}\n            BTTSForecast={`${BTTSForecast}%`}\n            BTTSOdds={`${match.data.odds_btts_yes}\\n Fair odds: ${fairOddsBTTSYes}`}\n            BTTSOddsNo={`${match.data.odds_btts_no}\\n Fair odds: ${fairOddsBTTSNo}`}\n            CornersStat={\"–\"}\n            CornersForecast={match.data.corners_potential}\n            CornersOdds={match.data.odds_corners_over_105}\n          />\n        </Fragment>,\n        document.getElementById(`H2HStats${identifier}`)\n      );\n    } else {\n      ReactDOM.render(\n        <div>No fixture history found</div>,\n        document.getElementById(`H2HStats${identifier}`)\n      );\n    }\n  });\n}\n","async function getOverOrUnderText(xgSum) {\n  let overUnderAchievingSum = xgSum;\n  let text;\n  switch (true) {\n    case overUnderAchievingSum > 1.5:\n      text = \"Underachieving drastically against expected goals.\";\n      break;\n    case overUnderAchievingSum > 1.25 && overUnderAchievingSum <= 1.5:\n      text = \"Underachieving significantly against expected goals.\";\n      break;\n    case overUnderAchievingSum > 1 && overUnderAchievingSum <= 1.25:\n      text = \"Underachieving moderately against expected goals.\";\n      break;\n    case overUnderAchievingSum > 0.75 && overUnderAchievingSum <= 1:\n      text = \"Underachieving slightly against expected goals.\";\n      break;\n    case overUnderAchievingSum > 0.4 && overUnderAchievingSum <= 0.75:\n      text = \"Underachieving very slightly against expected goals.\";\n      break;\n    case overUnderAchievingSum > -0.4 && overUnderAchievingSum <= 0.4:\n      text = \"Roughly matching the expected goal difference overall.\";\n      break;\n    case overUnderAchievingSum < -0.4 && overUnderAchievingSum >= -0.75:\n      text = \"Overachieving very slightly against expected goals.\";\n      break;\n    case overUnderAchievingSum < -0.75 && overUnderAchievingSum >= -1:\n      text = \"Overachieving slightly against expected goals overall.\";\n      break;\n    case overUnderAchievingSum < -1 && overUnderAchievingSum >= -1.25:\n      text = \"Overachieving moderately against expected goals.\";\n      break;\n    case overUnderAchievingSum < -1.25 && overUnderAchievingSum >= -1.5:\n      text = \"Overachieving significantly against expected goals.\";\n      break;\n    case overUnderAchievingSum < -1.5:\n      text = \"Overachieving drastically against expected goals.\";\n      break;\n    default:\n      text = \"\";\n      break;\n  }\n  \n  return text;\n}\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nasync function getXGDifferential(xgFor, xgAgainst, goalsFor, goalsAgainst) {\n  let xgDiff = xgFor - xgAgainst;\n  let goalDiff = goalsFor - goalsAgainst;\n  let compareXgAndGoalDiff = await diff(xgDiff, goalDiff);\n\n  return compareXgAndGoalDiff;\n}\n\nasync function getAttackingSummary(goalsRecent, goalsLongTerm) {\n\n  let text;\n  if (goalsRecent >= 3) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Free-scoring and improving recently in front of goal.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Free-scoring and consistent recently in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Free-scoring overall, but less so recently in games.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 3 && goalsRecent >= 2) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Impressive scoring; improving recently in front of goal.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Impressive scoring; consistent recently in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Impressive scoring, but less so recently in games.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 2 && goalsRecent >= 1) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Decent scoring; improving recently in front of goal.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Decent scoring; consistent recently in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Decent scoring, but less so recently in games.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 1 && goalsRecent > 0) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Poor scoring, but improving recently in front of goal.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Poor scoring, consistent in front of goal recently.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Poor scoring, no signs of improvement recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent === 0) {\n    switch (true) {\n      case goalsRecent === 0:\n        text = \"Woeful scoring; no goals scored recently at all.\";\n        break;\n      default:\n        text = \"\";\n        break;\n    }\n  }\n  return text;  \n}\n\nasync function getDefenceSummary(cleansheetStat) {\n  let text;\n  switch (true) {\n    case cleansheetStat > 80:\n      text = `Incredibly strong defensively; ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    case cleansheetStat > 60 && cleansheetStat <= 80:\n      text = `Very strong defensively; ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    case cleansheetStat > 40 && cleansheetStat <= 60:\n      text = `Defensively impressive; ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    case cleansheetStat > 20 && cleansheetStat <= 40:\n      text = `Defensively average; ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    case cleansheetStat > 1 && cleansheetStat <= 20:\n      text = `Defensively frail; only ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    case cleansheetStat === 0:\n      text = `Defensively weak; ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    default:\n      break;\n  }  \n  return text;\n}\n\nasync function GenerateFormSummary(form, lastx, recentForm) {\n  let text;\n  // let six = lastx[2];\n  let ten = lastx[1];\n  let five = lastx[0];\n\n  let xgSum = await getXGDifferential(\n    form.XGOverall,\n    form.XGAgainstAvgOverall,\n    form.ScoredOverall / 10,\n    form.ConcededOverall / 10\n  );\n  let xgText = await getOverOrUnderText(xgSum);\n  let attackString = await getAttackingSummary(\n    form.last5Goals,\n    form.last10Goals\n  );\n  let defenceString = await getDefenceSummary(form.CleanSheetPercentage);\n  let pointsAverageTotal =\n    (parseFloat(five) + parseFloat(ten)) / 2;\n\n    if (pointsAverageTotal >= 2.6) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Outstanding recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Outstanding recent form, steady over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Outstanding recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 2.3) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Excellent recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Excellent recent form, steady over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Excellent recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 2) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Very good recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Very good recent form, steady over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Very good recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 1.7) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Good recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Good recent form, steady over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Good recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 1.4) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Fairly good recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Fairly good recent form, steady over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Fairly good recent form, worsened in last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 1.1) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Average recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Average recent form, steady over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Average recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 0.8) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Poor recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Poor recent form, steady over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Poor recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 0.5) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Very poor recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Very poor recent form, steady over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Very poor recent form, worsened in last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal < 0.5) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Terrible recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Terrible recent form, steady over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Terrible recent form, worsened in last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else {\n      console.log(pointsAverageTotal);\n    }\n  \n  return text + ` ${xgText} ${attackString} ${defenceString}`;\n}\n\nexport default GenerateFormSummary;\n","// import { light } from \"@material-ui/core/styles/createPalette\";\n// import { toBePartiallyChecked } from \"@testing-library/jest-dom/dist/matchers\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  ArcElement,\n  LineElement,\n  Filler,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  SubTitle,\n} from \"chart.js\";\nimport { Line, Radar, Bar, Doughnut } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  ArcElement,\n  Filler,\n  BarElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  SubTitle\n);\n\nexport function Chart(props) {\n  let length;\n  let depth;\n\n  if (props.type === \"Points over time\") {\n    length = props.data1.length * 3;\n    depth = 0;\n  } else if (props.type === \"Rolling average points over last 10\") {\n    length = Math.abs(props.height);\n    depth = 0;\n  } else if (Math.abs(props.height) > Math.abs(props.depth)) {\n    length = Math.abs(props.height);\n    depth = -Math.abs(props.height);\n  } else if (Math.abs(props.height) < Math.abs(props.depth)) {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  } else {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  }\n\n  const options = {\n    color: \"#030061\",\n    responsive: true,\n    aspectRatio: 1.2,\n    maintainAspectRatio: true,\n    layout: {\n      padding: 3,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    scales: {\n      y: {\n        suggestedMin: depth,\n        suggestedMax: length,\n        // suggestedMax: Math.max(...props.data1) > 3 ? Math.max(...props.data1) : 3,\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          font: {\n            size: 12,\n          },\n        },\n      },\n      x: {\n        title: {\n          display: false,\n          text: \"Last X Games\",\n          font: {\n            size: 14,\n          },\n        },\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          display: false,\n          font: {\n            size: 14,\n          },\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 5,\n        },\n      },\n      title: {\n        display: true,\n        text: props.type,\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  const labels = Array.from(props.data1.keys());\n\n  let data = {\n    labels,\n    datasets: [\n      {\n        label: props.team1,\n        font: {\n          color: \"black\",\n        },\n        data: props.data1,\n        borderColor: \"#030061\",\n        borderWidth: 2,\n        backgroundColor: \"#030061\",\n        tension: props.tension,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        borderColor: \"#970d00\",\n        borderWidth: 2,\n        backgroundColor: \"#970d00\",\n        tension: props.tension,\n      },\n    ],\n  };\n\n  return <Line options={options} data={data} />;\n}\n\nexport function DoughnutChart(props) {\n  const options = {\n    color: \"#030061\",\n\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 10,\n          color: \"#030061\",\n        },\n      },\n      title: {\n        display: true,\n        text: \"XG Tipping Form Comparison\",\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  const data = {\n    labels: [props.homeTeam, props.awayTeam],\n    datasets: [\n      {\n        data: props.data,\n        backgroundColor: [\"#030061\", \"#970d00\"],\n        rotation: 270,\n        hoverOffset: 4,\n        cutout: \"75%\",\n        circumference: 180,\n      },\n    ],\n  };\n\n  const config = {\n    type: \"doughnut\",\n    data: data,\n  };\n\n  return <Doughnut options={options} data={data} />;\n}\n\nexport function RadarChart(props) {\n  const options = {\n    color: \"#030061\",\n    scales: {\n      r: {\n        angleLines: {\n          display: false,\n        },\n        suggestedMin: 0,\n        suggestedMax: 1,\n        ticks: {\n          precision: 0,\n          display: false,\n        },\n        // grid: {\n        //     circular: true,\n        //   }\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 10,\n          color: \"#030061\",\n        },\n      },\n      title: {\n        display: true,\n        text: props.title,\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  let data = {\n    labels: [\n      \"Attack rating\",\n      \"Defence rating\",\n      \"Ball retention\",\n      \"XG For\",\n      \"XG Against\",\n      \"Directness\",\n      \"Attacking precision\",\n    ],\n    datasets: [\n      {\n        label: props.team1,\n        data: props.data,\n        fill: true,\n        backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n        borderColor: \"#030061\",\n        pointBackgroundColor: \"#030061\",\n        pointBorderColor: \"#fff\",\n        pointHoverBackgroundColor: \"#fff\",\n        pointHoverBorderColor: \"rgb(255, 99, 132)\",\n        borderWidth: 2,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        fill: true,\n        backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n        borderColor: \"#970d00\",\n        pointBackgroundColor: \"#970d00\",\n        pointBorderColor: \"#fff\",\n        pointHoverBackgroundColor: \"#fff\",\n        pointHoverBorderColor: \"rgb(54, 162, 235)\",\n        borderWidth: 2,\n      },\n    ],\n  };\n\n  return <Radar options={options} data={data} />;\n}\n\nexport function BarChart(props) {\n  const datasetOne = props.data1;\n  const datasetTwo = props.data2;\n  const sum = datasetTwo.map(function (num, idx) {\n    return num - datasetOne[idx];\n  });\n\n  const max = Math.max(...sum);\n  const min = Math.min(...sum);\n\n  const largest = findLargestNum(max, min);\n\n  function findLargestNum(numOne, numTwo) {\n    const tempArr = [];\n    const firstNum = Math.abs(numOne);\n    const secondNum = Math.abs(numTwo);\n    tempArr.push(firstNum, secondNum);\n\n    return Math.max(...tempArr);\n  }\n\n  const options = {\n    color: \"#030061\",\n    indexAxis: \"y\",\n    // Elements options apply to all of the options unless overridden in a dataset\n    // In this case, we are setting the border of each horizontal bar to be 2px wide\n    aspectRatio: 1.3,\n    elements: {\n      bar: {\n        borderWidth: 2,\n      },\n    },\n    scales: {\n      x: {\n        min: -4,\n        max: 4,\n        ticks: {\n          display: false,\n        },\n      },\n      y: {\n        ticks: {\n          font: {\n            size: 10,\n          },\n        },\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: false,\n      },\n      title: {\n        display: true,\n        text: props.text,\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  const labels = [\n    \"Highest Goals\",\n    \"Fewest Conceeded\",\n    \"PPG\",\n    \"Highest XG\",\n    \"Fewest XG Conceeded\",\n    \"Shots On Target\",\n    \"Dangerous Attacks\",\n    \"Av. Possession\",\n    \"Home/Away Goal Diff\",\n    \"Corners\",\n  ];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        // label: 'Dataset 1',\n        legend: {\n          display: false,\n        },\n        data: sum,\n        backgroundColor(context) {\n          const index = context.dataIndex;\n          const value = context.dataset.data[index];\n          return value < 0 ? \"#030061\" : \"#970d00\";\n        },\n      },\n    ],\n  };\n\n  return <Bar options={options} data={data} />;\n}\n\nexport function BarChartTwo(props) {\n  const dataset = [props.data1, props.data2]\n\n  const options = {\n    color: \"#030061\",\n    indexAxis: \"x\",\n    // Elements options apply to all of the options unless overridden in a dataset\n    // In this case, we are setting the border of each horizontal bar to be 2px wide\n    aspectRatio: 1.3,\n    elements: {\n      bar: {\n        borderWidth: 2,\n      },\n    },\n    scales: {\n      y: {\n        min: -0.8,\n        max: 0.8,\n        ticks: {\n          display: true,\n          font: {\n            size: 10,\n          },\n        },\n      },\n      // y: {\n      //   suggestedMin: -0.8,\n      //   suggestedMax: 0.8,\n      //   ticks: {\n      //     font: {\n      //       size: 10,\n      //     },\n      //   },\n      // },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: true,\n      },\n      title: {\n        display: true,\n        text: [props.text],\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n      subtitle: {\n        display: true,\n        text: \"Green - Improving | Red - Worsening\",\n        color: \"#030061\",\n        font: {\n          size: 12,\n        },\n        padding: {\n          bottom: 10,\n        },\n      },\n    },\n  };\n\n  const labels = [\n    props.homeTeam,\n    props.awayTeam,\n  ];\n\n  const data = {\n    labels: labels,\n    datasets: [\n      {\n        legend: {\n          display: false,\n        },\n        // label: \"XG Recent Swing\",\n        data: dataset,\n        ticks: {\n          font: {\n            size: 12,\n          },\n        },\n        barThickness: 40,\n        backgroundColor(context) {\n          const index = context.dataIndex;\n          const value = context.dataset.data[index];\n          return value < 0 ? \"#730a00\" : \"#016001\";\n        },\n      },\n    ],\n  };\n\n  return <Bar options={options} data={data} />;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SofaLineupsWidget = ({ id, team1, team2, time, homeGoals, awayGoals }) => {\n  const iframeSrc = `https://widgets.sofascore.com/embed/lineups?id=${id}&widgetTheme=light`;\n\n  let differenceInSeconds, minutes\n  const currentTime = new Date().getTime() / 1000;\n  // Calculate the difference in seconds\n    if(time > 0){\n        differenceInSeconds = time - currentTime;\n        minutes = Math.floor(differenceInSeconds / 60);\n    } else {\n        minutes = -99999999\n    }\n\n\n\n  if(team1 === \"N/A\") {\n    return <h6>No lineups available for this match yet</h6>\n  } else if (minutes > 60) {\n    return (\n      <div>\n        <h6>Predicted lineups</h6>\n        <iframe\n          id={`sofa-lineups-embed-${id}`}\n          src={iframeSrc}\n          style={{\n            height: \"786px\",\n            maxWidth: \"800px\",\n            width: \"100%\",\n            border: \"0\",\n          }}\n          scrolling=\"no\"\n          title=\"SofaScore Lineups\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n      </div>\n    );\n  } else if (minutes < 60 && minutes > 0) {\n    return (\n      <div>\n        <h6>Lineups</h6>\n        <iframe\n          id={`sofa-lineups-embed-${id}`}\n          src={iframeSrc}\n          style={{\n            height: \"786px\",\n            maxWidth: \"800px\",\n            width: \"100%\",\n            border: \"0\",\n          }}\n          scrolling=\"no\"\n          title=\"SofaScore Lineups\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n      </div>\n    );\n  } else if (minutes < 0) {\n    return (\n      <div>\n        <div className=\"CurrentScore\">Score: {`${team1}: ${homeGoals} - ${team2}: ${awayGoals}`}</div>\n        <span>Score not live updated</span>\n        <h6 className=\"AttackingMomentum\">Live attacking momentum and goals</h6>\n        <iframe\n          width=\"100%\"\n          height=\"286\"\n          src={`https://widgets.sofascore.com/embed/attackMomentum?id=${id}&widgetTheme=light`}\n          frameborder=\"0\"\n          scrolling=\"no\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n        <h6>Lineups and in-play ratings</h6>\n        <iframe\n          id={`sofa-lineups-embed-${id}`}\n          src={iframeSrc}\n          style={{\n            height: \"786px\",\n            maxWidth: \"800px\",\n            width: \"100%\",\n            border: \"0\",\n          }}\n          scrolling=\"no\"\n          title=\"SofaScore Lineups\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n      </div>\n    );\n  }\n  else {\n    return <h6>{`Lineups coming in approximately ${minutes - 60} minutes`}</h6>;\n  }\n};\n\n\nSofaLineupsWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  team1: PropTypes.string.isRequired,\n  team2: PropTypes.string.isRequired,\n};\n\nexport default SofaLineupsWidget;\n","import ReactDOM from \"react-dom\";\nimport { Button } from \"../components/Button\";\nimport Stats from \"../components/createStatsDiv\";\nimport Div from \"../components/Div\";\nimport { allForm } from \"../logic/getFixtures\";\nimport { getTeamStats } from \"../logic/getTeamStats\";\nimport { getPointsFromLastX } from \"../logic/getScorePredictions\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport GenerateFormSummary from \"../logic/compareFormTrend\";\nimport {\n  Chart,\n  RadarChart,\n  BarChart,\n  BarChartTwo,\n  DoughnutChart,\n} from \"../components/Chart\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { clicked } from \"../logic/getScorePredictions\";\nimport SofaLineupsWidget from \"../components/SofaScore\";\nimport { arrayOfGames } from \"../logic/getFixtures\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nexport async function calculateAttackingStrength(stats) {\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    // averagePossession: 0.15,\n    \"Average Dangerous Attacks\": 0,\n    \"Average Shots\": 0.05,\n    \"Average Shots On Target\": 0.15,\n    \"Average Expected Goals\": 0.2,\n    \"Recent XG\": 0.25,\n    \"Average Goals\": 0.2,\n    Corners: 0,\n    \"Average Shot Value\": 0.15,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    // averagePossession: { min: 25, max: 75 },\n    \"Average Dangerous Attacks\": { min: 25, max: 75 }, // Adjust the max value as needed\n    \"Average Shots\": { min: 4, max: 15 }, // Adjust the max value as needed\n    \"Average Shots On Target\": { min: 2, max: 9 }, // Adjust the max value as needed\n    \"Average Expected Goals\": { min: 0, max: 2.5 }, // Adjust the max value as needed\n    \"Recent XG\": { min: 0, max: 2.5 }, // Adjust the max value as needed\n    \"Average Goals\": { min: 0, max: 3 }, // Adjust the max value as needed\n    Corners: { min: 2, max: 9 },\n    \"Average Shot Value\": { min: 8, max: 13 },\n  };\n\n  // Normalize each metric value and calculate the weighted sum\n  let weightedSum = 0;\n  for (const metric in stats) {\n    if (\n      stats.hasOwnProperty(metric) &&\n      weights.hasOwnProperty(metric) &&\n      ranges.hasOwnProperty(metric)\n    ) {\n      const normalizedValue = Math.max(\n        0,\n        Math.min(\n          1,\n          (stats[metric] - ranges[metric].min) /\n            (ranges[metric].max - ranges[metric].min)\n        )\n      );\n      weightedSum += normalizedValue * weights[metric];\n    } else {\n      console.log(metric);\n    }\n  }\n\n  return parseFloat(weightedSum.toFixed(2));\n}\n\nexport async function calculateDefensiveStrength(stats, normalizedValue = 1) {\n  let normValue = normalizedValue;\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    \"Average XG Against\": 0.3,\n    \"Recent XG Against\": 0.3,\n    \"Average Goals Against\": 0.2,\n    \"Average SOT Against\": 0.2,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    \"Average XG Against\": { min: 0, max: 2.5 }, // Adjust the max value as needed\n    \"Recent XG Against\": { min: 0, max: 2.5 },\n    \"Average Goals Against\": { min: 0, max: 3 }, // Adjust the max value as needed\n    \"Average SOT Against\": { min: 2, max: 10 },\n  };\n\n  // Normalize each metric value and calculate the weighted sum\n  let weightedSum = 0;\n  for (const metric in stats) {\n    if (\n      stats.hasOwnProperty(metric) &&\n      weights.hasOwnProperty(metric) &&\n      ranges.hasOwnProperty(metric)\n    ) {\n     // Normalize the value and clamp it between 0 and 1\n     let normalizedValue = (stats[metric] - ranges[metric].min) / (ranges[metric].max - ranges[metric].min);\n     normalizedValue = Math.max(0, Math.min(1, normalizedValue));\n\n     // Reverse logic for defensive strength: better defense, lower metric value\n     let val = normValue - normalizedValue;\n     \n     // Add the weighted value to the weightedSum\n     weightedSum += val * weights[metric];\n    }\n  }\n\n  return parseFloat(weightedSum.toFixed(2));\n}\n\nexport async function calculateMetricStrength(metricName, metricValue) {\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    averagePossession: 1,\n    xgFor: 1,\n    xgAgainst: 1,\n    directnessOverall: 1,\n    accuracyOverall: 1,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    averagePossession: { min: 20, max: 80 },\n    xgFor: { min: 0.1, max: 3 },\n    xgAgainst: { min: 0.1, max: 3 },\n    directnessOverall: { min: 0.5, max: 5 },\n    accuracyOverall: { min: 0.5, max: 7 },\n  };\n\n  // Ensure the metric is valid and exists in the weights and ranges objects\n  if (\n    !weights.hasOwnProperty(metricName) ||\n    !ranges.hasOwnProperty(metricName)\n  ) {\n    throw new Error(\"Invalid metric name or missing normalization range.\");\n  }\n\n  // Normalize the metric value\n  const normalizedValue =\n    (metricValue - ranges[metricName].min) /\n    (ranges[metricName].max - ranges[metricName].min);\n\n  // Calculate the weighted score\n  const weightedScore = normalizedValue * weights[metricName];\n\n  return parseFloat(weightedScore.toFixed(2));\n}\n\n// export async function getDefenceStrength(goalsAgainst) {\n//   let strength;\n//   switch (true) {\n//     case goalsAgainst >= 2.8:\n//       strength = 1;\n//       break;\n//     case goalsAgainst >= 2.5 && goalsAgainst < 2.8:\n//       strength = 2;\n//       break;\n//     case goalsAgainst >= 2.2 && goalsAgainst < 2.5:\n//       strength = 3;\n//       break;\n//     case goalsAgainst >= 1.9 && goalsAgainst < 2.2:\n//       strength = 4;\n//       break;\n//     case goalsAgainst >= 1.6 && goalsAgainst < 1.9:\n//       strength = 5;\n//       break;\n//     case goalsAgainst >= 1.3 && goalsAgainst < 1.6:\n//       strength = 6;\n//       break;\n//     case goalsAgainst >= 1 && goalsAgainst < 1.3:\n//       strength = 7;\n//       break;\n//     case goalsAgainst >= 0.7 && goalsAgainst < 1:\n//       strength = 8;\n//       break;\n//     case goalsAgainst >= 0.4 && goalsAgainst < 0.7:\n//       strength = 9;\n//       break;\n//     case goalsAgainst < 0.4:\n//       strength = 10;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getPossessionStrength(possession) {\n//   let strength;\n//   switch (true) {\n//     case possession >= 68:\n//       strength = 10;\n//       break;\n//     case possession >= 64 && possession < 68:\n//       strength = 9;\n//       break;\n//     case possession >= 60 && possession < 64:\n//       strength = 8;\n//       break;\n//     case possession >= 56 && possession < 60:\n//       strength = 7;\n//       break;\n//     case possession >= 52 && possession < 56:\n//       strength = 6;\n//       break;\n//     case possession >= 48 && possession < 52:\n//       strength = 5;\n//       break;\n//     case possession >= 44 && possession < 48:\n//       strength = 4;\n//       break;\n//     case possession >= 40 && possession < 44:\n//       strength = 3;\n//       break;\n//     case possession >= 35 && possession < 40:\n//       strength = 2;\n//       break;\n//     case possession < 35:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getShotsStrength(Shots) {\n//   let strength;\n//   switch (true) {\n//     case Shots >= 15:\n//       strength = 10;\n//       break;\n//     case Shots >= 14.25 && Shots < 15:\n//       strength = 9;\n//       break;\n//     case Shots >= 13.5 && Shots < 14.25:\n//       strength = 8;\n//       break;\n//     case Shots >= 12.75 && Shots < 13.5:\n//       strength = 7;\n//       break;\n//     case Shots >= 12 && Shots < 12.75:\n//       strength = 6;\n//       break;\n//     case Shots >= 11.25 && Shots < 12:\n//       strength = 5;\n//       break;\n//     case Shots >= 10.5 && Shots < 11.25:\n//       strength = 4;\n//       break;\n//     case Shots >= 9.75 && Shots < 10.5:\n//       strength = 3;\n//       break;\n//     case Shots >= 9 && Shots < 9.75:\n//       strength = 2;\n//       break;\n//     case Shots < 9:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getShotsStrengthHorA(Shots) {\n//   let strength;\n//   switch (true) {\n//     case Shots >= 19.5:\n//       strength = 10;\n//       break;\n//     case Shots >= 18 && Shots < 19.5:\n//       strength = 9;\n//       break;\n//     case Shots >= 17 && Shots < 18:\n//       strength = 8;\n//       break;\n//     case Shots >= 15.5 && Shots < 17:\n//       strength = 7;\n//       break;\n//     case Shots >= 14 && Shots < 15.5:\n//       strength = 6;\n//       break;\n//     case Shots >= 12.5 && Shots < 14:\n//       strength = 5;\n//       break;\n//     case Shots >= 11 && Shots < 12.5:\n//       strength = 4;\n//       break;\n//     case Shots >= 9.5 && Shots < 11:\n//       strength = 3;\n//       break;\n//     case Shots >= 8 && Shots < 9.5:\n//       strength = 2;\n//       break;\n//     case Shots < 8:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGForStrength(XG) {\n//   let strength;\n//   switch (true) {\n//     case XG >= 2.9:\n//       strength = 10;\n//       break;\n//     case XG >= 2.6 && XG < 2.9:\n//       strength = 9;\n//       break;\n//     case XG >= 2.3 && XG < 2.6:\n//       strength = 8;\n//       break;\n//     case XG >= 2 && XG < 2.3:\n//       strength = 7;\n//       break;\n//     case XG >= 1.7 && XG < 2:\n//       strength = 6;\n//       break;\n//     case XG >= 1.4 && XG < 1.7:\n//       strength = 5;\n//       break;\n//     case XG >= 1.1 && XG < 1.4:\n//       strength = 4;\n//       break;\n//     case XG >= 0.8 && XG < 1.1:\n//       strength = 3;\n//       break;\n//     case XG >= 0.5 && XG < 0.8:\n//       strength = 2;\n//       break;\n//     case XG < 0.5:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGAgainstStrength(XGAgainst) {\n//   let strength;\n//   switch (true) {\n//     case XGAgainst >= 2.9:\n//       strength = 1;\n//       break;\n//     case XGAgainst >= 2.6 && XGAgainst < 2.9:\n//       strength = 2;\n//       break;\n//     case XGAgainst >= 2.3 && XGAgainst < 2.6:\n//       strength = 3;\n//       break;\n//     case XGAgainst >= 2 && XGAgainst < 2.3:\n//       strength = 4;\n//       break;\n//     case XGAgainst >= 1.7 && XGAgainst < 2:\n//       strength = 5;\n//       break;\n//     case XGAgainst >= 1.4 && XGAgainst < 1.7:\n//       strength = 6;\n//       break;\n//     case XGAgainst >= 1.1 && XGAgainst < 1.4:\n//       strength = 7;\n//       break;\n//     case XGAgainst >= 0.8 && XGAgainst < 1.1:\n//       strength = 8;\n//       break;\n//     case XGAgainst >= 0.5 && XGAgainst < 0.8:\n//       strength = 9;\n//       break;\n//     case XGAgainst < 0.5:\n//       strength = 10;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGDifferentialStrength(XGDiff) {\n//   let strength;\n//   switch (true) {\n//     case XGDiff >= 1.5:\n//       strength = 10;\n//       break;\n//     case XGDiff >= 1 && XGDiff < 1.5:\n//       strength = 9;\n//       break;\n//     case XGDiff >= 0.5 && XGDiff < 1:\n//       strength = 8;\n//       break;\n//     case XGDiff >= 0.25 && XGDiff < 0.5:\n//       strength = 7;\n//       break;\n//     case XGDiff > 0 && XGDiff < 0.25:\n//       strength = 6;\n//       break;\n//     case XGDiff <= 0 && XGDiff > -0.25:\n//       strength = 5;\n//       break;\n//     case XGDiff <= -0.25 && XGDiff > -0.5:\n//       strength = 4;\n//       break;\n//     case XGDiff <= -0.5 && XGDiff > -1:\n//       strength = 3;\n//       break;\n//     case XGDiff <= -1 && XGDiff > -1.5:\n//       strength = 2;\n//       break;\n//     case XGDiff <= -1.5:\n//       strength = 1;\n//       break;\n//     default:\n//       console.log(\"default clause triggered\");\n//       break;\n//   }\n//   return strength;\n// }\n\nexport async function getXGtoActualDifferentialStrength(XGDiff) {\n  let strength;\n  switch (true) {\n    case XGDiff >= 1.5:\n      strength = 10;\n      break;\n    case XGDiff >= 1 && XGDiff < 1.5:\n      strength = 9;\n      break;\n    case XGDiff >= 0.5 && XGDiff < 1:\n      strength = 8;\n      break;\n    case XGDiff >= 0.25 && XGDiff < 0.5:\n      strength = 7;\n      break;\n    case XGDiff > 0 && XGDiff < 0.25:\n      strength = 6;\n      break;\n    case XGDiff <= 0 && XGDiff > -0.25:\n      strength = 5;\n      break;\n    case XGDiff <= -0.25 && XGDiff > -0.5:\n      strength = 4;\n      break;\n    case XGDiff <= -0.5 && XGDiff > -1:\n      strength = 3;\n      break;\n    case XGDiff <= -1 && XGDiff > -1.5:\n      strength = 2;\n      break;\n    case XGDiff <= -1.5:\n      strength = 1;\n      break;\n    default:\n      strength = 1;\n      break;\n  }\n  return strength;\n}\n\nlet rollingGoalDiffTotalHome = [];\nlet rollingGoalDiffTotalAway = [];\n\nexport async function createStatsDiv(game, displayBool) {\n  if (game.status !== \"void\") {\n    // takes the displayBool boolean from the fixture onClick and sets the styling of the stats div from there\n    function styling(testBool) {\n      let bool = testBool;\n      if (bool === true && clicked === true) {\n        // set stats element to display flex\n        return { display: \"block\" };\n      } else {\n        // set stats element to display none\n        return { display: \"none\" };\n      }\n    }\n    let style = styling(displayBool);\n\n    if (clicked === false) {\n      alert(\"Tap Get Predictions to fetch all game stats first\");\n    } else {\n      let index = 2;\n      let divider = 10;\n\n      let gameStats = allForm.find((match) => match.id === game.id);\n      const gameArrayHome = [];\n      const gameArrayAway = [];\n      const gameArrayHomeTeamHomeGames = [];\n      const gameArrayAwayTeamAwayGames = [];\n      let goalDiffArrayHome;\n      let goalDiffArrayAway;\n      let goalDiffHomeMovingAv = [];\n      let goalDiffAwayMovingAv = [];\n      let latestHomeGoalDiff;\n      let latestAwayGoalDiff;\n\n      var getEMA = (a, r) =>\n        a.reduce(\n          (p, n, i) =>\n            i\n              ? p.concat(\n                  (2 * n) / (r + 1) + (p[p.length - 1] * (r - 1)) / (r + 1)\n                )\n              : p,\n          [a[0]]\n        );\n\n      const homeForm = gameStats.home[index];\n      const awayForm = gameStats.away[index];\n\n      if (displayBool === true) {\n        // let fixtures = await fetch(\n        //   `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${gameStats.leagueId}`\n        // );\n\n        const pos = allLeagueResultsArrayOfObjects\n          .map((i) => i.id)\n          .indexOf(gameStats.leagueId);\n        let matches = allLeagueResultsArrayOfObjects[pos];\n        // await fixtures.json().then((matches) => {\n        const resultHome = matches.fixtures.filter(\n          (game) =>\n            game.home_name === gameStats.home.teamName ||\n            game.away_name === gameStats.home.teamName\n        );\n\n        const resultHomeOnly = matches.fixtures.filter(\n          (game) => game.home_name === gameStats.home.teamName\n        );\n\n        resultHome.sort((a, b) => b.date_unix - a.date_unix);\n        resultHomeOnly.sort((a, b) => b.date_unix - a.date_unix);\n\n        for (let i = 0; i < resultHome.length; i++) {\n          let unixTimestamp = resultHome[i].date_unix;\n          let milliseconds = unixTimestamp * 1000;\n          let dateObject = new Date(milliseconds).toLocaleString(\"en-GB\", {\n            timeZone: \"UTC\",\n          });\n\n          let won;\n          let goalsScored;\n          let goalsConceeded;\n\n          switch (true) {\n            case resultHome[i].home_name === gameStats.home.teamName:\n              switch (true) {\n                case resultHome[i].homeGoalCount > resultHome[i].awayGoalCount:\n                  won = \"W\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                case resultHome[i].homeGoalCount ===\n                  resultHome[i].awayGoalCount:\n                  won = \"D\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                case resultHome[i].homeGoalCount < resultHome[i].awayGoalCount:\n                  won = \"L\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                default:\n                  break;\n              }\n              break;\n            case resultHome[i].away_name === gameStats.home.teamName:\n              switch (true) {\n                case resultHome[i].homeGoalCount > resultHome[i].awayGoalCount:\n                  won = \"L\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                case resultHome[i].homeGoalCount ===\n                  resultHome[i].awayGoalCount:\n                  won = \"D\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                case resultHome[i].homeGoalCount < resultHome[i].awayGoalCount:\n                  won = \"W\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                default:\n                  break;\n              }\n              break;\n            default:\n              break;\n          }\n\n          gameArrayHome.push({\n            id: resultHome[i].id,\n            date: dateObject,\n            homeTeam: resultHome[i].home_name,\n            homeGoals: resultHome[i].homeGoalCount,\n            homeXG: resultHome[i].team_a_xg,\n            homeOdds: resultHome[i].odds_ft_1,\n            awayTeam: resultHome[i].away_name,\n            awayGoals: resultHome[i].awayGoalCount,\n            awayXG: resultHome[i].team_b_xg,\n            awayOdds: resultHome[i].odds_ft_2,\n            won: won,\n            homeShots: resultHome[i].team_a_shots,\n            awayShots: resultHome[i].team_b_shots,\n            homeSot: resultHome[i].team_a_shotsOnTarget,\n            awaySot: resultHome[i].team_b_shotsOnTarget,\n            homeRed: resultHome[i].team_a_red_cards,\n            awayRed: resultHome[i].team_b_red_cards,\n            homePossession: resultHome[i].team_a_possession,\n            awayPossession: resultHome[i].team_b_possession,\n            homeDangerousAttacks: resultHome[i].team_a_dangerous_attacks,\n            awayDangerousAttacks: resultHome[i].team_b_dangerous_attacks,\n            homePPG: resultHome[i].pre_match_teamA_overall_ppg,\n            awayPPG: resultHome[i].pre_match_teamB_overall_ppg,\n            unixTimestamp: resultHome[i].date_unix,\n            goalsFor: goalsScored,\n            goalsAgainst: goalsConceeded,\n            btts:\n              resultHome[i].homeGoalCount > 0 && resultHome[i].awayGoalCount > 0\n                ? \"\\u2714\"\n                : \"\\u2718\",\n          });\n        }\n\n        for (let i = 0; i < resultHomeOnly.length; i++) {\n          let wonHomeOrAwayOnly;\n\n          switch (true) {\n            case resultHomeOnly[i].home_name === gameStats.home.teamName:\n              switch (true) {\n                case resultHomeOnly[i].homeGoalCount >\n                  resultHomeOnly[i].awayGoalCount:\n                  wonHomeOrAwayOnly = \"W\";\n                  gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n                  break;\n                case resultHomeOnly[i].homeGoalCount ===\n                  resultHomeOnly[i].awayGoalCount:\n                  wonHomeOrAwayOnly = \"D\";\n                  gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n                  break;\n                case resultHomeOnly[i].homeGoalCount <\n                  resultHomeOnly[i].awayGoalCount:\n                  wonHomeOrAwayOnly = \"L\";\n                  gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n                  break;\n                default:\n                  break;\n              }\n              break;\n\n            default:\n              break;\n          }\n        }\n\n        goalDiffArrayHome = homeForm.allTeamResults.map(\n          (a) => a.scored - a.conceeded\n        );\n\n        // goalDiffArrayHome = gameArrayHome.map(\n        //   (a) => a.goalsFor - a.goalsAgainst\n        // );\n\n        let r = 5;\n        goalDiffHomeMovingAv = getEMA(\n          goalDiffArrayHome.reverse(),\n          goalDiffArrayHome.length < 5 ? goalDiffArrayHome.length : r\n        );\n\n        const cumulativeSumHome = (\n          (sum) => (value) =>\n            (sum += value)\n        )(0);\n\n        gameArrayHome.sort((a, b) => b.unixTimestamp - a.unixTimestamp);\n\n        rollingGoalDiffTotalHome = goalDiffArrayHome.map(cumulativeSumHome);\n\n        const resultAway = matches.fixtures.filter(\n          (game) =>\n            game.away_name === gameStats.away.teamName ||\n            game.home_name === gameStats.away.teamName\n        );\n\n        const resultAwayOnly = matches.fixtures.filter(\n          (game) => game.away_name === gameStats.away.teamName\n        );\n\n        resultAway.sort((a, b) => b.date_unix - a.date_unix);\n        resultAwayOnly.sort((a, b) => b.date_unix - a.date_unix);\n\n        for (let i = 0; i < resultAway.length; i++) {\n          let unixTimestamp = resultAway[i].date_unix;\n          let milliseconds = unixTimestamp * 1000;\n          let dateObject = new Date(milliseconds).toLocaleString(\"en-GB\", {\n            timeZone: \"UTC\",\n          });\n\n          let won;\n          let goalsScored;\n          let goalsConceeded;\n\n          switch (true) {\n            case resultAway[i].home_name === gameStats.away.teamName:\n              switch (true) {\n                case resultAway[i].homeGoalCount > resultAway[i].awayGoalCount:\n                  won = \"W\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                case resultAway[i].awayGoalCount ===\n                  resultAway[i].homeGoalCount:\n                  won = \"D\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                case resultAway[i].homeGoalCount < resultAway[i].awayGoalCount:\n                  won = \"L\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                default:\n                  break;\n              }\n              break;\n\n            case resultAway[i].away_name === gameStats.away.teamName:\n              switch (true) {\n                case resultAway[i].homeGoalCount > resultAway[i].awayGoalCount:\n                  won = \"L\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                case resultAway[i].homeGoalCount ===\n                  resultAway[i].awayGoalCount:\n                  won = \"D\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                case resultAway[i].homeGoalCount < resultAway[i].awayGoalCount:\n                  won = \"W\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                default:\n                  break;\n              }\n              break;\n            default:\n              break;\n          }\n\n          gameArrayAway.push({\n            id: resultAway[i].id,\n            date: dateObject,\n            homeTeam: resultAway[i].home_name,\n            homeGoals: resultAway[i].homeGoalCount,\n            homeXG: resultAway[i].team_a_xg,\n            homeOdds: resultAway[i].odds_ft_1,\n            awayTeam: resultAway[i].away_name,\n            awayGoals: resultAway[i].awayGoalCount,\n            awayXG: resultAway[i].team_b_xg,\n            awayOdds: resultAway[i].odds_ft_2,\n            won: won,\n            homeShots: resultAway[i].team_a_shots,\n            awayShots: resultAway[i].team_b_shots,\n            homeSot: resultAway[i].team_a_shotsOnTarget,\n            awaySot: resultAway[i].team_b_shotsOnTarget,\n            homeRed: resultAway[i].team_a_red_cards,\n            awayRed: resultAway[i].team_b_red_cards,\n            homePossession: resultAway[i].team_a_possession,\n            awayPossession: resultAway[i].team_b_possession,\n            homeDangerousAttacks: resultAway[i].team_a_dangerous_attacks,\n            awayDangerousAttacks: resultAway[i].team_b_dangerous_attacks,\n            homePPG: resultAway[i].pre_match_teamA_overall_ppg,\n            awayPPG: resultAway[i].pre_match_teamB_overall_ppg,\n            unixTimestamp: resultAway[i].date_unix,\n            goalsFor: goalsScored,\n            goalsAgainst: goalsConceeded,\n            btts:\n              resultAway[i].homeGoalCount > 0 && resultAway[i].awayGoalCount > 0\n                ? \"\\u2714\"\n                : \"\\u2718\",\n          });\n        }\n\n        for (let i = 0; i < resultAwayOnly.length; i++) {\n          let wonAwayOrAwayOnly;\n\n          switch (true) {\n            case resultAwayOnly[i].away_name === gameStats.away.teamName:\n              switch (true) {\n                case resultAwayOnly[i].awayGoalCount >\n                  resultAwayOnly[i].homeGoalCount:\n                  wonAwayOrAwayOnly = \"W\";\n                  gameArrayAwayTeamAwayGames.push(wonAwayOrAwayOnly);\n                  break;\n                case resultAwayOnly[i].awayGoalCount ===\n                  resultAwayOnly[i].homeGoalCount:\n                  wonAwayOrAwayOnly = \"D\";\n                  gameArrayAwayTeamAwayGames.push(wonAwayOrAwayOnly);\n                  break;\n                case resultAwayOnly[i].awayGoalCount <\n                  resultAwayOnly[i].homeGoalCount:\n                  wonAwayOrAwayOnly = \"L\";\n                  gameArrayAwayTeamAwayGames.push(wonAwayOrAwayOnly);\n                  break;\n                default:\n                  break;\n              }\n              break;\n\n            default:\n              break;\n          }\n        }\n\n        goalDiffArrayAway = awayForm.allTeamResults.map(\n          (a) => a.scored - a.conceeded\n        );\n\n        goalDiffAwayMovingAv = getEMA(\n          goalDiffArrayAway.reverse(),\n          goalDiffArrayAway.length < 5 ? goalDiffArrayAway.length : r\n        );\n\n        const cumulativeSumAway = (\n          (sum) => (value) =>\n            (sum += value)\n        )(0);\n\n        gameArrayAway.sort((a, b) => b.unixTimestamp - a.unixTimestamp);\n\n        rollingGoalDiffTotalAway = goalDiffArrayAway.map(cumulativeSumAway);\n\n        latestHomeGoalDiff =\n          goalDiffHomeMovingAv[goalDiffHomeMovingAv.length - 1];\n        latestAwayGoalDiff =\n          goalDiffAwayMovingAv[goalDiffAwayMovingAv.length - 1];\n        // });\n      }\n\n      const bttsArrayHome = Array.from(gameArrayHome, (x) => x.btts);\n      const bttsArrayAway = Array.from(gameArrayAway, (x) => x.btts);\n      const resultsArrayHome = Array.from(gameArrayHome, (x) => x.won);\n      const resultsArrayAway = Array.from(gameArrayAway, (x) => x.won);\n\n      let homeTeam = gameStats.home.teamName;\n      let awayTeam = gameStats.away.teamName;\n\n      let time = game.time;\n\n      if (homeForm.last3Points === undefined) {\n        homeForm.last3Points = getPointsFromLastX(homeForm.lastThreeForm);\n\n        homeForm.last5Points = getPointsFromLastX(homeForm.LastFiveForm);\n\n        homeForm.last6Points = getPointsFromLastX(homeForm.LastSixForm);\n\n        homeForm.last10Points = getPointsFromLastX(homeForm.LastTenForm);\n\n        awayForm.last3Points = getPointsFromLastX(awayForm.lastThreeForm);\n\n        awayForm.last5Points = getPointsFromLastX(awayForm.LastFiveForm);\n\n        awayForm.last6Points = getPointsFromLastX(awayForm.LastSixForm);\n\n        awayForm.last10Points = getPointsFromLastX(awayForm.LastTenForm);\n      }\n\n      async function getPointAverage(pointTotal, games) {\n        return pointTotal / games;\n      }\n\n      // let homeThreeGameAverage = await getPointAverage(\n      //   homeForm.last3Points,\n      //   3\n      // );\n\n      let homeFiveGameAverage = await getPointAverage(homeForm.last5Points, 5);\n\n      let homeSixGameAverage = await getPointAverage(homeForm.last6Points, 6);\n\n      let homeTenGameAverage = await getPointAverage(homeForm.last10Points, 10);\n\n      // let awayThreeGameAverage = await getPointAverage(\n      //   awayForm.last3Points,\n      //   3\n      // );\n\n      let awayFiveGameAverage = await getPointAverage(awayForm.last5Points, 5);\n\n      let awaySixGameAverage = await getPointAverage(awayForm.last6Points, 6);\n\n      let awayTenGameAverage = await getPointAverage(awayForm.last10Points, 10);\n\n      async function getPointsFromGames(formArr) {\n        const pairings = {\n          W: 3,\n          D: 1,\n          L: 0,\n        };\n        let newArr = [];\n        let arrayOfIndividualPoints = [];\n        let sum = 0;\n\n        for (let i = 0; i < formArr.length; i++) {\n          sum = sum + pairings[formArr[i]];\n          newArr.push(sum);\n          arrayOfIndividualPoints.push(pairings[formArr[i]]);\n        }\n        return [newArr, arrayOfIndividualPoints];\n      }\n\n      async function getLastGameResult(lastGame) {\n        let text;\n        switch (true) {\n          case lastGame === \"L\":\n            text = \"Lost\";\n            break;\n          case lastGame === \"D\":\n            text = \"Drew\";\n            break;\n          case lastGame === \"W\":\n            text = \"Won\";\n            break;\n          default:\n            break;\n        }\n        return text;\n      }\n\n      let homeFormTrend = [\n        homeFiveGameAverage.toFixed(2),\n        homeTenGameAverage.toFixed(2),\n      ];\n\n      let awayFormTrend = [\n        awayFiveGameAverage.toFixed(2),\n        awayTenGameAverage.toFixed(2),\n      ];\n\n      let formTextStringHome;\n      let formTextStringAway;\n\n      if (displayBool === true && gameStats.home[2].LeagueOrAll === \"League\") {\n        formTextStringHome = await GenerateFormSummary(\n          gameStats.home[2],\n          homeFormTrend,\n          gameStats.home[0]\n        );\n        formTextStringAway = await GenerateFormSummary(\n          gameStats.away[2],\n          awayFormTrend,\n          gameStats.away[0]\n        );\n      } else {\n        formTextStringHome = \"\";\n        formTextStringAway = \"\";\n      }\n\n      let favouriteRecordHome, favouriteRecordAway;\n\n      if (homeForm.oddsReliabilityWin && awayForm.oddsReliabilityWin) {\n        favouriteRecordHome =\n          game.homeOdds < game.awayOdds || game.homeOdds === game.awayOdds\n            ? `${homeForm.teamName} have been favourites ${\n                homeForm.favouriteCount\n              } times. Of these games, they have Won: ${homeForm.oddsReliabilityWin.toFixed(\n                0\n              )}%, Drawn:  ${homeForm.oddsReliabilityDraw.toFixed(\n                0\n              )}%, Lost:  ${homeForm.oddsReliabilityLose.toFixed(0)}%`\n            : `${homeForm.teamName} have been underdogs ${\n                homeForm.underdogCount\n              } times. Of these games, they have Won: ${homeForm.oddsReliabilityWinAsUnderdog.toFixed(\n                0\n              )}%, Drawn:  ${homeForm.oddsReliabilityDrawAsUnderdog.toFixed(\n                0\n              )}%, Lost:  ${homeForm.oddsReliabilityLoseAsUnderdog.toFixed(\n                0\n              )}%`;\n        favouriteRecordAway =\n          game.homeOdds > game.awayOdds || game.homeOdds === game.awayOdds\n            ? `${awayForm.teamName} have been favourites ${\n                awayForm.favouriteCount\n              } times. Of these games, they have Won: ${awayForm.oddsReliabilityWin.toFixed(\n                0\n              )}%, Drawn:  ${awayForm.oddsReliabilityDraw.toFixed(\n                0\n              )}%, Lost:  ${awayForm.oddsReliabilityLose.toFixed(0)}%`\n            : `${awayForm.teamName} have been underdogs ${\n                awayForm.underdogCount\n              } times. Of these games, they have Won: ${awayForm.oddsReliabilityWinAsUnderdog.toFixed(\n                0\n              )}%, Drawn:  ${awayForm.oddsReliabilityDrawAsUnderdog.toFixed(\n                0\n              )}%, Lost:  ${awayForm.oddsReliabilityLoseAsUnderdog.toFixed(\n                0\n              )}%`;\n      } else if (!homeForm.oddsReliabilityWin && awayForm.oddsReliabilityWin) {\n        favouriteRecordHome = 'No previous fixtures match the profile of this game.'\n        favouriteRecordAway =\n          game.homeOdds > game.awayOdds || game.homeOdds === game.awayOdds\n            ? `${awayForm.teamName} have been favourites ${\n                awayForm.favouriteCount\n              } times. Of these games, they have Won: ${awayForm.oddsReliabilityWin.toFixed(\n                0\n              )}%, Drawn:  ${awayForm.oddsReliabilityDraw.toFixed(\n                0\n              )}%, Lost:  ${awayForm.oddsReliabilityLose.toFixed(0)}%`\n            : `${awayForm.teamName} have been underdogs ${\n                awayForm.underdogCount\n              } times. Of these games, they have Won: ${awayForm.oddsReliabilityWinAsUnderdog.toFixed(\n                0\n              )}%, Drawn:  ${awayForm.oddsReliabilityDrawAsUnderdog.toFixed(\n                0\n              )}%, Lost:  ${awayForm.oddsReliabilityLoseAsUnderdog.toFixed(\n                0\n              )}%`;\n      } else if (homeForm.oddsReliabilityWin && !awayForm.oddsReliabilityWin){\n        favouriteRecordHome =\n          game.homeOdds < game.awayOdds || game.homeOdds === game.awayOdds\n            ? `${homeForm.teamName} have been favourites ${\n                homeForm.favouriteCount\n              } times. Of these games, they have Won: ${homeForm.oddsReliabilityWin.toFixed(\n                0\n              )}%, Drawn:  ${homeForm.oddsReliabilityDraw.toFixed(\n                0\n              )}%, Lost:  ${homeForm.oddsReliabilityLose.toFixed(0)}%`\n            : `${homeForm.teamName} have been underdogs ${\n                homeForm.underdogCount\n              } times. Of these games, they have Won: ${homeForm.oddsReliabilityWinAsUnderdog.toFixed(\n                0\n              )}%, Drawn:  ${homeForm.oddsReliabilityDrawAsUnderdog.toFixed(\n                0\n              )}%, Lost:  ${homeForm.oddsReliabilityLoseAsUnderdog.toFixed(\n                0\n              )}%`;\n        favouriteRecordAway = 'No previous fixtures match the profile of this game.'\n      } else if(!homeForm.oddsReliabilityWin && !awayForm.oddsReliabilityWin){\n        favouriteRecordHome = 'No previous fixtures match the profile of this game.'\n        favouriteRecordAway = 'No previous fixtures match the profile of this game.'\n      }\n\n      let homeLastGame = await getLastGameResult(homeForm.LastFiveForm[4]);\n      let awayLastGame = await getLastGameResult(awayForm.LastFiveForm[4]);\n\n      // let homeAttackStrength = await getAttackStrength(\n      //   homeForm.ScoredOverall / 10\n      // );\n\n      const attackingMetricsHome = {\n        // averagePossession: homeForm.AveragePossessionOverall,\n        \"Average Dangerous Attacks\": homeForm.AverageDangerousAttacksOverall,\n        \"Average Shots\": homeForm.AverageShots,\n        \"Average Shots On Target\": homeForm.AverageShotsOnTargetOverall,\n        \"Average Expected Goals\": homeForm.XGOverall,\n        \"Recent XG\": homeForm.XGlast5 ? homeForm.XGlast5 : homeForm.XGOverall,\n        \"Average Goals\":\n          homeForm.averageScoredLeague !== undefined &&\n          homeForm.averageScoredLeague !== null\n            ? homeForm.averageScoredLeague\n            : homeForm.ScoredOverall / 10,\n      };\n      const attackingMetricsAway = {\n        // averagePossession: awayForm.AveragePossessionOverall,\n        \"Average Dangerous Attacks\": awayForm.AverageDangerousAttacksOverall,\n        \"Average Shots\": awayForm.AverageShots,\n        \"Average Shots On Target\": awayForm.AverageShotsOnTargetOverall,\n        \"Average Expected Goals\": awayForm.XGOverall,\n        \"Recent XG\": awayForm.XGlast5 ? awayForm.XGlast5 : awayForm.XGOverall,\n        \"Average Goals\":\n          awayForm.averageScoredLeague !== undefined &&\n          awayForm.averageScoredLeague !== null\n            ? awayForm.averageScoredLeague\n            : awayForm.ScoredOverall / 10,\n      };\n\n      const defensiveMetricsHome = {\n        \"Clean Sheet Percentage\": 100 - homeForm.CleanSheetPercentage,\n        \"Average XG Against\": homeForm.XGAgainstAvgOverall,\n        \"Recent XG Against\": homeForm.XGAgainstlast5\n          ? homeForm.XGAgainstlast5\n          : homeForm.XGAgainstAvgOverall,\n        \"Average Goals Against\":\n          homeForm.averageConceededLeague !== undefined &&\n          homeForm.averageConceededLeague !== null\n            ? homeForm.averageConceededLeague\n            : homeForm.ConcededOverall / 10,\n      };\n\n      const defensiveMetricsAway = {\n        \"Clean Sheet Percentage\": 100 - awayForm.CleanSheetPercentage,\n        \"Average XG Against\": awayForm.XGAgainstAvgOverall,\n        \"Recent XG Against\": awayForm.XGAgainstlast5\n          ? awayForm.XGAgainstlast5\n          : awayForm.XGAgainstAvgOverall,\n        \"Average Goals Against\":\n          awayForm.averageConceededLeague !== undefined &&\n          awayForm.averageConceededLeague !== null\n            ? awayForm.averageConceededLeague\n            : awayForm.ConcededOverall / 10,\n      };\n\n      let homeXGRating;\n      let awayXGRating;\n      let homeAttackStrength;\n      let homeAttackStrengthLast5;\n      let homeOnlyAttackStrength;\n      let homeDefenceStrength;\n      let homeDefenceStrengthLast5;\n      let homeOnlyDefenceStrength;\n      let homePossessionStrength;\n      let homePossessionStrengthLast5;\n      let homeOnlyPossessionStrength;\n      let homeXGForStrength;\n      let homeXGForStrengthLast5;\n      let homeOnlyXGForStrength;\n      let homeXGAgainstStrength;\n      let homeXGAgainstStrengthLast5;\n      let homeOnlyXGAgainstStrength;\n      let awayAttackStrength;\n      let awayAttackStrengthLast5;\n      let awayOnlyAttackStrength;\n      let awayDefenceStrength;\n      let awayDefenceStrengthLast5;\n      let awayOnlyDefenceStrength;\n      let awayPossessionStrength;\n      let awayPossessionStrengthLast5;\n      let awayOnlyPossessionStrength;\n      let awayXGForStrength;\n      let awayXGForStrengthLast5;\n      let awayOnlyXGForStrength;\n      let awayXGAgainstStrength;\n      let awayXGAgainstStrengthLast5;\n      let awayOnlyXGAgainstStrength;\n      let homeDirectnessStrength;\n      let homeDirectnessStrengthLast5;\n      let homeOnlyDirectnessStrength;\n      let awayDirectnessStrength;\n      let awayDirectnessStrengthLast5;\n      let awayOnlyDirectnessStrength;\n      let homeAccuracyOverallStrength;\n      let homeAccuracyOverallStrengthLast5;\n      let homeOnlyAccuracyOverallStrength;\n      let awayAccuracyOverallStrength;\n      let awayAccuracyOverallStrengthLast5;\n      let awayOnlyAccuracyOverallStrength;\n\n      if (homeForm.xgForStrength) {\n        console.log(\"not calculating\");\n        homeXGRating = homeForm.XGRating;\n        awayXGRating = awayForm.XGRating;\n        homeAttackStrength = homeForm.attackingStrength;\n        homeAttackStrengthLast5 = homeForm.attackingStrengthLast5;\n        homeOnlyAttackStrength = homeForm.attackingStrengthHomeOnly;\n        homeDefenceStrength = homeForm.defensiveStrength;\n        homeDefenceStrengthLast5 = homeForm.defensiveStrengthLast5;\n        homeOnlyDefenceStrength = homeForm.defensiveStrengthHomeOnly;\n        homePossessionStrength = homeForm.possessionStrength;\n        homePossessionStrengthLast5 = homeForm.possessionStrengthLast5;\n        homeOnlyPossessionStrength = homeForm.possessionStrengthHomeOnly;\n        homeXGForStrength = homeForm.xgForStrength;\n        homeXGForStrengthLast5 = homeForm.xgForStrengthLast5;\n        homeOnlyXGForStrength = homeForm.xgForStrengthHomeOnly;\n        homeXGAgainstStrength = homeForm.xgAgainstStrength;\n        homeXGAgainstStrengthLast5 = homeForm.xgAgainstStrengthLast5;\n        homeOnlyXGAgainstStrength = homeForm.xgAgainstStrengthHomeOnly;\n        homeDirectnessStrength = homeForm.directnessOverallStrength;\n        homeDirectnessStrengthLast5 = homeForm.directnessOverallStrengthLast5;\n        homeOnlyDirectnessStrength = homeForm.directnessHomeStrength;\n        homeAccuracyOverallStrength = homeForm.accuracyOverallStrength;\n        homeAccuracyOverallStrengthLast5 =\n          homeForm.accuracyOverallStrengthLast5;\n        homeOnlyAccuracyOverallStrength = homeForm.accuracyHomeStrength;\n        awayAttackStrength = awayForm.attackingStrength;\n        awayAttackStrengthLast5 = awayForm.attackingStrengthLast5;\n        awayOnlyAttackStrength = awayForm.attackingStrengthAwayOnly;\n        awayDefenceStrength = awayForm.defensiveStrength;\n        awayDefenceStrengthLast5 = awayForm.defensiveStrengthLast5;\n        awayOnlyDefenceStrength = awayForm.defensiveStrengthAwayOnly;\n        awayPossessionStrength = awayForm.possessionStrength;\n        awayPossessionStrengthLast5 = awayForm.possessionStrengthLast5;\n        awayOnlyPossessionStrength = awayForm.possessionStrengthAwayOnly;\n        awayXGForStrength = awayForm.xgForStrength;\n        awayXGForStrengthLast5 = awayForm.xgForStrengthLast5;\n        awayOnlyXGForStrength = awayForm.xgForStrengthAwayOnly;\n        awayXGAgainstStrength = awayForm.xgAgainstStrength;\n        awayXGAgainstStrengthLast5 = awayForm.xgAgainstStrengthLast5;\n        awayOnlyXGAgainstStrength = awayForm.xgAgainstStrengthAwayOnly;\n        awayDirectnessStrength = awayForm.directnessOverallStrength;\n        awayDirectnessStrengthLast5 = awayForm.directnessOverallStrengthLast5;\n        awayOnlyDirectnessStrength = awayForm.directnessAwayStrength;\n        awayAccuracyOverallStrength = awayForm.accuracyOverallStrength;\n        awayAccuracyOverallStrengthLast5 =\n          awayForm.accuracyOverallStrengthLast5;\n        awayOnlyAccuracyOverallStrength = awayForm.accuracyAwayStrength;\n      } else {\n        homeAttackStrength = await calculateAttackingStrength(\n          attackingMetricsHome\n        );\n\n        homeDefenceStrength = await calculateDefensiveStrength(\n          defensiveMetricsHome\n        );\n\n        homePossessionStrength = await calculateMetricStrength(\n          \"averagePossession\",\n          homeForm.AveragePossessionOverall\n        );\n\n        homeXGForStrength = await calculateMetricStrength(\n          \"xgFor\",\n          gameStats.home[2].XGOverall\n        );\n\n        homeXGAgainstStrength = await calculateMetricStrength(\n          \"xgAgainst\",\n          3 - gameStats.home[2].XGAgainstAvgOverall\n        );\n        homeDirectnessStrength = await calculateMetricStrength(\n          \"directnessOverall\",\n          homeForm.directnessOverall\n        );\n        homeAccuracyOverallStrength = await calculateMetricStrength(\n          \"accuracyOverall\",\n          homeForm.shootingAccuracy\n        );\n\n        awayAttackStrength = await calculateAttackingStrength(\n          attackingMetricsAway\n        );\n        awayDefenceStrength = await calculateDefensiveStrength(\n          defensiveMetricsAway\n        );\n        awayPossessionStrength = await calculateMetricStrength(\n          \"averagePossession\",\n          awayForm.AveragePossessionOverall\n        );\n        awayXGForStrength = await calculateMetricStrength(\n          \"xgFor\",\n          gameStats.away[2].XGOverall\n        );\n\n        awayXGAgainstStrength = await calculateMetricStrength(\n          \"xgAgainst\",\n          3 - gameStats.away[2].XGAgainstAvgOverall\n        );\n        awayDirectnessStrength = await calculateMetricStrength(\n          \"directnessOverall\",\n          awayForm.directnessOverall\n        );\n        awayAccuracyOverallStrength = await calculateMetricStrength(\n          \"accuracyOverall\",\n          awayForm.shootingAccuracy\n        );\n      }\n\n      let [formPointsHome, testArrayHome] = await getPointsFromGames(\n        gameStats.home[2].WDLRecord\n      );\n      let [formPointsAway, testArrayAway] = await getPointsFromGames(\n        gameStats.away[2].WDLRecord\n      );\n\n      let rollingGoalDiffHome = [\n        (gameStats.home[0].ScoredOverall - gameStats.home[0].ConcededOverall) /\n          10,\n        (gameStats.home[1].ScoredOverall - gameStats.home[1].ConcededOverall) /\n          6,\n        (gameStats.home[2].ScoredOverall - gameStats.home[2].ConcededOverall) /\n          5,\n      ];\n\n      let rollingGoalDiffAway = [\n        (gameStats.away[0].ScoredOverall - gameStats.away[0].ConcededOverall) /\n          10,\n        (gameStats.away[1].ScoredOverall - gameStats.away[1].ConcededOverall) /\n          6,\n        (gameStats.away[2].ScoredOverall - gameStats.away[2].ConcededOverall) /\n          5,\n      ];\n\n      const formDataMatch = [];\n\n      formDataMatch.push({\n        btts: game.btts_potential,\n      });\n\n      const formDataHome = [];\n\n      formDataHome.push({\n        name: game.homeTeam,\n        Last5: gameStats.home[2].LastFiveForm,\n        LeagueOrAll: gameStats.home[2].LeagueOrAll,\n        AverageGoals: homeForm.ScoredOverall / 10,\n        AverageConceeded: homeForm.ConcededOverall / 10,\n        AverageXG: homeForm.XGOverall,\n        AverageXGConceded: homeForm.XGAgainstAvgOverall,\n        AveragePossession: homeForm.AveragePossessionOverall,\n        AverageShotsOnTarget: homeForm.AverageShotsOnTargetOverall,\n        AverageDangerousAttacks: homeForm.AverageDangerousAttacksOverall,\n        homeOrAway: \"Home\",\n        leaguePosition: homeForm.LeaguePosition,\n        Last5PPG: homeForm.PPG,\n        SeasonPPG: homeForm.SeasonPPG,\n        lastGame: homeLastGame,\n        formRun: homeForm.formRun,\n        goalDifference: homeForm.goalDifference,\n        goalDifferenceHomeOrAway: homeForm.goalDifferenceHomeOrAway,\n        // BttsPercentage: homeForm.BttsPercentage || \"-\",\n        // BttsPercentageHomeOrAway: homeForm.BttsPercentageHomeOrAway || \"-\",\n        CardsTotal: homeForm.CardsTotal || \"-\",\n        CornersAverage: homeForm.AverageCorners || \"-\",\n        FormTextStringHome: formTextStringHome,\n        FavouriteRecord:\n          favouriteRecordHome + `. ${homeForm.reliabilityString}`,\n        BTTSArray: bttsArrayHome,\n        Results: homeForm.resultsAll,\n        ResultsHorA: homeForm.resultsHome.reverse(),\n        XGSwing: homeForm.XGChangeRecently\n        // BTTSAll: homeForm.last10btts,\n        // BTTSHorA: homeForm.last10bttsHome,\n      });\n\n      const formDataAway = [];\n\n      formDataAway.push({\n        name: game.awayTeam,\n        Last5: gameStats.away[2].LastFiveForm,\n        LeagueOrAll: gameStats.away[2].LeagueOrAll,\n        AverageGoals: awayForm.ScoredOverall / 10,\n        AverageConceeded: awayForm.ConcededOverall / 10,\n        AverageXG: awayForm.XGOverall,\n        AverageXGConceded: awayForm.XGAgainstAvgOverall,\n        AveragePossession: awayForm.AveragePossessionOverall,\n        AverageShotsOnTarget: awayForm.AverageShotsOnTargetOverall,\n        AverageDangerousAttacks: awayForm.AverageDangerousAttacksOverall,\n        homeOrAway: \"Away\",\n        leaguePosition: awayForm.LeaguePosition,\n        Last5PPG: awayForm.PPG,\n        SeasonPPG: awayForm.SeasonPPG,\n        lastGame: awayLastGame,\n        formRun: awayForm.formRun,\n        goalDifference: awayForm.goalDifference,\n        goalDifferenceHomeOrAway: awayForm.goalDifferenceHomeOrAway,\n        // BttsPercentage: awayForm.BttsPercentage || \"-\",\n        // BttsPercentageHomeOrAway: awayForm.BttsPercentageHomeOrAway || \"-\",\n        CardsTotal: awayForm.CardsTotal || \"-\",\n        CornersAverage: awayForm.AverageCorners || \"-\",\n        FormTextStringAway: formTextStringAway,\n        FavouriteRecord:\n          favouriteRecordAway + `. ${awayForm.reliabilityString}`,\n        BTTSArray: bttsArrayAway,\n        Results: awayForm.resultsAll,\n        ResultsHorA: awayForm.resultsAway.reverse(),\n        XGSwing: awayForm.XGChangeRecently\n        // BTTSAll: awayForm.last10btts,\n        // BTTSHorA: awayForm.last10bttsAway,\n      });\n\n      let formArrayHome;\n      let formArrayAway;\n      let chartType;\n\n      if (formPointsHome.length > 1) {\n        formArrayHome = formPointsHome;\n        formArrayAway = formPointsAway;\n        chartType = \"Points over time\";\n      } else {\n        formArrayHome = [\n          homeTenGameAverage,\n          homeSixGameAverage,\n          homeFiveGameAverage,\n        ];\n        formArrayAway = [\n          awayTenGameAverage,\n          awaySixGameAverage,\n          awayFiveGameAverage,\n        ];\n        chartType = \"Rolling average points over last 10\";\n      }\n\n      ReactDOM.render(\n        <div style={style}>\n          <div className=\"H2HStats\" id={`H2HStats${game.id}`}></div>\n          <div className=\"TrendsHome\" id={`TrendsHome${game.id}`}></div>\n          <div className=\"TrendsAway\" id={`TrendsAway${game.id}`}></div>\n        </div>,\n        document.getElementById(\"history\" + homeTeam)\n      );\n\n      //This tournament does not have league positions\n      if (game.leagueName === \"Europe UEFA Women's Euro\") {\n        game.homeTeamHomePosition = \"N/A\";\n        game.awayTeamAwayPosition = \"N/A\";\n      }\n\n      function singleResult(game) {\n        return (\n          <div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeXG}</span>\n              <span className=\"column\">XG</span>\n              <span className=\"column\">{game.awayXG}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeShots}</span>\n              <span className=\"column\">Shots</span>\n              <span className=\"column\">{game.awayShots}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeSot}</span>\n              <span className=\"column\">SOT</span>\n              <span className=\"column\">{game.awaySot}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeDangerousAttacks}</span>\n              <span className=\"column\">Dangerous Attacks</span>\n              <span className=\"column\">{game.awayDangerousAttacks}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homePossession}%</span>\n              <span className=\"column\">Possession</span>\n              <span className=\"column\">{game.awayPossession}%</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeRed}</span>\n              <span className=\"column\">Red cards</span>\n              <span className=\"column\">{game.awayRed}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homePPG}</span>\n              <span className=\"column\">PPG (pre-match)</span>\n              <span className=\"column\">{game.awayPPG}</span>\n            </div>\n          </div>\n        );\n      }\n\n      function singleSimilarResult(game) {\n        return (\n          <div>\n            <div className=\"ResultRowSmallDate\">\n              <span>{game.date}</span>\n            </div>\n            {/* <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.XG}</span>\n              <span className=\"column\">XG</span>\n              <span className=\"column\">{game.XGAgainst}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.sot}</span>\n              <span className=\"column\">SOT</span>\n              <span className=\"column\">{game.sotAgainst}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.possession}%</span>\n              <span className=\"column\">Possession</span>\n              <span className=\"column\">{100 - game.possession}%</span>\n            </div> */}\n          </div>\n        );\n      }\n\n      const overviewHome = gameArrayHome.slice(0, 10).map((game) => (\n        <div>\n          <Collapsable\n            classNameButton=\"ResultButton\"\n            buttonText={\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {game.homeGoals} : {game.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n              </div>\n            }\n            element={singleResult(game)}\n          />\n        </div>\n      ));\n\n      const overviewAway = gameArrayAway.slice(0, 10).map((game) => (\n        <div>\n          <Collapsable\n            classNameButton=\"ResultButton\"\n            buttonText={\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {game.homeGoals} : {game.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n              </div>\n            }\n            element={singleResult(game)}\n          />\n        </div>\n      ));\n\n      let similarGamesHome;\n\n      if (game.simlarGameResultsHome) {\n        similarGamesHome = game.simlarGameResultsHome.reverse().map((game) => (\n          <div>\n            <Collapsable\n              classNameButton=\"ResultButton\"\n              buttonText={\n                <div className={`ResultRowOverviewSmall${game.result}`}>\n                  <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                  <span className=\"columnOverviewScoreSmall\">\n                    {game.homeGoals} : {game.awayGoals}\n                  </span>\n                  <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n                </div>\n              }\n              element={singleSimilarResult(game)}\n            />\n          </div>\n        ));\n      } else {\n        similarGamesHome = (\n          <h4 className=\"NoGames\">No previous games fit this profile</h4>\n        );\n      }\n\n      let similarGamesAway;\n      if (game.simlarGameResultsAway) {\n        similarGamesAway = game.simlarGameResultsAway.reverse().map((game) => (\n          <div>\n            <Collapsable\n              classNameButton=\"ResultButton\"\n              buttonText={\n                <div className={`ResultRowOverviewSmall${game.result}`}>\n                  <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                  <span className=\"columnOverviewScoreSmall\">\n                    {game.homeGoals} : {game.awayGoals}\n                  </span>\n                  <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n                </div>\n              }\n              element={singleSimilarResult(game)}\n            />\n          </div>\n        ));\n      } else {\n        similarGamesAway = <h4>No previous games fit this profile</h4>;\n      }\n\n      function StatsHome() {\n        return (\n          <div className=\"flex-childOne\">\n            <ul style={style}>\n              <Stats\n                style={style}\n                homeOrAway=\"Home\"\n                gameCount={divider}\n                key={formDataHome[0].name}\n                last5={formDataHome[0].Last5}\n                homeOrAwayResults={gameArrayHomeTeamHomeGames}\n                LeagueOrAll={formDataHome[0].LeagueOrAll}\n                className={\"KeyStatsHome\"}\n                name={formDataHome[0].name}\n                goals={homeForm.avgScored}\n                conceeded={homeForm.avgConceeded}\n                XG={homeForm.XGOverall.toFixed(2)}\n                XGConceded={homeForm.XGAgainstAvgOverall.toFixed(2)}\n                XGSwing={homeForm.XGChangeRecently}\n                possession={homeForm.AveragePossessionOverall.toFixed(2)}\n                sot={homeForm.AverageShotsOnTargetOverall.toFixed(2)}\n                dangerousAttacks={\n                  homeForm.AverageDangerousAttacksOverall !== 0\n                    ? homeForm.AverageDangerousAttacksOverall.toFixed(2)\n                    : homeForm.AverageDangerousAttacks\n                }\n                leaguePosition={\n                  formDataHome[0].leaguePosition !== undefined &&\n                  formDataHome[0].leaguePosition !== \"undefined\"\n                    ? formDataHome[0].leaguePosition\n                    : 0\n                }\n                rawPosition={\n                  game.homeRawPosition !== undefined &&\n                  game.homeRawPosition !== \"undefined\"\n                    ? game.homeRawPosition\n                    : 0\n                }\n                homeOrAwayLeaguePosition={\n                  game.homeTeamHomePosition !== undefined &&\n                  game.homeTeamHomePosition !== \"undefined\"\n                    ? game.homeTeamHomePosition\n                    : 0\n                }\n                winPercentage={\n                  game.homeTeamWinPercentage ? game.homeTeamWinPercentage : 0\n                }\n                lossPercentage={\n                  game.homeTeamLossPercentage ? game.homeTeamLossPercentage : 0\n                }\n                drawPercentage={\n                  game.homeTeamDrawPercentage ? game.homeTeamDrawPercentage : 0\n                }\n                ppg={formDataHome[0].SeasonPPG}\n                formTrend={[\n                  homeTenGameAverage.toFixed(2),\n                  homeSixGameAverage.toFixed(2),\n                  homeFiveGameAverage.toFixed(2),\n                ]}\n                lastGame={homeLastGame}\n                formRun={homeForm.resultsAll.reverse()}\n                goalDifference={formDataHome[0].goalDifference}\n                goalDifferenceHomeOrAway={\n                  formDataHome[0].goalDifferenceHomeOrAway\n                }\n                BttsPercentage={formDataHome[0].BttsPercentage}\n                BttsPercentageHomeOrAway={\n                  formDataHome[0].BttsPercentageHomeOrAway\n                }\n                // BTTSAll={\n                //   formDataHome[0].BTTSAll\n                //     ? formDataHome[0].BTTSAll\n                //     : '\"Get Predictions\" first'\n                // }\n                // BTTSHorA={\n                //   formDataHome[0].BTTSHorA\n                //     ? formDataHome[0].BTTSHorA\n                //     : '\"Get Predictions\" first'\n                // }\n                BTTSArray={formDataHome[0].BTTSArray}\n                Results={formDataHome[0].Results}\n                ResultsHorA={formDataHome[0].ResultsHorA}\n                CardsTotal={formDataHome[0].CardsTotal}\n                CornersAverage={homeForm.AverageCorners}\n                ScoredBothHalvesPercentage={\n                  formDataHome[0].ScoredBothHalvesPercentage\n                }\n                FormTextString={formDataHome[0].FormTextStringHome}\n                FavouriteRecord={formDataHome[0].FavouriteRecord}\n              />\n            </ul>\n          </div>\n        );\n      }\n\n      function StatsAway() {\n        return (\n          <div className=\"flex-childTwo\">\n            <ul style={style}>\n              <Stats\n                style={style}\n                homeOrAway=\"Away\"\n                gameCount={divider}\n                key={formDataAway[0].name}\n                last5={formDataAway[0].Last5}\n                homeOrAwayResults={gameArrayAwayTeamAwayGames}\n                LeagueOrAll={formDataAway[0].LeagueOrAll}\n                className={\"KeyStatsAway\"}\n                classNameTwo={\"FormStatsAway\"}\n                name={formDataAway[0].name}\n                goals={awayForm.avgScored}\n                conceeded={awayForm.avgConceeded}\n                XG={awayForm.XGOverall.toFixed(2)}\n                XGConceded={awayForm.XGAgainstAvgOverall.toFixed(2)}\n                XGSwing={awayForm.XGChangeRecently}\n                //todo add goal diff and btts percentages\n                possession={awayForm.AveragePossessionOverall.toFixed(2)}\n                rawPosition={game.awayRawPosition ? game.awayRawPosition : 0}\n                sot={awayForm.AverageShotsOnTargetOverall.toFixed(2)}\n                dangerousAttacks={\n                  awayForm.AverageDangerousAttacksOverall !== 0\n                    ? awayForm.AverageDangerousAttacksOverall.toFixed(2)\n                    : awayForm.AverageDangerousAttacks\n                }\n                leaguePosition={\n                  formDataAway[0].leaguePosition !== undefined &&\n                  formDataAway[0].leaguePosition !== \"undefined\"\n                    ? formDataAway[0].leaguePosition\n                    : 0\n                }\n                homeOrAwayLeaguePosition={\n                  game.awayTeamAwayPosition !== undefined &&\n                  game.awayTeamAwayPosition !== \"undefinedundefined\"\n                    ? game.awayTeamAwayPosition\n                    : 0\n                }\n                winPercentage={\n                  game.awayTeamWinPercentage ? game.awayTeamWinPercentage : 0\n                }\n                lossPercentage={\n                  game.awayTeamLossPercentage ? game.awayTeamLossPercentage : 0\n                }\n                drawPercentage={\n                  game.awayTeamDrawPercentage ? game.awayTeamDrawPercentage : 0\n                }\n                ppg={formDataAway[0].SeasonPPG}\n                formTrend={[\n                  awayTenGameAverage.toFixed(2),\n                  awaySixGameAverage.toFixed(2),\n                  awayFiveGameAverage.toFixed(2),\n                ]}\n                lastGame={awayLastGame}\n                formRun={awayForm.resultsAll.reverse()}\n                goalDifference={formDataAway[0].goalDifference}\n                goalDifferenceHomeOrAway={\n                  formDataAway[0].goalDifferenceHomeOrAway\n                }\n                BttsPercentage={formDataAway[0].BttsPercentage}\n                BttsPercentageHomeOrAway={\n                  formDataAway[0].BttsPercentageHomeOrAway\n                }\n                // BTTSAll={\n                //   formDataAway[0].BTTSAll\n                //     ? formDataAway[0].BTTSAll\n                //     : '\"Get Predictions\" first'\n                // }\n                // BTTSHorA={\n                //   formDataAway[0].BTTSHorA\n                //     ? formDataAway[0].BTTSHorA\n                //     : '\"Get Predictions\" first'\n                // }\n                BTTSArray={formDataAway[0].BTTSArray}\n                Results={formDataAway[0].Results}\n                ResultsHorA={formDataAway[0].ResultsHorA}\n                CardsTotal={formDataAway[0].CardsTotal}\n                CornersAverage={awayForm.AverageCorners}\n                ScoredBothHalvesPercentage={\n                  formDataAway[0].ScoredBothHalvesPercentage\n                }\n                FormTextString={formDataAway[0].FormTextStringAway}\n                FavouriteRecord={formDataAway[0].FavouriteRecord}\n              />\n            </ul>\n          </div>\n        );\n      }\n\n      // const allHomeGames = homeForm.WDLRecord.reverse();\n      // const allAwayGames = awayForm.WDLRecord.reverse();\n\n      // // const pointsHome = getPointsFromLastX(formDataHome[0].Last5);\n      // const pointsHome = getPointsFromLastX(allHomeGames);\n      // const pointsHomeAv = await getPointAverage(\n      //   pointsHome,\n      //   allHomeGames.length\n      // );\n      // const pointsHomeLast5 = getPointsFromLastX(allHomeGames.slice(0, 5));\n      // const pointsHomeAvLast5 = await getPointAverage(pointsHomeLast5, 5);\n      // const pointsAway = getPointsFromLastX(allAwayGames);\n      // const pointsAwayAv = await getPointAverage(\n      //   pointsAway,\n      //   allAwayGames.length\n      // );\n      // const pointsAwayLast5 = getPointsFromLastX(allAwayGames.slice(0, 5));\n      // const pointsAwayAvLast5 = await getPointAverage(pointsAwayLast5, 5);\n\n      // console.log(homeForm.WDLRecord.length);\n      // console.log(pointsHomeAvLast5);\n      // console.log(pointsAwayAvLast5);\n\n      let id, team1, team2, timestamp, homeGoals, awayGoals;\n\n      async function getGameIdByHomeTeam(games, homeTeamName) {\n        const matchingGames = games.filter((game) =>\n          game.homeTeam.includes(homeTeamName)\n        );\n        if (matchingGames.length > 0) {\n          return matchingGames[0];\n        } else {\n          return null; // or any other value you prefer to return if no match is found\n        }\n      }\n\n      const matchingGame = await getGameIdByHomeTeam(\n        arrayOfGames,\n        game.homeTeam\n      );\n\n      console.log(matchingGame);\n      if (matchingGame) {\n        id = matchingGame.id.toString();\n        team1 = matchingGame.homeTeam;\n        team2 = matchingGame.awayTeam;\n        timestamp = matchingGame.time;\n        homeGoals = matchingGame.homeGoals;\n        awayGoals = matchingGame.awayGoals;\n      } else {\n        id = \"0\";\n        team1 = \"N/A\";\n        team2 = \"N/A\";\n        timestamp = 1;\n        homeGoals = \"-\";\n        awayGoals = \"-\";\n      }\n\n      if (homeForm.completeData === true && game.completeData === true) {\n        ReactDOM.render(\n          <>\n            <div style={style}>\n              <Collapsable\n                buttonText={\"Lineups & match action\"}\n                classNameButton=\"Lineups\"\n                element={\n                  <>\n                    <SofaLineupsWidget\n                      id={id}\n                      team1={team1}\n                      team2={team2}\n                      time={timestamp}\n                      homeGoals={homeGoals}\n                      awayGoals={awayGoals}\n                    ></SofaLineupsWidget>\n                  </>\n                }\n              />\n              <div style={style}>\n                <Div className=\"MatchTime\" text={`Kick off: ${time} GMT`}></Div>\n              </div>\n              <div className=\"flex-container\">\n                <StatsHome />\n                <StatsAway />\n              </div>\n              <div className=\"Chart\" id={`Chart${game.id}`} style={style}>\n                <RadarChart\n                  title=\"XG Tipping Strength Ratings - All Games\"\n                  data={[\n                    homeAttackStrength,\n                    homeDefenceStrength,\n                    homePossessionStrength,\n                    homeXGForStrength,\n                    homeXGAgainstStrength,\n                    homeDirectnessStrength,\n                    homeAccuracyOverallStrength,\n                  ]}\n                  data2={[\n                    awayAttackStrength,\n                    awayDefenceStrength,\n                    awayPossessionStrength,\n                    awayXGForStrength,\n                    awayXGAgainstStrength,\n                    awayDirectnessStrength,\n                    awayAccuracyOverallStrength,\n                  ]}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                ></RadarChart>\n                <RadarChart\n                  title=\"XG Tipping Strength Ratings - Last 5 games\"\n                  data={[\n                    homeAttackStrengthLast5,\n                    homeDefenceStrengthLast5,\n                    homePossessionStrengthLast5,\n                    homeXGForStrengthLast5,\n                    homeXGAgainstStrengthLast5,\n                    homeDirectnessStrengthLast5,\n                    homeAccuracyOverallStrengthLast5,\n                  ]}\n                  data2={[\n                    awayAttackStrengthLast5,\n                    awayDefenceStrengthLast5,\n                    awayPossessionStrengthLast5,\n                    awayXGForStrengthLast5,\n                    awayXGAgainstStrengthLast5,\n                    awayDirectnessStrengthLast5,\n                    awayAccuracyOverallStrengthLast5,\n                  ]}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                ></RadarChart>\n                <RadarChart\n                  title=\"XG Tipping Strength Ratings - Home/Away Games Only\"\n                  data={[\n                    homeOnlyAttackStrength,\n                    homeOnlyDefenceStrength,\n                    homeOnlyPossessionStrength,\n                    homeOnlyXGForStrength,\n                    homeOnlyXGAgainstStrength,\n                    homeOnlyDirectnessStrength,\n                    homeOnlyAccuracyOverallStrength,\n                  ]}\n                  data2={[\n                    awayOnlyAttackStrength,\n                    awayOnlyDefenceStrength,\n                    awayOnlyPossessionStrength,\n                    awayOnlyXGForStrength,\n                    awayOnlyXGAgainstStrength,\n                    awayOnlyDirectnessStrength,\n                    awayOnlyAccuracyOverallStrength,\n                  ]}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                ></RadarChart>\n                <DoughnutChart\n                  data={[homeXGRating, awayXGRating]}\n                  homeTeam={game.homeTeam}\n                  awayTeam={game.awayTeam}\n                ></DoughnutChart>\n                <BarChartTwo\n                  text=\"Recent XG Differential Swing\"\n                  homeTeam={homeForm.teamName}                  \n                  awayTeam={awayForm.teamName}\n                  data1={[\n                    homeForm.XGChangeRecently.toFixed(2)\n                  ]}\n                  data2={[\n                    awayForm.XGChangeRecently.toFixed(2)\n                  ]}\n                ></BarChartTwo>\n                <BarChart\n                  text=\"H2H - Home Team | Away Team\"\n                  data1={[\n                    homeForm.avgScored * 2,\n                    awayForm.avgConceeded * 2,\n                    homeForm.avPointsAll * 3,\n                    homeForm.XGOverall * 2,\n                    awayForm.XGAgainstAvgOverall * 2,\n                    homeForm.AverageShotsOnTargetOverall,\n                    homeForm.AverageDangerousAttacksOverall !== 0\n                      ? homeForm.AverageDangerousAttacksOverall / 7.5\n                      : homeForm.AverageDangerousAttacks / 7.5,\n                    homeForm.AveragePossessionOverall / 7.5,\n                    homeForm.goalDifferenceHomeOrAway / 10,\n                    homeForm.AverageCorners,\n                  ]}\n                  data2={[\n                    awayForm.avgScored * 2,\n                    homeForm.avgConceeded * 2,\n                    awayForm.avPointsAll * 3,\n                    awayForm.XGOverall * 2,\n                    homeForm.XGAgainstAvgOverall * 2,\n                    awayForm.AverageShotsOnTargetOverall,\n                    awayForm.AverageDangerousAttacksOverall !== 0\n                      ? awayForm.AverageDangerousAttacksOverall / 7.5\n                      : awayForm.AverageDangerousAttacks / 7.5,\n                    awayForm.AveragePossessionOverall / 7.5,\n                    awayForm.goalDifferenceHomeOrAway / 10,\n                    awayForm.AverageCorners,\n                  ]}\n                ></BarChart>\n                <Chart\n                  height={3}\n                  depth={0}\n                  data1={formArrayHome}\n                  data2={formArrayAway}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                  type={chartType}\n                  tension={0}\n                ></Chart>\n                <Chart\n                  height={\n                    Math.max(\n                      rollingGoalDiffTotalHome[\n                        rollingGoalDiffTotalHome.length - 1\n                      ],\n                      rollingGoalDiffTotalAway[\n                        rollingGoalDiffTotalAway.length - 1\n                      ]\n                    ) > 2\n                      ? Math.max(\n                          rollingGoalDiffTotalHome[\n                            rollingGoalDiffTotalHome.length - 1\n                          ],\n                          rollingGoalDiffTotalAway[\n                            rollingGoalDiffTotalAway.length - 1\n                          ]\n                        )\n                      : 2\n                  }\n                  depth={\n                    Math.min(\n                      rollingGoalDiffTotalHome[\n                        rollingGoalDiffTotalHome.length - 1\n                      ],\n                      rollingGoalDiffTotalAway[\n                        rollingGoalDiffTotalAway.length - 1\n                      ]\n                    ) < -2\n                      ? Math.min(\n                          rollingGoalDiffTotalHome[\n                            rollingGoalDiffTotalHome.length - 1\n                          ],\n                          rollingGoalDiffTotalAway[\n                            rollingGoalDiffTotalAway.length - 1\n                          ]\n                        )\n                      : -2\n                  }\n                  data1={rollingGoalDiffTotalHome}\n                  data2={rollingGoalDiffTotalAway}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                  type={\"Goal difference over time\"}\n                  tension={0.3}\n                ></Chart>\n              </div>\n              <Div\n                text={`Last league games (most recent first)`}\n                className={\"LastGameHeader\"}\n              ></Div>\n              <div className=\"flex-container\">\n                <div className=\"flex-childOneOverviewSmall\">{overviewHome}</div>\n                <div className=\"flex-childTwoOverviewSmall\">{overviewAway}</div>\n              </div>\n              <h2>Results from similar profile games</h2>\n              <span>(Games where each team had similar odds)</span>\n              <h3>Most recent first</h3>\n              <div className=\"flex-container-similar\">\n                <div className=\"flex-childOneOverviewSmall\">\n                  {similarGamesHome}\n                </div>\n                <div className=\"flex-childTwoOverviewSmall\">\n                  {similarGamesAway}\n                </div>\n              </div>\n              <input type=\"hidden\" name=\"IL_IN_ARTICLE\" />\n              <Button\n                className=\"MoreStats\"\n                onClickEvent={() =>\n                  getTeamStats(\n                    game.id,\n                    game.homeTeam,\n                    game.awayTeam,\n                    formDataHome[0].BttsPercentage,\n                    formDataHome[0].BttsPercentageHomeOrAway,\n                    formDataAway[0].BttsPercentage,\n                    formDataAway[0].BttsPercentageHomeOrAway\n                  )\n                }\n                text={\"Fixture trends\"}\n              ></Button>\n            </div>\n          </>,\n          document.getElementById(\"stats\" + homeTeam)\n        );\n      } else if (\n        (homeForm.completeData = false || game.completeData == false)\n      ) {\n        ReactDOM.render(\n          <>\n            <div style={style}>\n              <Collapsable\n                buttonText={\"Lineups & match action\"}\n                classNameButton=\"Lineups\"\n                element={\n                  <>\n                    <SofaLineupsWidget\n                      id={id}\n                      team1={team1}\n                      team2={team2}\n                      time={timestamp}\n                      homeGoals={homeGoals}\n                      awayGoals={awayGoals}\n                    ></SofaLineupsWidget>\n                  </>\n                }\n              />\n              <div className=\"Chart\" id={`Chart${game.id}`} style={style}>\n                <RadarChart\n                  title=\"XG Tipping Strength Ratings - All Games\"\n                  data={[\n                    homeAttackStrength,\n                    homeDefenceStrength,\n                    homePossessionStrength,\n                    homeXGForStrength,\n                    homeXGAgainstStrength,\n                    homeDirectnessStrength,\n                    homeAccuracyOverallStrength,\n                  ]}\n                  data2={[\n                    awayAttackStrength,\n                    awayDefenceStrength,\n                    awayPossessionStrength,\n                    awayXGForStrength,\n                    awayXGAgainstStrength,\n                    awayDirectnessStrength,\n                    awayAccuracyOverallStrength,\n                  ]}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                ></RadarChart>\n              </div>\n              <div style={style}>\n                <Div className=\"MatchTime\" text={`Kick off: ${time} GMT`}></Div>\n                {/* <Div\n                  text={`Last league games (most recent first)`}\n                  className={\"LastGameHeader\"}\n                ></Div> */}\n              </div>\n              {/* <div className=\"flex-container\">\n                <div className=\"flex-childOneOverviewSmall\">{overviewHome}</div>\n                <div className=\"flex-childTwoOverviewSmall\">{overviewAway}</div>\n              </div>\n              <div className=\"flex-container\">\n                <StatsHome />\n                <StatsAway />\n              </div> */}\n              <h2>Results from similar profile games</h2>\n              <span>(Games where each team had similar odds)</span>\n              <h3>Most recent first</h3>\n              <div className=\"flex-container-similar\">\n                <div className=\"flex-childOneOverviewSmall\">\n                  {similarGamesHome}\n                </div>\n                <div className=\"flex-childTwoOverviewSmall\">\n                  {similarGamesAway}\n                </div>\n              </div>\n              <input type=\"hidden\" name=\"IL_IN_ARTICLE\" />\n              <Button\n                className=\"MoreStats\"\n                onClickEvent={() =>\n                  getTeamStats(\n                    game.id,\n                    game.homeTeam,\n                    game.awayTeam,\n                    formDataHome[0].BttsPercentage,\n                    formDataHome[0].BttsPercentageHomeOrAway,\n                    formDataAway[0].BttsPercentage,\n                    formDataAway[0].BttsPercentageHomeOrAway\n                  )\n                }\n                text={\"Fixture trends\"}\n              ></Button>\n            </div>\n          </>,\n          document.getElementById(\"stats\" + homeTeam)\n        );\n      }\n    }\n\n    // ReactDOM.render(\n    //   <Button\n    //     className=\"MoreStats\"\n    //     style={style}\n    //     onClickEvent={() =>\n    //       getTeamStats(\n    //         game.id,\n    //         game.homeTeam,\n    //         game.awayTeam,\n    //         formDataHome[0].BttsPercentage,\n    //         formDataHome[0].BttsPercentageHomeOrAway,\n    //         formDataAway[0].BttsPercentage,\n    //         formDataAway[0].BttsPercentageHomeOrAway\n    //       )\n    //     }\n    //     text={\"Fixture trends\"}\n    //   ></Button>,\n    //   document.getElementById(`H2HStats${game.id}`)\n    // );\n  }\n}\n","import React, { Fragment, useState } from \"react\";\nimport { CreateBadge } from \"./createBadge\";\nimport { createStatsDiv } from \"../logic/getStats\";\nimport { renderTable } from \"../logic/getFixtures\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport { useDispatch } from \"react-redux\";\nimport { setData } from \"../logic/dataSlice\";\nimport { Provider } from \"react-redux\";\nimport store from \"../logic/store\"; // Import your Redux store\nimport { formObjectHome } from \"../logic/getScorePredictions\";\nimport { clicked } from \"../logic/getScorePredictions\";\n\nlet resultValue;\nvar count;\nlet mockValue;\nvar setCount;\n\nfunction toggle(bool) {\n  count = !bool;\n  return count;\n}\n\nfunction GetDivider(fixture, mock) {\n  const matchStatus = fixture.status;\n  let isPrediction = resultValue;\n\n  if (fixture.fixture.omit === true && matchStatus !== \"complete\") {\n    isPrediction = true;\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"Omitted\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (mockValue === true && matchStatus === \"complete\") {\n    isPrediction = false;\n    return (\n      <Fragment>\n        <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n        <div\n          className=\"CorrectScore\"\n          key={fixture.fixture.homeTeam}\n          data-cy={\"score-\" + fixture.fixture.id}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (mockValue === true && matchStatus !== \"complete\") {\n    isPrediction = true;\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (isPrediction === false && matchStatus !== \"complete\") {\n    return (\n      <div className=\"divider\" data-cy={\"divider-\" + fixture.fixture.id}>\n        {\"V\"}\n      </div>\n    );\n  } else if (isPrediction === false && matchStatus === \"complete\") {\n    return (\n      <div\n        className=\"Result\"\n        data-cy={\"result-\" + fixture.fixture.id}\n      >{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n    );\n  } else if (isPrediction === true && matchStatus === \"complete\") {\n    let outcome;\n    let prediction;\n\n    switch (true) {\n      case fixture.fixture.homeGoals > fixture.fixture.awayGoals:\n        outcome = 0;\n        fixture.fixture.winner = fixture.fixture.homeTeam;\n        fixture.fixture.outcome = \"homeWin\";\n        break;\n      case fixture.fixture.homeGoals === fixture.fixture.awayGoals:\n        outcome = 1;\n        fixture.fixture.winner = \"draw\";\n        fixture.fixture.outcome = \"draw\";\n\n        break;\n      case fixture.fixture.homeGoals < fixture.fixture.awayGoals:\n        outcome = 2;\n        fixture.fixture.winner = fixture.fixture.awayTeam;\n        fixture.fixture.outcome = \"awayWin\";\n\n        break;\n      default:\n        break;\n    }\n\n    switch (true) {\n      case fixture.fixture.goalsA > fixture.fixture.goalsB:\n        prediction = 0;\n        break;\n      case fixture.fixture.goalsA === fixture.fixture.goalsB:\n        prediction = 1;\n        break;\n      case fixture.fixture.goalsA < fixture.fixture.goalsB:\n        prediction = 2;\n        break;\n      default:\n        break;\n    }\n\n    if (fixture.fixture.omit === true) {\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"Omitted\"\n            key={fixture.fixture.homeTeam}\n            data-cy={\"score-\" + fixture.fixture.id}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    } else if (outcome === prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        switch (true) {\n          case outcome === 0:\n            fixture.fixture.profit = fixture.fixture.homeOdds;\n            break;\n          case outcome === 1:\n            fixture.fixture.profit = fixture.fixture.drawOdds;\n            break;\n          case outcome === 2:\n            fixture.fixture.profit = fixture.fixture.awayOdds;\n            break;\n          default:\n            break;\n        }\n      } else fixture.fixture.profit = 1;\n\n      if (\n        fixture.fixture.goalsA === fixture.fixture.homeGoals &&\n        fixture.fixture.goalsB === fixture.fixture.awayGoals\n      ) {\n        fixture.fixture.exactScore = true;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"ExactScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      } else {\n        fixture.fixture.exactScore = false;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"CorrectScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      }\n    } else if (outcome !== prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        fixture.fixture.profit = 0;\n      } else {\n        fixture.fixture.profit = 1;\n      }\n      fixture.fixture.exactScore = false;\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"IncorrectScore\"\n            key={fixture.fixture.awayTeam}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    }\n  } else {\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  }\n}\n\nfunction renderLeagueName(fixture, mock) {\n  mockValue = mock;\n\n  let name = fixture.leagueName;\n  let id =\n    allLeagueResultsArrayOfObjects.length > 0\n      ? allLeagueResultsArrayOfObjects[fixture.leagueIndex].id\n      : null;\n  if (name === null || mock === true) {\n    return <div></div>;\n  } else {\n    return (\n      <div>\n        <div\n          className=\"leagueName\"\n          id={`league${id}`}\n          key={`leagueName${id}div`}\n          onClick={() =>\n            renderTable(\n              fixture.leagueIndex,\n              allLeagueResultsArrayOfObjects[fixture.leagueIndex],\n              id\n            )\n          }\n        >\n          {fixture.leagueName} &#9776;\n        </div>\n        <div\n          className=\"LeagueTable\"\n          key={`leagueName${id}`}\n          id={`leagueName${id}`}\n        ></div>\n      </div>\n    );\n  }\n}\n\nconst downArrow = \"\\u{2195}\";\nconst rightArrow = \"\\u{29C9}\";\n\nexport let testing;\n\nfunction SingleFixture({ fixture, count, mock }) {\n  const dispatch = useDispatch();\n  function StoreData() {\n    const fixtureDetails = {\n      id: fixture.id,\n      homeTeamName: fixture.homeTeam,\n      homeId: fixture.homeId,\n      homeTeamBadge: fixture.homeBadge,\n      awayTeamName: fixture.awayTeam,\n      awayId: fixture.awayId,\n      awayTeamBadge: fixture.awayBadge,\n      stadium: fixture.stadium,\n      time: fixture.time,\n      homeGoals: fixture.goalsA,\n      awayGoals: fixture.goalsB,\n    };\n\n    const homeDetails = {\n      \"Attacking Strength\": fixture.formHome.attackingStrength,\n      \"Defensive Strength\": fixture.formHome.defensiveStrength,\n    };\n\n    const awayDetails = {\n      \"Attacking Strength\": fixture.formAway.attackingStrength,\n      \"Defensive Strength\": fixture.formAway.defensiveStrength,\n    };\n\n    const dataToSend = {\n      key1: \"value1\",\n      key2: \"value2\",\n    };\n    fixture.formHome.defensiveMetrics[\"Clean Sheet Percentage\"] =\n      fixture.formHome.CleanSheetPercentage;\n    fixture.formAway.defensiveMetrics[\"Clean Sheet Percentage\"] =\n      fixture.formAway.CleanSheetPercentage;\n\n    console.log(fixture.formHome)\n\n    localStorage.setItem(\n      \"homeForm\",\n      JSON.stringify(fixture.formHome.attackingMetrics)\n    );\n    localStorage.setItem(\n      \"homeFormDef\",\n      JSON.stringify(fixture.formHome.defensiveMetrics)\n    );\n    localStorage.setItem(\n      \"allTeamResultsHome\",\n      JSON.stringify(fixture.formHome.allTeamResults)\n    );\n    localStorage.setItem(\"homeDetails\", JSON.stringify(homeDetails));\n\n    localStorage.setItem(\n      \"awayForm\",\n      JSON.stringify(fixture.formAway.attackingMetrics)\n    );\n    localStorage.setItem(\n      \"awayFormDef\",\n      JSON.stringify(fixture.formAway.defensiveMetrics)\n    );\n    localStorage.setItem(\n      \"allTeamResultsAway\",\n      JSON.stringify(fixture.formAway.allTeamResults)\n    );\n    localStorage.setItem(\"awayDetails\", JSON.stringify(awayDetails));\n\n    localStorage.setItem(\"fixtureDetails\", JSON.stringify(fixtureDetails));\n\n    dispatch(setData(dataToSend));\n  }\n\n  async function handleButtonClick(game) {\n    if (clicked === true) {\n      StoreData(formObjectHome);\n      window.open(\"/#/fixture\");\n    } else return;\n  }\n  return (\n    <div key={fixture.game}>\n      {renderLeagueName(fixture, mock)}\n      <div className={`individualFixtureContainer${fixture.omit}`}>\n        <li\n          className={`individualFixture${fixture.omit}`}\n          key={fixture.id}\n          data-cy={fixture.id}\n        >\n          <div className=\"HomeOdds\">{fixture.fractionHome}</div>\n          <div className=\"homeTeam\">{fixture.homeTeam}</div>\n          <GetDivider\n            result={resultValue}\n            status={fixture.status}\n            fixture={fixture}\n          />\n          {/* <div className=\"divider\">{\"V\"}</div> */}\n          <div className=\"awayTeam\">{fixture.awayTeam}</div>\n          <CreateBadge\n            image={fixture.homeBadge}\n            ClassName=\"HomeBadge\"\n            alt=\"Home team badge\"\n            flexShrink={5}\n          />\n          <CreateBadge\n            image={fixture.awayBadge}\n            ClassName=\"AwayBadge\"\n            alt=\"Away team badge\"\n          />\n          <div className=\"AwayOdds\">{fixture.fractionAway}</div>\n        </li>\n        <button\n          className=\"GameStats\"\n          onClick={() =>\n            mock === false ? createStatsDiv(fixture, count) : null\n          }\n          onMouseDown={() => (count = toggle(count))}\n        >\n          Game overview {downArrow}\n        </button>\n        <button\n          className=\"GameStatsTwo\"\n          onClick={() => handleButtonClick(fixture)}\n        >\n          More detail {rightArrow}\n        </button>\n        {/* <Checkbox/> */}\n      </div>\n      <div id={\"stats\" + fixture.homeTeam} />\n      <div className=\"MatchHistory\" id={\"history\" + fixture.homeTeam} />\n    </div>\n  );\n}\n\nconst List = ({ fixtures, mock }) => (\n  <div>\n    <div id=\"Headers\"></div>\n    <ul className=\"FixtureList\" id=\"FixtureList\">\n      {fixtures.map((fixture, i) => (\n        <SingleFixture\n          fixture={fixture}\n          key={fixture.game}\n          count={count}\n          mock={mock}\n        />\n      ))}\n    </ul>\n  </div>\n);\n\nexport function Fixture(props) {\n  [count, setCount] = useState(false);\n  resultValue = props.result;\n  return (\n    <Provider store={store}>\n      <List\n        fixtures={props.fixtures}\n        result={resultValue}\n        count={count}\n        mock={props.mock}\n      />\n    </Provider>\n  );\n}\n","// src/dataSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\n\n// src/dataSlice.js\nconst initialState = {\n  dataHome: localStorage.getItem('homeForm'),\n  dataAway: localStorage.getItem('awayForm'),\n  dataHomeDef: localStorage.getItem('homeFormDef'),\n  dataAwayDef: localStorage.getItem('awayFormDef'),\n  allTeamResultsHome: localStorage.getItem('allTeamResultsHome'),\n  allTeamResultsAway: localStorage.getItem('allTeamResultsAway'),\n  homeDetails:localStorage.getItem('homeDetails'),\n  awayDetails:localStorage.getItem('awayDetails'),\n  fixtureDetails: localStorage.getItem('fixtureDetails')\n};\n\nconst dataSlice = createSlice({\n  name: 'data',\n  initialState,\n  reducers: {\n    setData: (state, action) => {\n      state.data = action.payload;\n    },\n  },\n});\n\nexport const { setData } = dataSlice.actions;\n\nexport default dataSlice.reducer;\n","// src/store.js\nimport { configureStore } from '@reduxjs/toolkit';\nimport dataReducer from './dataSlice'; // Your data reducer\n\nconst store = configureStore({\n  reducer: {\n    data: dataReducer, // Ensure this key matches the key in your initialState\n  },\n});\n\nexport default store;\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./components/Header\";\nimport { Button } from \"./components/Button\";\nimport OddsRadio from \"./components/OddsRadio\";\nimport { Fixture } from \"./components/Fixture\";\nimport mockedFixtures from \"./data/mockedFixtures.json\";\nimport { selectedOdds } from \"./components/OddsRadio\";\nimport Collapsable from \"./components/CollapsableElement\";\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  RedditShareButton,\n  RedditIcon,\n  TelegramShareButton,\n  TelegramIcon,\n  TwitterShareButton,\n  TwitterIcon,\n  WhatsappShareButton,\n  WhatsappIcon,\n} from \"react-share\";\nimport { generateFixtures } from \"./logic/getFixtures\";\nimport { ThreeDots } from \"react-loading-icons\";\nimport Logo from \"./components/Logo\";\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\nimport reactDom from \"react-dom\";\n// require(\"dotenv\").config();\n\nexport const proxyurl = \"https://safe-caverns-99679.herokuapp.com/\";\nexport var fixtureList = [];\nexport let allLeagueData = [];\n\nexport const availableLeagues = [];\nexport var orderedLeagues = [];\n\nconst leagueOrder = [\n  11084, //Euro 2024\n  7432, //World Cup 22\n  12325, //premier league 22/23\n  12451, //championship 22/23\n  12446, //league 1 22/23\n  12422, //league 2 22/23\n  12622, //National league 22/23\n  12316, //La Liga 22/23\n  12455, //Scottish Prem 22/23\n  12529, //Bundesliga 22/23\n  12530, //Serie A 22/23\n  12337, //French Prem 22/23\n  12931, //Portagul Prem 22/23\n  12322, //Dutch Prem 22/23\n  12137, //Belgian Pro League 22/23\n  10969, //sweden 24\n  12132, //Danish Prem 24/25\n  10976, //Norway Prem 23\n  12472, //Austrian Prem 22/23\n  12734, //Greek Prem 22/23\n  12120, //Polish prem 22/23\n  12326, //Swiss prem 22/23\n  10946, //Irish Prem 23\n  12467, //Spanish secunda 22/23\n  12621, //Italy serie B 22/23\n  12528, //Bundesliga 2 22/23\n  12623, //German 3rd tier 22/23\n  12338, //French League 2 22/23\n  12456, //Scottish Championship 22/23\n  12474, //Scottish league 1 22/23\n  12453, //Scottish league 2 22/23\n  12827, //Women's prem 23/24\n  10977, //MLS 23\n  11321, //Brazil prem 24\n  11212, //Argentina prem 23\n  12136, //Mexico prem 23/24\n  12933, //National league North and South 22/23\n  13102, //Australian A league 23/24\n  11102, //S Korea 23\n];\n\nlet today;\nlet todayFootyStats;\nlet todaySS\nlet tomorrow;\nlet tomorrowFootyStats;\nlet tomorrowSS;\nlet date;\nlet dateSS;\nlet dateFootyStats;\nlet yesterday;\nlet yesterdayFootyStats;\nlet yesterdaySS\nlet lastSaturday;\nlet lastSaturdayFootyStats;\nlet lastSaturdaySS;\nlet historic;\nlet historicFootyStats;\nlet historicSS;\nlet tomorrowsDate;\nlet yesterdaysDate;\nlet saturdayDate;\nlet historicDate;\nlet string;\nlet dateString;\n\n(async function fetchLeagueData() {\n  let leagueList;\n\n  leagueList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}leagueList`);\n\n  let leagueArray;\n  await leagueList.json().then((leagues) => {\n    leagueArray = Array.from(leagues.data);\n  });\n\n  for (let i = 0; i < leagueArray.length; i++) {\n    const league = leagueArray[i];\n    const name = leagueArray[i].name;\n\n    for (let x = 0; x < league.season.length; x++) {\n      const element = league.season[x];\n\n      if (element.year === 2024 || element.year === 20242025) {\n        if (element.id !== 4340 && element.id !== 6935 && element.id !== 7061) {\n          availableLeagues.push({ name: name, element });\n        }\n      }\n    }\n\n    async function mapOrder(array, order, key) {\n      array.sort(function (a, b) {\n        var A = a.element[key],\n          B = b.element[key];\n\n        if (order.indexOf(A) > order.indexOf(B)) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n      return array;\n    }\n    //leagues ordered by id\n    orderedLeagues = await mapOrder(availableLeagues, leagueOrder, \"id\");\n  }\n  return orderedLeagues;\n})();\n\nexport async function getLeagueList() {\n  let i = 0;\n  date = new Date();\n  string = \"Today\";\n\n  async function incrementDate(num, date) {\n    i = i + num;\n    date.setDate(date.getDate() + num);\n    dateSS = await convertTimestampForSofaScore(date);\n\n    [date, dateFootyStats] = await calculateDate(date);\n    string = dateFootyStats;\n    await renderButtons();\n  }\n\n  async function decrementDate(num, date) {\n    i = i - num;\n    console.log(i);\n    if (i > -120) {\n      date.setDate(date.getDate() - num);\n      dateSS = await convertTimestampForSofaScore(date);\n      [date, dateFootyStats] = await calculateDate(date);\n      string = dateFootyStats;\n      dateString = date;\n      await renderButtons();\n    }\n  }\n\n  async function calculateDate(dateString) {\n    const day = dateString.getDate();\n    const month = dateString.getMonth() + 1;\n    const year = dateString.getFullYear();\n    return [`${month}${day}${year}`, `${year}-${month}-${day}`];\n  }\n\n  [today, todayFootyStats] = await calculateDate(new Date());\n\n  tomorrowsDate = new Date();\n  tomorrowsDate.setDate(tomorrowsDate.getDate() + 1);\n  [tomorrow, tomorrowFootyStats] = await calculateDate(tomorrowsDate);\n\n  yesterdaysDate = new Date();\n  yesterdaysDate.setDate(yesterdaysDate.getDate() - 1);\n  [yesterday, yesterdayFootyStats] = await calculateDate(yesterdaysDate);\n\n  saturdayDate = new Date();\n  saturdayDate.setDate(\n    saturdayDate.getDate() - ((saturdayDate.getDay() + 6) % 7)\n  );\n  saturdayDate.setDate(saturdayDate.getDate() - 2);\n  [lastSaturday, lastSaturdayFootyStats] = await calculateDate(saturdayDate);\n\n  historicDate = new Date();\n  historicDate.setDate(\n    historicDate.getDate() - ((historicDate.getDay() + 6) % 7)\n  );\n  historicDate.setDate(historicDate.getDate() - 9);\n  [historic, historicFootyStats] = await calculateDate(historicDate);\n\n\n  async function convertTimestampForSofaScore(timestamp) {\n    let newDate = new Date(timestamp);\n  \n    let year = newDate.getFullYear();\n    let month = String(newDate.getMonth() + 1).padStart(2, '0'); // Adding 1 to month because it is zero-based\n    let day = String(newDate.getDate()).padStart(2, '0');\n    \n    let converted = `${year}-${month}-${day}`;\n  \n    return converted;\n  }\n\n  todaySS = await convertTimestampForSofaScore(new Date());\n  tomorrowSS = await convertTimestampForSofaScore(tomorrowsDate);\n  yesterdaySS = await convertTimestampForSofaScore(yesterdaysDate);\n  lastSaturdaySS = await convertTimestampForSofaScore(saturdayDate);\n  historicSS = await convertTimestampForSofaScore(historicDate);\n\n  const text =\n    \"Select a day you would like to retrieve fixtures for from the options above\\n A list of games will be returned once the data has loaded\\n Once all fixtures have loaded, click on “Get Predictions” to see XGTipping's forecasted outcomes for every game\\n If a game has completed, the predictions is displayed on the right and the actual result on the left\\n Each individual fixture is tappable/clickable. By doing so, you can access a range of detailed stats, from comparative charts, granular performance measures to previous meetings.\\n All games are subject to the same automated prediction algorithm with the outcome being a score prediction. Factors that determine the tip include the following, amongst others:\\n - Goal differentials\\n - Expected goal differentials \\n - Attack/Defence performance\\n - Form trends over time\\n - Home/Away records\\n - WDL records\\n - Points per game \\n - A range of other comparative factors\\n  –\\n\";\n\n  const text2 =\n    \"A range of tools are available should you wish to use them\\n Build a multi - Use the '+' or '-' buttons to add or remove a game deemed to be one of XGTIpping's highest confidence tips from the day\\n Exotic of the day: A pre-built exotic multi comprising of XGTipping's highest confidence tips\\n BTTS games: Games where both teams to score is deemed a likely outcome\\n Over 2.5 goals tips: Games where over 2.5 goals are most likely to be scored\\n XG tips: Comprises only games where the expected goal differentials between each team are at their greatest. We believe this shows a true disparity in the form of the two opposing teams\\n Tap the 'How to use' option to hide this text\";\n\n  let textJoined = text.concat(text2);\n\n  let newText = textJoined.split(\"\\n\").map((i) => {\n    return <p>{i}</p>;\n  });\n\n  async function renderButtons() {\n    ReactDOM.render(\n      <div className=\"FixtureButtons\">\n        <div className=\"historicResults\">\n          <Button\n            text={\"Last Saturday\"}\n            className=\"HistoricFixturesButton\"\n            onClickEvent={async () =>\n              fixtureList.push(\n                await generateFixtures(\n                  \"lastSaturday\",\n                  lastSaturday,\n                  selectedOdds,\n                  lastSaturdayFootyStats,\n                  false,\n                  today,\n                  lastSaturdaySS\n                )\n              )\n            }\n          />\n        </div>\n        <Button\n          text={`<`}\n          className=\"FixturesButton\"\n          onClickEvent={async () => await decrementDate(1, date)}\n        />\n        <Button\n          text={dateFootyStats !== undefined ? dateFootyStats : date}\n          className=\"FixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"todaysFixtures\",\n                dateString,\n                selectedOdds,\n                dateFootyStats,\n                false,\n                today,\n                dateSS\n              )\n            )\n          }\n        />\n        <Button\n          text={`Today`}\n          className=\"FixturesButtonToday\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"todaysFixtures\",\n                today,\n                selectedOdds,\n                todayFootyStats,\n                true,\n                today,\n                todaySS\n              )\n            )\n          }\n        />\n        <Button\n          text={\"Tomorrow\"}\n          className=\"FixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"tomorrowsFixtures\",\n                tomorrow,\n                selectedOdds,\n                tomorrowFootyStats,\n                true,\n                today,\n                tomorrowSS\n              )\n            )\n          }\n        />\n      </div>,\n      document.getElementById(\"Buttons\")\n    );\n  }\n\n  ReactDOM.render(\n    <div className=\"FixtureButtons\">\n      <div className=\"historicResults\">\n        <Button\n          text={\"Last Saturday\"}\n          className=\"HistoricFixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"lastSaturday\",\n                lastSaturday,\n                selectedOdds,\n                lastSaturdayFootyStats,\n                false,\n                today,\n                lastSaturdaySS\n              )\n            )\n          }\n        />\n        {/* <Button\n          text={\"Historic predictions\"}\n          className=\"HistoricFixturesButtonRight\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"historic\",\n                historic,\n                selectedOdds,\n                historicFootyStats\n              )\n            )\n          }\n        /> */}\n      </div>\n      <Button\n        text={`<`}\n        className=\"FixturesButton\"\n        onClickEvent={async () => await decrementDate(1, date)}\n      />\n      <Button\n        text={`${string}`}\n        className=\"FixturesButtonToday\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"todaysFixtures\",\n              today,\n              selectedOdds,\n              todayFootyStats,\n              true,\n              today,\n              todaySS\n            )\n          )\n        }\n      />\n      <Button\n        text={\"Tomorrow\"}\n        className=\"FixturesButton\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"tomorrowsFixtures\",\n              tomorrow,\n              selectedOdds,\n              tomorrowFootyStats,\n              true,\n              today,\n              tomorrowSS\n            )\n          )\n        }\n      />\n    </div>,\n    document.getElementById(\"Buttons\")\n  );\n  ReactDOM.render(\n    <div className=\"OddsRadios\">\n      <OddsRadio value=\"Fractional odds\"></OddsRadio>\n      <OddsRadio value=\"Decimal odds\"></OddsRadio>\n    </div>,\n    document.getElementById(\"Checkbox\")\n  );\n  ReactDOM.render(\n    <Fragment>\n      <Collapsable\n        // className={\"HowToUse\"}\n        buttonText={\"How to use\"}\n        element={newText}\n      />\n    </Fragment>,\n    document.getElementById(\"XGDiff\")\n  );\n\n  // ReactDOM.render(\n  //   <Button\n  //     text={\"Lowest scoring leagues\"}\n  //     className={\"Under25TeamsButton\"}\n  //     onClickEvent={async () => {\n  //       let leagues = await getLowestScoringLeagues();\n  //       const leagueList = [];\n\n  //       leagues.forEach(async (league) =>\n  //         leagueList.push(\n  //           <ul className=\"GlobalStat\">\n  //             <p className=\"TeamName\">\n  //               {league.league} ({league.leagueCountry})\n  //             </p>\n  //             <li>Average goals: {league.averageGoals}</li>\n  //             <li>Under 2.5 goals %: {league.under25Percentage}%</li>\n  //           </ul>\n  //         )\n  //       );\n\n  //       reactDom.render(\n  //         <div>\n  //           <h3>Leagues with the lowest scoring games</h3>\n  //           <ul>{leagueList}</ul>\n  //         </div>,\n  //         document.getElementById(\"Under25Games\")\n  //       );\n  //     }}\n  //   ></Button>,\n  //   document.getElementById(\"Under25Games\")\n  // );\n\n  // ReactDOM.render(\n  //   <Button\n  //     text={\"Highest scoring leagues\"}\n  //     className={\"Over25TeamsButton\"}\n  //     onClickEvent={async () => {\n  //       let leagues = await getHighestScoringLeagues();\n  //       const leagueList = [];\n\n  //       leagues.forEach(async (league) =>\n  //         leagueList.push(\n  //           <ul className=\"GlobalStat\">\n  //             <p className=\"TeamName\">\n  //               {league.league} ({league.leagueCountry})\n  //             </p>\n  //             <li>Average goals: {league.averageGoals}</li>\n  //             <li>Over 2.5 goals %: {league.over25Percentage}%</li>\n  //           </ul>\n  //         )\n  //       );\n\n  //       reactDom.render(\n  //         <div>\n  //           <h3>Leagues with the highest scoring games</h3>\n  //           <ul>{leagueList}</ul>\n  //         </div>,\n  //         document.getElementById(\"Over25Games\")\n  //       );\n  //     }}\n  //   ></Button>,\n  //   document.getElementById(\"Over25Games\")\n  // );\n}\n\nasync function getHighestScoringLeagues() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}over25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    for (let index = 0; index < 215; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        over25Percentage:\n          leagues.data.top_leagues.data[index].seasonOver25Percentage_overall,\n        division: leagues.data.top_leagues.data[index].division,\n        leagueId: leagues.data.top_leagues.data[index].id,\n      };\n      arr.push(league);\n    }\n  });\n\n  const finalArray = arr.filter(\n    (league) =>\n      leagueOrder.find((element) => element === league.leagueId) &&\n      league.averageGoals >= 2.5\n  );\n\n  let sortedArray = finalArray.sort((a, b) => b.averageGoals - a.averageGoals);\n\n  return sortedArray;\n}\n\nasync function getLowestScoringLeagues() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}under25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    for (let index = 0; index < 215; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        under25Percentage:\n          leagues.data.top_leagues.data[index].seasonUnder25Percentage_overall,\n        leagueId: leagues.data.top_leagues.data[index].id,\n      };\n      arr.push(league);\n    }\n  });\n\n  const finalArray = arr.filter(\n    (league) =>\n      leagueOrder.find((element) => element === league.leagueId) &&\n      league.averageGoals < 2.5\n  );\n\n  let sortedArray = finalArray.sort((a, b) => a.averageGoals - b.averageGoals);\n\n  return sortedArray;\n}\n\nconst welcomeTextUnsplitOne = `Welcome to XGTipping. Your go-to resource for all things football, from predictions, comprehensive head to head stats, results, xg scores, odds, league tables, form, and bespoke multi-builders underpinned by expected goal (XG) data.\\n `;\nlet welcomeTextOne = welcomeTextUnsplitOne.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nconst welcomeTextUnsplitTwo = `XGTipping is completely independent and free to use, relying on a donation model to support running costs. For feedback or feature ideas, get in touch at @TippingXg.`;\nlet welcomeTextTwo = welcomeTextUnsplitTwo.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nfunction App() {\n  getLeagueList();\n  return (\n    <>\n      <div className=\"App\">\n        <Logo />\n        <a\n          className=\"SocialLink\"\n          href=\"https://www.reddit.com/r/xgtipping/\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          r/xgtipping\n        </a>\n        <div id=\"LoadingContainer\" className=\"LoadingContainer\" />\n        <div id=\"RadioContainer\" className=\"RadioContainer\">\n          <div id=\"RadioText\" />\n          <div id=\"RadioButtons\" />\n        </div>\n        <div id=\"Day\" />\n        <div id=\"Checkbox\" />\n        <div id=\"ExplainerText\" />\n        <div id=\"Loading\" className=\"Loading\"></div>\n        <div id=\"Buttons\" className=\"Buttons\">\n          <ThreeDots className=\"MainLoading\" fill=\"#030061\" />\n          <div>Loading all fixture and form data...</div>\n        </div>\n        <div id=\"GeneratePredictions\" className=\"GeneratePredictions\" />\n        <div id=\"bestPredictions\" className=\"bestPredictions\" />\n        <div id=\"exoticOfTheDay\" className=\"exoticOfTheDay\" />\n        <div id=\"successMeasure2\" />\n        <div id=\"RowOneContainer\" className=\"RowOneContainer\">\n          <div id=\"BTTS\" className=\"RowOne\" />\n          <div id=\"longShots\" className=\"RowOne\" />\n          <div id=\"draws\" className=\"RowOne\" />\n        </div>\n        <div id=\"insights\" />\n        <div id=\"risk\" />\n        <div id=\"successMeasure\" />\n        <div id=\"tables\" />\n        <div id=\"homeBadge\" />\n        <div id=\"FixtureContainerHeaders\"></div>\n        {/* <StyledKofiButton buttonText=\"Donations\"></StyledKofiButton> */}\n        <div id=\"XGDiff\" />\n        <div id=\"FixtureContainer\">\n          <h6 className=\"WelcomeText\">{welcomeTextOne}</h6>\n          <h6 className=\"GetMatchStatText\">\n            Below is an example of our tips/results overview for you to\n            familiarise yourself with. Get real fixtures using the date buttons,\n            above. When loaded, tap on one to see full match stats\n          </h6>\n          <div className=\"ExplainerContainer\">\n            <span className=\"oddsHomeExplainer\">Home odds</span>\n            <span className=\"emptyHomeTeam\"></span>\n            <span className=\"scoreExplainer\">Result / KO Time</span>\n            <span className=\"predictionExplainer\">Our Prediction</span>\n            <span className=\"emptyAwayTeam\"></span>\n            <span className=\"oddsAwayExplainer\">Away odds</span>\n          </div>\n          <Fixture\n            fixtures={mockedFixtures.matches}\n            // result={false}\n            mock={true}\n            className={\"individualFixture\"}\n          />\n          <div>\n            <h6 className=\"WelcomeText\">{welcomeTextTwo}</h6>\n            <h6 className=\"WelcomeText\">\n              We cover a range of leagues, including\n              <ul className=\"AllLeagues\">\n                <li className=\"League\">Premier League</li>\n                <li className=\"League\">English Football League</li>\n                <li className=\"League\">La Liga</li>\n                <li className=\"League\">Serie A</li>\n                <li className=\"League\">Bundesliga</li>\n                <li className=\"League\">Ligue 1</li>\n                <li className=\"League\">MLS</li>\n                <li className=\"League\">Primeira Liga</li>\n                <li className=\"League\">Loads more...</li>\n              </ul>\n            </h6>\n          </div>\n          <div>\n            <div className=\"DataText\">Raw data from</div>\n            <a\n              className=\"DataLink\"\n              href=\"https://www.footystats.org\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              footystats.org\n            </a>\n          </div>\n          <div className=\"bitcoin\" id=\"bitcoin\">\n            We aim to remain free to use, contributions are always appreciated\n            though:\n            <a\n              href=\"https://www.ko-fi.com/xgtipping\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Donations\n            </a>\n            <span className=\"bitcoinSymbol\">&#x20bf;itcoin address</span>\n            <span className=\"bitcoinAddress\">\n              bc1q7j62txkvhfu0dt3l0s07saze6pjnyzs26wfgp0\n            </span>\n          </div>\n        </div>\n        <div>\n    </div>\n        <div className=\"Social\">\n          <TwitterShareButton\n            url={\"www.xgtipping.com\"}\n            title={\"#XGTipping\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <TwitterIcon size={\"3em\"} round={true} />\n          </TwitterShareButton>\n          <RedditShareButton\n            url={\"www.xgtipping.com\"}\n            title={\"XGTipping\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <RedditIcon size={\"3em\"} round={true} />\n          </RedditShareButton>\n          <FacebookShareButton\n            url={\"www.xgtipping.com\"}\n            quote={\"XGTipping - data-driven football predictions\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <FacebookIcon size={\"3em\"} round={true} />\n          </FacebookShareButton>\n          <WhatsappShareButton\n            url={\"www.xgtipping.com\"}\n            title={\"XGTipping\"}\n            separator=\": \"\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <WhatsappIcon size={\"3em\"} round={true} />\n          </WhatsappShareButton>\n          <TelegramShareButton\n            url={\"XGTipping\"}\n            title={\"XGTipping\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <TelegramIcon size={\"3em\"} round={true} />\n          </TelegramShareButton>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n// import React from \"react\";\n// import { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\n// import HomePage from \"./components/HomePage\";\n// import TeamPage from \"./components/Team\";\n\n// const App = () => {\n//   return (\n//     <Router>\n//       <Routes>\n//       <Route path=\"/team\" element={<TeamPage />} />\n//         <Route path=\"/\" element={<HomePage />} />\n//         {/* Add more routes */}\n//       </Routes>\n//     </Router>\n//   );\n// };\n\n// export default App;\n","export default __webpack_public_path__ + \"static/media/xg-tipping-high-resolution-logo-transparent.90176ea6.png\";","import React from 'react';\nimport myImage from './images/xg-tipping-high-resolution-logo-transparent.png';\n\nconst Logo = () => {\n  return (\n    <div className=\"logo-container\">\n      <img src={myImage} alt=\"XG Tipping logo\" className='responsive-logo'/>\n    </div>\n  );\n};\n\nexport default Logo;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CreateBadge } from \"./createBadge\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction TeamPage() {\n  const [dataState, setData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const responseHome = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}team/${storedFixtureDetailsJson.homeId}`\n      );\n      const resultHome = await responseHome.json();\n\n      const responseAway = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}team/${storedFixtureDetailsJson.awayId}`\n      );\n      const resultAway = await responseAway.json();\n      // setData(result.data.stadium_name);\n\n      let indexHome = resultHome.data.findIndex(\n        (x) => x.season_format === \"Domestic League\"\n      );\n      let indexAway = resultAway.data.findIndex(\n        (x) => x.season_format === \"Domestic League\"\n      );\n\n      if (resultHome.data[indexHome].stats.seasonScoredNum_overall) {\n        setData((test) => ({\n          ...test,\n          scoredOverallHome:\n            resultHome.data[indexHome].stats.seasonScoredNum_overall,\n          playedHomeOnly:\n            resultHome.data[indexHome].stats.seasonMatchesPlayed_home,\n          scoredOverallHomeOnly:\n            resultHome.data[indexHome].stats.seasonScoredNum_home,\n          conceededOverallHome:\n            resultHome.data[indexHome].stats.seasonConcededNum_overall,\n          conceededOverallHomeOnly:\n            resultHome.data[indexHome].stats.seasonConcededNum_home,\n\n          PPGOverallHome: resultHome.data[indexHome].stats.seasonPPG_overall,\n          PPGOverallHomeOnly: resultHome.data[indexHome].stats.seasonPPG_home,\n          leaguePosition_overallHome:\n            resultHome.data[indexHome].stats.leaguePosition_overall,\n          leaguePosition_HomeOnly:\n            resultHome.data[indexHome].stats.leaguePosition_home,\n          averageAttendance:\n            resultHome.data[indexHome].stats.average_attendance_home,\n          BTTSPercentage_overallHome:\n            resultHome.data[indexHome].stats.seasonBTTSPercentage_overall,\n          BTTSAndWinPercentage_Home:\n            resultHome.data[indexHome].stats.BTTS_and_win_percentage_overall,\n          BTTSAndLosePercentage_Home:\n            resultHome.data[indexHome].stats.BTTS_and_lose_percentage_overall,\n          BTTSBothHalvesHome:\n            resultHome.data[indexHome].stats\n              .BTTS_both_halves_percentage_overall,\n          GoalDifferenceHT_overall_Home:\n            resultHome.data[indexHome].stats.GoalDifferenceHT_overall,\n          GD_2hg_overall_Home: resultHome.data[indexHome].stats.gd_2hg_overall,\n          leadingAtHTPercentage_overallHome:\n            resultHome.data[indexHome].stats.leadingAtHTPercentage_overall,\n          seasonOver15Percentage_overallHome:\n            resultHome.data[indexHome].stats.seasonOver15Percentage_overall,\n          seasonOver25Percentage_overallHome:\n            resultHome.data[indexHome].stats.seasonOver25Percentage_overall,\n          seasonOver35Percentage_overallHome:\n            resultHome.data[indexHome].stats.seasonOver35Percentage_overall,\n          seasonOver45Percentage_overallHome:\n            resultHome.data[indexHome].stats.seasonOver45Percentage_overall,\n          scoredBothHalvesPercentage_overallHome:\n            resultHome.data[indexHome].stats.scoredBothHalvesPercentage_overall,\n          shots_on_target_per_goals_scored_overallHome:\n            resultHome.data[indexHome].stats.additional_info\n              .shots_on_target_per_goals_scored_overall,\n          cornersTotalAVG_overallHome:\n            resultHome.data[indexHome].stats.cornersTotalAVG_overall,\n          cardsAVG_overallHome:\n            resultHome.data[indexHome].stats.cardsAVG_overall,\n          foulsAVG_overallHome:\n            resultHome.data[indexHome].stats.foulsAVG_overall,\n          penalties_won_per_match_overallHome:\n            resultHome.data[indexHome].stats.additional_info\n              .penalties_won_per_match_overall,\n          penalty_in_a_match_percentage_overallHome:\n            resultHome.data[indexHome].stats.additional_info\n              .penalty_in_a_match_percentage_overall,\n\n          scoredOverallAway:\n            resultAway.data[indexAway].stats.seasonScoredNum_overall,\n          playedAwayOnly:\n            resultAway.data[indexAway].stats.seasonMatchesPlayed_away,\n          scoredOverallAwayOnly:\n            resultAway.data[indexAway].stats.seasonScoredNum_away,\n          conceededOverallAway:\n            resultAway.data[indexAway].stats.seasonConcededNum_overall,\n          conceededOverallAwayOnly:\n            resultAway.data[indexAway].stats.seasonConcededNum_away,\n\n          PPGOverallAway: resultAway.data[indexAway].stats.seasonPPG_overall,\n          PPGOverallAwayOnly: resultAway.data[indexAway].stats.seasonPPG_away,\n          leaguePosition_overallAway:\n            resultAway.data[indexAway].stats.leaguePosition_overall,\n          leaguePosition_AwayOnly:\n            resultAway.data[indexAway].stats.leaguePosition_away,\n          BTTSPercentage_overallAway:\n            resultAway.data[indexAway].stats.seasonBTTSPercentage_overall,\n          BTTSAndWinPercentage_Away:\n            resultAway.data[indexAway].stats.BTTS_and_win_percentage_overall,\n          BTTSAndLosePercentage_Away:\n            resultAway.data[indexAway].stats.BTTS_and_lose_percentage_overall,\n          BTTSBothHalvesAway:\n            resultAway.data[indexAway].stats\n              .BTTS_both_halves_percentage_overall,\n          GoalDifferenceHT_overall_Away:\n            resultAway.data[indexAway].stats.GoalDifferenceHT_overall,\n          GD_2hg_overall_Away: resultAway.data[indexAway].stats.gd_2hg_overall,\n          leadingAtHTPercentage_overallAway:\n            resultAway.data[indexAway].stats.leadingAtHTPercentage_overall,\n          seasonOver15Percentage_overallAway:\n            resultAway.data[indexAway].stats.seasonOver15Percentage_overall,\n          seasonOver25Percentage_overallAway:\n            resultAway.data[indexAway].stats.seasonOver25Percentage_overall,\n          seasonOver35Percentage_overallAway:\n            resultAway.data[indexAway].stats.seasonOver35Percentage_overall,\n          seasonOver45Percentage_overallAway:\n            resultAway.data[indexAway].stats.seasonOver45Percentage_overall,\n          scoredBothHalvesPercentage_overallAway:\n            resultAway.data[indexAway].stats.scoredBothHalvesPercentage_overall,\n          shots_on_target_per_goals_scored_overallAway:\n            resultAway.data[indexAway].stats.additional_info\n              .shots_on_target_per_goals_scored_overall,\n\n          cornersTotalAVG_overallAway:\n            resultAway.data[indexAway].stats.cornersTotalAVG_overall,\n          cardsAVG_overallAway:\n            resultAway.data[indexAway].stats.cardsAVG_overall,\n          foulsAVG_overallAway:\n            resultAway.data[indexAway].stats.foulsAVG_overall,\n          penalties_won_per_match_overallAway:\n            resultAway.data[indexAway].stats.additional_info\n              .penalties_won_per_match_overall,\n          penalty_in_a_match_percentage_overallAway:\n            resultAway.data[indexAway].stats.additional_info\n              .penalty_in_a_match_percentage_overall,\n        }));\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  const storedDataHome = useSelector((state) => state.data.dataHome);\n  const jsonDataHome = JSON.parse(storedDataHome);\n  const propertyNamesHome = Object.entries(jsonDataHome);\n\n  const storedDataHomeDef = useSelector((state) => state.data.dataHomeDef);\n  const jsonDataHomeDef = JSON.parse(storedDataHomeDef);\n  const propertyNamesHomeDef = Object.entries(jsonDataHomeDef);\n\n  const storedDataallTeamResultsHome = useSelector(\n    (state) => state.data.allTeamResultsHome\n  );\n  const jsonDataallTeamResultsHome = JSON.parse(storedDataallTeamResultsHome);\n  const propertyNamesallTeamResultsHome = Object.values(\n    jsonDataallTeamResultsHome\n  );\n\n  const homeDetails = useSelector((state) => state.data.homeDetails);\n  const jsonHomeDetails = JSON.parse(homeDetails);\n\n  const storedDataAway = useSelector((state) => state.data.dataAway);\n  const jsonDataAway = JSON.parse(storedDataAway);\n  const propertyNamesAway = Object.entries(jsonDataAway);\n\n  const storedDataAwayDef = useSelector((state) => state.data.dataAwayDef);\n  const jsonDataAwayDef = JSON.parse(storedDataAwayDef);\n  const propertyNamesAwayDef = Object.entries(jsonDataAwayDef);\n\n  const storedDataallTeamResultsAway = useSelector(\n    (state) => state.data.allTeamResultsAway\n  );\n  const jsonDataallTeamResultsAway = JSON.parse(storedDataallTeamResultsAway);\n  const propertyNamesallTeamResultsAway = Object.values(\n    jsonDataallTeamResultsAway\n  );\n\n  const awayDetails = useSelector((state) => state.data.awayDetails);\n  const jsonAwayDetails = JSON.parse(awayDetails);\n\n  const storedFixtureDetails = useSelector(\n    (state) => state.data.fixtureDetails\n  );\n  const storedFixtureDetailsJson = JSON.parse(storedFixtureDetails);\n\n  const options = {\n    plugins: {\n      title: {\n        display: true,\n        text: \"Team comparison\",\n      },\n    },\n    aspectRatio: 0.5,\n    maintainAspectRatio: true,\n    responsive: true,\n    scales: {\n      x: {\n        stacked: true,\n      },\n      y: {\n        stacked: true,\n        display: false,\n      },\n    },\n  };\n  const labels = [\n    storedFixtureDetailsJson.homeTeamName,\n    storedFixtureDetailsJson.awayTeamName,\n  ];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        data: [\n          jsonHomeDetails[\"Attacking Strength\"],\n          jsonAwayDetails[\"Attacking Strength\"],\n        ],\n        label: \"Attacking Strength\",\n        backgroundColor: \"#030061\",\n      },\n      {\n        data: [\n          jsonHomeDetails[\"Defensive Strength\"],\n          jsonAwayDetails[\"Defensive Strength\"],\n        ],\n        label: \"Defensive Strength\",\n        backgroundColor: \"#CC3314\",\n      },\n    ],\n  };\n\n  return (\n    <div className=\"TeamStatsContainer\">\n      <div className=\"FixtureHeadingContiner\">\n        <CreateBadge\n          image={storedFixtureDetailsJson.homeTeamBadge}\n          ClassName=\"HomeTeamBadge\"\n          alt=\"Home team badge\"\n        ></CreateBadge>\n        {`${storedFixtureDetailsJson.homeTeamName} v ${storedFixtureDetailsJson.awayTeamName}`}\n        <CreateBadge\n          image={storedFixtureDetailsJson.awayTeamBadge}\n          ClassName=\"AwayTeamBadge\"\n          alt=\"Away team badge\"\n        ></CreateBadge>\n      </div>\n      <h3>\n        {storedFixtureDetailsJson.stadium} KO: {storedFixtureDetailsJson.time} |\n        Average Attendance: {dataState.averageAttendance}\n      </h3>\n      <h3>\n        XGTipping Prediction: {storedFixtureDetailsJson.homeGoals} -{\" \"}\n        {storedFixtureDetailsJson.awayGoals}\n      </h3>\n      <div className=\"TeamStats\">\n        <ul className=\"HomeTeamStats\">\n          <iframe\n            src={`https://footystats.org/api/club?id=${storedFixtureDetailsJson.homeId}`}\n            height=\"100%\"\n            width=\"100%\"\n            style={{\n              height: \"420px\",\n              width: \"100%\",\n              border: \"0.1em solid #030061\",\n            }}\n          ></iframe>\n          <h3>{storedFixtureDetailsJson.homeTeamName}</h3>\n          {propertyNamesHome.map(([key, value], index) => (\n            <li key={index}>\n              <strong>{key}:</strong>{\" \"}\n              {typeof value === \"object\" ? JSON.stringify(value) : value}\n            </li>\n          ))}\n          <ul className=\"HomeTeamStats\">\n            {propertyNamesHomeDef.map(([key, value], index) => (\n              <li key={index}>\n                <strong>{key}:</strong>{\" \"}\n                {typeof value === \"object\" ? JSON.stringify(value) : value}\n              </li>\n            ))}\n          </ul>\n          <li>Scored overall: {dataState.scoredOverallHome}</li>\n          <li>Conceeded overall: {dataState.conceededOverallHome}</li>\n          <li>\n            Average scored home only:{\" \"}\n            {(\n              dataState.scoredOverallHomeOnly / dataState.playedHomeOnly\n            ).toFixed(2)}\n          </li>\n          <li>\n            Average conceeded home only:{\" \"}\n            {(\n              dataState.conceededOverallHomeOnly / dataState.playedHomeOnly\n            ).toFixed(2)}\n          </li>\n          <li>PPG overall: {dataState.PPGOverallHome}</li>\n          <li>PPG home only: {dataState.PPGOverallHomeOnly}</li>\n          <li>League position: {dataState.leaguePosition_overallHome}</li>\n          <li>\n            League position home only: {dataState.leaguePosition_HomeOnly}\n          </li>\n          <li>BTTS {dataState.BTTSPercentage_overallHome}%</li>\n          <li>BTTS and win: {dataState.BTTSAndWinPercentage_Home}%</li>\n          <li>BTTS and lose: {dataState.BTTSAndLosePercentage_Home}%</li>\n          <li>BTTS both halves: {dataState.BTTSBothHalvesHome}%</li>\n          <li>\n            Goal diff 1st half only: {dataState.GoalDifferenceHT_overall_Home}\n          </li>\n          <li>Goal diff 2nd half only: {dataState.GD_2hg_overall_Home}</li>\n          <li>\n            Leading at half time: {dataState.leadingAtHTPercentage_overallHome}%\n          </li>\n          <li>\n            Over 1.5 goals in games:{\" \"}\n            {dataState.seasonOver15Percentage_overallHome}%\n          </li>\n          <li>\n            Over 2.5 goals in games:{\" \"}\n            {dataState.seasonOver25Percentage_overallHome}%\n          </li>\n          <li>\n            Over 3.5 goals in games:{\" \"}\n            {dataState.seasonOver35Percentage_overallHome}%\n          </li>\n          <li>\n            Over 4.5 goals in games:{\" \"}\n            {dataState.seasonOver45Percentage_overallHome}%\n          </li>\n          <li>\n            Scored both halves:{\" \"}\n            {dataState.scoredBothHalvesPercentage_overallHome}%\n          </li>\n          <li>\n            SOTs per goal:{\" \"}\n            {dataState.shots_on_target_per_goals_scored_overallHome}\n          </li>\n          <li>Corners in game avg: {dataState.cornersTotalAVG_overallHome}</li>\n          <li>Cards avg: {dataState.cardsAVG_overallHome}</li>\n          <li>Fouls against avg: {dataState.foulsAVG_overallHome}</li>\n          <li>\n            Penalties won avg: {dataState.penalties_won_per_match_overallHome}\n          </li>\n          <li>\n            Penalties in match:{\" \"}\n            {dataState.penalty_in_a_match_percentage_overallHome}%\n          </li>\n        </ul>\n        <ul className=\"AwayTeamStats\">\n          <iframe\n            src={`https://footystats.org/api/club?id=${storedFixtureDetailsJson.awayId}`}\n            height=\"100%\"\n            width=\"100%\"\n            style={{\n              height: \"420px\",\n              width: \"100%\",\n              color: \"#030061\",\n              border: \"0.1em solid #030061\",\n            }}\n          ></iframe>\n          <h3>{storedFixtureDetailsJson.awayTeamName}</h3>\n          {propertyNamesAway.map(([key, value], index) => (\n            <li key={index}>\n              <strong>{key}:</strong>{\" \"}\n              {typeof value === \"object\" ? JSON.stringify(value) : value}\n            </li>\n          ))}\n          <ul className=\"AwayTeamStats\">\n            {propertyNamesAwayDef.map(([key, value], index) => (\n              <li key={index}>\n                <strong>{key}:</strong>{\" \"}\n                {typeof value === \"object\" ? JSON.stringify(value) : value}\n              </li>\n            ))}\n          </ul>\n          <li>Scored overall: {dataState.scoredOverallAway}</li>\n          <li>Conceeded overall: {dataState.conceededOverallAway}</li>\n          <li>\n            Average scored away only:{\" \"}\n            {(\n              dataState.scoredOverallAwayOnly / dataState.playedAwayOnly\n            ).toFixed(2)}\n          </li>\n          <li>\n            Average conceeded away only:{\" \"}\n            {(\n              dataState.conceededOverallAwayOnly / dataState.playedAwayOnly\n            ).toFixed(2)}\n          </li>\n          <li>PPG overall: {dataState.PPGOverallAway}</li>\n          <li>PPG away only: {dataState.PPGOverallAwayOnly}</li>\n          <li>League position: {dataState.leaguePosition_overallAway}</li>\n          <li>\n            League position away only: {dataState.leaguePosition_AwayOnly}\n          </li>\n          <li>BTTS: {dataState.BTTSPercentage_overallAway}%</li>\n          <li>BTTS and win: {dataState.BTTSAndWinPercentage_Away}%</li>\n          <li>BTTS and lose: {dataState.BTTSAndLosePercentage_Away}%</li>\n          <li>BTTS both halves: {dataState.BTTSBothHalvesAway}%</li>\n          <li>\n            Goal diff 1st half only: {dataState.GoalDifferenceHT_overall_Away}\n          </li>\n          <li>Goal diff 2nd half only: {dataState.GD_2hg_overall_Away}</li>\n          <li>\n            Leading at half time: {dataState.leadingAtHTPercentage_overallAway}%\n          </li>\n          <li>\n            Over 1.5 goals in games:{\" \"}\n            {dataState.seasonOver15Percentage_overallAway}%\n          </li>\n          <li>\n            Over 2.5 goals in games:{\" \"}\n            {dataState.seasonOver25Percentage_overallAway}%\n          </li>\n          <li>\n            Over 3.5 goals in games:{\" \"}\n            {dataState.seasonOver35Percentage_overallAway}%\n          </li>\n          <li>\n            Over 4.5 goals in games:{\" \"}\n            {dataState.seasonOver45Percentage_overallAway}%\n          </li>\n          <li>\n            Scored both halves:{\" \"}\n            {dataState.scoredBothHalvesPercentage_overallAway}%\n          </li>\n          <li>\n            SOTs per goal:{\" \"}\n            {dataState.shots_on_target_per_goals_scored_overallAway}\n          </li>\n          <li>Corners in game avg: {dataState.cornersTotalAVG_overallAway}</li>\n          <li>Cards avg: {dataState.cardsAVG_overallAway}</li>\n          <li>Fouls against avg: {dataState.foulsAVG_overallAway}</li>\n          <li>\n            Penalties won avg: {dataState.penalties_won_per_match_overallAway}\n          </li>\n          <li>\n            Penalties in match:{\" \"}\n            {dataState.penalty_in_a_match_percentage_overallAway}%\n          </li>\n        </ul>\n        <div className=\"ChartContainer\">\n          <span className=\"Spacer\"></span>\n          <Bar options={options} data={data} className=\"ComparisonBar\" />\n          <span className=\"Spacer\"></span>\n        </div>\n        <ul className=\"HomeTeamResults\">\n          {propertyNamesallTeamResultsHome.map((match, index) => (\n            <>\n              <div className=\"MatchDate\">{match.date}</div>\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{match.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {match.homeGoals} : {match.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{match.awayTeam}</div>\n              </div>\n            </>\n          ))}\n        </ul>\n        <ul className=\"AwayTeamResults\">\n          {propertyNamesallTeamResultsAway.map((match, index) => (\n            <>\n              <div className=\"MatchDate\">{match.date}</div>\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{match.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {match.homeGoals} : {match.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{match.awayTeam}</div>\n              </div>\n            </>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default TeamPage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router, Route, Routes, HashRouter } from \"react-router-dom\";\nimport TeamPage from \"./components/Team\";\nimport { Provider } from \"react-redux\";\nimport store from \"./logic/store\"; // Import your Redux store\n\nimport {Fixture} from \"./components/Fixture\"\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n    <HashRouter>\n        <Routes>\n          <Route path=\"/fixture\" element={<TeamPage />} />\n          <Route path=\"/\" exact element={<App />} />\n          {/* <Route path=\"/\" element={<Fixture />} /> */}\n        </Routes>\n        </HashRouter>\n    </Provider>\n    ,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}