{"version":3,"sources":["components/Header.js","components/Button.js","components/OddsRadio.js","components/createBadge.js","components/createStatsDiv.js","components/Div.js","logic/getForm.js","components/Slider.js","components/CollapsableElement.js","components/Increment.js","logic/getBTTSPotential.js","components/Carousel.js","components/KofiButton.js","components/SliderDiff.js","logic/getScorePredictions.js","components/LeagueTable.js","logic/getFixtures.js","components/HeadToHead.js","components/Table.js","logic/getTeamStats.js","logic/compareFormTrend.js","components/Chart.js","logic/getStats.js","components/Fixture.js","logic/dataSlice.js","logic/store.js","App.js","reportWebVitals.js","components/Team.js","index.js"],"names":["Header","className","Button","props","id","text","variant","type","onClick","onClickEvent","style","selectedOdds","OddsRadio","handleOptionChange","setState","value","state","this","name","checked","onChange","Component","CreateBadge","image","ClassName","src","alt","flexShrink","Stats","styleForm","formIndicator","styleBTTS","BTTSBoolean","clicked","formRun","FormTextString","FavouriteRecord","Results","homeOrAway","homeOrAwayResults","BTTSArray","goals","conceeded","possession","XG","XGConceded","goalDifference","goalDifferenceHomeOrAway","sot","dangerousAttacks","leaguePosition","homeOrAwayLeaguePosition","winPercentage","toFixed","drawPercentage","lossPercentage","ppg","formTrend","CardsTotal","CornersAverage","Div","getForm","match","teams","homeId","awayId","fixtureForm","i","team","fetch","process","response","json","then","formData","lastMatchTimestamp","last_updated_match_timestamp","length","rangeValue","Slide","useState","range","setRange","fractionalValue","setFractionalValue","useEffect","roundedValueOne","Math","round","roundedValueTwo","fractionalOne","oddslib","from","to","precision","fractionalTwo","console","log","error","sx","width","color","event","newValue","valueLabelDisplay","step","min","max","valueLabelFormat","index","Collapsable","transitionTime","trigger","classNameButton","buttonText","classNameFlex","classNameTwo","element","classNameThree","elementTwo","incrementValue","riskLevel","Increment","IncrementItem","getNewTips","allTips","DecreaseItem","show","getBTTSPotential","homeGoals","awayGoals","unroundedHomeGoals","unroundedAwayGoals","homeBTTS","bttsAllPercentageHome","homeOnlyBTTS","bttsPercentageHomeHome","awayOnlyBTTS","bttsPercentageAwayAway","awayBTTS","bttsAllPercentageAway","homeG","awayG","combinedBTTS","bttsFraction","status","awayOdds","btts","bttsChosen","totalGoals","rawFinalHomeGoals","rawFinalAwayGoals","SwiperCore","use","EffectCoverflow","Pagination","Slider","effect","autoHeight","grabCursor","centeredSlides","slidesPerView","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","pagination","clickable","element2","element3","element4","element5","StyledKofiButton","title","kofiID","minimumXG","minimumGD","minimumGDHorA","minimumLast10","SlideDiff","finalHomeGoals","finalAwayGoals","homeOdds","setValue","useCase","marks","parseFloat","lower","upper","Headers","append","drawPredictions","sumStatDAWin","sumStatDALoss","sumStatPossessionWin","sumStatPossessionLoss","sumStatSOTWin","sumStatSOTLoss","sumStatPPGLast10Win","sumStatPPGLast10Loss","sumOddsWin","sumOddsLoss","sumXGForWin","sumXGForLoss","sumXGAgainstWin","sumXGAgainstLoss","allDrawOutcomes","totalROI","totalInvestment","totalProfit","convertTimestamp","timestamp","newDate","Date","toLocaleDateString","split","day","month","year","converted","getPointsFromLastX","lastX","pointsAddition","points","forEach","game","getPastLeagueResults","hOrA","form","date","allLeagueResultsArrayOfObjects","leagueIndex","fixtures","teamsHomeResults","filter","fixture","home_name","item","date_unix","sort","a","b","teamsAwayResults","away_name","homeResults","awayResults","oddsSumHome","oddsSumAway","favouriteCount","underdogCount","winningFavouriteCount","drawingFavouriteCount","beatenFavouriteCount","winningUnderdogCount","drawingUnderdogCount","beatenUnderdogCount","resultedGame","homeGoalCount","team_a_xg","awayGoalCount","team_b_xg","team_a_possession","team_a_shots","team_a_shotsOnTarget","team_b_shotsOnTarget","team_a_dangerous_attacks","team_a_corners","odds_ft_1","odds_ft_2","homeTeam","awayTeam","XGAgainst","scored","shots","sotAgainst","corners","dateRaw","oddsHome","oddsAway","result","push","team_b_possession","team_b_shots","team_b_dangerous_attacks","team_b_corners","reversedResultsAway","allTeamResults","reversedResultsHome","concat","averageOddsHome","averageOddsAway","oddsReliabilityWin","oddsReliabilityDraw","oddsReliabilityLose","oddsReliabilityWinAsUnderdog","oddsReliabilityDrawAsUnderdog","oddsReliabilityLoseAsUnderdog","reliableIndicator","unreliableIndicator","predictabilityScore","reliabilityString","teamGoalsHome","map","res","teamGoalsAway","teamGoalsAll","teamConceededHome","teamConceededAway","teamConceededAll","teamXGForAll","teamXGAgainstAll","teamXGForHome","teamXGAgainstHome","teamXGForAway","teamXGAgainstAway","XGSum","reduce","avgXGScored","XGAgainstSum","avgXGConceeded","possessionSum","avgPossession","possessionHome","possessionSumHome","avgPossessionHome","possessionAway","possessionSumAway","avgPossessionAway","dangerousAttacksSum","avgDangerousAttacks","dangerousAttacksHome","dangerousAttacksSumHome","avgDangerousAttacksHome","dangerousAttacksAway","dangerousAttacksSumAway","avgDangerousAttacksAway","shotsSum","avgShots","shotsHome","shotsSumHome","avgShotsHome","shotsAway","shotsSumAway","avgShotsAway","shotsOnTarget","shotsOnTargetSum","avgShotsOnTarget","shotsOnTargetHome","shotsOnTargetSumHome","avgShotsOnTargetHome","shotsOnTargetAway","shotsOnTargetSumAway","avgShotsOnTargetAway","shotsOnTargetAgainst","shotsOnTargetSumAgainst","avgShotsOnTargetAgainst","shotsOnTargetAgainstHome","shotsOnTargetSumAgainstHome","avgShotsOnTargetAgainstHome","shotsOnTargetAgainstAway","shotsOnTargetSumAgainstAway","avgShotsOnTargetAgainstAway","cornersSum","cornersAv","cornersHome","cornersSumHome","cornersAvHome","cornersAway","cornersSumAway","cornersAvAway","last5XG","slice","last5XGSum","last5XGAvgFor","last5XGHome","last5XGSumHome","last5XGAvgForHome","last5XGAway","last5XGSumAway","last5XGAvgForAway","XGSumHome","avgXGScoredHome","XGSumAway","avgXGScoredAway","XGAgainstSumHome","avgXGConceededHome","XGAgainstSumAway","avgXGConceededAway","last5XGAgainst","last5XGAgainstSum","last5XGAvgAgainst","last5XGAgainstHome","last5XGAgainstSumHome","last5XGAvgAgainstHome","last5XGAgainstAway","last5XGAgainstSumAway","last5XGAvgAgainstAway","XGDiffNonAverage","XGDiffNonAverageLast5","XGOverall","XGlast5","XGAgainstAvgOverall","XGAgainstlast5","AveragePossessionOverall","AverageDangerousAttacksOverall","AverageCorners","AverageShotsOnTargetOverall","AverageShotsOnTargetAgainstOverall","alpha","beta","allGoalsArrayHome","allConceededArrayHome","sum","sumTwo","predictGoalsWithExponentialSmoothing","reverse","forAndAgainstRollingAv","forAndAgainstRollingAvHomeOrAway","allGoalsArrayAway","allConceededArrayAway","bttsHome","bttsAway","bttsAll","bttsHomeCount","bttsHomeString","bttsHomePercentage","bttsAwayCount","bttsAwayString","bttsAwayPercentage","bttsAllCount","bttsAllString","bttsAllPercentage","r","x","predictNextWeightedMovingAverage","teamGoalsHomeRollingAverage","teamGoalsAwayRollingAverage","RoundedXGFor","xg","RoundedXGAgainst","RoundedXGForHome","RoundedXGAgainstHome","RoundedXGForAway","RoundedXGAgainstAway","XGPrediction","XGPredictionHome","XGPredictionAway","teamConceededHomeRollingAverage","teamConceededAwayRollingAverage","avgScored","sumHome","avgScoredHome","sumAway","avgScoredAway","last5","last5Sum","last5AvgScored","last5Home","last5SumHome","last5AvgScoredHome","last5Away","last5SumAway","last5AvgScoredAway","last5Conceeded","last5ConceededSum","last5AvgConceeded","last5ConceededHome","last5ConceededSumHome","last5AvgConceededHome","last5ConceededAway","last5ConceededSumAway","last5AvgConceededAway","last10","last10Sum","last10AvgScored","last10Conceeded","last10ConceededSum","last10AvgConceeded","last5Goals","last5GoalsConceeded","last5GoalDiff","last10Goals","last10GoalsConceeded","teamGoalsAllRollingAverage","teamGoalsConceededAllRollingAverage","avgConceeded","teamConceededHomeOnlySum","teamConceededAvgHomeOnly","teamConceededAwayOnlySum","teamConceededAvgAwayOnly","numbers","windowSize","startIndex","window","weights","Array","_","acc","num","movingAverage","w","calculateWeightedAverage","arr","weightedSum","totalWeight","weight","pow","teamGoalsFor","teamGoalsAgainst","lambdaFor","lambdaAgainst","predictedGoalsFor","predictedGoalsAgainst","goalsFor","goalsAgainst","compareStat","statOne","statTwo","stat1","stat2","normalizeValues","normalizedValue1","normalizedValue2","finalValue1","finalValue2","diff","statDiff","getClinicalRating","dangerousAttackConversion","rating","score","getPointsDifferential","pointsHomeAvg","pointsAwayAvg","differential","getPointWeighting","pointsDiff","pointsDiffWeightingHome","pointsDiffWeightingAway","compareFormTrend","recentForm","distantForm","scoreTotal","recent","distant","getPointAverage","pointTotal","games","poissonDistribution","lambda","k","numerator","exp","denominator","factorial","n","calculateAverageGoals","adjustGoalsAvg","goalsAvg","strengthRatio","predictScore","goalsForTeam1","goalsAgainstTeam1","goalsForTeam2","goalsAgainstTeam2","team1Metrics","team2Metrics","team1AverageGoalsFor","team1AverageGoalsAgainst","team2AverageGoalsFor","team2AverageGoalsAgainst","team1StrengthRatio","weighting","team2StrengthRatio","adjustedTeam1AverageGoals","adjustedTeam2AverageGoals","adjustedTeam1AverageGoalsAgainst","adjustedTeam2AverageGoalsAgainst","maxGoals","scores","j","team1GoalExpectation","team2GoalExpectation","isFinite","probability","team1Score","team2Score","top5Scores","value1","value2","minRange","maxRange","Error","absValue1","abs","absValue2","normalizedAbsValue1","totalAbs","normalizedAbsValue2","compareTeams","homeForm","awayForm","homeAttackStrength","attackingStrength","homeDefenceStrength","defensiveStrength","homePossessionStrength","possessionStrength","awayAttackStrength","awayDefenceStrength","awayPossessionStrength","attackStrengthComparison","defenceStrengthComparison","possessiontrengthComparison","homeOrAwayAverage","homeAwayPointAverageComparison","oddsComparison","goalDiffHomeOrAwayComparison","goalDifferenceComparison","directnessOverallStrength","overallDirectnessComparison","accuracyOverallStrength","accuracyComparison","calculation","homeWinOutcomeProbability","homeTeamWinPercentage","awayTeamLossPercentage","awayWinOutcomeProbability","homeTeamLossPercentage","awayTeamWinPercentage","drawOutcomeProbability","homeTeamDrawPercentage","awayTeamDrawPercentage","lastGame","last2Points","XGdifferentialValueRaw","calculateScore","divider","calculate","allForm","find","home","teamName","away","PlayedHome","PlayedAway","LastFiveForm","previousToLastGame","last2","twoGameAverage","last3Points","threeGameAverage","last5Points","fiveGameAverage","last6Points","sixGameAverage","last10Points","tenGameAverage","lastHomeOrAwayPoints","ScoredAverage","ScoredOverall","ConcededAverage","ConcededOverall","ScoredAverageShortTerm","ConcededAverageShortTerm","longTermAverageGoals","longTermAverageConceeded","GoalsInGamesAverageHome","GoalsInGamesAverageAway","recentGoalDiff","distantGoalDiff","recentDA","distantDA","recentPosession","distantPosession","recentCleanSheet","CleanSheetPercentage","distantCleanSheet","recentFormArray","distantFormArray","formTrendScore","expectedGoals","ScoredAverageShortAndLongTerm","conceededAverageShortAndLongTerm","longTermGoalDifference","shortTermGoalDifference","XGdifferential","XGdifferentialRecent","actualToXGDifferenceRecent","formHome","formAway","homeTenGameAvg","awayTenGameAvg","homeTwoGameAvg","awayTwoGameAvg","pointsDiff10","pointsDiff2","last10WeightingHome","last10WeightingAway","last2WeightingHome","last2WeightingAway","clinicalRating","clinicalScore","XGdifferentialValue","leagueID","predictedGoalsBasedOnHomeAv","predictedGoalsBasedOnAwayAv","allTeamGoalsBasedOnAverages","predictedGoalsConceededBasedOnHomeAv","predictedGoalsConceededBasedOnAwayAv","allTeamGoalsConceededBasedOnAverages","averageScoredLeague","averageConceededLeague","last10btts","last10bttsHome","last10bttsAway","bttsPercentageHomeAway","bttsPercentageAwayHome","homeTeamHomePositionRaw","awayTeamAwayPositionRaw","homePositionHomeOnly","awayPositionAwayOnly","homePosition","homeRawPosition","awayPosition","awayRawPosition","improving","AttackingPotency","AttacksHome","AttacksAverage","attackingMetricsHome","AverageShots","undefined","Corners","attackingMetricsHomeOnly","attackingMetricsAwayOnly","attackingMetricsAway","defensiveMetricsHome","defensiveMetricsAway","defensiveMetricsHomeOnly","defensiveMetricsAwayOnly","attackingMetrics","defensiveMetrics","calculateAttackingStrength","attackingStrengthHomeOnly","attackingStrengthAwayOnly","calculateDefensiveStrength","defensiveStrengthHomeOnly","defensiveStrengthAwayOnly","calculateMetricStrength","possessionStrengthHomeOnly","directnessOverall","directnessHomeOnly","directnessAwayOnly","directnessHomeStrength","directnessAwayStrength","shootingAccuracy","shootingAccuracyHomeOnly","shootingAccuracyAwayOnly","accuracyHomeStrength","accuracyAwayStrength","xgForStrength","xgForStrengthHomeOnly","xgAgainstStrength","xgAgainstStrengthHomeOnly","possessionStrengthAwayOnly","xgForStrengthAwayOnly","xgAgainstStrengthAwayOnly","parseInt","actualToXGDifference","teamComparisonScore","teamStrengthWeighting","scorePredictions","homeGoalDiff","awayGoalDiff","goalsDifferential","rollingAverageGoalsDifferential","factorOneHome","factorOneAway","factorTwoHome","factorTwoAway","scoreDiff","homeComparisonWeighting","awayComparisonWeighting","difference","omit","prediction","includeInMultis","pointsDifferential","pointsDifferentialValue","pointsDifferentialValueRaw","rollingGoalDiffDifferential","rollingGoalDiff","rollingGoalDiffValue","dangerousAttacksDifferential","dangerousAttacksDiff","dangerousAttacksDiffValue","winner","outcome","predictionOutcome","over25PredictionOutcome","bttsOutcome","total","total2","drawOdds","last10PointDiffHomePerspective","last10PointDiffAwayPerspective","XGDiffBetweenTeamsHomePerspective","XGDiffBetweenTeamsAwayPerspective","game_week","profit","getSuccessMeasure","sumProfit","investment","exactScores","successCount","netProfit","hasOwnProperty","exactScore","ROI","operand","operandTwo","exactScoreHitRate","successRate","ReactDOM","render","document","getElementById","price","combinations","gamesInExotic","exoticStake","exoticString","allTipsSorted","newArray","bestBets","Over25Tips","XGDiffTips","rollingDiffTips","dangerousAttacksDiffTips","pointsDiffTips","exoticArray","bttsArray","accumulatedOdds","predictions","array","tip","indexOf","rawOdds","renderTips","getScorePrediction","mocked","mock","Promise","all","matches","goalsA","goalsB","unroundedGoalsA","unroundedGoalsB","outcomeSymbol","over25PredictionOutcomeSymbol","bttsOutcomeSymbol","fractionHome","predictionObject","odds","comparisonScore","rawComparisonScore","goalDifferential","experimentalCalc","fractionAway","Over25PredictionObject","decimalOdds","homeDoubleChance","over25Odds","doubleChanceOutcome","goalTotalUnrounded","XGPredictionObject","otherTeam","pointsDiffObject","rollingDiffObject","dangerousAttacksDiffObject","RenderAllFixtures","bool","getMultis","getCoverBetMaxReturns","getAccumulatorPrice","priceArray","minAccSize","stake","perms","getUniquePermutations","permLength","permutations","newArr","splice","twoDimArrayUnion","arr1","arr2","duplicate","NewlineText","str","toggleState","setIsOff","upArrow","StyledTableCell2","withStyles","theme","head","backgroundColor","padding","paddingTop","paddingBottom","textAlign","fontSize","fontFamily","margin","body","TableCell","StyledTableCell","StyledTableRow","root","TableRow","LeagueTable","singleResult","rows","Teams","component","scope","Name","Played","Wins","Draws","Losses","For","Against","GoalDifference","Points","Form","Key","leagueResults","team_a_red_cards","team_b_red_cards","leagueResultsOlder","getTopScorersTeam","ID","sorted","league","order","sortedByForm","LastWeeksResults","GamesPlayed","LeagueID","TableContainer","Paper","Table","marginTop","marginBottom","TableHead","TableBody","mostRecentGameweek","seasonAVG_home","seasonAVG_away","seasonBTTSPercentage","seasonOver05Percentage_overall","seasonOver15Percentage_overall","seasonOver25Percentage_overall","seasonOver35Percentage_overall","seasonOver45Percentage_overall","over75CornersPercentage_overall","over85CornersPercentage_overall","over95CornersPercentage_overall","over105CornersPercentage_overall","over115CornersPercentage_overall","over125CornersPercentage_overall","cornersAVG_overall","cardsAVG_overall","top_scorers","known_as","club_team_id","goals_overall","fixtureResponse","leagueInstance","lastThreeFormHome","lastThreeFormAway","lastFiveFormHome","lastFiveFormAway","lastSixFormHome","lastSixFormAway","lastTenFormHome","lastTenFormAway","leagueOrAll","formRunHome","formRunAway","WDLinLeagueHome","WDLinLeagueAway","HomeAverageGoals","homeAverageGoals","HomeAverageConceded","homeAverageConceded","AwayAverageGoals","awayAverageGoals","AwayAverageConceded","awayAverageConceded","require","fixtureArray","leagueGames","leagueArray","leagueIdArray","tableArray","worldCupArray","generateTables","allResults","currentLeagueId","data","specific_tables","groups","table","currentTeam","wdl_record","toUpperCase","Position","cleanName","matchesPlayed","seasonWins_overall","seasonDraws_overall","seasonLosses_overall","seasonGoals","seasonConceded_home","seasonConceded_away","seasonGoalDifference","LastXPoints","wdl","seasonConceded","group","league_table","all_matches_table_overall","results","mostRecentGame","pop","gameweeksResults","leagueTable","leagueStatistics","stats","statistics","createFixture","mockBool","roundedHomeOdds","roundedAwayOdds","homeFraction","awayFraction","bttsOdds","roundedBTTSOdds","homeTeamWinsPercentage","homeTeamLossesPercentage","homeTeamDrawsPercentage","awayTeamWinsPercentage","awayTeamLossesPercentage","awayTeamDrawsPercentage","Fixture","isFunctionRunning","generateFixtures","footyStatsFormattedDate","current","todaysDate","getPrefix","position","teamPositionPrefix","updateResults","method","headers","Accept","JSON","stringify","height","fill","url","formUrl","formArray","leaguesStored","storedForm","isFormStored","isStoredLocally","orderedLeagues","leaguePositions","allLeagueResults","leagues","allGames","startDate","getTime","targetDate","orderedLeague","gamesFiltered","gamesShortened","pager","current_page","max_page","page2","page2Data","gamesConcat","gamesConcatFiltered","mostRecentResults","shortenedResults","pre_match_teamA_overall_ppg","pre_match_teamB_overall_ppg","leagueObj","homeLeague","awayLeague","all_matches_table_home","all_matches_table_away","regularSeason","season","string","stringHome","stringAway","rawPosition","homeFormName","awayFormName","homeSeasonWinPercentage","seasonWins","awaySeasonWinPercentage","homeSeasonLossPercentage","seasonLosses_home","awaySeasonLossPercentage","seasonLosses_away","homeSeasonDrawPercentage","seasonDraws","awaySeasonDrawPercentage","homeSeasonMatchesPlayed","awaySeasonMatchesPlayed","played","competition_id","unixTimestamp","dateObject","previousLeagueName","leagueName","time","toLocaleString","hour","minute","odds_ft_x","odds_doublechance_1x","awayDoubleChance","odds_doublechance_x2","odds_btts_yes","homeID","awayID","homeTeamInfo","awayTeamInfo","homeTeaminLeague","awayTeaminLeague","teamPositionHome","teamPositionHomeTable","teamPositionAwayTable","homeTeamWinPercentageHome","awayTeamWinPercentageAway","homeTeamLossPercentageHome","awayTeamLossPercentageAway","homeTeamDrawPercentageHome","awayTeamDrawPercentageAway","teamPositionAway","homePrefix","homePrefixHomeTable","awayPrefix","awayPrefixAwayTable","homeSeasonPPG","awaySeasonPPG","homeTeaminHomeLeague","awayTeaminAwayLeague","homeFormString5","additional_info","formRun_overall","awayFormString5","homeFormString6","awayFormString6","homeFormString10","awayFormString10","homeFormRun","formRun_home","awayFormRun","formRun_away","season_format","xg_for_avg_overall","xg_for_avg_home","seasonScoredNum_overall","seasonScoredAVG_home","seasonMatchesPlayed_home","seasonMatchesPlayed_away","seasonConcededNum_overall","seasonConcededAVG_home","xg_against_avg_overall","XGAgainstAverage","xg_against_avg_home","seasonCSPercentage_overall","possessionAVG_overall","AveragePossession","possessionAVG_home","shotsOnTargetAVG_overall","AverageShotsOnTarget","shotsOnTargetAVG_home","dangerous_attacks_avg_overall","PPG","seasonPPG_overall","attacks_avg_home","AttacksAway","attacks_avg_away","AverageDangerousAttacks","dangerous_attacks_avg_home","homeAttackAdvantage","homeDefenceAdvantage","BTTSPercentage","seasonBTTSPercentage_home","LeagueOrAll","LeaguePosition","LeagueAverageGoals","LeagueAverageConceded","shotsAVG_overall","shotsAVG_home","seasonGoalDifference_overall","seasonGoalDifference_home","seasonBTTSPercentage_overall","cardsTotal_overall","scoredBothHalvesPercentage_overall","AverageShotsHomeOrAway","lastThreeForm","LastSixForm","LastTenForm","SeasonPPG","WinPercentage","LossPercentage","DrawPercentage","BttsPercentage","BttsPercentageHomeOrAway","ScoredBothHalvesPercentage","LastMatch","WDLRecord","xg_for_avg_away","seasonScoredAVG_away","seasonConcededAVG_away","xg_against_avg_away","possessionAVG_away","shotsOnTargetAVG_away","dangerous_attacks_avg_away","seasonBTTSPercentage_away","shotsAVG_away","seasonGoalDifference_away","teamIDHome","teamIDAway","leagueId","homeBadge","home_image","awayBadge","away_image","homePpg","home_ppg","awayPpg","away_ppg","homeTeamHomePosition","awayTeamAwayPosition","odds_ft_over25","btts_potential","stadium","stadium_name","expectedGoalsHomeToDate","team_a_xg_prematch","expectedGoalsAwayToDate","team_b_xg_prematch","setTimeout","HeadToHead","homeWins","awayWins","draws","averageGoals","bestHomeOdds","bestAwayOdds","lastGameStadiumName","lastGameDate","lastGameHomeTeam","lastGameHomeGoals","lastGameAwayGoals","lastGameAwayTeam","secondToLastGameStadiumName","secondToLastGameDate","secondToLastGameHomeTeam","secondToLastGameHomeGoals","secondToLastGameAwayGoals","secondToLastGameAwayTeam","lineHeight","CustomizedTables","align","o05Stat","o05Odds","u05Odds","o15Stat","o15Odds","u15Odds","o25Stat","o25Odds","u25Odds","o35Stat","o35Odds","u35Odds","BTTSStat","BTTSForecast","BTTSOdds","BTTSOddsNo","getTeamStats","identifier","getBTTSPercentage","getFairOdds","impliedProbability","impliedProbabilityDivided","homeToal","awayTotal","fixtureHistory","matchArr","h2h","previous_matches_ids","oddsComparisonHomeArray","oddsComparisonAwayArray","odds_comparison","sortedHomeOdds","Object","entries","sortedAwayOdds","bestHomeOddsProvider","bestAwayOddsProvider","previous_matches_results","totalMatches","lastMatch","secondMatchExists","secondToLastMatch","previousMatch","previousMatchDetails","getDate","getMonth","getFullYear","secondToPreviousMatch","secondToPreviousMatchDetails","dateObject2","date2","betting_stats","bttsPercentage","fairOddsBTTSYes","fairOddsBTTSNo","team_a_wins","team_b_wins","draw","avg_goals","isNaN","over05Percentage","over15Percentage","o15Forecast","o15_potential","odds_ft_over05","odds_ft_under05","odds_ft_over15","odds_ft_under15","over25Percentage","o25Forecast","o25_potential","odds_ft_under25","over35Percentage","o35Forecast","o35_potential","odds_ft_over35","odds_ft_under35","odds_btts_no","CornersStat","CornersForecast","corners_potential","CornersOdds","odds_corners_over_105","getOverOrUnderText","xgSum","overUnderAchievingSum","getXGDifferential","xgFor","xgAgainst","xgDiff","goalDiff","compareXgAndGoalDiff","getAttackingSummary","goalsRecent","goalsLongTerm","getDefenceSummary","cleansheetStat","lastx","ten","five","xgText","attackString","defenceString","pointsAverageTotal","GenerateFormSummary","Chart","data1","options","responsive","aspectRatio","maintainAspectRatio","layout","elements","point","radius","scales","y","suggestedMin","suggestedMax","grid","borderWidth","borderColor","ticks","font","size","display","plugins","legend","labels","boxHeight","keys","datasets","label","team1","tension","team2","data2","RadarChart","angleLines","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","BarChart","datasetOne","idx","numOne","numTwo","tempArr","firstNum","secondNum","findLargestNum","context","dataIndex","dataset","indexAxis","bar","tooltip","enabled","metric","ranges","normalizedValue","metricName","metricValue","averagePossession","accuracyOverall","weightedScore","ChartJS","register","CategoryScale","LinearScale","RadialLinearScale","PointElement","ArcElement","Filler","BarElement","LineElement","Title","Tooltip","Legend","rollingGoalDiffTotalHome","rollingGoalDiffTotalAway","displayBool","testBool","styling","alert","getPointsFromGames","formArr","pairings","W","D","L","arrayOfIndividualPoints","getLastGameResult","homeXG","awayXG","homeShots","awayShots","homeSot","awaySot","homeDangerousAttacks","awayDangerousAttacks","homePossession","awayPossession","homeRed","awayRed","homePPG","awayPPG","StatsHome","gameCount","formDataHome","Last5","gameArrayHomeTeamHomeGames","AverageGoals","AverageConceeded","AverageXG","AverageXGConceded","homeTenGameAverage","homeSixGameAverage","homeFiveGameAverage","homeLastGame","ResultsHomeOrAway","wonHomeOrAwayOnly","FormTextStringHome","StatsAway","formDataAway","gameArrayAwayTeamAwayGames","awayTenGameAverage","awaySixGameAverage","awayFiveGameAverage","awayLastGame","FormTextStringAway","gameStats","gameArrayHome","gameArrayAway","goalDiffHomeMovingAv","goalDiffAwayMovingAv","getEMA","p","pos","resultHome","resultHomeOnly","timeZone","won","goalsScored","goalsConceeded","goalDiffArrayHome","cumulativeSumHome","resultAway","resultAwayOnly","wonAwayOrAwayOnly","goalDiffArrayAway","cumulativeSumAway","bttsArrayHome","bttsArrayAway","resultsArrayHome","resultsArrayAway","homeFormTrend","awayFormTrend","formTextStringHome","formTextStringAway","favouriteRecordHome","favouriteRecordAway","homeOnlyAttackStrength","homeOnlyDefenceStrength","homeOnlyPossessionStrength","homeXGForStrength","homeOnlyXGForStrength","homeXGAgainstStrength","homeOnlyXGAgainstStrength","homeDirectnessStrength","homeOnlyDirectnessStrength","homeAccuracyOverallStrength","homeOnlyAccuracyOverallStrength","awayOnlyAttackStrength","awayOnlyDefenceStrength","awayOnlyPossessionStrength","awayXGForStrength","awayOnlyXGForStrength","awayXGAgainstStrength","awayOnlyXGAgainstStrength","awayDirectnessStrength","awayOnlyDirectnessStrength","awayAccuracyOverallStrength","awayOnlyAccuracyOverallStrength","formPointsHome","formPointsAway","Last5PPG","formArrayHome","formArrayAway","chartType","overviewHome","overviewAway","pointsHome","pointsHomeAv","pointsAway","pointsAwayAv","resultValue","count","mockValue","initialState","dataHome","localStorage","getItem","dataAway","dataHomeDef","dataAwayDef","allTeamResultsHome","allTeamResultsAway","homeDetails","awayDetails","fixtureDetails","dataSlice","createSlice","reducers","setData","action","payload","actions","store","configureStore","reducer","dataReducer","GetDivider","matchStatus","isPrediction","renderLeagueName","renderTable","SingleFixture","dispatch","useDispatch","StoreData","homeTeamName","homeTeamBadge","awayTeamName","awayTeamBadge","setItem","key1","key2","open","createStatsDiv","onMouseDown","handleButtonClick","List","today","todayFootyStats","tomorrow","tomorrowFootyStats","dateFootyStats","lastSaturday","lastSaturdayFootyStats","tomorrowsDate","yesterdaysDate","saturdayDate","historicDate","dateString","fixtureList","availableLeagues","leagueOrder","decrementDate","calculateDate","renderButtons","setDate","getDay","textJoined","newText","leagueList","mapOrder","key","A","B","welcomeTextOne","welcomeTextTwo","App","getLeagueList","href","target","rel","mockedFixtures","TwitterShareButton","boxShadow","TwitterIcon","RedditShareButton","RedditIcon","FacebookShareButton","quote","FacebookIcon","WhatsappShareButton","separator","WhatsappIcon","TelegramShareButton","TelegramIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","TeamPage","dataState","fetchData","storedFixtureDetailsJson","responseHome","responseAway","indexHome","findIndex","indexAway","test","scoredOverallHome","playedHomeOnly","scoredOverallHomeOnly","seasonScoredNum_home","conceededOverallHome","conceededOverallHomeOnly","seasonConcededNum_home","PPGOverallHome","PPGOverallHomeOnly","seasonPPG_home","leaguePosition_overallHome","leaguePosition_overall","leaguePosition_HomeOnly","leaguePosition_home","averageAttendance","average_attendance_home","BTTSPercentage_overallHome","BTTSAndWinPercentage_Home","BTTS_and_win_percentage_overall","BTTSAndLosePercentage_Home","BTTS_and_lose_percentage_overall","BTTSBothHalvesHome","BTTS_both_halves_percentage_overall","GoalDifferenceHT_overall_Home","GoalDifferenceHT_overall","GD_2hg_overall_Home","gd_2hg_overall","leadingAtHTPercentage_overallHome","leadingAtHTPercentage_overall","seasonOver15Percentage_overallHome","seasonOver25Percentage_overallHome","seasonOver35Percentage_overallHome","seasonOver45Percentage_overallHome","scoredBothHalvesPercentage_overallHome","shots_on_target_per_goals_scored_overallHome","shots_on_target_per_goals_scored_overall","cornersTotalAVG_overallHome","cornersTotalAVG_overall","cardsAVG_overallHome","foulsAVG_overallHome","foulsAVG_overall","penalties_won_per_match_overallHome","penalties_won_per_match_overall","penalty_in_a_match_percentage_overallHome","penalty_in_a_match_percentage_overall","scoredOverallAway","playedAwayOnly","scoredOverallAwayOnly","seasonScoredNum_away","conceededOverallAway","conceededOverallAwayOnly","seasonConcededNum_away","PPGOverallAway","PPGOverallAwayOnly","seasonPPG_away","leaguePosition_overallAway","leaguePosition_AwayOnly","leaguePosition_away","BTTSPercentage_overallAway","BTTSAndWinPercentage_Away","BTTSAndLosePercentage_Away","BTTSBothHalvesAway","GoalDifferenceHT_overall_Away","GD_2hg_overall_Away","leadingAtHTPercentage_overallAway","seasonOver15Percentage_overallAway","seasonOver25Percentage_overallAway","seasonOver35Percentage_overallAway","seasonOver45Percentage_overallAway","scoredBothHalvesPercentage_overallAway","shots_on_target_per_goals_scored_overallAway","cornersTotalAVG_overallAway","cardsAVG_overallAway","foulsAVG_overallAway","penalties_won_per_match_overallAway","penalty_in_a_match_percentage_overallAway","storedDataHome","useSelector","jsonDataHome","parse","propertyNamesHome","storedDataHomeDef","jsonDataHomeDef","propertyNamesHomeDef","storedDataallTeamResultsHome","jsonDataallTeamResultsHome","propertyNamesallTeamResultsHome","values","jsonHomeDetails","storedDataAway","jsonDataAway","propertyNamesAway","storedDataAwayDef","jsonDataAwayDef","propertyNamesAwayDef","storedDataallTeamResultsAway","jsonDataallTeamResultsAway","propertyNamesallTeamResultsAway","jsonAwayDetails","storedFixtureDetails","stacked","path","Team","exact"],"mappings":"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AUvO,EAAMuO,SAChB+C,OAAQ4xC,GACRC,MAAOA,GACPhuB,KAAMn1B,EAAMm1B,QAIpB,C,IGnUI8wB,GACAC,GACAC,GACAC,GACAh4C,GACAi4C,GAGAC,GACAC,GAGAC,GACAC,GACAC,GACAC,GACAphB,GACAqhB,G,6GAjEOC,GAAc,GAGZC,GAAmB,GACrBpjB,GAAiB,GAEtBqjB,GAAc,CAClB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,MACA,KACA,KACA,MACA,OAmXD,wDAlTM,mBAKuB,EAQbC,EAAa,EAYbC,EAAa,0BA2CbC,EAAa,6EAjEX,OAiEW,aA6E3B,OA7E2B,kCAA5B,wFACE3zB,IAASC,OACP,sBAAK1zB,UAAU,iBAAgB,UAC7B,qBAAKA,UAAU,kBAAiB,SAC9B,cAACC,EAAM,CACLG,KAAM,gBACNJ,UAAU,yBACVQ,aAAY,gCAAE,wFACD,OADC,KACZumD,GAAW,SACHzkB,GACJ,eACAkkB,GACA9lD,EACA+lD,IACA,EACAN,IACD,iDARS10C,KAAI,gEAatB,cAACxR,EAAM,CACLG,KAAI,IACJJ,UAAU,iBACVQ,aAAY,gCAAE,wGAAkB0mD,EAAc,EAAG54C,IAAK,qFAExD,cAACrO,EAAM,CACLG,UAAyBytB,IAAnB04B,GAA+BA,GAAiBj4C,GACtDtO,UAAU,iBACVQ,aAAY,gCAAE,wFACD,OADC,KACZumD,GAAW,SACHzkB,GACJ,iBACAwkB,GACApmD,EACA6lD,IACA,EACAJ,IACD,iDARS10C,KAAI,8DAYpB,cAACxR,EAAM,CACLG,KAAI,QACJJ,UAAU,sBACVQ,aAAY,gCAAE,wFACD,OADC,KACZumD,GAAW,SACHzkB,GACJ,iBACA6jB,GACAzlD,EACA0lD,IACA,EACAD,IACD,iDARS10C,KAAI,8DAYpB,cAACxR,EAAM,CACLG,KAAM,WACNJ,UAAU,iBACVQ,aAAY,gCAA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","file":"static/js/main.d73cb7e9.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n      <h1 className=\"HeaderContainer\">XG Tipping</h1>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nexport function Button(props) {\n  return (\n    <div id=\"Button\">\n      <button data-cy={props.text} variant=\"primary\" type=\"button\" onClick={props.onClickEvent} className={props.className} style={props.style}>\n        {props.text}\n      </button>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nexport var selectedOdds = \"Fractional odds\";\n\nexport class OddsRadio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOdds: this.props.value,\n    };\n  }\n\n  handleOptionChange = () => {\n    this.setState({\n      selectedOdds: this.props.value,\n    });\n    selectedOdds = this.state.selectedOdds;\n  };\n\n  render() {\n    return (\n      <section className=\"dark2\">\n        <div className={this.props.className}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"odds\"\n              checked={this.state.checked}\n              onChange={this.handleOptionChange}\n              data-cy={this.props.value}\n            />\n            <span className=\"design\"></span>\n            <span className=\"text\">{this.props.value}</span>\n          </label>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default OddsRadio;\n","import React from \"react\";\n\nexport function CreateBadge(props) {\n\n  if(props.image === \"-\"){\n    return (\n      <div className={props.ClassName} />\n    );\n  } else {\n    return (\n      <img\n        src={`https://cdn.footystats.org/img/${props.image}`}\n        className={props.ClassName}\n        alt={props.alt}\n        flex-shrink={props.flexShrink}\n      />\n    );\n  }\n}\n","import React, { Fragment } from \"react\";\n\nfunction Stats(props) {\n  let shouldOpen = props.clicked\n  function styleForm(formIndicator) {\n    let className;\n    if (formIndicator === \"W\") {\n      className = \"win\";\n    } else if (formIndicator === \"D\") {\n      className = \"draw\";\n    } else if (formIndicator === \"L\") {\n      className = \"loss\";\n    }\n    return className;\n  }\n\n  function styleBTTS(BTTSBoolean) {\n    let className;\n    if (BTTSBoolean === \"\\u2714\") {\n      className = \"BTTSTrue\";\n    } else if (BTTSBoolean === \"\\u2718\") {\n      className = \"BTTSFalse\";\n    }\n    return className;\n  }\n\n  if (props.formRun) {\n    return (\n      <Fragment>\n        <ul className={props.className} style={props.style}>\n          <li className=\"FormSummaryHome\">{props.FormTextString}</li>\n          <li className=\"FavouriteSummaryHome\">{props.FavouriteRecord}</li>\n          <li className=\"FormHeader\">\n            League results (most recent on right)\n          </li>\n          <li key={`last5League`} className=\"last5League\">\n          <span className={styleForm(props.Results[5])}>\n              {props.Results[5]}\n            </span>\n            <span className={styleForm(props.Results[4])}>\n              {props.Results[4]}\n            </span>\n            <span className={styleForm(props.Results[3])}>\n              {props.Results[3]}\n            </span>\n            <span className={styleForm(props.Results[2])}>\n              {props.Results[2]}\n            </span>\n            <span className={styleForm(props.Results[1])}>\n              {props.Results[1]}\n            </span>\n            <span className={styleForm(props.Results[0])}>\n              {props.Results[0]}\n            </span>\n          </li>\n          <li className=\"FormHeader\">\n            {props.homeOrAway} form (most recent on right)\n          </li>\n          <li key={`last5${props.homeOrAwayResults}`} className=\"FormHomeOrAway\">\n          <span className={styleForm(props.homeOrAwayResults[5])}>\n              {props.homeOrAwayResults[5]}\n            </span>\n            <span className={styleForm(props.homeOrAwayResults[4])}>\n              {props.homeOrAwayResults[4]}\n            </span>\n            <span className={styleForm(props.homeOrAwayResults[3])}>\n              {props.homeOrAwayResults[3]}\n            </span>\n            <span className={styleForm(props.homeOrAwayResults[2])}>\n              {props.homeOrAwayResults[2]}\n            </span>\n            <span className={styleForm(props.homeOrAwayResults[1])}>\n              {props.homeOrAwayResults[1]}\n            </span>\n            <span className={styleForm(props.homeOrAwayResults[0])}>\n              {props.homeOrAwayResults[0]}\n            </span>\n          </li>\n          <li\n            key=\"BTTSArrayHomeOrAway\"\n            className=\"BTTSArrayHomeOrAway\"\n            data-cy={props.name + \"BTTSArrayHomeOrAway\"}\n          >\n            <div className=\"BTTSResults\">BTTS</div>\n            <span className={styleBTTS(props.BTTSArray[5])}>{props.BTTSArray[5]}</span>\n            <span className={styleBTTS(props.BTTSArray[4])}>{props.BTTSArray[4]}</span>\n            <span className={styleBTTS(props.BTTSArray[3])}>{props.BTTSArray[3]}</span>\n            <span className={styleBTTS(props.BTTSArray[2])}>{props.BTTSArray[2]}</span>\n            <span className={styleBTTS(props.BTTSArray[1])}>{props.BTTSArray[1]}</span>\n            <span className={styleBTTS(props.BTTSArray[0])}>{props.BTTSArray[0]}</span>\n          </li>\n          <li\n            key=\"TeamScored\"\n            className=\"TeamScored\"\n            data-cy={props.name + \"teamScored\"}\n          >\n            {`Avg goals scored - ${props.goals}`}\n          </li>\n          <li\n            key=\"TeamConceeded\"\n            className=\"TeamConceeded\"\n            data-cy={props.name + \"teamConceded\"}\n          >\n            {`Avg goals conceeded - ${props.conceeded}`}\n          </li>\n          <li\n            key=\"TeamPossession\"\n            className=\"TeamPossession\"\n            data-cy={props.name + \"teamPossession\"}\n          >\n            {`Avg possession - ${props.possession}%`}\n          </li>\n          <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name + \"teamXG\"}>\n            {`Avg XG - ${props.XG}`}\n          </li>\n          <li\n            key=\"TeamXGConceded\"\n            className=\"TeamXGConceded\"\n            data-cy={props.name + \"teamXGConceded\"}\n          >\n            {`Avg XG conceded - ${props.XGConceded}`}\n          </li>\n          <li\n            key=\"goalDifference\"\n            className=\"goalDifference\"\n            data-cy={props.name + \"goalDifference\"}\n          >\n            {`Goal difference : `}\n            <span>{props.goalDifference}</span>\n          </li>\n          <li\n            key=\"goalDifferenceHorA\"\n            className=\"goalDifferenceHorA\"\n            data-cy={props.name + \"goalDifference\"}\n          >\n            {`Goal difference ${props.homeOrAway} : ${props.goalDifferenceHomeOrAway}`}\n          </li>\n          <li\n            key=\"AverageSOT\"\n            className=\"AverageSOT\"\n            data-cy={props.name + \"averageSOT\"}\n          >\n            {`Avg shots on target - ${props.sot}`}\n          </li>\n          <li\n            key=\"DangerousAttacks\"\n            className=\"DangerousAttacks\"\n            data-cy={props.name + \"dangerousAttacks\"}\n          >\n            {`Avg dangerous attacks - ${props.dangerousAttacks}`}\n          </li>\n          <li\n            key=\"LeaguePosition\"\n            className=\"LeaguePosition\"\n            data-cy={props.name + \"leaguePosition\"}\n          >\n            {`League position - ${props.leaguePosition}`}\n          </li>\n\n          <li\n            key=\"LeaguePositionHomeOrAway\"\n            className=\"LeaguePositionHomeOrAway\"\n            data-cy={props.name + \"LeaguePositionHomeOrAway\"}\n          >\n            {`Position (${props.homeOrAway} only) - ${props.homeOrAwayLeaguePosition}`}\n          </li>\n          <li\n            key=\"WinPercentage\"\n            className=\"WinPercentage\"\n            data-cy={props.name + \"WinPercentage\"}\n          >\n            {`${props.homeOrAway} wins - ${props.winPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"DrawPercentage\"\n            className=\"DrawPercentage\"\n            data-cy={props.name + \"DrawPercentage\"}\n          >\n            {`${props.homeOrAway} draws - ${props.drawPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"LossPercentage\"\n            className=\"LossPercentage\"\n            data-cy={props.name + \"LossPercentage\"}\n          >\n            {`${props.homeOrAway} losses - ${props.lossPercentage.toFixed(1)}%`}\n          </li>\n          <li key=\"PPG\" className=\"PPG\" data-cy={props.name + \"PPG\"}>\n            {`Season PPG - ${props.ppg}`}\n          </li>\n          <li\n            key=\"FormTrend10a\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 10 PPG: ${props.formTrend[0]}`}\n          </li>\n          <li\n            key=\"FormTrend10b\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 6 PPG: ${props.formTrend[1]}`}\n          </li>\n          <li\n            key=\"FormTrend10c\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 5 PPG: ${props.formTrend[2]}.`}\n          </li>\n          <li\n            key=\"CardsTotal\"\n            className=\"CardsTotal\"\n            data-cy={props.name + \"CardsTotal\"}\n          >\n            {`Cards total: ${props.CardsTotal}`}\n          </li>\n          <li\n            key=\"CornersAverage\"\n            className=\"CornersAverage\"\n            data-cy={props.name + \"CornersAverage\"}\n          >\n            {`Corners average: ${props.CornersAverage}`}\n          </li>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  } else {\n    return (\n      <Fragment>\n        <ul className={props.className} style={props.style}>\n          <li className=\"FormSummaryHome\">{props.FormTextString}</li>\n          <li className=\"FavouriteSummaryAway\">{props.FavouriteRecord}</li>\n          <li\n            key=\"TeamScored\"\n            className=\"TeamScored\"\n            data-cy={props.name + \"teamScored\"}\n          >\n            {`Avg goals scored - ${props.goals}`}\n          </li>\n          <li\n            key=\"TeamConceeded\"\n            className=\"TeamConceeded\"\n            data-cy={props.name + \"teamConceded\"}\n          >\n            {`Avg goals conceeded - ${props.conceeded}`}\n          </li>\n          <li\n            key=\"TeamPossession\"\n            className=\"TeamPossession\"\n            data-cy={props.name + \"teamPossession\"}\n          >\n            {`Avg possession - ${props.possession}%`}\n          </li>\n          <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name + \"teamXG\"}>\n            {`Avg XG - ${props.XG}`}\n          </li>\n          <li\n            key=\"TeamXGConceded\"\n            className=\"TeamXGConceded\"\n            data-cy={props.name + \"teamXGConceded\"}\n          >\n            {`Avg XG conceded - ${props.XGConceded}`}\n          </li>\n          <li\n            key=\"AverageSOT\"\n            className=\"AverageSOT\"\n            data-cy={props.name + \"averageSOT\"}\n          >\n            {`Avg shots on target - ${props.sot}`}\n          </li>\n          <li\n            key=\"DangerousAttacks\"\n            className=\"DangerousAttacks\"\n            data-cy={props.name + \"dangerousAttacks\"}\n          >\n            {`Avg dangerous attacks - ${props.dangerousAttacks}`}\n          </li>\n          <li\n            key=\"LeaguePosition\"\n            className=\"LeaguePosition\"\n            data-cy={props.name + \"leaguePosition\"}\n          >\n            {`League position - ${props.leaguePosition}`}\n          </li>\n\n          <li\n            key=\"LeaguePositionHomeOrAway\"\n            className=\"LeaguePositionHomeOrAway\"\n            data-cy={props.name + \"LeaguePositionHomeOrAway\"}\n          >\n            {`Position (${props.homeOrAway} only) - ${props.homeOrAwayLeaguePosition}`}\n          </li>\n          <li\n            key=\"WinPercentage\"\n            className=\"WinPercentage\"\n            data-cy={props.name + \"WinPercentage\"}\n          >\n            {`${props.homeOrAway} wins - ${props.winPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"DrawPercentage\"\n            className=\"DrawPercentage\"\n            data-cy={props.name + \"DrawPercentage\"}\n          >\n            {`${props.homeOrAway} draws - ${props.drawPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"LossPercentage\"\n            className=\"LossPercentage\"\n            data-cy={props.name + \"LossPercentage\"}\n          >\n            {`${props.homeOrAway} losses - ${props.lossPercentage.toFixed(1)}%`}\n          </li>\n          <li key=\"PPG\" className=\"PPG\" data-cy={props.name + \"PPG\"}>\n            {`Season PPG - ${props.ppg}`}\n          </li>\n          <li\n            key=\"FormTrend10a\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 10 PPG: ${props.formTrend[0]}`}\n          </li>\n          <li\n            key=\"FormTrend10b\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 6 PPG: ${props.formTrend[1]}`}\n          </li>\n          <li\n            key=\"FormTrend10c\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 5 PPG: ${props.formTrend[2]}.`}\n          </li>\n          <li\n            key=\"CardsTotal\"\n            className=\"CardsTotal\"\n            data-cy={props.name + \"CardsTotal\"}\n          >\n            {`Cards total: ${props.CardsTotal}`}\n          </li>\n          <li\n            key=\"CornersAverage\"\n            className=\"CornersAverage\"\n            data-cy={props.name + \"CornersAverage\"}\n          >\n            {`Corners average: ${props.CornersAverage}`}\n          </li>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Stats;\n","import React from \"react\";\n\nfunction Div(props) {\n  return (\n    <div id={props.id} onClick={props.onClick} style={props.style} className={props.className}>{props.text}</div>\n  );\n}\n\nexport default Div;\n","export async function getForm(match) {\n  const teams = [match.homeId, match.awayId];\n  const fixtureForm = [];\n\n  for (let i = 0; i < teams.length; i++) {\n    const team = teams[i];\n\n    let response = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}formTeam/${team}`\n    );\n    await response.json().then((formData) => {\n      formData.lastMatchTimestamp = formData.last_updated_match_timestamp\n      fixtureForm[i] = formData;\n    });\n  }\n  return fixtureForm;\n}\n","import React, { useState, useEffect } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport { selectedOdds } from \"../components/OddsRadio\";\nimport oddslib from \"oddslib\";\nexport let rangeValue = [1, 10];\n\nexport const Slide = (props) => {\n  const [range, setRange] = useState([1.1, 10]);\n  const [fractionalValue, setFractionalValue] = useState([\"1/9\", \"10/1\"]);\n\n  useEffect(() => {\n    if (selectedOdds === \"Fractional odds\") {\n      let roundedValueOne = (Math.round(range[0] * 5) / 5).toFixed(1);\n      let roundedValueTwo = (Math.round(range[1] * 5) / 5).toFixed(1);\n\n      try {\n        const fractionalOne = oddslib\n          .from(\"decimal\", roundedValueOne)\n          .to(\"fractional\", { precision: 1 });\n        const fractionalTwo = oddslib\n          .from(\"decimal\", roundedValueTwo)\n          .to(\"fractional\", { precision: 1 });\n          console.log(fractionalOne);\n          console.log(fractionalTwo);\n        setFractionalValue([fractionalOne, fractionalTwo]);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [range]);\n\n  const handleChange = (event, newValue) => {\n    setRange(newValue);\n    console.log(newValue);\n    rangeValue = newValue;\n  };\n\n  return (\n    <Slider\n      aria-label=\"Always visible\"\n      value={range}\n      sx={{\n        width: \"90%\",\n        color: \"#030061\",\n      }}\n      onChange={handleChange}\n      valueLabelDisplay=\"auto\"\n      step={0.1}\n      min={1.1}\n      max={10}\n      valueLabelFormat={(value, index) =>\n        selectedOdds === \"Fractional odds\" ? fractionalValue[index] : value\n      }\n    />\n  );\n};\n","import React from \"react\";\nimport Collapsible from \"react-collapsible\";\n\nconst Collapsable = (props) => {\n  return (\n    <Collapsible transitionTime={300} trigger={<button className={props.classNameButton}>{props.buttonText}</button>} className={props.className? props.className: \"Collapsable\"}>\n      <div className={props.classNameFlex? props.classNameFlex: \"\"}>\n      <span className={props.classNameTwo? props.classNameTwo: props.buttonText} style={props.style} key={`123${props.buttonText}`}>{props.element}</span>\n      <span className={props.classNameThree? props.classNameTwo: props.buttonText} key={`456${props.buttonText}`}>{props.elementTwo}</span>\n      </div>\n    </Collapsible>\n  );\n};\n\n\nexport default Collapsable;","import React, { Component, Fragment } from \"react\";\nimport { getNewTips } from \"../logic/getScorePredictions\"\nimport {allTips} from \"../logic/getScorePredictions\"\nexport var incrementValue = 3;\n\nexport var riskLevel = 10;\n\nclass Increment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      incrementValue,\n      riskLevel,\n      show: true,\n    };\n  }\n\n  IncrementItem = () => {\n    if(incrementValue > 1){\n    this.setState({ incrementValue: this.state.incrementValue - 1 });\n    this.setState({ riskLevel: this.state.riskLevel - 1 });\n    incrementValue = (this.state.incrementValue - 1);\n    riskLevel = this.state.riskLevel - 1;\n    }\n    getNewTips(allTips)\n  };\n  DecreaseItem = () => {\n    if(incrementValue > 0){\n      this.setState({ incrementValue: this.state.incrementValue + 1 });\n      this.setState({ riskLevel: this.state.riskLevel + 1 });\n      incrementValue = (this.state.incrementValue + 1);\n      riskLevel = this.state.riskLevel + 1;\n    }\n    getNewTips(allTips)\n  };\n\n  render() {\n    return (\n      <Fragment>\n          <button className=\"IncrementButton\" onClick={this.IncrementItem}>\n            -\n          </button>\n          <button className=\"DecrementButton\" onClick={this.DecreaseItem}>\n            +\n          </button>\n      </Fragment>\n\n    );\n  }\n}\n\nexport default Increment;\n","export async function getBTTSPotential(\n  match,\n  homeGoals,\n  awayGoals,\n  unroundedHomeGoals,\n  unroundedAwayGoals\n) {\n  const homeBTTS = match.bttsAllPercentageHome;\n  const homeOnlyBTTS = match.bttsPercentageHomeHome;\n  const awayOnlyBTTS = match.bttsPercentageAwayAway;\n  const awayBTTS = match.bttsAllPercentageAway;\n  const homeG = homeGoals;\n  const awayG = awayGoals;\n\n  match.combinedBTTS = (homeBTTS + awayBTTS) / 2;\n\n  if (\n    match.bttsFraction !== \"N/A\" &&\n    match.status !== \"suspended\" &&\n    match.status !== \"canceled\"\n  ) {\n    if (\n      homeBTTS > 55 &&\n      awayBTTS > 55 &&\n      homeOnlyBTTS > 55 &&\n      awayOnlyBTTS > 55 &&\n      match.awayOdds < 4 &&\n      match.awayOdds > 1.3 &&\n      homeG >= 1 &&\n      awayG >= 1 \n    ) {\n      match.btts = true;\n      match.bttsChosen = true;\n      match.totalGoals = match.rawFinalHomeGoals + match.rawFinalAwayGoals;\n    } else {\n      match.btts = false;\n      match.bttsChosen = false;\n    }\n  }\n  return match;\n}\n","import SwiperCore, { EffectCoverflow, Pagination } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/swiper-bundle.min.css\";\nimport \"swiper/swiper.min.css\";\n\nSwiperCore.use([EffectCoverflow, Pagination]);\n\nexport const Slider = (props) => {\n  return (\n    <Swiper\n      effect={\"coverflow\"}\n      autoHeight={true}\n      grabCursor={true}\n      centeredSlides={true}\n      slidesPerView={1}\n      coverflowEffect={{\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: false,\n      }}\n      pagination={{ clickable: true }}\n      className=\"mySwiper\"\n    >\n      <SwiperSlide>\n       {props.element}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element2}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element3}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element4}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element5}\n      </SwiperSlide>\n    </Swiper>\n  );\n};\n","import KofiButton from \"kofi-button\"\n\nexport const StyledKofiButton = (props) => {\n  return (\n    <KofiButton className=\"kofi-button\" color=\"#030061\" title={props.buttonText} kofiID=\"H2H0AX25Z\" />\n  )\n}","import React, { useState } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nexport let minimumXG = 0;\nexport let minimumGD = 0;\nexport let minimumGDHorA = 0;\nexport let minimumLast10 = 0;\n\nfunction SlideDiff(props) {\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n\n    switch (true) {\n      case props.useCase === \"xg\":\n        minimumXG = newValue;\n        break;\n      case props.useCase === \"gd\":\n        minimumGD = newValue;\n        break;\n      case props.useCase === \"gdHorA\":\n        minimumGDHorA = newValue;\n        break;\n      case props.useCase === \"last10\":\n        minimumLast10 = newValue;\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Slider\n      aria-label=\"Always visible\"\n      value={value}\n      sx={{\n        width: \"90%\",\n        color: \"#030061\",\n      }}\n      onChange={handleChange}\n      step={1}\n      marks={props.marks}\n      valueLabelDisplay=\"auto\"\n      min={parseFloat(props.lower)}\n      max={parseFloat(props.upper)}\n    />\n  );\n}\n\nexport default SlideDiff;\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { matches, diff } from \"./getFixtures\";\nimport { RenderAllFixtures } from \"../logic/getFixtures\";\nimport Div from \"../components/Div\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { allForm } from \"../logic/getFixtures\";\nimport Increment from \"../components/Increment\";\nimport { incrementValue } from \"../components/Increment\";\nimport { getBTTSPotential } from \"../logic/getBTTSPotential\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport { Slider } from \"../components/Carousel\";\nimport { StyledKofiButton } from \"../components/KofiButton\";\nimport {\n  calculateAttackingStrength,\n  calculateDefensiveStrength,\n  calculateMetricStrength,\n  getXGtoActualDifferentialStrength,\n} from \"./getStats\";\nimport { rangeValue } from \"../components/Slider\";\nimport {\n  minimumGD,\n  minimumXG,\n  minimumLast10,\n  minimumGDHorA,\n} from \"../components/SliderDiff\";\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nlet finalHomeGoals;\nlet finalAwayGoals;\nlet rawFinalHomeGoals;\nlet rawFinalAwayGoals;\nlet homeOdds;\nlet awayOdds;\nlet totalGoals = 0;\nlet totalGoals2 = 0;\nlet numberOfGames = 0;\nlet drawPredictions = 0;\nlet homePredictions = 0;\nlet awayPredictions = 0;\nlet allOutcomes = 0;\nlet homeOutcomes = 0;\nlet awayOutcomes = 0;\nlet winAmount = 0;\nlet lossAmount = 0;\nlet sumStatDAWin = 0;\nlet sumStatDALoss = 0;\nlet sumStatPossessionWin = 0;\nlet sumStatPossessionLoss = 0;\nlet sumStatSOTWin = 0;\nlet sumStatSOTLoss = 0;\nlet sumStatPPGLast10Win = 0;\nlet sumStatPPGLast10Loss = 0;\nlet sumOddsWin = 0;\nlet sumOddsLoss = 0;\nlet sumXGForWin = 0;\nlet sumXGForLoss = 0;\nlet sumXGAgainstWin = 0;\nlet sumXGAgainstLoss = 0;\nlet allWinOutcomes = 0;\nlet allLossOutcomes = 0;\nlet allDrawOutcomes = 0;\nlet totalROI = 0;\nlet totalInvestment = 0;\nlet totalProfit = 0;\nexport let formObjectHome;\nexport let formObjectAway;\nexport let clicked = false;\n\nexport var renderPredictions;\n\nasync function convertTimestamp(timestamp) {\n  let newDate = new Date(timestamp * 1000);\n  let [day, month, year] = newDate.toLocaleDateString(\"en-US\").split(\"/\");\n\n  let converted = `${year}-${day}-${month}`;\n\n  return converted;\n}\n\nexport function getPointsFromLastX(lastX) {\n  let points = 0;\n  let pointsAddition;\n\n  try {\n    lastX.forEach((game) => {\n      switch (true) {\n        case game === \"W\":\n          pointsAddition = 3;\n          break;\n        case game === \"D\":\n          pointsAddition = 1;\n          break;\n        case game === \"L\":\n          pointsAddition = 0;\n          break;\n        default:\n          break;\n      }\n\n      points = points + pointsAddition;\n    });\n    return points;\n  } catch (error) {\n    console.log(error);\n    return \"N/A\";\n  }\n}\n\nasync function getPastLeagueResults(team, game, hOrA, form) {\n  let date = game.date;\n  if (allLeagueResultsArrayOfObjects[game.leagueIndex].fixtures.length > 35) {\n    let teamsHomeResults = allLeagueResultsArrayOfObjects[\n      game.leagueIndex\n    ].fixtures.filter((fixture) => fixture.home_name === team);\n\n    teamsHomeResults = teamsHomeResults\n      .filter(function (item) {\n        return item.date_unix < date;\n      })\n      .sort((a, b) => a.date_unix - b.date_unix);\n\n    let teamsAwayResults = allLeagueResultsArrayOfObjects[\n      game.leagueIndex\n    ].fixtures.filter((fixture) => fixture.away_name === team);\n\n    teamsAwayResults = teamsAwayResults\n      .filter(function (item) {\n        return item.date_unix < date;\n      })\n      .sort((a, b) => a.date_unix - b.date_unix);\n\n    let homeResults = [];\n    let awayResults = [];\n    let oddsSumHome = 0;\n    let oddsSumAway = 0;\n    let favouriteCount = 0;\n    let underdogCount = 0;\n    let winningFavouriteCount = 0;\n    let drawingFavouriteCount = 0;\n    let beatenFavouriteCount = 0;\n    let winningUnderdogCount = 0;\n    let drawingUnderdogCount = 0;\n    let beatenUnderdogCount = 0;\n    for (let index = 0; index < teamsHomeResults.length; index++) {\n      const resultedGame = teamsHomeResults[index];\n\n      homeResults.push({\n        homeTeam: resultedGame.home_name,\n        homeGoals: resultedGame.homeGoalCount,\n        XG: resultedGame.team_a_xg,\n        awayTeam: resultedGame.away_name,\n        awayGoals: resultedGame.awayGoalCount,\n        XGAgainst: resultedGame.team_b_xg,\n        possession: resultedGame.team_a_possession,\n        scored: resultedGame.homeGoalCount,\n        conceeded: resultedGame.awayGoalCount,\n        shots: resultedGame.team_a_shots,\n        sot: resultedGame.team_a_shotsOnTarget,\n        sotAgainst: resultedGame.team_b_shotsOnTarget,\n        dangerousAttacks: resultedGame.team_a_dangerous_attacks,\n        corners: resultedGame.team_a_corners,\n        date: await convertTimestamp(resultedGame.date_unix),\n        dateRaw: resultedGame.date_unix,\n        oddsHome: resultedGame.odds_ft_1,\n        oddsAway: resultedGame.odds_ft_2,\n        btts:\n          resultedGame.homeGoalCount > 0 && resultedGame.awayGoalCount > 0\n            ? true\n            : false,\n        result:\n          resultedGame.homeGoalCount > resultedGame.awayGoalCount\n            ? \"W\"\n            : resultedGame.homeGoalCount < resultedGame.awayGoalCount\n            ? \"L\"\n            : \"D\",\n      });\n      oddsSumHome = oddsSumHome + resultedGame.odds_ft_1;\n      favouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2\n          ? favouriteCount + 1\n          : favouriteCount + 0;\n      winningFavouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? winningFavouriteCount + 1\n          : winningFavouriteCount + 0;\n      drawingFavouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingFavouriteCount + 1\n          : drawingFavouriteCount + 0;\n      beatenFavouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? beatenFavouriteCount + 1\n          : beatenFavouriteCount + 0;\n\n      underdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2\n          ? underdogCount + 1\n          : underdogCount + 0;\n      winningUnderdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? winningUnderdogCount + 1\n          : winningUnderdogCount + 0;\n      drawingUnderdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingUnderdogCount + 1\n          : drawingUnderdogCount + 0;\n      beatenUnderdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? beatenUnderdogCount + 1\n          : beatenUnderdogCount + 0;\n    }\n    for (let index = 0; index < teamsAwayResults.length; index++) {\n      const resultedGame = teamsAwayResults[index];\n      awayResults.push({\n        homeTeam: resultedGame.home_name,\n        homeGoals: resultedGame.homeGoalCount,\n        XG: resultedGame.team_b_xg,\n        awayTeam: resultedGame.away_name,\n        awayGoals: resultedGame.awayGoalCount,\n        XGAgainst: resultedGame.team_a_xg,\n        possession: resultedGame.team_b_possession,\n        scored: resultedGame.awayGoalCount,\n        conceeded: resultedGame.homeGoalCount,\n        shots: resultedGame.team_b_shots,\n        sot: resultedGame.team_b_shotsOnTarget,\n        sotAgainst: resultedGame.team_a_shotsOnTarget,\n        dangerousAttacks: resultedGame.team_b_dangerous_attacks,\n        corners: resultedGame.team_b_corners,\n        date: await convertTimestamp(resultedGame.date_unix),\n        dateRaw: resultedGame.date_unix,\n        oddsHome: resultedGame.odds_ft_1,\n        oddsAway: resultedGame.odds_ft_2,\n        btts:\n          resultedGame.homeGoalCount > 0 && resultedGame.awayGoalCount > 0\n            ? true\n            : false,\n        result:\n          resultedGame.homeGoalCount > resultedGame.awayGoalCount\n            ? \"L\"\n            : resultedGame.homeGoalCount < resultedGame.awayGoalCount\n            ? \"W\"\n            : \"D\",\n      });\n      oddsSumAway = oddsSumAway + resultedGame.odds_ft_2;\n      favouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2\n          ? favouriteCount + 1\n          : favouriteCount + 0;\n      winningFavouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? winningFavouriteCount + 1\n          : winningFavouriteCount + 0;\n      drawingFavouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingFavouriteCount + 1\n          : drawingFavouriteCount + 0;\n      beatenFavouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? beatenFavouriteCount + 1\n          : beatenFavouriteCount + 0;\n\n      underdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2\n          ? underdogCount + 1\n          : underdogCount + 0;\n      winningUnderdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? winningUnderdogCount + 1\n          : winningUnderdogCount + 0;\n      drawingUnderdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingUnderdogCount + 1\n          : drawingUnderdogCount + 0;\n      beatenUnderdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? beatenUnderdogCount + 1\n          : beatenUnderdogCount + 0;\n    }\n\n    let reversedResultsHome = homeResults;\n    let reversedResultsAway = awayResults;\n\n    const allTeamResults = reversedResultsHome\n      .concat(reversedResultsAway)\n      .sort((a, b) => a.dateRaw - b.dateRaw);\n\n    form.allTeamResults = allTeamResults.sort((b, a) => a.dateRaw - b.dateRaw);\n\n    const averageOddsHome = oddsSumHome / teamsHomeResults.length;\n    const averageOddsAway = oddsSumAway / teamsAwayResults.length;\n    form.favouriteCount = favouriteCount;\n    form.winningFavouriteCount = winningFavouriteCount;\n    form.drawingFavouriteCount = drawingFavouriteCount;\n    form.beatenFavouriteCount = beatenFavouriteCount;\n\n    form.underdogCount = underdogCount;\n    form.winningUnderdogCount = winningUnderdogCount;\n    form.drawingUnderdogCount = drawingUnderdogCount;\n    form.beatenUnderdogCount = beatenUnderdogCount;\n\n    form.oddsReliabilityWin =\n      favouriteCount > 0\n        ? (form.winningFavouriteCount / form.favouriteCount) * 100\n        : 0;\n    form.oddsReliabilityDraw =\n      favouriteCount > 0\n        ? (form.drawingFavouriteCount / form.favouriteCount) * 100\n        : 0;\n    form.oddsReliabilityLose =\n      favouriteCount > 0\n        ? (form.beatenFavouriteCount / form.favouriteCount) * 100\n        : 0;\n\n    form.oddsReliabilityWinAsUnderdog =\n      underdogCount > 0\n        ? (form.winningUnderdogCount / form.underdogCount) * 100\n        : 0;\n    form.oddsReliabilityDrawAsUnderdog =\n      underdogCount > 0\n        ? (form.drawingUnderdogCount / form.underdogCount) * 100\n        : 0;\n    form.oddsReliabilityLoseAsUnderdog =\n      underdogCount > 0\n        ? (form.beatenUnderdogCount / form.underdogCount) * 100\n        : 0;\n\n    form.reliableIndicator =\n      form.winningFavouriteCount + form.beatenUnderdogCount;\n    form.unreliableIndicator =\n      form.beatenFavouriteCount +\n      form.drawingFavouriteCount +\n      form.winningUnderdogCount +\n      form.drawingUnderdogCount;\n\n    form.predictabilityScore =\n      form.reliableIndicator / form.unreliableIndicator;\n\n    let reliabilityString;\n\n    switch (true) {\n      case form.predictabilityScore < 0.3:\n        reliabilityString =\n          \"Odds have been an extremely unreliable indicator of actual performance so far this season. Maybe best avoided?\";\n        break;\n      case form.predictabilityScore >= 0.3 && form.predictabilityScore < 0.8:\n        reliabilityString =\n          \"Odds have been an unreliable indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 0.8 && form.predictabilityScore < 1.2:\n        reliabilityString =\n          \"Odds have been a decent indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 1.2 && form.predictabilityScore < 1.7:\n        reliabilityString =\n          \"Odds have been a good indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 1.7 && form.predictabilityScore < 2.2:\n        reliabilityString =\n          \"Odds have been a very good indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 2.2:\n        reliabilityString =\n          \"Odds have been an excellent indicator of actual performance so far this season. One for the multi?\";\n        break;\n      default:\n        break;\n    }\n\n    form.reliabilityString = reliabilityString;\n\n    const teamGoalsHome = reversedResultsHome.map((res) => res.scored);\n\n    const teamGoalsAway = reversedResultsAway.map((res) => res.scored);\n    const teamGoalsAll = allTeamResults.map((res) => res.scored);\n\n    const teamConceededHome = reversedResultsHome.map((res) => res.conceeded);\n    const teamConceededAway = reversedResultsAway.map((res) => res.conceeded);\n    const teamConceededAll = allTeamResults.map((res) => res.conceeded);\n\n    const teamXGForAll = allTeamResults.map((res) => res.XG);\n    const teamXGAgainstAll = allTeamResults.map((res) => res.XGAgainst);\n\n    const teamXGForHome = reversedResultsHome.map((res) => res.XG);\n    const teamXGAgainstHome = reversedResultsHome.map((res) => res.XGAgainst);\n    const teamXGForAway = reversedResultsAway.map((res) => res.XG);\n    const teamXGAgainstAway = reversedResultsAway.map((res) => res.XGAgainst);\n\n    const XGSum = teamXGForAll.reduce((a, b) => a + b, 0);\n    const avgXGScored = XGSum / teamXGForAll.length || 0;\n    const XGAgainstSum = teamXGAgainstAll.reduce((a, b) => a + b, 0);\n    const avgXGConceeded = XGAgainstSum / teamXGAgainstAll.length || 0;\n\n    const possession = allTeamResults.map((res) => res.possession);\n    const possessionSum = possession.reduce((a, b) => a + b, 0);\n    const avgPossession = possessionSum / possession.length || 0;\n\n    const possessionHome = reversedResultsHome.map((res) => res.possession);\n    const possessionSumHome = possessionHome.reduce((a, b) => a + b, 0);\n    form.avgPossessionHome = possessionSumHome / possessionHome.length || 0;\n\n    const possessionAway = reversedResultsAway.map((res) => res.possession);\n    const possessionSumAway = possessionAway.reduce((a, b) => a + b, 0);\n    form.avgPossessionAway = possessionSumAway / possessionAway.length || 0;\n\n    const dangerousAttacks = allTeamResults.map((res) => res.dangerousAttacks);\n    const dangerousAttacksSum = dangerousAttacks.reduce((a, b) => a + b, 0);\n    const avgDangerousAttacks =\n      dangerousAttacksSum / dangerousAttacks.length || 0;\n\n    const dangerousAttacksHome = reversedResultsHome.map(\n      (res) => res.dangerousAttacks\n    );\n    const dangerousAttacksSumHome = dangerousAttacksHome.reduce(\n      (a, b) => a + b,\n      0\n    );\n    form.avgDangerousAttacksHome =\n      dangerousAttacksSumHome / dangerousAttacksHome.length || 0;\n\n    const dangerousAttacksAway = reversedResultsAway.map(\n      (res) => res.dangerousAttacks\n    );\n    const dangerousAttacksSumAway = dangerousAttacksAway.reduce(\n      (a, b) => a + b,\n      0\n    );\n    form.avgDangerousAttacksAway =\n      dangerousAttacksSumAway / dangerousAttacksAway.length || 0;\n\n    const shots = allTeamResults.map((res) => res.shots);\n    const shotsSum = shots.reduce((a, b) => a + b, 0);\n    const avgShots = shotsSum / shots.length || 0;\n    form.avgShots = avgShots;\n\n    const shotsHome = reversedResultsHome.map((res) => res.shots);\n    const shotsSumHome = shotsHome.reduce((a, b) => a + b, 0);\n    form.avgShotsHome = shotsSumHome / shotsHome.length || 0;\n\n    const shotsAway = reversedResultsAway.map((res) => res.shots);\n    const shotsSumAway = shotsAway.reduce((a, b) => a + b, 0);\n    form.avgShotsAway = shotsSumAway / shotsAway.length || 0;\n\n    const shotsOnTarget = allTeamResults.map((res) => res.sot);\n    const shotsOnTargetSum = shotsOnTarget.reduce((a, b) => a + b, 0);\n    const avgShotsOnTarget = shotsOnTargetSum / shotsOnTarget.length || 0;\n\n    const shotsOnTargetHome = reversedResultsHome.map((res) => res.sot);\n    const shotsOnTargetSumHome = shotsOnTargetHome.reduce((a, b) => a + b, 0);\n    form.avgShotsOnTargetHome =\n      shotsOnTargetSumHome / shotsOnTargetHome.length || 0;\n\n    const shotsOnTargetAway = reversedResultsAway.map((res) => res.sot);\n    const shotsOnTargetSumAway = shotsOnTargetAway.reduce((a, b) => a + b, 0);\n    form.avgShotsOnTargetAway =\n      shotsOnTargetSumAway / shotsOnTargetAway.length || 0;\n\n    const shotsOnTargetAgainst = allTeamResults.map((res) => res.sotAgainst);\n    const shotsOnTargetSumAgainst = shotsOnTargetAgainst.reduce(\n      (a, b) => a + b,\n      0\n    );\n    const avgShotsOnTargetAgainst =\n      shotsOnTargetSumAgainst / shotsOnTargetAgainst.length || 0;\n\n    const shotsOnTargetAgainstHome = reversedResultsHome.map(\n      (res) => res.sotAgainst\n    );\n    const shotsOnTargetSumAgainstHome = shotsOnTargetAgainstHome.reduce(\n      (a, b) => a + b,\n      0\n    );\n    form.avgShotsOnTargetAgainstHome =\n      shotsOnTargetSumAgainstHome / shotsOnTargetAgainstHome.length || 0;\n\n    const shotsOnTargetAgainstAway = reversedResultsAway.map(\n      (res) => res.sotAgainst\n    );\n    const shotsOnTargetSumAgainstAway = shotsOnTargetAgainstAway.reduce(\n      (a, b) => a + b,\n      0\n    );\n    form.avgShotsOnTargetAgainstAway =\n      shotsOnTargetSumAgainstAway / shotsOnTargetAgainstAway.length || 0;\n\n    const corners = allTeamResults.map((res) => res.corners);\n    const cornersSum = corners.reduce((a, b) => a + b, 0);\n    const cornersAv = cornersSum / corners.length || 0;\n\n    const cornersHome = reversedResultsHome.map((res) => res.corners);\n    const cornersSumHome = cornersHome.reduce((a, b) => a + b, 0);\n    form.cornersAvHome = cornersSumHome / cornersHome.length || 0;\n\n    const cornersAway = reversedResultsAway.map((res) => res.corners);\n    const cornersSumAway = cornersAway.reduce((a, b) => a + b, 0);\n    form.cornersAvAway = cornersSumAway / cornersAway.length || 0;\n\n    const last5XG = teamXGForAll.slice(0, 5);\n    const last5XGSum = last5XG.reduce((a, b) => a + b, 0);\n    const last5XGAvgFor = last5XGSum / last5XG.length || 0;\n\n    const last5XGHome = teamXGForHome.slice(0, 5);\n    const last5XGSumHome = last5XGHome.reduce((a, b) => a + b, 0);\n    form.last5XGAvgForHome = last5XGSumHome / last5XGHome.length || 0;\n\n    const last5XGAway = teamXGForAway.slice(0, 5);\n    const last5XGSumAway = last5XGAway.reduce((a, b) => a + b, 0);\n    form.last5XGAvgForAway = last5XGSumAway / last5XGAway.length || 0;\n\n    const XGSumHome = teamXGForHome.reduce((a, b) => a + b, 0);\n    form.avgXGScoredHome = XGSumHome / teamXGForHome.length || 0;\n\n    const XGSumAway = teamXGForAway.reduce((a, b) => a + b, 0);\n    form.avgXGScoredAway = XGSumAway / teamXGForAway.length || 0;\n\n    const XGAgainstSumHome = teamXGAgainstHome.reduce((a, b) => a + b, 0);\n    form.avgXGConceededHome = XGAgainstSumHome / teamXGAgainstHome.length || 0;\n\n    const XGAgainstSumAway = teamXGAgainstAway.reduce((a, b) => a + b, 0);\n    form.avgXGConceededAway = XGAgainstSumAway / teamXGAgainstAway.length || 0;\n\n    const last5XGAgainst = teamXGAgainstAll.slice(0, 5);\n    const last5XGAgainstSum = last5XGAgainst.reduce((a, b) => a + b, 0);\n    const last5XGAvgAgainst = last5XGAgainstSum / last5XGAgainst.length || 0;\n\n    const last5XGAgainstHome = teamXGForHome.slice(0, 5);\n    const last5XGAgainstSumHome = last5XGAgainstHome.reduce((a, b) => a + b, 0);\n    form.last5XGAvgAgainstHome =\n      last5XGAgainstSumHome / last5XGAgainstHome.length || 0;\n\n    const last5XGAgainstAway = teamXGForAway.slice(0, 5);\n    const last5XGAgainstSumAway = last5XGAgainstAway.reduce((a, b) => a + b, 0);\n    form.last5XGAvgAgainstAway =\n      last5XGAgainstSumAway / last5XGAgainstAway.length || 0;\n\n    form.XGDiffNonAverage = XGSum - XGAgainstSum;\n    form.XGDiffNonAverageLast5 = last5XGSum - last5XGAgainstSum;\n\n    form.XGOverall = parseFloat(avgXGScored.toFixed(2));\n    form.XGlast5 = parseFloat(last5XGAvgFor.toFixed(2));\n\n    form.XGAgainstAvgOverall = parseFloat(avgXGConceeded.toFixed(2));\n    form.XGAgainstlast5 = parseFloat(last5XGAvgAgainst.toFixed(2));\n\n    form.AveragePossessionOverall = parseFloat(avgPossession.toFixed(1));\n    form.AverageDangerousAttacksOverall = parseFloat(\n      avgDangerousAttacks.toFixed(1)\n    );\n    form[\"Average Shots\"] = parseFloat(avgShots.toFixed(1));\n    form.AverageCorners = parseFloat(cornersAv.toFixed(1));\n    form.AverageShotsOnTargetOverall = parseFloat(avgShotsOnTarget.toFixed(1));\n    form.AverageShotsOnTargetAgainstOverall = parseFloat(\n      avgShotsOnTargetAgainst.toFixed(1)\n    );\n    const alpha = 0.65;\n    const beta = 0.65;\n\n    let forAndAgainstRollingAv;\n    let forAndAgainstRollingAvHomeOrAway;\n    if (hOrA === \"home\") {\n      form.allGoalsArrayHome = teamGoalsAll;\n      form.allConceededArrayHome = teamConceededAll;\n      const sum = teamGoalsHome.reduce((a, b) => a + b, 0);\n      const sumTwo = teamConceededHome.reduce((a, b) => a + b, 0);\n      form.goalDifferenceHomeOrAway = sum - sumTwo;\n\n      forAndAgainstRollingAv = await predictGoalsWithExponentialSmoothing(\n        teamGoalsAll.reverse(),\n        teamConceededAll.reverse(),\n        alpha\n      );\n      forAndAgainstRollingAvHomeOrAway =\n        await predictGoalsWithExponentialSmoothing(\n          teamGoalsHome,\n          teamConceededHome,\n          beta\n        );\n    } else if (hOrA === \"away\") {\n      form.allGoalsArrayAway = teamGoalsAll;\n      form.allConceededArrayAway = teamConceededAll;\n      const sum = teamGoalsAway.reduce((a, b) => a + b, 0);\n      const sumTwo = teamConceededAway.reduce((a, b) => a + b, 0);\n      form.goalDifferenceHomeOrAway = sum - sumTwo;\n      forAndAgainstRollingAv = await predictGoalsWithExponentialSmoothing(\n        teamGoalsAll.reverse(),\n        teamConceededAll.reverse(),\n        alpha\n      );\n      forAndAgainstRollingAvHomeOrAway =\n        await predictGoalsWithExponentialSmoothing(\n          teamGoalsAway,\n          teamConceededAway,\n          beta\n        );\n    }\n\n    let bttsHome = reversedResultsHome.map((res) => res.btts);\n    if (bttsHome.length > 10) {\n      bttsHome = bttsHome.slice(-10);\n    }\n\n    let bttsAway = reversedResultsAway.map((res) => res.btts);\n    if (bttsAway.length > 10) {\n      bttsAway = bttsAway.slice(-10);\n    }\n\n    let bttsAll = allTeamResults.map((res) => res.btts);\n    if (bttsAll.length > 10) {\n      bttsAll = bttsAll.slice(-10);\n    }\n\n    const bttsHomeCount = bttsHome.filter((btts) => btts === true);\n    const bttsHomeString = `${bttsHomeCount.length}/${bttsHome.length}`;\n    const bttsHomePercentage = (\n      (bttsHomeCount.length / bttsHome.length) *\n      100\n    ).toFixed(0);\n    const bttsAwayCount = bttsAway.filter((btts) => btts === true);\n    const bttsAwayString = `${bttsAwayCount.length}/${bttsAway.length}`;\n    const bttsAwayPercentage = (\n      (bttsAwayCount.length / bttsAway.length) *\n      100\n    ).toFixed(0);\n    const bttsAllCount = bttsAll.filter((btts) => btts === true);\n    const bttsAllString = `${bttsAllCount.length}/${bttsAll.length}`;\n    const bttsAllPercentage = (\n      (bttsAllCount.length / bttsAll.length) *\n      100\n    ).toFixed(0);\n\n    let r = 10;\n    let x = 10;\n\n    const teamGoalsHomeRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsHome,\n      teamGoalsHome.length < x ? teamGoalsHome.length : x\n    );\n\n    const teamGoalsAwayRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsAway,\n      teamGoalsAway.length < x ? teamGoalsAway.length : x\n    );\n\n    const RoundedXGFor = teamXGForAll.map((xg) => xg);\n    const RoundedXGAgainst = teamXGAgainstAll.map((xg) => xg);\n    const RoundedXGForHome = teamXGForHome.map((xg) => xg);\n    const RoundedXGAgainstHome = teamXGAgainstHome.map((xg) => xg);\n    const RoundedXGForAway = teamXGForAway.map((xg) => xg);\n    const RoundedXGAgainstAway = teamXGAgainstAway.map((xg) => xg);\n\n    form.XGPrediction = await predictGoalsWithExponentialSmoothing(\n      RoundedXGFor,\n      RoundedXGAgainst,\n      alpha\n    );\n\n    form.XGPredictionHome = await predictGoalsWithExponentialSmoothing(\n      RoundedXGForHome,\n      RoundedXGAgainstHome,\n      beta\n    );\n\n    form.XGPredictionAway = await predictGoalsWithExponentialSmoothing(\n      RoundedXGForAway,\n      RoundedXGAgainstAway,\n      beta\n    );\n\n    const teamConceededHomeRollingAverage =\n      await predictNextWeightedMovingAverage(\n        teamConceededHome,\n        teamConceededHome.length < x ? teamConceededHome.length : x\n      );\n\n    const teamConceededAwayRollingAverage =\n      await predictNextWeightedMovingAverage(\n        teamConceededAway,\n        teamConceededAway.length < x ? teamConceededAway.length : x\n      );\n\n    const sum = teamGoalsAll.reduce((a, b) => a + b, 0);\n    const avgScored = sum / teamGoalsAll.length || 0;\n    form.avgScored = avgScored;\n\n    const sumHome = teamGoalsHome.reduce((a, b) => a + b, 0);\n    const avgScoredHome = sumHome / teamGoalsAll.length || 0;\n    form.avgScoredHome = avgScoredHome;\n\n    const sumAway = teamGoalsAway.reduce((a, b) => a + b, 0);\n    const avgScoredAway = sumAway / teamGoalsAway.length || 0;\n    form.avgScoredAway = avgScoredAway;\n\n    const last5 = teamGoalsAll.slice(0, 5);\n    const last5Sum = last5.reduce((a, b) => a + b, 0);\n    const last5AvgScored = last5Sum / last5.length || 0;\n\n    const last5Home = teamGoalsHome.slice(0, 5);\n    const last5SumHome = last5Home.reduce((a, b) => a + b, 0);\n    form.last5AvgScoredHome = last5SumHome / last5Home.length || 0;\n\n    const last5Away = teamGoalsAway.slice(0, 5);\n    const last5SumAway = last5Away.reduce((a, b) => a + b, 0);\n    form.last5AvgScoredAway = last5SumAway / last5Away.length || 0;\n\n    const last5Conceeded = teamConceededAll.slice(0, 5);\n    const last5ConceededSum = last5Conceeded.reduce((a, b) => a + b, 0);\n    const last5AvgConceeded = last5ConceededSum / last5Conceeded.length || 0;\n\n    const last5ConceededHome = teamConceededHome.slice(0, 5);\n    const last5ConceededSumHome = last5ConceededHome.reduce((a, b) => a + b, 0);\n    form.last5AvgConceededHome =\n      last5ConceededSumHome / last5ConceededHome.length || 0;\n\n    const last5ConceededAway = teamConceededAway.slice(0, 5);\n    const last5ConceededSumAway = last5ConceededAway.reduce((a, b) => a + b, 0);\n    form.last5AvgConceededAway =\n      last5ConceededSumAway / last5ConceededAway.length || 0;\n\n    const last10 = teamGoalsAll.slice(0, 10);\n    const last10Sum = last10.reduce((a, b) => a + b, 0);\n    const last10AvgScored = last10Sum / last10.length || 0;\n\n    const last10Conceeded = teamConceededAll.slice(0, 10);\n    const last10ConceededSum = last10Conceeded.reduce((a, b) => a + b, 0);\n    const last10AvgConceeded = last10ConceededSum / last10Conceeded.length || 0;\n\n    form.last5Goals = parseFloat(last5AvgScored.toFixed(2));\n    form.last5GoalsConceeded = parseFloat(last5AvgConceeded.toFixed(2));\n    form.last5GoalDiff = form.last5Goals - form.last5GoalsConceeded;\n    form.last10Goals = parseFloat(last10AvgScored.toFixed(2));\n    form.last10GoalsConceeded = parseFloat(last10AvgConceeded.toFixed(2));\n\n    const teamGoalsAllRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsAll,\n      teamGoalsAll.length < r ? teamGoalsAll.length : r\n    );\n\n    const teamGoalsConceededAllRollingAverage =\n      await predictNextWeightedMovingAverage(\n        last10Conceeded,\n        last10Conceeded.length < r ? last10Conceeded.length : r\n      );\n\n    const sumTwo = teamConceededAll.reduce((a, b) => a + b, 0);\n    const avgConceeded = sumTwo / teamConceededAll.length || 0;\n    form.avgConceeded = avgConceeded;\n\n    const teamConceededHomeOnlySum = teamConceededHome.reduce(\n      (a, b) => a + b,\n      0\n    );\n    const teamConceededAvgHomeOnly =\n      teamConceededHomeOnlySum / teamConceededHome.length || 0;\n    form.teamConceededAvgHomeOnly = teamConceededAvgHomeOnly;\n\n    const teamConceededAwayOnlySum = teamConceededAway.reduce(\n      (a, b) => a + b,\n      0\n    );\n    const teamConceededAvgAwayOnly =\n      teamConceededAwayOnlySum / teamConceededAway.length || 0;\n    form.teamConceededAvgAwayOnly = teamConceededAvgAwayOnly;\n\n    console.log(form);\n\n    form.goalDifference = sum - sumTwo;\n\n    // console.log(teamGoalsHomeRollingAverage)\n    // console.log(teamGoalsAwayRollingAverage)\n    // console.log(teamGoalsAllRollingAverage)\n    // console.log(teamConceededHomeRollingAverage)\n    // console.log(teamConceededAwayRollingAverage)\n    // console.log(teamGoalsConceededAllRollingAverage)\n    // console.log(averageOddsHome)\n    // console.log(averageOddsAway)\n    // console.log(avgScored)\n    // console.log(avgConceeded)\n    // console.log(form.XGPrediction)\n    // console.log(forAndAgainstRollingAvHomeOrAway)\n    // console.log(forAndAgainstRollingAv)\n\n    return [\n      teamGoalsHomeRollingAverage,\n      teamGoalsAwayRollingAverage,\n      teamGoalsAllRollingAverage,\n      teamConceededHomeRollingAverage,\n      teamConceededAwayRollingAverage,\n      teamGoalsConceededAllRollingAverage,\n      averageOddsHome,\n      averageOddsAway,\n      avgScored,\n      avgConceeded,\n      bttsAllString,\n      bttsHomeString,\n      bttsAwayString,\n      bttsAllPercentage,\n      bttsHomePercentage,\n      bttsAwayPercentage,\n      forAndAgainstRollingAvHomeOrAway,\n      forAndAgainstRollingAv,\n    ];\n  } else {\n    return null;\n  }\n}\n\nasync function predictNextWeightedMovingAverage(numbers, windowSize) {\n  const startIndex = numbers.length - windowSize;\n  const window = numbers.slice(startIndex);\n  const weights = Array.from(\n    { length: windowSize },\n    (_, i) => (i + 1) / ((windowSize * (windowSize + 1)) / 2)\n  );\n  const sum = window.reduce((acc, num, i) => acc + num * weights[i], 0);\n  const movingAverage = sum / weights.reduce((acc, w) => acc + w, 0);\n  return parseFloat(movingAverage.toFixed(2));\n}\n\n// Function to calculate the weighted average using exponential smoothing\nasync function calculateWeightedAverage(arr, alpha) {\n  let weightedSum = 0;\n  let totalWeight = 0;\n\n  for (let i = arr.length - 1; i >= 0; i--) {\n    const weight = Math.pow(1 - alpha, arr.length - 1 - i);\n    weightedSum += arr[i] * weight;\n    totalWeight += weight;\n  }\n\n  return weightedSum / totalWeight;\n}\n\n// Function to predict goals scored and conceded for a team with exponential smoothing\nasync function predictGoalsWithExponentialSmoothing(\n  teamGoalsFor,\n  teamGoalsAgainst,\n  alpha\n) {\n  const lambdaFor = await calculateWeightedAverage(teamGoalsFor, alpha);\n  const lambdaAgainst = await calculateWeightedAverage(teamGoalsAgainst, alpha);\n\n  // You can fine-tune these values based on your model and data\n  const predictedGoalsFor = lambdaFor;\n  const predictedGoalsAgainst = lambdaAgainst;\n\n  return {\n    goalsFor: predictedGoalsFor,\n    goalsAgainst: predictedGoalsAgainst,\n  };\n}\n\nexport async function compareStat(statOne, statTwo) {\n  let stat1 = parseFloat(statOne);\n  let stat2 = parseFloat(statTwo);\n  let statDiff;\n  // console.log( await normalizeValues(12, 2, 0, 1))\n  // console.log(await diff(1.8571428571428571, 1.14285714285714285))\n\n  if (stat1 === 0) {\n    stat1 = stat1 + 1;\n    stat2 = stat2 + 1;\n  }\n  if (stat2 === 0) {\n    stat2 = stat2 + 1;\n    stat2 = stat2 + 1;\n  }\n\n  const { normalizedValue1, normalizedValue2 } = await normalizeValues(\n    stat1,\n    stat2,\n    0,\n    2\n  );\n\n  const finalValue1 = normalizedValue1;\n  const finalValue2 = normalizedValue2;\n\n  statDiff = await diff(finalValue1, finalValue2);\n\n  if (statDiff > 0.3 || statDiff < -0.3) {\n    // console.log(statDiff)\n  } else {\n    statDiff = 0;\n  }\n  return statDiff;\n}\n\nexport async function getClinicalRating(form) {\n  let rating;\n  let score;\n  switch (true) {\n    case form.dangerousAttackConversion <= 15:\n      rating = \"excellent\";\n      score = 0.8;\n      break;\n\n    case form.dangerousAttackConversion > 15 &&\n      form.dangerousAttackConversion <= 20:\n      rating = \"great\";\n      score = 0.9;\n      break;\n\n    case form.dangerousAttackConversion > 20 &&\n      form.dangerousAttackConversion <= 25:\n      rating = \"very good\";\n      score = 0.95;\n      break;\n\n    case form.dangerousAttackConversion > 25 &&\n      form.dangerousAttackConversion <= 32.5:\n      rating = \"good\";\n      score = 0.98;\n      break;\n\n    case form.dangerousAttackConversion > 30 &&\n      form.dangerousAttackConversion <= 35:\n      rating = \"above average\";\n      score = 0.99;\n      break;\n\n    case form.dangerousAttackConversion > 35 &&\n      form.dangerousAttackConversion <= 40:\n      rating = \"average\";\n      score = 1;\n      break;\n\n    case form.dangerousAttackConversion > 40 &&\n      form.dangerousAttackConversion <= 45:\n      rating = \"below average\";\n      score = 1.01;\n      break;\n\n    case form.dangerousAttackConversion > 45 &&\n      form.dangerousAttackConversion <= 50:\n      rating = \"poor\";\n      score = 1.05;\n      break;\n\n    case form.dangerousAttackConversion > 50 &&\n      form.dangerousAttackConversion <= 55:\n      rating = \"very poor\";\n      score = 1.1;\n      break;\n\n    case form.dangerousAttackConversion > 55 &&\n      form.dangerousAttackConversion <= 60:\n      rating = \"terrible\";\n      score = 1.2;\n      break;\n\n    case form.dangerousAttackConversion > 60:\n      rating = \"awful\";\n      score = 1.3;\n      break;\n\n    default:\n      break;\n  }\n\n  return [rating, score];\n}\n\nexport async function getPointsDifferential(pointsHomeAvg, pointsAwayAvg) {\n  const differential = await diff(pointsHomeAvg, pointsAwayAvg);\n  return parseFloat(differential);\n}\n\nexport async function getPointWeighting(pointsDiff) {\n  let pointsDiffWeightingHome;\n  let pointsDiffWeightingAway;\n\n  switch (true) {\n    case pointsDiff >= 2.5:\n      pointsDiffWeightingHome = 0.3;\n      pointsDiffWeightingAway = -0.3;\n      break;\n    case pointsDiff >= 2 && pointsDiff < 2.5:\n      pointsDiffWeightingHome = 0.2;\n      pointsDiffWeightingAway = -0.2;\n      break;\n    case pointsDiff >= 1.5 && pointsDiff < 2:\n      pointsDiffWeightingHome = 0.15;\n      pointsDiffWeightingAway = -0.15;\n      break;\n    case pointsDiff >= 1 && pointsDiff < 1.5:\n      pointsDiffWeightingHome = 0.1;\n      pointsDiffWeightingAway = -0.1;\n      break;\n    case pointsDiff >= 0.5 && pointsDiff < 1:\n      pointsDiffWeightingHome = 0.05;\n      pointsDiffWeightingAway = -0.05;\n      break;\n    case pointsDiff > -0.5 && pointsDiff < 0.5:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n      break;\n    case pointsDiff <= -0.5 && pointsDiff > -1:\n      pointsDiffWeightingHome = -0.05;\n      pointsDiffWeightingAway = 0.05;\n      break;\n    case pointsDiff <= -1 && pointsDiff > -1.5:\n      pointsDiffWeightingHome = -0.1;\n      pointsDiffWeightingAway = 0.1;\n      break;\n    case pointsDiff <= -1.5 && pointsDiff > -2:\n      pointsDiffWeightingHome = -0.15;\n      pointsDiffWeightingAway = 0.15;\n      break;\n    case pointsDiff <= -2 && pointsDiff > -2.5:\n      pointsDiffWeightingHome = -0.2;\n      pointsDiffWeightingAway = 0.2;\n      break;\n    case pointsDiff <= -2.5:\n      pointsDiffWeightingHome = -0.3;\n      pointsDiffWeightingAway = 0.3;\n      break;\n    default:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n  }\n  return [pointsDiffWeightingHome, pointsDiffWeightingAway];\n}\n\nexport async function compareFormTrend(recentForm, distantForm) {\n  let score;\n  let scoreTotal = 0;\n\n  for (let index = 0; index < recentForm.length; index++) {\n    const recent = recentForm[index];\n    const distant = distantForm[index];\n\n    if (recent > distant) {\n      score = 1.05;\n    } else if (recent === distant) {\n      score = 1;\n    } else if (recent < distant) {\n      score = 0.95;\n    }\n    scoreTotal = scoreTotal + score / recentForm.length;\n  }\n\n  return scoreTotal;\n}\n\nexport async function getPointAverage(pointTotal, games) {\n  return pointTotal / games;\n}\n\nasync function poissonDistribution(lambda, k) {\n  const numerator = Math.exp(-lambda) * Math.pow(lambda, k);\n  const denominator = factorial(k);\n  return numerator / denominator;\n}\n\nfunction factorial(n) {\n  if (n === 0 || n === 1) {\n    return 1;\n  }\n  let result = 1;\n  for (let i = 2; i <= n; i++) {\n    result *= i;\n  }\n  return result;\n}\n\nasync function calculateAverageGoals(goalsFor) {\n  const totalGoals = goalsFor.reduce((sum, goals) => sum + goals, 0);\n  return totalGoals / goalsFor.length;\n}\n\nasync function adjustGoalsAvg(goalsAvg, strengthRatio) {\n  return goalsAvg * strengthRatio;\n}\n\nasync function predictScore(\n  goalsForTeam1,\n  goalsAgainstTeam1,\n  goalsForTeam2,\n  goalsAgainstTeam2,\n  team1Metrics,\n  team2Metrics,\n  game\n) {\n  let team1AverageGoalsFor = await calculateAverageGoals(goalsForTeam1);\n  let team1AverageGoalsAgainst = await calculateAverageGoals(goalsAgainstTeam1);\n  let team2AverageGoalsFor = await calculateAverageGoals(goalsForTeam2);\n  let team2AverageGoalsAgainst = await calculateAverageGoals(goalsAgainstTeam2);\n\n  let team1StrengthRatio = team1Metrics.weighting / 1.75;\n  let team2StrengthRatio = team2Metrics.weighting / 1.75;\n\n  let adjustedTeam1AverageGoals = await adjustGoalsAvg(\n    team1AverageGoalsFor,\n    team1StrengthRatio\n  );\n  let adjustedTeam2AverageGoals = await adjustGoalsAvg(\n    team2AverageGoalsFor,\n    team2StrengthRatio\n  );\n\n  let adjustedTeam1AverageGoalsAgainst = await adjustGoalsAvg(\n    team1AverageGoalsAgainst,\n    team2StrengthRatio\n  );\n  let adjustedTeam2AverageGoalsAgainst = await adjustGoalsAvg(\n    team2AverageGoalsAgainst,\n    team1StrengthRatio\n  );\n\n  let maxGoals = 5; // Set the maximum number of goals to predict\n\n  const scores = [];\n\n  for (let i = 0; i <= maxGoals; i++) {\n    for (let j = 0; j <= maxGoals; j++) {\n      let team1GoalExpectation =\n        (adjustedTeam1AverageGoals + adjustedTeam2AverageGoalsAgainst) / 2;\n      // (adjustedTeam2AverageGoalsAgainst / adjustedTeam1AverageGoalsAgainst);\n      let team2GoalExpectation =\n        (adjustedTeam2AverageGoals + adjustedTeam1AverageGoalsAgainst) / 2;\n      // (adjustedTeam1AverageGoalsAgainst / adjustedTeam2AverageGoalsAgainst);\n\n      if (!isFinite(team1GoalExpectation)) {\n        team1GoalExpectation = 0;\n      }\n\n      if (!isFinite(team2GoalExpectation)) {\n        team2GoalExpectation = 0;\n      }\n\n      const probability =\n        (await poissonDistribution(team1GoalExpectation, i)) *\n        (await poissonDistribution(team2GoalExpectation, j));\n      scores.push({\n        team1Score: i,\n        team2Score: j,\n        probability,\n      });\n    }\n  }\n\n  scores.sort((a, b) => b.probability - a.probability); // Sort scores in descending order by probability\n  const top5Scores = scores.slice(0, 5); // Get the top 5 scores\n\n  // for (const score of top5Scores) {\n  //   console.log(\n  //     `Team 1: ${score.team1Score} - Team 2: ${score.team2Score} (${(\n  //       score.probability * 100\n  //     ).toFixed(2)}%)`\n  //   );\n  // }\n  return top5Scores;\n}\n\nasync function normalizeValues(value1, value2, minRange, maxRange) {\n  if (\n    typeof value1 !== \"number\" ||\n    typeof value2 !== \"number\" ||\n    typeof minRange !== \"number\" ||\n    typeof maxRange !== \"number\"\n  ) {\n    throw new Error(\"All arguments must be numbers.\");\n  }\n\n  // Calculate the absolute values of the inputs\n\n  const absValue1 = Math.abs(value1);\n  const absValue2 = Math.abs(value2);\n\n  // Calculate the total sum of the absolute values\n  const totalAbs = absValue1 + absValue2;\n\n  // Calculate the normalized values based on the ratio of absolute values\n  const normalizedAbsValue1 =\n    (absValue1 / totalAbs) * (maxRange - minRange) + minRange;\n  const normalizedAbsValue2 =\n    (absValue2 / totalAbs) * (maxRange - minRange) + minRange;\n\n  // Adjust the signs of the normalized values based on the original values\n  const normalizedValue1 =\n    value1 >= 0 ? normalizedAbsValue1 : -normalizedAbsValue1;\n  const normalizedValue2 =\n    value2 >= 0 ? normalizedAbsValue2 : -normalizedAbsValue2;\n\n  return { normalizedValue1, normalizedValue2 };\n}\n\nexport async function compareTeams(homeForm, awayForm, match) {\n  let homeAttackStrength = homeForm.attackingStrength;\n  let homeDefenceStrength = homeForm.defensiveStrength;\n  let homePossessionStrength = homeForm.possessionStrength;\n  let awayAttackStrength = awayForm.attackingStrength;\n  let awayDefenceStrength = awayForm.defensiveStrength;\n  let awayPossessionStrength = awayForm.possessionStrength;\n\n  const attackStrengthComparison = await compareStat(\n    homeAttackStrength,\n    awayAttackStrength\n  );\n\n  const defenceStrengthComparison = await compareStat(\n    homeDefenceStrength,\n    awayDefenceStrength\n  );\n\n  const possessiontrengthComparison = await compareStat(\n    homePossessionStrength,\n    awayPossessionStrength\n  );\n\n  // const xgActualComparison = await compareStat(\n  //   homeForm.actualToXGDifference,\n  //   awayForm.actualToXGDifference\n  // );\n\n  // const XGComparison = await compareStat(\n  //   homeForm.XGDiffNonAverage,\n  //   awayForm.XGDiffNonAverage\n  // );\n\n  // const XGComparisonLast5 = await compareStat(\n  //   homeForm.XGDiffNonAverageLast5,\n  //   awayForm.XGDiffNonAverageLast5\n  // )\n\n  const homeAwayPointAverageComparison = await compareStat(\n    homeForm.homeOrAwayAverage,\n    awayForm.homeOrAwayAverage\n  );\n\n  // const fiveGameComparison = await compareStat(\n  //   homeForm.last5Points,\n  //   awayForm.last5Points\n  // );\n\n  // const last5GDComparison = await compareStat(\n  //   homeForm.last5GoalDiff,\n  //   awayForm.last5GoalDiff\n  // )\n\n  let oddsComparison = await compareStat(match.awayOdds, match.homeOdds);\n\n  // const homeAdvantage = await compareStat(\n  //   parseFloat(homeForm.homeAttackAdvantage) / 2,\n  //   1\n  // );\n\n  // const dangerousAttacksWithConverstionComparison = await compareStat(\n  //   homeForm.AverageDangerousAttacksOverall *\n  //     homeForm.dangerousAttackConversion,\n  //   awayForm.AverageDangerousAttacksOverall * awayForm.dangerousAttackConversion\n  // );\n\n  match.goalDiffHomeOrAwayComparison =\n    parseFloat(homeForm.goalDifferenceHomeOrAway) -\n    parseFloat(awayForm.goalDifferenceHomeOrAway);\n\n  match.goalDifferenceComparison =\n    parseFloat(homeForm.goalDifference) - parseFloat(awayForm.goalDifference);\n\n  const goalDiffHomeOrAwayComparison = await compareStat(\n    homeForm.goalDifferenceHomeOrAway,\n    awayForm.goalDifferenceHomeOrAway\n  );\n\n  const overallDirectnessComparison = await compareStat(\n    homeForm.directnessOverallStrength,\n    awayForm.directnessOverallStrength\n  );\n\n  // const hOrADirectnessComparison = await compareStat(\n  //   homeForm.directnessHomeOnly,\n  //   awayForm.directnessAwayOnly\n  // );\n\n  const accuracyComparison = await compareStat(\n    homeForm.accuracyOverallStrength,\n    awayForm.accuracyOverallStrength\n  );\n\n  // console.log(attackStrengthComparison);\n  // console.log(defenceStrengthComparison);\n  // console.log(possessiontrengthComparison);\n  // console.log(homeAwayPointAverageComparison);\n  // console.log(goalDiffHomeOrAwayComparison);\n  // console.log(oddsComparison);\n  // console.log(overallDirectnessComparison);\n  // console.log(accuracyComparison);\n\n  let calculation =\n    attackStrengthComparison * 3 +\n    defenceStrengthComparison * 3 +\n    possessiontrengthComparison * 3 +\n    // xgToActualDiffComparison * 1 +\n    // xgForStrengthRecentComparison * 1 +\n    // xgAgainstStrengthRecentComparison * 1 +\n    homeAwayPointAverageComparison * 3 +\n    goalDiffHomeOrAwayComparison * 0 +\n    // xgActualComparison * 0 +\n    // xgForComparison * 1 +\n    // xgAgainstComparison * 1 +\n    // XGComparison * 0 +\n    oddsComparison * 1 +\n    // dangerousAttacksWithConverstionComparison * 0.05 +\n    overallDirectnessComparison * 3 +\n    // hOrADirectnessComparison * 0 +\n    accuracyComparison * 3;\n\n  //LEAVE\n\n\n  // attackStrengthComparison * 3 +\n  // defenceStrengthComparison * 3 +\n  // possessiontrengthComparison * 1 +\n  // // xgToActualDiffComparison * 1 +\n  // // xgForStrengthRecentComparison * 1 +\n  // // xgAgainstStrengthRecentComparison * 1 +\n  // homeAwayPointAverageComparison * 1 +\n  // goalDiffHomeOrAwayComparison * 2 +\n  // xgActualComparison * 1 +\n  // // xgForComparison * 1 +\n  // // xgAgainstComparison * 1 +\n  // XGComparison * 1 +\n  // // XGComparisonLast5 * 0.5 +\n  // oddsComparison * 1 +\n  // // dangerousAttacksWithConverstionComparison * 0.05 +\n  // homeAdvantage * 0 +\n  // fiveGameComparison * 0 +\n  // overallDirectnessComparison * 1.5 +\n  // hOrADirectnessComparison * 1 +\n  // accuracyComparison * 1.5;\n\n  let homeWinOutcomeProbability =\n    match.homeTeamWinPercentage + match.awayTeamLossPercentage;\n  let awayWinOutcomeProbability =\n    match.homeTeamLossPercentage + match.awayTeamWinPercentage;\n  let drawOutcomeProbability =\n    match.homeTeamDrawPercentage + match.awayTeamDrawPercentage;\n\n  if (\n    drawOutcomeProbability > homeWinOutcomeProbability &&\n    drawOutcomeProbability > awayWinOutcomeProbability\n  ) {\n    switch (true) {\n      case drawOutcomeProbability > 100:\n        calculation = calculation / 3;\n        break;\n      default:\n        calculation = calculation * 1;\n        break;\n    }\n  } else {\n    calculation = calculation * 1;\n  }\n\n  if (calculation > 0) {\n    if (\n      homeForm.lastGame === \"L\" ||\n      homeForm.last2Points < 2 ||\n      awayForm.last2Points >= 5 ||\n      match.XGdifferentialValueRaw < 0\n    ) {\n      calculation = calculation / 4;\n    }\n  } else if (calculation < 0) {\n    if (\n      awayForm.lastGame === \"L\" ||\n      awayForm.last2Points < 2 ||\n      homeForm.last2Points >= 5 ||\n      match.XGdifferentialValueRaw > 0\n    ) {\n      calculation = calculation / 4;\n    }\n  }\n\n  if (homeForm.averageOddsHome !== null || awayForm.averageOddsAway !== null) {\n    if (\n      calculation > 0 &&\n      homeForm.averageOddsHome < match.homeOdds &&\n      awayForm.averageOddsAway > match.awayOdds\n    ) {\n      calculation = calculation / 2;\n    } else if (\n      calculation > 0 &&\n      homeForm.averageOddsHome > match.homeOdds &&\n      awayForm.averageOddsAway < match.awayOdds\n    ) {\n      calculation = calculation * 1.25;\n    } else {\n      calculation = calculation * 1;\n    }\n\n    if (\n      calculation < 0 &&\n      awayForm.averageOddsAway < match.awayOdds &&\n      homeForm.averageOddsHome > match.homeOdds\n    ) {\n      calculation = calculation / 2;\n    } else if (\n      calculation < 0 &&\n      awayForm.averageOddsAway > match.awayOdds &&\n      homeForm.averageOddsHome < match.homeOdds\n    ) {\n      calculation = calculation * 1.25;\n    } else {\n      calculation = calculation * 1;\n    }\n  }\n\n  // if (\n  //   calculation > 0 &&\n  //   homeForm.improving === true &&\n  //   awayForm.improving === false\n  // ) {\n  //   console.log(homeForm);\n  //   calculation = calculation * 1.5;\n  // } else if (\n  //   calculation < 0 &&\n  //   awayForm.improving === true &&\n  //   awayForm.improving === false\n  // ) {\n  //   calculation = calculation * 1.5;\n  // } else if (\n  //   calculation > 0 &&\n  //   homeForm.improving === false &&\n  //   awayForm.improving === true\n  // ) {\n  //   calculation = calculation / 2;\n  // } else if (\n  //   calculation < 0 &&\n  //   awayForm.improving === false &&\n  //   homeForm.improving === true\n  // ) {\n  //   calculation = calculation / 2;\n  // }\n\n  // if (\n  //   (calculation < 0 && homeForm.oddsReliabilityWin < 50) ||\n  //   (calculation < 0 && awayForm.oddsReliabilityWinAsUnderdog > 45)\n  // ) {\n  //   calculation = calculation / 2;\n  // } else if (\n  //   (calculation > 0 && awayForm.oddsReliabilityWin < 50) ||\n  //   (calculation > 0 && homeForm.oddsReliabilityWinAsUnderdog > 45)\n  // ) {\n  //   calculation = calculation / 2;\n  // }\n\n  // if (calculation < 0 && homeForm.predictabilityScore < 0.3) {\n  //   calculation = calculation / 2;\n  // } else if (calculation > 0 && awayForm.predictabilityScore < 0.3) {\n  //   calculation = calculation / 2;\n  // }\n\n  return calculation;\n}\n\nexport async function roundCustom(num, form, otherForm) {\n  let wholeNumber = Math.floor(num);\n  let remainder = num - wholeNumber;\n  let goals;\n\n\n  switch (true) {\n    case remainder >= 0.9:\n      switch (true) {\n        default:\n          goals = Math.round(num);\n          break;\n      }\n      break;\n    case remainder >= 0.8 && remainder < 0.9:\n      switch (true) {\n        case form.actualToXGDifference >= 0:\n          goals = Math.ceil(num);\n          break;\n        case form.actualToXGDifference < 0:\n          goals = Math.floor(num);\n          break;\n        default:\n          goals = Math.round(num);\n          break;\n      }\n      break;\n    case remainder >= 0.6 && remainder < 0.8:\n      switch (true) {\n        case form.actualToXGDifference >= 10:\n          goals = Math.ceil(num);\n          break;\n        case form.actualToXGDifference < 10:\n          goals = Math.floor(num);\n          break;\n        default:\n          goals = Math.round(num);\n          break;\n      }\n      break;\n    case remainder >= 0.5 && remainder < 0.6:\n      switch (true) {\n        case form.actualToXGDifference >= 20:\n          goals = Math.ceil(num);\n          break;\n        case form.actualToXGDifference < 20:\n          goals = Math.floor(num);\n          break;\n        default:\n          goals = Math.round(num);\n          break;\n      }\n      break;\n    default:\n      goals = Math.floor(num);\n      break;\n  }\n\n  return goals;\n\n  // if (remainder > 0.5) {\n  //   return Math.ceil(num);\n  // } else {\n  //   return Math.floor(num);\n  // }\n}\n\n//Calculates scores based on prior XG figures, weighted by odds\nlet i = 0;\n\nexport async function calculateScore(match, index, divider, calculate) {\n  i++;\n\n  let teams;\n\n  if (\n    calculate === true &&\n    allForm.find(\n      (game) =>\n        game.home.teamName === match.homeTeam &&\n        game.away.teamName === match.awayTeam\n    )\n  ) {\n    teams = [\n      allForm.find((game) => game.home.teamName === match.homeTeam).home,\n      allForm.find((game) => game.away.teamName === match.awayTeam).away,\n    ];\n  } else {\n    calculate = false;\n  }\n\n  let formHome;\n  let formAway;\n\n  if (calculate) {\n    for (let i = 0; i < teams.length; i++) {\n      if (teams[0][index].PlayedHome <= 1 || teams[1][index].PlayedAway <= 1) {\n        index = 2;\n        divider = 10;\n      }\n\n      teams[i][index].lastGame = teams[i][index].LastFiveForm[4];\n      teams[i][index].previousToLastGame = teams[i][index].LastFiveForm[3];\n\n      let last2 = [\n        teams[i][index].lastGame,\n        teams[i][index].previousToLastGame,\n      ];\n\n      teams[i][index].last2Points = getPointsFromLastX(last2);\n\n      teams[i][index].twoGameAverage = await getPointAverage(\n        teams[i][index].last2Points,\n        2\n      );\n      teams[i][index].threeGameAverage = await getPointAverage(\n        teams[i][index].last3Points,\n        3\n      );\n      teams[i][index].fiveGameAverage = await getPointAverage(\n        teams[i][index].last5Points,\n        5\n      );\n      teams[i][index].sixGameAverage = await getPointAverage(\n        teams[i][index].last6Points,\n        6\n      );\n      teams[i][index].tenGameAverage = await getPointAverage(\n        teams[i][index].last10Points,\n        10\n      );\n\n      if (teams[i][index].formRun) {\n        teams[i][index].lastHomeOrAwayPoints = getPointsFromLastX(\n          teams[i][index].formRun\n        );\n\n        teams[i][index].homeOrAwayAverage = await getPointAverage(\n          teams[i][index].lastHomeOrAwayPoints,\n          teams[i][index].formRun.length\n        );\n      }\n\n      teams[i][0].ScoredAverage = teams[i][0].ScoredOverall / 5;\n      teams[i][1].ScoredAverage = teams[i][1].ScoredOverall / 6;\n      teams[i][2].ScoredAverage = teams[i][2].ScoredOverall / 10;\n\n      teams[i][0].ConcededAverage = teams[i][0].ConcededOverall / 5;\n      teams[i][1].ConcededAverage = teams[i][1].ConcededOverall / 6;\n      teams[i][2].ConcededAverage = teams[i][2].ConcededOverall / 10;\n\n      if (teams[i][1].ScoredAverage === 0) {\n        teams[i][1].ScoredAverage = teams[i][index].ScoredOverall / 10;\n        teams[i][1].ScoredOverall = teams[i][2].ScoredOverall / 2;\n      }\n\n      if (teams[i][1].ConcededAverage === 0) {\n        teams[i][1].ConcededAverage = teams[i][index].ConcededOverall / 10;\n        teams[i][1].ConcededOverall = teams[i][2].ConcededOverall / 2;\n      }\n\n      teams[i][index].ScoredAverageShortTerm = teams[i][0].ScoredOverall / 5;\n      teams[i][index].ConcededAverageShortTerm =\n        teams[i][0].ConcededOverall / 5;\n\n      teams[i][index].longTermAverageGoals = teams[i][2].ScoredOverall / 10;\n      teams[i][index].longTermAverageConceeded =\n        teams[i][2].ConcededOverall / 10;\n\n      match.GoalsInGamesAverageHome =\n        teams[0][0].ScoredAverage + teams[0][0].ConcededAverage;\n\n      match.GoalsInGamesAverageAway =\n        teams[1][0].ScoredAverage + teams[1][0].ConcededAverage;\n\n      let recentGoalDiff =\n        teams[i][index].ScoredAverageShortTerm -\n        teams[i][index].ConcededAverageShortTerm;\n      let distantGoalDiff =\n        teams[i][index].longTermAverageGoals -\n        teams[i][index].longTermAverageConceeded;\n\n      let recentDA = teams[i][0].AverageDangerousAttacksOverall;\n      let distantDA = teams[i][2].AverageDangerousAttacksOverall;\n\n      let recentPosession = teams[i][0].AveragePossessionOverall;\n      let distantPosession = teams[i][2].AveragePossessionOverall;\n\n      let recentCleanSheet = teams[i][0].CleanSheetPercentage;\n      let distantCleanSheet = teams[i][2].CleanSheetPercentage;\n\n      let recentFormArray = [\n        recentGoalDiff,\n        recentDA,\n        recentPosession,\n        recentCleanSheet,\n      ];\n      let distantFormArray = [\n        distantGoalDiff,\n        distantDA,\n        distantPosession,\n        distantCleanSheet,\n      ];\n\n      teams[i][index].formTrendScore = await compareFormTrend(\n        recentFormArray,\n        distantFormArray\n      );\n\n      teams[i][index].expectedGoals = parseFloat(teams[i][index].XG);\n\n      teams[i][index].ScoredAverageShortAndLongTerm =\n        (teams[i][index].ScoredOverall / 10 +\n          teams[i][index].ScoredAverageShortTerm) /\n        2;\n\n      teams[i][index].conceededAverageShortAndLongTerm =\n        (teams[i][index].ConcededOverall / 10 +\n          teams[i][index].ConcededAverageShortTerm) /\n        2;\n\n      teams[i][index].longTermGoalDifference =\n        teams[i][2].ScoredAverage - teams[i][2].ConcededAverage;\n\n      teams[i][index].shortTermGoalDifference =\n        teams[i][0].ScoredAverage - teams[i][0].ConcededAverage;\n\n      teams[i][index].XGdifferential = await diff(\n        teams[i][index].XGOverall,\n        teams[i][index].XGAgainstAvgOverall\n      );\n\n      teams[i][index].XGdifferentialRecent = await diff(\n        teams[i][0].XGOverall,\n        teams[i][0].XGAgainstAvgOverall\n      );\n\n      teams[i][index].actualToXGDifferenceRecent = await diff(\n        teams[i][index].shortTermGoalDifference,\n        teams[i][index].XGdifferentialRecent\n      );\n    }\n\n    homeOdds = match.homeOdds;\n    awayOdds = match.awayOdds;\n\n    formHome = teams[0][index];\n    formAway = teams[1][index];\n\n    // if (\n    //   (formHome.XGOverall - formHome.XGAgainstAvgOverall) < (formHome.last5XG - formHome.XGAgainstlast5)\n    // ) {\n    //   formHome.improving = true;\n    // } else {\n    //   formHome.improving = false;\n    // }\n\n    // if (\n    //   (formAway.XGOverall - formAway.XGAgainstAvgOverall) < (formAway.last5XG - formAway.XGAgainstlast5)\n    // ) {\n    //   formAway.improving = true;\n    // } else {\n    //   formAway.improving = false;\n    // }\n\n    let homeTenGameAvg = formHome.last10Points / 10;\n    let awayTenGameAvg = formAway.last10Points / 10;\n\n    let homeTwoGameAvg = formHome.last2Points / 2;\n    let awayTwoGameAvg = formAway.last2Points / 2;\n\n    let pointsDiff10 = await getPointsDifferential(\n      homeTenGameAvg,\n      awayTenGameAvg\n    );\n\n    let pointsDiff2 = await getPointsDifferential(\n      homeTwoGameAvg,\n      awayTwoGameAvg\n    );\n\n    let [last10WeightingHome, last10WeightingAway] = await getPointWeighting(\n      pointsDiff10\n    );\n\n    let [last2WeightingHome, last2WeightingAway] = await getPointWeighting(\n      pointsDiff2\n    );\n\n    formHome.dangerousAttackConversion =\n      (formHome.ScoredAverageShortAndLongTerm /\n        formHome.AverageDangerousAttacksOverall) *\n      100;\n    formAway.dangerousAttackConversion =\n      (formAway.ScoredAverageShortAndLongTerm /\n        formAway.AverageDangerousAttacksOverall) *\n      100;\n\n    [formHome.clinicalRating, formHome.clinicalScore] = await getClinicalRating(\n      formHome\n    );\n    [formAway.clinicalRating, formAway.clinicalScore] = await getClinicalRating(\n      formAway\n    );\n\n    let XGdifferential = await diff(\n      formHome.XGdifferential,\n      formAway.XGdifferential\n    );\n\n    formHome.teamName = match.homeTeam;\n    formAway.teamName = match.awayTeam;\n\n    match.XGdifferentialValue = Math.abs(XGdifferential);\n    match.XGdifferentialValueRaw = parseFloat(XGdifferential);\n    if (\n      allLeagueResultsArrayOfObjects[match.leagueIndex].fixtures.length > 35 &&\n      match.leagueID !== 7956\n    ) {\n      [\n        formHome.predictedGoalsBasedOnHomeAv,\n        formHome.predictedGoalsBasedOnAwayAv,\n        formHome.allTeamGoalsBasedOnAverages,\n        formHome.predictedGoalsConceededBasedOnHomeAv,\n        formHome.predictedGoalsConceededBasedOnAwayAv,\n        formHome.allTeamGoalsConceededBasedOnAverages,\n        formHome.averageOddsHome,\n        formHome.averageOddsAway,\n        formHome.averageScoredLeague,\n        formHome.averageConceededLeague,\n        formHome.last10btts,\n        formHome.last10bttsHome,\n        formHome.last10bttsAway,\n        match.bttsAllPercentageHome,\n        match.bttsPercentageHomeHome,\n        match.bttsPercentageHomeAway,\n        formHome.forAndAgainstRollingAv,\n        formHome.forAndAgainstRollingAvHomeOrAway,\n      ] = await getPastLeagueResults(match.homeTeam, match, \"home\", formHome);\n\n      [\n        formAway.predictedGoalsBasedOnHomeAv,\n        formAway.predictedGoalsBasedOnAwayAv,\n        formAway.allTeamGoalsBasedOnAverages,\n        formAway.predictedGoalsConceededBasedOnHomeAv,\n        formAway.predictedGoalsConceededBasedOnAwayAv,\n        formAway.allTeamGoalsConceededBasedOnAverages,\n        formAway.averageOddsHome,\n        formAway.averageOddsAway,\n        formAway.averageScoredLeague,\n        formAway.averageConceededLeague,\n        formAway.last10btts,\n        formAway.last10bttsHome,\n        formAway.last10bttsAway,\n        match.bttsAllPercentageAway,\n        match.bttsPercentageAwayHome,\n        match.bttsPercentageAwayAway,\n        formAway.forAndAgainstRollingAv,\n        formAway.forAndAgainstRollingAvHomeOrAway,\n      ] = await getPastLeagueResults(match.awayTeam, match, \"away\", formAway);\n    } else {\n      formHome.predictedGoalsBasedOnHomeAv = formHome.ScoredAverage;\n      formHome.predictedGoalsBasedOnAwayAv = formHome.ConcededAverage;\n      formHome.allTeamGoalsBasedOnAverages = formHome.ScoredAverage;\n      formHome.forAndAgainstRollingAv = {\n        goalsFor: formHome.ScoredAverage,\n        goalsAgainst: formHome.ConcededAverage,\n      };\n      formHome.forAndAgainstRollingAvHomeOrAway = {\n        goalsFor: formHome.ScoredAverage,\n        goalsAgainst: formHome.ConcededAverage,\n      };\n      formHome.predictedGoalsConceededBasedOnHomeAv = formHome.ConcededAverage;\n      formHome.predictedGoalsConceededBasedOnAwayAv = formHome.ConcededAverage;\n      formHome.allTeamGoalsConceededBasedOnAverages = formHome.ConcededAverage;\n      formHome.averageOddsHome = null;\n      formHome.averageOddsAway = null;\n      formHome.averageScoredLeague = null;\n      formHome.averageConceededLeague = null;\n      formHome.goalDifference =\n        formHome.ScoredOverall - formHome.ConcededOverall;\n      formHome.goalDifferenceHomeOrAway =\n        formHome.ScoredOverall - formHome.ConcededOverall;\n      formHome.last10btts = null;\n      formHome.last10bttsHome = null;\n      formHome.last10bttsAway = null;\n      formHome.allTeamResults = [];\n      match.bttsAllPercentageHome = \"\";\n      match.bttsPercentageHomeHome = \"\";\n      match.bttsPercentageHomeAway = \"\";\n      formAway.predictedGoalsBasedOnHomeAv = formAway.ScoredAverage;\n      formAway.predictedGoalsBasedOnAwayAv = formAway.ConcededAverage;\n      formAway.allTeamGoalsBasedOnAverages = formAway.ScoredAverage;\n      formAway.forAndAgainstRollingAv = {\n        goalsFor: formAway.ScoredAverage,\n        goalsAgainst: formAway.ConcededAverage,\n      };\n      formAway.forAndAgainstRollingAvHomeOrAway = {\n        goalsFor: formAway.ScoredAverage,\n        goalsAgainst: formAway.ConcededAverage,\n      };\n      formAway.predictedGoalsConceededBasedOnHomeAv = formAway.ConcededAverage;\n      formAway.predictedGoalsConceededBasedOnAwayAv = formAway.ConcededAverage;\n      formAway.allTeamGoalsConceededBasedOnAverages = formAway.ConcededAverage;\n      formAway.averageOddsHome = null;\n      formAway.averageOddsAway = null;\n      formAway.averageScoredLeague = null;\n      formAway.averageConceededLeague = null;\n      formAway.goalDifference =\n        formAway.ScoredOverall - formAway.ConcededOverall;\n      formAway.goalDifferenceHomeOrAway =\n        formAway.ScoredOverall - formAway.ConcededOverall;\n\n      formAway.last10btts = null;\n      formAway.last10bttsHome = null;\n      formAway.last10bttsAway = null;\n      formAway.allTeamResults = [];\n      match.bttsAllPercentageAway = \"\";\n      match.bttsPercentageAwayHome = \"\";\n      match.bttsPercentageAwayAway = \"\";\n    }\n\n    if (\n      typeof formHome.homeTeamHomePositionRaw === \"number\" &&\n      typeof formAway.awayTeamAwayPositionRaw === \"number\"\n    ) {\n      formHome.homePositionHomeOnly = parseFloat(\n        formHome.homeTeamHomePositionRaw\n      );\n      formAway.awayPositionAwayOnly = parseFloat(\n        formAway.awayTeamAwayPositionRaw\n      );\n      formHome.homePosition = parseFloat(formHome.homeRawPosition);\n      formAway.awayPosition = parseFloat(formAway.awayRawPosition);\n    } else {\n      formHome.homePositionHomeOnly = \"N/A\";\n      formAway.awayPositionAwayOnly = \"N/A\";\n      formHome.homePosition = \"N/A\";\n      formAway.awayPosition = \"N/A\";\n    }\n\n    if (formHome.last10Goals && formAway.last10Goals !== 0) {\n      if (\n        formHome.last5Goals - formHome.last5GoalsConceeded >\n        formHome.last10Goals - formHome.last10GoalsConceeded\n      ) {\n        formHome.improving = true;\n      } else {\n        formHome.improving = false;\n      }\n\n      if (\n        formAway.last5Goals - formAway.last5GoalsConceeded >\n        formAway.last10Goals - formAway.last10GoalsConceeded\n      ) {\n        formAway.improving = true;\n      } else {\n        formAway.improving = false;\n      }\n    }\n\n    formHome.AttackingPotency = (formHome.XG / formHome.AttacksHome) * 100;\n    formAway.AttackingPotency = (formAway.XG / formAway.AttacksAverage) * 100;\n\n    let teamComparisonScore;\n\n    const attackingMetricsHome = {\n      \"Average Dangerous Attacks\": formHome.AverageDangerousAttacksOverall,\n      \"Average Shots\": formHome.AverageShots,\n      \"Average Shots On Target\": formHome.AverageShotsOnTargetOverall,\n      \"Average Expected Goals\": formHome.XGOverall,\n      \"Recent XG\": formHome.XGlast5 ? formHome.XGlast5 : formHome.XGOverall,\n      \"Average Goals\":\n        formHome.avgScored !== undefined && formHome.avgScored !== null\n          ? formHome.avgScored\n          : (formHome.ScoredOverall / 10).toFixed(2),\n      Corners: formHome.AverageCorners,\n    };\n\n    const attackingMetricsHomeOnly = {\n      \"Average Dangerous Attacks\": formHome.avgDangerousAttacksHome,\n      \"Average Shots\": formHome.avgShotsHome,\n      \"Average Shots On Target\": formHome.avgShotsOnTargetHome,\n      \"Average Expected Goals\": formHome.avgXGScoredHome,\n      \"Recent XG\": formHome.last5XGAvgForHome,\n      \"Average Goals\": formHome.avgScoredHome,\n      Corners: formHome.cornersAvHome,\n    };\n\n    const attackingMetricsAwayOnly = {\n      \"Average Dangerous Attacks\": formAway.avgDangerousAttacksAway,\n      \"Average Shots\": formAway.avgShotsAway,\n      \"Average Shots On Target\": formAway.avgShotsOnTargetAway,\n      \"Average Expected Goals\": formAway.avgXGScoredAway,\n      \"Recent XG\": formAway.last5XGAvgForAway,\n      \"Average Goals\": formAway.avgScoredAway,\n      Corners: formAway.cornersAvAway,\n    };\n\n    const attackingMetricsAway = {\n      \"Average Dangerous Attacks\": formAway.AverageDangerousAttacksOverall,\n      \"Average Shots\": formAway.AverageShots,\n      \"Average Shots On Target\": formAway.AverageShotsOnTargetOverall,\n      \"Average Expected Goals\": formAway.XGOverall,\n      \"Recent XG\": formAway.XGlast5 ? formAway.XGlast5 : formAway.XGOverall,\n      \"Average Goals\":\n        formAway.avgScored !== undefined && formAway.avgScored !== null\n          ? formAway.avgScored\n          : (formAway.ScoredOverall / 10).toFixed(2),\n      Corners: formAway.AverageCorners,\n    };\n\n    const defensiveMetricsHome = {\n      \"Average XG Against\": formHome.XGAgainstAvgOverall,\n      \"Recent XG Against\": formHome.XGAgainstlast5\n        ? formHome.XGAgainstlast5\n        : formHome.XGAgainstAvgOverall,\n      \"Average Goals Against\": formHome.avgConceeded,\n      \"Average SOT Against\": formHome.AverageShotsOnTargetAgainstOverall,\n    };\n\n    const defensiveMetricsAway = {\n      \"Average XG Against\": formAway.XGAgainstAvgOverall,\n      \"Recent XG Against\": formAway.XGAgainstlast5\n        ? formAway.XGAgainstlast5\n        : formAway.XGAgainstAvgOverall,\n      \"Average Goals Against\":\n        formAway.averageConceededLeague !== null\n          ? formAway.averageConceededLeague\n          : formAway.ConcededAverage.toFixed(2),\n      \"Average SOT Against\": formAway.AverageShotsOnTargetAgainstOverall,\n    };\n\n    const defensiveMetricsHomeOnly = {\n      \"Average XG Against\": formHome.avgXGConceededHome,\n      \"Recent XG Against\": formHome.last5XGAvgAgainstHome,\n      \"Average Goals Against\": formHome.teamConceededAvgHomeOnly,\n      \"Average SOT Against\": formHome.avgShotsOnTargetAgainstHome,\n    };\n\n    const defensiveMetricsAwayOnly = {\n      \"Average XG Against\": formAway.avgXGConceededAway,\n      \"Recent XG Against\": formAway.last5XGAvgAgainstAway,\n      \"Average Goals Against\": formAway.teamConceededAvgAwayOnly,\n      \"Average SOT Against\": formAway.avgShotsOnTargetAgainstAway,\n    };\n\n    formHome.attackingMetrics = attackingMetricsHome;\n    formHome.defensiveMetrics = defensiveMetricsHome;\n    formAway.attackingMetrics = attackingMetricsAway;\n    formAway.defensiveMetrics = defensiveMetricsAway;\n\n    formHome.attackingStrength = await calculateAttackingStrength(\n      attackingMetricsHome\n    );\n    formHome.attackingStrengthHomeOnly = await calculateAttackingStrength(\n      attackingMetricsHomeOnly\n    );\n\n    formAway.attackingStrength = await calculateAttackingStrength(\n      attackingMetricsAway\n    );\n    formAway.attackingStrengthAwayOnly = await calculateAttackingStrength(\n      attackingMetricsAwayOnly\n    );\n\n    formHome.defensiveStrength = await calculateDefensiveStrength(\n      defensiveMetricsHome\n    );\n\n    formHome.defensiveStrengthHomeOnly = await calculateDefensiveStrength(\n      defensiveMetricsHomeOnly\n    );\n\n    formAway.defensiveStrength = await calculateDefensiveStrength(\n      defensiveMetricsAway\n    );\n\n    formAway.defensiveStrengthAwayOnly = await calculateDefensiveStrength(\n      defensiveMetricsAwayOnly\n    );\n\n    formHome.possessionStrength = await calculateMetricStrength(\n      \"averagePossession\",\n      formHome.AveragePossessionOverall\n    );\n\n    formHome.possessionStrengthHomeOnly = await calculateMetricStrength(\n      \"averagePossession\",\n      formHome.avgPossessionHome\n    );\n\n    formHome.directnessOverall =\n      (formHome.AverageShots / formHome.AveragePossessionOverall) * 10;\n\n    formHome.directnessHomeOnly =\n      (formHome.avgShotsHome / formHome.avgPossessionHome) * 10;\n\n    formAway.directnessOverall =\n      (formAway.AverageShots / formAway.AveragePossessionOverall) * 10;\n\n    formAway.directnessAwayOnly =\n      (formAway.avgShotsAway / formAway.avgPossessionAway) * 10;\n\n    formHome.directnessOverallStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formHome.directnessOverall\n    );\n\n    formHome.directnessHomeStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formHome.directnessHomeOnly\n    );\n\n    formAway.directnessOverallStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formAway.directnessOverall\n    );\n\n    formAway.directnessAwayStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formAway.directnessAwayOnly\n    );\n\n    formHome.shootingAccuracy =\n      (formHome.AverageShotsOnTargetOverall / formHome.avgShots) *\n      formHome.AverageShotsOnTargetOverall;\n\n    formHome.shootingAccuracyHomeOnly =\n      (formHome.avgShotsOnTargetHome / formHome.avgShotsHome) *\n      formHome.avgShotsOnTargetHome;\n\n    formAway.shootingAccuracy =\n      (formAway.AverageShotsOnTargetOverall / formAway.avgShots) *\n      formAway.AverageShotsOnTargetOverall;\n\n    formAway.shootingAccuracyAwayOnly =\n      (formAway.avgShotsOnTargetAway / formAway.avgShotsAway) *\n      formAway.avgShotsOnTargetAway;\n\n    formHome.accuracyOverallStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formHome.shootingAccuracy\n    );\n\n    formHome.accuracyHomeStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formHome.shootingAccuracyHomeOnly\n    );\n\n    formAway.accuracyOverallStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formAway.shootingAccuracy\n    );\n\n    formAway.accuracyAwayStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formAway.shootingAccuracyAwayOnly\n    );\n\n    formHome.xgForStrength = await calculateMetricStrength(\n      \"xgFor\",\n      formHome.XGOverall\n    );\n\n    formHome.xgForStrengthHomeOnly = await calculateMetricStrength(\n      \"xgFor\",\n      formHome.avgXGScoredHome\n    );\n\n    formHome.xgAgainstStrength = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formHome.XGAgainstAvgOverall\n    );\n\n    formHome.xgAgainstStrengthHomeOnly = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formHome.avgXGConceededHome\n    );\n\n    formAway.possessionStrength = await calculateMetricStrength(\n      \"averagePossession\",\n      formAway.AveragePossessionOverall\n    );\n\n    formAway.possessionStrengthAwayOnly = await calculateMetricStrength(\n      \"averagePossession\",\n      formAway.avgPossessionAway\n    );\n\n    formAway.xgForStrength = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.XGOverall\n    );\n\n    formAway.xgForStrengthAwayOnly = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.avgXGScoredAway\n    );\n\n    formAway.xgAgainstStrength = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formAway.XGAgainstAvgOverall\n    );\n\n    formAway.xgAgainstStrengthAwayOnly = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formAway.avgXGConceededAway\n    );\n\n    formHome.actualToXGDifference = parseInt(\n      await diff(formHome.XGDiffNonAverage, formHome.goalDifference)\n    );\n\n    formAway.actualToXGDifference = parseInt(\n      await diff(formAway.XGDiffNonAverage, formAway.goalDifference)\n    );\n\n    teamComparisonScore = await compareTeams(formHome, formAway, match);\n    teamComparisonScore = teamComparisonScore * 0.14;\n    // LEAVE\n\n    if (teamComparisonScore > 0.5) {\n      teamComparisonScore = 0.5;\n    } else if (teamComparisonScore < -0.5) {\n      teamComparisonScore = -0.5;\n    }\n\n    if (teamComparisonScore < 0) {\n      formHome.teamStrengthWeighting = 1 + teamComparisonScore / 1;\n      formAway.teamStrengthWeighting = 1 - teamComparisonScore / 1;\n    } else if (teamComparisonScore >= 0) {\n      formHome.teamStrengthWeighting = 1 + teamComparisonScore / 1;\n      formAway.teamStrengthWeighting = 1 - teamComparisonScore / 1;\n    }\n\n    // teamComparisonScore = 0;\n\n    match.teamComparisonScore = teamComparisonScore.toFixed(2);\n    // match.goalWeighting = 1 + parseFloat(match.teamComparisonScore)\n    console.log(match.game);\n    console.log(match.teamComparisonScore);\n\n    let team1Metrics = {\n      weighting: formHome.teamStrengthWeighting,\n      // Add other relevant metrics here\n    };\n\n    let team2Metrics = {\n      weighting: formAway.teamStrengthWeighting,\n      // Add other relevant metrics here\n    };\n\n    // pass arrays of league goals and conceeded\n    let scorePredictions;\n    if (\n      formHome.allConceededArrayHome !== undefined &&\n      formAway.allConceededArrayAway !== undefined\n    ) {\n      scorePredictions = await predictScore(\n        formHome.allGoalsArrayHome,\n        formHome.allConceededArrayHome,\n        formAway.allGoalsArrayAway,\n        formAway.allConceededArrayAway,\n        team1Metrics,\n        team2Metrics,\n        match.game\n      );\n    }\n\n    let finalHomeGoals;\n    let finalAwayGoals;\n\n    const homeGoalDiff =\n      formHome.ScoredAverageShortAndLongTerm -\n      formHome.conceededAverageShortAndLongTerm;\n    const awayGoalDiff =\n      formAway.ScoredAverageShortAndLongTerm -\n      formAway.conceededAverageShortAndLongTerm;\n\n    formHome.goalsDifferential =\n      parseFloat(await diff(homeGoalDiff, awayGoalDiff)) / 1;\n    formAway.goalsDifferential =\n      parseFloat(await diff(awayGoalDiff, homeGoalDiff)) / 1;\n\n    formHome.rollingAverageGoalsDifferential = parseFloat(\n      formHome.allTeamGoalsBasedOnAverages -\n        formHome.allTeamGoalsConceededBasedOnAverages\n    );\n    formAway.rollingAverageGoalsDifferential = parseFloat(\n      formAway.allTeamGoalsBasedOnAverages -\n        formAway.allTeamGoalsConceededBasedOnAverages\n    );\n\n    let factorOneHome;\n    let factorOneAway;\n\n    factorOneHome =\n      // homeLeagueOrAllFormAverageGoals * 1 +\n      // formHome.last5Goals * 0.5 +\n      // formAway.last5GoalsConceeded * 0.5 +\n      (formHome.forAndAgainstRollingAvHomeOrAway.goalsFor * 1.5 +\n        formAway.forAndAgainstRollingAvHomeOrAway.goalsAgainst * 1.5 +\n        formHome.forAndAgainstRollingAv.goalsFor * 1 +\n        formAway.forAndAgainstRollingAv.goalsAgainst * 1 +\n        // formHome.allTeamGoalsBasedOnAverages * 1 +\n        // formAway.allTeamGoalsConceededBasedOnAverages * 1 +\n        formHome.XGPrediction.goalsFor * 1 +\n        formAway.XGPrediction.goalsAgainst * 1 +\n        formHome.XGPredictionHome.goalsFor * 2 +\n        formAway.XGPredictionAway.goalsAgainst * 2 +\n        // formHome.XGOverall * 0.5 +\n        // formAway.XGAgainstAvgOverall * 0.5 +\n        last10WeightingHome * 0 +\n        last2WeightingHome * 0) /\n      11;\n\n    factorOneAway =\n      // awayLeagueOrAllFormAverageGoals * 1 +\n      // formAway.last5Goals * 0.5 +\n      // formHome.last5GoalsConceeded * 0.5 +\n      (formAway.forAndAgainstRollingAvHomeOrAway.goalsFor * 1.5 +\n        formHome.forAndAgainstRollingAvHomeOrAway.goalsAgainst * 1.5 +\n        formAway.forAndAgainstRollingAv.goalsFor * 1 +\n        formHome.forAndAgainstRollingAv.goalsAgainst * 1 +\n        // formAway.allTeamGoalsBasedOnAverages * 1 +\n        // formHome.allTeamGoalsConceededBasedOnAverages * 1 +\n        formAway.XGPrediction.goalsFor * 1 +\n        formHome.XGPrediction.goalsAgainst * 1 +\n        formAway.XGPredictionAway.goalsFor * 2 +\n        formHome.XGPredictionHome.goalsAgainst * 2 +\n        // formAway.XGOverall * 0.5 +\n        // formHome.XGAgainstAvgOverall * 0.5 +\n        last10WeightingAway * 0 +\n        last2WeightingAway * 0) /\n      11;\n\n    let factorTwoHome;\n    let factorTwoAway;\n\n    if (\n      scorePredictions !== undefined &&\n      scorePredictions[0].probability !== 1\n    ) {\n      factorTwoHome = scorePredictions[0].team1Score;\n      factorTwoAway = scorePredictions[0].team2Score;\n    } else {\n      factorTwoHome = factorOneHome;\n      factorTwoAway = factorOneAway;\n    }\n\n    let homeComparisonWeighting;\n    let awayComparisonWeighting;\n    match.scoreDiff = await diff(factorOneHome, factorOneAway);\n\n    if (teamComparisonScore > 0) {\n      homeComparisonWeighting = 1 + Math.abs(teamComparisonScore);\n      awayComparisonWeighting = 1 + -Math.abs(teamComparisonScore);\n    } else if (teamComparisonScore < 0) {\n      homeComparisonWeighting = 1 + -Math.abs(teamComparisonScore);\n      awayComparisonWeighting = 1 + Math.abs(teamComparisonScore);\n    } else {\n      homeComparisonWeighting = 1;\n      awayComparisonWeighting = 1;\n    }\n\n    console.log(match.game);\n    console.log(formHome);\n    console.log(formAway);\n\n    let experimentalHomeGoals =\n      (((factorOneHome * 1.25 + factorTwoHome * 0) * homeComparisonWeighting) /\n        1.25) *\n      1;\n    // (formHome.forAndAgainstRollingAvHomeOrAway.goalsFor + formAway.forAndAgainstRollingAvHomeOrAway.goalsAgainst) / 2\n\n    let experimentalAwayGoals =\n      (((factorOneAway * 1.25 + factorTwoAway * 0) * awayComparisonWeighting) /\n        1.25) *\n      1;\n    // (formAway.forAndAgainstRollingAvHomeOrAway.goalsFor + formHome.forAndAgainstRollingAvHomeOrAway.goalsAgainst) / 2\n\n    let rawFinalHomeGoals = experimentalHomeGoals;\n    let rawFinalAwayGoals = experimentalAwayGoals;\n\n    match.rawFinalHomeGoals = rawFinalHomeGoals;\n    match.rawFinalAwayGoals = rawFinalAwayGoals;\n\n    if (\n      formHome.CleanSheetPercentage > 30 &&\n      formAway.CleanSheetPercentage > 30\n    ) {\n      rawFinalHomeGoals = rawFinalHomeGoals - 1;\n      rawFinalAwayGoals = rawFinalAwayGoals - 1;\n    }\n\n    // finalHomeGoals = await roundCustom(rawFinalHomeGoals, formHome);\n    // finalAwayGoals = await roundCustom(rawFinalAwayGoals, formAway);\n\n    finalHomeGoals = Math.round(rawFinalHomeGoals);\n    finalAwayGoals = Math.round(rawFinalAwayGoals);\n\n    if (finalHomeGoals > formHome.averageScoredLeague + 2) {\n      finalHomeGoals = Math.round(\n        (finalHomeGoals + formHome.averageScoredLeague) / 2\n      );\n    }\n\n    if (finalAwayGoals > formAway.averageScoredLeague + 2) {\n      finalAwayGoals = Math.round(\n        (finalAwayGoals + formAway.averageScoredLeague) / 2\n      );\n    }\n\n    if (finalAwayGoals < 0) {\n      let difference = Math.abs(\n        parseFloat((await diff(0, finalAwayGoals)) / 2)\n      );\n      rawFinalHomeGoals = rawFinalHomeGoals + difference;\n      finalAwayGoals = 0;\n    }\n\n    if (finalHomeGoals < 0) {\n      let difference = Math.abs(\n        parseFloat((await diff(0, finalHomeGoals)) / 2)\n      );\n      rawFinalAwayGoals = rawFinalAwayGoals + difference;\n      finalHomeGoals = 0;\n    }\n\n    console.log(match.omit);\n\n    if (match.status !== \"suspended\") {\n      if (finalHomeGoals > finalAwayGoals) {\n        match.prediction = \"homeWin\";\n        homePredictions = homePredictions + 1;\n        if (\n          formHome.lastGame === \"L\" ||\n          formHome.last2Points < 3 ||\n          formAway.last2Points > 4 ||\n          formHome.oddsReliabilityWin < 50\n        ) {\n          match.includeInMultis = false;\n        } else {\n          match.includeInMultis = true;\n        }\n      } else if (finalAwayGoals > finalHomeGoals) {\n        match.prediction = \"awayWin\";\n        awayPredictions = awayPredictions + 1;\n        if (\n          formAway.lastGame === \"L\" ||\n          formAway.last2Points < 3 ||\n          formHome.last2Points > 4 ||\n          formAway.oddsReliabilityWin < 50\n        ) {\n          match.includeInMultis = false;\n        } else {\n          match.includeInMultis = true;\n        }\n      } else if (finalHomeGoals === finalAwayGoals) {\n        match.prediction = \"draw\";\n        drawPredictions = drawPredictions + 1;\n      }\n    }\n\n    console.log(`drawPredictions: ${drawPredictions}`);\n\n    if (\n      (XGdifferential > 1 && match.prediction === \"homeWin\") ||\n      (XGdifferential < -1.6 && match.prediction === \"awayWin\")\n    ) {\n      match.XGdifferential = true;\n    } else {\n      match.XGdifferential = false;\n    }\n\n    if (\n      (pointsDiff10 > 1.2 && match.prediction === \"homeWin\") ||\n      (pointsDiff10 < -1.2 && match.prediction === \"awayWin\")\n    ) {\n      match.pointsDifferential = true;\n      match.pointsDifferentialValue = Math.abs(pointsDiff10);\n      match.pointsDifferentialValueRaw = parseFloat(pointsDiff10);\n    } else {\n      match.pointsDiff10 = false;\n      match.pointsDifferentialValue = Math.abs(pointsDiff10);\n      match.pointsDifferentialValueRaw = parseFloat(pointsDiff10);\n    }\n\n    let rollingGoalDiffDifferential = await diff(\n      formHome.rollingAverageGoalsDifferential,\n      formAway.rollingAverageGoalsDifferential\n    );\n\n    if (\n      (rollingGoalDiffDifferential > 1.5 && match.prediction === \"homeWin\") ||\n      (rollingGoalDiffDifferential < -1.5 && match.prediction === \"awayWin\")\n    ) {\n      match.rollingGoalDiff = true;\n      match.rollingGoalDiffValue = rollingGoalDiffDifferential;\n    } else {\n      match.rollingGoalDiff = false;\n      match.rollingGoalDiffValue = rollingGoalDiffDifferential;\n    }\n\n    let dangerousAttacksDifferential = await diff(\n      formHome.AverageDangerousAttacksOverall,\n      formAway.AverageDangerousAttacksOverall\n    );\n\n    if (\n      (dangerousAttacksDifferential > 20 && match.prediction === \"homeWin\") ||\n      (dangerousAttacksDifferential < -20 && match.prediction === \"awayWin\")\n    ) {\n      match.dangerousAttacksDiff = true;\n      match.dangerousAttacksDiffValue = dangerousAttacksDifferential;\n    } else {\n      match.dangerousAttacksDiff = false;\n      match.dangerousAttacksDiffValue = dangerousAttacksDifferential;\n    }\n\n    switch (true) {\n      case match.status !== \"complete\":\n        break;\n      case match.homeGoals > match.awayGoals:\n        match.winner = match.homeTeam;\n        match.outcome = \"homeWin\";\n        homeOutcomes = homeOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formHome.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formAway.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formHome.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formAway.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formHome.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formAway.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formHome.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formAway.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += homeOdds;\n        sumOddsLoss = sumOddsLoss += awayOdds;\n        sumXGForWin = sumXGForWin += formHome.XGOverall;\n        sumXGForLoss = sumXGForLoss += formAway.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formHome.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formAway.XGAgainstAvgOverall;\n        break;\n      case match.homeGoals === match.awayGoals:\n        match.winner = \"draw\";\n        match.outcome = \"draw\";\n        allOutcomes = allOutcomes + 1;\n        allDrawOutcomes = allDrawOutcomes + 1;\n        break;\n      case match.homeGoals < match.awayGoals:\n        match.winner = match.awayTeam;\n        match.outcome = \"awayWin\";\n        allOutcomes = allOutcomes + 1;\n        awayOutcomes = awayOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formAway.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formHome.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formAway.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formHome.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formAway.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formHome.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formAway.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formHome.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += awayOdds;\n        sumOddsLoss = sumOddsLoss += homeOdds;\n        sumXGForWin = sumXGForWin += formAway.XGOverall;\n        sumXGForLoss = sumXGForLoss += formHome.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formAway.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formHome.XGAgainstAvgOverall;\n        break;\n      default:\n        break;\n    }\n\n    console.log(`allDrawOutcomes: ${allDrawOutcomes}`);\n\n    if (match.status === \"complete\") {\n      if (match.prediction === match.outcome) {\n        match.predictionOutcome = \"Won\";\n        winAmount = winAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      } else if (match.prediction !== match.outcome) {\n        match.predictionOutcome = \"Lost\";\n        lossAmount = lossAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      }\n    }\n\n    if (match.status === \"complete\") {\n      if (match.homeGoals + match.awayGoals > 2) {\n        match.over25PredictionOutcome = \"Won\";\n      } else {\n        match.over25PredictionOutcome = \"Lost\";\n      }\n    }\n\n    if (\n      match.status === \"complete\" &&\n      match.homeGoals > 0 &&\n      match.awayGoals > 0\n    ) {\n      match.bttsOutcome = \"bttsWon\";\n    } else {\n      match.bttsOutcome = \"bttsLost\";\n    }\n\n    match.formHome = formHome;\n    match.formAway = formAway;\n\n    // formObjectHome = formHome;\n    // formObjectAway = formAway;\n\n    // console.log(formObjectHome)\n    // console.log(formObjectAway)\n\n    let total = parseInt(finalHomeGoals + finalAwayGoals);\n    totalGoals = totalGoals + total;\n\n    let total2 = parseInt(match.homeGoals + match.awayGoals);\n    totalGoals2 = totalGoals2 + total2;\n\n    numberOfGames = numberOfGames + 1;\n\n    if (finalHomeGoals < 0) {\n      finalHomeGoals = 0;\n    }\n\n    if (finalAwayGoals < 0) {\n      finalAwayGoals = 0;\n    }\n\n    if (match.status === \"suspended\") {\n      finalHomeGoals = \"P\";\n      finalAwayGoals = \"P\";\n    }\n\n    if (\n      finalHomeGoals > finalAwayGoals &&\n      (match.homeOdds < rangeValue[0] || match.homeOdds > rangeValue[1])\n    ) {\n      match.omit = true;\n    } else if (\n      finalAwayGoals > finalHomeGoals &&\n      (match.awayOdds < rangeValue[0] || match.awayOdds > rangeValue[1])\n    ) {\n      match.omit = true;\n    } else if (\n      finalHomeGoals === finalAwayGoals &&\n      (match.drawOdds < rangeValue[0] || match.drawOdds > rangeValue[1])\n    ) {\n      match.omit = true;\n    }\n\n    const last10PointDiffHomePerspective = Math.abs(\n      formHome.last10Points - formAway.last10Points\n    );\n\n    const last10PointDiffAwayPerspective = Math.abs(\n      formAway.last10Points - formHome.last10Points\n    );\n\n    const XGDiffBetweenTeamsHomePerspective = Math.abs(\n      formHome.XGDiffNonAverage - formAway.XGDiffNonAverage\n    );\n    const XGDiffBetweenTeamsAwayPerspective = Math.abs(\n      formAway.XGDiffNonAverage - formHome.XGDiffNonAverage\n    );\n\n    switch (true) {\n      case finalHomeGoals > finalAwayGoals:\n        if (minimumXG !== 0 && XGDiffBetweenTeamsHomePerspective < minimumXG) {\n          match.omit = true;\n        }\n        if (\n          minimumLast10 !== 0 &&\n          last10PointDiffHomePerspective < minimumLast10\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGDHorA !== 0 &&\n          match.goalDiffHomeOrAwayComparison < minimumGDHorA\n        ) {\n          match.omit = true;\n        }\n        if (minimumGD !== 0 && match.goalDifferenceComparison < minimumGD) {\n          match.omit = true;\n        }\n        break;\n      case finalHomeGoals < finalAwayGoals:\n        if (minimumXG !== 0 && XGDiffBetweenTeamsAwayPerspective < minimumXG) {\n          match.omit = true;\n        }\n        if (\n          minimumLast10 !== 0 &&\n          last10PointDiffAwayPerspective < minimumLast10\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGDHorA !== 0 &&\n          Math.abs(match.goalDiffHomeOrAwayComparison) < minimumGDHorA\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGD !== 0 &&\n          Math.abs(match.goalDifferenceComparison) < minimumGD\n        ) {\n          match.omit = true;\n        }\n        break;\n      case finalHomeGoals === finalAwayGoals:\n        if (\n          minimumXG !== 0 &&\n          Math.abs(XGDiffBetweenTeamsHomePerspective) < minimumXG\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumLast10 !== 0 &&\n          last10PointDiffHomePerspective < minimumLast10\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGDHorA !== 0 &&\n          Math.abs(match.goalDiffHomeOrAwayComparison) < minimumGDHorA\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGD !== 0 &&\n          Math.abs(match.goalDifferenceComparison) < minimumGD\n        ) {\n          match.omit = true;\n        }\n        break;\n      default:\n        break;\n    }\n\n    if (\n      match.game_week < 0\n      // match.omit === true\n      // match.game_week < 3 &&\n    ) {\n      finalHomeGoals = \"-\";\n      finalAwayGoals = \"-\";\n      match.status = \"notEnoughData\";\n    }\n\n    return [\n      finalHomeGoals,\n      finalAwayGoals,\n      rawFinalHomeGoals,\n      rawFinalAwayGoals,\n    ];\n  } else {\n    finalHomeGoals = \"\";\n    finalAwayGoals = \"\";\n    rawFinalHomeGoals = \"\";\n    rawFinalAwayGoals = \"\";\n    match.status = \"notEnoughData\";\n    match.profit = 0;\n  }\n\n  return [finalHomeGoals, finalAwayGoals, rawFinalHomeGoals, rawFinalAwayGoals];\n}\n\nasync function getSuccessMeasure(fixtures) {\n  let sumProfit = 0;\n  let investment = 0;\n  let exactScores = 0;\n  let successCount = 0;\n  let profit = 0;\n  let netProfit = 0;\n\n  // await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}tips/${dateStamp}`, {\n  //   method: \"PUT\",\n  //   headers: {\n  //     Accept: \"application/json\",\n  //     \"Content-Type\": \"application/json\",\n  //   },\n  //   body: JSON.stringify(matches)\n  // })\n\n  for (let i = 0; i < fixtures.length; i++) {\n    if (\n      fixtures[i].status === \"complete\" &&\n      fixtures[i].hasOwnProperty(\"prediction\") &&\n      fixtures[i].omit !== true\n    ) {\n      sumProfit = sumProfit + fixtures[i].profit;\n      investment = investment + 1;\n      netProfit = (sumProfit - investment).toFixed(2);\n      profit = parseFloat(netProfit);\n      if (fixtures[i].exactScore === true) {\n        exactScores = exactScores + 1;\n      }\n      if (fixtures[i].predictionOutcome === \"Won\") {\n        successCount = successCount + 1;\n      }\n    }\n  }\n\n  totalInvestment = totalInvestment + investment;\n  totalProfit = totalProfit + profit;\n  let ROI = (profit / investment) * 100;\n  totalROI = (totalProfit / totalInvestment) * 100;\n  console.log(`Total Profit : ${totalProfit}`);\n  console.log(`Total Investment : ${totalInvestment}`);\n  console.log(`Total ROI : ${totalROI}`);\n  var operand = ROI >= 0 ? \"+\" : \"\";\n  var operandTwo = totalROI >= 0 ? \"+\" : \"\";\n  let exactScoreHitRate = ((exactScores / investment) * 100).toFixed(1);\n  let successRate = ((successCount / investment) * 100).toFixed(1);\n\n  if (investment > 0) {\n    ReactDOM.render(\n      <Fragment>\n        <Div\n          className={\"SuccessMeasure\"}\n          text={`ROI for \n            all ${investment} W/D/W \n            outcomes: ${operand} ${ROI.toFixed(2)}%`}\n        />\n        <p>{`Correct W/D/W predictions: ${successCount} (${successRate}%)`}</p>\n        <p>{`Exact scores predicted: ${exactScores} (${exactScoreHitRate}%)`}</p>\n        <Div\n          className={\"SuccessMeasure\"}\n          text={`Cumalative ROI for \n            all ${totalInvestment} match outcomes: ${operandTwo} ${totalROI.toFixed(\n            2\n          )}%`}\n        />\n      </Fragment>,\n      document.getElementById(\"successMeasure2\")\n    );\n  } else {\n    return;\n  }\n}\n\nexport var tips = [];\nexport var allTips = [];\nlet allTipsSorted = [];\nvar newArray = [];\nvar bestBets = [];\nvar price;\nvar Over25Tips = [];\nvar XGDiffTips = [];\nvar rollingDiffTips = [];\nvar dangerousAttacksDiffTips = [];\nvar pointsDiffTips = [];\nvar combinations;\nvar exoticArray = [];\nvar gamesInExotic;\nvar minimumExotic;\nvar exoticStake;\nvar exoticString;\nvar bttsArray = [];\nvar accumulatedOdds = 1;\nlet predictions = [];\n\nexport async function getNewTips(array) {\n  // allTips = [];\n  newArray = [];\n  accumulatedOdds = 1;\n\n  if (array.length > 1 && incrementValue > 0) {\n    array.forEach((tip) => {\n      if (\n        array.indexOf(tip) < incrementValue\n        // tip.goalDifferential >= incrementValue && tip.comparisonScore > 0\n      ) {\n        newArray.push(tip);\n        accumulatedOdds = parseFloat(accumulatedOdds) * parseFloat(tip.rawOdds);\n      }\n    });\n  }\n  await renderTips(newArray);\n}\n\nexport async function getScorePrediction(day, mocked) {\n  let mock = mocked;\n  clicked = true;\n  tips = [];\n  bestBets = [];\n  // price = 0\n  bttsArray = [];\n  Over25Tips = [];\n  XGDiffTips = [];\n  pointsDiffTips = [];\n  rollingDiffTips = [];\n  dangerousAttacksDiffTips = [];\n  allTips = [];\n\n  let index = 2;\n  let divider = 10;\n\n  ReactDOM.render(<div></div>, document.getElementById(\"GeneratePredictions\"));\n\n  await Promise.all(\n    matches.map(async (match) => {\n      // if there are no stored predictions, calculate them based on live data\n      if (match) {\n        switch (true) {\n          case match.status === \"canceled\":\n            match.goalsA = \"P\";\n            match.goalsB = \"P\";\n            await calculateScore(match, index, divider, false);\n            break;\n          case match.leagueID === 6935 ||\n            match.leagueID === 7061 ||\n            (match.game_week < 3 && match.game_week !== 0):\n            match.goalsA = \"x\";\n            match.goalsB = \"x\";\n            await calculateScore(match, index, divider, false);\n            break;\n          default:\n            [\n              match.goalsA,\n              match.goalsB,\n              match.unroundedGoalsA,\n              match.unroundedGoalsB,\n            ] = await calculateScore(match, index, divider, true);\n            break;\n        }\n      } else {\n        [\n          match.goalsA,\n          match.goalsB,\n          match.unroundedGoalsA,\n          match.unroundedGoalsB,\n        ] = await calculateScore(match, index, divider, true);\n      }\n\n      await getBTTSPotential(\n        match,\n        match.goalsA,\n        match.goalsB,\n        match.unroundedGoalsA,\n        match.unroundedGoalsB\n      );\n\n      let predictionObject;\n      let Over25PredictionObject;\n      let XGPredictionObject;\n      let pointsDiffObject;\n      let rollingDiffObject;\n      let dangerousAttacksDiffObject;\n\n      if (match.status === \"complete\" && match.prediction) {\n        match.outcomeSymbol =\n          match.predictionOutcome === \"Won\" ? \"\\u2714\" : \"\\u2718\";\n        match.over25PredictionOutcomeSymbol =\n          match.over25PredictionOutcome === \"Won\" ? \"\\u2714\" : \"\\u2718\";\n        match.bttsOutcomeSymbol =\n          match.bttsOutcome === \"bttsWon\" ? \"\\u2714\" : \"\\u2718\";\n      } else {\n        match.outcomeSymbol = \"\";\n        match.over25PredictionOutcomeSymbol = \"\";\n        match.bttsOutcomeSymbol = \"\";\n      }\n\n      if (\n        match.unroundedGoalsA - match.unroundedGoalsB > 0.65 &&\n        match.homeOdds !== 0 &&\n        match.fractionHome !== \"N/A\" &&\n        match.includeInMultis !== false &&\n        match.omit !== true\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.status !== \"notEnoughData\" &&\n          match.homeOdds < 3\n        ) {\n          predictionObject = {\n            team: `${match.homeTeam} to win`,\n            game:\n              match.status === \"complete\"\n                ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n                : match.game,\n            odds: match.fractionHome,\n            rawOdds: match.homeOdds,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            outcome: match.predictionOutcome,\n            outcomeSymbol: match.outcomeSymbol,\n            goalDifferential: parseFloat(\n              await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n            ),\n            experimentalCalc: (\n              (match.unroundedGoalsA - match.unroundedGoalsB) *\n              Math.abs(match.teamComparisonScore)\n            ).toFixed(2),\n            XGdifferentialValue: parseFloat(match.XGdifferentialValue),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formHome.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n\n            if (\n              match.unroundedGoalsA - match.unroundedGoalsB >\n              incrementValue\n            ) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      } else if (\n        match.unroundedGoalsB - match.unroundedGoalsA > 1.75 &&\n        match.awayOdds !== 0 &&\n        match.fractionAway !== \"N/A\" &&\n        match.includeInMultis !== false &&\n        match.omit !== true\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.status !== \"notEnoughData\" &&\n          match.awayOdds < 3.5\n        ) {\n          predictionObject = {\n            team: `${match.awayTeam} to win`,\n            game:\n              match.status === \"complete\"\n                ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n                : match.game,\n            rawOdds: match.awayOdds,\n            odds: match.fractionAway,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            outcome: match.predictionOutcome,\n            outcomeSymbol: match.outcomeSymbol,\n            goalDifferential:\n              parseFloat(\n                await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n              ) - 1,\n            experimentalCalc: (\n              (match.unroundedGoalsB - match.unroundedGoalsA) *\n              Math.abs(match.teamComparisonScore)\n            ).toFixed(2),\n            XGdifferentialValue: parseFloat(match.XGdifferentialValue),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formAway.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n            if (match.unroundedGoalsB - match.unroundedGoalsA > 2) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      }\n\n      if (\n        match.btts === true &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\" &&\n        match.status !== \"notEnoughData\"\n      ) {\n        bttsArray.push(match);\n      }\n      if (\n        match.unroundedGoalsA + match.unroundedGoalsB > 3.35 &&\n        match.goalsA + match.goalsB > 2 &&\n        match.GoalsInGamesAverageHome > 2.75 &&\n        match.GoalsInGamesAverageAway > 2.75\n      ) {\n        Over25PredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: match.homeTeam,\n          decimalOdds: match.homeDoubleChance,\n          rawOdds: match.over25Odds,\n          odds: match.over25Odds,\n          comparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.over25PredictionOutcomeSymbol,\n          doubleChanceOutcome: match.over25PredictionOutcome,\n          goalTotalUnrounded: match.unroundedGoalsA + match.unroundedGoalsB,\n        };\n        Over25Tips.push(Over25PredictionObject);\n      }\n\n      if (\n        match.XGdifferential === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        XGPredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          XGdifferentialValue: match.XGdifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        XGDiffTips.push(XGPredictionObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        XGPredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          XGdifferentialValue: match.XGdifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        XGDiffTips.push(XGPredictionObject);\n      }\n\n      if (\n        match.pointsDifferential === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        pointsDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          pointsDifferentialValue: match.pointsDifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        pointsDiffTips.push(pointsDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        pointsDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          pointsDifferentialValue: match.pointsDifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        pointsDiffTips.push(pointsDiffObject);\n      }\n\n      if (\n        match.rollingGoalDiff === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        rollingDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        rollingDiffTips.push(rollingDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        rollingDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        rollingDiffTips.push(rollingDiffObject);\n      }\n\n      if (\n        match.dangerousAttacksDiff === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        dangerousAttacksDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        dangerousAttacksDiffTips.push(dangerousAttacksDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        dangerousAttacksDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        dangerousAttacksDiffTips.push(dangerousAttacksDiffObject);\n      }\n\n      predictions.push(match);\n    })\n  );\n  ReactDOM.render(\n    <RenderAllFixtures matches={matches} result={true} bool={mock} />,\n    document.getElementById(\"FixtureContainer\")\n  );\n  await getSuccessMeasure(matches);\n  await getMultis();\n  await getNewTips(allTipsSorted);\n\n  // await renderTips();\n}\n\nasync function getMultis() {\n  allTipsSorted = allTips.sort(function (a, b) {\n    return b.goalDifferential - a.goalDifferential;\n  });\n\n  bestBets.sort(function (a, b) {\n    if (a.goalDifferential === b.goalDifferential) {\n      return b.comparisonScore - a.comparisonScore;\n    } else {\n      return b.goalDifferential > a.goalDifferential ? 1 : -1;\n    }\n  });\n\n  bttsArray.sort(function (a, b) {\n    return b.combinedBTTS - a.combinedBTTS;\n  });\n\n  Over25Tips.sort(function (a, b) {\n    return b.goalTotalUnrounded - a.goalTotalUnrounded;\n  });\n\n  XGDiffTips.sort(function (a, b) {\n    return Math.abs(b.XGdifferentialValue) - Math.abs(a.XGdifferentialValue);\n  });\n\n  pointsDiffTips.sort(function (a, b) {\n    return (\n      Math.abs(b.pointsDifferentialValue) - Math.abs(a.pointsDifferentialValue)\n    );\n  });\n\n  rollingDiffTips.sort(function (a, b) {\n    return Math.abs(b.rollingGoalDiffValue) - Math.abs(a.rollingGoalDiffValue);\n  });\n\n  dangerousAttacksDiffTips.sort(function (a, b) {\n    return (\n      Math.abs(b.dangerousAttacksDiffValue) -\n      Math.abs(a.dangerousAttacksDiffValue)\n    );\n  });\n\n  exoticArray = [];\n  gamesInExotic = 0;\n  exoticStake = 0;\n  exoticString = \"\";\n\n  switch (true) {\n    case allTips.length >= 10:\n      for (let i = 0; i < 10; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 10;\n      minimumExotic = 8;\n      exoticStake = 0.1;\n      exoticString = \"45 8-folds, 10 9-folds and 1 10-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 9:\n      for (let i = 0; i < 9; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 9;\n      minimumExotic = 7;\n      exoticStake = 0.1;\n      exoticString = \"36 7-folds, 9 8-folds and 1 9-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 8:\n      for (let i = 0; i < 8; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 8;\n      minimumExotic = 6;\n      exoticStake = 0.1;\n      exoticString = \"28 6-folds, 8 7-folds and 1 8-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 7:\n      for (let i = 0; i < 7; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 7;\n      minimumExotic = 6;\n      exoticStake = 1;\n      exoticString = \"7 6-folds and 1 7-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 6:\n      for (let i = 0; i < 6; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 6;\n      minimumExotic = 5;\n      exoticStake = 1;\n      exoticString = \"6 5-folds and 1 6-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 5:\n      for (let i = 0; i < 5; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 5;\n      minimumExotic = 4;\n      exoticStake = 1;\n      exoticString = \"5 4-folds and 1 5-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case Over25Tips.length >= 4:\n      for (let i = 0; i < 4; i++) {\n        let game = Over25Tips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 4;\n      minimumExotic = 3;\n      exoticStake = 1;\n      exoticString = \"4 3-folds and 1 4-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    default:\n      break;\n  }\n}\n\nexport function getAccumulatorPrice(priceArray) {\n  var result = 1;\n  for (var i = 0; i < priceArray.length; i++)\n    result = result * priceArray[i].rawOdds;\n\n  return result;\n}\n\nexport function getCoverBetMaxReturns(priceArray, minAccSize, stake) {\n  var total = 0;\n  combinations = 0;\n\n  for (var i = minAccSize; i <= priceArray.length; i++) {\n    var perms = getUniquePermutations(priceArray, i);\n    combinations = combinations + perms.length;\n\n    for (var j = 0; j < perms.length; j++)\n      total += getAccumulatorPrice(perms[j]) * stake;\n  }\n  return parseFloat(total.toFixed(2));\n}\n\nfunction getUniquePermutations(arr, permLength) {\n  if (arr.length <= permLength) return [arr];\n\n  var permutations = [];\n  var newArr = [];\n\n  newArr = arr.slice(0);\n\n  for (var i = 0; i < arr.length; i++) {\n    newArr = arr.slice(0);\n    newArr.splice(i, 1);\n    permutations = twoDimArrayUnion(\n      permutations,\n      getUniquePermutations(newArr, permLength)\n    );\n  }\n  return permutations;\n}\n\nfunction twoDimArrayUnion(arr1, arr2) {\n  for (var i = 0; i < arr2.length; i++) {\n    var duplicate = false;\n\n    for (var j = 0; j < arr1.length; j++)\n      if (arr1[j].length === arr2[i].length)\n        for (var k = 0; k < arr1[j].length; k++)\n          if (arr1[j][k] !== arr2[i][k]) break;\n          else if (k === arr1[j].length - 1) duplicate = true;\n\n    if (!duplicate) arr1.push(arr2[i]);\n  }\n\n  return arr1;\n}\n\nfunction NewlineText(props) {\n  const text = props.text;\n  const newText = text.split(\"\\n\").map((str) => <p>{str}</p>);\n\n  return newText;\n}\n\nasync function renderTips() {\n  if (newArray.length > 0) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <div className=\"BestPredictionsExplainer\">\n                  Add or remove a selection using the buttons below. Predictions\n                  are ordered by confidence in the outcome.\n                </div>\n                {newArray.map((tip) => (\n                  <li key={`${tip.game}acca`}>\n                    <div>\n                      {tip.team}: {tip.odds}{\" \"}\n                      <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                    </div>\n                    <div className=\"TipGame\">{tip.game}</div>\n                  </li>\n                ))}\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  No games fit the criteria\n                </h4>\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  }\n\n  if (exoticArray.length > 4) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Exotic of the day\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  <NewlineText\n                    text={`${gamesInExotic} games: ${exoticString}\\nStake per multi: ${exoticStake} units - ${combinations} combinations\\nTotal stake: ${(\n                      exoticStake * combinations\n                    ).toFixed(2)} unit(s)`}\n                  />\n                  {`Potential winnings: ${price.toFixed(2)} units`}\n                </h4>\n                {exoticArray.map((tip) => (\n                  <li key={tip.team}>\n                    {tip.team}: {tip.odds}{\" \"}\n                    <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                    <div>{tip.game}</div>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Exotic of the day\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  Not enough games for this feature\n                </h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  }\n\n  if (Over25Tips.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Over 2.5 goals tips\"}\n            element={\n              <ul className=\"LongshotPredictions\" id=\"LongshotPredictions\">\n                <h4>Over 2.5 goals</h4>\n                {Over25Tips.map((tip) => (\n                  <li key={tip.team}>\n                    {tip.game} - Odds: {tip.odds}{\" \"}\n                    <span className={`${tip.doubleChanceOutcome}`}>\n                      {tip.outcomeSymbol}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Over 2.5 goals tips\"}\n            element={\n              <ul className=\"LongshotPredictions\" id=\"LongshotPredictions\">\n                <h4>No games fit the criteria</h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  }\n\n  if (bttsArray.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"BTTS games\"}\n            element={\n              <ul className=\"BTTSGames\" id=\"BTTSGames\">\n                <h4>Games with highest chance of BTTS</h4>\n                {bttsArray.map((game) => (\n                  <li key={game.game}>\n                    {`${game.game} odds: ${game.bttsFraction}`}{\" \"}\n                    <span className={game.bttsOutcome}>\n                      {game.bttsOutcomeSymbol}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"BTTS games\"}\n            element={\n              <ul className=\"BTTSGames\" id=\"BTTSGames\">\n                <h4>No games fit the criteria</h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  }\n\n  ReactDOM.render(\n    <div>\n      <Collapsable\n        buttonText={\"XG tips\"}\n        element={\n          <Slider\n            element={\n              XGDiffTips.length > 0 ? (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>Games with greatest XG Differentials</h4>\n                  {XGDiffTips.map((tip) => (\n                    <li key={tip.game}>\n                      {tip.game} | {tip.prediction} {tip.odds}{\" \"}\n                      <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>Games with greatest XG Differentials</h4>\n                  <li key={\"noPPGDiff\"}>\n                    Sorry, no games fit this criteria today\n                  </li>\n                </ul>\n              )\n            }\n            element2={\n              pointsDiffTips.length > 0 ? (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest points per game differentials (last 10)\n                  </h4>\n                  {pointsDiffTips.map((game) => (\n                    <li key={game.game}>\n                      {game.game} | {game.prediction} {game.odds}{\" \"}\n                      <span className={game.outcome}>{game.outcomeSymbol}</span>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest points per game differentials (last 10)\n                  </h4>\n                  <li key={\"noPPGDiff\"}>\n                    Sorry, no games fit this criteria today\n                  </li>\n                </ul>\n              )\n            }\n            element3={\n              rollingDiffTips.length > 0 ? (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest rolling goal difference differentials\n                  </h4>\n                  {rollingDiffTips.map((game) => (\n                    <li key={game.game}>\n                      {game.game} | {game.prediction} {game.odds}{\" \"}\n                      <span className={game.outcome}>{game.outcomeSymbol}</span>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest rolling goal difference differentials\n                  </h4>\n                  <li key={\"noPPGDiff\"}>\n                    Sorry, no games fit this criteria today\n                  </li>\n                </ul>\n              )\n            }\n            element4={\n              dangerousAttacksDiffTips.length > 0 ? (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest average dangerous attacks differentials\n                  </h4>\n                  {dangerousAttacksDiffTips.map((game) => (\n                    <li key={game.game}>\n                      {game.game} | {game.prediction} {game.odds}{\" \"}\n                      <span className={game.outcome}>{game.outcomeSymbol}</span>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest average dangerous attacks differentials\n                  </h4>\n                  <li key={\"noPPGDiff\"}>\n                    Sorry, no games fit this criteria today\n                  </li>\n                </ul>\n              )\n            }\n            element5={\n              <div className=\"DonationButton\">\n                <h2>Help with running costs</h2>\n                <h4>\n                  Monthly costs are rising and each donation helps keep XG\n                  Tipping free to use\n                </h4>\n                <StyledKofiButton buttonText=\"No sign up donation\" />\n              </div>\n            }\n          ></Slider>\n        }\n      ></Collapsable>\n      <div className=\"FiltersSelected\">\n        <h4>Filters selected:</h4>\n        <ul className=\"FiltersSelectedList\">\n          <li>Minimum goal difference spread: {minimumGD}</li>\n          <li>\n            Minimum goal difference spread (home or away only): {minimumGDHorA}\n          </li>\n          <li>Minimum XG difference spread: {minimumXG}</li>\n          <li>Minimum PPG difference spread: {minimumLast10}</li>\n          <li>\n            Odds range: {rangeValue[0]} - {rangeValue[1]}\n          </li>\n        </ul>\n      </div>\n    </div>,\n    document.getElementById(\"insights\")\n  );\n}\n","import React, { useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Collapsable from \"../components/CollapsableElement\";\nexport var toggleState = false;\nexport var setIsOff = false;\n\nconst upArrow = \"\\u{25B2}\";\n\nconst StyledTableCell2 = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"rgba(226, 226, 226, 1)\",\n    color: \"white\",\n    padding: \"0.35em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    textAlign: \"left\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    fontSize: \"1.9em\",\n    textAlign: \"left\",\n    fontFamily: \"inherit\",\n    padding: \"0.5em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"#030061\",\n  },\n}))(TableCell);\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"white\",\n    color: \"#030061\",\n    padding: \"0.5em\",\n    paddingTop: \"1em\",\n    paddingBottom: \"1em\",\n    textAlign: \"center\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    // backgroundColor: \"#030061\",\n    fontSize: \"1.9em\",\n    textAlign: \"center\",\n    fontFamily: \"inherit\",\n    padding: \"0.35em\",\n    paddingTop: \"1em\",\n    paddingBottom: \"1em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"#030061\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#rgba(226, 226, 226, 0.424)\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#rgba(226, 226, 226, 1)\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\nfunction styleForm(formIndicator) {\n  let className;\n  if (formIndicator === \"W\") {\n    className = \"winLeague\";\n  } else if (formIndicator === \"D\") {\n    className = \"drawLeague\";\n  } else if (formIndicator === \"L\") {\n    className = \"lossLeague\";\n  }\n  return className;\n}\n\nexport default function LeagueTable(props) {\n  [toggleState, setIsOff] = useState(false);\n\n  let rows = props.Teams.map((team, i) => (\n    <StyledTableRow key={`${props.Key}row${i}`}>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${i + 1}`}\n      </StyledTableCell>\n      <StyledTableCell2 component=\"th\" scope=\"row\" style={{ width: \"15em\" }}>\n        {`${team.Name}`}\n      </StyledTableCell2>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Played}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Wins}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Draws}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Losses}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.For}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Against}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.GoalDifference}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Points}`}\n      </StyledTableCell>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ textAlign: \"center\" }}\n      >\n        <span className={styleForm(team.Form[0])}>\n          {team.Form[0] !== undefined ? team.Form[0] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[1])}>\n          {team.Form[1] !== undefined ? team.Form[1] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[2])}>\n          {team.Form[2] !== undefined ? team.Form[2] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[3])}>\n          {team.Form[3] !== undefined ? team.Form[3] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[4])}>\n          {team.Form[4] !== undefined ? team.Form[4] : \"\"}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  ));\n\n  const leagueResults = [];\n  let singleResult;\n  if (props.Results) {\n    props.Results.forEach((result) => {\n      singleResult = (\n        <div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_xg}</span>\n            <span className=\"column\">XG</span>\n            <span className=\"column\">{result.team_b_xg}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shots}</span>\n            <span className=\"column\">Shots</span>\n            <span className=\"column\">{result.team_b_shots}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shotsOnTarget}</span>\n            <span className=\"column\">SOT</span>\n            <span className=\"column\">{result.team_b_shotsOnTarget}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_dangerous_attacks}</span>\n            <span className=\"column\">Dangerous Attacks</span>\n            <span className=\"column\">{result.team_b_dangerous_attacks}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_possession}%</span>\n            <span className=\"column\">Possession</span>\n            <span className=\"column\">{result.team_b_possession}%</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_red_cards}</span>\n            <span className=\"column\">Red cards</span>\n            <span className=\"column\">{result.team_b_red_cards}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.odds_ft_1}</span>\n            <span className=\"column\">Odds (pre-match)</span>\n            <span className=\"column\">{result.odds_ft_2}</span>\n          </div>\n        </div>\n      );\n\n      leagueResults.push(\n        <Collapsable\n          classNameButton=\"ResultButton\"\n          buttonText={\n            <div className=\"ResultRowOverview\">\n              <div className=\"columnOverviewHome\">{result.home_name}</div>\n              <span className=\"columnOverviewScore\">\n                {result.homeGoalCount} : {result.awayGoalCount}\n              </span>\n              <div className=\"columnOverviewAway\">{result.away_name}</div>\n            </div>\n          }\n          element={singleResult}\n        />\n      );\n    });\n  }\n\n  const leagueResultsOlder = [];\n  if (props.LastWeeksResults) {\n    props.LastWeeksResults.forEach((result) => {\n      singleResult = (\n        <div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_xg}</span>\n            <span className=\"column\">XG</span>\n            <span className=\"column\">{result.team_b_xg}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shots}</span>\n            <span className=\"column\">Shots</span>\n            <span className=\"column\">{result.team_b_shots}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shotsOnTarget}</span>\n            <span className=\"column\">SOT</span>\n            <span className=\"column\">{result.team_b_shotsOnTarget}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_dangerous_attacks}</span>\n            <span className=\"column\">Dangerous Attacks</span>\n            <span className=\"column\">{result.team_b_dangerous_attacks}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_possession}</span>\n            <span className=\"column\">Possession</span>\n            <span className=\"column\">{result.team_b_possession}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_red_cards}</span>\n            <span className=\"column\">Red cards</span>\n            <span className=\"column\">{result.team_b_red_cards}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.odds_ft_1}</span>\n            <span className=\"column\">Odds (pre-match)</span>\n            <span className=\"column\">{result.odds_ft_2}</span>\n          </div>\n        </div>\n      );\n\n      leagueResultsOlder.push(\n        <Collapsable\n          classNameButton=\"ResultButton\"\n          buttonText={\n            <div className=\"ResultRowOverview\">\n              <div className=\"columnOverviewHome\">{result.home_name}</div>\n              <span className=\"columnOverviewScore\">\n                {result.homeGoalCount} : {result.awayGoalCount}\n              </span>\n              <div className=\"columnOverviewAway\">{result.away_name}</div>\n            </div>\n          }\n          element={singleResult}\n        />\n      );\n    });\n  }\n\n  function getTopScorersTeam(id) {\n    let found = props.Teams.find((team) => team.ID === id);\n    return found.Name;\n  }\n\n  async function sorted(league, value, order) {\n    let sortedByForm;\n    if (order === \"desc\") {\n      sortedByForm = league.sort((a, b) => b[value] - a[value]);\n    } else {\n      sortedByForm = league.sort((a, b) => a[value] - b[value]);\n    }\n    setIsOff(!toggleState);\n    return sortedByForm;\n  }\n\n  if (\n    props.GamesPlayed > 3 &&\n    props.Teams[0].LeagueID !== 7956 &&\n    props.Teams[0].LeagueID !== 6969 &&\n    props.Teams[0].LeagueID !== 7432\n  ) {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table\n            className=\"Table\"\n            aria-label=\"customized table\"\n            key={props.Key}\n            style={{ marginTop: \"2em\", marginBottom: \"1em\" }}\n          >\n            <TableHead>\n              <TableRow>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"Points\", \"desc\")}\n                  >\n                    Pts {upArrow}\n                  </button>\n                </td>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"LastXPoints\", \"desc\")}\n                  >\n                    Last 5 {upArrow}\n                  </button>\n                </td>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n          <h5>{`${props.mostRecentGameweek} results`}</h5>\n          <div className=\"ResultsList\" id=\"ResultsList\">\n            <ul>{leagueResults}</ul>\n          </div>\n          <div className=\"LeagueStatisticsHeader\">League Statistics</div>\n          <div className=\"LeagueStatistics\">\n            <ul className=\"LeagueStatsColumn\">\n              <li>Average home goals: {props.Stats.seasonAVG_home}</li>\n              <li>Average away goals: {props.Stats.seasonAVG_away}</li>\n              <li>BTTS: {props.Stats.seasonBTTSPercentage}%</li>\n              <li>\n                Over 0.5 goals: {props.Stats.seasonOver05Percentage_overall}%\n              </li>\n              <li>\n                Over 1.5 goals: {props.Stats.seasonOver15Percentage_overall}%\n              </li>\n              <li>\n                Over 2.5 goals: {props.Stats.seasonOver25Percentage_overall}%\n              </li>\n              <li>\n                Over 3.5 goals: {props.Stats.seasonOver35Percentage_overall}%\n              </li>\n              <li>\n                Over 4.5 goals: {props.Stats.seasonOver45Percentage_overall}%\n              </li>\n            </ul>\n            <ul className=\"LeagueStatsColumn\">\n              <li>\n                Over 7.5 corners: {props.Stats.over75CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 8.5 corners: {props.Stats.over85CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 9.5 corners: {props.Stats.over95CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 10.5 corners:{\" \"}\n                {props.Stats.over105CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 11.5 corners:{\" \"}\n                {props.Stats.over115CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 12.5 corners:{\" \"}\n                {props.Stats.over125CornersPercentage_overall}%\n              </li>\n              <li>Corners average: {props.Stats.cornersAVG_overall}</li>\n              <li>Cards average: {props.Stats.cardsAVG_overall}</li>\n            </ul>\n            <ul className=\"TopScorersColumn\">\n              <h4>Top scorers</h4>\n              <li>\n                {props.Stats.top_scorers[0].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[0].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[0].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[1].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[1].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[1].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[2].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[2].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[2].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[3].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[3].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[3].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[4].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[4].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[4].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[5].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[5].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[5].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[6].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[6].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[6].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[7].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[7].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[7].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[8].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[8].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[8].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[9].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[9].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[9].goals_overall}\n              </li>\n            </ul>\n          </div>\n        </TableContainer>\n      );\n    }\n  } else if (props.Teams[0].LeagueID === 4340) {\n    return null;\n  } else {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table aria-label=\"customized table\" key={props.Key}>\n            <TableHead>\n              <TableRow>\n                <button\n                  className=\"SortedColumn\"\n                  style={{ textAlign: \"center\" }}\n                  onClick={() => sorted(props.Teams, \"Position\")}\n                >\n                  {upArrow}\n                </button>{\" \"}\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <StyledTableCell>Pts</StyledTableCell>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"LastXPoints\", \"desc\")}\n                  >\n                    Last 5 {upArrow}\n                  </button>\n                </td>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n        </TableContainer>\n      );\n    }\n  }\n}\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { orderedLeagues } from \"../App\";\nimport { getForm } from \"./getForm\";\nimport { Fixture } from \"../components/Fixture\";\nimport { Button } from \"../components/Button\";\nimport { Slide } from \"../components/Slider\";\nimport { getScorePrediction } from \"../logic/getScorePredictions\";\nimport { ThreeDots } from \"react-loading-icons\";\nimport { selectedOdds } from \"../components/OddsRadio\";\nimport LeagueTable from \"../components/LeagueTable\";\nimport { getPointsFromLastX } from \"../logic/getScorePredictions\";\nimport SlideDiff from \"../components/SliderDiff\";\nimport Collapsable from \"../components/CollapsableElement\";\n\nvar oddslib = require(\"oddslib\");\n\n// require(\"dotenv\").config();\n\nvar fixtureResponse;\nvar fixtureArray = [];\nexport var matches = [];\nexport var resultedMatches = [];\nvar league;\nvar leagueID;\nvar leagueGames = [];\nexport var leagueArray = [];\nvar leagueIdArray = [];\nexport var leagueStatsArray = [];\nexport let leagueInstance;\nexport let groupInstance;\nexport let allLeagueResultsArrayOfObjects = [];\nvar lastThreeFormHome;\nvar lastThreeFormAway;\nvar lastFiveFormHome;\nvar lastFiveFormAway;\nvar lastSixFormHome;\nvar lastSixFormAway;\nvar lastTenFormHome;\nvar lastTenFormAway;\nvar leagueOrAll;\nvar formRunHome;\nvar formRunAway;\nlet WDLinLeagueHome;\nlet WDLinLeagueAway;\nlet HomeAverageGoals;\nlet homeAverageGoals;\nlet HomeAverageConceded;\nlet homeAverageConceded;\nlet AwayAverageGoals;\nlet awayAverageGoals;\nlet AwayAverageConceded;\nlet awayAverageConceded;\n\n// export var [currentDay, month, year] = new Date()\n//   .toLocaleDateString(\"en-US\", { timeZone: \"Europe/London\" })\n//   .split(\"/\");\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nexport let allForm = [];\nexport let tableArray = [];\nexport let worldCupArray = [];\ngroupInstance = [];\nleagueInstance = [];\n\nasync function convertTimestamp(timestamp) {\n  let newDate = new Date(timestamp * 1000);\n  let [day, month, year] = newDate.toLocaleDateString(\"en-US\").split(\"/\");\n\n  let converted = `${year}-${day}-${month}`;\n\n  return converted;\n}\n\nexport async function generateTables(a, leagueIdArray, allResults) {\n  // leagueIdArray = [];\n  tableArray = [];\n  worldCupArray = [];\n  let i = 0;\n  leagueArray.forEach(function (league) {\n    let currentLeagueId = leagueIdArray[i];\n    i++;\n    leagueInstance = [];\n    //Skip MLS which has a weird format\n    if (\n      !league.data.specific_tables[0].groups &&\n      currentLeagueId !== 6969 &&\n      league.data.specific_tables[0].table\n    ) {\n      for (\n        let index = 0;\n        index < league.data.specific_tables[0].table.length;\n        index++\n      ) {\n        let currentTeam = league.data.specific_tables[0].table[index];\n        let last5;\n        if (currentTeam.wdl_record.length < 5) {\n          last5 = currentTeam.wdl_record\n            .slice(`-${currentTeam.wdl_record.length}`)\n            .toUpperCase();\n        } else {\n          last5 = currentTeam.wdl_record.slice(-5).toUpperCase();\n        }\n\n        const team = {\n          LeagueID: currentLeagueId,\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          ID: currentTeam.id,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: last5,\n          LastXPoints: getPointsFromLastX(last5.split(\"\")),\n          Points: currentTeam.points,\n          wdl: currentTeam.wdl_record,\n          seasonGoals: currentTeam.seasonGoals,\n          seasonConceded: currentTeam.seasonConceded,\n        };\n        leagueInstance.push(team);\n      }\n      tableArray.push({ id: currentLeagueId, table: leagueInstance });\n    } else if (currentLeagueId === 7432) {\n      // for (let x = 0; x < league.data.specific_tables[0].groups.length; x++) {\n      // for (\n      //   let index = 0;\n      //   index < league.data.specific_tables[0].groups[x].table.length;\n      //   index++\n      // )\n      league.data.specific_tables[0].groups.forEach((group) => {\n        leagueInstance = [];\n        for (let index = 0; index < group.table.length; index++) {\n          let currentTeam = group.table[index];\n          let last5 = \"N/A\";\n          const team = {\n            LeagueID: currentLeagueId,\n            Position: index + 1,\n            Name: currentTeam.cleanName,\n            ID: currentTeam.id,\n            Played: currentTeam.matchesPlayed,\n            Wins: currentTeam.seasonWins_overall,\n            Draws: currentTeam.seasonDraws_overall,\n            Losses: currentTeam.seasonLosses_overall,\n            For: currentTeam.seasonGoals,\n            Against:\n              currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n            GoalDifference: currentTeam.seasonGoalDifference,\n            Form: last5,\n            LastXPoints: getPointsFromLastX(last5.split(\"\")),\n            Points: currentTeam.points,\n            wdl: currentTeam.wdl_record,\n            seasonGoals: currentTeam.seasonGoals,\n            seasonConceded: currentTeam.seasonConceded,\n          };\n          leagueInstance.push(team);\n        }\n        worldCupArray.push({\n          group: group.name,\n          table: leagueInstance,\n        });\n      });\n    } else if (league.data.league_table === null) {\n      for (\n        let index = 0;\n        index < league.data.all_matches_table_overall.length;\n        index++\n      ) {\n        let currentTeam = league.data.all_matches_table_overall[index];\n        let last5 = \"N/A\";\n        const team = {\n          LeagueID: currentLeagueId,\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          ID: currentTeam.id,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: last5,\n          LastXPoints: getPointsFromLastX(last5.split(\"\")),\n          Points: currentTeam.points,\n          wdl: currentTeam.wdl_record,\n          seasonGoals: currentTeam.seasonGoals,\n          seasonConceded: currentTeam.seasonConceded,\n        };\n        leagueInstance.push(team);\n      }\n\n      tableArray.push({ id: currentLeagueId, table: leagueInstance });\n    }\n  });\n}\n\nexport async function renderTable(index, results, id) {\n  let league;\n  //World cup table rendering\n\n  // let mostRecentGame = results.fixtures.pop();\n  let mostRecentGame = results.fixtures.pop();\n\n  let mostRecentGameweek = \"Latest\";\n\n  const gameweeksResults = results.fixtures.filter(\n    (games) => games.game_week === mostRecentGame.game_week\n  );\n\n  // const lastGameweeksResults = results.fixtures.filter(\n  //   (games) => games.game_week === mostRecentGameweek - 1\n  // );\n\n  const leagueTable = tableArray.filter((table) => table.id === id);\n\n  league = leagueTable[0].table;\n\n  let statistics;\n  let leagueStatistics = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}leagueStats/${id}`\n  );\n  await leagueStatistics.json().then((stats) => {\n    statistics = stats.data;\n  });\n\n  if (league !== undefined) {\n    ReactDOM.render(\n      <LeagueTable\n        Teams={league}\n        Stats={statistics}\n        Key={`League${index}`}\n        GamesPlayed={statistics.game_week}\n        Results={gameweeksResults}\n        mostRecentGameweek={mostRecentGameweek}\n      />,\n      document.getElementById(`leagueName${id}`)\n    );\n  }\n}\n\nasync function createFixture(match, result, mockBool) {\n  let roundedHomeOdds;\n  let roundedAwayOdds;\n  let roundedBTTSOdds;\n  let homeFraction;\n  let awayFraction;\n  let bttsFraction;\n\n  if (selectedOdds === \"Fractional odds\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      roundedHomeOdds = (Math.round(match.homeOdds * 5) / 5).toFixed(1);\n      roundedAwayOdds = (Math.round(match.awayOdds * 5) / 5).toFixed(1);\n\n      if (roundedHomeOdds < 1.1) {\n        roundedHomeOdds = 1.1;\n      }\n      if (roundedAwayOdds < 1.1) {\n        roundedAwayOdds = 1.1;\n      }\n\n      if (match.homeOdds === 0.1 && match.awayOdds === 0.1) {\n        match.homeOdds = 3;\n        roundedHomeOdds = 3;\n        match.awayOdds = 3;\n        roundedAwayOdds = 3;\n      }\n\n      try {\n        homeFraction = oddslib\n          .from(\"decimal\", roundedHomeOdds)\n          .to(\"fractional\", { precision: 1 });\n        awayFraction = oddslib\n          .from(\"decimal\", roundedAwayOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      roundedBTTSOdds = (Math.round(match.bttsOdds * 5) / 5).toFixed(1);\n\n      if (roundedBTTSOdds < 1.1) {\n        roundedBTTSOdds = 1.1;\n      }\n\n      try {\n        bttsFraction = oddslib\n          .from(\"decimal\", roundedBTTSOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  } else if (selectedOdds === \"Decimal odds\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      homeFraction = match.homeOdds;\n      awayFraction = match.awayOdds;\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      bttsFraction = match.bttsOdds;\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  }\n\n  match.omit = false;\n  match.homeTeamWinsPercentage = match.homeTeamWinPercentage;\n  match.homeTeamLossesPercentage = match.homeTeamLossPercentage;\n  match.homeTeamDrawsPercentage = match.homeTeamDrawPercentage;\n\n  match.awayTeamWinsPercentage = match.awayTeamWinPercentage;\n  match.awayTeamLossesPercentage = match.awayTeamLossPercentage;\n  match.awayTeamDrawsPercentage = match.awayTeamDrawPercentage;\n  match.fractionHome = homeFraction;\n  match.fractionAway = awayFraction;\n\n  match.bttsFraction = bttsFraction;\n\n  match.game = match.homeTeam + \" v \" + match.awayTeam;\n\n  // ReactDOM.render(\n  //   <Fixture\n  //     fixtures={matches}\n  //     result={result}\n  //     mock={mockBool}\n  //     className={\"individualFixture\"}\n  //   />,\n  //   document.getElementById(\"FixtureContainer\")\n  // );\n}\n\nexport function RenderAllFixtures(props) {\n  return (\n    <Fixture\n      fixtures={props.matches}\n      result={props.result}\n      mock={false}\n      className={\"individualFixture\"}\n    />\n  );\n}\n//     document.getElementById(\"FixtureContainer\")\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nlet isFunctionRunning = false;\n\nexport async function generateFixtures(\n  day,\n  date,\n  selectedOdds,\n  footyStatsFormattedDate,\n  current,\n  todaysDate\n) {\n  if (!isFunctionRunning) {\n    isFunctionRunning = true;\n\n    // const randomInt = Math.random() * 10\n\n    // if(randomInt >= 7){\n    //   alert(\"XGTipping is now serving over 2000 users a month,1 relying on donations to cover increasing running costs. If you can afford to do so and like what we do, please, help us stay subscription fee today by tapping to Donation button at the bottom of the page\")\n    // }\n\n    ReactDOM.render(\n      <div>\n        <div className=\"LoadingText\">\n          Loading all league, fixture & form data, please be patient...\n        </div>\n        <ThreeDots height=\"3em\" fill=\"#030061\" />\n      </div>,\n      document.getElementById(\"Loading\")\n    );\n\n    //cleanup if different day is selected\n    ReactDOM.render(\n      <div></div>,\n      document.getElementById(\"GeneratePredictions\")\n    );\n    ReactDOM.render(<div></div>, document.getElementById(\"successMeasure2\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"bestPredictions\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"exoticOfTheDay\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"insights\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"longShots\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"BTTS\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"draws\"));\n\n    const url = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${footyStatsFormattedDate}`;\n    const formUrl = `${process.env.REACT_APP_EXPRESS_SERVER}form/${date}`;\n\n    matches = [];\n    fixtureArray = [];\n\n    league = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${todaysDate}`\n    );\n\n    ReactDOM.render(<div></div>, document.getElementById(\"FixtureContainer\"));\n\n    fixtureResponse = await fetch(url);\n\n    await fixtureResponse.json().then((fixtures) => {\n      fixtureArray = Array.from(fixtures.data);\n    });\n\n    let form;\n    let formArray = [];\n    allForm = [];\n    var isFormStored;\n    var isStoredLocally;\n    var leaguesStored = false;\n    let storedForm = await fetch(formUrl);\n    if (storedForm.status === 201 || storedForm.status === 200) {\n      await storedForm.json().then((form) => {\n        formArray = Array.from(form.allForm);\n        isFormStored = true;\n        isStoredLocally = true;\n        allForm = formArray;\n      });\n    } else {\n      isFormStored = false;\n      isStoredLocally = false;\n    }\n\n    leagueIdArray = [];\n    for (let i = 0; i < orderedLeagues.length; i++) {\n      leagueID = orderedLeagues[i].element.id;\n      leagueIdArray.push(leagueID);\n    }\n\n    var leaguePositions = [];\n    leagueArray = [];\n\n    let allLeagueResults;\n\n    allLeagueResults = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}results`\n    );\n\n    if (league.status === 200 && allLeagueResults.status === 201) {\n      console.log(\"Not fetching leagues\");\n      await league.json().then((leagues) => {\n        leagueArray = Array.from(leagues.leagueArray);\n      });\n      updateResults(false);\n\n      await allLeagueResults.json().then((allGames) => {\n        allLeagueResultsArrayOfObjects = Array.from(allGames);\n      });\n\n      console.log(allLeagueResultsArrayOfObjects)\n      leaguesStored = true;\n      generateTables(\n        leagueArray,\n        leagueIdArray,\n        allLeagueResultsArrayOfObjects\n      );\n    } else {\n      allLeagueResultsArrayOfObjects = [];\n      console.log(\"Fetching leagues\");\n      for (let i = 0; i < orderedLeagues.length; i++) {\n        league = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}tables/${orderedLeagues[i].element.id}/${date}`\n        );\n        // eslint-disable-next-line no-loop-func\n        await league.json().then((table) => {\n          leagueArray.push(table);\n        });\n        leaguesStored = false;\n      }\n\n      //set variable for date X amount of days in the past and use that to filter the results\n\n      let startDate = (new Date().getTime() / 1000).toFixed(0);\n      // deduct 3 months\n      let targetDate = startDate - 23778463;\n\n      for (const orderedLeague of orderedLeagues) {\n        let fixtures = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${orderedLeague.element.id}`\n        );\n\n        let games = await fixtures.json();\n        let gamesFiltered;\n        let gamesShortened;\n        if (games.pager.current_page < games.pager.max_page) {\n          const page2 = await fetch(\n            `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${orderedLeague.element.id}&page=2`\n          );\n          let page2Data = await page2.json();\n\n          const gamesConcat = games.data.concat(page2Data.data);\n          const gamesConcatFiltered = gamesConcat.filter((game) => game.status === \"complete\");\n\n          let mostRecentResults = gamesConcatFiltered.filter(\n            (game) => game.date_unix > targetDate\n          );\n          let sorted = mostRecentResults.sort((a, b) => a.date_unix - b.date_unix);\n          gamesShortened = sorted.slice(-600);\n          gamesFiltered = gamesShortened;\n        } else {\n\n          gamesFiltered = games.data.filter(\n            (game) => game.status === \"complete\"\n          );\n\n          if (current) {\n            let mostRecentResults = gamesFiltered.filter(\n              (game) => game.date_unix > targetDate\n            );\n            gamesFiltered = mostRecentResults.slice(-600);\n          }\n        }\n\n        // let mostRecentResults = gamesFiltered.filter(\n        //   (game) => game.date_unix > targetDate\n        // );\n\n        const shortenedResults = gamesFiltered.map(\n          ({\n            home_name,\n            away_name,\n            homeGoalCount,\n            awayGoalCount,\n            date_unix,\n            team_a_xg,\n            team_b_xg,\n            odds_ft_1,\n            odds_ft_2,\n            team_a_shots,\n            team_b_shots,\n            team_a_corners,\n            team_b_corners,\n            team_a_shotsOnTarget,\n            team_b_shotsOnTarget,\n            team_a_red_cards,\n            team_b_red_cards,\n            team_a_possession,\n            team_b_possession,\n            team_a_dangerous_attacks,\n            team_b_dangerous_attacks,\n            pre_match_teamA_overall_ppg,\n            pre_match_teamB_overall_ppg,\n            game_week,\n          }) => ({\n            home_name,\n            away_name,\n            homeGoalCount,\n            awayGoalCount,\n            date_unix,\n            team_a_xg,\n            team_b_xg,\n            odds_ft_1,\n            odds_ft_2,\n            team_a_shots,\n            team_b_shots,\n            team_a_corners,\n            team_b_corners,\n            team_a_shotsOnTarget,\n            team_b_shotsOnTarget,\n            team_a_red_cards,\n            team_b_red_cards,\n            team_a_possession,\n            team_b_possession,\n            team_a_dangerous_attacks,\n            team_b_dangerous_attacks,\n            pre_match_teamA_overall_ppg,\n            pre_match_teamB_overall_ppg,\n            game_week,\n          })\n        );\n\n        let leagueObj = {\n          // leagueObject[orderedLeague] = {\n          name: orderedLeague.name,\n          id: orderedLeague.element.id,\n          fixtures: shortenedResults,\n        };\n\n        allLeagueResultsArrayOfObjects.push(leagueObj);\n      }\n      updateResults(true);\n      generateTables(\n        leagueArray,\n        leagueIdArray,\n        allLeagueResultsArrayOfObjects\n      );\n    }\n\n    let teamPositionPrefix;\n\n    async function getPrefix(position) {\n      switch (position) {\n        case 1:\n        case 21:\n        case 31:\n        case 41:\n          teamPositionPrefix = \"st\";\n          break;\n        case 2:\n        case 22:\n        case 32:\n        case 42:\n          teamPositionPrefix = \"nd\";\n          break;\n        case 3:\n        case 23:\n        case 33:\n        case 43:\n          teamPositionPrefix = \"rd\";\n          break;\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18:\n        case 19:\n        case 20:\n        case 24:\n        case 25:\n        case 26:\n        case 27:\n        case 28:\n        case 29:\n        case 30:\n        case 34:\n        case 35:\n        case 36:\n        case 37:\n        case 38:\n        case 39:\n        case 40:\n        case 44:\n        case 45:\n        case 46:\n        case 47:\n        case 48:\n          teamPositionPrefix = \"th\";\n          break;\n        default:\n          break;\n      }\n      return teamPositionPrefix;\n    }\n\n    for (let i = 0; i < leagueArray.length; i++) {\n      let leagueInstance;\n      let homeLeague;\n      let awayLeague;\n\n      if (leagueArray[i].data.league_table !== null) {\n        leagueInstance = leagueArray[i].data.league_table;\n        homeLeague = leagueArray[i].data.all_matches_table_home;\n        awayLeague = leagueArray[i].data.all_matches_table_away;\n      } else {\n        leagueInstance = leagueArray[i].data.all_matches_table_overall;\n        homeLeague = leagueArray[i].data.all_matches_table_home;\n        awayLeague = leagueArray[i].data.all_matches_table_away;\n      }\n\n      for (let x = 0; x < leagueInstance.length; x++) {\n        let regularSeason = leagueArray[i].data.specific_tables.find(\n          (season) =>\n            season.round === \"Regular Season\" ||\n            season.round === \"2023\" ||\n            season.round === \"2023/2024\" ||\n            season.round === \"Apertura\" ||\n            season.round === \"1st Phase\"\n          // season.round === \"North\" ||\n          // season.round === \"South\"\n        );\n        let string;\n\n        if (regularSeason !== undefined && regularSeason.table) {\n          string = regularSeason.table[x];\n          homeLeague = leagueArray[i].data.all_matches_table_home;\n          awayLeague = leagueArray[i].data.all_matches_table_away;\n        } else {\n          string = leagueArray[i].data.all_matches_table_overall[x];\n          homeLeague = leagueArray[i].data.all_matches_table_home;\n          awayLeague = leagueArray[i].data.all_matches_table_away;\n        }\n\n        let stringHome = homeLeague[x];\n        let stringAway = awayLeague[x];\n\n        leaguePositions.push({\n          name: string.cleanName,\n          position: x + 1,\n          rawPosition: x + 1,\n          homeFormName: stringHome ? stringHome.cleanName : string.cleanName,\n          awayFormName: stringAway ? stringAway.cleanName : string.cleanName,\n          homeSeasonWinPercentage: stringHome\n            ? stringHome.seasonWins\n            : string.seasonWins,\n          awaySeasonWinPercentage: stringAway\n            ? stringAway.seasonWins\n            : string.seasonWins,\n          homeSeasonLossPercentage: stringHome\n            ? stringHome.seasonLosses_home\n            : string.seasonLosses_home,\n          awaySeasonLossPercentage: stringAway\n            ? stringAway.seasonLosses_away\n            : string.seasonLosses_away,\n          homeSeasonDrawPercentage: stringHome\n            ? stringHome.seasonDraws\n            : string.seasonDraws,\n          awaySeasonDrawPercentage: stringAway\n            ? stringAway.seasonDraws\n            : string.seasonDraws,\n          homeSeasonMatchesPlayed: stringHome\n            ? stringHome.matchesPlayed\n            : string.matchesPlayed,\n          awaySeasonMatchesPlayed: stringAway\n            ? stringAway.matchesPlayed\n            : string.matchesPlayed,\n          ppg: string.points / string.matchesPlayed,\n          wdl: string.wdl_record ? string.wdl_record : \"\",\n          played: string.matchesPlayed,\n          seasonGoals: string.seasonGoals,\n          seasonConceded: string.seasonConceded,\n        });\n      }\n    }\n\n    let previousLeagueName;\n\n    for (let i = 0; i < orderedLeagues.length; i++) {\n      leagueID = orderedLeagues[i].element.id;\n      leagueGames = fixtureArray.filter(\n        (game) => game.competition_id === orderedLeagues[i].element.id\n      );\n\n      for (const fixture of leagueGames) {\n        const unixTimestamp = fixture.date_unix;\n        const milliseconds = unixTimestamp * 1000;\n        const dateObject = new Date(milliseconds);\n\n        let match = {};\n        if (orderedLeagues[i].name !== previousLeagueName) {\n          match.leagueName = orderedLeagues[i].name;\n          match.leagueIndex = i;\n          match.leagueID = leagueID;\n        } else {\n          match.leagueName = null;\n          match.leagueIndex = i;\n          match.leagueID = leagueID;\n        }\n        match.id = fixture.id;\n        match.competition_id = fixture.competition_id;\n        match.date = fixture.date_unix;\n        match.time = dateObject.toLocaleString(\"en-GB\", {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n        });\n        match.homeTeam = fixture.home_name;\n        match.awayTeam = fixture.away_name;\n\n        match.homeOdds = +fixture.odds_ft_1.toFixed(2);\n        match.awayOdds = +fixture.odds_ft_2.toFixed(2);\n        match.drawOdds = +fixture.odds_ft_x.toFixed(2);\n        match.homeDoubleChance = fixture.odds_doublechance_1x;\n        match.awayDoubleChance = fixture.odds_doublechance_x2;\n        match.bttsOdds = fixture.odds_btts_yes;\n        match.homeId = fixture.homeID;\n        match.awayId = fixture.awayID;\n        match.form = [];\n        match.homeTeamInfo = [];\n        match.awayTeamInfo = [];\n        match.btts = false;\n\n        previousLeagueName = orderedLeagues[i].name;\n\n        let homeTeaminLeague;\n        let awayTeaminLeague;\n        let teamPositionHome;\n        let teamPositionHomeTable;\n        let teamPositionAwayTable;\n        let homeTeamWinPercentageHome;\n        let awayTeamWinPercentageAway;\n        let homeTeamLossPercentageHome;\n        let awayTeamLossPercentageAway;\n        let homeTeamDrawPercentageHome;\n        let awayTeamDrawPercentageAway;\n        let teamPositionAway;\n        let homePrefix;\n        let homePrefixHomeTable;\n        let awayPrefix;\n        let awayPrefixAwayTable;\n        let homeSeasonPPG;\n        let awaySeasonPPG;\n\n        try {\n          homeTeaminLeague = leaguePositions.find(\n            (team) => team.name === match.homeTeam\n          );\n\n          let homeTeaminHomeLeague = leaguePositions.find(\n            (team) => team.homeFormName === match.homeTeam\n          );\n          teamPositionHome = homeTeaminLeague.position;\n          teamPositionHomeTable = homeTeaminHomeLeague.position;\n\n          WDLinLeagueHome = Array.from(homeTeaminLeague.wdl.toUpperCase());\n          HomeAverageGoals =\n            homeTeaminLeague.seasonGoals / homeTeaminLeague.played;\n          HomeAverageConceded =\n            homeTeaminLeague.seasonConceded / homeTeaminLeague.played;\n\n          homeTeamWinPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonWinPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homeTeamLossPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonLossPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homeTeamDrawPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonDrawPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homePrefix = await getPrefix(teamPositionHome);\n          homePrefixHomeTable = await getPrefix(teamPositionHomeTable);\n\n          homeSeasonPPG = homeTeaminLeague.ppg.toFixed(2);\n        } catch (error) {\n          console.log(error);\n          teamPositionHome = \"N/A\";\n          homePrefix = \"\";\n          homePrefixHomeTable = \"\";\n          homeSeasonPPG = \"N/A\";\n          homeTeaminLeague = {\n            rawPosition: \"N/A\",\n          };\n          WDLinLeagueHome = \"N/A\";\n        }\n\n        try {\n          awayTeaminLeague = leaguePositions.find(\n            (team) => team.name === match.awayTeam\n          );\n\n          let awayTeaminAwayLeague = leaguePositions.find(\n            (team) => team.awayFormName === match.awayTeam\n          );\n\n          teamPositionAway = awayTeaminLeague.position;\n          teamPositionAwayTable = awayTeaminAwayLeague.position;\n\n          WDLinLeagueAway = Array.from(awayTeaminLeague.wdl.toUpperCase());\n          AwayAverageGoals =\n            awayTeaminLeague.seasonGoals / awayTeaminLeague.played;\n          AwayAverageConceded =\n            awayTeaminLeague.seasonConceded / awayTeaminLeague.played;\n\n          awayTeamWinPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonWinPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayTeamLossPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonLossPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayTeamDrawPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonDrawPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayPrefix = await getPrefix(teamPositionAway);\n          awayPrefixAwayTable = await getPrefix(teamPositionAwayTable);\n\n          awaySeasonPPG = awayTeaminLeague.ppg.toFixed(2);\n        } catch (error) {\n          console.log(error);\n          teamPositionAway = \"N/A\";\n          awayPrefix = \"\";\n          awaySeasonPPG = \"N/A\";\n          awayTeaminLeague = {\n            rawPosition: \"N/A\",\n          };\n          WDLinLeagueAway = \"N/A\";\n        }\n\n        if (!isFormStored) {\n          form = await getForm(match);\n\n          let homeFormString5 =\n            form[0].data[0].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString5 =\n            form[1].data[0].stats.additional_info.formRun_overall.toUpperCase();\n          let homeFormString6 =\n            form[0].data[1].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString6 =\n            form[1].data[1].stats.additional_info.formRun_overall.toUpperCase();\n          let homeFormString10 =\n            form[0].data[2].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString10 =\n            form[1].data[2].stats.additional_info.formRun_overall.toUpperCase();\n\n          let homeFormRun =\n            form[0].data[2].stats.additional_info.formRun_home.toUpperCase();\n          let awayFormRun =\n            form[1].data[2].stats.additional_info.formRun_away.toUpperCase();\n\n          if (WDLinLeagueHome.length >= 10) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = WDLinLeagueHome.slice(-6);\n            lastTenFormHome = WDLinLeagueHome.slice(-10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = WDLinLeagueAway.slice(-6);\n            lastTenFormAway = WDLinLeagueAway.slice(-10);\n            leagueOrAll = \"League\";\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else if (WDLinLeagueHome.length >= 6) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = WDLinLeagueHome.slice(-6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = WDLinLeagueAway.slice(-6);\n            lastTenFormAway = Array.from(awayFormString10);\n            leagueOrAll = \"League\";\n\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else if (WDLinLeagueHome.length >= 5) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = Array.from(homeFormString6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = Array.from(awayFormString6);\n            lastTenFormAway = Array.from(awayFormString10);\n            leagueOrAll = \"League\";\n\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else {\n            lastThreeFormHome = [\n              homeFormString5[2],\n              homeFormString5[3],\n              homeFormString5[4],\n            ];\n            lastFiveFormHome = Array.from(homeFormString5);\n            lastSixFormHome = Array.from(homeFormString6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = [\n              awayFormString5[2],\n              awayFormString5[3],\n              awayFormString5[4],\n            ];\n\n            lastFiveFormAway = Array.from(awayFormString5);\n            lastSixFormAway = Array.from(awayFormString6);\n            lastTenFormAway = Array.from(awayFormString10);\n\n            leagueOrAll = \"All\";\n\n            homeAverageGoals = undefined;\n            homeAverageConceded = undefined;\n            awayAverageGoals = undefined;\n            awayAverageConceded = undefined;\n          }\n\n          formRunHome = Array.from(homeFormRun);\n          formRunAway = Array.from(awayFormRun);\n\n          if (\n            teamPositionHome === 0 ||\n            form[0].data[0].season_format !== \"Domestic League\"\n          ) {\n            teamPositionHome = \"N/A\";\n            teamPositionHomeTable = \"N/A\";\n            homePrefix = \"\";\n            homePrefixHomeTable = \"\";\n          }\n\n          if (\n            teamPositionAway === 0 ||\n            form[0].data[0].season_format !== \"Domestic League\"\n          ) {\n            teamPositionAway = \"N/A\";\n            teamPositionAwayTable = \"N/A\";\n            awayPrefix = \"\";\n            awayPrefixAwayTable = \"\";\n          }\n\n          allForm.push({\n            id: match.id,\n            teamIDHome: match.homeId,\n            teamIDAway: match.awayId,\n            leagueId: leagueID,\n            home: {\n              teamName: match.homeTeam,\n              0: {\n                XGOverall: parseFloat(form[0].data[0].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[0].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[0].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[0].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[0].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[0].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[0].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[0].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[0].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[0].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[0].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[0].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[0].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[0].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[0].stats.shotsOnTargetAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[0].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[0].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[0].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[0].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[0].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[0].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[0].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[0].stats.seasonBTTSPercentage_home\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition: homeTeaminLeague.rawPosition\n                  ? homeTeaminLeague.rawPosition\n                  : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n              1: {\n                XGOverall: parseFloat(form[0].data[1].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[1].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[1].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[1].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[1].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[1].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[1].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[1].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[1].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[1].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[1].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[1].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[1].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[1].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[1].stats.shotsOnTargetAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[1].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[1].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[1].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[1].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[1].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[1].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[1].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[1].stats.seasonBTTSPercentage_home\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition: homeTeaminLeague.rawPosition\n                  ? homeTeaminLeague.rawPosition\n                  : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n              2: {\n                XGOverall: parseFloat(form[0].data[2].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[2].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[2].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[2].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[2].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[2].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[2].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[2].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[2].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[2].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[2].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[2].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[2].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[2].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[2].stats.shotsOnTargetAVG_home\n                ),\n                AverageShots: parseFloat(\n                  form[0].data[2].stats.shotsAVG_overall\n                ),\n                AverageShotsHomeOrAway: parseFloat(\n                  form[0].data[2].stats.shotsAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[2].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[2].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[2].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[2].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[2].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[2].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[2].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[2].stats.seasonBTTSPercentage_home\n                ),\n                lastThreeForm: lastThreeFormHome,\n                LastFiveForm: lastFiveFormHome,\n                LastSixForm: lastSixFormHome,\n                LastTenForm: lastTenFormHome,\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition: homeTeaminLeague.rawPosition\n                  ? homeTeaminLeague.rawPosition\n                  : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                SeasonPPG: homeSeasonPPG,\n                WinPercentage: homeTeamWinPercentageHome,\n                LossPercentage: homeTeamLossPercentageHome,\n                DrawPercentage: homeTeamDrawPercentageHome,\n                formRun: formRunHome,\n                goalDifference:\n                  form[0].data[2].stats.seasonGoalDifference_overall,\n                goalDifferenceHomeOrAway:\n                  form[0].data[2].stats.seasonGoalDifference_home,\n                BttsPercentage:\n                  form[0].data[2].stats.seasonBTTSPercentage_overall,\n                BttsPercentageHomeOrAway:\n                  form[0].data[2].stats.seasonBTTSPercentage_home,\n                CardsTotal: form[0].data[2].stats.cardsTotal_overall,\n                CornersAverage: form[0].data[2].stats.cornersAVG_overall,\n                ScoredBothHalvesPercentage:\n                  form[0].data[2].stats.scoredBothHalvesPercentage_overall,\n                LastMatch: await convertTimestamp(\n                  form[0].data[0].last_updated_match_timestamp\n                ),\n                WDLRecord: WDLinLeagueHome,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n            },\n            away: {\n              teamName: match.awayTeam,\n              0: {\n                XGOverall: parseFloat(form[1].data[0].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[0].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[0].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[0].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[0].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[0].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[0].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[0].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[0].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[0].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[0].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[0].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[0].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[0].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[0].stats.shotsOnTargetAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[0].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[0].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[0].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[0].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[0].stats.seasonBTTSPercentage_away\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n              1: {\n                XGOverall: parseFloat(form[1].data[1].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[1].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[1].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[1].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[1].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[1].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[1].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[1].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[1].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[1].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[1].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[1].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[1].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[1].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[1].stats.shotsOnTargetAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[1].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[1].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[1].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[1].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[1].stats.seasonBTTSPercentage_away\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n              2: {\n                XGOverall: parseFloat(form[1].data[2].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[2].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[2].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[2].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[2].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[2].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[2].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[2].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[2].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[2].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[2].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[2].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[2].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[2].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[2].stats.shotsOnTargetAVG_away\n                ),\n                AverageShots: parseFloat(\n                  form[1].data[2].stats.shotsAVG_overall\n                ),\n                AverageShotsHomeOrAway: parseFloat(\n                  form[1].data[2].stats.shotsAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[2].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[2].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[2].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[2].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[2].stats.seasonBTTSPercentage_away\n                ),\n                lastThreeForm: lastThreeFormAway,\n                LastFiveForm: lastFiveFormAway,\n                LastSixForm: lastSixFormAway,\n                LastTenForm: lastTenFormAway,\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                SeasonPPG: awaySeasonPPG,\n                WinPercentage: awayTeamWinPercentageAway,\n                LossPercentage: awayTeamLossPercentageAway,\n                DrawPercentage: awayTeamDrawPercentageAway,\n                formRun: formRunAway,\n                goalDifference:\n                  form[1].data[2].stats.seasonGoalDifference_overall,\n                goalDifferenceHomeOrAway:\n                  form[1].data[2].stats.seasonGoalDifference_away,\n                BttsPercentage:\n                  form[1].data[2].stats.seasonBTTSPercentage_overall,\n                BttsPercentageHomeOrAway:\n                  form[1].data[2].stats.seasonBTTSPercentage_away,\n                CardsTotal: form[1].data[2].stats.cardsTotal_overall,\n                CornersAverage: form[1].data[2].stats.cornersAVG_overall,\n                ScoredBothHalvesPercentage:\n                  form[1].data[2].stats.scoredBothHalvesPercentage_overall,\n                LastMatch: await convertTimestamp(\n                  form[1].data[0].last_updated_match_timestamp\n                ),\n                WDLRecord: WDLinLeagueAway,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n            },\n          });\n        }\n\n        match.homeBadge = fixture.home_image;\n        match.awayBadge = fixture.away_image;\n\n        match.homePpg = fixture.home_ppg.toFixed(2);\n        match.awayPpg = fixture.away_ppg.toFixed(2);\n\n        match.lastFiveFormHome = lastFiveFormHome;\n        match.lastFiveFormAway = lastFiveFormAway;\n\n        match.homeRawPosition = homeTeaminLeague.rawPosition;\n        match.awayRawPosition = awayTeaminLeague.rawPosition;\n\n        match.homeTeamHomePosition = `${teamPositionHomeTable}${homePrefixHomeTable}`;\n        match.awayTeamAwayPosition = `${teamPositionAwayTable}${awayPrefixAwayTable}`;\n\n        match.homeTeamHomePositionRaw = teamPositionHomeTable;\n        match.awayTeamAwayPositionRaw = teamPositionAwayTable;\n\n        match.homeTeamWinPercentage = homeTeamWinPercentageHome;\n        match.awayTeamWinPercentage = awayTeamWinPercentageAway;\n\n        match.homeTeamLossPercentage = homeTeamLossPercentageHome;\n        match.awayTeamLossPercentage = awayTeamLossPercentageAway;\n\n        match.homeTeamDrawPercentage = homeTeamDrawPercentageHome;\n        match.awayTeamDrawPercentage = awayTeamDrawPercentageAway;\n        match.status = fixture.status;\n        match.over25Odds = fixture.odds_ft_over25;\n        match.btts_potential = fixture.btts_potential;\n        match.game = match.homeTeam + \" v \" + match.awayTeam;\n        match.stadium = fixture.stadium_name;\n        match.homeGoals = fixture.homeGoalCount;\n        match.awayGoals = fixture.awayGoalCount;\n\n        match.expectedGoalsHomeToDate = fixture.team_a_xg_prematch;\n        match.expectedGoalsAwayToDate = fixture.team_b_xg_prematch;\n        match.game_week = fixture.game_week;\n\n        if (match.status !== \"canceled\" || match.status !== \"suspended\") {\n          matches.push(match);\n          await createFixture(match, false);\n        }\n      }\n\n      if (matches.length > 0) {\n        ReactDOM.render(\n          <Fragment>\n            <Button\n              text={\"Get Predictions & League stats\"}\n              onClickEvent={() => getScorePrediction(day)}\n              className={\"GeneratePredictions\"}\n            />\n            <div className=\"Version\">Prediction engine v3.2.1 (26/02/24)</div>\n            <h4>New beta feature, filters &#8595;</h4>\n            <Collapsable\n              buttonText={\"Filters\"}\n              element={\n                <div className=\"FilterContainer\">\n                  <h6>\n                    Use the below filters to remove predictions that don't meet\n                    the set criteria. These will be greyed out and not included\n                    in multi-builders and ROI stats\n                  </h6>\n                  <h6>Goals for/against differential filter (BETA)</h6>\n                  <div>\n                    I'm looking for tips where the goal differential between\n                    teams is at least...\n                  </div>\n                  <SlideDiff\n                    value=\"0\"\n                    text=\"all games\"\n                    useCase=\"gd\"\n                    lower=\"0\"\n                    upper=\"30\"\n                  ></SlideDiff>\n                  <h6>\n                    Goals for/against home or away differential filter (BETA)\n                  </h6>\n                  <div>\n                    I'm looking for tips where the goal differential (home or\n                    away only) between teams is at least...\n                  </div>\n                  <SlideDiff\n                    value=\"0\"\n                    text=\"all games\"\n                    useCase=\"gdHorA\"\n                    lower=\"0\"\n                    upper=\"30\"\n                  ></SlideDiff>\n                  <Fragment>\n                    <h6>XG for/against differential filter (BETA)</h6>\n                    <div>\n                      I'm looking for tips where the XG differential between\n                      teams is at least...\n                    </div>\n                    <SlideDiff\n                      value=\"0\"\n                      text=\"all games\"\n                      useCase=\"xg\"\n                      lower=\"0\"\n                      upper=\"30\"\n                    ></SlideDiff>\n                  </Fragment>\n                  <Fragment>\n                    <h6>Last 10 points differential filter (BETA)</h6>\n                    <div>\n                      I'm looking for tips where the points differential between\n                      teams is at least...\n                    </div>\n                    <SlideDiff\n                      value=\"0\"\n                      text=\"all games\"\n                      useCase=\"last10\"\n                      lower=\"0\"\n                      upper=\"30\"\n                    ></SlideDiff>\n                  </Fragment>\n                  <Fragment>\n                    <h6>Choose your risk profile</h6>\n                    <div>\n                      I'm looking for tips where the odds are between...\n                    </div>\n                    <Slide value=\"1\" text=\"all games\"></Slide>\n                  </Fragment>\n                </div>\n              }\n            />\n            ,\n          </Fragment>,\n          document.getElementById(\"GeneratePredictions\")\n        );\n      }\n\n      // }\n    }\n\n    ReactDOM.render(\n      <div>\n        <div className=\"LoadingText\"></div>\n      </div>,\n      document.getElementById(\"Loading\")\n    );\n\n    async function updateResults(bool) {\n      console.log(\"updating results\");\n      if (allLeagueResultsArrayOfObjects.length > 0 && bool === true) {\n        await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}results`, {\n          method: \"DELETE\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }).then(async () => {\n          await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}results`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(allLeagueResultsArrayOfObjects),\n          });\n        });\n      } else {\n        console.log(\"EMPTY RESULTS\");\n      }\n    }\n\n    if (!isStoredLocally) {\n      await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}allForm/${date}`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ allForm }),\n      });\n      await updateResults(true);\n    }\n    if (!leaguesStored) {\n      await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${todaysDate}`,\n        {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ leagueArray }),\n        }\n      );\n    }\n    // const allFixtures = await RenderAllFixtures(matches, false)\n    ReactDOM.render(\n      <RenderAllFixtures matches={matches} result={false} bool={false} />,\n      document.getElementById(\"FixtureContainer\")\n    );\n    // ReactDOM.render(<RenderAllFixtures matches={matches} bool={false}/>),document.getElementById(\"FixtureContainer\")\n    setTimeout(() => {\n      isFunctionRunning = false;\n    }, 3000);\n  }\n}\n","import React from \"react\";\n\nfunction HeadToHead(props) {\n  return (\n    <ul className={props.className} style={props.style}>\n      <li key=\"Stadium\" className=\"Stadium\" data-cy={props.name + \"Stadium\"}>\n        {`Venue - ${props.stadium}`}\n      </li>\n      <div className=\"KeyStatsOne\">\n      <li key=\"h2h\" className=\"h2h\" data-cy={props.name + \"h2h\"}>\n        {`Matches played: ${props.matches}`}\n      </li>\n      <li key=\"homeWins\" className=\"homeWins\" data-cy={props.name + \"homeWins\"}>\n        {`${props.homeTeam} wins: ${props.homeWins}`}\n      </li>\n      <li key=\"awayWins\" className=\"awayWins\" data-cy={props.name + \"awayWins\"}>\n        {`${props.awayTeam} wins: ${props.awayWins}`}\n      </li>\n      <li key=\"draws\" className=\"draws\" data-cy={props.name + \"draws\"}>\n        {`Draws: ${props.draws}`}\n      </li>\n      </div>\n      <div className=\"KeyStatsTwo\">\n      <li\n        key=\"averageGoals\"\n        className=\"averageGoals\"\n        data-cy={props.name + \"averageGoals\"}\n      >\n        {`Average goals in fixture: ${props.averageGoals}`}\n      </li>\n      <li\n        key=\"bestHomeOdds\"\n        className=\"bestHomeOdds\"\n        data-cy={props.name + \"bestHomeOdds\"}\n      >\n        {`Best oods for home win @: ${props.bestHomeOdds}`}\n      </li>\n      <li\n        key=\"bestAwayOdds\"\n        className=\"bestAwayOdds\"\n        data-cy={props.name + \"bestAwayOdds\"}\n      >\n        {`Best oods for away win @: ${props.bestAwayOdds}`}\n      </li>\n      </div>\n      <li\n        key=\"lastGameDetail\"\n        className=\"LastGameDetail\"\n        data-cy={props.name + \"Last\"}\n      >\n        {`Last meeting - ${props.lastGameStadiumName} ${props.lastGameDate}`}\n      </li>\n      <div className=\"LastGameOverview\">\n        <div\n          key=\"lastGame\"\n          className=\"LastGameHome\"\n          data-cy={props.name + \"LastGame\"}\n        >\n          {`${props.lastGameHomeTeam}`}\n        </div>\n        <span className=\"LastGameScore\">{`${props.lastGameHomeGoals}`}</span>\n        <span className=\"LastGameScore\">{`${props.lastGameAwayGoals}`}</span>\n        <div className=\"LastGameAway\">{`${props.lastGameAwayTeam}`}</div>\n      </div>\n\n      <li\n        key=\"secondToLastGameDetail\"\n        className=\"secondToLastGameDetail\"\n        data-cy={props.name + \"secondToLast\"}\n      >\n        {`Second to last meeting - ${props.secondToLastGameStadiumName} ${props.secondToLastGameDate}`}\n      </li>\n      <div className=\"LastGameOverview\">\n        <div\n          key=\"lastGame\"\n          className=\"LastGameHome\"\n          data-cy={props.name + \"LastGame\"}\n        >\n          {`${props.secondToLastGameHomeTeam}`}\n        </div>\n        <span className=\"LastGameScore\">{`${props.secondToLastGameHomeGoals}`}</span>\n        <span className=\"LastGameScore\">{`${props.secondToLastGameAwayGoals}`}</span>\n        <div className=\"LastGameAway\">\n          {`${props.secondToLastGameAwayTeam}`}\n        </div>\n      </div>\n    </ul>\n  );\n}\n\nexport default HeadToHead;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    // backgroundColor: \"#dedddd\",\n    padding: 10,\n    textAlign: \"center\",\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    // border: \"none\",\n    margin: \"none\",\n    color: 'white',\n    lineHeight: '2em',\n    backgroundColor: '#030061',\n  },\n  body: {\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    padding: 10,\n    color: 'white',\n    // border: \"none\",\n    margin: \"none\",\n    backgroundColor: '#030061',\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#030061\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#030052\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\n\nexport default function CustomizedTables(props) {\n\n\n  return (\n    <TableContainer className=\"StatsTable\">\n      <Table aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Stat</StyledTableCell>\n            <StyledTableCell>H2H history</StyledTableCell>\n            <StyledTableCell>XGTipping forecast</StyledTableCell>\n            <StyledTableCell>Odds (yes)</StyledTableCell>\n            <StyledTableCell>Odds (no)</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        <StyledTableRow key=\"O05\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 0.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o05Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o05Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u05Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O15\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 1.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o15Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o15Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u15Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O25\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 2.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o25Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o25Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u25Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O35\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 3.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o35Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o35Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u35Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"BTTS\" className=\"BTTSStats\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              BTTS %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.BTTSStat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSForecast}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSOdds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSOddsNo}</StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport HeadToHead from \"../components/HeadToHead\";\nimport { Fragment } from \"react\";\nimport CustomizedTables from \"../components/Table\";\n\nexport async function getTeamStats(\n  id,\n  home,\n  away,\n  homeBTTS,\n  homeOnlyBTTS,\n  awayBTTS,\n  awayOnlyBTTS\n) {\n  let identifier = id;\n  let bestHomeOdds;\n  let bestHomeOddsProvider;\n  let bestAwayOdds;\n  let bestAwayOddsProvider;\n\n  let match = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}match/${identifier}`\n  );\n  await match.json().then(async (match) => {\n    let matchArr = match.data.h2h.previous_matches_ids;\n    let previousMatchDetails;\n    let secondToPreviousMatchDetails;\n\n    let oddsComparisonHomeArray = [];\n    let oddsComparisonAwayArray = [];\n\n    if (match.data.odds_comparison) {\n      oddsComparisonHomeArray = match.data.odds_comparison[\"FT Result\"][1];\n      oddsComparisonAwayArray = match.data.odds_comparison[\"FT Result\"][2];\n\n      let sortedHomeOdds = Object.entries(oddsComparisonHomeArray).sort(\n        (a, b) => b[1] - a[1]\n      );\n      let sortedAwayOdds = Object.entries(oddsComparisonAwayArray).sort(\n        (a, b) => b[1] - a[1]\n      );\n\n      bestHomeOddsProvider = sortedHomeOdds[0][0];\n      bestHomeOdds = sortedHomeOdds[0][1];\n      bestAwayOddsProvider = sortedAwayOdds[0][0];\n      bestAwayOdds = sortedAwayOdds[0][1];\n    } else {\n      bestHomeOddsProvider = \"N/A\";\n      bestHomeOdds = \"N/A\";\n      bestAwayOddsProvider = \"N/A\";\n      bestAwayOdds = \"N/A\";\n    }\n\n    async function getBTTSPercentage(\n      homeToal,\n      home,\n      awayTotal,\n      away,\n      fixtureHistory\n    ) {\n      let total = homeToal + home + awayTotal + away + fixtureHistory;\n      return total / 5;\n    }\n\n    async function getFairOdds(impliedProbability) {\n      let impliedProbabilityDivided = impliedProbability / 100;\n      return (1 / impliedProbabilityDivided).toFixed(2);\n    }\n\n    if (match.data.h2h.previous_matches_results.totalMatches > 0) {\n      matchArr.sort((a, b) => b.date_unix - a.date_unix);\n      let lastMatch = matchArr[0].id;\n      let secondMatchExists = true;\n      let secondToLastMatch =\n        matchArr[1] !== undefined ? matchArr[1].id : false;\n\n      let previousMatch = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}match/${lastMatch}`\n      );\n      let dateObject;\n      let date;\n      let date2;\n      await previousMatch.json().then(async (game) => {\n        previousMatchDetails = game.data;\n        const unixTimestamp = previousMatchDetails.date_unix;\n        const milliseconds = unixTimestamp * 1000;\n        dateObject = new Date(milliseconds);\n        date = `${dateObject.getDate()}/${\n          dateObject.getMonth() + 1\n        }/${dateObject.getFullYear()}`;\n\n        let secondToPreviousMatch;\n        let dateObject2;\n\n        if (secondMatchExists !== false) {\n          secondToPreviousMatch = await fetch(\n            `${process.env.REACT_APP_EXPRESS_SERVER}match/${secondToLastMatch}`\n          );\n          await secondToPreviousMatch.json().then((game) => {\n            secondToPreviousMatchDetails = game.data;\n            const unixTimestamp = secondToPreviousMatchDetails.date_unix;\n            const milliseconds = unixTimestamp * 1000;\n            dateObject2 = new Date(milliseconds);\n            date2 = `${dateObject2.getDate()}/${\n              dateObject2.getMonth() + 1\n            }/${dateObject2.getFullYear()}`;\n          });\n        }\n      });\n\n      const BTTSForecast = await getBTTSPercentage(\n        homeBTTS,\n        homeOnlyBTTS,\n        awayBTTS,\n        awayOnlyBTTS,\n        match.data.h2h.betting_stats.bttsPercentage\n      );\n      const fairOddsBTTSYes = await getFairOdds(BTTSForecast);\n      const fairOddsBTTSNo = await getFairOdds(100 - BTTSForecast);\n\n      ReactDOM.render(\n        <Fragment>\n          <h3>Fixture history</h3>\n          <HeadToHead\n            className={\"PreviousMatchStats\"}\n            homeTeam={home}\n            awayTeam={away}\n            stadium={match.data.stadium_name}\n            matches={match.data.h2h.previous_matches_results.totalMatches}\n            homeWins={match.data.h2h.previous_matches_results.team_a_wins}\n            awayWins={match.data.h2h.previous_matches_results.team_b_wins}\n            draws={match.data.h2h.previous_matches_results.draw}\n            averageGoals={match.data.h2h.betting_stats.avg_goals}\n            bestHomeOdds={`${bestHomeOddsProvider} - ${bestHomeOdds}`}\n            bestAwayOdds={`${bestAwayOddsProvider} - ${bestAwayOdds}`}\n            lastGameStadiumName={\n              previousMatchDetails.stadium_name\n                ? previousMatchDetails.stadium_name\n                : \"-\"\n            }\n            lastGameHomeGoals={\n              previousMatchDetails.homeGoalCount !== undefined\n                ? previousMatchDetails.homeGoalCount\n                : \"-\"\n            }\n            lastGameAwayGoals={\n              previousMatchDetails.awayGoalCount !== undefined\n                ? previousMatchDetails.awayGoalCount\n                : \"-\"\n            }\n            lastGameHomeTeam={\n              previousMatchDetails.home_name\n                ? previousMatchDetails.home_name\n                : \"-\"\n            }\n            lastGameAwayTeam={\n              previousMatchDetails.away_name\n                ? previousMatchDetails.away_name\n                : \"-\"\n            }\n            lastGameDate={!isNaN(date) ? date : \"-\"}\n            secondToLastGameStadiumName={\n              secondToPreviousMatchDetails.stadium_name\n                ? secondToPreviousMatchDetails.stadium_name\n                : \"-\"\n            }\n            secondToLastGameHomeGoals={\n              secondToPreviousMatchDetails.homeGoalCount !== undefined\n                ? secondToPreviousMatchDetails.homeGoalCount\n                : \"-\"\n            }\n            secondToLastGameAwayGoals={\n              secondToPreviousMatchDetails.awayGoalCount !== undefined\n                ? secondToPreviousMatchDetails.awayGoalCount\n                : \"-\"\n            }\n            secondToLastGameHomeTeam={\n              secondToPreviousMatchDetails.home_name\n                ? secondToPreviousMatchDetails.home_name\n                : \"-\"\n            }\n            secondToLastGameAwayTeam={\n              secondToPreviousMatchDetails.away_name\n                ? secondToPreviousMatchDetails.away_name\n                : \"-\"\n            }\n            secondToLastGameDate={!isNaN(date2) ? date2 : \"-\"}\n          ></HeadToHead>\n          <CustomizedTables\n            o05Stat={match.data.h2h.betting_stats.over05Percentage}\n            o15Stat={match.data.h2h.betting_stats.over15Percentage}\n            o15Forecast={match.data.o15_potential}\n            o05Odds={match.data.odds_ft_over05}\n            u05Odds={match.data.odds_ft_under05}\n            o15Odds={match.data.odds_ft_over15}\n            u15Odds={match.data.odds_ft_under15}\n            o25Stat={match.data.h2h.betting_stats.over25Percentage}\n            o25Forecast={match.data.o25_potential}\n            o25Odds={match.data.odds_ft_over25}\n            u25Odds={match.data.odds_ft_under25}\n            o35Stat={match.data.h2h.betting_stats.over35Percentage}\n            o35Forecast={match.data.o35_potential}\n            o35Odds={match.data.odds_ft_over35}\n            u35Odds={match.data.odds_ft_under35}\n            BTTSStat={match.data.h2h.betting_stats.bttsPercentage}\n            BTTSForecast={`${BTTSForecast}%`}\n            BTTSOdds={`${match.data.odds_btts_yes}\\n Fair odds: ${fairOddsBTTSYes}`}\n            BTTSOddsNo={`${match.data.odds_btts_no}\\n Fair odds: ${fairOddsBTTSNo}`}\n            CornersStat={\"–\"}\n            CornersForecast={match.data.corners_potential}\n            CornersOdds={match.data.odds_corners_over_105}\n          />\n        </Fragment>,\n        document.getElementById(`H2HStats${identifier}`)\n      );\n    } else {\n      ReactDOM.render(\n        <div>No fixture history found</div>,\n        document.getElementById(`H2HStats${identifier}`)\n      );\n    }\n  });\n}\n","async function getOverOrUnderText(xgSum) {\n  let overUnderAchievingSum = xgSum;\n  let text;\n  switch (true) {\n    case overUnderAchievingSum > 1.5:\n      text =\n        \"Underachieving drastically against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > 1.25 && overUnderAchievingSum <= 1.5:\n      text =\n        \"Underachieving to a large degree against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > 1 && overUnderAchievingSum <= 1.25:\n      text = \"Underachieving against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > 0.75 && overUnderAchievingSum <= 1:\n      text =\n        \"Underachieving to a small degree against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > 0.4 && overUnderAchievingSum <= 0.75:\n      text =\n        \"Underachieving slighly against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > -0.4 && overUnderAchievingSum <= 0.4:\n      text =\n        \"Roughly tracking on par with their expected goal difference.\";\n      break;\n\n    case overUnderAchievingSum < -0.4 && overUnderAchievingSum >= -0.75:\n      text =\n        \"Overachieving slighly against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum < -0.75 && overUnderAchievingSum >= -1:\n      text =\n        \"Overachieving to a small degree against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum < -1 && overUnderAchievingSum >= -1.25:\n      text = \"Overachieving against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum < -1.25 && overUnderAchievingSum >= -1.5:\n      text =\n        \"Overachieving to a large degree against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum < -1.5:\n      text =\n        \"Overachieving drastically against their expected goal difference.\";\n      break;\n    default:\n      text = \"\";\n      break;\n  }\n  return text;\n}\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nasync function getXGDifferential(xgFor, xgAgainst, goalsFor, goalsAgainst) {\n  let xgDiff = xgFor - xgAgainst;\n  let goalDiff = goalsFor - goalsAgainst;\n  let compareXgAndGoalDiff = await diff(xgDiff, goalDiff);\n\n  return compareXgAndGoalDiff;\n}\n\nasync function getAttackingSummary(goalsRecent, goalsLongTerm) {\n\n  let text;\n  if (goalsRecent >= 3) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Free scoring and improving in front of goal recently.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Free scoring and consistent in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Free scoring but less so recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 3 && goalsRecent >= 2) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text =\n          \"Impressive scoring stats and improving in front of goal recently.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Impressive scoring stats and consistent in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Impressive scoring stats but less so recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 2 && goalsRecent >= 1) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Decent scoring stats and improving in front of goal recently.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Decent scoring stats and consistent in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Decent scoring stats but less so recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 1 && goalsRecent > 0) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Poor scoring stats but improving in front of goal recently.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Poor scoring stats and consistently poor in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Poor scoring stats showing no signs of improvement.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent === 0) {\n    switch (true) {\n      case goalsRecent === 0:\n        text = \"Woeful goal stats in recent games.\";\n        break;\n      default:\n        text = \"\";\n        break;\n    }\n  }\n  return text;\n}\n\nasync function getDefenceSummary(cleansheetStat) {\n  let text;\n  switch (true) {\n    case cleansheetStat > 80:\n      text = `Incredibly strong defensively, with ${cleansheetStat}% of their games ending in a cleansheet`;\n      break;\n    case cleansheetStat > 60 && cleansheetStat <= 80:\n      text = `Very strong defensively, with ${cleansheetStat}% of their games ending in a cleansheet`;\n      break;\n    case cleansheetStat > 40 && cleansheetStat <= 60:\n      text = `Defensively impressive, with ${cleansheetStat}% of their games ending in a cleansheet`;\n      break;\n    case cleansheetStat > 20 && cleansheetStat <= 40:\n      text = `Defensively, ${cleansheetStat}% of their games have ended in a cleansheet`;\n      break;\n    case cleansheetStat > 1 && cleansheetStat <= 20:\n      text = `Defensively frail, with only ${cleansheetStat}% of their games ending in a cleansheet`;\n      break;\n      case cleansheetStat === 0:\n        text = `Defensively weak, with ${cleansheetStat}% of their games ending in a cleansheet`;\n        break;\n    default:\n      break;\n  }\n  return text;\n}\n\nasync function GenerateFormSummary(form, lastx, recentForm) {\n  let text;\n  // let six = lastx[2];\n  let ten = lastx[1];\n  let five = lastx[0];\n\n  let xgSum = await getXGDifferential(\n    form.XGOverall,\n    form.XGAgainstAvgOverall,\n    form.ScoredOverall / 10,\n    form.ConcededOverall / 10\n  );\n  let xgText = await getOverOrUnderText(xgSum);\n  let attackString = await getAttackingSummary(\n    form.last5Goals,\n    form.last10Goals\n  );\n  let defenceString = await getDefenceSummary(form.CleanSheetPercentage);\n  let pointsAverageTotal =\n    (parseFloat(five) + parseFloat(ten)) / 2;\n\n  if (pointsAverageTotal >= 2.6) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Outstanding recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Outstanding recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Outstanding recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 2.3) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Excellent recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Excellent recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Excellent recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 2) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Very good recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Very good recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Very good recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 1.7) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Good recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Good recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Good recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 1.4) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Fairly good recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Fairly good recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Fairly good recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 1.1) {\n    console.log(2);\n    switch (true) {\n      case five > ten:\n        text =\n          \"Average recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Average recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Average recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 0.8) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Poor recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Poor recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Poor recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 0.5) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Very poor recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Very poor recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Very poor recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal < 0.5) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Terrible recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Terrible recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Terrible recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else {\n    console.log(pointsAverageTotal);\n  }\n  return text + ` ${xgText} ${attackString} ${defenceString}`;\n}\n\nexport default GenerateFormSummary;\n","// import { light } from \"@material-ui/core/styles/createPalette\";\n// import { toBePartiallyChecked } from \"@testing-library/jest-dom/dist/matchers\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  ArcElement,\n  LineElement,\n  Filler,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Line, Radar, Bar } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  ArcElement,\n  Filler,\n  BarElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport function Chart(props) {\n  let length;\n  let depth;\n\n  if (props.type === \"Points over time\") {\n    length = props.data1.length * 3;\n    depth = 0;\n  } else if (props.type === \"Rolling average points over last 10\") {\n    length = Math.abs(props.height);\n    depth = 0;\n  } else if (Math.abs(props.height) > Math.abs(props.depth)) {\n    length = Math.abs(props.height);\n    depth = -Math.abs(props.height);\n  } else if (Math.abs(props.height) < Math.abs(props.depth)) {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  } else {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  }\n\n  const options = {\n    color: \"black\",\n    responsive: true,\n    aspectRatio: 1.2,\n    maintainAspectRatio: true,\n    layout: {\n      padding: 3,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    scales: {\n      y: {\n        suggestedMin: depth,\n        suggestedMax: length,\n        // suggestedMax: Math.max(...props.data1) > 3 ? Math.max(...props.data1) : 3,\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          font: {\n            size: 12,\n          },\n        },\n      },\n      x: {\n        title: {\n          display: false,\n          text: \"Last X Games\",\n          font: {\n            size: 10,\n          },\n        },\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          display: false,\n          font: {\n            size: 12,\n          },\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 5,\n        },\n      },\n      title: {\n        display: true,\n        text: props.type,\n        font: {\n          size: 14,\n          color: \"black\",\n        },\n      },\n    },\n  };\n\n  const labels = Array.from(props.data1.keys());\n\n  let data = {\n    labels,\n    datasets: [\n      {\n        label: props.team1,\n        font: {\n          color: \"black\",\n        },\n        data: props.data1,\n        borderColor: \"#030061\",\n        borderWidth: 2,\n        backgroundColor: \"#030061\",\n        tension: props.tension,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        borderColor: \"#970d00\",\n        borderWidth: 2,\n        backgroundColor: \"#970d00\",\n        tension: props.tension,\n      },\n    ],\n  };\n\n  return <Line options={options} data={data} />;\n}\n\nexport function RadarChart(props) {\n  const options = {\n    color: \"black\",\n    scales: {\n      r: {\n        angleLines: {\n          display: false,\n        },\n        suggestedMin: 0,\n        suggestedMax: 1,\n        ticks: {\n          precision: 0,\n          display: false,\n        },\n        // grid: {\n        //     circular: true,\n        //   }\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 10,\n        },\n      },\n      title: {\n        display: true,\n        text: props.title,\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  let data = {\n    labels: [\"Attack rating\", \"Defence rating\", \"Ball retention\", \"XG For\", \"XG Against\", \"Directness\", \"Attacking precision\"],\n    datasets: [\n      {\n        label: props.team1,\n        data: props.data,\n        fill: true,\n        backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n        borderColor: \"#030061\",\n        pointBackgroundColor: \"#030061\",\n        pointBorderColor: \"#fff\",\n        pointHoverBackgroundColor: \"#fff\",\n        pointHoverBorderColor: \"rgb(255, 99, 132)\",\n        borderWidth: 2,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        fill: true,\n        backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n        borderColor: \"#970d00\",\n        pointBackgroundColor: \"#970d00\",\n        pointBorderColor: \"#fff\",\n        pointHoverBackgroundColor: \"#fff\",\n        pointHoverBorderColor: \"rgb(54, 162, 235)\",\n        borderWidth: 2,\n      },\n    ],\n  };\n\n  return <Radar options={options} data={data} />;\n}\n\nexport function BarChart(props) {\n  const datasetOne = props.data1;\n  const datasetTwo = props.data2;\n  const sum = datasetTwo.map(function (num, idx) {\n    return num - datasetOne[idx];\n  });\n\n  const max = Math.max(...sum);\n  const min = Math.min(...sum);\n\n  const largest = findLargestNum(max, min);\n\n  function findLargestNum(numOne, numTwo) {\n    const tempArr = [];\n    const firstNum = Math.abs(numOne);\n    const secondNum = Math.abs(numTwo);\n    tempArr.push(firstNum, secondNum);\n\n    return Math.max(...tempArr);\n  }\n\n  const options = {\n    indexAxis: \"y\",\n    // Elements options apply to all of the options unless overridden in a dataset\n    // In this case, we are setting the border of each horizontal bar to be 2px wide\n    aspectRatio: 1.3,\n    elements: {\n      bar: {\n        borderWidth: 2,\n      },\n    },\n    scales: {\n      x: {\n        min: -4,\n        max: 4,\n        ticks: {\n          display: false,\n        },\n      },\n      y: {\n        ticks: {\n          font: {\n            size: 10,\n          },\n        },\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: false,\n      },\n      title: {\n        display: true,\n        text: \"Comparison - Home Team | Away Team \",\n      },\n    },\n  };\n\n  const labels = [\n    \"Highest Goals\",\n    \"Fewest Conceeded\",\n    \"Last 5 PPG\",\n    \"Highest XG\",\n    \"Fewest XG Conceeded\",\n    \"Shots On Target\",\n    \"Dangerous Attacks\",\n    \"Av. Possession\",\n    \"Home/Away Goal Diff\",\n    \"Corners\",\n  ];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        // label: 'Dataset 1',\n        legend: {\n          display: false,\n        },\n        data: sum,\n        backgroundColor(context) {\n          const index = context.dataIndex;\n          const value = context.dataset.data[index];\n          return value < 0 ? \"#030061\" : \"#970d00\";\n        },\n      },\n    ],\n  };\n\n  return <Bar options={options} data={data} />;\n}\n","import ReactDOM from \"react-dom\";\nimport { Button } from \"../components/Button\";\nimport Stats from \"../components/createStatsDiv\";\nimport Div from \"../components/Div\";\nimport { allForm } from \"../logic/getFixtures\";\nimport { getTeamStats } from \"../logic/getTeamStats\";\nimport { getPointsFromLastX } from \"../logic/getScorePredictions\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport GenerateFormSummary from \"../logic/compareFormTrend\";\nimport { Chart, RadarChart, BarChart } from \"../components/Chart\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { clicked } from \"../logic/getScorePredictions\";\n\nexport async function calculateAttackingStrength(stats) {\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    // averagePossession: 0.15,\n    \"Average Dangerous Attacks\": 0.15,\n    \"Average Shots\": 0.1,\n    \"Average Shots On Target\": 0.15,\n    \"Average Expected Goals\": 0.15,\n    \"Recent XG\": 0.15,\n    \"Average Goals\": 0.2,\n    Corners: 0.1,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    // averagePossession: { min: 25, max: 75 },\n    \"Average Dangerous Attacks\": { min: 25, max: 75 }, // Adjust the max value as needed\n    \"Average Shots\": { min: 5, max: 17 }, // Adjust the max value as needed\n    \"Average Shots On Target\": { min: 2, max: 9 }, // Adjust the max value as needed\n    \"Average Expected Goals\": { min: 0.25, max: 2.75 }, // Adjust the max value as needed\n    \"Recent XG\": { min: 0.25, max: 2.75 }, // Adjust the max value as needed\n    \"Average Goals\": { min: 0, max: 3 }, // Adjust the max value as needed\n    Corners: { min: 2, max: 10 },\n  };\n\n  // Normalize each metric value and calculate the weighted sum\n  let weightedSum = 0;\n  for (const metric in stats) {\n    if (\n      stats.hasOwnProperty(metric) &&\n      weights.hasOwnProperty(metric) &&\n      ranges.hasOwnProperty(metric)\n    ) {\n      const normalizedValue =\n        (stats[metric] - ranges[metric].min) /\n        (ranges[metric].max - ranges[metric].min);\n      weightedSum += normalizedValue * weights[metric];\n    } else {\n      console.log(metric);\n    }\n  }\n\n  return parseFloat(weightedSum.toFixed(2));\n}\n\nexport async function calculateDefensiveStrength(stats) {\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    \"Average XG Against\": 0.25,\n    \"Recent XG Against\": 0.25,\n    \"Average Goals Against\": 0.25,\n    \"Average SOT Against\": 0.25,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    \"Average XG Against\": { min: 0, max: 3 }, // Adjust the max value as needed\n    \"Recent XG Against\": { min: 0, max: 3 },\n    \"Average Goals Against\": { min: 0, max: 3 }, // Adjust the max value as needed\n    \"Average SOT Against\": { min: 3, max: 10 },\n  };\n\n  // Normalize each metric value and calculate the weighted sum\n  let weightedSum = 0;\n  for (const metric in stats) {\n    if (\n      stats.hasOwnProperty(metric) &&\n      weights.hasOwnProperty(metric) &&\n      ranges.hasOwnProperty(metric)\n    ) {\n      const normalizedValue =\n        1 -\n        (stats[metric] - ranges[metric].min) /\n          (ranges[metric].max - ranges[metric].min);\n      weightedSum += normalizedValue * weights[metric];\n    }\n  }\n\n  return parseFloat(weightedSum.toFixed(2));\n}\n\nexport async function calculateMetricStrength(metricName, metricValue) {\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    averagePossession: 1,\n    xgFor: 1,\n    xgAgainst: 1,\n    directnessOverall: 1,\n    accuracyOverall: 1,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    averagePossession: { min: 20, max: 80 },\n    xgFor: { min: 0.1, max: 3 },\n    xgAgainst: { min: 0.1, max: 3 },\n    directnessOverall: { min: 0.5, max: 4 },\n    accuracyOverall: { min: 0.5, max: 6 },\n  };\n\n  // Ensure the metric is valid and exists in the weights and ranges objects\n  if (\n    !weights.hasOwnProperty(metricName) ||\n    !ranges.hasOwnProperty(metricName)\n  ) {\n    throw new Error(\"Invalid metric name or missing normalization range.\");\n  }\n\n  // Normalize the metric value\n  const normalizedValue =\n    (metricValue - ranges[metricName].min) /\n    (ranges[metricName].max - ranges[metricName].min);\n\n  // Calculate the weighted score\n  const weightedScore = normalizedValue * weights[metricName];\n\n  return parseFloat(weightedScore.toFixed(2));\n}\n\n// export async function getDefenceStrength(goalsAgainst) {\n//   let strength;\n//   switch (true) {\n//     case goalsAgainst >= 2.8:\n//       strength = 1;\n//       break;\n//     case goalsAgainst >= 2.5 && goalsAgainst < 2.8:\n//       strength = 2;\n//       break;\n//     case goalsAgainst >= 2.2 && goalsAgainst < 2.5:\n//       strength = 3;\n//       break;\n//     case goalsAgainst >= 1.9 && goalsAgainst < 2.2:\n//       strength = 4;\n//       break;\n//     case goalsAgainst >= 1.6 && goalsAgainst < 1.9:\n//       strength = 5;\n//       break;\n//     case goalsAgainst >= 1.3 && goalsAgainst < 1.6:\n//       strength = 6;\n//       break;\n//     case goalsAgainst >= 1 && goalsAgainst < 1.3:\n//       strength = 7;\n//       break;\n//     case goalsAgainst >= 0.7 && goalsAgainst < 1:\n//       strength = 8;\n//       break;\n//     case goalsAgainst >= 0.4 && goalsAgainst < 0.7:\n//       strength = 9;\n//       break;\n//     case goalsAgainst < 0.4:\n//       strength = 10;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getPossessionStrength(possession) {\n//   let strength;\n//   switch (true) {\n//     case possession >= 68:\n//       strength = 10;\n//       break;\n//     case possession >= 64 && possession < 68:\n//       strength = 9;\n//       break;\n//     case possession >= 60 && possession < 64:\n//       strength = 8;\n//       break;\n//     case possession >= 56 && possession < 60:\n//       strength = 7;\n//       break;\n//     case possession >= 52 && possession < 56:\n//       strength = 6;\n//       break;\n//     case possession >= 48 && possession < 52:\n//       strength = 5;\n//       break;\n//     case possession >= 44 && possession < 48:\n//       strength = 4;\n//       break;\n//     case possession >= 40 && possession < 44:\n//       strength = 3;\n//       break;\n//     case possession >= 35 && possession < 40:\n//       strength = 2;\n//       break;\n//     case possession < 35:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getShotsStrength(Shots) {\n//   let strength;\n//   switch (true) {\n//     case Shots >= 15:\n//       strength = 10;\n//       break;\n//     case Shots >= 14.25 && Shots < 15:\n//       strength = 9;\n//       break;\n//     case Shots >= 13.5 && Shots < 14.25:\n//       strength = 8;\n//       break;\n//     case Shots >= 12.75 && Shots < 13.5:\n//       strength = 7;\n//       break;\n//     case Shots >= 12 && Shots < 12.75:\n//       strength = 6;\n//       break;\n//     case Shots >= 11.25 && Shots < 12:\n//       strength = 5;\n//       break;\n//     case Shots >= 10.5 && Shots < 11.25:\n//       strength = 4;\n//       break;\n//     case Shots >= 9.75 && Shots < 10.5:\n//       strength = 3;\n//       break;\n//     case Shots >= 9 && Shots < 9.75:\n//       strength = 2;\n//       break;\n//     case Shots < 9:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getShotsStrengthHorA(Shots) {\n//   let strength;\n//   switch (true) {\n//     case Shots >= 19.5:\n//       strength = 10;\n//       break;\n//     case Shots >= 18 && Shots < 19.5:\n//       strength = 9;\n//       break;\n//     case Shots >= 17 && Shots < 18:\n//       strength = 8;\n//       break;\n//     case Shots >= 15.5 && Shots < 17:\n//       strength = 7;\n//       break;\n//     case Shots >= 14 && Shots < 15.5:\n//       strength = 6;\n//       break;\n//     case Shots >= 12.5 && Shots < 14:\n//       strength = 5;\n//       break;\n//     case Shots >= 11 && Shots < 12.5:\n//       strength = 4;\n//       break;\n//     case Shots >= 9.5 && Shots < 11:\n//       strength = 3;\n//       break;\n//     case Shots >= 8 && Shots < 9.5:\n//       strength = 2;\n//       break;\n//     case Shots < 8:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGForStrength(XG) {\n//   let strength;\n//   switch (true) {\n//     case XG >= 2.9:\n//       strength = 10;\n//       break;\n//     case XG >= 2.6 && XG < 2.9:\n//       strength = 9;\n//       break;\n//     case XG >= 2.3 && XG < 2.6:\n//       strength = 8;\n//       break;\n//     case XG >= 2 && XG < 2.3:\n//       strength = 7;\n//       break;\n//     case XG >= 1.7 && XG < 2:\n//       strength = 6;\n//       break;\n//     case XG >= 1.4 && XG < 1.7:\n//       strength = 5;\n//       break;\n//     case XG >= 1.1 && XG < 1.4:\n//       strength = 4;\n//       break;\n//     case XG >= 0.8 && XG < 1.1:\n//       strength = 3;\n//       break;\n//     case XG >= 0.5 && XG < 0.8:\n//       strength = 2;\n//       break;\n//     case XG < 0.5:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGAgainstStrength(XGAgainst) {\n//   let strength;\n//   switch (true) {\n//     case XGAgainst >= 2.9:\n//       strength = 1;\n//       break;\n//     case XGAgainst >= 2.6 && XGAgainst < 2.9:\n//       strength = 2;\n//       break;\n//     case XGAgainst >= 2.3 && XGAgainst < 2.6:\n//       strength = 3;\n//       break;\n//     case XGAgainst >= 2 && XGAgainst < 2.3:\n//       strength = 4;\n//       break;\n//     case XGAgainst >= 1.7 && XGAgainst < 2:\n//       strength = 5;\n//       break;\n//     case XGAgainst >= 1.4 && XGAgainst < 1.7:\n//       strength = 6;\n//       break;\n//     case XGAgainst >= 1.1 && XGAgainst < 1.4:\n//       strength = 7;\n//       break;\n//     case XGAgainst >= 0.8 && XGAgainst < 1.1:\n//       strength = 8;\n//       break;\n//     case XGAgainst >= 0.5 && XGAgainst < 0.8:\n//       strength = 9;\n//       break;\n//     case XGAgainst < 0.5:\n//       strength = 10;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGDifferentialStrength(XGDiff) {\n//   let strength;\n//   switch (true) {\n//     case XGDiff >= 1.5:\n//       strength = 10;\n//       break;\n//     case XGDiff >= 1 && XGDiff < 1.5:\n//       strength = 9;\n//       break;\n//     case XGDiff >= 0.5 && XGDiff < 1:\n//       strength = 8;\n//       break;\n//     case XGDiff >= 0.25 && XGDiff < 0.5:\n//       strength = 7;\n//       break;\n//     case XGDiff > 0 && XGDiff < 0.25:\n//       strength = 6;\n//       break;\n//     case XGDiff <= 0 && XGDiff > -0.25:\n//       strength = 5;\n//       break;\n//     case XGDiff <= -0.25 && XGDiff > -0.5:\n//       strength = 4;\n//       break;\n//     case XGDiff <= -0.5 && XGDiff > -1:\n//       strength = 3;\n//       break;\n//     case XGDiff <= -1 && XGDiff > -1.5:\n//       strength = 2;\n//       break;\n//     case XGDiff <= -1.5:\n//       strength = 1;\n//       break;\n//     default:\n//       console.log(\"default clause triggered\");\n//       break;\n//   }\n//   return strength;\n// }\n\nexport async function getXGtoActualDifferentialStrength(XGDiff) {\n  let strength;\n  switch (true) {\n    case XGDiff >= 1.5:\n      strength = 10;\n      break;\n    case XGDiff >= 1 && XGDiff < 1.5:\n      strength = 9;\n      break;\n    case XGDiff >= 0.5 && XGDiff < 1:\n      strength = 8;\n      break;\n    case XGDiff >= 0.25 && XGDiff < 0.5:\n      strength = 7;\n      break;\n    case XGDiff > 0 && XGDiff < 0.25:\n      strength = 6;\n      break;\n    case XGDiff <= 0 && XGDiff > -0.25:\n      strength = 5;\n      break;\n    case XGDiff <= -0.25 && XGDiff > -0.5:\n      strength = 4;\n      break;\n    case XGDiff <= -0.5 && XGDiff > -1:\n      strength = 3;\n      break;\n    case XGDiff <= -1 && XGDiff > -1.5:\n      strength = 2;\n      break;\n    case XGDiff <= -1.5:\n      strength = 1;\n      break;\n    default:\n      strength = 1;\n      break;\n  }\n  return strength;\n}\n\nlet rollingGoalDiffTotalHome = [];\nlet rollingGoalDiffTotalAway = [];\n\nexport async function createStatsDiv(game, displayBool) {\n  console.log(displayBool);\n  if (game.status !== \"void\") {\n    // takes the displayBool boolean from the fixture onClick and sets the styling of the stats div from there\n    function styling(testBool) {\n      let bool = testBool;\n      if (bool === true && clicked === true) {\n        // set stats element to display flex\n        return { display: \"block\" };\n      } else {\n        // set stats element to display none\n        return { display: \"none\" };\n      }\n    }\n    let style = styling(displayBool);\n\n    if (clicked === false) {\n      alert(\"Tap Get Predictions to fetch all game stats first\");\n    } else {\n      let index = 2;\n      let divider = 10;\n\n      let gameStats = allForm.find((match) => match.id === game.id);\n      const gameArrayHome = [];\n      const gameArrayAway = [];\n      const gameArrayHomeTeamHomeGames = [];\n      const gameArrayAwayTeamAwayGames = [];\n      let goalDiffArrayHome;\n      let goalDiffArrayAway;\n      let goalDiffHomeMovingAv = [];\n      let goalDiffAwayMovingAv = [];\n      let latestHomeGoalDiff;\n      let latestAwayGoalDiff;\n\n      var getEMA = (a, r) =>\n        a.reduce(\n          (p, n, i) =>\n            i\n              ? p.concat(\n                  (2 * n) / (r + 1) + (p[p.length - 1] * (r - 1)) / (r + 1)\n                )\n              : p,\n          [a[0]]\n        );\n\n      const homeForm = gameStats.home[index];\n      const awayForm = gameStats.away[index];\n\n      if (displayBool === true) {\n        // let fixtures = await fetch(\n        //   `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${gameStats.leagueId}`\n        // );\n\n        console.log(gameStats);\n        const pos = allLeagueResultsArrayOfObjects\n          .map((i) => i.id)\n          .indexOf(gameStats.leagueId);\n        let matches = allLeagueResultsArrayOfObjects[pos];\n        // await fixtures.json().then((matches) => {\n        console.log(matches);\n        const resultHome = matches.fixtures.filter(\n          (game) =>\n            game.home_name === gameStats.home.teamName ||\n            game.away_name === gameStats.home.teamName\n        );\n\n        console.log(resultHome);\n\n        const resultHomeOnly = matches.fixtures.filter(\n          (game) => game.home_name === gameStats.home.teamName\n        );\n\n        resultHome.sort((a, b) => b.date_unix - a.date_unix);\n        resultHomeOnly.sort((a, b) => b.date_unix - a.date_unix);\n\n        for (let i = 0; i < resultHome.length; i++) {\n          let unixTimestamp = resultHome[i].date_unix;\n          let milliseconds = unixTimestamp * 1000;\n          let dateObject = new Date(milliseconds).toLocaleString(\"en-GB\", {\n            timeZone: \"UTC\",\n          });\n\n          let won;\n          let goalsScored;\n          let goalsConceeded;\n\n          switch (true) {\n            case resultHome[i].home_name === gameStats.home.teamName:\n              switch (true) {\n                case resultHome[i].homeGoalCount > resultHome[i].awayGoalCount:\n                  won = \"W\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                case resultHome[i].homeGoalCount ===\n                  resultHome[i].awayGoalCount:\n                  won = \"D\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                case resultHome[i].homeGoalCount < resultHome[i].awayGoalCount:\n                  won = \"L\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                default:\n                  break;\n              }\n              break;\n            case resultHome[i].away_name === gameStats.home.teamName:\n              switch (true) {\n                case resultHome[i].homeGoalCount > resultHome[i].awayGoalCount:\n                  won = \"L\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                case resultHome[i].homeGoalCount ===\n                  resultHome[i].awayGoalCount:\n                  won = \"D\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                case resultHome[i].homeGoalCount < resultHome[i].awayGoalCount:\n                  won = \"W\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                default:\n                  break;\n              }\n              break;\n            default:\n              break;\n          }\n\n          gameArrayHome.push({\n            id: resultHome[i].id,\n            date: dateObject,\n            homeTeam: resultHome[i].home_name,\n            homeGoals: resultHome[i].homeGoalCount,\n            homeXG: resultHome[i].team_a_xg,\n            homeOdds: resultHome[i].odds_ft_1,\n            awayTeam: resultHome[i].away_name,\n            awayGoals: resultHome[i].awayGoalCount,\n            awayXG: resultHome[i].team_b_xg,\n            awayOdds: resultHome[i].odds_ft_2,\n            won: won,\n            homeShots: resultHome[i].team_a_shots,\n            awayShots: resultHome[i].team_b_shots,\n            homeSot: resultHome[i].team_a_shotsOnTarget,\n            awaySot: resultHome[i].team_b_shotsOnTarget,\n            homeRed: resultHome[i].team_a_red_cards,\n            awayRed: resultHome[i].team_b_red_cards,\n            homePossession: resultHome[i].team_a_possession,\n            awayPossession: resultHome[i].team_b_possession,\n            homeDangerousAttacks: resultHome[i].team_a_dangerous_attacks,\n            awayDangerousAttacks: resultHome[i].team_b_dangerous_attacks,\n            homePPG: resultHome[i].pre_match_teamA_overall_ppg,\n            awayPPG: resultHome[i].pre_match_teamB_overall_ppg,\n            unixTimestamp: resultHome[i].date_unix,\n            goalsFor: goalsScored,\n            goalsAgainst: goalsConceeded,\n            btts:\n              resultHome[i].homeGoalCount > 0 && resultHome[i].awayGoalCount > 0\n                ? \"\\u2714\"\n                : \"\\u2718\",\n          });\n        }\n\n        for (let i = 0; i < resultHomeOnly.length; i++) {\n          let wonHomeOrAwayOnly;\n\n          switch (true) {\n            case resultHomeOnly[i].home_name === gameStats.home.teamName:\n              switch (true) {\n                case resultHomeOnly[i].homeGoalCount >\n                  resultHomeOnly[i].awayGoalCount:\n                  wonHomeOrAwayOnly = \"W\";\n                  gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n                  break;\n                case resultHomeOnly[i].homeGoalCount ===\n                  resultHomeOnly[i].awayGoalCount:\n                  wonHomeOrAwayOnly = \"D\";\n                  gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n                  break;\n                case resultHomeOnly[i].homeGoalCount <\n                  resultHomeOnly[i].awayGoalCount:\n                  wonHomeOrAwayOnly = \"L\";\n                  gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n                  break;\n                default:\n                  break;\n              }\n              break;\n\n            default:\n              break;\n          }\n        }\n        console.log(gameArrayHome);\n\n        goalDiffArrayHome = homeForm.allTeamResults.map(\n          (a) => a.scored - a.conceeded\n        );\n\n        // goalDiffArrayHome = gameArrayHome.map(\n        //   (a) => a.goalsFor - a.goalsAgainst\n        // );\n\n        let r = 5;\n        console.log(goalDiffArrayHome.reverse());\n        goalDiffHomeMovingAv = getEMA(\n          goalDiffArrayHome.reverse(),\n          goalDiffArrayHome.length < 5 ? goalDiffArrayHome.length : r\n        );\n\n        const cumulativeSumHome = (\n          (sum) => (value) =>\n            (sum += value)\n        )(0);\n\n        gameArrayHome.sort((a, b) => b.unixTimestamp - a.unixTimestamp);\n\n        rollingGoalDiffTotalHome = goalDiffArrayHome.map(cumulativeSumHome);\n\n        const resultAway = matches.fixtures.filter(\n          (game) =>\n            game.away_name === gameStats.away.teamName ||\n            game.home_name === gameStats.away.teamName\n        );\n\n        const resultAwayOnly = matches.fixtures.filter(\n          (game) => game.away_name === gameStats.away.teamName\n        );\n\n        resultAway.sort((a, b) => b.date_unix - a.date_unix);\n        resultAwayOnly.sort((a, b) => b.date_unix - a.date_unix);\n\n        for (let i = 0; i < resultAway.length; i++) {\n          let unixTimestamp = resultAway[i].date_unix;\n          let milliseconds = unixTimestamp * 1000;\n          let dateObject = new Date(milliseconds).toLocaleString(\"en-GB\", {\n            timeZone: \"UTC\",\n          });\n\n          let won;\n          let goalsScored;\n          let goalsConceeded;\n\n          switch (true) {\n            case resultAway[i].home_name === gameStats.away.teamName:\n              switch (true) {\n                case resultAway[i].homeGoalCount > resultAway[i].awayGoalCount:\n                  won = \"W\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                case resultAway[i].awayGoalCount ===\n                  resultAway[i].homeGoalCount:\n                  won = \"D\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                case resultAway[i].homeGoalCount < resultAway[i].awayGoalCount:\n                  won = \"L\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                default:\n                  break;\n              }\n              break;\n\n            case resultAway[i].away_name === gameStats.away.teamName:\n              switch (true) {\n                case resultAway[i].homeGoalCount > resultAway[i].awayGoalCount:\n                  won = \"L\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                case resultAway[i].homeGoalCount ===\n                  resultAway[i].awayGoalCount:\n                  won = \"D\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                case resultAway[i].homeGoalCount < resultAway[i].awayGoalCount:\n                  won = \"W\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                default:\n                  break;\n              }\n              break;\n            default:\n              break;\n          }\n\n          gameArrayAway.push({\n            id: resultAway[i].id,\n            date: dateObject,\n            homeTeam: resultAway[i].home_name,\n            homeGoals: resultAway[i].homeGoalCount,\n            homeXG: resultAway[i].team_a_xg,\n            homeOdds: resultAway[i].odds_ft_1,\n            awayTeam: resultAway[i].away_name,\n            awayGoals: resultAway[i].awayGoalCount,\n            awayXG: resultAway[i].team_b_xg,\n            awayOdds: resultAway[i].odds_ft_2,\n            won: won,\n            homeShots: resultAway[i].team_a_shots,\n            awayShots: resultAway[i].team_b_shots,\n            homeSot: resultAway[i].team_a_shotsOnTarget,\n            awaySot: resultAway[i].team_b_shotsOnTarget,\n            homeRed: resultAway[i].team_a_red_cards,\n            awayRed: resultAway[i].team_b_red_cards,\n            homePossession: resultAway[i].team_a_possession,\n            awayPossession: resultAway[i].team_b_possession,\n            homeDangerousAttacks: resultAway[i].team_a_dangerous_attacks,\n            awayDangerousAttacks: resultAway[i].team_b_dangerous_attacks,\n            homePPG: resultAway[i].pre_match_teamA_overall_ppg,\n            awayPPG: resultAway[i].pre_match_teamB_overall_ppg,\n            unixTimestamp: resultAway[i].date_unix,\n            goalsFor: goalsScored,\n            goalsAgainst: goalsConceeded,\n            btts:\n              resultAway[i].homeGoalCount > 0 && resultAway[i].awayGoalCount > 0\n                ? \"\\u2714\"\n                : \"\\u2718\",\n          });\n        }\n\n        for (let i = 0; i < resultAwayOnly.length; i++) {\n          let wonAwayOrAwayOnly;\n\n          switch (true) {\n            case resultAwayOnly[i].away_name === gameStats.away.teamName:\n              switch (true) {\n                case resultAwayOnly[i].awayGoalCount >\n                  resultAwayOnly[i].homeGoalCount:\n                  wonAwayOrAwayOnly = \"W\";\n                  gameArrayAwayTeamAwayGames.push(wonAwayOrAwayOnly);\n                  break;\n                case resultAwayOnly[i].awayGoalCount ===\n                  resultAwayOnly[i].homeGoalCount:\n                  wonAwayOrAwayOnly = \"D\";\n                  gameArrayAwayTeamAwayGames.push(wonAwayOrAwayOnly);\n                  break;\n                case resultAwayOnly[i].awayGoalCount <\n                  resultAwayOnly[i].homeGoalCount:\n                  wonAwayOrAwayOnly = \"L\";\n                  gameArrayAwayTeamAwayGames.push(wonAwayOrAwayOnly);\n                  break;\n                default:\n                  break;\n              }\n              break;\n\n            default:\n              break;\n          }\n        }\n\n        goalDiffArrayAway = awayForm.allTeamResults.map(\n          (a) => a.scored - a.conceeded\n        );\n\n        goalDiffAwayMovingAv = getEMA(\n          goalDiffArrayAway.reverse(),\n          goalDiffArrayAway.length < 5 ? goalDiffArrayAway.length : r\n        );\n\n        const cumulativeSumAway = (\n          (sum) => (value) =>\n            (sum += value)\n        )(0);\n\n        gameArrayAway.sort((a, b) => b.unixTimestamp - a.unixTimestamp);\n\n        rollingGoalDiffTotalAway = goalDiffArrayAway.map(cumulativeSumAway);\n\n        latestHomeGoalDiff =\n          goalDiffHomeMovingAv[goalDiffHomeMovingAv.length - 1];\n        latestAwayGoalDiff =\n          goalDiffAwayMovingAv[goalDiffAwayMovingAv.length - 1];\n        // });\n      }\n\n      const bttsArrayHome = Array.from(gameArrayHome, (x) => x.btts);\n      const bttsArrayAway = Array.from(gameArrayAway, (x) => x.btts);\n      const resultsArrayHome = Array.from(gameArrayHome, (x) => x.won);\n      const resultsArrayAway = Array.from(gameArrayAway, (x) => x.won);\n\n      let homeTeam = gameStats.home.teamName;\n      let awayTeam = gameStats.away.teamName;\n\n      let time = game.time;\n\n      if (homeForm.last3Points === undefined) {\n        homeForm.last3Points = getPointsFromLastX(homeForm.lastThreeForm);\n\n        homeForm.last5Points = getPointsFromLastX(homeForm.LastFiveForm);\n\n        homeForm.last6Points = getPointsFromLastX(homeForm.LastSixForm);\n\n        homeForm.last10Points = getPointsFromLastX(homeForm.LastTenForm);\n\n        awayForm.last3Points = getPointsFromLastX(awayForm.lastThreeForm);\n\n        awayForm.last5Points = getPointsFromLastX(awayForm.LastFiveForm);\n\n        awayForm.last6Points = getPointsFromLastX(awayForm.LastSixForm);\n\n        awayForm.last10Points = getPointsFromLastX(awayForm.LastTenForm);\n      }\n\n      async function getPointAverage(pointTotal, games) {\n        return pointTotal / games;\n      }\n\n      // let homeThreeGameAverage = await getPointAverage(\n      //   homeForm.last3Points,\n      //   3\n      // );\n\n      let homeFiveGameAverage = await getPointAverage(homeForm.last5Points, 5);\n\n      let homeSixGameAverage = await getPointAverage(homeForm.last6Points, 6);\n\n      let homeTenGameAverage = await getPointAverage(homeForm.last10Points, 10);\n\n      // let awayThreeGameAverage = await getPointAverage(\n      //   awayForm.last3Points,\n      //   3\n      // );\n\n      let awayFiveGameAverage = await getPointAverage(awayForm.last5Points, 5);\n\n      let awaySixGameAverage = await getPointAverage(awayForm.last6Points, 6);\n\n      let awayTenGameAverage = await getPointAverage(awayForm.last10Points, 10);\n\n      async function getPointsFromGames(formArr) {\n        const pairings = {\n          W: 3,\n          D: 1,\n          L: 0,\n        };\n        let newArr = [];\n        let arrayOfIndividualPoints = [];\n        let sum = 0;\n\n        for (let i = 0; i < formArr.length; i++) {\n          sum = sum + pairings[formArr[i]];\n          newArr.push(sum);\n          arrayOfIndividualPoints.push(pairings[formArr[i]]);\n        }\n        return [newArr, arrayOfIndividualPoints];\n      }\n\n      async function getLastGameResult(lastGame) {\n        let text;\n        switch (true) {\n          case lastGame === \"L\":\n            text = \"Lost\";\n            break;\n          case lastGame === \"D\":\n            text = \"Drew\";\n            break;\n          case lastGame === \"W\":\n            text = \"Won\";\n            break;\n          default:\n            break;\n        }\n        return text;\n      }\n\n      let homeFormTrend = [\n        homeFiveGameAverage.toFixed(2),\n        homeTenGameAverage.toFixed(2),\n      ];\n\n      let awayFormTrend = [\n        awayFiveGameAverage.toFixed(2),\n        awayTenGameAverage.toFixed(2),\n      ];\n\n      let formTextStringHome;\n      let formTextStringAway;\n\n      if (displayBool === true && gameStats.home[2].LeagueOrAll === \"League\") {\n        formTextStringHome = await GenerateFormSummary(\n          gameStats.home[2],\n          homeFormTrend,\n          gameStats.home[0]\n        );\n        formTextStringAway = await GenerateFormSummary(\n          gameStats.away[2],\n          awayFormTrend,\n          gameStats.away[0]\n        );\n      } else {\n        formTextStringHome = \"\";\n        formTextStringAway = \"\";\n      }\n\n      const favouriteRecordHome =\n        game.homeOdds < game.awayOdds || game.homeOdds === game.awayOdds\n          ? `${homeForm.teamName} have been favourites ${\n              homeForm.favouriteCount\n            } times. Of these games, they have Won: ${homeForm.oddsReliabilityWin.toFixed(\n              0\n            )}%, Drawn:  ${homeForm.oddsReliabilityDraw.toFixed(\n              0\n            )}%, Lost:  ${homeForm.oddsReliabilityLose.toFixed(0)}%`\n          : `${homeForm.teamName} have been underdogs ${\n              homeForm.underdogCount\n            } times. Of these games, they have Won: ${homeForm.oddsReliabilityWinAsUnderdog.toFixed(\n              0\n            )}%, Drawn:  ${homeForm.oddsReliabilityDrawAsUnderdog.toFixed(\n              0\n            )}%, Lost:  ${homeForm.oddsReliabilityLoseAsUnderdog.toFixed(0)}%`;\n      const favouriteRecordAway =\n        game.homeOdds > game.awayOdds || game.homeOdds === game.awayOdds\n          ? `${awayForm.teamName} have been favourites ${\n              awayForm.favouriteCount\n            } times. Of these games, they have Won: ${awayForm.oddsReliabilityWin.toFixed(\n              0\n            )}%, Drawn:  ${awayForm.oddsReliabilityDraw.toFixed(\n              0\n            )}%, Lost:  ${awayForm.oddsReliabilityLose.toFixed(0)}%`\n          : `${awayForm.teamName} have been underdogs ${\n              awayForm.underdogCount\n            } times. Of these games, they have Won: ${awayForm.oddsReliabilityWinAsUnderdog.toFixed(\n              0\n            )}%, Drawn:  ${awayForm.oddsReliabilityDrawAsUnderdog.toFixed(\n              0\n            )}%, Lost:  ${awayForm.oddsReliabilityLoseAsUnderdog.toFixed(0)}%`;\n\n      let homeLastGame = await getLastGameResult(homeForm.LastFiveForm[4]);\n      let awayLastGame = await getLastGameResult(awayForm.LastFiveForm[4]);\n\n      // let homeAttackStrength = await getAttackStrength(\n      //   homeForm.ScoredOverall / 10\n      // );\n\n      const attackingMetricsHome = {\n        // averagePossession: homeForm.AveragePossessionOverall,\n        \"Average Dangerous Attacks\": homeForm.AverageDangerousAttacksOverall,\n        \"Average Shots\": homeForm.AverageShots,\n        \"Average Shots On Target\": homeForm.AverageShotsOnTargetOverall,\n        \"Average Expected Goals\": homeForm.XGOverall,\n        \"Recent XG\": homeForm.XGlast5 ? homeForm.XGlast5 : homeForm.XGOverall,\n        \"Average Goals\":\n          homeForm.averageScoredLeague !== undefined &&\n          homeForm.averageScoredLeague !== null\n            ? homeForm.averageScoredLeague\n            : homeForm.ScoredOverall / 10,\n      };\n      const attackingMetricsAway = {\n        // averagePossession: awayForm.AveragePossessionOverall,\n        \"Average Dangerous Attacks\": awayForm.AverageDangerousAttacksOverall,\n        \"Average Shots\": awayForm.AverageShots,\n        \"Average Shots On Target\": awayForm.AverageShotsOnTargetOverall,\n        \"Average Expected Goals\": awayForm.XGOverall,\n        \"Recent XG\": awayForm.XGlast5 ? awayForm.XGlast5 : awayForm.XGOverall,\n        \"Average Goals\":\n          awayForm.averageScoredLeague !== undefined &&\n          awayForm.averageScoredLeague !== null\n            ? awayForm.averageScoredLeague\n            : awayForm.ScoredOverall / 10,\n      };\n\n      const defensiveMetricsHome = {\n        \"Clean Sheet Percentage\": 100 - homeForm.CleanSheetPercentage,\n        \"Average XG Against\": homeForm.XGAgainstAvgOverall,\n        \"Recent XG Against\": homeForm.XGAgainstlast5\n          ? homeForm.XGAgainstlast5\n          : homeForm.XGAgainstAvgOverall,\n        \"Average Goals Against\":\n          homeForm.averageConceededLeague !== undefined &&\n          homeForm.averageConceededLeague !== null\n            ? homeForm.averageConceededLeague\n            : homeForm.ConcededOverall / 10,\n      };\n\n      const defensiveMetricsAway = {\n        \"Clean Sheet Percentage\": 100 - awayForm.CleanSheetPercentage,\n        \"Average XG Against\": awayForm.XGAgainstAvgOverall,\n        \"Recent XG Against\": awayForm.XGAgainstlast5\n          ? awayForm.XGAgainstlast5\n          : awayForm.XGAgainstAvgOverall,\n        \"Average Goals Against\":\n          awayForm.averageConceededLeague !== undefined &&\n          awayForm.averageConceededLeague !== null\n            ? awayForm.averageConceededLeague\n            : awayForm.ConcededOverall / 10,\n      };\n\n      let homeAttackStrength;\n      let homeOnlyAttackStrength;\n      let homeDefenceStrength;\n      let homeOnlyDefenceStrength;\n      let homePossessionStrength;\n      let homeOnlyPossessionStrength;\n      let homeXGForStrength;\n      let homeOnlyXGForStrength;\n      let homeXGAgainstStrength;\n      let homeOnlyXGAgainstStrength;\n      let awayAttackStrength;\n      let awayOnlyAttackStrength;\n      let awayDefenceStrength;\n      let awayOnlyDefenceStrength;\n      let awayPossessionStrength;\n      let awayOnlyPossessionStrength;\n      let awayXGForStrength;\n      let awayOnlyXGForStrength;\n      let awayXGAgainstStrength;\n      let awayOnlyXGAgainstStrength;\n      let homeDirectnessStrength;\n      let homeOnlyDirectnessStrength;\n      let awayDirectnessStrength;\n      let awayOnlyDirectnessStrength;\n      let homeAccuracyOverallStrength;\n      let homeOnlyAccuracyOverallStrength;\n      let awayAccuracyOverallStrength;\n      let awayOnlyAccuracyOverallStrength;\n\n      if (homeForm.xgForStrength) {\n        console.log(\"not calculating\");\n        homeAttackStrength = homeForm.attackingStrength;\n        homeOnlyAttackStrength = homeForm.attackingStrengthHomeOnly;\n        homeDefenceStrength = homeForm.defensiveStrength;\n        homeOnlyDefenceStrength = homeForm.defensiveStrengthHomeOnly;\n        homePossessionStrength = homeForm.possessionStrength;\n        homeOnlyPossessionStrength = homeForm.possessionStrengthHomeOnly;\n        homeXGForStrength = homeForm.xgForStrength;\n        homeOnlyXGForStrength = homeForm.xgForStrengthHomeOnly;\n        homeXGAgainstStrength = homeForm.xgAgainstStrength;\n        homeOnlyXGAgainstStrength = homeForm.xgAgainstStrengthHomeOnly;\n        homeDirectnessStrength = homeForm.directnessOverallStrength;\n        homeOnlyDirectnessStrength = homeForm.directnessHomeStrength;\n        homeAccuracyOverallStrength = homeForm.accuracyOverallStrength;\n        homeOnlyAccuracyOverallStrength =\n          homeForm.accuracyHomeStrength;\n\n        awayAttackStrength = awayForm.attackingStrength;\n        awayOnlyAttackStrength = awayForm.attackingStrengthAwayOnly;\n        awayDefenceStrength = awayForm.defensiveStrength;\n        awayOnlyDefenceStrength = awayForm.defensiveStrengthAwayOnly;\n        awayPossessionStrength = awayForm.possessionStrength;\n        awayOnlyPossessionStrength = awayForm.possessionStrengthAwayOnly;\n        awayXGForStrength = awayForm.xgForStrength;\n        awayOnlyXGForStrength = awayForm.xgForStrengthAwayOnly;\n        awayXGAgainstStrength = awayForm.xgAgainstStrength;\n        awayOnlyXGAgainstStrength = awayForm.xgAgainstStrengthAwayOnly;\n        awayDirectnessStrength = awayForm.directnessOverallStrength;\n        awayOnlyDirectnessStrength = awayForm.directnessAwayStrength;\n        awayAccuracyOverallStrength = awayForm.accuracyOverallStrength;\n        awayOnlyAccuracyOverallStrength =\n          awayForm.accuracyAwayStrength;\n      } else {\n        homeAttackStrength = await calculateAttackingStrength(\n          attackingMetricsHome\n        );\n\n        homeDefenceStrength = await calculateDefensiveStrength(\n          defensiveMetricsHome\n        );\n\n        homePossessionStrength = await calculateMetricStrength(\n          \"averagePossession\",\n          homeForm.AveragePossessionOverall\n        );\n\n        homeXGForStrength = await calculateMetricStrength(\n          \"xgFor\",\n          gameStats.home[2].XGOverall\n        );\n\n        homeXGAgainstStrength = await calculateMetricStrength(\n          \"xgAgainst\",\n          3 - gameStats.home[2].XGAgainstAvgOverall\n        );\n        homeDirectnessStrength = await calculateMetricStrength(\n          \"directnessOverall\",\n          homeForm.directnessOverall\n        );\n        homeAccuracyOverallStrength = await calculateMetricStrength(\n          \"accuracyOverall\",\n          homeForm.shootingAccuracy\n        );\n\n        awayAttackStrength = await calculateAttackingStrength(\n          attackingMetricsAway\n        );\n        awayDefenceStrength = await calculateDefensiveStrength(\n          defensiveMetricsAway\n        );\n        awayPossessionStrength = await calculateMetricStrength(\n          \"averagePossession\",\n          awayForm.AveragePossessionOverall\n        );\n        awayXGForStrength = await calculateMetricStrength(\n          \"xgFor\",\n          gameStats.away[2].XGOverall\n        );\n\n        awayXGAgainstStrength = await calculateMetricStrength(\n          \"xgAgainst\",\n          3 - gameStats.away[2].XGAgainstAvgOverall\n        );\n        awayDirectnessStrength = await calculateMetricStrength(\n          \"directnessOverall\",\n          awayForm.directnessOverall\n        );\n        awayAccuracyOverallStrength = await calculateMetricStrength(\n          \"accuracyOverall\",\n          awayForm.shootingAccuracy\n        );\n      }\n\n      let [formPointsHome, testArrayHome] = await getPointsFromGames(\n        gameStats.home[2].WDLRecord\n      );\n      let [formPointsAway, testArrayAway] = await getPointsFromGames(\n        gameStats.away[2].WDLRecord\n      );\n\n      let rollingGoalDiffHome = [\n        (gameStats.home[0].ScoredOverall - gameStats.home[0].ConcededOverall) /\n          10,\n        (gameStats.home[1].ScoredOverall - gameStats.home[1].ConcededOverall) /\n          6,\n        (gameStats.home[2].ScoredOverall - gameStats.home[2].ConcededOverall) /\n          5,\n      ];\n\n      let rollingGoalDiffAway = [\n        (gameStats.away[0].ScoredOverall - gameStats.away[0].ConcededOverall) /\n          10,\n        (gameStats.away[1].ScoredOverall - gameStats.away[1].ConcededOverall) /\n          6,\n        (gameStats.away[2].ScoredOverall - gameStats.away[2].ConcededOverall) /\n          5,\n      ];\n\n      const formDataMatch = [];\n\n      formDataMatch.push({\n        btts: game.btts_potential,\n      });\n\n      const formDataHome = [];\n\n      formDataHome.push({\n        name: game.homeTeam,\n        Last5: gameStats.home[2].LastFiveForm,\n        LeagueOrAll: gameStats.home[2].LeagueOrAll,\n        AverageGoals: homeForm.ScoredOverall / 10,\n        AverageConceeded: homeForm.ConcededOverall / 10,\n        AverageXG: homeForm.XGOverall,\n        AverageXGConceded: homeForm.XGAgainstAvgOverall,\n        AveragePossession: homeForm.AveragePossessionOverall,\n        AverageShotsOnTarget: homeForm.AverageShotsOnTargetOverall,\n        AverageDangerousAttacks: homeForm.AverageDangerousAttacksOverall,\n        homeOrAway: \"Home\",\n        leaguePosition: homeForm.LeaguePosition,\n        Last5PPG: homeForm.PPG,\n        SeasonPPG: homeForm.SeasonPPG,\n        lastGame: homeLastGame,\n        formRun: homeForm.formRun,\n        goalDifference: homeForm.goalDifference,\n        goalDifferenceHomeOrAway: homeForm.goalDifferenceHomeOrAway,\n        // BttsPercentage: homeForm.BttsPercentage || \"-\",\n        // BttsPercentageHomeOrAway: homeForm.BttsPercentageHomeOrAway || \"-\",\n        CardsTotal: homeForm.CardsTotal || \"-\",\n        CornersAverage: homeForm.AverageCorners || \"-\",\n        FormTextStringHome: formTextStringHome,\n        FavouriteRecord:\n          favouriteRecordHome + `. ${homeForm.reliabilityString}`,\n        BTTSArray: bttsArrayHome,\n        Results: resultsArrayHome,\n        // BTTSAll: homeForm.last10btts,\n        // BTTSHorA: homeForm.last10bttsHome,\n      });\n\n      const formDataAway = [];\n\n      formDataAway.push({\n        name: game.awayTeam,\n        Last5: gameStats.away[2].LastFiveForm,\n        LeagueOrAll: gameStats.away[2].LeagueOrAll,\n        AverageGoals: awayForm.ScoredOverall / 10,\n        AverageConceeded: awayForm.ConcededOverall / 10,\n        AverageXG: awayForm.XGOverall,\n        AverageXGConceded: awayForm.XGAgainstAvgOverall,\n        AveragePossession: awayForm.AveragePossessionOverall,\n        AverageShotsOnTarget: awayForm.AverageShotsOnTargetOverall,\n        AverageDangerousAttacks: awayForm.AverageDangerousAttacksOverall,\n        homeOrAway: \"Away\",\n        leaguePosition: awayForm.LeaguePosition,\n        Last5PPG: awayForm.PPG,\n        SeasonPPG: awayForm.SeasonPPG,\n        lastGame: awayLastGame,\n        formRun: awayForm.formRun,\n        goalDifference: awayForm.goalDifference,\n        goalDifferenceHomeOrAway: awayForm.goalDifferenceHomeOrAway,\n        // BttsPercentage: awayForm.BttsPercentage || \"-\",\n        // BttsPercentageHomeOrAway: awayForm.BttsPercentageHomeOrAway || \"-\",\n        CardsTotal: awayForm.CardsTotal || \"-\",\n        CornersAverage: awayForm.AverageCorners || \"-\",\n        FormTextStringAway: formTextStringAway,\n        FavouriteRecord:\n          favouriteRecordAway + `. ${awayForm.reliabilityString}`,\n        BTTSArray: bttsArrayAway,\n        Results: resultsArrayAway,\n        ResultsHomeOrAway: resultsArrayAway,\n        // BTTSAll: awayForm.last10btts,\n        // BTTSHorA: awayForm.last10bttsAway,\n      });\n\n      let formArrayHome;\n      let formArrayAway;\n      let chartType;\n\n      if (formPointsHome.length > 1) {\n        formArrayHome = formPointsHome;\n        formArrayAway = formPointsAway;\n        chartType = \"Points over time\";\n      } else {\n        formArrayHome = [\n          homeTenGameAverage,\n          homeSixGameAverage,\n          homeFiveGameAverage,\n        ];\n        formArrayAway = [\n          awayTenGameAverage,\n          awaySixGameAverage,\n          awayFiveGameAverage,\n        ];\n        chartType = \"Rolling average points over last 10\";\n      }\n\n      ReactDOM.render(\n        <div style={style}>\n          <div className=\"H2HStats\" id={`H2HStats${game.id}`}></div>\n          <div className=\"TrendsHome\" id={`TrendsHome${game.id}`}></div>\n          <div className=\"TrendsAway\" id={`TrendsAway${game.id}`}></div>\n        </div>,\n        document.getElementById(\"history\" + homeTeam)\n      );\n\n      //This tournament does not have league positions\n      if (game.leagueName === \"Europe UEFA Women's Euro\") {\n        game.homeTeamHomePosition = \"N/A\";\n        game.awayTeamAwayPosition = \"N/A\";\n      }\n\n      function singleResult(game) {\n        return (\n          <div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeXG}</span>\n              <span className=\"column\">XG</span>\n              <span className=\"column\">{game.awayXG}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeShots}</span>\n              <span className=\"column\">Shots</span>\n              <span className=\"column\">{game.awayShots}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeSot}</span>\n              <span className=\"column\">SOT</span>\n              <span className=\"column\">{game.awaySot}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeDangerousAttacks}</span>\n              <span className=\"column\">Dangerous Attacks</span>\n              <span className=\"column\">{game.awayDangerousAttacks}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homePossession}%</span>\n              <span className=\"column\">Possession</span>\n              <span className=\"column\">{game.awayPossession}%</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeRed}</span>\n              <span className=\"column\">Red cards</span>\n              <span className=\"column\">{game.awayRed}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homePPG}</span>\n              <span className=\"column\">PPG (pre-match)</span>\n              <span className=\"column\">{game.awayPPG}</span>\n            </div>\n          </div>\n        );\n      }\n\n      const overviewHome = gameArrayHome.slice(0, 10).map((game) => (\n        <div>\n          <Collapsable\n            classNameButton=\"ResultButton\"\n            buttonText={\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {game.homeGoals} : {game.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n              </div>\n            }\n            element={singleResult(game)}\n          />\n        </div>\n      ));\n\n      const overviewAway = gameArrayAway.slice(0, 10).map((game) => (\n        <div>\n          <Collapsable\n            classNameButton=\"ResultButton\"\n            buttonText={\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {game.homeGoals} : {game.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n              </div>\n            }\n            element={singleResult(game)}\n          />\n        </div>\n      ));\n\n      function StatsHome() {\n        return (\n          <div className=\"flex-childOne\">\n            <ul style={style}>\n              <Stats\n                style={style}\n                homeOrAway=\"Home\"\n                gameCount={divider}\n                key={formDataHome[0].name}\n                last5={formDataHome[0].Last5}\n                homeOrAwayResults={gameArrayHomeTeamHomeGames}\n                LeagueOrAll={formDataHome[0].LeagueOrAll}\n                className={\"KeyStatsHome\"}\n                name={formDataHome[0].name}\n                goals={\n                  homeForm.averageScoredLeague !== undefined &&\n                  homeForm.averageScoredLeague !== null\n                    ? homeForm.averageScoredLeague.toFixed(2)\n                    : formDataHome[0].AverageGoals\n                }\n                conceeded={\n                  homeForm.averageConceededLeague !== undefined &&\n                  homeForm.averageConceededLeague !== null\n                    ? homeForm.averageConceededLeague.toFixed(2)\n                    : formDataHome[0].AverageConceeded\n                }\n                XG={formDataHome[0].AverageXG}\n                XGConceded={formDataHome[0].AverageXGConceded}\n                possession={formDataHome[0].AveragePossession}\n                sot={formDataHome[0].AverageShotsOnTarget}\n                dangerousAttacks={formDataHome[0].AverageDangerousAttacks}\n                leaguePosition={\n                  formDataHome[0].leaguePosition\n                    ? formDataHome[0].leaguePosition\n                    : 0\n                }\n                rawPosition={game.homeRawPosition ? game.homeRawPosition : 0}\n                homeOrAwayLeaguePosition={\n                  game.homeTeamHomePosition ? game.homeTeamHomePosition : 0\n                }\n                winPercentage={\n                  game.homeTeamWinPercentage ? game.homeTeamWinPercentage : 0\n                }\n                lossPercentage={\n                  game.homeTeamLossPercentage ? game.homeTeamLossPercentage : 0\n                }\n                drawPercentage={\n                  game.homeTeamDrawPercentage ? game.homeTeamDrawPercentage : 0\n                }\n                ppg={formDataHome[0].SeasonPPG}\n                formTrend={[\n                  homeTenGameAverage.toFixed(2),\n                  homeSixGameAverage.toFixed(2),\n                  homeFiveGameAverage.toFixed(2),\n                ]}\n                lastGame={homeLastGame}\n                formRun={formDataHome[0].formRun}\n                goalDifference={formDataHome[0].goalDifference}\n                goalDifferenceHomeOrAway={\n                  formDataHome[0].goalDifferenceHomeOrAway\n                }\n                BttsPercentage={formDataHome[0].BttsPercentage}\n                BttsPercentageHomeOrAway={\n                  formDataHome[0].BttsPercentageHomeOrAway\n                }\n                // BTTSAll={\n                //   formDataHome[0].BTTSAll\n                //     ? formDataHome[0].BTTSAll\n                //     : '\"Get Predictions\" first'\n                // }\n                // BTTSHorA={\n                //   formDataHome[0].BTTSHorA\n                //     ? formDataHome[0].BTTSHorA\n                //     : '\"Get Predictions\" first'\n                // }\n                BTTSArray={formDataHome[0].BTTSArray}\n                Results={formDataHome[0].Results}\n                ResultsHomeOrAway={formDataHome[0].wonHomeOrAwayOnly}\n                CardsTotal={formDataHome[0].CardsTotal}\n                CornersAverage={formDataHome[0].CornersAverage}\n                ScoredBothHalvesPercentage={\n                  formDataHome[0].ScoredBothHalvesPercentage\n                }\n                FormTextString={formDataHome[0].FormTextStringHome}\n                FavouriteRecord={formDataHome[0].FavouriteRecord}\n              />\n            </ul>\n          </div>\n        );\n      }\n\n      function StatsAway() {\n        return (\n          <div className=\"flex-childTwo\">\n            <ul style={style}>\n              <Stats\n                style={style}\n                homeOrAway=\"Away\"\n                gameCount={divider}\n                key={formDataAway[0].name}\n                last5={formDataAway[0].Last5}\n                homeOrAwayResults={gameArrayAwayTeamAwayGames}\n                LeagueOrAll={formDataAway[0].LeagueOrAll}\n                className={\"KeyStatsAway\"}\n                name={formDataAway[0].name}\n                goals={\n                  awayForm.averageScoredLeague !== undefined &&\n                  awayForm.averageScoredLeague !== null\n                    ? awayForm.averageScoredLeague.toFixed(2)\n                    : formDataAway[0].AverageGoals\n                }\n                conceeded={\n                  awayForm.averageConceededLeague !== undefined &&\n                  awayForm.averageConceededLeague !== null\n                    ? awayForm.averageConceededLeague.toFixed(2)\n                    : formDataAway[0].AverageConceeded\n                }\n                XG={formDataAway[0].AverageXG}\n                XGConceded={formDataAway[0].AverageXGConceded}\n                //todo add goal diff and btts percentages\n                possession={formDataAway[0].AveragePossession}\n                rawPosition={game.awayRawPosition ? game.awayRawPosition : 0}\n                sot={formDataAway[0].AverageShotsOnTarget}\n                dangerousAttacks={formDataAway[0].AverageDangerousAttacks}\n                leaguePosition={\n                  formDataAway[0].leaguePosition\n                    ? formDataAway[0].leaguePosition\n                    : 0\n                }\n                homeOrAwayLeaguePosition={\n                  game.awayTeamAwayPosition ? game.awayTeamAwayPosition : 0\n                }\n                winPercentage={\n                  game.awayTeamWinPercentage ? game.awayTeamWinPercentage : 0\n                }\n                lossPercentage={\n                  game.awayTeamLossPercentage ? game.awayTeamLossPercentage : 0\n                }\n                drawPercentage={\n                  game.awayTeamDrawPercentage ? game.awayTeamDrawPercentage : 0\n                }\n                ppg={formDataAway[0].SeasonPPG}\n                formTrend={[\n                  awayTenGameAverage.toFixed(2),\n                  awaySixGameAverage.toFixed(2),\n                  awayFiveGameAverage.toFixed(2),\n                ]}\n                lastGame={awayLastGame}\n                formRun={formDataAway[0].formRun}\n                goalDifference={formDataAway[0].goalDifference}\n                goalDifferenceHomeOrAway={\n                  formDataAway[0].goalDifferenceHomeOrAway\n                }\n                BttsPercentage={formDataAway[0].BttsPercentage}\n                BttsPercentageHomeOrAway={\n                  formDataAway[0].BttsPercentageHomeOrAway\n                }\n                // BTTSAll={\n                //   formDataAway[0].BTTSAll\n                //     ? formDataAway[0].BTTSAll\n                //     : '\"Get Predictions\" first'\n                // }\n                // BTTSHorA={\n                //   formDataAway[0].BTTSHorA\n                //     ? formDataAway[0].BTTSHorA\n                //     : '\"Get Predictions\" first'\n                // }\n                BTTSArray={formDataAway[0].BTTSArray}\n                Results={formDataAway[0].Results}\n                CardsTotal={formDataAway[0].CardsTotal}\n                CornersAverage={formDataAway[0].CornersAverage}\n                ScoredBothHalvesPercentage={\n                  formDataAway[0].ScoredBothHalvesPercentage\n                }\n                FormTextString={formDataAway[0].FormTextStringAway}\n                FavouriteRecord={formDataAway[0].FavouriteRecord}\n              />\n            </ul>\n          </div>\n        );\n      }\n\n      const pointsHome = getPointsFromLastX(formDataHome[0].Last5);\n      const pointsHomeAv = await getPointAverage(pointsHome, 5);\n      const pointsAway = getPointsFromLastX(formDataAway[0].Last5);\n      const pointsAwayAv = await getPointAverage(pointsAway, 5);\n\n      ReactDOM.render(\n        <div style={style}>\n          <div className=\"Chart\" id={`Chart${game.id}`} style={style}>\n            <RadarChart\n            title = \"XG Tipping Strength Ratings - All Games\"\n              data={[\n                homeAttackStrength,\n                homeDefenceStrength,\n                homePossessionStrength,\n                homeXGForStrength,\n                homeXGAgainstStrength,\n                homeDirectnessStrength,\n                homeAccuracyOverallStrength,\n              ]}\n              data2={[\n                awayAttackStrength,\n                awayDefenceStrength,\n                awayPossessionStrength,\n                awayXGForStrength,\n                awayXGAgainstStrength,\n                awayDirectnessStrength,\n                awayAccuracyOverallStrength,\n              ]}\n              team1={game.homeTeam}\n              team2={game.awayTeam}\n            ></RadarChart>\n\n            <RadarChart\n            title = \"XG Tipping Strength Ratings - Home/Away Games Only\"\n              data={[\n                homeOnlyAttackStrength,\n                homeOnlyDefenceStrength,\n                homeOnlyPossessionStrength,\n                homeOnlyXGForStrength,\n                homeOnlyXGAgainstStrength,\n                homeOnlyDirectnessStrength,\n                homeOnlyAccuracyOverallStrength,\n              ]}\n              data2={[\n                awayOnlyAttackStrength,\n                awayOnlyDefenceStrength,\n                awayOnlyPossessionStrength,\n                awayOnlyXGForStrength,\n                awayOnlyXGAgainstStrength,\n                awayOnlyDirectnessStrength,\n                awayOnlyAccuracyOverallStrength,\n              ]}\n              team1={game.homeTeam}\n              team2={game.awayTeam}\n            ></RadarChart>\n            <BarChart\n              data1={[\n                homeForm.averageScoredLeague !== undefined &&\n                homeForm.averageScoredLeague !== null\n                  ? homeForm.averageScoredLeague.toFixed(2)\n                  : formDataHome[0].AverageGoals,\n                awayForm.averageConceededLeague !== undefined &&\n                awayForm.averageConceededLeague !== null\n                  ? awayForm.averageConceededLeague.toFixed(2)\n                  : formDataAway[0].AverageConceeded,\n                pointsHomeAv,\n                formDataHome[0].AverageXG,\n                formDataAway[0].AverageXGConceded,\n                formDataHome[0].AverageShotsOnTarget,\n                formDataHome[0].AverageDangerousAttacks / 7.5,\n                formDataHome[0].AveragePossession / 7.5,\n                formDataHome[0].goalDifferenceHomeOrAway / 5,\n                formDataHome[0].CornersAverage,\n              ]}\n              data2={[\n                awayForm.averageScoredLeague !== undefined &&\n                awayForm.averageScoredLeague !== null\n                  ? awayForm.averageScoredLeague.toFixed(2)\n                  : formDataAway[0].AverageGoals,\n                homeForm.averageConceededLeague !== undefined &&\n                homeForm.averageConceededLeague !== null\n                  ? homeForm.averageConceededLeague.toFixed(2)\n                  : formDataHome[0].AverageConceeded,\n                pointsAwayAv,\n                formDataAway[0].AverageXG,\n                formDataHome[0].AverageXGConceded,\n                formDataAway[0].AverageShotsOnTarget,\n                formDataAway[0].AverageDangerousAttacks / 7.5,\n                formDataAway[0].AveragePossession / 7.5,\n                formDataAway[0].goalDifferenceHomeOrAway / 5,\n                formDataAway[0].CornersAverage,\n              ]}\n            ></BarChart>\n            <Chart\n              height={3}\n              depth={0}\n              data1={formArrayHome}\n              data2={formArrayAway}\n              team1={game.homeTeam}\n              team2={game.awayTeam}\n              type={chartType}\n              tension={0}\n            ></Chart>\n            <Chart\n              height={\n                Math.max(\n                  rollingGoalDiffTotalHome[rollingGoalDiffTotalHome.length - 1],\n                  rollingGoalDiffTotalAway[rollingGoalDiffTotalAway.length - 1]\n                ) > 2\n                  ? Math.max(\n                      rollingGoalDiffTotalHome[\n                        rollingGoalDiffTotalHome.length - 1\n                      ],\n                      rollingGoalDiffTotalAway[\n                        rollingGoalDiffTotalAway.length - 1\n                      ]\n                    )\n                  : 2\n              }\n              depth={\n                Math.min(\n                  rollingGoalDiffTotalHome[rollingGoalDiffTotalHome.length - 1],\n                  rollingGoalDiffTotalAway[rollingGoalDiffTotalAway.length - 1]\n                ) < -2\n                  ? Math.min(\n                      rollingGoalDiffTotalHome[\n                        rollingGoalDiffTotalHome.length - 1\n                      ],\n                      rollingGoalDiffTotalAway[\n                        rollingGoalDiffTotalAway.length - 1\n                      ]\n                    )\n                  : -2\n              }\n              data1={rollingGoalDiffTotalHome}\n              data2={rollingGoalDiffTotalAway}\n              team1={game.homeTeam}\n              team2={game.awayTeam}\n              type={\"Goal difference over time\"}\n              tension={0.3}\n            ></Chart>\n          </div>\n          <div style={style}>\n            <Div className=\"MatchTime\" text={`Kick off: ${time} GMT`}></Div>\n            <Div\n              text={`Last league games (most recent first)`}\n              className={\"LastGameHeader\"}\n            ></Div>\n          </div>\n          <div className=\"flex-container\">\n            <div className=\"flex-childOneOverviewSmall\">{overviewHome}</div>\n            <div className=\"flex-childTwoOverviewSmall\">{overviewAway}</div>\n          </div>\n          {/* <Collapsable\n            className={\"Detail\"}\n            classNameTwo={\"flex-childOneOverview\"}\n            classNameThree={\"flex-childTwoOverview\"}\n            classNameFlex={\"flex-element\"}\n            classNameButton={\"DetailedFixtures\"}\n            buttonText={\"Detailed results\"}\n            newText={\"Detailed results\"}\n            element={contentHome}\n            elementTwo={contentAway}\n            // style={style}\n          /> */}\n          <div className=\"flex-container\">\n            <StatsHome />\n            <StatsAway />\n          </div>\n          <input type=\"hidden\" name=\"IL_IN_ARTICLE\" />\n          <Button\n            className=\"MoreStats\"\n            onClickEvent={() =>\n              getTeamStats(\n                game.id,\n                game.homeTeam,\n                game.awayTeam,\n                formDataHome[0].BttsPercentage,\n                formDataHome[0].BttsPercentageHomeOrAway,\n                formDataAway[0].BttsPercentage,\n                formDataAway[0].BttsPercentageHomeOrAway\n              )\n            }\n            text={\"Fixture trends\"}\n          ></Button>\n        </div>,\n        document.getElementById(\"stats\" + homeTeam)\n      );\n    }\n\n    // ReactDOM.render(\n    //   <Button\n    //     className=\"MoreStats\"\n    //     style={style}\n    //     onClickEvent={() =>\n    //       getTeamStats(\n    //         game.id,\n    //         game.homeTeam,\n    //         game.awayTeam,\n    //         formDataHome[0].BttsPercentage,\n    //         formDataHome[0].BttsPercentageHomeOrAway,\n    //         formDataAway[0].BttsPercentage,\n    //         formDataAway[0].BttsPercentageHomeOrAway\n    //       )\n    //     }\n    //     text={\"Fixture trends\"}\n    //   ></Button>,\n    //   document.getElementById(`H2HStats${game.id}`)\n    // );\n  }\n}\n","import React, { Fragment, useState } from \"react\";\nimport { CreateBadge } from \"./createBadge\";\nimport { createStatsDiv } from \"../logic/getStats\";\nimport { renderTable } from \"../logic/getFixtures\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport { useDispatch } from \"react-redux\";\nimport { setData } from \"../logic/dataSlice\";\nimport { Provider } from \"react-redux\";\nimport store from \"../logic/store\"; // Import your Redux store\nimport { formObjectHome } from \"../logic/getScorePredictions\";\nimport { clicked } from \"../logic/getScorePredictions\";\n\nlet resultValue;\nvar count;\nlet mockValue;\nvar setCount;\n\nfunction toggle(bool) {\n  count = !bool;\n  return count;\n}\n\nfunction GetDivider(fixture, mock) {\n  const matchStatus = fixture.status;\n  let isPrediction = resultValue;\n\n  if (fixture.fixture.omit === true && matchStatus !== \"complete\") {\n    isPrediction = true;\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"Omitted\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (mockValue === true && matchStatus === \"complete\") {\n    isPrediction = false;\n    return (\n      <Fragment>\n        <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n        <div\n          className=\"CorrectScore\"\n          key={fixture.fixture.homeTeam}\n          data-cy={\"score-\" + fixture.fixture.id}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (mockValue === true && matchStatus !== \"complete\") {\n    isPrediction = true;\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (isPrediction === false && matchStatus !== \"complete\") {\n    return (\n      <div className=\"divider\" data-cy={\"divider-\" + fixture.fixture.id}>\n        {\"V\"}\n      </div>\n    );\n  } else if (isPrediction === false && matchStatus === \"complete\") {\n    return (\n      <div\n        className=\"Result\"\n        data-cy={\"result-\" + fixture.fixture.id}\n      >{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n    );\n  } else if (isPrediction === true && matchStatus === \"complete\") {\n    let outcome;\n    let prediction;\n\n    switch (true) {\n      case fixture.fixture.homeGoals > fixture.fixture.awayGoals:\n        outcome = 0;\n        fixture.fixture.winner = fixture.fixture.homeTeam;\n        fixture.fixture.outcome = \"homeWin\";\n        break;\n      case fixture.fixture.homeGoals === fixture.fixture.awayGoals:\n        outcome = 1;\n        fixture.fixture.winner = \"draw\";\n        fixture.fixture.outcome = \"draw\";\n\n        break;\n      case fixture.fixture.homeGoals < fixture.fixture.awayGoals:\n        outcome = 2;\n        fixture.fixture.winner = fixture.fixture.awayTeam;\n        fixture.fixture.outcome = \"awayWin\";\n\n        break;\n      default:\n        break;\n    }\n\n    switch (true) {\n      case fixture.fixture.goalsA > fixture.fixture.goalsB:\n        prediction = 0;\n        break;\n      case fixture.fixture.goalsA === fixture.fixture.goalsB:\n        prediction = 1;\n        break;\n      case fixture.fixture.goalsA < fixture.fixture.goalsB:\n        prediction = 2;\n        break;\n      default:\n        break;\n    }\n\n    if (fixture.fixture.omit === true) {\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"Omitted\"\n            key={fixture.fixture.homeTeam}\n            data-cy={\"score-\" + fixture.fixture.id}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    } else if (outcome === prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        switch (true) {\n          case outcome === 0:\n            fixture.fixture.profit = fixture.fixture.homeOdds;\n            break;\n          case outcome === 1:\n            fixture.fixture.profit = fixture.fixture.drawOdds;\n            break;\n          case outcome === 2:\n            fixture.fixture.profit = fixture.fixture.awayOdds;\n            break;\n          default:\n            break;\n        }\n      } else fixture.fixture.profit = 1;\n\n      if (\n        fixture.fixture.goalsA === fixture.fixture.homeGoals &&\n        fixture.fixture.goalsB === fixture.fixture.awayGoals\n      ) {\n        fixture.fixture.exactScore = true;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"ExactScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      } else {\n        fixture.fixture.exactScore = false;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"CorrectScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      }\n    } else if (outcome !== prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        fixture.fixture.profit = 0;\n      } else {\n        fixture.fixture.profit = 1;\n      }\n      fixture.fixture.exactScore = false;\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"IncorrectScore\"\n            key={fixture.fixture.awayTeam}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    }\n  } else {\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  }\n}\n\nfunction renderLeagueName(fixture, mock) {\n  mockValue = mock;\n\n  let name = fixture.leagueName;\n  let id =\n    allLeagueResultsArrayOfObjects.length > 0\n      ? allLeagueResultsArrayOfObjects[fixture.leagueIndex].id\n      : null;\n  if (name === null || mock === true) {\n    return <div></div>;\n  } else {\n    return (\n      <div>\n        <div\n          className=\"leagueName\"\n          id={`league${id}`}\n          key={`leagueName${id}div`}\n          onClick={() =>\n            renderTable(\n              fixture.leagueIndex,\n              allLeagueResultsArrayOfObjects[fixture.leagueIndex],\n              id\n            )\n          }\n        >\n          {fixture.leagueName} &#9776;\n        </div>\n        <div\n          className=\"LeagueTable\"\n          key={`leagueName${id}`}\n          id={`leagueName${id}`}\n        ></div>\n      </div>\n    );\n  }\n}\n\nconst downArrow = \"\\u{2195}\";\nconst rightArrow = \"\\u{29C9}\";\n\nexport let testing;\n\nfunction SingleFixture({ fixture, count, mock }) {\n  const dispatch = useDispatch();\n  function StoreData() {\n    const fixtureDetails = {\n      id: fixture.id,\n      homeTeamName: fixture.homeTeam,\n      homeId: fixture.homeId,\n      homeTeamBadge: fixture.homeBadge,\n      awayTeamName: fixture.awayTeam,\n      awayId: fixture.awayId,\n      awayTeamBadge: fixture.awayBadge,\n      stadium: fixture.stadium,\n      time: fixture.time,\n      homeGoals: fixture.goalsA,\n      awayGoals: fixture.goalsB,\n    };\n\n    const homeDetails = {\n      \"Attacking Strength\": fixture.formHome.attackingStrength,\n      \"Defensive Strength\": fixture.formHome.defensiveStrength,\n    };\n\n    const awayDetails = {\n      \"Attacking Strength\": fixture.formAway.attackingStrength,\n      \"Defensive Strength\": fixture.formAway.defensiveStrength,\n    };\n\n    const dataToSend = {\n      key1: \"value1\",\n      key2: \"value2\",\n    };\n    fixture.formHome.defensiveMetrics[\"Clean Sheet Percentage\"] =\n      fixture.formHome.CleanSheetPercentage;\n    fixture.formAway.defensiveMetrics[\"Clean Sheet Percentage\"] =\n      fixture.formAway.CleanSheetPercentage;\n\n    localStorage.setItem(\n      \"homeForm\",\n      JSON.stringify(fixture.formHome.attackingMetrics)\n    );\n    localStorage.setItem(\n      \"homeFormDef\",\n      JSON.stringify(fixture.formHome.defensiveMetrics)\n    );\n    localStorage.setItem(\n      \"allTeamResultsHome\",\n      JSON.stringify(fixture.formHome.allTeamResults)\n    );\n    localStorage.setItem(\"homeDetails\", JSON.stringify(homeDetails));\n\n    localStorage.setItem(\n      \"awayForm\",\n      JSON.stringify(fixture.formAway.attackingMetrics)\n    );\n    localStorage.setItem(\n      \"awayFormDef\",\n      JSON.stringify(fixture.formAway.defensiveMetrics)\n    );\n    localStorage.setItem(\n      \"allTeamResultsAway\",\n      JSON.stringify(fixture.formAway.allTeamResults)\n    );\n    localStorage.setItem(\"awayDetails\", JSON.stringify(awayDetails));\n\n    localStorage.setItem(\"fixtureDetails\", JSON.stringify(fixtureDetails));\n\n    dispatch(setData(dataToSend));\n  }\n\n  async function handleButtonClick(game) {\n    if (clicked === true) {\n      StoreData(formObjectHome);\n      window.open(\"/#/fixture\");\n    } else return;\n  }\n  return (\n    <div key={fixture.game}>\n      {renderLeagueName(fixture, mock)}\n      <div className={`individualFixtureContainer${fixture.omit}`}>\n        <li\n          className={`individualFixture${fixture.omit}`}\n          key={fixture.id}\n          data-cy={fixture.id}\n        >\n          <div className=\"HomeOdds\">{fixture.fractionHome}</div>\n          <div className=\"homeTeam\">{fixture.homeTeam}</div>\n          <GetDivider\n            result={resultValue}\n            status={fixture.status}\n            fixture={fixture}\n          />\n          {/* <div className=\"divider\">{\"V\"}</div> */}\n          <div className=\"awayTeam\">{fixture.awayTeam}</div>\n          <CreateBadge\n            image={fixture.homeBadge}\n            ClassName=\"HomeBadge\"\n            alt=\"Home team badge\"\n            flexShrink={5}\n          />\n          <CreateBadge\n            image={fixture.awayBadge}\n            ClassName=\"AwayBadge\"\n            alt=\"Away team badge\"\n          />\n          <div className=\"AwayOdds\">{fixture.fractionAway}</div>\n        </li>\n        <button\n          className=\"GameStats\"\n          onClick={() =>\n            mock === false ? createStatsDiv(fixture, count) : null\n          }\n          onMouseDown={() => (count = toggle(count))}\n        >\n          Game overview {downArrow}\n        </button>\n        <button\n          className=\"GameStatsTwo\"\n          onClick={() => handleButtonClick(fixture)}\n        >\n          More detail {rightArrow}\n        </button>\n        {/* <Checkbox/> */}\n      </div>\n      <div id={\"stats\" + fixture.homeTeam} />\n      <div className=\"MatchHistory\" id={\"history\" + fixture.homeTeam} />\n    </div>\n  );\n}\n\nconst List = ({ fixtures, mock }) => (\n  <div>\n    <div id=\"Headers\"></div>\n    <ul className=\"FixtureList\" id=\"FixtureList\">\n      {fixtures.map((fixture, i) => (\n        <SingleFixture\n          fixture={fixture}\n          key={fixture.game}\n          count={count}\n          mock={mock}\n        />\n      ))}\n    </ul>\n  </div>\n);\n\nexport function Fixture(props) {\n  [count, setCount] = useState(false);\n  resultValue = props.result;\n  return (\n    <Provider store={store}>\n      <List\n        fixtures={props.fixtures}\n        result={resultValue}\n        count={count}\n        mock={props.mock}\n      />\n    </Provider>\n  );\n}\n","// src/dataSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\n\n// src/dataSlice.js\nconst initialState = {\n  dataHome: localStorage.getItem('homeForm'),\n  dataAway: localStorage.getItem('awayForm'),\n  dataHomeDef: localStorage.getItem('homeFormDef'),\n  dataAwayDef: localStorage.getItem('awayFormDef'),\n  allTeamResultsHome: localStorage.getItem('allTeamResultsHome'),\n  allTeamResultsAway: localStorage.getItem('allTeamResultsAway'),\n  homeDetails:localStorage.getItem('homeDetails'),\n  awayDetails:localStorage.getItem('awayDetails'),\n  fixtureDetails: localStorage.getItem('fixtureDetails')\n};\n\nconst dataSlice = createSlice({\n  name: 'data',\n  initialState,\n  reducers: {\n    setData: (state, action) => {\n      state.data = action.payload;\n    },\n  },\n});\n\nexport const { setData } = dataSlice.actions;\n\nexport default dataSlice.reducer;\n","// src/store.js\nimport { configureStore } from '@reduxjs/toolkit';\nimport dataReducer from './dataSlice'; // Your data reducer\n\nconst store = configureStore({\n  reducer: {\n    data: dataReducer, // Ensure this key matches the key in your initialState\n  },\n});\n\nexport default store;\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./components/Header\";\nimport { Button } from \"./components/Button\";\nimport OddsRadio from \"./components/OddsRadio\";\nimport { Fixture } from \"./components/Fixture\";\nimport mockedFixtures from \"./data/mockedFixtures.json\";\nimport { selectedOdds } from \"./components/OddsRadio\";\nimport Collapsable from \"./components/CollapsableElement\";\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  RedditShareButton,\n  RedditIcon,\n  TelegramShareButton,\n  TelegramIcon,\n  TwitterShareButton,\n  TwitterIcon,\n  WhatsappShareButton,\n  WhatsappIcon,\n} from \"react-share\";\nimport { generateFixtures } from \"./logic/getFixtures\";\nimport { ThreeDots } from \"react-loading-icons\";\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\nimport reactDom from \"react-dom\";\n// require(\"dotenv\").config();\n\nexport const proxyurl = \"https://safe-caverns-99679.herokuapp.com/\";\nexport var fixtureList = [];\nexport let allLeagueData = [];\n\nexport const availableLeagues = [];\nexport var orderedLeagues = [];\n\nconst leagueOrder = [\n  7432, //World Cup 22\n  9660, //premier league 22/23\n  9663, //championship 22/23\n  9582, //league 1 22/23\n  9581, //league 2 22/23\n  9700, //National league 22/23\n  9665, //La Liga 22/23\n  9636, //Scottish Prem 22/23\n  9655, //Bundesliga 22/23\n  9697, //Serie A 22/23\n  9674, //French Prem 22/23\n  9984, //Portagul Prem 22/23\n  9653, //Dutch Prem 22/23\n  9577, //Belgian Pro League 22/23\n  10969, //sweden 23\n  9545, //Danish Prem 22/23\n  10976, //Norway Prem 23\n  9954, //Austrian Prem 22/23\n  9889, //Greek Prem 22/23\n  9553, //Polish prem 22/23\n  9580, //Swiss prem 22/23\n  10946, //Irish Prem 23\n  9675, //Spanish secunda 22/23\n  9808, //Italy serie B 22/23\n  9656, //Bundesliga 2 22/23\n  9741, //German 3rd tier 22/23\n  9621, //French League 2 22/23\n  9637, //Scottish Championship 22/23\n  9639, //Scottish league 1 22/23\n  9638, //Scottish league 2 22/23\n  9890, //Women's prem 23/24\n  10977, //MLS 23\n  9035, //Brazil prem 23\n  11212, //Argentina prem 23\n  10994, //Japan 22\n  9525, //Mexico prem 23/24\n  9972, //National league North and South 22/23\n  10505, //Australian A league 23/24\n  11102, //S Korea 23\n];\n\nlet today;\nlet todayFootyStats;\nlet tomorrow;\nlet tomorrowFootyStats;\nlet date;\nlet dateFootyStats;\nlet yesterday;\nlet yesterdayFootyStats;\nlet lastSaturday;\nlet lastSaturdayFootyStats;\nlet historic;\nlet historicFootyStats;\nlet tomorrowsDate;\nlet yesterdaysDate;\nlet saturdayDate;\nlet historicDate;\nlet string;\nlet dateString;\n\n(async function fetchLeagueData() {\n  let leagueList;\n\n  leagueList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}leagueList`);\n\n  let leagueArray;\n  await leagueList.json().then((leagues) => {\n    leagueArray = Array.from(leagues.data);\n  });\n\n  for (let i = 0; i < leagueArray.length; i++) {\n    const league = leagueArray[i];\n    const name = leagueArray[i].name;\n\n    for (let x = 0; x < league.season.length; x++) {\n      const element = league.season[x];\n\n      if (element.year === 2023 || element.year === 20232024) {\n        if (element.id !== 4340 && element.id !== 6935 && element.id !== 7061) {\n          availableLeagues.push({ name: name, element });\n        }\n      }\n    }\n\n    async function mapOrder(array, order, key) {\n      array.sort(function (a, b) {\n        var A = a.element[key],\n          B = b.element[key];\n\n        if (order.indexOf(A) > order.indexOf(B)) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n      return array;\n    }\n    //leagues ordered by id\n    orderedLeagues = await mapOrder(availableLeagues, leagueOrder, \"id\");\n  }\n  return orderedLeagues;\n})();\n\nexport async function getLeagueList() {\n  let i = 0;\n  date = new Date();\n  string = \"Today\";\n\n  async function incrementDate(num, date) {\n    i = i + num;\n    date.setDate(date.getDate() + num);\n    [date, dateFootyStats] = await calculateDate(date);\n    string = dateFootyStats;\n    await renderButtons();\n  }\n\n  async function decrementDate(num, date) {\n    i = i - num;\n    console.log(i);\n    if (i > -60) {\n      date.setDate(date.getDate() - num);\n      [date, dateFootyStats] = await calculateDate(date);\n      string = dateFootyStats;\n      dateString = date;\n      await renderButtons();\n    }\n  }\n\n  async function calculateDate(dateString) {\n    const day = dateString.getDate();\n    const month = dateString.getMonth() + 1;\n    const year = dateString.getFullYear();\n    return [`${month}${day}${year}`, `${year}-${month}-${day}`];\n  }\n\n  [today, todayFootyStats] = await calculateDate(new Date());\n\n  tomorrowsDate = new Date();\n  tomorrowsDate.setDate(tomorrowsDate.getDate() + 1);\n  [tomorrow, tomorrowFootyStats] = await calculateDate(tomorrowsDate);\n\n  yesterdaysDate = new Date();\n  yesterdaysDate.setDate(yesterdaysDate.getDate() - 1);\n  [yesterday, yesterdayFootyStats] = await calculateDate(yesterdaysDate);\n\n  saturdayDate = new Date();\n  saturdayDate.setDate(\n    saturdayDate.getDate() - ((saturdayDate.getDay() + 6) % 7)\n  );\n  saturdayDate.setDate(saturdayDate.getDate() - 2);\n  [lastSaturday, lastSaturdayFootyStats] = await calculateDate(saturdayDate);\n\n  historicDate = new Date();\n  historicDate.setDate(\n    historicDate.getDate() - ((historicDate.getDay() + 6) % 7)\n  );\n  historicDate.setDate(historicDate.getDate() - 9);\n  [historic, historicFootyStats] = await calculateDate(historicDate);\n\n  const text =\n    \"Select a day you would like to retrieve fixtures for from the options above\\n A list of games will be returned once the data has loaded\\n Once all fixtures have loaded, click on “Get Predictions” to see XGTipping's forecasted outcomes for every game\\n If a game has completed, the predictions is displayed on the right and the actual result on the left\\n Each individual fixture is tappable/clickable. By doing so, you can access a range of detailed stats, from comparative charts, granular performance measures to previous meetings.\\n All games are subject to the same automated prediction algorithm with the outcome being a score prediction. Factors that determine the tip include the following, amongst others:\\n - Goal differentials\\n - Expected goal differentials \\n - Attack/Defence performance\\n - Form trends over time\\n - Home/Away records\\n - WDL records\\n - Points per game \\n - A range of other comparative factors\\n  –\\n\";\n\n  const text2 =\n    \"A range of tools are available should you wish to use them\\n Build a multi - Use the '+' or '-' buttons to add or remove a game deemed to be one of XGTIpping's highest confidence tips from the day\\n Exotic of the day: A pre-built exotic multi comprising of XGTipping's highest confidence tips\\n BTTS games: Games where both teams to score is deemed a likely outcome\\n Over 2.5 goals tips: Games where over 2.5 goals are most likely to be scored\\n XG tips: Comprises only games where the expected goal differentials between each team are at their greatest. We believe this shows a true disparity in the form of the two opposing teams\\n Tap the 'How to use' option to hide this text\";\n\n  let textJoined = text.concat(text2);\n\n  let newText = textJoined.split(\"\\n\").map((i) => {\n    return <p>{i}</p>;\n  });\n\n  async function renderButtons() {\n    ReactDOM.render(\n      <div className=\"FixtureButtons\">\n        <div className=\"historicResults\">\n          <Button\n            text={\"Last Saturday\"}\n            className=\"HistoricFixturesButton\"\n            onClickEvent={async () =>\n              fixtureList.push(\n                await generateFixtures(\n                  \"lastSaturday\",\n                  lastSaturday,\n                  selectedOdds,\n                  lastSaturdayFootyStats,\n                  false,\n                  today\n                )\n              )\n            }\n          />\n        </div>\n        <Button\n          text={`<`}\n          className=\"FixturesButton\"\n          onClickEvent={async () => await decrementDate(1, date)}\n        />\n        <Button\n          text={dateFootyStats !== undefined ? dateFootyStats : date}\n          className=\"FixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"todaysFixtures\",\n                dateString,\n                selectedOdds,\n                dateFootyStats,\n                false,\n                today\n              )\n            )\n          }\n        />\n        <Button\n          text={`Today`}\n          className=\"FixturesButtonToday\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"todaysFixtures\",\n                today,\n                selectedOdds,\n                todayFootyStats,\n                true,\n                today\n              )\n            )\n          }\n        />\n        <Button\n          text={\"Tomorrow\"}\n          className=\"FixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"tomorrowsFixtures\",\n                tomorrow,\n                selectedOdds,\n                tomorrowFootyStats,\n                true,\n                today\n              )\n            )\n          }\n        />\n      </div>,\n      document.getElementById(\"Buttons\")\n    );\n  }\n\n  ReactDOM.render(\n    <div className=\"FixtureButtons\">\n      <div className=\"historicResults\">\n        <Button\n          text={\"Last Saturday\"}\n          className=\"HistoricFixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"lastSaturday\",\n                lastSaturday,\n                selectedOdds,\n                lastSaturdayFootyStats,\n                false,\n                today\n              )\n            )\n          }\n        />\n        {/* <Button\n          text={\"Historic predictions\"}\n          className=\"HistoricFixturesButtonRight\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"historic\",\n                historic,\n                selectedOdds,\n                historicFootyStats\n              )\n            )\n          }\n        /> */}\n      </div>\n      <Button\n        text={`<`}\n        className=\"FixturesButton\"\n        onClickEvent={async () => await decrementDate(1, date)}\n      />\n      <Button\n        text={`${string}`}\n        className=\"FixturesButtonToday\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"todaysFixtures\",\n              today,\n              selectedOdds,\n              todayFootyStats,\n              true,\n              today\n            )\n          )\n        }\n      />\n      <Button\n        text={\"Tomorrow\"}\n        className=\"FixturesButton\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"tomorrowsFixtures\",\n              tomorrow,\n              selectedOdds,\n              tomorrowFootyStats,\n              true,\n              today\n            )\n          )\n        }\n      />\n      <span>\n        *Not enough data to predict games in the first few gameweeks -\n        predictions displayed as 'x - x'\n      </span>\n    </div>,\n    document.getElementById(\"Buttons\")\n  );\n  ReactDOM.render(\n    <div className=\"OddsRadios\">\n      <OddsRadio value=\"Fractional odds\"></OddsRadio>\n      <OddsRadio value=\"Decimal odds\"></OddsRadio>\n    </div>,\n    document.getElementById(\"Checkbox\")\n  );\n  ReactDOM.render(\n    <Fragment>\n      <Collapsable\n        // className={\"HowToUse\"}\n        buttonText={\"How to use\"}\n        element={newText}\n      />\n    </Fragment>,\n    document.getElementById(\"XGDiff\")\n  );\n\n  // ReactDOM.render(\n  //   <Button\n  //     text={\"Lowest scoring leagues\"}\n  //     className={\"Under25TeamsButton\"}\n  //     onClickEvent={async () => {\n  //       let leagues = await getLowestScoringLeagues();\n  //       const leagueList = [];\n\n  //       leagues.forEach(async (league) =>\n  //         leagueList.push(\n  //           <ul className=\"GlobalStat\">\n  //             <p className=\"TeamName\">\n  //               {league.league} ({league.leagueCountry})\n  //             </p>\n  //             <li>Average goals: {league.averageGoals}</li>\n  //             <li>Under 2.5 goals %: {league.under25Percentage}%</li>\n  //           </ul>\n  //         )\n  //       );\n\n  //       reactDom.render(\n  //         <div>\n  //           <h3>Leagues with the lowest scoring games</h3>\n  //           <ul>{leagueList}</ul>\n  //         </div>,\n  //         document.getElementById(\"Under25Games\")\n  //       );\n  //     }}\n  //   ></Button>,\n  //   document.getElementById(\"Under25Games\")\n  // );\n\n  // ReactDOM.render(\n  //   <Button\n  //     text={\"Highest scoring leagues\"}\n  //     className={\"Over25TeamsButton\"}\n  //     onClickEvent={async () => {\n  //       let leagues = await getHighestScoringLeagues();\n  //       const leagueList = [];\n\n  //       leagues.forEach(async (league) =>\n  //         leagueList.push(\n  //           <ul className=\"GlobalStat\">\n  //             <p className=\"TeamName\">\n  //               {league.league} ({league.leagueCountry})\n  //             </p>\n  //             <li>Average goals: {league.averageGoals}</li>\n  //             <li>Over 2.5 goals %: {league.over25Percentage}%</li>\n  //           </ul>\n  //         )\n  //       );\n\n  //       reactDom.render(\n  //         <div>\n  //           <h3>Leagues with the highest scoring games</h3>\n  //           <ul>{leagueList}</ul>\n  //         </div>,\n  //         document.getElementById(\"Over25Games\")\n  //       );\n  //     }}\n  //   ></Button>,\n  //   document.getElementById(\"Over25Games\")\n  // );\n}\n\nasync function getHighestScoringLeagues() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}over25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    for (let index = 0; index < 215; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        over25Percentage:\n          leagues.data.top_leagues.data[index].seasonOver25Percentage_overall,\n        division: leagues.data.top_leagues.data[index].division,\n        leagueId: leagues.data.top_leagues.data[index].id,\n      };\n      arr.push(league);\n    }\n  });\n\n  const finalArray = arr.filter(\n    (league) =>\n      leagueOrder.find((element) => element === league.leagueId) &&\n      league.averageGoals >= 2.5\n  );\n\n  let sortedArray = finalArray.sort((a, b) => b.averageGoals - a.averageGoals);\n\n  return sortedArray;\n}\n\nasync function getLowestScoringLeagues() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}under25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    for (let index = 0; index < 215; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        under25Percentage:\n          leagues.data.top_leagues.data[index].seasonUnder25Percentage_overall,\n        leagueId: leagues.data.top_leagues.data[index].id,\n      };\n      arr.push(league);\n    }\n  });\n\n  const finalArray = arr.filter(\n    (league) =>\n      leagueOrder.find((element) => element === league.leagueId) &&\n      league.averageGoals < 2.5\n  );\n\n  let sortedArray = finalArray.sort((a, b) => a.averageGoals - b.averageGoals);\n\n  return sortedArray;\n}\n\nconst welcomeTextUnsplitOne = `Welcome to XGTipping. Your go-to resource for all things football, from predictions, comprehensive head to head stats, results, xg scores, odds, league tables, form, and bespoke multi-builders underpinned by expected goal (XG) data.\\n `;\nlet welcomeTextOne = welcomeTextUnsplitOne.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nconst welcomeTextUnsplitTwo = `XGTipping is completely independent and free to use, relying on a donation model to support running costs. For feedback or feature ideas, get in touch at @TippingXg.`;\nlet welcomeTextTwo = welcomeTextUnsplitTwo.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nfunction App() {\n  getLeagueList();\n  return (\n    <>\n      <div className=\"App\">\n        <Header />\n        <a\n          className=\"SocialLink\"\n          href=\"https://www.reddit.com/r/xgtipping/\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          r/xgtipping\n        </a>\n        <div id=\"LoadingContainer\" className=\"LoadingContainer\" />\n        <div id=\"RadioContainer\" className=\"RadioContainer\">\n          <div id=\"RadioText\" />\n          <div id=\"RadioButtons\" />\n        </div>\n        <div id=\"Day\" />\n        <div id=\"Checkbox\" />\n        <div id=\"ExplainerText\" />\n        <div id=\"Loading\" className=\"Loading\"></div>\n        <div id=\"Buttons\" className=\"Buttons\">\n          <ThreeDots className=\"MainLoading\" fill=\"#030061\" />\n          <div>Loading all fixture and form data...</div>\n        </div>\n        <div id=\"GeneratePredictions\" className=\"GeneratePredictions\" />\n        <div id=\"bestPredictions\" className=\"bestPredictions\" />\n        <div id=\"exoticOfTheDay\" className=\"exoticOfTheDay\" />\n        <div id=\"successMeasure2\" />\n        <div id=\"RowOneContainer\" className=\"RowOneContainer\">\n          <div id=\"BTTS\" className=\"RowOne\" />\n          <div id=\"longShots\" className=\"RowOne\" />\n          <div id=\"draws\" className=\"RowOne\" />\n        </div>\n        <div id=\"insights\" />\n        <div id=\"risk\" />\n        <div id=\"successMeasure\" />\n        <div id=\"tables\" />\n        <div id=\"homeBadge\" />\n        <div id=\"FixtureContainerHeaders\"></div>\n        {/* <StyledKofiButton buttonText=\"Donations\"></StyledKofiButton> */}\n        <div id=\"XGDiff\" />\n        <div id=\"FixtureContainer\">\n          <h6 className=\"WelcomeText\">{welcomeTextOne}</h6>\n          <h6 className=\"GetMatchStatText\">\n            Below is an example of our tips/results overview for you to\n            familiarise yourself with. Get real fixtures using the date buttons,\n            above. When loaded, tap on one to see full match stats\n          </h6>\n          <div className=\"ExplainerContainer\">\n            <span className=\"oddsHomeExplainer\">Home odds</span>\n            <span className=\"emptyHomeTeam\"></span>\n            <span className=\"scoreExplainer\">Result / KO Time</span>\n            <span className=\"predictionExplainer\">Our Prediction</span>\n            <span className=\"emptyAwayTeam\"></span>\n            <span className=\"oddsAwayExplainer\">Away odds</span>\n          </div>\n          <Fixture\n            fixtures={mockedFixtures.matches}\n            // result={false}\n            mock={true}\n            className={\"individualFixture\"}\n          />\n          <div>\n            <h6 className=\"WelcomeText\">{welcomeTextTwo}</h6>\n            <h6 className=\"WelcomeText\">\n              We cover a range of leagues, including\n              <ul className=\"AllLeagues\">\n                <li className=\"League\">Premier League</li>\n                <li className=\"League\">English Football League</li>\n                <li className=\"League\">La Liga</li>\n                <li className=\"League\">Serie A</li>\n                <li className=\"League\">Bundesliga</li>\n                <li className=\"League\">Ligue 1</li>\n                <li className=\"League\">MLS</li>\n                <li className=\"League\">Primeira Liga</li>\n                <li className=\"League\">Loads more...</li>\n              </ul>\n            </h6>\n          </div>\n          <div>\n            <div className=\"DataText\">Raw data from</div>\n            <a\n              className=\"DataLink\"\n              href=\"https://www.footystats.org\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              footystats.org\n            </a>\n          </div>\n          <div className=\"bitcoin\" id=\"bitcoin\">\n            We aim to remain free to use, contributions are always appreciated\n            though:\n            <a\n              href=\"https://www.ko-fi.com/xgtipping\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Donations\n            </a>\n            <span className=\"bitcoinSymbol\">&#x20bf;itcoin address</span>\n            <span className=\"bitcoinAddress\">\n              bc1q7j62txkvhfu0dt3l0s07saze6pjnyzs26wfgp0\n            </span>\n          </div>\n        </div>\n        <div className=\"Social\">\n          <TwitterShareButton\n            url={\"www.xgtipping.com\"}\n            title={\"#XGTipping\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <TwitterIcon size={\"3em\"} round={true} />\n          </TwitterShareButton>\n          <RedditShareButton\n            url={\"www.xgtipping.com\"}\n            title={\"XGTipping\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <RedditIcon size={\"3em\"} round={true} />\n          </RedditShareButton>\n          <FacebookShareButton\n            url={\"www.xgtipping.com\"}\n            quote={\"XGTipping - data-driven football predictions\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <FacebookIcon size={\"3em\"} round={true} />\n          </FacebookShareButton>\n          <WhatsappShareButton\n            url={\"www.xgtipping.com\"}\n            title={\"XGTipping\"}\n            separator=\": \"\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <WhatsappIcon size={\"3em\"} round={true} />\n          </WhatsappShareButton>\n          <TelegramShareButton\n            url={\"XGTipping\"}\n            title={\"XGTipping\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <TelegramIcon size={\"3em\"} round={true} />\n          </TelegramShareButton>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n// import React from \"react\";\n// import { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\n// import HomePage from \"./components/HomePage\";\n// import TeamPage from \"./components/Team\";\n\n// const App = () => {\n//   return (\n//     <Router>\n//       <Routes>\n//       <Route path=\"/team\" element={<TeamPage />} />\n//         <Route path=\"/\" element={<HomePage />} />\n//         {/* Add more routes */}\n//       </Routes>\n//     </Router>\n//   );\n// };\n\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CreateBadge } from \"./createBadge\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction TeamPage() {\n  const [dataState, setData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const responseHome = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}team/${storedFixtureDetailsJson.homeId}`\n      );\n      const resultHome = await responseHome.json();\n\n      const responseAway = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}team/${storedFixtureDetailsJson.awayId}`\n      );\n      const resultAway = await responseAway.json();\n      // setData(result.data.stadium_name);\n\n      let indexHome = resultHome.data.findIndex(\n        (x) => x.season_format === \"Domestic League\"\n      );\n      let indexAway = resultAway.data.findIndex(\n        (x) => x.season_format === \"Domestic League\"\n      );\n\n      setData((test) => ({\n        ...test,\n        scoredOverallHome:\n          resultHome.data[indexHome].stats.seasonScoredNum_overall,\n        playedHomeOnly:\n          resultHome.data[indexHome].stats.seasonMatchesPlayed_home,\n        scoredOverallHomeOnly:\n          resultHome.data[indexHome].stats.seasonScoredNum_home,\n        conceededOverallHome:\n          resultHome.data[indexHome].stats.seasonConcededNum_overall,\n        conceededOverallHomeOnly:\n          resultHome.data[indexHome].stats.seasonConcededNum_home,\n\n        PPGOverallHome: resultHome.data[indexHome].stats.seasonPPG_overall,\n        PPGOverallHomeOnly: resultHome.data[indexHome].stats.seasonPPG_home,\n        leaguePosition_overallHome:\n          resultHome.data[indexHome].stats.leaguePosition_overall,\n        leaguePosition_HomeOnly:\n          resultHome.data[indexHome].stats.leaguePosition_home,\n        averageAttendance:\n          resultHome.data[indexHome].stats.average_attendance_home,\n        BTTSPercentage_overallHome:\n          resultHome.data[indexHome].stats.seasonBTTSPercentage_overall,\n        BTTSAndWinPercentage_Home:\n          resultHome.data[indexHome].stats.BTTS_and_win_percentage_overall,\n        BTTSAndLosePercentage_Home:\n          resultHome.data[indexHome].stats.BTTS_and_lose_percentage_overall,\n        BTTSBothHalvesHome:\n          resultHome.data[indexHome].stats.BTTS_both_halves_percentage_overall,\n        GoalDifferenceHT_overall_Home:\n          resultHome.data[indexHome].stats.GoalDifferenceHT_overall,\n        GD_2hg_overall_Home: resultHome.data[indexHome].stats.gd_2hg_overall,\n        leadingAtHTPercentage_overallHome:\n          resultHome.data[indexHome].stats.leadingAtHTPercentage_overall,\n        seasonOver15Percentage_overallHome:\n          resultHome.data[indexHome].stats.seasonOver15Percentage_overall,\n        seasonOver25Percentage_overallHome:\n          resultHome.data[indexHome].stats.seasonOver25Percentage_overall,\n        seasonOver35Percentage_overallHome:\n          resultHome.data[indexHome].stats.seasonOver35Percentage_overall,\n        seasonOver45Percentage_overallHome:\n          resultHome.data[indexHome].stats.seasonOver45Percentage_overall,\n        scoredBothHalvesPercentage_overallHome:\n          resultHome.data[indexHome].stats.scoredBothHalvesPercentage_overall,\n        shots_on_target_per_goals_scored_overallHome:\n          resultHome.data[indexHome].stats.additional_info\n            .shots_on_target_per_goals_scored_overall,\n        cornersTotalAVG_overallHome:\n          resultHome.data[indexHome].stats.cornersTotalAVG_overall,\n        cardsAVG_overallHome: resultHome.data[indexHome].stats.cardsAVG_overall,\n        foulsAVG_overallHome: resultHome.data[indexHome].stats.foulsAVG_overall,\n        penalties_won_per_match_overallHome:\n          resultHome.data[indexHome].stats.additional_info\n            .penalties_won_per_match_overall,\n        penalty_in_a_match_percentage_overallHome:\n          resultHome.data[indexHome].stats.additional_info\n            .penalty_in_a_match_percentage_overall,\n\n        scoredOverallAway:\n          resultAway.data[indexAway].stats.seasonScoredNum_overall,\n        playedAwayOnly:\n          resultAway.data[indexAway].stats.seasonMatchesPlayed_away,\n        scoredOverallAwayOnly:\n          resultAway.data[indexAway].stats.seasonScoredNum_away,\n        conceededOverallAway:\n          resultAway.data[indexAway].stats.seasonConcededNum_overall,\n        conceededOverallAwayOnly:\n          resultAway.data[indexAway].stats.seasonConcededNum_away,\n\n        PPGOverallAway: resultAway.data[indexAway].stats.seasonPPG_overall,\n        PPGOverallAwayOnly: resultAway.data[indexAway].stats.seasonPPG_away,\n        leaguePosition_overallAway:\n          resultAway.data[indexAway].stats.leaguePosition_overall,\n        leaguePosition_AwayOnly:\n          resultAway.data[indexAway].stats.leaguePosition_away,\n        BTTSPercentage_overallAway:\n          resultAway.data[indexAway].stats.seasonBTTSPercentage_overall,\n        BTTSAndWinPercentage_Away:\n          resultAway.data[indexAway].stats.BTTS_and_win_percentage_overall,\n        BTTSAndLosePercentage_Away:\n          resultAway.data[indexAway].stats.BTTS_and_lose_percentage_overall,\n        BTTSBothHalvesAway:\n          resultAway.data[indexAway].stats.BTTS_both_halves_percentage_overall,\n        GoalDifferenceHT_overall_Away:\n          resultAway.data[indexAway].stats.GoalDifferenceHT_overall,\n        GD_2hg_overall_Away: resultAway.data[indexAway].stats.gd_2hg_overall,\n        leadingAtHTPercentage_overallAway:\n          resultAway.data[indexAway].stats.leadingAtHTPercentage_overall,\n        seasonOver15Percentage_overallAway:\n          resultAway.data[indexAway].stats.seasonOver15Percentage_overall,\n        seasonOver25Percentage_overallAway:\n          resultAway.data[indexAway].stats.seasonOver25Percentage_overall,\n        seasonOver35Percentage_overallAway:\n          resultAway.data[indexAway].stats.seasonOver35Percentage_overall,\n        seasonOver45Percentage_overallAway:\n          resultAway.data[indexAway].stats.seasonOver45Percentage_overall,\n        scoredBothHalvesPercentage_overallAway:\n          resultAway.data[indexAway].stats.scoredBothHalvesPercentage_overall,\n        shots_on_target_per_goals_scored_overallAway:\n          resultAway.data[indexAway].stats.additional_info\n            .shots_on_target_per_goals_scored_overall,\n\n        cornersTotalAVG_overallAway:\n          resultAway.data[indexAway].stats.cornersTotalAVG_overall,\n        cardsAVG_overallAway: resultAway.data[indexAway].stats.cardsAVG_overall,\n        foulsAVG_overallAway: resultAway.data[indexAway].stats.foulsAVG_overall,\n        penalties_won_per_match_overallAway:\n          resultAway.data[indexAway].stats.additional_info\n            .penalties_won_per_match_overall,\n        penalty_in_a_match_percentage_overallAway:\n          resultAway.data[indexAway].stats.additional_info\n            .penalty_in_a_match_percentage_overall,\n      }));\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  const storedDataHome = useSelector((state) => state.data.dataHome);\n  const jsonDataHome = JSON.parse(storedDataHome);\n  const propertyNamesHome = Object.entries(jsonDataHome);\n\n  const storedDataHomeDef = useSelector((state) => state.data.dataHomeDef);\n  const jsonDataHomeDef = JSON.parse(storedDataHomeDef);\n  const propertyNamesHomeDef = Object.entries(jsonDataHomeDef);\n\n  const storedDataallTeamResultsHome = useSelector(\n    (state) => state.data.allTeamResultsHome\n  );\n  const jsonDataallTeamResultsHome = JSON.parse(storedDataallTeamResultsHome);\n  const propertyNamesallTeamResultsHome = Object.values(\n    jsonDataallTeamResultsHome\n  );\n\n  const homeDetails = useSelector((state) => state.data.homeDetails);\n  const jsonHomeDetails = JSON.parse(homeDetails);\n\n  const storedDataAway = useSelector((state) => state.data.dataAway);\n  const jsonDataAway = JSON.parse(storedDataAway);\n  const propertyNamesAway = Object.entries(jsonDataAway);\n\n  const storedDataAwayDef = useSelector((state) => state.data.dataAwayDef);\n  const jsonDataAwayDef = JSON.parse(storedDataAwayDef);\n  const propertyNamesAwayDef = Object.entries(jsonDataAwayDef);\n\n  const storedDataallTeamResultsAway = useSelector(\n    (state) => state.data.allTeamResultsAway\n  );\n  const jsonDataallTeamResultsAway = JSON.parse(storedDataallTeamResultsAway);\n  const propertyNamesallTeamResultsAway = Object.values(\n    jsonDataallTeamResultsAway\n  );\n\n  const awayDetails = useSelector((state) => state.data.awayDetails);\n  const jsonAwayDetails = JSON.parse(awayDetails);\n\n  const storedFixtureDetails = useSelector(\n    (state) => state.data.fixtureDetails\n  );\n  const storedFixtureDetailsJson = JSON.parse(storedFixtureDetails);\n\n  const options = {\n    plugins: {\n      title: {\n        display: true,\n        text: \"Team comparison\",\n      },\n    },\n    aspectRatio: 0.5,\n    maintainAspectRatio: true,\n    responsive: true,\n    scales: {\n      x: {\n        stacked: true,\n      },\n      y: {\n        stacked: true,\n        display: false,\n      },\n    },\n  };\n  const labels = [\n    storedFixtureDetailsJson.homeTeamName,\n    storedFixtureDetailsJson.awayTeamName,\n  ];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        data: [\n          jsonHomeDetails[\"Attacking Strength\"],\n          [jsonAwayDetails[\"Attacking Strength\"]],\n        ],\n        label: \"Attacking Strength\",\n        backgroundColor: \"#030061\",\n      },\n      {\n        data: [\n          jsonHomeDetails[\"Defensive Strength\"],\n          [jsonAwayDetails[\"Defensive Strength\"]],\n        ],\n        label: \"Defensive Strength\",\n        backgroundColor: \"#CC3314\",\n      },\n    ],\n  };\n\n  return (\n    <div className=\"TeamStatsContainer\">\n      <div className=\"FixtureHeadingContiner\">\n        <CreateBadge\n          image={storedFixtureDetailsJson.homeTeamBadge}\n          ClassName=\"HomeTeamBadge\"\n          alt=\"Home team badge\"\n        ></CreateBadge>\n        {`${storedFixtureDetailsJson.homeTeamName} v ${storedFixtureDetailsJson.awayTeamName}`}\n        <CreateBadge\n          image={storedFixtureDetailsJson.awayTeamBadge}\n          ClassName=\"AwayTeamBadge\"\n          alt=\"Away team badge\"\n        ></CreateBadge>\n      </div>\n      <h3>\n        {storedFixtureDetailsJson.stadium} KO: {storedFixtureDetailsJson.time} |\n        Average Attendance: {dataState.averageAttendance}\n      </h3>\n      <h3>\n        XGTipping Prediction: {storedFixtureDetailsJson.homeGoals} -{\" \"}\n        {storedFixtureDetailsJson.awayGoals}\n      </h3>\n      <div className=\"TeamStats\">\n        <ul className=\"HomeTeamStats\">\n          <h3>{storedFixtureDetailsJson.homeTeamName}</h3>\n          {propertyNamesHome.map(([key, value], index) => (\n            <li key={index}>\n              <strong>{key}:</strong>{\" \"}\n              {typeof value === \"object\" ? JSON.stringify(value) : value}\n            </li>\n          ))}\n          <ul className=\"HomeTeamStats\">\n            {propertyNamesHomeDef.map(([key, value], index) => (\n              <li key={index}>\n                <strong>{key}:</strong>{\" \"}\n                {typeof value === \"object\" ? JSON.stringify(value) : value}\n              </li>\n            ))}\n          </ul>\n          <li>Scored overall: {dataState.scoredOverallHome}</li>\n          <li>Conceeded overall: {dataState.conceededOverallHome}</li>\n          <li>\n            Average scored home only:{\" \"}\n            {(\n              dataState.scoredOverallHomeOnly / dataState.playedHomeOnly\n            ).toFixed(2)}\n          </li>\n          <li>\n            Average conceeded home only:{\" \"}\n            {(\n              dataState.conceededOverallHomeOnly / dataState.playedHomeOnly\n            ).toFixed(2)}\n          </li>\n          <li>PPG overall: {dataState.PPGOverallHome}</li>\n          <li>PPG home only: {dataState.PPGOverallHomeOnly}</li>\n          <li>League position: {dataState.leaguePosition_overallHome}</li>\n          <li>\n            League position home only: {dataState.leaguePosition_HomeOnly}\n          </li>\n          <li>BTTS {dataState.BTTSPercentage_overallHome}%</li>\n          <li>BTTS and win: {dataState.BTTSAndWinPercentage_Home}%</li>\n          <li>BTTS and lose: {dataState.BTTSAndLosePercentage_Home}%</li>\n          <li>BTTS both halves: {dataState.BTTSBothHalvesHome}%</li>\n          <li>\n            Goal diff 1st half only: {dataState.GoalDifferenceHT_overall_Home}\n          </li>\n          <li>Goal diff 2nd half only: {dataState.GD_2hg_overall_Home}</li>\n          <li>\n            Leading at half time: {dataState.leadingAtHTPercentage_overallHome}%\n          </li>\n          <li>\n            Over 1.5 goals in games:{\" \"}\n            {dataState.seasonOver15Percentage_overallHome}%\n          </li>\n          <li>\n            Over 2.5 goals in games:{\" \"}\n            {dataState.seasonOver25Percentage_overallHome}%\n          </li>\n          <li>\n            Over 3.5 goals in games:{\" \"}\n            {dataState.seasonOver35Percentage_overallHome}%\n          </li>\n          <li>\n            Over 4.5 goals in games:{\" \"}\n            {dataState.seasonOver45Percentage_overallHome}%\n          </li>\n          <li>\n            Scored both halves:{\" \"}\n            {dataState.scoredBothHalvesPercentage_overallHome}%\n          </li>\n          <li>\n            SOTs per goal:{\" \"}\n            {dataState.shots_on_target_per_goals_scored_overallHome}\n          </li>\n          <li>Corners in game avg: {dataState.cornersTotalAVG_overallHome}</li>\n          <li>Cards avg: {dataState.cardsAVG_overallHome}</li>\n          <li>Fouls against avg: {dataState.foulsAVG_overallHome}</li>\n          <li>\n            Penalties won avg: {dataState.penalties_won_per_match_overallHome}\n          </li>\n          <li>\n            Penalties in match:{\" \"}\n            {dataState.penalty_in_a_match_percentage_overallHome}%\n          </li>\n        </ul>\n        <ul className=\"AwayTeamStats\">\n          <h3>{storedFixtureDetailsJson.awayTeamName}</h3>\n          {propertyNamesAway.map(([key, value], index) => (\n            <li key={index}>\n              <strong>{key}:</strong>{\" \"}\n              {typeof value === \"object\" ? JSON.stringify(value) : value}\n            </li>\n          ))}\n          <ul className=\"AwayTeamStats\">\n            {propertyNamesAwayDef.map(([key, value], index) => (\n              <li key={index}>\n                <strong>{key}:</strong>{\" \"}\n                {typeof value === \"object\" ? JSON.stringify(value) : value}\n              </li>\n            ))}\n          </ul>\n          <li>Scored overall: {dataState.scoredOverallAway}</li>\n          <li>Conceeded overall: {dataState.conceededOverallAway}</li>\n          <li>\n            Average scored away only:{\" \"}\n            {(\n              dataState.scoredOverallAwayOnly / dataState.playedAwayOnly\n            ).toFixed(2)}\n          </li>\n          <li>\n            Average conceeded away only:{\" \"}\n            {(\n              dataState.conceededOverallAwayOnly / dataState.playedAwayOnly\n            ).toFixed(2)}\n          </li>\n          <li>PPG overall: {dataState.PPGOverallAway}</li>\n          <li>PPG away only: {dataState.PPGOverallAwayOnly}</li>\n          <li>League position: {dataState.leaguePosition_overallAway}</li>\n          <li>\n            League position away only: {dataState.leaguePosition_AwayOnly}\n          </li>\n          <li>BTTS: {dataState.BTTSPercentage_overallAway}%</li>\n          <li>BTTS and win: {dataState.BTTSAndWinPercentage_Away}%</li>\n          <li>BTTS and lose: {dataState.BTTSAndLosePercentage_Away}%</li>\n          <li>BTTS both halves: {dataState.BTTSBothHalvesAway}%</li>\n          <li>\n            Goal diff 1st half only: {dataState.GoalDifferenceHT_overall_Away}\n          </li>\n          <li>Goal diff 2nd half only: {dataState.GD_2hg_overall_Away}</li>\n          <li>\n            Leading at half time: {dataState.leadingAtHTPercentage_overallAway}%\n          </li>\n          <li>\n            Over 1.5 goals in games:{\" \"}\n            {dataState.seasonOver15Percentage_overallAway}%\n          </li>\n          <li>\n            Over 2.5 goals in games:{\" \"}\n            {dataState.seasonOver25Percentage_overallAway}%\n          </li>\n          <li>\n            Over 3.5 goals in games:{\" \"}\n            {dataState.seasonOver35Percentage_overallAway}%\n          </li>\n          <li>\n            Over 4.5 goals in games:{\" \"}\n            {dataState.seasonOver45Percentage_overallAway}%\n          </li>\n          <li>\n            Scored both halves:{\" \"}\n            {dataState.scoredBothHalvesPercentage_overallAway}%\n          </li>\n          <li>\n            SOTs per goal:{\" \"}\n            {dataState.shots_on_target_per_goals_scored_overallAway}\n          </li>\n          <li>Corners in game avg: {dataState.cornersTotalAVG_overallAway}</li>\n          <li>Cards avg: {dataState.cardsAVG_overallAway}</li>\n          <li>Fouls against avg: {dataState.foulsAVG_overallAway}</li>\n          <li>\n            Penalties won avg: {dataState.penalties_won_per_match_overallAway}\n          </li>\n          <li>\n            Penalties in match:{\" \"}\n            {dataState.penalty_in_a_match_percentage_overallAway}%\n          </li>\n        </ul>\n        <div className=\"ChartContainer\">\n          <span className=\"Spacer\"></span>\n          <Bar options={options} data={data} className=\"ComparisonBar\" />\n          <span className=\"Spacer\"></span>\n        </div>\n        <ul className=\"HomeTeamResults\">\n          {propertyNamesallTeamResultsHome.map((match, index) => (\n            <>\n              <div className=\"MatchDate\">{match.date}</div>\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{match.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {match.homeGoals} : {match.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{match.awayTeam}</div>\n              </div>\n            </>\n          ))}\n        </ul>\n        <ul className=\"AwayTeamResults\">\n          {propertyNamesallTeamResultsAway.map((match, index) => (\n            <>\n              <div className=\"MatchDate\">{match.date}</div>\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{match.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {match.homeGoals} : {match.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{match.awayTeam}</div>\n              </div>\n            </>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default TeamPage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router, Route, Routes, HashRouter } from \"react-router-dom\";\nimport TeamPage from \"./components/Team\";\nimport { Provider } from \"react-redux\";\nimport store from \"./logic/store\"; // Import your Redux store\nimport {Fixture} from \"./components/Fixture\"\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n    <HashRouter>\n        <Routes>\n          <Route path=\"/fixture\" element={<TeamPage />} />\n          <Route path=\"/\" exact element={<App />} />\n          {/* <Route path=\"/\" element={<Fixture />} /> */}\n        </Routes>\n        </HashRouter>\n    </Provider>\n    ,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}