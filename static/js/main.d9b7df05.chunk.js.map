{"version":3,"sources":["components/Button.js","components/OddsRadio.js","components/createBadge.js","components/createStatsDiv.js","components/Div.js","logic/getForm.js","components/Slider.js","components/CollapsableElement.js","components/Increment.js","logic/getBTTSPotential.js","components/Carousel.js","components/KofiButton.js","components/SliderDiff.js","logic/getScorePredictions.js","components/LeagueTable.js","logic/getFixtures.js","components/PreviousGames.js","components/HeadToHead.js","components/Table.js","logic/getTeamStats.js","logic/compareFormTrend.js","components/Chart.js","components/SofaScore.js","logic/getStats.js","components/Fixture.js","logic/dataSlice.js","logic/store.js","App.js","components/images/xg-tipping-high-resolution-logo-transparent.png","components/Logo.js","reportWebVitals.js","components/Team.js","index.js"],"names":["Button","props","id","text","variant","type","onClick","onClickEvent","className","style","selectedOdds","OddsRadio","handleOptionChange","setState","value","state","this","name","checked","onChange","Component","CreateBadge","image","ClassName","src","alt","flexShrink","Stats","styleForm","formIndicator","styleBTTS","BTTSBoolean","clicked","formRun","Results","homeOrAway","ResultsHorA","homeOrAwayResults","BTTSArray","FormTextString","FavouriteRecord","goals","conceeded","possession","XG","XGConceded","XGSwing","toFixed","goalDifference","goalDifferenceHomeOrAway","sot","dangerousAttacks","undefined","leaguePosition","homeOrAwayLeaguePosition","winPercentage","drawPercentage","lossPercentage","ppg","formTrend","CardsTotal","CornersAverage","Div","getForm","match","teams","homeId","awayId","fixtureForm","i","team","fetch","process","response","json","then","formData","lastMatchTimestamp","last_updated_match_timestamp","length","rangeValue","Slide","useState","range","setRange","fractionalValue","setFractionalValue","useEffect","roundedValueOne","Math","round","roundedValueTwo","fractionalOne","oddslib","from","to","precision","fractionalTwo","error","console","log","sx","width","color","event","newValue","valueLabelDisplay","step","min","max","valueLabelFormat","index","Collapsable","transitionTime","trigger","classNameButton","buttonText","classNameFlex","classNameTwo","element","classNameThree","elementTwo","incrementValue","riskLevel","Increment","IncrementItem","getNewTips","allTips","DecreaseItem","show","getBTTSPotential","homeGoals","awayGoals","unroundedHomeGoals","unroundedAwayGoals","homeBTTS","bttsAllPercentageHome","homeOnlyBTTS","bttsPercentageHomeHome","awayOnlyBTTS","bttsPercentageAwayAway","awayBTTS","bttsAllPercentageAway","homeG","awayG","combinedBTTS","bttsFraction","status","awayOdds","btts","bttsChosen","totalGoals","rawFinalHomeGoals","rawFinalAwayGoals","SwiperCore","use","EffectCoverflow","Pagination","Slider","effect","autoHeight","grabCursor","centeredSlides","slidesPerView","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","pagination","clickable","element2","element3","element4","element5","StyledKofiButton","title","kofiID","minimumXG","minimumGD","minimumGDHorA","minimumLast6","SlideDiff","finalHomeGoals","finalAwayGoals","homeOdds","setValue","useCase","marks","parseFloat","lower","upper","Headers","append","drawPredictions","sumStatDAWin","sumStatDALoss","sumStatPossessionWin","sumStatPossessionLoss","sumStatSOTWin","sumStatSOTLoss","sumStatPPGLast10Win","sumStatPPGLast10Loss","sumOddsWin","sumOddsLoss","sumXGForWin","sumXGForLoss","sumXGAgainstWin","sumXGAgainstLoss","allDrawOutcomes","totalROI","totalInvestment","totalProfit","convertTimestamp","timestamp","newDate","Date","toLocaleDateString","split","day","month","year","converted","getPointsFromLastX","lastX","pointsAddition","points","forEach","game","getPastLeagueResults","hOrA","form","completeData","date","allLeagueResultsArrayOfObjects","leagueIndex","fixtures","teamsHomeResults","filter","fixture","home_name","item","date_unix","sort","a","b","teamsAwayResults","away_name","homeResults","awayResults","oddsSumHome","oddsSumAway","favouriteCount","underdogCount","winningFavouriteCount","drawingFavouriteCount","beatenFavouriteCount","winningUnderdogCount","drawingUnderdogCount","beatenUnderdogCount","resultedGame","homeGoalCount","team_a_xg","awayGoalCount","team_b_xg","team_a_possession","team_a_shots","team_a_shotsOnTarget","team_b_shotsOnTarget","team_a_dangerous_attacks","team_a_corners","odds_ft_1","odds_ft_2","homeTeam","awayTeam","XGAgainst","scored","shots","sotAgainst","corners","dateRaw","oddsHome","oddsAway","odds","result","push","team_b_possession","team_b_shots","team_b_dangerous_attacks","team_b_corners","reversedResultsHome","reversedResultsAway","y","allClearFavouriteResultsHome","allClearFavouriteResultsAway","simlarGameResultsHome","concat","allSlightFavouriteResultsHome","allSlightFavouriteResultsAway","allTossupResultsHome","allTossupResultsAway","allUnderdogResultsHome","allUnderdogResultsAway","allMassiveUnderdogResultsHome","allMassiveUnderdogResultsAway","z","simlarGameResultsAway","allTeamResults","pointsWeighted","teamResult","gamesPlayed","allTeamResultsHome","allTeamResultsAway","points6","map","res","slice","pointsSum6","reduce","avPoints6","points5","pointsSum5","avPoints5","pointsAll","pointsSumAll","avPointsAll","resultsAll","resultsHome","resultsAway","avScoredLast5","avScoredLast5Sum","avConceededLast5","avConceededLast5Sum","avDALast5","avDALast5Sum","avSOTLast5","avSOTLast5Sum","avSOTAgainstLast5","avSOTAgainstLast5Sum","avShotsLast5","avShotsLast5Sum","avCornersLast5","avCornersLast5Sum","avPosessionLast5","avPosessionLast5Sum","avXGLast5","avXGLast5Sum","avXGAgainstLast5","avXGAgainstLast5Sum","averageOddsHome","averageOddsAway","oddsReliabilityWin","oddsReliabilityDraw","oddsReliabilityLose","oddsReliabilityWinAsUnderdog","oddsReliabilityDrawAsUnderdog","oddsReliabilityLoseAsUnderdog","reliableIndicator","unreliableIndicator","predictabilityScore","reliabilityString","teamGoalsHome","teamGoalsAway","teamGoalsAll","teamConceededHome","teamConceededAway","teamConceededAll","teamXGForAll","teamXGAgainstAll","teamXGForAllRecentAtStart","teamXGAgainstAllRecentAtStart","teamXGForHome","teamXGAgainstHome","teamXGForAway","teamXGAgainstAway","XGSum","avgXGScored","XGAgainstSum","avgXGConceeded","shortTermXGDiff","longTermXGDiff","XGChangeRecently","possessionSum","avgPossession","possessionHome","possessionSumHome","avgPossessionHome","possessionAway","possessionSumAway","avgPossessionAway","dangerousAttacksSum","avgDangerousAttacks","dangerousAttacksHome","dangerousAttacksSumHome","avgDangerousAttacksHome","dangerousAttacksAway","dangerousAttacksSumAway","avgDangerousAttacksAway","shotsSum","avgShots","shotsHome","shotsSumHome","avgShotsHome","shotsAway","shotsSumAway","avgShotsAway","shotsOnTarget","shotsOnTargetSum","avgShotsOnTarget","shotsOnTargetHome","shotsOnTargetSumHome","avgShotsOnTargetHome","shotsOnTargetAway","shotsOnTargetSumAway","avgShotsOnTargetAway","shotsOnTargetAgainst","shotsOnTargetSumAgainst","avgShotsOnTargetAgainst","shotsOnTargetAgainstHome","shotsOnTargetSumAgainstHome","avgShotsOnTargetAgainstHome","shotsOnTargetAgainstAway","shotsOnTargetSumAgainstAway","avgShotsOnTargetAgainstAway","cornersSum","cornersAv","cornersHome","cornersSumHome","cornersAvHome","cornersAway","cornersSumAway","cornersAvAway","last5XG","last5XGSum","last5XGAvgFor","last5XGHome","last5XGSumHome","last5XGAvgForHome","last5XGAway","last5XGSumAway","last5XGAvgForAway","XGSumHome","avgXGScoredHome","XGSumAway","avgXGScoredAway","XGAgainstSumHome","avgXGConceededHome","XGAgainstSumAway","avgXGConceededAway","last5XGAgainst","last5XGAgainstSum","last5XGAvgAgainst","last5XGAgainstHome","last5XGAgainstSumHome","last5XGAvgAgainstHome","last5XGAgainstAway","last5XGAgainstSumAway","last5XGAvgAgainstAway","XGDiffNonAverage","XGDiffNonAverageLast5","XGOverall","XGlast5","shotsLast5Arr","shotsLast5Sum","avgShotsLast5","shotsHomeArr","shotsHomeSum","shotsAwayArr","shotsAwaySum","avgShotValue","avgShotValueLast5","avgShotValueHome","avgShotValueAway","XGAgainstAvgOverall","XGAgainstlast5","AveragePossessionOverall","AverageDangerousAttacksOverall","AverageCorners","AverageShotsOnTargetOverall","AverageShotsOnTargetAgainstOverall","alpha","beta","allGoalsArrayHomeRecent","allConceededArrayHomeRecent","allGoalsArrayHome","reverse","allConceededArrayHome","allGoalsArrayHomeOnly","allConceededArrayHomeOnly","sum","sumTwo","predictGoalsWithExponentialSmoothing","forAndAgainstRollingAv","forAndAgainstRollingAvHomeOrAway","allGoalsArrayAwayRecent","allConceededArrayAwayRecent","allGoalsArrayAway","allConceededArrayAway","allGoalsArrayAwayOnly","allConceededArrayAwayOnly","bttsHome","bttsAway","bttsAll","bttsHomeCount","bttsHomeString","bttsHomePercentage","bttsAwayCount","bttsAwayString","bttsAwayPercentage","bttsAllCount","bttsAllString","bttsAllPercentage","r","x","predictNextWeightedMovingAverage","teamGoalsHomeRollingAverage","teamGoalsAwayRollingAverage","RoundedXGFor","xg","RoundedXGAgainst","RoundedXGForHome","RoundedXGAgainstHome","RoundedXGForAway","RoundedXGAgainstAway","XGPrediction","XGPredictionHome","XGPredictionAway","teamConceededHomeRollingAverage","teamConceededAwayRollingAverage","avgScored","sumHome","avgScoredHome","sumAway","avgScoredAway","last5","last5Sum","last5AvgScored","last5Home","last5SumHome","last5AvgScoredHome","last5Away","last5SumAway","last5AvgScoredAway","last5Conceeded","last5ConceededSum","last5AvgConceeded","last5ConceededHome","last5ConceededSumHome","last5AvgConceededHome","last5ConceededAway","last5ConceededSumAway","last5AvgConceededAway","last10","last10Sum","last10AvgScored","last10Conceeded","last10ConceededSum","last10AvgConceeded","last5Goals","last5GoalsConceeded","last5GoalDiff","last10Goals","last10GoalsConceeded","last10GoalDiff","teamGoalsAllRollingAverage","teamGoalsConceededAllRollingAverage","avgConceeded","teamConceededHomeOnlySum","teamConceededAvgHomeOnly","teamConceededAwayOnlySum","teamConceededAvgAwayOnly","teamName","numbers","windowSize","startIndex","window","weights","Array","_","acc","num","movingAverage","w","calculateWeightedAverage","arr","weightedSum","totalWeight","weight","pow","teamGoalsFor","teamGoalsAgainst","lambdaFor","lambdaAgainst","predictedGoalsFor","predictedGoalsAgainst","goalsFor","goalsAgainst","calculateDifference","num1","num2","comparison","metricOne","metricTwo","stat1","stat2","statDiff","getClinicalRating","dangerousAttackConversion","rating","score","getPointsDifferential","pointsHomeAvg","pointsAwayAvg","diff","differential","compareFormTrend","recentForm","distantForm","scoreTotal","recent","distant","getPointAverage","pointTotal","games","generateGoals","homeForm","awayForm","attackingStrength","defensiveStrengthScoreGeneration","homeAttackVsAwayDefenceComparison","awayAttackVsHomeDefenceComparison","defensiveStrength","attackingStrengthLast5","defensiveStrengthScoreGenerationLast5","homeAttackVsAwayDefenceComparisonLast5","awayAttackVsHomeDefenceComparisonLast5","attackingStrengthHomeOnly","defensiveStrengthScoreGenerationAwayOnly","homeAttackVsAwayDefenceComparisonHomeOnly","attackingStrengthAwayOnly","defensiveStrengthScoreGenerationHomeOnly","awayAttackVsHomeDefenceComparisonAwayOnly","oddsComparisonHome","oddsComparisonAway","XGRating","XGRatingHomeComparison","XGRatingAwayComparison","lastGame","previousToLastGame","calculateScore","divider","calculate","allForm","find","home","away","PlayedHome","PlayedAway","lastHomeOrAwayPoints","homeOrAwayAverage","ScoredAverage","ScoredOverall","ConcededAverage","ConcededOverall","ScoredAverageShortTerm","ConcededAverageShortTerm","longTermAverageGoals","longTermAverageConceeded","recentGoalDiff","distantGoalDiff","recentDA","distantDA","recentPosession","distantPosession","recentCleanSheet","CleanSheetPercentage","distantCleanSheet","recentFormArray","distantFormArray","formTrendScore","expectedGoals","ScoredAverageShortAndLongTerm","conceededAverageShortAndLongTerm","longTermGoalDifference","shortTermGoalDifference","XGdifferential","formHome","formAway","last2Points","clinicalRating","clinicalScore","XGdifferentialValue","abs","XGdifferentialValueRaw","leagueID","predictedGoalsBasedOnHomeAv","predictedGoalsBasedOnAwayAv","allTeamGoalsBasedOnAverages","predictedGoalsConceededBasedOnHomeAv","predictedGoalsConceededBasedOnAwayAv","allTeamGoalsConceededBasedOnAverages","averageScoredLeague","averageConceededLeague","last10btts","last10bttsHome","last10bttsAway","bttsPercentageHomeAway","bttsPercentageAwayHome","homeTeamHomePositionRaw","awayTeamAwayPositionRaw","homePositionHomeOnly","awayPositionAwayOnly","homePosition","homeRawPosition","awayPosition","awayRawPosition","improving","pointsDiff6","AttackingPotency","AttacksHome","AttacksAverage","attackingMetricsHome","AverageShotsOnTarget","Corners","attackingMetricsHomeLast5","AverageShots","attackingMetricsHomeOnly","attackingMetricsAwayOnly","attackingMetricsAway","attackingMetricsAwayLast5","defensiveMetricsHome","defensiveMetricsHomeLast5","defensiveMetricsAway","defensiveMetricsAwayLast5","defensiveMetricsHomeOnly","defensiveMetricsAwayOnly","attackingMetrics","defensiveMetrics","calculateAttackingStrength","attackingStrengthScoreGeneration","calculateDefensiveStrength","defensiveStrengthLast5","defensiveStrengthHomeOnly","defensiveStrengthAwayOnly","calculateMetricStrength","possessionStrength","possessionStrengthLast5","possessionStrengthHomeOnly","possessionStrengthAwayOnly","XGdifferentialRecent","actualToXGDifferenceRecent","directnessOverall","directnessOverallLast5","directnessHomeOnly","directnessAwayOnly","directnessOverallStrength","directnessOverallStrengthLast5","directnessHomeStrength","directnessAwayStrength","shootingAccuracy","shootingAccuracyLast5","shootingAccuracyHomeOnly","shootingAccuracyAwayOnly","accuracyOverallStrength","accuracyOverallStrengthLast5","accuracyHomeStrength","accuracyAwayStrength","xgForStrength","xgForStrengthLast5","xgForStrengthHomeOnly","xgAgainstStrength","xgAgainstStrengthLast5","xgAgainstStrengthHomeOnly","xgForStrengthAwayOnly","xgAgainstStrengthAwayOnly","parseInt","actualToXGDifference","teamGoalsCalc","homeGoalDiff","awayGoalDiff","goalsDifferential","rollingAverageGoalsDifferential","GoalsInGamesAverageHome","GoalsInGamesAverageAway","factorOneHome","factorOneAway","scoreDiff","experimentalHomeGoals","experimentalAwayGoals","prediction","includeInMultis","pointsDifferential","pointsDifferentialValue","pointsDifferentialValueRaw","rollingGoalDiffDifferential","rollingGoalDiff","rollingGoalDiffValue","dangerousAttacksDifferential","dangerousAttacksDiff","dangerousAttacksDiffValue","winner","outcome","last10Points","predictionOutcome","over25PredictionOutcome","bttsOutcome","total","total2","drawOdds","omit","last10PointDiffHomePerspective","last6PointDiffAwayPerspective","XGDiffBetweenTeamsHomePerspective","XGDiffBetweenTeamsAwayPerspective","goalDiffHomeOrAwayComparison","goalDifferenceComparison","profit","getSuccessMeasure","sumProfit","investment","exactScores","successCount","netProfit","hasOwnProperty","exactScore","ROI","operand","operandTwo","exactScoreHitRate","successRate","ReactDOM","render","document","getElementById","price","combinations","gamesInExotic","exoticStake","exoticString","allTipsSorted","newArray","bestBets","Over25Tips","XGDiffTips","rollingDiffTips","dangerousAttacksDiffTips","pointsDiffTips","exoticArray","bttsArray","accumulatedOdds","predictions","array","tip","indexOf","rawOdds","renderTips","getScorePrediction","mocked","mock","Promise","all","matches","game_week","goalsA","goalsB","unroundedGoalsA","unroundedGoalsB","outcomeSymbol","over25PredictionOutcomeSymbol","bttsOutcomeSymbol","fractionHome","teamComparisonScore","predictionObject","comparisonScore","rawComparisonScore","goalDifferential","experimentalCalc","fractionAway","Over25PredictionObject","decimalOdds","homeDoubleChance","over25Odds","doubleChanceOutcome","goalTotalUnrounded","XGPredictionObject","otherTeam","pointsDiffObject","rollingDiffObject","dangerousAttacksDiffObject","RenderAllFixtures","bool","getMultis","getCoverBetMaxReturns","getAccumulatorPrice","priceArray","minAccSize","stake","perms","getUniquePermutations","j","permLength","permutations","newArr","splice","twoDimArrayUnion","arr1","arr2","duplicate","k","NewlineText","str","toggleState","setIsOff","upArrow","StyledTableCell2","withStyles","theme","head","backgroundColor","padding","paddingTop","paddingBottom","textAlign","fontSize","fontFamily","margin","body","TableCell","StyledTableCell","StyledTableRow","root","TableRow","LeagueTable","singleResult","rows","Teams","component","scope","Name","Played","Wins","Draws","Losses","For","Against","GoalDifference","Points","Form","Key","leagueResults","team_a_red_cards","team_b_red_cards","leagueResultsOlder","getTopScorersTeam","ID","sorted","league","order","sortedByForm","LastWeeksResults","GamesPlayed","LeagueID","TableContainer","Paper","Table","marginTop","marginBottom","TableHead","TableBody","mostRecentGameweek","seasonAVG_home","seasonAVG_away","seasonBTTSPercentage","seasonOver05Percentage_overall","seasonOver15Percentage_overall","seasonOver25Percentage_overall","seasonOver35Percentage_overall","seasonOver45Percentage_overall","over75CornersPercentage_overall","over85CornersPercentage_overall","over95CornersPercentage_overall","over105CornersPercentage_overall","over115CornersPercentage_overall","over125CornersPercentage_overall","cornersAVG_overall","cardsAVG_overall","top_scorers","known_as","club_team_id","goals_overall","fixtureResponse","leagueInstance","lastThreeFormHome","lastFiveFormHome","lastFiveFormAway","lastSixFormHome","lastTenFormHome","leagueOrAll","formRunHome","formRunAway","WDLinLeagueHome","WDLinLeagueAway","HomeAverageGoals","homeAverageGoals","HomeAverageConceded","homeAverageConceded","AwayAverageGoals","awayAverageGoals","AwayAverageConceded","awayAverageConceded","require","fixtureArray","arrayOfGames","leagueGames","leagueArray","leagueIdArray","tableArray","worldCupArray","generateTables","allResults","currentLeagueId","data","specific_tables","groups","table","currentTeam","wdl_record","toUpperCase","Position","cleanName","matchesPlayed","seasonWins_overall","seasonDraws_overall","seasonLosses_overall","seasonGoals","seasonConceded_home","seasonConceded_away","seasonGoalDifference","LastXPoints","wdl","seasonConceded","group","league_table","all_matches_table_overall","results","mostRecentGame","pop","gameweeksResults","leagueTable","leagueStatistics","stats","statistics","createFixture","mockBool","roundedHomeOdds","roundedAwayOdds","homeFraction","awayFraction","bttsOdds","roundedBTTSOdds","homeTeamWinsPercentage","homeTeamWinPercentage","homeTeamLossesPercentage","homeTeamLossPercentage","homeTeamDrawsPercentage","homeTeamDrawPercentage","awayTeamWinsPercentage","awayTeamWinPercentage","awayTeamLossesPercentage","awayTeamLossPercentage","awayTeamDrawsPercentage","awayTeamDrawPercentage","Fixture","isFunctionRunning","generateFixtures","footyStatsFormattedDate","current","todaysDate","dateSS","getPrefix","position","teamPositionPrefix","updateResults","method","headers","Accept","JSON","stringify","height","fill","url","formUrl","formArray","leaguesStored","storedForm","isFormStored","isStoredLocally","orderedLeagues","leaguePositions","allLeagueResults","leagues","allGames","sofaScore","events","time","startTimestamp","homeScore","display","awayScore","startDate","getTime","targetDate","orderedLeague","gamesFiltered","gamesShortened","pager","current_page","max_page","page2","page2Data","gamesConcat","gamesConcatFiltered","mostRecentResults","shortenedResults","pre_match_teamA_overall_ppg","pre_match_teamB_overall_ppg","leagueObj","homeLeague","awayLeague","all_matches_table_home","all_matches_table_away","regularSeason","season","string","stringHome","stringAway","rawPosition","homeFormName","awayFormName","homeSeasonWinPercentage","seasonWins","awaySeasonWinPercentage","homeSeasonLossPercentage","seasonLosses_home","awaySeasonLossPercentage","seasonLosses_away","homeSeasonDrawPercentage","seasonDraws","awaySeasonDrawPercentage","homeSeasonMatchesPlayed","awaySeasonMatchesPlayed","played","competition_id","unixTimestamp","dateObject","previousLeagueName","leagueName","toLocaleString","hour","minute","odds_ft_x","odds_doublechance_1x","awayDoubleChance","odds_doublechance_x2","odds_btts_yes","homeID","awayID","homeTeamInfo","awayTeamInfo","homeTeaminLeague","awayTeaminLeague","teamPositionHome","teamPositionHomeTable","teamPositionAwayTable","homeTeamWinPercentageHome","awayTeamWinPercentageAway","homeTeamLossPercentageHome","awayTeamLossPercentageAway","homeTeamDrawPercentageHome","awayTeamDrawPercentageAway","teamPositionAway","homePrefix","homePrefixHomeTable","awayPrefix","awayPrefixAwayTable","homeSeasonPPG","awaySeasonPPG","homeTeaminHomeLeague","awayTeaminAwayLeague","homeFormString5","additional_info","formRun_overall","awayFormString5","homeFormString6","awayFormString6","homeFormString10","awayFormString10","homeFormRun","formRun_home","awayFormRun","formRun_away","season_format","xg_for_avg_overall","xg_for_avg_home","seasonScoredNum_overall","seasonScoredAVG_home","seasonMatchesPlayed_home","seasonMatchesPlayed_away","seasonConcededNum_overall","seasonConcededAVG_home","xg_against_avg_overall","XGAgainstAverage","xg_against_avg_home","seasonCSPercentage_overall","possessionAVG_overall","AveragePossession","possessionAVG_home","shotsOnTargetAVG_overall","shotsOnTargetAVG_home","dangerous_attacks_avg_overall","PPG","seasonPPG_overall","attacks_avg_home","AttacksAway","attacks_avg_away","AverageDangerousAttacks","dangerous_attacks_avg_home","homeAttackAdvantage","homeDefenceAdvantage","BTTSPercentage","seasonBTTSPercentage_home","LeagueOrAll","LeaguePosition","LeagueAverageGoals","LeagueAverageConceded","shotsAVG_overall","shotsAVG_home","seasonGoalDifference_overall","seasonGoalDifference_home","seasonBTTSPercentage_overall","cardsTotal_overall","scoredBothHalvesPercentage_overall","AverageShotsHomeOrAway","lastThreeForm","LastFiveForm","LastSixForm","LastTenForm","SeasonPPG","WinPercentage","LossPercentage","DrawPercentage","BttsPercentage","BttsPercentageHomeOrAway","ScoredBothHalvesPercentage","LastMatch","WDLRecord","xg_for_avg_away","seasonScoredAVG_away","seasonConcededAVG_away","xg_against_avg_away","possessionAVG_away","shotsOnTargetAVG_away","dangerous_attacks_avg_away","seasonBTTSPercentage_away","shotsAVG_away","seasonGoalDifference_away","teamIDHome","teamIDAway","leagueId","homeBadge","home_image","awayBadge","away_image","homePpg","home_ppg","awayPpg","away_ppg","homeTeamHomePosition","awayTeamAwayPosition","odds_ft_over25","btts_potential","stadium","stadium_name","expectedGoalsHomeToDate","team_a_xg_prematch","expectedGoalsAwayToDate","team_b_xg_prematch","setTimeout","PreviousGames","getKeysByValue","object","Object","keys","key","reducedArr","team_a_id","team_b_id","teamNameHome","teamObject","teamNameAway","getDate","getMonth","getFullYear","team_a_goals","team_b_goals","HeadToHead","homeWins","awayWins","draws","averageGoals","bestHomeOdds","bestAwayOdds","lineHeight","CustomizedTables","align","o05Stat","o05Odds","u05Odds","o15Stat","o15Odds","u15Odds","o25Stat","o25Odds","u25Odds","o35Stat","o35Odds","u35Odds","getTeamStats","identifier","getBTTSPercentage","getFairOdds","impliedProbability","impliedProbabilityDivided","homeToal","awayTotal","fixtureHistory","matchArr","h2h","previous_matches_ids","reducedMatchArr","oddsComparisonHomeArray","oddsComparisonAwayArray","odds_comparison","sortedHomeOdds","entries","sortedAwayOdds","bestHomeOddsProvider","bestAwayOddsProvider","previous_matches_results","totalMatches","teamMappings","betting_stats","bttsPercentage","BTTSForecast","fairOddsBTTSYes","fairOddsBTTSNo","team_a_wins","team_b_wins","draw","avg_goals","over05Percentage","over15Percentage","o15Forecast","o15_potential","odds_ft_over05","odds_ft_under05","odds_ft_over15","odds_ft_under15","over25Percentage","o25Forecast","o25_potential","odds_ft_under25","over35Percentage","o35Forecast","o35_potential","odds_ft_over35","odds_ft_under35","BTTSStat","BTTSOdds","BTTSOddsNo","odds_btts_no","CornersStat","CornersForecast","corners_potential","CornersOdds","odds_corners_over_105","getOverOrUnderText","xgSum","overUnderAchievingSum","getXGDifferential","xgFor","xgAgainst","xgDiff","goalDiff","compareXgAndGoalDiff","getAttackingSummary","goalsRecent","goalsLongTerm","getDefenceSummary","cleansheetStat","lastx","ten","five","xgText","attackString","defenceString","pointsAverageTotal","GenerateFormSummary","Chart","data1","options","responsive","aspectRatio","maintainAspectRatio","layout","elements","point","radius","scales","suggestedMin","suggestedMax","grid","borderWidth","borderColor","ticks","font","size","plugins","legend","labels","boxHeight","data3","datasets","label","team1","tension","team2","data2","MultilineChart","hidden","data4","data5","data6","DoughnutChart","rotation","hoverOffset","cutout","circumference","RadarChart","angleLines","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","BarChart","datasetOne","idx","numOne","numTwo","tempArr","firstNum","secondNum","findLargestNum","indexAxis","bar","tooltip","enabled","context","dataIndex","dataset","BarChartTwo","subtitle","bottom","barThickness","ChartJS","register","CategoryScale","LinearScale","RadialLinearScale","PointElement","ArcElement","Filler","BarElement","LineElement","Title","Tooltip","Legend","SubTitle","SofaLineupsWidget","differenceInSeconds","minutes","iframeSrc","currentTime","floor","maxWidth","border","scrolling","frameborder","metric","ranges","normalizedValue","normValue","metricName","metricValue","averagePossession","accuracyOverall","Error","weightedScore","rollingGoalDiffTotalHome","rollingGoalDiffTotalAway","rollingXGDiffTotalHome","rollingXGDiffTotalAway","rollingSOTDiffTotalHome","rollingSOTDiffTotalAway","displayBool","testBool","styling","alert","getPointsFromGames","formArr","pairings","W","D","L","arrayOfIndividualPoints","getLastGameResult","homeXG","awayXG","homeShots","awayShots","homeSot","awaySot","homeDangerousAttacks","awayDangerousAttacks","homePossession","awayPossession","homeRed","awayRed","homePPG","awayPPG","singleSimilarResult","StatsHome","gameCount","formDataHome","Last5","gameArrayHomeTeamHomeGames","homeTenGameAverage","homeSixGameAverage","homeFiveGameAverage","homeLastGame","FormTextStringHome","StatsAway","formDataAway","gameArrayAwayTeamAwayGames","awayTenGameAverage","awaySixGameAverage","awayFiveGameAverage","awayLastGame","FormTextStringAway","getGameIdByHomeTeam","homeTeamName","matchingGames","includes","gameStats","gameArrayHome","gameArrayAway","p","n","pos","resultHome","resultHomeOnly","timeZone","won","goalsScored","goalsConceeded","wonHomeOrAwayOnly","goalDiffArrayHome","xgDiffArrayHome","sotDiffArrayHome","resultAway","resultAwayOnly","wonAwayOrAwayOnly","goalDiffArrayAway","xgDiffArrayAway","sotDiffArrayAway","bttsArrayHome","bttsArrayAway","last3Points","last5Points","last6Points","homeFormTrend","awayFormTrend","formTextStringHome","formTextStringAway","favouriteRecordHome","favouriteRecordAway","homeXGRating","awayXGRating","homeAttackStrength","homeAttackStrengthLast5","homeOnlyAttackStrength","homeDefenceStrength","homeDefenceStrengthLast5","homeOnlyDefenceStrength","homePossessionStrength","homePossessionStrengthLast5","homeOnlyPossessionStrength","homeXGForStrength","homeXGForStrengthLast5","homeOnlyXGForStrength","homeXGAgainstStrength","homeXGAgainstStrengthLast5","homeOnlyXGAgainstStrength","homeDirectnessStrength","homeDirectnessStrengthLast5","homeOnlyDirectnessStrength","homeAccuracyOverallStrength","homeAccuracyOverallStrengthLast5","homeOnlyAccuracyOverallStrength","awayAttackStrength","awayAttackStrengthLast5","awayOnlyAttackStrength","awayDefenceStrength","awayDefenceStrengthLast5","awayOnlyDefenceStrength","awayPossessionStrength","awayPossessionStrengthLast5","awayOnlyPossessionStrength","awayXGForStrength","awayXGForStrengthLast5","awayOnlyXGForStrength","awayXGAgainstStrength","awayXGAgainstStrengthLast5","awayOnlyXGAgainstStrength","awayDirectnessStrength","awayDirectnessStrengthLast5","awayOnlyDirectnessStrength","awayAccuracyOverallStrength","awayAccuracyOverallStrengthLast5","awayOnlyAccuracyOverallStrength","formPointsHome","formPointsAway","AverageGoals","AverageConceeded","AverageXG","AverageXGConceded","Last5PPG","formArrayHome","formArrayAway","chartType","overviewHome","overviewAway","similarGamesHome","similarGamesAway","matchingGame","toString","resultValue","count","mockValue","initialState","dataHome","localStorage","getItem","dataAway","dataHomeDef","dataAwayDef","homeDetails","awayDetails","fixtureDetails","dataSlice","createSlice","reducers","setData","action","payload","actions","store","configureStore","reducer","dataReducer","GetDivider","matchStatus","isPrediction","renderLeagueName","renderTable","SingleFixture","dispatch","useDispatch","StoreData","homeTeamBadge","awayTeamName","awayTeamBadge","setItem","key1","key2","open","createStatsDiv","onMouseDown","handleButtonClick","List","today","todayFootyStats","todaySS","tomorrow","tomorrowFootyStats","tomorrowSS","dateFootyStats","lastSaturday","lastSaturdayFootyStats","lastSaturdaySS","tomorrowsDate","yesterdaysDate","saturdayDate","historicDate","dateString","Logo","myImage","fixtureList","availableLeagues","leagueOrder","decrementDate","calculateDate","convertTimestampForSofaScore","renderButtons","String","padStart","setDate","getDay","textJoined","newText","leagueList","mapOrder","A","B","welcomeTextOne","welcomeTextTwo","App","getLeagueList","href","target","rel","mockedFixtures","TwitterShareButton","boxShadow","TwitterIcon","RedditShareButton","RedditIcon","FacebookShareButton","quote","FacebookIcon","WhatsappShareButton","separator","WhatsappIcon","TelegramShareButton","TelegramIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","TeamPage","dataState","fetchData","storedFixtureDetailsJson","responseHome","responseAway","indexHome","findIndex","indexAway","test","scoredOverallHome","playedHomeOnly","scoredOverallHomeOnly","seasonScoredNum_home","conceededOverallHome","conceededOverallHomeOnly","seasonConcededNum_home","PPGOverallHome","PPGOverallHomeOnly","seasonPPG_home","leaguePosition_overallHome","leaguePosition_overall","leaguePosition_HomeOnly","leaguePosition_home","averageAttendance","average_attendance_home","BTTSPercentage_overallHome","BTTSAndWinPercentage_Home","BTTS_and_win_percentage_overall","BTTSAndLosePercentage_Home","BTTS_and_lose_percentage_overall","BTTSBothHalvesHome","BTTS_both_halves_percentage_overall","GoalDifferenceHT_overall_Home","GoalDifferenceHT_overall","GD_2hg_overall_Home","gd_2hg_overall","leadingAtHTPercentage_overallHome","leadingAtHTPercentage_overall","seasonOver15Percentage_overallHome","seasonOver25Percentage_overallHome","seasonOver35Percentage_overallHome","seasonOver45Percentage_overallHome","scoredBothHalvesPercentage_overallHome","shots_on_target_per_goals_scored_overallHome","shots_on_target_per_goals_scored_overall","cornersTotalAVG_overallHome","cornersTotalAVG_overall","cardsAVG_overallHome","foulsAVG_overallHome","foulsAVG_overall","penalties_won_per_match_overallHome","penalties_won_per_match_overall","penalty_in_a_match_percentage_overallHome","penalty_in_a_match_percentage_overall","scoredOverallAway","playedAwayOnly","scoredOverallAwayOnly","seasonScoredNum_away","conceededOverallAway","conceededOverallAwayOnly","seasonConcededNum_away","PPGOverallAway","PPGOverallAwayOnly","seasonPPG_away","leaguePosition_overallAway","leaguePosition_AwayOnly","leaguePosition_away","BTTSPercentage_overallAway","BTTSAndWinPercentage_Away","BTTSAndLosePercentage_Away","BTTSBothHalvesAway","GoalDifferenceHT_overall_Away","GD_2hg_overall_Away","leadingAtHTPercentage_overallAway","seasonOver15Percentage_overallAway","seasonOver25Percentage_overallAway","seasonOver35Percentage_overallAway","seasonOver45Percentage_overallAway","scoredBothHalvesPercentage_overallAway","shots_on_target_per_goals_scored_overallAway","cornersTotalAVG_overallAway","cardsAVG_overallAway","foulsAVG_overallAway","penalties_won_per_match_overallAway","penalty_in_a_match_percentage_overallAway","storedDataHome","useSelector","jsonDataHome","parse","propertyNamesHome","storedDataHomeDef","jsonDataHomeDef","propertyNamesHomeDef","storedDataallTeamResultsHome","jsonDataallTeamResultsHome","propertyNamesallTeamResultsHome","values","jsonHomeDetails","storedDataAway","jsonDataAway","propertyNamesAway","storedDataAwayDef","jsonDataAwayDef","propertyNamesAwayDef","storedDataallTeamResultsAway","jsonDataallTeamResultsAway","propertyNamesallTeamResultsAway","jsonAwayDetails","storedFixtureDetails","stacked","path","Team","exact"],"mappings":"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AChBgD,OAAQ41C,GACRC,MAAOA,GACP/xB,KAAM11B,EAAM01B,QAIpB,C,IGpUI00B,GACAC,GACAC,GACAC,GACAC,GACAC,GACAh8C,GACA60B,GACAonB,GAIAC,GACAC,GACAC,GAIAC,GACAC,GACAC,GACAC,GACApkB,GACAqkB,G,6GCpGW,OAA0B,wECW1BC,GARF,WACX,OACE,qBAAK5qD,UAAU,iBAAgB,SAC7B,qBAAKgB,IAAK6pD,GAAS5pD,IAAI,kBAAkBjB,UAAU,qBAGzD,EFoBW8qD,GAAc,GAGZC,GAAmB,GACrB7mB,GAAiB,GAEtB8mB,GAAc,CAClB,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MAEA,OAkZD,wDA3UM,mBAKuB,EAUbC,EAAa,EAabC,EAAa,sBAgCbC,EAA4B,MA8B5BC,EAAa,6EAvFX,OAuFW,aAiF3B,OAjF2B,kCAA5B,wFACE73B,IAASC,OACP,sBAAKxzB,UAAU,iBAAgB,UAC7B,qBAAKA,UAAU,kBAAiB,SAC9B,cAACR,EAAM,CACLG,KAAM,gBACNK,UAAU,yBACVD,aAAY,gCAAE,wFACD,OADC,KACZ+qD,GAAW,SACHnoB,GACJ,eACAynB,GACAlqD,EACAmqD,IACA,EACAR,GACAS,IACD,iDATSh5C,KAAI,gEActB,cAAC9R,EAAM,CACLG,KAAI,IACJK,UAAU,iBACVD,aAAY,gCAAE,wGAAkBkrD,EAAc,EAAG/8C,IAAK,qFAExD,cAAC1O,EAAM,CACLG,UAAyBiD,IAAnBunD,GAA+BA,GAAiBj8C,GACtDlO,UAAU,iBACVD,aAAY,gCAAE,wFACD,OADC,KACZ+qD,GAAW,SACHnoB,GACJ,iBACAgoB,GACAzqD,EACAiqD,IACA,EACAN,GACA9mB,IACD,iDATSzxB,KAAI,8DAapB,cAAC9R,EAAM,CACLG,KAAI,QACJK,UAAU,sBACVD,aAAY,gCAAE,wFACD,OADC,KACZ+qD,GAAW,SACHnoB,GACJ,iBACAknB,GACA3pD,EACA4pD,IACA,EACAD,GACAE,IACD,iDATSz4C,KAAI,8DAapB,cAAC9R,EAAM,CACLG,KAAM,WACNK,UAAU,iBACVD,aAAY,gCAAE,wFACD,OADC,KACZ+qD,GAAW,SACHnoB,GACJ,oBACAqnB,GACA9pD,EACA+pD,IACA,EACAJ,GACAK,IACD,iDATS54C,KAAI,iEActBmiB,SAASC,eAAe,YACxB,4CACH,uBAjFc03B,EAAa,wDApB3B,OAoB2B,kCA9B5B,WAA4Cr+C,GAAS,yFAOZ,OANnCC,EAAU,IAAIC,KAAKF,GAEnBO,EAAON,EAAQ+jC,cACf1jC,EAAQg+C,OAAOr+C,EAAQ8jC,WAAa,GAAGwa,SAAS,EAAG,KACnDl+C,EAAMi+C,OAAOr+C,EAAQ6jC,WAAWya,SAAS,EAAG,KAE5C/9C,EAAS,UAAMD,EAAI,YAAID,EAAK,YAAID,GAAG,kBAEhCG,GAAS,4CACjB,uBAVc49C,EAA4B,yDA3B1C,OA2B0C,kCAhC3C,WAA6BR,GAAU,qFAGC,OAFhCv9C,EAAMu9C,EAAW9Z,UACjBxjC,EAAQs9C,EAAW7Z,WAAa,EAChCxjC,EAAOq9C,EAAW5Z,cAAa,kBAC9B,CAAC,GAAD,OAAI1jC,GAAK,OAAGD,GAAG,OAAGE,GAAI,UAAOA,EAAI,YAAID,EAAK,YAAID,KAAM,4CAC5D,uBALc89C,EAAa,yDAF3B,OAE2B,kCAb5B,WAA6BrnC,EAAK3V,GAAI,mFAErB,GADfrK,GAAQggB,EACRle,QAAQC,IAAI/B,KACRA,GAAK,KAAG,iBACyB,OAAnCqK,EAAKq9C,QAAQr9C,EAAK2iC,UAAYhtB,GAAK,SACpBsnC,EAA6Bj9C,GAAM,KAAD,EAA3C,OAAN60B,GAAM,gBACyBmoB,EAAch9C,GAAM,KAAD,EAEhC,OAFgC,4BAAjDA,EAAI,KAAEi8C,GAAc,KACrB7jB,GAAS6jB,GACTQ,GAAaz8C,EAAK,UACZk9C,IAAgB,KAAD,wCAExB,uBAXcH,EAAa,2DAF3B,OAE2B,kCAV5B,WAA6BpnC,EAAK3V,GAAI,mFAED,OADnCrK,GAAQggB,EACR3V,EAAKq9C,QAAQr9C,EAAK2iC,UAAYhtB,GAAK,SACpBsnC,EAA6Bj9C,GAAM,KAAD,EAA3C,OAAN60B,GAAM,gBAEyBmoB,EAAch9C,GAAM,KAAD,EAC1B,OAD0B,4BAAjDA,EAAI,KAAEi8C,GAAc,KACrB7jB,GAAS6jB,GAAe,UAClBiB,IAAgB,KAAD,wCACtB,uBAR2B,8CAJxBvnD,EAAI,EACRqK,GAAO,IAAIjB,KACXq5B,GAAS,QAAQ,UAgCgB4kB,EAAc,IAAIj+C,MAAQ,KAAD,GAGP,OAHO,4BAAzD48C,GAAK,KAAEC,GAAe,MAEvBS,GAAgB,IAAIt9C,MACNs+C,QAAQhB,GAAc1Z,UAAY,GAAG,UACZqa,EAAcX,IAAe,KAAD,GAGd,OAHc,4BAAlEP,GAAQ,KAAEC,GAAkB,MAE7BO,GAAiB,IAAIv9C,MACNs+C,QAAQf,GAAe3Z,UAAY,GAAG,UACZqa,EAAcV,IAAgB,KAAD,GAMrB,OANqB,4BAA5D,KAAqB,MAE/BC,GAAe,IAAIx9C,MACNs+C,QACXd,GAAa5Z,WAAc4Z,GAAae,SAAW,GAAK,GAE1Df,GAAac,QAAQd,GAAa5Z,UAAY,GAAG,UACFqa,EAAcT,IAAc,KAAD,GAMzB,OANyB,4BAAzEL,GAAY,KAAEC,GAAsB,MAErCK,GAAe,IAAIz9C,MACNs+C,QACXb,GAAa7Z,WAAc6Z,GAAac,SAAW,GAAK,GAE1Dd,GAAaa,QAAQb,GAAa7Z,UAAY,GAAG,UACVqa,EAAcR,IAAc,KAAD,GAArC,OAAqC,4BAAzD,KAAoB,eAebS,EAA6B,IAAIl+C,MAAQ,KAAD,GAAjD,OAAP88C,GAAO,iBACYoB,EAA6BZ,IAAe,KAAD,GAApD,OAAVL,GAAU,iBACUiB,EAA6BX,IAAgB,KAAD,GAArD,wBACYW,EAA6BV,IAAc,KAAD,GAAnD,OAAdH,GAAc,iBACKa,EAA6BT,IAAc,KAAD,GAAnD,OAGR,u7BAGA,2qBAEEe,EALF,u7BAKoBx5C,OAFpB,4qBAIEy5C,EAAUD,EAAWt+C,MAAM,MAAMgG,KAAI,SAACtP,GACxC,OAAO,4BAAIA,GACb,IAqFA0vB,IAASC,OACP,sBAAKxzB,UAAU,iBAAgB,UAC7B,qBAAKA,UAAU,kBAAiB,SAC9B,cAACR,EAAM,CACLG,KAAM,gBACNK,UAAU,yBACVD,aAAY,gCAAE,wFACD,OADC,KACZ+qD,GAAW,SACHnoB,GACJ,eACAynB,GACAlqD,EACAmqD,IACA,EACAR,GACAS,IACD,iDATSh5C,KAAI,gEA4BtB,cAAC9R,EAAM,CACLG,KAAI,IACJK,UAAU,iBACVD,aAAY,gCAAE,wGAAkBkrD,EAAc,EAAG/8C,IAAK,qFAExD,cAAC1O,EAAM,CACLG,KAAI,UAAK2mC,IACTtmC,UAAU,sBACVD,aAAY,gCAAE,wFACD,OADC,KACZ+qD,GAAW,SACHnoB,GACJ,iBACAknB,GACA3pD,EACA4pD,IACA,EACAD,GACAE,IACD,iDATSz4C,KAAI,8DAapB,cAAC9R,EAAM,CACLG,KAAM,WACNK,UAAU,iBACVD,aAAY,gCAAE,wFACD,OADC,KACZ+qD,GAAW,SACHnoB,GACJ,oBACAqnB,GACA9pD,EACA+pD,IACA,EACAJ,GACAK,IACD,iDATS54C,KAAI,iEActBmiB,SAASC,eAAe,YAE1BH,IAASC,OACP,sBAAKxzB,UAAU,aAAY,UACzB,cAAC,EAAS,CAACM,MAAM,oBACjB,cAAC,EAAS,CAACA,MAAM,oBAEnBmzB,SAASC,eAAe,aAE1BH,IAASC,OACP,cAAC,WAAQ,UACP,cAAC,EACC,CACA5sB,WAAY,aACZG,QAAS2kD,MAGbj4B,SAASC,eAAe,WAiE1B,4CACD,0BAtXD,iDAAC,4HAGoB3vB,MAAM,GAAD,OAAIC,6BAAoC,eAAc,KAAD,EAAnE,OAAV2nD,EAAU,gBAGJA,EAAWznD,OAAOC,MAAK,SAACkgC,GAC5BtF,EAAcrb,MAAMpe,KAAK++B,EAAQ/E,KACnC,IAAG,KAAD,EAEOz7B,EAAI,EAAE,KAAD,OAAEA,EAAIk7B,EAAYx6B,QAAM,iBAIpC,IAUeqnD,EAAQ,iDAAvB,WAAwBh3B,EAAO0G,EAAOgV,GAAG,2EAUpC,OATH1b,EAAMhmB,MAAK,SAAUC,EAAGC,GACtB,IAAI+8C,EAAIh9C,EAAE9H,QAAQupC,GAChBwb,EAAIh9C,EAAE/H,QAAQupC,GAEhB,OAAIhV,EAAMxG,QAAQ+2B,GAAKvwB,EAAMxG,QAAQg3B,GAC5B,GAEC,CAEZ,IAAG,kBACIl3B,GAAK,2CACb,uDAZsB,GAbjByG,EAAS0D,EAAYl7B,GACrBpD,EAAOs+B,EAAYl7B,GAAGpD,KAEnBif,EAAI,EAAGA,EAAI2b,EAAOgL,OAAO9hC,OAAQmb,IAGnB,QAFf3Y,EAAUs0B,EAAOgL,OAAO3mB,IAElBpS,MAAkC,WAAjBvG,EAAQuG,MAChB,QAAfvG,EAAQrH,IAA+B,OAAfqH,EAAQrH,IAA8B,OAAfqH,EAAQrH,IACzDqrD,GAAiBz5C,KAAK,CAAE7Q,KAAMA,EAAMsG,YAGzC,iBAgBsB6kD,EAASb,GAAkBC,GAAa,MAAM,KAAD,GAApE9mB,GAAc,eA5BwBrgC,IAAG,gDA8BpCqgC,IAAc,4CAxCQ,OAyC9B,WAzC8B,gCAA/B,KAibA,IACI6nB,GADuB,8OACgB5+C,MAAM,MAAMgG,KAAI,SAACtP,GAC1D,OAAO,4BAAIA,GACb,IAGImoD,GADuB,wKACgB7+C,MAAM,MAAMgG,KAAI,SAACtP,GAC1D,OAAO,4BAAIA,GACb,IAqLeooD,OAnLf,WAEE,OAlZK,WAA4B,yBAiZjCC,GAEE,mCACE,sBAAKlsD,UAAU,MAAK,UAClB,cAAC,GAAI,IACL,mBACEA,UAAU,aACVmsD,KAAK,sCACLC,OAAO,SACPC,IAAI,aAAY,yBAIlB,qBAAK3sD,GAAG,mBAAmBM,UAAU,qBACrC,sBAAKN,GAAG,iBAAiBM,UAAU,iBAAgB,UACjD,qBAAKN,GAAG,cACR,qBAAKA,GAAG,oBAEV,qBAAKA,GAAG,QACR,qBAAKA,GAAG,aACR,qBAAKA,GAAG,kBACR,qBAAKA,GAAG,UAAUM,UAAU,YAC5B,sBAAKN,GAAG,UAAUM,UAAU,UAAS,UACnC,cAAC,KAAS,CAACA,UAAU,cAAc0jC,KAAK,YACxC,0EAEF,qBAAKhkC,GAAG,sBAAsBM,UAAU,wBACxC,qBAAKN,GAAG,kBAAkBM,UAAU,oBACpC,qBAAKN,GAAG,iBAAiBM,UAAU,mBACnC,qBAAKN,GAAG,oBACR,sBAAKA,GAAG,kBAAkBM,UAAU,kBAAiB,UACnD,qBAAKN,GAAG,OAAOM,UAAU,WACzB,qBAAKN,GAAG,YAAYM,UAAU,WAC9B,qBAAKN,GAAG,QAAQM,UAAU,cAE5B,qBAAKN,GAAG,aACR,qBAAKA,GAAG,SACR,qBAAKA,GAAG,mBACR,qBAAKA,GAAG,WACR,qBAAKA,GAAG,cACR,qBAAKA,GAAG,4BAER,qBAAKA,GAAG,WACR,sBAAKA,GAAG,mBAAkB,UACxB,oBAAIM,UAAU,cAAa,SAAE+rD,KAC7B,oBAAI/rD,UAAU,mBAAkB,qMAKhC,sBAAKA,UAAU,qBAAoB,UACjC,sBAAMA,UAAU,oBAAmB,uBACnC,sBAAMA,UAAU,kBAChB,sBAAMA,UAAU,iBAAgB,8BAChC,sBAAMA,UAAU,sBAAqB,4BACrC,sBAAMA,UAAU,kBAChB,sBAAMA,UAAU,oBAAmB,0BAErC,cAACyiC,GAAO,CACNp0B,SAAUi+C,GAAeh3B,QAEzBH,MAAM,EACNn1B,UAAW,sBAEb,gCACE,oBAAIA,UAAU,cAAa,SAAEgsD,KAC7B,qBAAIhsD,UAAU,cAAa,mDAEzB,qBAAIA,UAAU,aAAY,UACxB,oBAAIA,UAAU,SAAQ,4BACtB,oBAAIA,UAAU,SAAQ,qCACtB,oBAAIA,UAAU,SAAQ,qBACtB,oBAAIA,UAAU,SAAQ,qBACtB,oBAAIA,UAAU,SAAQ,wBACtB,oBAAIA,UAAU,SAAQ,qBACtB,oBAAIA,UAAU,SAAQ,iBACtB,oBAAIA,UAAU,SAAQ,2BACtB,oBAAIA,UAAU,SAAQ,oCAI5B,gCACE,qBAAKA,UAAU,WAAU,2BACzB,mBACEA,UAAU,WACVmsD,KAAK,6BACLC,OAAO,SACPC,IAAI,aAAY,+BAKpB,sBAAKrsD,UAAU,UAAUN,GAAG,UAAS,uFAGnC,mBACEysD,KAAK,kCACLC,OAAO,SACPC,IAAI,aAAY,uBAIlB,sBAAMrsD,UAAU,gBAAe,kCAC/B,sBAAMA,UAAU,iBAAgB,8DAKpC,wBAEA,sBAAKA,UAAU,SAAQ,UACrB,cAACusD,GAAA,EAAkB,CACjB5oB,IAAK,oBACLl5B,MAAO,aACPzK,UAAU,cACVC,MAAO,CACL84B,gBAAiB,QACjByzB,UAAW,OACXxzB,QAAS,SACT,SAEF,cAACyzB,GAAA,EAAW,CAAC9T,KAAM,MAAOzzC,OAAO,MAEnC,cAACwnD,GAAA,EAAiB,CAChB/oB,IAAK,oBACLl5B,MAAO,YACPzK,UAAU,cACVC,MAAO,CACL84B,gBAAiB,QACjByzB,UAAW,OACXxzB,QAAS,SACT,SAEF,cAAC2zB,GAAA,EAAU,CAAChU,KAAM,MAAOzzC,OAAO,MAElC,cAAC0nD,GAAA,EAAmB,CAClBjpB,IAAK,oBACLkpB,MAAO,+CACP7sD,UAAU,cACVC,MAAO,CACL84B,gBAAiB,QACjByzB,UAAW,OACXxzB,QAAS,SACT,SAEF,cAAC8zB,GAAA,EAAY,CAACnU,KAAM,MAAOzzC,OAAO,MAEpC,cAAC6nD,GAAA,EAAmB,CAClBppB,IAAK,oBACLl5B,MAAO,YACPuiD,UAAU,KACVhtD,UAAU,cACVC,MAAO,CACL84B,gBAAiB,QACjByzB,UAAW,OACXxzB,QAAS,SACT,SAEF,cAACi0B,GAAA,EAAY,CAACtU,KAAM,MAAOzzC,OAAO,MAEpC,cAACgoD,GAAA,EAAmB,CAClBvpB,IAAK,YACLl5B,MAAO,YACPzK,UAAU,cACVC,MAAO,CACL84B,gBAAiB,QACjByzB,UAAW,OACXxzB,QAAS,SACT,SAEF,cAACm0B,GAAA,EAAY,CAACxU,KAAM,MAAOzzC,OAAO,aAM9C,EGtsBekoD,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBnpD,MAAK,YAAkD,IAA/CopD,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACV,GAEJ,E,0BCGA1R,KAAQC,SACNC,KACAC,KACAK,KACAE,KACAC,KACAC,MA6eaqR,OA1ef,WACE,MAA6BlpD,mBAAS,IAAG,mBAAlCmpD,EAAS,KAAE5F,EAAO,KAEzBljD,qBAAU,WACR+oD,GACF,GAAG,IAEH,IAAMA,EAAS,iDAAG,iIAEa/pD,MAAM,GAAD,OAC3BC,6BAAoC,gBAAQ+pD,EAAyBrqD,SACxE,KAAD,EAFiB,OAAZsqD,EAAY,gBAGOA,EAAa9pD,OAAO,KAAD,EAA5B,OAAVw9C,EAAU,gBAEW39C,MAAM,GAAD,OAC3BC,6BAAoC,gBAAQ+pD,EAAyBpqD,SACxE,KAAD,EAFiB,OAAZsqD,EAAY,iBAGOA,EAAa/pD,OAAO,KAAD,GAAtCk+C,EAAU,OAGZ8L,EAAYxM,EAAWpiB,KAAK6uB,WAC9B,SAACzuC,GAAC,MAAyB,oBAApBA,EAAEgrB,aAAmC,IAE1C0jB,EAAYhM,EAAW9iB,KAAK6uB,WAC9B,SAACzuC,GAAC,MAAyB,oBAApBA,EAAEgrB,aAAmC,IAG1CgX,EAAWpiB,KAAK4uB,GAAW/sB,MAAM0J,yBACnCod,GAAQ,SAACoG,GAAI,oCACRA,GAAI,IACPC,kBACE5M,EAAWpiB,KAAK4uB,GAAW/sB,MAAM0J,wBACnC0jB,eACE7M,EAAWpiB,KAAK4uB,GAAW/sB,MAAM4J,yBACnCyjB,sBACE9M,EAAWpiB,KAAK4uB,GAAW/sB,MAAMstB,qBACnCC,qBACEhN,EAAWpiB,KAAK4uB,GAAW/sB,MAAM8J,0BACnC0jB,yBACEjN,EAAWpiB,KAAK4uB,GAAW/sB,MAAMytB,uBAEnCC,eAAgBnN,EAAWpiB,KAAK4uB,GAAW/sB,MAAM2K,kBACjDgjB,mBAAoBpN,EAAWpiB,KAAK4uB,GAAW/sB,MAAM4tB,eACrDC,2BACEtN,EAAWpiB,KAAK4uB,GAAW/sB,MAAM8tB,uBACnCC,wBACExN,EAAWpiB,KAAK4uB,GAAW/sB,MAAMguB,oBACnCC,kBACE1N,EAAWpiB,KAAK4uB,GAAW/sB,MAAMkuB,wBACnCC,2BACE5N,EAAWpiB,KAAK4uB,GAAW/sB,MAAM6L,6BACnCuiB,0BACE7N,EAAWpiB,KAAK4uB,GAAW/sB,MAAMquB,gCACnCC,2BACE/N,EAAWpiB,KAAK4uB,GAAW/sB,MAAMuuB,iCACnCC,mBACEjO,EAAWpiB,KAAK4uB,GAAW/sB,MACxByuB,oCACLC,8BACEnO,EAAWpiB,KAAK4uB,GAAW/sB,MAAM2uB,yBACnCC,oBAAqBrO,EAAWpiB,KAAK4uB,GAAW/sB,MAAM6uB,eACtDC,kCACEvO,EAAWpiB,KAAK4uB,GAAW/sB,MAAM+uB,8BACnCC,mCACEzO,EAAWpiB,KAAK4uB,GAAW/sB,MAAM5E,+BACnC6zB,mCACE1O,EAAWpiB,KAAK4uB,GAAW/sB,MAAM3E,+BACnC6zB,mCACE3O,EAAWpiB,KAAK4uB,GAAW/sB,MAAM1E,+BACnC6zB,mCACE5O,EAAWpiB,KAAK4uB,GAAW/sB,MAAMzE,+BACnC6zB,uCACE7O,EAAWpiB,KAAK4uB,GAAW/sB,MAAM+L,mCACnCsjB,6CACE9O,EAAWpiB,KAAK4uB,GAAW/sB,MAAM4I,gBAC9B0mB,yCACLC,4BACEhP,EAAWpiB,KAAK4uB,GAAW/sB,MAAMwvB,wBACnCC,qBACElP,EAAWpiB,KAAK4uB,GAAW/sB,MAAMjE,iBACnC2zB,qBACEnP,EAAWpiB,KAAK4uB,GAAW/sB,MAAM2vB,iBACnCC,oCACErP,EAAWpiB,KAAK4uB,GAAW/sB,MAAM4I,gBAC9BinB,gCACLC,0CACEvP,EAAWpiB,KAAK4uB,GAAW/sB,MAAM4I,gBAC9BmnB,sCAELC,kBACE/O,EAAW9iB,KAAK8uB,GAAWjtB,MAAM0J,wBACnCumB,eACEhP,EAAW9iB,KAAK8uB,GAAWjtB,MAAM6J,yBACnCqmB,sBACEjP,EAAW9iB,KAAK8uB,GAAWjtB,MAAMmwB,qBACnCC,qBACEnP,EAAW9iB,KAAK8uB,GAAWjtB,MAAM8J,0BACnCumB,yBACEpP,EAAW9iB,KAAK8uB,GAAWjtB,MAAMswB,uBAEnCC,eAAgBtP,EAAW9iB,KAAK8uB,GAAWjtB,MAAM2K,kBACjD6lB,mBAAoBvP,EAAW9iB,KAAK8uB,GAAWjtB,MAAMywB,eACrDC,2BACEzP,EAAW9iB,KAAK8uB,GAAWjtB,MAAM8tB,uBACnC6C,wBACE1P,EAAW9iB,KAAK8uB,GAAWjtB,MAAM4wB,oBACnCC,2BACE5P,EAAW9iB,KAAK8uB,GAAWjtB,MAAM6L,6BACnCilB,0BACE7P,EAAW9iB,KAAK8uB,GAAWjtB,MAAMquB,gCACnC0C,2BACE9P,EAAW9iB,KAAK8uB,GAAWjtB,MAAMuuB,iCACnCyC,mBACE/P,EAAW9iB,KAAK8uB,GAAWjtB,MACxByuB,oCACLwC,8BACEhQ,EAAW9iB,KAAK8uB,GAAWjtB,MAAM2uB,yBACnCuC,oBAAqBjQ,EAAW9iB,KAAK8uB,GAAWjtB,MAAM6uB,eACtDsC,kCACElQ,EAAW9iB,KAAK8uB,GAAWjtB,MAAM+uB,8BACnCqC,mCACEnQ,EAAW9iB,KAAK8uB,GAAWjtB,MAAM5E,+BACnCi2B,mCACEpQ,EAAW9iB,KAAK8uB,GAAWjtB,MAAM3E,+BACnCi2B,mCACErQ,EAAW9iB,KAAK8uB,GAAWjtB,MAAM1E,+BACnCi2B,mCACEtQ,EAAW9iB,KAAK8uB,GAAWjtB,MAAMzE,+BACnCi2B,uCACEvQ,EAAW9iB,KAAK8uB,GAAWjtB,MAAM+L,mCACnC0lB,6CACExQ,EAAW9iB,KAAK8uB,GAAWjtB,MAAM4I,gBAC9B0mB,yCAELoC,4BACEzQ,EAAW9iB,KAAK8uB,GAAWjtB,MAAMwvB,wBACnCmC,qBACE1Q,EAAW9iB,KAAK8uB,GAAWjtB,MAAMjE,iBACnC61B,qBACE3Q,EAAW9iB,KAAK8uB,GAAWjtB,MAAM2vB,iBACnCkC,oCACE5Q,EAAW9iB,KAAK8uB,GAAWjtB,MAAM4I,gBAC9BinB,gCACLiC,0CACE7Q,EAAW9iB,KAAK8uB,GAAWjtB,MAAM4I,gBAC9BmnB,uCAAqC,IAE7C,kDAEDvrD,QAAQD,MAAM,uBAAuB,EAAD,IAAS,0DAEhD,kBAhJc,mCAkJTwtD,EAAiBC,cAAY,SAAC5yD,GAAK,OAAKA,EAAM++B,KAAK+nB,QAAQ,IAC3D+L,EAAe7vB,KAAK8vB,MAAMH,GAC1BI,EAAoBljB,OAAOqD,QAAQ2f,GAEnCG,EAAoBJ,cAAY,SAAC5yD,GAAK,OAAKA,EAAM++B,KAAKmoB,WAAW,IACjE+L,EAAkBjwB,KAAK8vB,MAAME,GAC7BE,EAAuBrjB,OAAOqD,QAAQ+f,GAEtCE,EAA+BP,cACnC,SAAC5yD,GAAK,OAAKA,EAAM++B,KAAKtsB,kBAAkB,IAEpC2gD,EAA6BpwB,KAAK8vB,MAAMK,GACxCE,EAAkCxjB,OAAOyjB,OAC7CF,GAGIhM,EAAcwL,cAAY,SAAC5yD,GAAK,OAAKA,EAAM++B,KAAKqoB,WAAW,IAC3DmM,EAAkBvwB,KAAK8vB,MAAM1L,GAE7BoM,EAAiBZ,cAAY,SAAC5yD,GAAK,OAAKA,EAAM++B,KAAKkoB,QAAQ,IAC3DwM,EAAezwB,KAAK8vB,MAAMU,GAC1BE,EAAoB7jB,OAAOqD,QAAQugB,GAEnCE,EAAoBf,cAAY,SAAC5yD,GAAK,OAAKA,EAAM++B,KAAKooB,WAAW,IACjEyM,EAAkB5wB,KAAK8vB,MAAMa,GAC7BE,EAAuBhkB,OAAOqD,QAAQ0gB,GAEtCE,EAA+BlB,cACnC,SAAC5yD,GAAK,OAAKA,EAAM++B,KAAKrsB,kBAAkB,IAEpCqhD,EAA6B/wB,KAAK8vB,MAAMgB,GACxCE,EAAkCnkB,OAAOyjB,OAC7CS,GAGI1M,EAAcuL,cAAY,SAAC5yD,GAAK,OAAKA,EAAM++B,KAAKsoB,WAAW,IAC3D4M,EAAkBjxB,KAAK8vB,MAAMzL,GAE7B6M,EAAuBtB,cAC3B,SAAC5yD,GAAK,OAAKA,EAAM++B,KAAKuoB,cAAc,IAEhCkG,EAA2BxqB,KAAK8vB,MAAMoB,GA2BtCn1B,EAAO,CACXwZ,OANa,CACbiV,EAAyB9M,aACzB8M,EAAyB5E,cAKzBlQ,SAAU,CACR,CACE3Z,KAAM,CACJw0B,EAAgB,sBAChBU,EAAgB,uBAElBtb,MAAO,qBACPngB,gBAAiB,WAEnB,CACEuG,KAAM,CACJw0B,EAAgB,sBAChBU,EAAgB,uBAElBtb,MAAO,qBACPngB,gBAAiB,aAKvB,OACE,sBAAK/4B,UAAU,qBAAoB,UACjC,sBAAKA,UAAU,yBAAwB,UACrC,cAACa,EAAW,CACVC,MAAOitD,EAAyB7E,cAChCnoD,UAAU,gBACVE,IAAI,oBACS,UACX8sD,EAAyB9M,aAAY,cAAM8M,EAAyB5E,cACxE,cAACtoD,EAAW,CACVC,MAAOitD,EAAyB3E,cAChCroD,UAAU,gBACVE,IAAI,uBAGR,+BACG8sD,EAAyBre,QAAO,QAAOqe,EAAyBtpB,KAAI,0BAChDopB,EAAUuB,qBAEjC,wDACyBrB,EAAyBpmD,UAAS,KAAI,IAC5DomD,EAAyBnmD,aAE5B,sBAAK5H,UAAU,YAAW,UACxB,qBAAIA,UAAU,gBAAe,UAC3B,wBACEgB,IAAG,6CAAwC+sD,EAAyBrqD,QACpE+/B,OAAO,OACP39B,MAAM,OACN7F,MAAO,CACLwjC,OAAQ,QACR39B,MAAO,OACPk3C,OAAQ,yBAGZ,6BAAK+Q,EAAyB9M,eAC7BqS,EAAkBngD,KAAI,WAAe5M,GAAK,uBAAlB+pC,EAAG,KAAEhwC,EAAK,YACjC,+BACE,mCAASgwC,EAAG,OAAY,IACN,kBAAVhwC,EAAqBijC,KAAKC,UAAUljC,GAASA,IAF9CiG,EAGJ,IAEP,oBAAIvG,UAAU,gBAAe,SAC1ByzD,EAAqBtgD,KAAI,WAAe5M,GAAK,uBAAlB+pC,EAAG,KAAEhwC,EAAK,YACpC,+BACE,mCAASgwC,EAAG,OAAY,IACN,kBAAVhwC,EAAqBijC,KAAKC,UAAUljC,GAASA,IAF9CiG,EAGJ,MAGT,kDAAqBsnD,EAAUS,qBAC/B,qDAAwBT,EAAUa,wBAClC,2DAC4B,KAExBb,EAAUW,sBAAwBX,EAAUU,gBAC5ChsD,QAAQ,MAEZ,8DAC+B,KAE3BsrD,EAAUc,yBAA2Bd,EAAUU,gBAC/ChsD,QAAQ,MAEZ,+CAAkBsrD,EAAUgB,kBAC5B,iDAAoBhB,EAAUiB,sBAC9B,mDAAsBjB,EAAUmB,8BAChC,6DAC8BnB,EAAUqB,2BAExC,uCAAUrB,EAAUyB,2BAA0B,OAC9C,gDAAmBzB,EAAU0B,0BAAyB,OACtD,iDAAoB1B,EAAU4B,2BAA0B,OACxD,oDAAuB5B,EAAU8B,mBAAkB,OACnD,2DAC4B9B,EAAUgC,iCAEtC,2DAA8BhC,EAAUkC,uBACxC,wDACyBlC,EAAUoC,kCAAiC,OAEpE,0DAC2B,IACxBpC,EAAUsC,mCAAkC,OAE/C,0DAC2B,IACxBtC,EAAUuC,mCAAkC,OAE/C,0DAC2B,IACxBvC,EAAUwC,mCAAkC,OAE/C,0DAC2B,IACxBxC,EAAUyC,mCAAkC,OAE/C,qDACsB,IACnBzC,EAAU0C,uCAAsC,OAEnD,gDACiB,IACd1C,EAAU2C,gDAEb,uDAA0B3C,EAAU6C,+BACpC,6CAAgB7C,EAAU+C,wBAC1B,qDAAwB/C,EAAUgD,wBAClC,qDACsBhD,EAAUkD,uCAEhC,qDACsB,IACnBlD,EAAUoD,0CAAyC,UAGxD,qBAAIjxD,UAAU,gBAAe,UAC3B,wBACEgB,IAAG,6CAAwC+sD,EAAyBpqD,QACpE8/B,OAAO,OACP39B,MAAM,OACN7F,MAAO,CACLwjC,OAAQ,QACR39B,MAAO,OACPC,MAAO,UACPi3C,OAAQ,yBAGZ,6BAAK+Q,EAAyB5E,eAC7B8K,EAAkB9gD,KAAI,WAAe5M,GAAK,uBAAlB+pC,EAAG,KAAEhwC,EAAK,YACjC,+BACE,mCAASgwC,EAAG,OAAY,IACN,kBAAVhwC,EAAqBijC,KAAKC,UAAUljC,GAASA,IAF9CiG,EAGJ,IAEP,oBAAIvG,UAAU,gBAAe,SAC1Bo0D,EAAqBjhD,KAAI,WAAe5M,GAAK,uBAAlB+pC,EAAG,KAAEhwC,EAAK,YACpC,+BACE,mCAASgwC,EAAG,OAAY,IACN,kBAAVhwC,EAAqBijC,KAAKC,UAAUljC,GAASA,IAF9CiG,EAGJ,MAGT,kDAAqBsnD,EAAUsD,qBAC/B,qDAAwBtD,EAAU0D,wBAClC,2DAC4B,KAExB1D,EAAUwD,sBAAwBxD,EAAUuD,gBAC5C7uD,QAAQ,MAEZ,8DAC+B,KAE3BsrD,EAAU2D,yBAA2B3D,EAAUuD,gBAC/C7uD,QAAQ,MAEZ,+CAAkBsrD,EAAU6D,kBAC5B,iDAAoB7D,EAAU8D,sBAC9B,mDAAsB9D,EAAUgE,8BAChC,6DAC8BhE,EAAUiE,2BAExC,wCAAWjE,EAAUmE,2BAA0B,OAC/C,gDAAmBnE,EAAUoE,0BAAyB,OACtD,iDAAoBpE,EAAUqE,2BAA0B,OACxD,oDAAuBrE,EAAUsE,mBAAkB,OACnD,2DAC4BtE,EAAUuE,iCAEtC,2DAA8BvE,EAAUwE,uBACxC,wDACyBxE,EAAUyE,kCAAiC,OAEpE,0DAC2B,IACxBzE,EAAU0E,mCAAkC,OAE/C,0DAC2B,IACxB1E,EAAU2E,mCAAkC,OAE/C,0DAC2B,IACxB3E,EAAU4E,mCAAkC,OAE/C,0DAC2B,IACxB5E,EAAU6E,mCAAkC,OAE/C,qDACsB,IACnB7E,EAAU8E,uCAAsC,OAEnD,gDACiB,IACd9E,EAAU+E,gDAEb,uDAA0B/E,EAAUgF,+BACpC,6CAAgBhF,EAAUiF,wBAC1B,qDAAwBjF,EAAUkF,wBAClC,qDACsBlF,EAAUmF,uCAEhC,qDACsB,IACnBnF,EAAUoF,0CAAyC,UAGxD,sBAAKjzD,UAAU,iBAAgB,UAC7B,sBAAMA,UAAU,WAChB,cAAC,KAAG,CAAC23C,QAlQG,CACdiB,QAAS,CACPnuC,MAAO,CACLm6B,SAAS,EACTjlC,KAAM,oBAGVk4C,YAAa,GACbC,qBAAqB,EACrBF,YAAY,EACZO,OAAQ,CACNz4B,EAAG,CACDg1C,SAAS,GAEX7iD,EAAG,CACD6iD,SAAS,EACT9vB,SAAS,KAkPgBtF,KAAMA,EAAMt/B,UAAU,kBAC7C,sBAAMA,UAAU,cAElB,oBAAIA,UAAU,kBAAiB,SAC5B4zD,EAAgCzgD,KAAI,SAAC3P,EAAO+C,GAAK,OAChD,qCACE,qBAAKvG,UAAU,YAAW,SAAEwD,EAAM0K,OAClC,sBAAKlO,UAAU,yBAAwB,UACrC,qBAAKA,UAAU,0BAAyB,SAAEwD,EAAMkN,WAChD,uBAAM1Q,UAAU,2BAA0B,UACvCwD,EAAMmE,UAAS,MAAKnE,EAAMoE,aAE7B,qBAAK5H,UAAU,0BAAyB,SAAEwD,EAAMmN,gBAEjD,MAGP,oBAAI3Q,UAAU,kBAAiB,SAC5Bu0D,EAAgCphD,KAAI,SAAC3P,EAAO+C,GAAK,OAChD,qCACE,qBAAKvG,UAAU,YAAW,SAAEwD,EAAM0K,OAClC,sBAAKlO,UAAU,yBAAwB,UACrC,qBAAKA,UAAU,0BAAyB,SAAEwD,EAAMkN,WAChD,uBAAM1Q,UAAU,2BAA0B,UACvCwD,EAAMmE,UAAS,MAAKnE,EAAMoE,aAE7B,qBAAK5H,UAAU,0BAAyB,SAAEwD,EAAMmN,gBAEjD,WAMf,EClfA4iB,IAASC,OAEL,cAAC,KAAQ,CAAC60B,MAAOA,GAAM,SACvB,cAAC,KAAU,UACP,eAAC,KAAM,WACL,cAAC,KAAK,CAACsM,KAAK,WAAW5tD,QAAS,cAAC6tD,GAAQ,MACzC,cAAC,KAAK,CAACD,KAAK,IAAIE,OAAK,EAAC9tD,QAAS,cAAC,GAAG,aAO3C0sB,SAASC,eAAe,SAM1B05B,I","file":"static/js/main.d9b7df05.chunk.js","sourcesContent":["import React from \"react\";\n\nexport function Button(props) {\n  return (\n    <div id=\"Button\">\n      <button data-cy={props.text} variant=\"primary\" type=\"button\" onClick={props.onClickEvent} className={props.className} style={props.style}>\n        {props.text}\n      </button>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nexport var selectedOdds = \"Fractional odds\";\n\nexport class OddsRadio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOdds: this.props.value,\n    };\n  }\n\n  handleOptionChange = () => {\n    this.setState({\n      selectedOdds: this.props.value,\n    });\n    selectedOdds = this.state.selectedOdds;\n  };\n\n  render() {\n    return (\n      <section className=\"dark2\">\n        <div className={this.props.className}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"odds\"\n              checked={this.state.checked}\n              onChange={this.handleOptionChange}\n              data-cy={this.props.value}\n            />\n            <span className=\"design\"></span>\n            <span className=\"text\">{this.props.value}</span>\n          </label>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default OddsRadio;\n","import React from \"react\";\n\nexport function CreateBadge(props) {\n\n  if(props.image === \"-\"){\n    return (\n      <div className={props.ClassName} />\n    );\n  } else {\n    return (\n      <img\n        src={`https://cdn.footystats.org/img/${props.image}`}\n        className={props.ClassName}\n        alt={props.alt}\n        flex-shrink={props.flexShrink}\n      />\n    );\n  }\n}\n","import React, { Fragment } from \"react\";\n\nfunction Stats(props) {\n  let shouldOpen = props.clicked;\n  function styleForm(formIndicator) {\n    let className;\n    if (formIndicator === \"W\") {\n      className = \"win\";\n    } else if (formIndicator === \"D\") {\n      className = \"draw\";\n    } else if (formIndicator === \"L\") {\n      className = \"loss\";\n    }\n    return className;\n  }\n\n  function styleBTTS(BTTSBoolean) {\n    let className;\n    if (BTTSBoolean === \"\\u2714\") {\n      className = \"BTTSTrue\";\n    } else if (BTTSBoolean === \"\\u2718\") {\n      className = \"BTTSFalse\";\n    }\n    return className;\n  }\n\n  if (props.formRun) {\n    return (\n      <Fragment>\n        <ul className={props.className} style={props.style}>\n          <li className=\"FormHeader\">League results (most recent on right)</li>\n          <li key={`last5League`} className=\"last5League\">\n            <span className={styleForm(props.Results[0])}>\n              {props.Results[0]}\n            </span>\n            <span className={styleForm(props.Results[1])}>\n              {props.Results[1]}\n            </span>\n            <span className={styleForm(props.Results[2])}>\n              {props.Results[2]}\n            </span>\n            <span className={styleForm(props.Results[3])}>\n              {props.Results[3]}\n            </span>\n            <span className={styleForm(props.Results[4])}>\n              {props.Results[4]}\n            </span>\n            <span className={styleForm(props.Results[5])}>\n              {props.Results[5]}\n            </span>\n          </li>\n          <li className=\"FormHeader\">\n            {props.homeOrAway} form (most recent on right)\n          </li>\n          <li\n            key={`last5${props.homeOrAwayResults}`}\n            className=\"FormHomeOrAway\"\n          >\n            <span className={styleForm(props.ResultsHorA[0])}>\n              {props.ResultsHorA[0]}\n            </span>\n            <span className={styleForm(props.ResultsHorA[1])}>\n              {props.ResultsHorA[1]}\n            </span>\n            <span className={styleForm(props.ResultsHorA[2])}>\n              {props.ResultsHorA[2]}\n            </span>\n            <span className={styleForm(props.ResultsHorA[3])}>\n              {props.ResultsHorA[3]}\n            </span>\n            <span className={styleForm(props.ResultsHorA[4])}>\n              {props.ResultsHorA[4]}\n            </span>\n            <span className={styleForm(props.ResultsHorA[5])}>\n              {props.ResultsHorA[5]}\n            </span>\n          </li>\n          <li\n            key=\"BTTSArrayHomeOrAway\"\n            className=\"BTTSArrayHomeOrAway\"\n            data-cy={props.name + \"BTTSArrayHomeOrAway\"}\n          >\n            <div className=\"BTTSResults\">BTTS</div>\n            <span className={styleBTTS(props.BTTSArray[5])}>\n              {props.BTTSArray[5]}\n            </span>\n            <span className={styleBTTS(props.BTTSArray[4])}>\n              {props.BTTSArray[4]}\n            </span>\n            <span className={styleBTTS(props.BTTSArray[3])}>\n              {props.BTTSArray[3]}\n            </span>\n            <span className={styleBTTS(props.BTTSArray[2])}>\n              {props.BTTSArray[2]}\n            </span>\n            <span className={styleBTTS(props.BTTSArray[1])}>\n              {props.BTTSArray[1]}\n            </span>\n            <span className={styleBTTS(props.BTTSArray[0])}>\n              {props.BTTSArray[0]}\n            </span>\n          </li>\n          <div className=\"FormSummaries\">\n          <li className=\"FormSummaryHome\">{props.FormTextString}</li>\n          <li className=\"FavouriteSummaryHome\">{props.FavouriteRecord}</li>\n          </div>\n          <div className=\"AllStats\">\n          <li\n            key=\"TeamScored\"\n            className=\"TeamScored\"\n            data-cy={props.name + \"teamScored\"}\n          >\n            {`Avg goals scored - ${props.goals}`}\n          </li>\n          <li\n            key=\"TeamConceeded\"\n            className=\"TeamConceeded\"\n            data-cy={props.name + \"teamConceded\"}\n          >\n            {`Avg goals conceeded - ${props.conceeded}`}\n          </li>\n          <li\n            key=\"TeamPossession\"\n            className=\"TeamPossession\"\n            data-cy={props.name + \"teamPossession\"}\n          >\n            {`Avg possession - ${props.possession}%`}\n          </li>\n          <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name + \"teamXG\"}>\n            {`Avg XG - ${props.XG}`}\n          </li>\n          <li\n            key=\"TeamXGConceded\"\n            className=\"TeamXGConceded\"\n            data-cy={props.name + \"teamXGConceded\"}\n          >\n            {`Avg XG conceded - ${props.XGConceded}`}\n          </li>\n          <li\n            key=\"TeamXGSwing\"\n            className=\"TeamXGSwing\"\n            data-cy={props.name + \"teamXGSwing\"}\n          >\n            {`XG difference swing (last 5): ${props.XGSwing.toFixed(2)}`}\n          </li>\n          <li\n            key=\"goalDifference\"\n            className=\"goalDifference\"\n            data-cy={props.name + \"goalDifference\"}\n          >\n            {`Goal difference : `}\n            <span>{props.goalDifference}</span>\n          </li>\n          <li\n            key=\"goalDifferenceHorA\"\n            className=\"goalDifferenceHorA\"\n            data-cy={props.name + \"goalDifference\"}\n          >\n            {`Goal difference ${props.homeOrAway} : ${props.goalDifferenceHomeOrAway}`}\n          </li>\n          <li\n            key=\"AverageSOT\"\n            className=\"AverageSOT\"\n            data-cy={props.name + \"averageSOT\"}\n          >\n            {`Avg shots on target - ${props.sot}`}\n          </li>\n          <li\n            key=\"DangerousAttacks\"\n            className=\"DangerousAttacks\"\n            data-cy={props.name + \"dangerousAttacks\"}\n          >\n            {`Avg dangerous attacks - ${props.dangerousAttacks}`}\n          </li>\n          <li\n            key=\"LeaguePosition\"\n            className=\"LeaguePosition\"\n            data-cy={props.name + \"leaguePosition\"}\n          >\n            {`League position - ${\n              props.leaguePosition !== undefined ? props.leaguePosition : \"N/A\"\n            }`}\n          </li>\n          <li\n            key=\"LeaguePositionHomeOrAway\"\n            className=\"LeaguePositionHomeOrAway\"\n            data-cy={`${props.name}LeaguePositionHomeOrAway`}\n          >\n            {`Position (${props.homeOrAway} only) - ${\n              props.homeOrAwayLeaguePosition !== undefined\n                ? props.homeOrAwayLeaguePosition\n                : \"N/A\"\n            }`}\n          </li>\n          <li\n            key=\"WinPercentage\"\n            className=\"WinPercentage\"\n            data-cy={props.name + \"WinPercentage\"}\n          >\n            {`${props.homeOrAway} wins - ${props.winPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"DrawPercentage\"\n            className=\"DrawPercentage\"\n            data-cy={props.name + \"DrawPercentage\"}\n          >\n            {`${props.homeOrAway} draws - ${props.drawPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"LossPercentage\"\n            className=\"LossPercentage\"\n            data-cy={props.name + \"LossPercentage\"}\n          >\n            {`${props.homeOrAway} losses - ${props.lossPercentage.toFixed(1)}%`}\n          </li>\n          <li key=\"PPG\" className=\"PPG\" data-cy={props.name + \"PPG\"}>\n            {`Season PPG - ${props.ppg}`}\n          </li>\n          <li\n            key=\"FormTrend10a\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 10 PPG: ${props.formTrend[0]}`}\n          </li>\n          <li\n            key=\"FormTrend10b\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 6 PPG: ${props.formTrend[1]}`}\n          </li>\n          <li\n            key=\"FormTrend10c\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 5 PPG: ${props.formTrend[2]}.`}\n          </li>\n          <li\n            key=\"CardsTotal\"\n            className=\"CardsTotal\"\n            data-cy={props.name + \"CardsTotal\"}\n          >\n            {`Cards total: ${props.CardsTotal}`}\n          </li>\n          <li\n            key=\"CornersAverage\"\n            className=\"CornersAverage\"\n            data-cy={props.name + \"CornersAverage\"}\n          >\n            {`Corners average: ${props.CornersAverage}`}\n          </li>\n          </div>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  } else {\n    return (\n      <Fragment>\n        <ul className={props.className} style={props.style}>\n        <div className=\"FormSummaries\">\n          <li className=\"FormSummaryHome\">{props.FormTextString}</li>\n          <li className=\"FavouriteSummaryAway\">{props.FavouriteRecord}</li>\n          </div>\n          <div className=\"AllStats\">\n          <li\n            key=\"TeamScored\"\n            className=\"TeamScored\"\n            data-cy={props.name + \"teamScored\"}\n          >\n            {`Avg goals scored - ${props.goals}`}\n          </li>\n          <li\n            key=\"TeamConceeded\"\n            className=\"TeamConceeded\"\n            data-cy={props.name + \"teamConceded\"}\n          >\n            {`Avg goals conceeded - ${props.conceeded}`}\n          </li>\n          <li\n            key=\"TeamPossession\"\n            className=\"TeamPossession\"\n            data-cy={props.name + \"teamPossession\"}\n          >\n            {`Avg possession - ${props.possession}%`}\n          </li>\n          <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name + \"teamXG\"}>\n            {`Avg XG - ${props.XG}`}\n          </li>\n          <li\n            key=\"TeamXGConceded\"\n            className=\"TeamXGConceded\"\n            data-cy={props.name + \"teamXGConceded\"}\n          >\n            {`Avg XG conceded - ${props.XGConceded}`}\n          </li>\n          <li\n            key=\"TeamXGSwing\"\n            className=\"TeamXGSwing\"\n            data-cy={props.name + \"teamXGSwing\"}\n          >\n            {`XG difference swing (last 5): ${props.XGSwing.toFixed(2)}`}\n          </li>\n          <li\n            key=\"AverageSOT\"\n            className=\"AverageSOT\"\n            data-cy={props.name + \"averageSOT\"}\n          >\n            {`Avg shots on target - ${props.sot}`}\n          </li>\n          <li\n            key=\"DangerousAttacks\"\n            className=\"DangerousAttacks\"\n            data-cy={props.name + \"dangerousAttacks\"}\n          >\n            {`Avg dangerous attacks - ${props.dangerousAttacks}`}\n          </li>\n          <li\n            key=\"LeaguePosition\"\n            className=\"LeaguePosition\"\n            data-cy={props.name + \"leaguePosition\"}\n          >\n            {`League position - ${props.leaguePosition}`}\n          </li>\n\n          <li\n            key=\"LeaguePositionHomeOrAway\"\n            className=\"LeaguePositionHomeOrAway\"\n            data-cy={props.name + \"LeaguePositionHomeOrAway\"}\n          >\n            {`Position (${props.homeOrAway} only) - ${props.homeOrAwayLeaguePosition}`}\n          </li>\n          <li\n            key=\"WinPercentage\"\n            className=\"WinPercentage\"\n            data-cy={props.name + \"WinPercentage\"}\n          >\n            {`${props.homeOrAway} wins - ${props.winPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"DrawPercentage\"\n            className=\"DrawPercentage\"\n            data-cy={props.name + \"DrawPercentage\"}\n          >\n            {`${props.homeOrAway} draws - ${props.drawPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"LossPercentage\"\n            className=\"LossPercentage\"\n            data-cy={props.name + \"LossPercentage\"}\n          >\n            {`${props.homeOrAway} losses - ${props.lossPercentage.toFixed(1)}%`}\n          </li>\n          <li key=\"PPG\" className=\"PPG\" data-cy={props.name + \"PPG\"}>\n            {`Season PPG - ${props.ppg}`}\n          </li>\n          <li\n            key=\"FormTrend10a\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 10 PPG: ${props.formTrend[0]}`}\n          </li>\n          <li\n            key=\"FormTrend10b\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 6 PPG: ${props.formTrend[1]}`}\n          </li>\n          <li\n            key=\"FormTrend10c\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 5 PPG: ${props.formTrend[2]}.`}\n          </li>\n          <li\n            key=\"CardsTotal\"\n            className=\"CardsTotal\"\n            data-cy={props.name + \"CardsTotal\"}\n          >\n            {`Cards total: ${props.CardsTotal}`}\n          </li>\n          <li\n            key=\"CornersAverage\"\n            className=\"CornersAverage\"\n            data-cy={props.name + \"CornersAverage\"}\n          >\n            {`Corners average: ${props.CornersAverage}`}\n          </li>\n          </div>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Stats;\n","import React from \"react\";\n\nfunction Div(props) {\n  return (\n    <div id={props.id} onClick={props.onClick} style={props.style} className={props.className}>{props.text}</div>\n  );\n}\n\nexport default Div;\n","export async function getForm(match) {\n  const teams = [match.homeId, match.awayId];\n  const fixtureForm = [];\n\n  for (let i = 0; i < teams.length; i++) {\n    const team = teams[i];\n\n    let response = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}formTeam/${team}`\n    );\n    await response.json().then((formData) => {\n      formData.lastMatchTimestamp = formData.last_updated_match_timestamp\n      fixtureForm[i] = formData;\n    });\n  }\n  return fixtureForm;\n}\n","import React, { useState, useEffect } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport { selectedOdds } from \"../components/OddsRadio\";\nimport oddslib from \"oddslib\";\nexport let rangeValue = [1, 10];\n\nexport const Slide = (props) => {\n  const [range, setRange] = useState([1.1, 10]);\n  const [fractionalValue, setFractionalValue] = useState([\"1/9\", \"10/1\"]);\n\n  useEffect(() => {\n    if (selectedOdds === \"Fractional odds\") {\n      let roundedValueOne = (Math.round(range[0] * 5) / 5).toFixed(1);\n      let roundedValueTwo = (Math.round(range[1] * 5) / 5).toFixed(1);\n\n      try {\n        const fractionalOne = oddslib\n          .from(\"decimal\", roundedValueOne)\n          .to(\"fractional\", { precision: 1 });\n        const fractionalTwo = oddslib\n          .from(\"decimal\", roundedValueTwo)\n          .to(\"fractional\", { precision: 1 });\n        setFractionalValue([fractionalOne, fractionalTwo]);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [range]);\n\n  const handleChange = (event, newValue) => {\n    setRange(newValue);\n    rangeValue = newValue;\n  };\n\n  return (\n    <Slider\n      aria-label=\"Always visible\"\n      value={range}\n      sx={{\n        width: \"90%\",\n        color: \"#030061\",\n      }}\n      onChange={handleChange}\n      valueLabelDisplay=\"auto\"\n      step={0.1}\n      min={1.1}\n      max={10}\n      valueLabelFormat={(value, index) =>\n        selectedOdds === \"Fractional odds\" ? fractionalValue[index] : value\n      }\n    />\n  );\n};\n","import React from \"react\";\nimport Collapsible from \"react-collapsible\";\n\nconst Collapsable = (props) => {\n  return (\n    <Collapsible transitionTime={300} trigger={<button className={props.classNameButton}>{props.buttonText}</button>} className={props.className? props.className: \"Collapsable\"}>\n      <div className={props.classNameFlex? props.classNameFlex: \"\"}>\n      <span className={props.classNameTwo? props.classNameTwo: props.buttonText} style={props.style} key={`123${props.buttonText}`}>{props.element}</span>\n      <span className={props.classNameThree? props.classNameTwo: props.buttonText} key={`456${props.buttonText}`}>{props.elementTwo}</span>\n      </div>\n    </Collapsible>\n  );\n};\n\n\nexport default Collapsable;","import React, { Component, Fragment } from \"react\";\nimport { getNewTips } from \"../logic/getScorePredictions\"\nimport {allTips} from \"../logic/getScorePredictions\"\nexport var incrementValue = 3;\n\nexport var riskLevel = 10;\n\nclass Increment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      incrementValue,\n      riskLevel,\n      show: true,\n    };\n  }\n\n  IncrementItem = () => {\n    if(incrementValue > 1){\n    this.setState({ incrementValue: this.state.incrementValue - 1 });\n    this.setState({ riskLevel: this.state.riskLevel - 1 });\n    incrementValue = (this.state.incrementValue - 1);\n    riskLevel = this.state.riskLevel - 1;\n    }\n    getNewTips(allTips)\n  };\n  DecreaseItem = () => {\n    if(incrementValue > 0){\n      this.setState({ incrementValue: this.state.incrementValue + 1 });\n      this.setState({ riskLevel: this.state.riskLevel + 1 });\n      incrementValue = (this.state.incrementValue + 1);\n      riskLevel = this.state.riskLevel + 1;\n    }\n    getNewTips(allTips)\n  };\n\n  render() {\n    return (\n      <Fragment>\n          <button className=\"IncrementButton\" onClick={this.IncrementItem}>\n            -\n          </button>\n          <button className=\"DecrementButton\" onClick={this.DecreaseItem}>\n            +\n          </button>\n      </Fragment>\n\n    );\n  }\n}\n\nexport default Increment;\n","export async function getBTTSPotential(\n  match,\n  homeGoals,\n  awayGoals,\n  unroundedHomeGoals,\n  unroundedAwayGoals\n) {\n  const homeBTTS = match.bttsAllPercentageHome;\n  const homeOnlyBTTS = match.bttsPercentageHomeHome;\n  const awayOnlyBTTS = match.bttsPercentageAwayAway;\n  const awayBTTS = match.bttsAllPercentageAway;\n  const homeG = homeGoals;\n  const awayG = awayGoals;\n\n  match.combinedBTTS = (homeBTTS + awayBTTS) / 2;\n\n  if (\n    match.bttsFraction !== \"N/A\" &&\n    match.status !== \"suspended\" &&\n    match.status !== \"canceled\"\n  ) {\n    if (\n      homeBTTS > 55 &&\n      awayBTTS > 55 &&\n      homeOnlyBTTS > 55 &&\n      awayOnlyBTTS > 55 &&\n      match.awayOdds < 4 &&\n      match.awayOdds > 1.3 &&\n      homeG >= 1 &&\n      awayG >= 1 \n    ) {\n      match.btts = true;\n      match.bttsChosen = true;\n      match.totalGoals = match.rawFinalHomeGoals + match.rawFinalAwayGoals;\n    } else {\n      match.btts = false;\n      match.bttsChosen = false;\n    }\n  }\n  return match;\n}\n","import SwiperCore, { EffectCoverflow, Pagination } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/swiper-bundle.min.css\";\nimport \"swiper/swiper.min.css\";\n\nSwiperCore.use([EffectCoverflow, Pagination]);\n\nexport const Slider = (props) => {\n  return (\n    <Swiper\n      effect={\"coverflow\"}\n      autoHeight={true}\n      grabCursor={true}\n      centeredSlides={true}\n      slidesPerView={1}\n      coverflowEffect={{\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: false,\n      }}\n      pagination={{ clickable: true }}\n      className=\"mySwiper\"\n    >\n      <SwiperSlide>\n       {props.element}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element2}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element3}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element4}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element5}\n      </SwiperSlide>\n    </Swiper>\n  );\n};\n","import KofiButton from \"kofi-button\"\n\nexport const StyledKofiButton = (props) => {\n  return (\n    <KofiButton className=\"kofi-button\" color=\"#030061\" title={props.buttonText} kofiID=\"H2H0AX25Z\" />\n  )\n}","import React, { useState } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nexport let minimumXG = 0;\nexport let minimumGD = 0;\nexport let minimumGDHorA = 0;\nexport let minimumLast6 = 0;\n\nfunction SlideDiff(props) {\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n\n    switch (true) {\n      case props.useCase === \"xg\":\n        minimumXG = newValue;\n        break;\n      case props.useCase === \"gd\":\n        minimumGD = newValue;\n        break;\n      case props.useCase === \"gdHorA\":\n        minimumGDHorA = newValue;\n        break;\n      case props.useCase === \"last10\":\n        minimumLast6 = newValue;\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Slider\n      aria-label=\"Always visible\"\n      value={value}\n      sx={{\n        width: \"90%\",\n        color: \"#030061\",\n      }}\n      onChange={handleChange}\n      step={1}\n      marks={props.marks}\n      valueLabelDisplay=\"auto\"\n      min={parseFloat(props.lower)}\n      max={parseFloat(props.upper)}\n    />\n  );\n}\n\nexport default SlideDiff;\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { matches, diff } from \"./getFixtures\";\nimport { RenderAllFixtures } from \"../logic/getFixtures\";\nimport Div from \"../components/Div\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { allForm } from \"../logic/getFixtures\";\nimport Increment from \"../components/Increment\";\nimport { incrementValue } from \"../components/Increment\";\nimport { getBTTSPotential } from \"../logic/getBTTSPotential\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport { Slider } from \"../components/Carousel\";\nimport { StyledKofiButton } from \"../components/KofiButton\";\nimport {\n  calculateAttackingStrength,\n  calculateDefensiveStrength,\n  calculateMetricStrength,\n} from \"./getStats\";\nimport { rangeValue } from \"../components/Slider\";\nimport {\n  minimumGD,\n  minimumXG,\n  minimumLast6,\n  minimumGDHorA,\n} from \"../components/SliderDiff\";\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nlet finalHomeGoals;\nlet finalAwayGoals;\nlet rawFinalHomeGoals;\nlet rawFinalAwayGoals;\nlet homeOdds;\nlet awayOdds;\nlet totalGoals = 0;\nlet totalGoals2 = 0;\nlet numberOfGames = 0;\nlet drawPredictions = 0;\nlet homePredictions = 0;\nlet awayPredictions = 0;\nlet allOutcomes = 0;\nlet homeOutcomes = 0;\nlet awayOutcomes = 0;\nlet winAmount = 0;\nlet lossAmount = 0;\nlet sumStatDAWin = 0;\nlet sumStatDALoss = 0;\nlet sumStatPossessionWin = 0;\nlet sumStatPossessionLoss = 0;\nlet sumStatSOTWin = 0;\nlet sumStatSOTLoss = 0;\nlet sumStatPPGLast10Win = 0;\nlet sumStatPPGLast10Loss = 0;\nlet sumOddsWin = 0;\nlet sumOddsLoss = 0;\nlet sumXGForWin = 0;\nlet sumXGForLoss = 0;\nlet sumXGAgainstWin = 0;\nlet sumXGAgainstLoss = 0;\nlet allWinOutcomes = 0;\nlet allLossOutcomes = 0;\nlet allDrawOutcomes = 0;\nlet totalROI = 0;\nlet totalInvestment = 0;\nlet totalProfit = 0;\nexport let formObjectHome;\nexport let formObjectAway;\nexport let clicked = false;\n\nexport var renderPredictions;\n\nasync function convertTimestamp(timestamp) {\n  let newDate = new Date(timestamp * 1000);\n  let [day, month, year] = newDate.toLocaleDateString(\"en-US\").split(\"/\");\n\n  let converted = `${year}-${day}-${month}`;\n\n  return converted;\n}\n\nexport function getPointsFromLastX(lastX) {\n  let points = 0;\n  let pointsAddition;\n\n  try {\n    lastX.forEach((game) => {\n      switch (true) {\n        case game === \"W\":\n          pointsAddition = 3;\n          break;\n        case game === \"D\":\n          pointsAddition = 1;\n          break;\n        case game === \"L\":\n          pointsAddition = 0;\n          break;\n        default:\n          break;\n      }\n\n      points = points + pointsAddition;\n    });\n    return points;\n  } catch (error) {\n    console.log(error);\n    return \"N/A\";\n  }\n}\n\nasync function getPastLeagueResults(team, game, hOrA, form) {\n  form.completeData = true;\n  let date = game.date;\n  if (allLeagueResultsArrayOfObjects[game.leagueIndex].fixtures.length > 10) {\n    let teamsHomeResults = allLeagueResultsArrayOfObjects[\n      game.leagueIndex\n    ].fixtures.filter((fixture) => fixture.home_name === team);\n\n    teamsHomeResults = teamsHomeResults\n      .filter(function (item) {\n        return item.date_unix < date - 86400;\n      })\n      .sort((a, b) => a.date_unix - b.date_unix);\n\n    let teamsAwayResults = allLeagueResultsArrayOfObjects[\n      game.leagueIndex\n    ].fixtures.filter((fixture) => fixture.away_name === team);\n\n    teamsAwayResults = teamsAwayResults\n      .filter(function (item) {\n        return item.date_unix < date - 86400;\n      })\n      .sort((a, b) => a.date_unix - b.date_unix);\n\n    let homeResults = [];\n    let awayResults = [];\n    let oddsSumHome = 0;\n    let oddsSumAway = 0;\n    let favouriteCount = 0;\n    let underdogCount = 0;\n    let winningFavouriteCount = 0;\n    let drawingFavouriteCount = 0;\n    let beatenFavouriteCount = 0;\n    let winningUnderdogCount = 0;\n    let drawingUnderdogCount = 0;\n    let beatenUnderdogCount = 0;\n\n    for (let index = 0; index < teamsHomeResults.length; index++) {\n      const resultedGame = teamsHomeResults[index];\n      homeResults.push({\n        homeTeam: resultedGame.home_name,\n        homeGoals: resultedGame.homeGoalCount,\n        XG:\n          resultedGame.team_a_xg === -1 || resultedGame.team_a_xg > 7\n            ? resultedGame.homeGoalCount\n            : resultedGame.team_a_xg,\n        awayTeam: resultedGame.away_name,\n        awayGoals: resultedGame.awayGoalCount,\n        XGAgainst:\n          resultedGame.team_b_xg === -1 || resultedGame.team_b_xg > 7\n            ? resultedGame.awayGoalCount\n            : resultedGame.team_b_xg,\n        possession:\n          resultedGame.team_a_possession === -1\n            ? 50\n            : resultedGame.team_a_possession,\n        scored: resultedGame.homeGoalCount,\n        conceeded: resultedGame.awayGoalCount,\n        shots:\n          resultedGame.team_a_shots === -1 ? 12 : resultedGame.team_a_shots,\n        sot:\n          resultedGame.team_a_shotsOnTarget === -1\n            ? 5\n            : resultedGame.team_a_shotsOnTarget,\n        sotAgainst:\n          resultedGame.team_b_shotsOnTarget === -1\n            ? 5\n            : resultedGame.team_b_shotsOnTarget,\n        dangerousAttacks:\n          resultedGame.team_a_dangerous_attacks === -1\n            ? 50\n            : resultedGame.team_a_dangerous_attacks,\n        corners:\n          resultedGame.team_a_corners === -1 ? 6 : resultedGame.team_a_corners,\n        date: await convertTimestamp(resultedGame.date_unix),\n        dateRaw: resultedGame.date_unix,\n        oddsHome: resultedGame.odds_ft_1,\n        oddsAway: resultedGame.odds_ft_2,\n        odds: resultedGame.odds_ft_1 < 999.99 ? resultedGame.odds_ft_1 / 2 : 1,\n        btts:\n          resultedGame.homeGoalCount > 0 && resultedGame.awayGoalCount > 0\n            ? true\n            : false,\n        points:\n          resultedGame.homeGoalCount > resultedGame.awayGoalCount\n            ? 3\n            : resultedGame.homeGoalCount < resultedGame.awayGoalCount\n            ? 0\n            : 1,\n        result:\n          resultedGame.homeGoalCount > resultedGame.awayGoalCount\n            ? \"W\"\n            : resultedGame.homeGoalCount < resultedGame.awayGoalCount\n            ? \"L\"\n            : \"D\",\n      });\n\n      oddsSumHome = oddsSumHome + resultedGame.odds_ft_1;\n      favouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2\n          ? favouriteCount + 1\n          : favouriteCount + 0;\n      winningFavouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? winningFavouriteCount + 1\n          : winningFavouriteCount + 0;\n      drawingFavouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingFavouriteCount + 1\n          : drawingFavouriteCount + 0;\n      beatenFavouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? beatenFavouriteCount + 1\n          : beatenFavouriteCount + 0;\n\n      underdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2\n          ? underdogCount + 1\n          : underdogCount + 0;\n      winningUnderdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? winningUnderdogCount + 1\n          : winningUnderdogCount + 0;\n      drawingUnderdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingUnderdogCount + 1\n          : drawingUnderdogCount + 0;\n      beatenUnderdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? beatenUnderdogCount + 1\n          : beatenUnderdogCount + 0;\n    }\n    for (let index = 0; index < teamsAwayResults.length; index++) {\n      const resultedGame = teamsAwayResults[index];\n      awayResults.push({\n        homeTeam: resultedGame.home_name,\n        homeGoals: resultedGame.homeGoalCount,\n        XG:\n          resultedGame.team_b_xg === -1 || resultedGame.team_b_xg > 7\n            ? resultedGame.awayGoalCount\n            : resultedGame.team_b_xg,\n        awayTeam: resultedGame.away_name,\n        awayGoals: resultedGame.awayGoalCount,\n        XGAgainst:\n          resultedGame.team_a_xg === -1 || resultedGame.team_a_xg > 7\n            ? resultedGame.homeGoalCount\n            : resultedGame.team_a_xg,\n        possession:\n          resultedGame.team_b_possession === -1\n            ? 50\n            : resultedGame.team_b_possession,\n        scored: resultedGame.awayGoalCount,\n        conceeded: resultedGame.homeGoalCount,\n        shots:\n          resultedGame.team_b_shots === -1 ? 12 : resultedGame.team_b_shots,\n        sot:\n          resultedGame.team_b_shotsOnTarget === -1\n            ? 5\n            : resultedGame.team_b_shotsOnTarget,\n        sotAgainst:\n          resultedGame.team_a_shotsOnTarget === -1\n            ? 5\n            : resultedGame.team_a_shotsOnTarget,\n        dangerousAttacks:\n          resultedGame.team_b_dangerous_attacks === -1\n            ? 50\n            : resultedGame.team_b_dangerous_attacks,\n        corners:\n          resultedGame.team_b_corners === -1 ? 6 : resultedGame.team_b_corners,\n        date: await convertTimestamp(resultedGame.date_unix),\n        dateRaw: resultedGame.date_unix,\n        oddsHome: resultedGame.odds_ft_1,\n        oddsAway: resultedGame.odds_ft_2,\n        odds: resultedGame.odds_ft_2 < 999.99 ? resultedGame.odds_ft_2 / 2 : 1,\n        btts:\n          resultedGame.homeGoalCount > 0 && resultedGame.awayGoalCount > 0\n            ? true\n            : false,\n        points:\n          resultedGame.homeGoalCount > resultedGame.awayGoalCount\n            ? 0\n            : resultedGame.homeGoalCount < resultedGame.awayGoalCount\n            ? 3\n            : 1,\n        result:\n          resultedGame.homeGoalCount > resultedGame.awayGoalCount\n            ? \"L\"\n            : resultedGame.homeGoalCount < resultedGame.awayGoalCount\n            ? \"W\"\n            : \"D\",\n      });\n      oddsSumAway = oddsSumAway + resultedGame.odds_ft_2;\n      favouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2\n          ? favouriteCount + 1\n          : favouriteCount + 0;\n      winningFavouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? winningFavouriteCount + 1\n          : winningFavouriteCount + 0;\n      drawingFavouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingFavouriteCount + 1\n          : drawingFavouriteCount + 0;\n      beatenFavouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? beatenFavouriteCount + 1\n          : beatenFavouriteCount + 0;\n\n      underdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2\n          ? underdogCount + 1\n          : underdogCount + 0;\n      winningUnderdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? winningUnderdogCount + 1\n          : winningUnderdogCount + 0;\n      drawingUnderdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingUnderdogCount + 1\n          : drawingUnderdogCount + 0;\n      beatenUnderdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? beatenUnderdogCount + 1\n          : beatenUnderdogCount + 0;\n    }\n\n    let reversedResultsHome = homeResults;\n    let reversedResultsAway = awayResults;\n\n    if (game.homeTeam === team) {\n      let y = game.homeOdds;\n      //Clear fav\n      if (y <= 1.5) {\n        const allClearFavouriteResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 1.45\n        );\n        const allClearFavouriteResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 1.45\n        );\n\n        form.simlarGameResultsHome = allClearFavouriteResultsHome\n          .concat(allClearFavouriteResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //fav\n      else if (y <= 2.1) {\n        const allSlightFavouriteResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 2.1 && fixture.oddsHome > 1.45\n        );\n        const allSlightFavouriteResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 2.1 && fixture.oddsAway > 1.45\n        );\n        game.simlarGameResultsHome = allSlightFavouriteResultsHome\n          .concat(allSlightFavouriteResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //Tossup\n      else if (y <= 2.75) {\n        const allTossupResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 2.75 && fixture.oddsHome > 2.1\n        );\n        const allTossupResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 2.75 && fixture.oddsAway > 2.1\n        );\n        game.simlarGameResultsHome = allTossupResultsHome\n          .concat(allTossupResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //Underdog\n      else if (y <= 4) {\n        const allUnderdogResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 4 && fixture.oddsHome > 2.75\n        );\n        const allUnderdogResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 4 && fixture.oddsAway > 2.75\n        );\n        game.simlarGameResultsHome = allUnderdogResultsHome\n          .concat(allUnderdogResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //MassiveUnderdog\n      else if (y > 4) {\n        const allMassiveUnderdogResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome > 4\n        );\n        const allMassiveUnderdogResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway > 4\n        );\n        game.simlarGameResultsHome = allMassiveUnderdogResultsHome\n          .concat(allMassiveUnderdogResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n    } else if (game.awayTeam === team) {\n      let z = game.awayOdds;\n      //Clear fav\n      if (z <= 1.5) {\n        const allClearFavouriteResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 1.45\n        );\n        const allClearFavouriteResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 1.45\n        );\n\n        game.simlarGameResultsAway = allClearFavouriteResultsHome\n          .concat(allClearFavouriteResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //fav\n      else if (z <= 2.1) {\n        const allSlightFavouriteResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 2.1 && fixture.oddsHome > 1.45\n        );\n        const allSlightFavouriteResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 2.1 && fixture.oddsAway > 1.45\n        );\n        game.simlarGameResultsAway = allSlightFavouriteResultsHome\n          .concat(allSlightFavouriteResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //Tossup\n      else if (z <= 2.75) {\n        const allTossupResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 2.75 && fixture.oddsHome > 2.1\n        );\n        const allTossupResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 2.75 && fixture.oddsAway > 2.1\n        );\n        game.simlarGameResultsAway = allTossupResultsHome\n          .concat(allTossupResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //Underdog\n      else if (z <= 4) {\n        const allUnderdogResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 4 && fixture.oddsHome > 2.75\n        );\n        const allUnderdogResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 4 && fixture.oddsAway > 2.75\n        );\n        game.simlarGameResultsAway = allUnderdogResultsHome\n          .concat(allUnderdogResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //MassiveUnderdog\n      else if (z > 4) {\n        const allMassiveUnderdogResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome > 4.5\n        );\n        const allMassiveUnderdogResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway > 4.5\n        );\n        game.simlarGameResultsAway = allMassiveUnderdogResultsHome\n          .concat(allMassiveUnderdogResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n    }\n\n    const allTeamResults = reversedResultsHome.concat(reversedResultsAway);\n\n    let points = 0;\n    let pointsWeighted = 0;\n\n    allTeamResults.forEach((teamResult) => {\n      points = points + teamResult.points;\n      pointsWeighted = pointsWeighted + teamResult.points * teamResult.odds;\n    });\n\n    form.pointsWeighted = pointsWeighted;\n    form.points = points;\n    form.gamesPlayed = allTeamResults.length;\n\n    const allTeamResultsHome = reversedResultsHome.sort(\n      (a, b) => b.dateRaw - a.dateRaw\n    );\n    const allTeamResultsAway = reversedResultsAway.sort(\n      (a, b) => b.dateRaw - a.dateRaw\n    );\n\n    form.allTeamResults = allTeamResults.sort((b, a) => a.dateRaw - b.dateRaw);\n\n    const points6 = allTeamResults.map((res) => res.points).slice(0, 6);\n    const pointsSum6 = points6.reduce((a, b) => a + b, 0);\n    form.avPoints6 = pointsSum6 / points6.length;\n    form.pointsSum6 = pointsSum6;\n\n\n    const points5 = allTeamResults.map((res) => res.points).slice(0, 5);\n    const pointsSum5 = points5.reduce((a, b) => a + b, 0);\n    form.avPoints5 = pointsSum5 / points5.length;\n\n    const pointsAll = allTeamResults.map((res) => res.points);\n    const pointsSumAll = pointsAll.reduce((a, b) => a + b, 0);\n    form.avPointsAll = pointsSumAll / pointsAll.length;\n\n    const resultsAll = allTeamResults.map((res) => res.result);\n    const resultsHome = allTeamResultsHome.map((res) => res.result);\n    const resultsAway = allTeamResultsAway.map((res) => res.result);\n\n    form.resultsAll = resultsAll.slice(0, 6);\n    form.resultsHome = resultsHome.slice(0, 6);\n    form.resultsAway = resultsAway.slice(0, 6);\n\n    const avScoredLast5 = allTeamResults.map((res) => res.scored).slice(0, 5);\n    const avScoredLast5Sum = avScoredLast5.reduce((a, b) => a + b, 0);\n    form.avScoredLast5 = avScoredLast5Sum / avScoredLast5.length;\n    const avConceededLast5 = allTeamResults\n      .map((res) => res.conceeded)\n      .slice(0, 5);\n    const avConceededLast5Sum = avConceededLast5.reduce((a, b) => a + b, 0);\n    form.avConceededLast5 = avConceededLast5Sum / avConceededLast5.length;\n    const avDALast5 = allTeamResults\n      .map((res) => res.dangerousAttacks)\n      .slice(0, 5);\n    const avDALast5Sum = avDALast5.reduce((a, b) => a + b, 0);\n    form.avDALast5 = avDALast5Sum / avDALast5.length;\n    const avSOTLast5 = allTeamResults.map((res) => res.sot).slice(0, 5);\n    const avSOTLast5Sum = avSOTLast5.reduce((a, b) => a + b, 0);\n    form.avSOTLast5 = avSOTLast5Sum / avSOTLast5.length;\n    const avSOTAgainstLast5 = allTeamResults\n      .map((res) => res.sotAgainst)\n      .slice(0, 5);\n    const avSOTAgainstLast5Sum = avSOTAgainstLast5.reduce((a, b) => a + b, 0);\n    form.avSOTAgainstLast5 = avSOTAgainstLast5Sum / avSOTAgainstLast5.length;\n    const avShotsLast5 = allTeamResults.map((res) => res.shots).slice(0, 5);\n    const avShotsLast5Sum = avShotsLast5.reduce((a, b) => a + b, 0);\n    form.avShotsLast5 = avShotsLast5Sum / avShotsLast5.length;\n    const avCornersLast5 = allTeamResults.map((res) => res.corners).slice(0, 5);\n    const avCornersLast5Sum = avCornersLast5.reduce((a, b) => a + b, 0);\n    form.avCornersLast5 = avCornersLast5Sum / avCornersLast5.length;\n    const avPosessionLast5 = allTeamResults\n      .map((res) => res.possession)\n      .slice(0, 6);\n    const avPosessionLast5Sum = avPosessionLast5.reduce((a, b) => a + b, 0);\n    form.avPosessionLast5 = avPosessionLast5Sum / avPosessionLast5.length;\n    const avXGLast5 = allTeamResults.map((res) => res.XG).slice(0, 5);\n    const avXGLast5Sum = avXGLast5.reduce((a, b) => a + b, 0);\n    form.avXGLast5 = avXGLast5Sum / avXGLast5.length;\n    const avXGAgainstLast5 = allTeamResults\n      .map((res) => res.XGAgainst)\n      .slice(0, 5);\n\n    // console.log(form.teamName);\n\n    // console.log(\"avConceededLast5\")\n    // console.log(avConceededLast5)\n    // console.log(\"avSOTLast5\")\n    // console.log(avSOTLast5)\n\n    // console.log(\"avSOTAgainstLast5\")\n    // console.log(avSOTAgainstLast5)\n\n    // console.log(\"avShotsLast5\")\n    // console.log(avShotsLast5)\n\n    // console.log(\"avCornersLast5\")\n    // console.log(avCornersLast5)\n\n    // console.log(\"avPosessionLast5\")\n    // console.log(avPosessionLast5)\n\n    // console.log(\"avXGLast5\")\n    // console.log(avXGLast5)\n\n    // console.log(\"avXGAgainstLast5\")\n    // console.log(avXGAgainstLast5)\n\n    const avXGAgainstLast5Sum = avXGAgainstLast5.reduce((a, b) => a + b, 0);\n    form.avXGAgainstLast5 = avXGAgainstLast5Sum / avXGAgainstLast5.length;\n\n    const averageOddsHome = oddsSumHome / teamsHomeResults.length;\n    const averageOddsAway = oddsSumAway / teamsAwayResults.length;\n    form.favouriteCount = favouriteCount;\n    form.winningFavouriteCount = winningFavouriteCount;\n    form.drawingFavouriteCount = drawingFavouriteCount;\n    form.beatenFavouriteCount = beatenFavouriteCount;\n\n    form.underdogCount = underdogCount;\n    form.winningUnderdogCount = winningUnderdogCount;\n    form.drawingUnderdogCount = drawingUnderdogCount;\n    form.beatenUnderdogCount = beatenUnderdogCount;\n\n    form.oddsReliabilityWin =\n      favouriteCount > 0\n        ? (form.winningFavouriteCount / form.favouriteCount) * 100\n        : 0;\n    form.oddsReliabilityDraw =\n      favouriteCount > 0\n        ? (form.drawingFavouriteCount / form.favouriteCount) * 100\n        : 0;\n    form.oddsReliabilityLose =\n      favouriteCount > 0\n        ? (form.beatenFavouriteCount / form.favouriteCount) * 100\n        : 0;\n\n    form.oddsReliabilityWinAsUnderdog =\n      underdogCount > 0\n        ? (form.winningUnderdogCount / form.underdogCount) * 100\n        : 0;\n    form.oddsReliabilityDrawAsUnderdog =\n      underdogCount > 0\n        ? (form.drawingUnderdogCount / form.underdogCount) * 100\n        : 0;\n    form.oddsReliabilityLoseAsUnderdog =\n      underdogCount > 0\n        ? (form.beatenUnderdogCount / form.underdogCount) * 100\n        : 0;\n\n    form.reliableIndicator =\n      form.winningFavouriteCount + form.beatenUnderdogCount;\n    form.unreliableIndicator =\n      form.beatenFavouriteCount +\n      form.drawingFavouriteCount +\n      form.winningUnderdogCount +\n      form.drawingUnderdogCount;\n\n    form.predictabilityScore =\n      form.reliableIndicator / form.unreliableIndicator;\n\n    let reliabilityString;\n\n    switch (true) {\n      case form.predictabilityScore < 0.3:\n        reliabilityString =\n          \"Odds have been an extremely unreliable indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 0.3 && form.predictabilityScore < 0.8:\n        reliabilityString =\n          \"Odds have been an unreliable indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 0.8 && form.predictabilityScore < 1.2:\n        reliabilityString =\n          \"Odds have been a decent indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 1.2 && form.predictabilityScore < 1.7:\n        reliabilityString =\n          \"Odds have been a good indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 1.7 && form.predictabilityScore < 2.2:\n        reliabilityString =\n          \"Odds have been a very good indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 2.2:\n        reliabilityString =\n          \"Odds have been an excellent indicator of actual performance so far this season\";\n        break;\n      default:\n        break;\n    }\n\n    form.reliabilityString = reliabilityString;\n\n    const teamGoalsHome = reversedResultsHome.map((res) => res.scored);\n\n    const teamGoalsAway = awayResults.map((res) => res.scored);\n    const teamGoalsAll = allTeamResults.map((res) => res.scored);\n    const teamConceededHome = homeResults.map((res) => res.conceeded);\n    const teamConceededAway = awayResults.map((res) => res.conceeded);\n    const teamConceededAll = allTeamResults.map((res) => res.conceeded);\n\n    const teamXGForAll = allTeamResults.map((res) => res.XG);\n    const teamXGAgainstAll = allTeamResults.map((res) => res.XGAgainst);\n    const teamXGForAllRecentAtStart = teamXGForAll;\n    const teamXGAgainstAllRecentAtStart = teamXGAgainstAll;\n\n    const teamXGForHome = homeResults.map((res) => res.XG);\n    const teamXGAgainstHome = homeResults.map((res) => res.XGAgainst);\n    const teamXGForAway = awayResults.map((res) => res.XG);\n    const teamXGAgainstAway = awayResults.map((res) => res.XGAgainst);\n\n    const XGSum = teamXGForAll.reduce((a, b) => a + b, 0);\n    const avgXGScored = XGSum / teamXGForAll.length || 0;\n    const XGAgainstSum = teamXGAgainstAll.reduce((a, b) => a + b, 0);\n    const avgXGConceeded = XGAgainstSum / teamXGAgainstAll.length || 0;\n\n    const shortTermXGDiff = form.avXGLast5 - form.avXGAgainstLast5;\n    const longTermXGDiff = avgXGScored - avgXGConceeded;\n\n    form.XGChangeRecently = shortTermXGDiff - longTermXGDiff;\n\n    const possession = allTeamResults.map((res) => res.possession);\n    const possessionSum = possession.reduce((a, b) => a + b, 0);\n    const avgPossession = possessionSum / possession.length || 0;\n\n    const possessionHome = homeResults.map((res) => res.possession);\n    const possessionSumHome = possessionHome.reduce((a, b) => a + b, 0);\n    form.avgPossessionHome = possessionSumHome / possessionHome.length || 0;\n\n    const possessionAway = awayResults.map((res) => res.possession);\n    const possessionSumAway = possessionAway.reduce((a, b) => a + b, 0);\n    form.avgPossessionAway = possessionSumAway / possessionAway.length || 0;\n\n    const dangerousAttacks = allTeamResults.map((res) => res.dangerousAttacks);\n    const dangerousAttacksSum = dangerousAttacks.reduce((a, b) => a + b, 0);\n    const avgDangerousAttacks =\n      dangerousAttacksSum / dangerousAttacks.length || 0;\n\n    const dangerousAttacksHome = homeResults.map((res) => res.dangerousAttacks);\n    const dangerousAttacksSumHome = dangerousAttacksHome.reduce(\n      (a, b) => a + b,\n      0\n    );\n    form.avgDangerousAttacksHome =\n      dangerousAttacksSumHome / dangerousAttacksHome.length || 0;\n\n    const dangerousAttacksAway = awayResults.map((res) => res.dangerousAttacks);\n    const dangerousAttacksSumAway = dangerousAttacksAway.reduce(\n      (a, b) => a + b,\n      0\n    );\n    form.avgDangerousAttacksAway =\n      dangerousAttacksSumAway / dangerousAttacksAway.length || 0;\n\n    const shots = allTeamResults.map((res) => res.shots);\n    const shotsSum = shots.reduce((a, b) => a + b, 0);\n    const avgShots = shotsSum / shots.length || 0;\n    form.avgShots = avgShots;\n\n    const shotsHome = homeResults.map((res) => res.shots);\n    const shotsSumHome = shotsHome.reduce((a, b) => a + b, 0);\n    form.avgShotsHome = shotsSumHome / shotsHome.length || 0;\n\n    const shotsAway = awayResults.map((res) => res.shots);\n    const shotsSumAway = shotsAway.reduce((a, b) => a + b, 0);\n    form.avgShotsAway = shotsSumAway / shotsAway.length || 0;\n\n    const shotsOnTarget = allTeamResults.map((res) => res.sot);\n    const shotsOnTargetSum = shotsOnTarget.reduce((a, b) => a + b, 0);\n    const avgShotsOnTarget = shotsOnTargetSum / shotsOnTarget.length || 0;\n\n    const shotsOnTargetHome = homeResults.map((res) => res.sot);\n    const shotsOnTargetSumHome = shotsOnTargetHome.reduce((a, b) => a + b, 0);\n    form.avgShotsOnTargetHome =\n      shotsOnTargetSumHome / shotsOnTargetHome.length || 0;\n\n    const shotsOnTargetAway = awayResults.map((res) => res.sot);\n    const shotsOnTargetSumAway = shotsOnTargetAway.reduce((a, b) => a + b, 0);\n    form.avgShotsOnTargetAway =\n      shotsOnTargetSumAway / shotsOnTargetAway.length || 0;\n\n    const shotsOnTargetAgainst = allTeamResults.map((res) => res.sotAgainst);\n    const shotsOnTargetSumAgainst = shotsOnTargetAgainst.reduce(\n      (a, b) => a + b,\n      0\n    );\n    const avgShotsOnTargetAgainst =\n      shotsOnTargetSumAgainst / shotsOnTargetAgainst.length || 0;\n\n    const shotsOnTargetAgainstHome = homeResults.map((res) => res.sotAgainst);\n    const shotsOnTargetSumAgainstHome = shotsOnTargetAgainstHome.reduce(\n      (a, b) => a + b,\n      0\n    );\n    form.avgShotsOnTargetAgainstHome =\n      shotsOnTargetSumAgainstHome / shotsOnTargetAgainstHome.length || 0;\n\n    const shotsOnTargetAgainstAway = awayResults.map((res) => res.sotAgainst);\n    const shotsOnTargetSumAgainstAway = shotsOnTargetAgainstAway.reduce(\n      (a, b) => a + b,\n      0\n    );\n    form.avgShotsOnTargetAgainstAway =\n      shotsOnTargetSumAgainstAway / shotsOnTargetAgainstAway.length || 0;\n\n    const corners = allTeamResults.map((res) => res.corners);\n    const cornersSum = corners.reduce((a, b) => a + b, 0);\n    const cornersAv = cornersSum / corners.length || 0;\n\n    const cornersHome = homeResults.map((res) => res.corners);\n    const cornersSumHome = cornersHome.reduce((a, b) => a + b, 0);\n    form.cornersAvHome = cornersSumHome / cornersHome.length || 0;\n\n    const cornersAway = awayResults.map((res) => res.corners);\n    const cornersSumAway = cornersAway.reduce((a, b) => a + b, 0);\n    form.cornersAvAway = cornersSumAway / cornersAway.length || 0;\n\n    const last5XG = teamXGForAllRecentAtStart.slice(0, 5);\n    const last5XGSum = last5XG.reduce((a, b) => a + b, 0);\n    const last5XGAvgFor = last5XGSum / last5XG.length || 0;\n\n    const last5XGHome = teamXGForHome.slice(0, 5);\n    const last5XGSumHome = last5XGHome.reduce((a, b) => a + b, 0);\n    form.last5XGAvgForHome = last5XGSumHome / last5XGHome.length || 0;\n\n    const last5XGAway = teamXGForAway.slice(0, 5);\n    const last5XGSumAway = last5XGAway.reduce((a, b) => a + b, 0);\n    form.last5XGAvgForAway = last5XGSumAway / last5XGAway.length || 0;\n\n    const XGSumHome = teamXGForHome.reduce((a, b) => a + b, 0);\n    form.avgXGScoredHome = XGSumHome / teamXGForHome.length || 0;\n\n    const XGSumAway = teamXGForAway.reduce((a, b) => a + b, 0);\n    form.avgXGScoredAway = XGSumAway / teamXGForAway.length || 0;\n\n    const XGAgainstSumHome = teamXGAgainstHome.reduce((a, b) => a + b, 0);\n    form.avgXGConceededHome = XGAgainstSumHome / teamXGAgainstHome.length || 0;\n\n    const XGAgainstSumAway = teamXGAgainstAway.reduce((a, b) => a + b, 0);\n    form.avgXGConceededAway = XGAgainstSumAway / teamXGAgainstAway.length || 0;\n\n    const last5XGAgainst = teamXGAgainstAllRecentAtStart.slice(0, 5);\n    const last5XGAgainstSum = last5XGAgainst.reduce((a, b) => a + b, 0);\n    const last5XGAvgAgainst = last5XGAgainstSum / last5XGAgainst.length || 0;\n\n    const last5XGAgainstHome = teamXGForHome.slice(0, 5);\n    const last5XGAgainstSumHome = last5XGAgainstHome.reduce((a, b) => a + b, 0);\n    form.last5XGAvgAgainstHome =\n      last5XGAgainstSumHome / last5XGAgainstHome.length || 0;\n\n    const last5XGAgainstAway = teamXGForAway.slice(0, 5);\n    const last5XGAgainstSumAway = last5XGAgainstAway.reduce((a, b) => a + b, 0);\n    form.last5XGAvgAgainstAway =\n      last5XGAgainstSumAway / last5XGAgainstAway.length || 0;\n\n    form.XGDiffNonAverage = XGSum - XGAgainstSum;\n    form.XGDiffNonAverageLast5 = last5XGSum - last5XGAgainstSum;\n\n    form.XGOverall = parseFloat(avgXGScored.toFixed(2));\n    form.XGlast5 = parseFloat(last5XGAvgFor.toFixed(2));\n\n    const shotsLast5Arr = shots.slice(0, 5);\n    const shotsLast5Sum = shotsLast5Arr.reduce((a, b) => a + b, 0);\n    const avgShotsLast5 = shotsLast5Sum / shotsLast5Arr.length || 0;\n    form.avgShotsLast5 = avgShotsLast5;\n\n    const shotsHomeArr = shotsHome.slice(0, 5);\n    const shotsHomeSum = shotsHomeArr.reduce((a, b) => a + b, 0);\n    const avgShotsHome = shotsHomeSum / shotsHomeArr.length || 0;\n    form.avgShotsHome = avgShotsHome;\n\n    const shotsAwayArr = shotsAway.slice(0, 5);\n    const shotsAwaySum = shotsAwayArr.reduce((a, b) => a + b, 0);\n    const avgShotsAway = shotsAwaySum / shotsAwayArr.length || 0;\n    form.avgShotsAway = avgShotsAway;\n\n    form.avgShotValue = (form.XGOverall / form.avgShots) * 100;\n    form.avgShotValueLast5 = (form.XGlast5 / form.avgShotsLast5) * 100;\n    form.avgShotValueHome = (form.avgXGScoredHome / form.avgShotsHome) * 100;\n    form.avgShotValueAway = (form.avgXGScoredAway / form.avgShotsAway) * 100;\n\n    form.XGAgainstAvgOverall = parseFloat(avgXGConceeded.toFixed(2));\n    form.XGAgainstlast5 = parseFloat(last5XGAvgAgainst.toFixed(2));\n\n    form.AveragePossessionOverall = parseFloat(avgPossession.toFixed(1));\n    form.AverageDangerousAttacksOverall = parseFloat(\n      avgDangerousAttacks.toFixed(1)\n    );\n    form[\"Average Shots\"] = parseFloat(avgShots.toFixed(1));\n    form.AverageCorners = parseFloat(cornersAv.toFixed(1));\n    form.AverageShotsOnTargetOverall = parseFloat(avgShotsOnTarget.toFixed(1));\n    form.AverageShotsOnTargetAgainstOverall = parseFloat(\n      avgShotsOnTargetAgainst.toFixed(1)\n    );\n    const alpha = 0.35;\n    const beta = 0.3;\n\n    let forAndAgainstRollingAv;\n    let forAndAgainstRollingAvHomeOrAway;\n\n    if (hOrA === \"home\") {\n      form.allGoalsArrayHomeRecent = teamGoalsAll.slice(0, 20);\n      form.allConceededArrayHomeRecent = teamConceededAll.slice(0, 20);\n      form.allGoalsArrayHome = teamGoalsAll.reverse();\n      form.allConceededArrayHome = teamConceededAll.reverse();\n      form.allGoalsArrayHomeOnly = teamGoalsHome.reverse();\n      form.allConceededArrayHomeOnly = teamConceededHome.reverse();\n      const sum = teamGoalsHome.reduce((a, b) => a + b, 0);\n      const sumTwo = teamConceededHome.reduce((a, b) => a + b, 0);\n      form.goalDifferenceHomeOrAway = sum - sumTwo;\n\n      forAndAgainstRollingAv = await predictGoalsWithExponentialSmoothing(\n        form.allGoalsArrayHome,\n        form.allConceededArrayHome,\n        alpha\n      );\n\n      forAndAgainstRollingAvHomeOrAway =\n        await predictGoalsWithExponentialSmoothing(\n          form.allGoalsArrayHomeOnly,\n          form.allConceededArrayHomeOnly,\n          beta\n        );\n    } else if (hOrA === \"away\") {\n      form.allGoalsArrayAwayRecent = teamGoalsAll.slice(0, 20);\n      form.allConceededArrayAwayRecent = teamConceededAll.slice(0, 20);\n      form.allGoalsArrayAway = teamGoalsAll.reverse();\n      form.allConceededArrayAway = teamConceededAll.reverse();\n      form.allGoalsArrayAwayOnly = teamGoalsAway.reverse();\n      form.allConceededArrayAwayOnly = teamConceededAway.reverse();\n      const sum = teamGoalsAway.reduce((a, b) => a + b, 0);\n      const sumTwo = teamConceededAway.reduce((a, b) => a + b, 0);\n      form.goalDifferenceHomeOrAway = sum - sumTwo;\n      forAndAgainstRollingAv = await predictGoalsWithExponentialSmoothing(\n        form.allGoalsArrayAway,\n        form.allConceededArrayAway,\n        alpha\n      );\n\n      forAndAgainstRollingAvHomeOrAway =\n        await predictGoalsWithExponentialSmoothing(\n          form.allGoalsArrayAwayOnly,\n          form.allConceededArrayAwayOnly,\n          beta\n        );\n    }\n\n    let bttsHome = homeResults.map((res) => res.btts);\n    if (bttsHome.length > 10) {\n      bttsHome = bttsHome.slice(-10);\n    }\n\n    let bttsAway = awayResults.map((res) => res.btts);\n    if (bttsAway.length > 10) {\n      bttsAway = bttsAway.slice(-10);\n    }\n\n    let bttsAll = allTeamResults.map((res) => res.btts);\n    if (bttsAll.length > 10) {\n      bttsAll = bttsAll.slice(-10);\n    }\n\n    const bttsHomeCount = bttsHome.filter((btts) => btts === true);\n    const bttsHomeString = `${bttsHomeCount.length}/${bttsHome.length}`;\n    const bttsHomePercentage = (\n      (bttsHomeCount.length / bttsHome.length) *\n      100\n    ).toFixed(0);\n\n    const bttsAwayCount = bttsAway.filter((btts) => btts === true);\n    const bttsAwayString = `${bttsAwayCount.length}/${bttsAway.length}`;\n    const bttsAwayPercentage = (\n      (bttsAwayCount.length / bttsAway.length) *\n      100\n    ).toFixed(0);\n    const bttsAllCount = bttsAll.filter((btts) => btts === true);\n    const bttsAllString = `${bttsAllCount.length}/${bttsAll.length}`;\n    const bttsAllPercentage = (\n      (bttsAllCount.length / bttsAll.length) *\n      100\n    ).toFixed(0);\n    form.bttsAllPercentage = bttsAllPercentage;\n    form.bttsHomePercentage = bttsHomePercentage;\n    form.bttsAwayPercentage = bttsAwayPercentage;\n\n    let r = 10;\n    let x = 10;\n\n    const teamGoalsHomeRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsHome,\n      teamGoalsHome.length < x ? teamGoalsHome.length : x\n    );\n\n    const teamGoalsAwayRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsAway,\n      teamGoalsAway.length < x ? teamGoalsAway.length : x\n    );\n\n    const RoundedXGFor = teamXGForAll.map((xg) => xg);\n    const RoundedXGAgainst = teamXGAgainstAll.map((xg) => xg);\n    const RoundedXGForHome = teamXGForHome.map((xg) => xg);\n    const RoundedXGAgainstHome = teamXGAgainstHome.map((xg) => xg);\n    const RoundedXGForAway = teamXGForAway.map((xg) => xg);\n    const RoundedXGAgainstAway = teamXGAgainstAway.map((xg) => xg);\n\n    form.XGPrediction = await predictGoalsWithExponentialSmoothing(\n      RoundedXGFor,\n      RoundedXGAgainst,\n      alpha\n    );\n\n    form.XGPredictionHome = await predictGoalsWithExponentialSmoothing(\n      RoundedXGForHome,\n      RoundedXGAgainstHome,\n      beta\n    );\n\n    form.XGPredictionAway = await predictGoalsWithExponentialSmoothing(\n      RoundedXGForAway,\n      RoundedXGAgainstAway,\n      beta\n    );\n\n    const teamConceededHomeRollingAverage =\n      await predictNextWeightedMovingAverage(\n        teamConceededHome,\n        teamConceededHome.length < x ? teamConceededHome.length : x\n      );\n\n    const teamConceededAwayRollingAverage =\n      await predictNextWeightedMovingAverage(\n        teamConceededAway,\n        teamConceededAway.length < x ? teamConceededAway.length : x\n      );\n\n    const sum = teamGoalsAll.reduce((a, b) => a + b, 0);\n    const avgScored = sum / teamGoalsAll.length || 0;\n    form.avgScored = parseFloat(avgScored.toFixed(2));\n\n    const sumHome = teamGoalsHome.reduce((a, b) => a + b, 0);\n    const avgScoredHome = sumHome / teamGoalsHome.length || 0;\n    form.avgScoredHome = parseFloat(avgScoredHome.toFixed(2));\n\n    const sumAway = teamGoalsAway.reduce((a, b) => a + b, 0);\n    const avgScoredAway = sumAway / teamGoalsAway.length || 0;\n    form.avgScoredAway = parseFloat(avgScoredAway.toFixed(2));\n\n    const last5 = teamGoalsAll.reverse().slice(0, 5);\n    const last5Sum = last5.reduce((a, b) => a + b, 0);\n    const last5AvgScored = parseFloat(last5Sum / last5.length || 0);\n\n    const last5Home = teamGoalsHome.slice(0, 5);\n    const last5SumHome = last5Home.reduce((a, b) => a + b, 0);\n    form.last5AvgScoredHome = parseFloat(last5SumHome / last5Home.length || 0);\n\n    const last5Away = teamGoalsAway.slice(0, 5);\n    const last5SumAway = last5Away.reduce((a, b) => a + b, 0);\n    form.last5AvgScoredAway = parseFloat(last5SumAway / last5Away.length || 0);\n\n    const last5Conceeded = teamConceededAll.reverse().slice(0, 5);\n    const last5ConceededSum = last5Conceeded.reduce((a, b) => a + b, 0);\n    const last5AvgConceeded = parseFloat(\n      last5ConceededSum / last5Conceeded.length || 0\n    );\n\n    const last5ConceededHome = teamConceededHome.slice(0, 5);\n    const last5ConceededSumHome = last5ConceededHome.reduce((a, b) => a + b, 0);\n    form.last5AvgConceededHome = parseFloat(\n      last5ConceededSumHome / last5ConceededHome.length || 0\n    );\n\n    const last5ConceededAway = teamConceededAway.slice(0, 5);\n    const last5ConceededSumAway = last5ConceededAway.reduce((a, b) => a + b, 0);\n    form.last5AvgConceededAway = parseFloat(\n      last5ConceededSumAway / last5ConceededAway.length || 0\n    );\n\n    const last10 = teamGoalsAll.slice(0, 10);\n    const last10Sum = last10.reduce((a, b) => a + b, 0);\n    const last10AvgScored = parseFloat(last10Sum / last10.length || 0);\n\n    const last10Conceeded = teamConceededAll.slice(0, 10);\n    const last10ConceededSum = last10Conceeded.reduce((a, b) => a + b, 0);\n    const last10AvgConceeded = parseFloat(\n      last10ConceededSum / last10Conceeded.length || 0\n    );\n\n    form.last5Goals = parseFloat(last5AvgScored.toFixed(2));\n    form.last5GoalsConceeded = parseFloat(last5AvgConceeded.toFixed(2));\n    form.last5GoalDiff = form.last5Goals - form.last5GoalsConceeded;\n    form.last10Goals = parseFloat(last10AvgScored.toFixed(2));\n    form.last10GoalsConceeded = parseFloat(last10AvgConceeded.toFixed(2));\n    form.last10GoalDiff = form.last10Goals - form.last10GoalsConceeded;\n\n    const teamGoalsAllRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsAll,\n      teamGoalsAll.length < r ? teamGoalsAll.length : r\n    );\n\n    const teamGoalsConceededAllRollingAverage =\n      await predictNextWeightedMovingAverage(\n        last10Conceeded,\n        last10Conceeded.length < 10 ? last10Conceeded.length : 10\n      );\n\n    const sumTwo = teamConceededAll.reduce((a, b) => a + b, 0);\n    const avgConceeded = sumTwo / teamConceededAll.length || 0;\n    form.avgConceeded = parseFloat(avgConceeded.toFixed(2));\n\n    const teamConceededHomeOnlySum = teamConceededHome.reduce(\n      (a, b) => a + b,\n      0\n    );\n    const teamConceededAvgHomeOnly =\n      teamConceededHomeOnlySum / teamConceededHome.length || 0;\n    form.teamConceededAvgHomeOnly = teamConceededAvgHomeOnly;\n\n    const teamConceededAwayOnlySum = teamConceededAway.reduce(\n      (a, b) => a + b,\n      0\n    );\n    const teamConceededAvgAwayOnly =\n      teamConceededAwayOnlySum / teamConceededAway.length || 0;\n    form.teamConceededAvgAwayOnly = teamConceededAvgAwayOnly;\n\n    form.goalDifference = sum - sumTwo;\n\n    // console.log(teamGoalsHomeRollingAverage)\n    // console.log(teamGoalsAwayRollingAverage)\n    // console.log(teamGoalsAllRollingAverage)\n    // console.log(teamConceededHomeRollingAverage)\n    // console.log(teamConceededAwayRollingAverage)\n    // console.log(teamGoalsConceededAllRollingAverage)\n    // console.log(averageOddsHome)\n    // console.log(averageOddsAway)\n    // console.log(avgScored)\n    // console.log(avgConceeded)\n    // console.log(form.XGPrediction)\n    // console.log(forAndAgainstRollingAvHomeOrAway)\n    // console.log(forAndAgainstRollingAv)\n\n    return [\n      teamGoalsHomeRollingAverage,\n      teamGoalsAwayRollingAverage,\n      teamGoalsAllRollingAverage,\n      teamConceededHomeRollingAverage,\n      teamConceededAwayRollingAverage,\n      teamGoalsConceededAllRollingAverage,\n      averageOddsHome,\n      averageOddsAway,\n      avgScored,\n      avgConceeded,\n      bttsAllString,\n      bttsHomeString,\n      bttsAwayString,\n      bttsAllPercentage,\n      bttsHomePercentage,\n      bttsAwayPercentage,\n      forAndAgainstRollingAvHomeOrAway,\n      forAndAgainstRollingAv,\n    ];\n  } else {\n    console.log(form.teamName);\n    return null;\n  }\n}\n\nasync function predictNextWeightedMovingAverage(numbers, windowSize) {\n  const startIndex = numbers.length - windowSize;\n  const window = numbers.slice(startIndex);\n  const weights = Array.from(\n    { length: windowSize },\n    (_, i) => (i + 1) / ((windowSize * (windowSize + 1)) / 2)\n  );\n  const sum = window.reduce((acc, num, i) => acc + num * weights[i], 0);\n  const movingAverage = sum / weights.reduce((acc, w) => acc + w, 0);\n  return parseFloat(movingAverage.toFixed(2));\n}\n\n// Function to calculate the weighted average using exponential smoothing\nasync function calculateWeightedAverage(arr, alpha) {\n  let weightedSum = 0;\n  let totalWeight = 0;\n\n  for (let i = arr.length - 1; i >= 0; i--) {\n    const weight = Math.pow(1 - alpha, arr.length - 1 - i);\n    weightedSum += arr[i] * weight;\n    totalWeight += weight;\n  }\n\n  return weightedSum / totalWeight;\n}\n\n// Function to predict goals scored and conceded for a team with exponential smoothing\nasync function predictGoalsWithExponentialSmoothing(\n  teamGoalsFor,\n  teamGoalsAgainst,\n  alpha\n) {\n  const lambdaFor = await calculateWeightedAverage(teamGoalsFor, alpha);\n  const lambdaAgainst = await calculateWeightedAverage(teamGoalsAgainst, alpha);\n\n  // You can fine-tune these values based on your model and data\n  const predictedGoalsFor = lambdaFor;\n  const predictedGoalsAgainst = lambdaAgainst;\n\n  return {\n    goalsFor: predictedGoalsFor,\n    goalsAgainst: predictedGoalsAgainst,\n  };\n}\n\nasync function calculateDifference(num1, num2) {\n  return num1 >= num2 ? num1 - num2 : -(num2 - num1);\n}\n\nexport async function comparison(metricOne, metricTwo) {\n  let stat1 = parseFloat(metricOne);\n  let stat2 = parseFloat(metricTwo);\n  let statDiff;\n\n  statDiff = await calculateDifference(stat1, stat2);\n\n  return parseFloat(statDiff);\n}\n\nexport async function compareStat(statOne, statTwo) {\n  let stat1 = parseFloat(statOne);\n  let stat2 = parseFloat(statTwo);\n  let statDiff;\n  // console.log( await normalizeValues(12, 2, 0, 1))\n  // console.log(await diff(1.8571428571428571, 1.14285714285714285))\n\n  if (stat1 === 0) {\n    stat1 = stat1 + 1;\n    stat2 = stat2 + 1;\n  }\n  if (stat2 === 0) {\n    stat2 = stat2 + 1;\n    stat2 = stat2 + 1;\n  }\n\n  const { normalizedValue1, normalizedValue2 } = await normalizeValues(\n    stat1,\n    stat2,\n    0,\n    1\n  );\n\n  const finalValue1 = normalizedValue1;\n  const finalValue2 = normalizedValue2;\n\n  statDiff = await diff(finalValue1, finalValue2);\n\n  // if (statDiff > 0.3 || statDiff < -0.3) {\n  //   // console.log(statDiff)\n  // } else {\n  //   statDiff = 0;\n  // }\n  return statDiff;\n}\n\nexport async function getClinicalRating(form) {\n  let rating;\n  let score;\n  switch (true) {\n    case form.dangerousAttackConversion <= 15:\n      rating = \"excellent\";\n      score = 0.8;\n      break;\n\n    case form.dangerousAttackConversion > 15 &&\n      form.dangerousAttackConversion <= 20:\n      rating = \"great\";\n      score = 0.9;\n      break;\n\n    case form.dangerousAttackConversion > 20 &&\n      form.dangerousAttackConversion <= 25:\n      rating = \"very good\";\n      score = 0.95;\n      break;\n\n    case form.dangerousAttackConversion > 25 &&\n      form.dangerousAttackConversion <= 32.5:\n      rating = \"good\";\n      score = 0.98;\n      break;\n\n    case form.dangerousAttackConversion > 30 &&\n      form.dangerousAttackConversion <= 35:\n      rating = \"above average\";\n      score = 0.99;\n      break;\n\n    case form.dangerousAttackConversion > 35 &&\n      form.dangerousAttackConversion <= 40:\n      rating = \"average\";\n      score = 1;\n      break;\n\n    case form.dangerousAttackConversion > 40 &&\n      form.dangerousAttackConversion <= 45:\n      rating = \"below average\";\n      score = 1.01;\n      break;\n\n    case form.dangerousAttackConversion > 45 &&\n      form.dangerousAttackConversion <= 50:\n      rating = \"poor\";\n      score = 1.05;\n      break;\n\n    case form.dangerousAttackConversion > 50 &&\n      form.dangerousAttackConversion <= 55:\n      rating = \"very poor\";\n      score = 1.1;\n      break;\n\n    case form.dangerousAttackConversion > 55 &&\n      form.dangerousAttackConversion <= 60:\n      rating = \"terrible\";\n      score = 1.2;\n      break;\n\n    case form.dangerousAttackConversion > 60:\n      rating = \"awful\";\n      score = 1.3;\n      break;\n\n    default:\n      break;\n  }\n\n  return [rating, score];\n}\n\nexport async function getPointsDifferential(pointsHomeAvg, pointsAwayAvg) {\n  const differential = await diff(pointsHomeAvg, pointsAwayAvg);\n  return parseFloat(differential);\n}\n\nexport async function getPointWeighting(pointsDiff) {\n  let pointsDiffWeightingHome;\n  let pointsDiffWeightingAway;\n\n  switch (true) {\n    case pointsDiff >= 2.5:\n      pointsDiffWeightingHome = 0.3;\n      pointsDiffWeightingAway = -0.3;\n      break;\n    case pointsDiff >= 2 && pointsDiff < 2.5:\n      pointsDiffWeightingHome = 0.2;\n      pointsDiffWeightingAway = -0.2;\n      break;\n    case pointsDiff >= 1.5 && pointsDiff < 2:\n      pointsDiffWeightingHome = 0.15;\n      pointsDiffWeightingAway = -0.15;\n      break;\n    case pointsDiff >= 1 && pointsDiff < 1.5:\n      pointsDiffWeightingHome = 0.1;\n      pointsDiffWeightingAway = -0.1;\n      break;\n    case pointsDiff >= 0.5 && pointsDiff < 1:\n      pointsDiffWeightingHome = 0.05;\n      pointsDiffWeightingAway = -0.05;\n      break;\n    case pointsDiff > -0.5 && pointsDiff < 0.5:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n      break;\n    case pointsDiff <= -0.5 && pointsDiff > -1:\n      pointsDiffWeightingHome = -0.05;\n      pointsDiffWeightingAway = 0.05;\n      break;\n    case pointsDiff <= -1 && pointsDiff > -1.5:\n      pointsDiffWeightingHome = -0.1;\n      pointsDiffWeightingAway = 0.1;\n      break;\n    case pointsDiff <= -1.5 && pointsDiff > -2:\n      pointsDiffWeightingHome = -0.15;\n      pointsDiffWeightingAway = 0.15;\n      break;\n    case pointsDiff <= -2 && pointsDiff > -2.5:\n      pointsDiffWeightingHome = -0.2;\n      pointsDiffWeightingAway = 0.2;\n      break;\n    case pointsDiff <= -2.5:\n      pointsDiffWeightingHome = -0.3;\n      pointsDiffWeightingAway = 0.3;\n      break;\n    default:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n  }\n  return [pointsDiffWeightingHome, pointsDiffWeightingAway];\n}\n\nexport async function compareFormTrend(recentForm, distantForm) {\n  let score;\n  let scoreTotal = 0;\n\n  for (let index = 0; index < recentForm.length; index++) {\n    const recent = recentForm[index];\n    const distant = distantForm[index];\n\n    if (recent > distant) {\n      score = 1.05;\n    } else if (recent === distant) {\n      score = 1;\n    } else if (recent < distant) {\n      score = 0.95;\n    }\n    scoreTotal = scoreTotal + score / recentForm.length;\n  }\n\n  return scoreTotal;\n}\n\nexport async function getPointAverage(pointTotal, games) {\n  return pointTotal / games;\n}\n\nasync function poissonDistribution(lambda, k) {\n  const numerator = Math.exp(-lambda) * Math.pow(lambda, k);\n  const denominator = factorial(k);\n  return numerator / denominator;\n}\n\nfunction factorial(n) {\n  if (n === 0 || n === 1) {\n    return 1;\n  }\n  let result = 1;\n  for (let i = 2; i <= n; i++) {\n    result *= i;\n  }\n  return result;\n}\n\nasync function calculateAverageGoals(goalsFor) {\n  const totalGoals = goalsFor.reduce((sum, goals) => sum + goals, 0);\n  return totalGoals / goalsFor.length;\n}\n\nasync function adjustGoalsAvg(goalsAvg, strengthRatio) {\n  return goalsAvg * strengthRatio;\n}\n\nasync function normalizeDifference(value1, value2) {\n  // Calculate the absolute difference between the two values\n  const difference = Math.abs(value1 - value2);\n\n  // Define a fixed maximum possible difference (you can adjust this value based on your needs)\n  const maxDifference = 25; // Adjust this based on your expected data\n\n  // Normalize the difference to a 0-1 range\n  const normalizedDifference = difference / maxDifference;\n\n  // Map to range 0.25 to 1.75 inversely for value1 and value2\n  const scaleMin = 0.8;\n  const scaleMax = 1.2;\n\n  // The multiplier now stretches across the 0.25 to 1.75 range (difference is 1.5)\n  const multiplier = 0.2;\n\n  let value1Normalized, value2Normalized;\n\n  if (value1 > value2) {\n    value1Normalized = 1 + normalizedDifference * multiplier; // Closer to 1.75\n    value2Normalized = 1 - normalizedDifference * multiplier; // Closer to 0.25\n  } else if (value1 < value2) {\n    value1Normalized = 1 - normalizedDifference * multiplier; // Closer to 0.25\n    value2Normalized = 1 + normalizedDifference * multiplier; // Closer to 1.75\n  } else {\n    // If the values are equal, normalize both to 1\n    value1Normalized = 1;\n    value2Normalized = 1;\n  }\n\n  return {\n    value1Normalized: Math.max(scaleMin, Math.min(value1Normalized, scaleMax)),\n    value2Normalized: Math.max(scaleMin, Math.min(value2Normalized, scaleMax)),\n  };\n}\n\nasync function predictScore(\n  goalsForTeam1,\n  goalsAgainstTeam1,\n  goalsForTeam2,\n  goalsAgainstTeam2,\n  team1Metrics,\n  team2Metrics,\n  game\n) {\n  let team1AverageGoalsFor = await calculateAverageGoals(goalsForTeam1);\n  let team1AverageGoalsAgainst = await calculateAverageGoals(goalsAgainstTeam1);\n  let team2AverageGoalsFor = await calculateAverageGoals(goalsForTeam2);\n  let team2AverageGoalsAgainst = await calculateAverageGoals(goalsAgainstTeam2);\n\n  let team1StrengthRatio = 1;\n  let team2StrengthRatio = 1;\n\n  let adjustedTeam1AverageGoals = await adjustGoalsAvg(\n    team1AverageGoalsFor,\n    team1StrengthRatio\n  );\n  let adjustedTeam2AverageGoals = await adjustGoalsAvg(\n    team2AverageGoalsFor,\n    team2StrengthRatio\n  );\n\n  let adjustedTeam1AverageGoalsAgainst = await adjustGoalsAvg(\n    team1AverageGoalsAgainst,\n    team2StrengthRatio\n  );\n  let adjustedTeam2AverageGoalsAgainst = await adjustGoalsAvg(\n    team2AverageGoalsAgainst,\n    team1StrengthRatio\n  );\n\n  let maxGoals = 5; // Set the maximum number of goals to predict\n\n  const scores = [];\n\n  for (let i = 0; i <= maxGoals; i++) {\n    for (let j = 0; j <= maxGoals; j++) {\n      let team1GoalExpectation =\n        (adjustedTeam1AverageGoals + adjustedTeam2AverageGoalsAgainst) / 2;\n      // (adjustedTeam2AverageGoalsAgainst / adjustedTeam1AverageGoalsAgainst);\n      let team2GoalExpectation =\n        (adjustedTeam2AverageGoals + adjustedTeam1AverageGoalsAgainst) / 2;\n      // (adjustedTeam1AverageGoalsAgainst / adjustedTeam2AverageGoalsAgainst);\n\n      if (!isFinite(team1GoalExpectation)) {\n        team1GoalExpectation = 0;\n      }\n\n      if (!isFinite(team2GoalExpectation)) {\n        team2GoalExpectation = 0;\n      }\n\n      const probability =\n        (await poissonDistribution(team1GoalExpectation, i)) *\n        (await poissonDistribution(team2GoalExpectation, j));\n      scores.push({\n        team1Score: i,\n        team2Score: j,\n        probability,\n      });\n    }\n  }\n\n  scores.sort((a, b) => b.probability - a.probability); // Sort scores in descending order by probability\n  const top5Scores = scores.slice(0, 5); // Get the top 5 scores\n\n  // for (const score of top5Scores) {\n  //   console.log(\n  //     `Team 1: ${score.team1Score} - Team 2: ${score.team2Score} (${(\n  //       score.probability * 100\n  //     ).toFixed(2)}%)`\n  //   );\n  // }\n  return top5Scores;\n}\n\nasync function normalizeValues(value1, value2, minRange, maxRange) {\n  if (\n    typeof value1 !== \"number\" ||\n    typeof value2 !== \"number\" ||\n    typeof minRange !== \"number\" ||\n    typeof maxRange !== \"number\"\n  ) {\n    throw new Error(\"All arguments must be numbers.\");\n  }\n\n  // Calculate the absolute values of the inputs\n\n  const absValue1 = Math.abs(value1);\n  const absValue2 = Math.abs(value2);\n\n  // Calculate the total sum of the absolute values\n  const totalAbs = absValue1 + absValue2;\n\n  // Calculate the normalized values based on the ratio of absolute values\n  const normalizedAbsValue1 =\n    (absValue1 / totalAbs) * (maxRange - minRange) + minRange;\n  const normalizedAbsValue2 =\n    (absValue2 / totalAbs) * (maxRange - minRange) + minRange;\n\n  // Adjust the signs of the normalized values based on the original values\n  const normalizedValue1 =\n    value1 >= 0 ? normalizedAbsValue1 : -normalizedAbsValue1;\n  const normalizedValue2 =\n    value2 >= 0 ? normalizedAbsValue2 : -normalizedAbsValue2;\n\n  return { normalizedValue1, normalizedValue2 };\n}\n\nexport async function generateGoals(homeForm, awayForm, match) {\n  let homeGoals = 0;\n  let awayGoals = 0;\n\n  const homeAttackVsAwayDefenceComparison = await comparison(\n    homeForm.attackingStrength,\n    awayForm.defensiveStrengthScoreGeneration\n  );\n  const awayAttackVsHomeDefenceComparison = await comparison(\n    awayForm.attackingStrength,\n    homeForm.defensiveStrengthScoreGeneration\n  );\n\n  const homeOverallVsAwayOverallComparison = await comparison(\n    homeForm.attackingStrength + homeForm.defensiveStrength,\n    awayForm.attackingStrength + awayForm.defensiveStrength\n  );\n\n  const awayOverallVsHomeOverallComparison = await comparison(\n    awayForm.attackingStrength + awayForm.defensiveStrength,\n    homeForm.attackingStrength + homeForm.defensiveStrength\n  );\n\n  const homeAttackVsAwayDefenceComparisonLast5 = await comparison(\n    homeForm.attackingStrengthLast5,\n    awayForm.defensiveStrengthScoreGenerationLast5\n  );\n  const awayAttackVsHomeDefenceComparisonLast5 = await comparison(\n    awayForm.attackingStrengthLast5,\n    homeForm.defensiveStrengthScoreGenerationLast5\n  );\n\n  const homeAttackVsAwayDefenceComparisonHomeOnly = await comparison(\n    homeForm.attackingStrengthHomeOnly,\n    awayForm.defensiveStrengthScoreGenerationAwayOnly\n  );\n  const awayAttackVsHomeDefenceComparisonAwayOnly = await comparison(\n    awayForm.attackingStrengthAwayOnly,\n    homeForm.defensiveStrengthScoreGenerationHomeOnly\n  );\n\n  const pointsComparisonHome = await comparison(\n    homeForm.avPoints6,\n    awayForm.avPoints6\n  );\n\n  const pointsComparisonAway = await comparison(\n    awayForm.avPoints6,\n    homeForm.avPoints6\n  );\n\n  const oddsComparisonHome = await comparison(match.awayOdds, match.homeOdds);\n  const oddsComparisonAway = await comparison(match.homeOdds, match.awayOdds);\n\n  homeForm.XGRating =\n    homeForm.attackingStrength +\n    homeForm.defensiveStrengthScoreGeneration +\n    homeForm.attackingStrengthLast5 +\n    homeForm.defensiveStrengthScoreGenerationLast5 +\n    homeForm.attackingStrengthHomeOnly +\n    homeForm.defensiveStrengthScoreGenerationHomeOnly;\n\n  awayForm.XGRating =\n    awayForm.attackingStrength +\n    awayForm.defensiveStrengthScoreGeneration +\n    awayForm.attackingStrengthLast5 +\n    awayForm.defensiveStrengthScoreGenerationLast5 +\n    awayForm.attackingStrengthAwayOnly +\n    awayForm.defensiveStrengthScoreGenerationAwayOnly;\n\n  const XGRatingHomeComparison = await comparison(\n    homeForm.XGRating,\n    awayForm.XGRating\n  );\n\n  const XGRatingAwayComparison = await comparison(\n    awayForm.XGRating,\n    homeForm.XGRating\n  );\n\n  const weighedPointsComparisonHome = await comparison(\n    homeForm.pointsWeighted,\n    homeForm.points\n  );\n\n  const weighedPointsComparisonAway = await comparison(\n    awayForm.pointsWeighted,\n    awayForm.points\n  );\n\n  homeGoals =\n    0 +\n    homeAttackVsAwayDefenceComparison * 4 +\n    XGRatingHomeComparison * 1 +\n    homeAttackVsAwayDefenceComparisonLast5 * 4 +\n    homeAttackVsAwayDefenceComparisonHomeOnly * 1 +\n    // weighedPointsComparisonHome * 0.1 +\n    oddsComparisonHome * 0;\n\n  awayGoals =\n    0 +\n    awayAttackVsHomeDefenceComparison * 4 +\n    XGRatingAwayComparison * 1 +\n    awayAttackVsHomeDefenceComparisonLast5 * 4 +\n    awayAttackVsHomeDefenceComparisonAwayOnly * 1 +\n    // weighedPointsComparisonAway * 0.1 +\n    oddsComparisonAway * 0;\n\n  // if (homeForm.actualToXGDifference > 0.5) {\n  //   homeGoals = homeGoals + homeForm.actualToXGDifference / 10;\n  // } else if (homeForm.actualToXGDifference < -0.5) {\n  //   homeGoals = homeGoals + homeForm.actualToXGDifference / 10;\n  // }\n\n  // if (awayForm.actualToXGDifference > 0.5) {\n  //   awayGoals = awayGoals + awayForm.actualToXGDifference / 10;\n  // } else if (awayForm.actualToXGDifference < -0.5) {\n  //   awayGoals = awayGoals + awayForm.actualToXGDifference / 10;\n  // }\n\n  if (homeForm.lastGame === \"L\" && homeForm.previousToLastGame === \"L\") {\n    homeGoals = homeGoals * 0.5;\n  } else if (awayForm.lastGame === \"L\" && awayForm.previousToLastGame === \"L\") {\n    awayGoals = awayGoals * 0.5;\n  } else if (homeForm.lastGame === \"L\") {\n    homeGoals = homeGoals * 0.8;\n  } else if (awayForm.lastGame === \"L\") {\n    awayGoals = awayGoals * 0.8;\n  }\n\n  // if(homeForm.last5Points > homeForm.last10Points){\n  //   homeGoals = homeGoals + 0.1;\n  //   awayGoals = awayGoals - 0.1;\n\n  // } else if (awayForm.last5Points > awayForm.last10Points){\n  //   awayGoals = awayGoals + 0.1;\n  //   homeGoals = homeGoals - 0.1;\n  // }\n\n  // Cumalative ROI for all 2193 match outcomes: + 4.18%\n\n  // if (homeGoals < 0 && awayGoals < 0) {\n  //   if (homeGoals < awayGoals) {\n  //     homeGoals = homeGoals + awayGoals / 5;\n  //     awayGoals = awayGoals - homeGoals / 5;\n  //   } else if (homeGoals > awayGoals) {\n  //     homeGoals = homeGoals - awayGoals / 5;\n  //     awayGoals = awayGoals + homeGoals / 5;\n  //   }\n  // } else if (homeGoals < 0) {\n  //   awayGoals = awayGoals + Math.abs(homeGoals) / 2;\n  // } else if (awayGoals < 0) {\n  //   homeGoals = homeGoals + Math.abs(awayGoals) / 2;\n  // }\n\n  return [homeGoals, awayGoals];\n}\n\nexport async function compareTeams(homeForm, awayForm, match) {\n  // let homeAttackStrength = homeForm.attackingStrength;\n  // let homeDefenceStrength = homeForm.defensiveStrength;\n  // let homePossessionStrength = homeForm.possessionStrength;\n  // let awayAttackStrength = awayForm.attackingStrength;\n  // let awayDefenceStrength = awayForm.defensiveStrength;\n  // let awayPossessionStrength = awayForm.possessionStrength;\n  // let homeAttackStrengthLast5 = homeForm.attackingStrengthLast5;\n  // let homeDefenceStrengthLast5 = homeForm.defensiveStrengthLast5;\n  // let homePossessionStrengthLast5 = homeForm.possessionStrengthLast5;\n  // let awayAttackStrengthLast5 = awayForm.attackingStrengthLast5;\n  // let awayDefenceStrengthLast5 = awayForm.defensiveStrengthLast5;\n  // let awayPossessionStrengthLast5 = awayForm.possessionStrengthLast5;\n  // let homeAttackStrengthHome = homeForm.attackingStrengthHomeOnly;\n  // let homeDefenceStrengthHome = homeForm.defensiveStrengthHomeOnly;\n  // let homePossessionStrengthHome = homeForm.possessionStrengthHomeOnly;\n  // let awayAttackStrengthAway = awayForm.attackingStrengthAwayOnly;\n  // let awayDefenceStrengthAway = awayForm.defensiveStrengthAwayOnly;\n  // let awayPossessionStrengthAway = awayForm.possessionStrengthAwayOnly;\n  // const attackStrengthComparison = await compareStat(\n  //   homeAttackStrength,\n  //   awayAttackStrength\n  // );\n  // const attackStrengthHAComparison = await compareStat(\n  //   homeAttackStrengthHome,\n  //   awayAttackStrengthAway\n  // );\n  // const defenceStrengthComparison = await compareStat(\n  //   homeDefenceStrength,\n  //   awayDefenceStrength\n  // );\n  // const defenceStrengthHAComparison = await compareStat(\n  //   homeDefenceStrengthHome,\n  //   awayDefenceStrengthAway\n  // );\n  // const attackStrengthComparisonLast5 = await compareStat(\n  //   homeAttackStrengthLast5,\n  //   awayAttackStrengthLast5\n  // );\n  // const defenceStrengthComparisonLast5 = await compareStat(\n  //   homeDefenceStrengthLast5,\n  //   awayDefenceStrengthLast5\n  // );\n  // const possessiontrengthComparison = await compareStat(\n  //   homePossessionStrength,\n  //   awayPossessionStrength\n  // );\n  // const possessiontrengthComparisonLast5 = await compareStat(\n  //   homePossessionStrengthLast5,\n  //   awayPossessionStrengthLast5\n  // );\n  // const possessionHAStrengthComparison = await compareStat(\n  //   homePossessionStrengthHome,\n  //   awayPossessionStrengthAway\n  // );\n  // // const xgActualComparison = await compareStat(\n  // //   homeForm.actualToXGDifference,\n  // //   awayForm.actualToXGDifference\n  // // );\n  // // const XGComparison = await compareStat(\n  // //   homeForm.XGDiffNonAverage,\n  // //   awayForm.XGDiffNonAverage\n  // // );\n  // // const XGComparisonLast5 = await compareStat(\n  // //   homeForm.XGDiffNonAverageLast5,\n  // //   awayForm.XGDiffNonAverageLast5\n  // // )\n  // const homeAwayPointAverageComparison = await compareStat(\n  //   homeForm.homeOrAwayAverage,\n  //   awayForm.homeOrAwayAverage\n  // );\n  // // const fiveGameComparison = await compareStat(\n  // //   homeForm.last5Points,\n  // //   awayForm.last5Points\n  // // );\n  // // const last5GDComparison = await compareStat(\n  // //   homeForm.last5GoalDiff,\n  // //   awayForm.last5GoalDiff\n  // // )\n  // let oddsComparison = await compareStat(match.awayOdds, match.homeOdds);\n  // // const homeAdvantage = await compareStat(\n  // //   parseFloat(homeForm.homeAttackAdvantage) / 2,\n  // //   1\n  // // );\n  // // const dangerousAttacksWithConverstionComparison = await compareStat(\n  // //   homeForm.AverageDangerousAttacksOverall *\n  // //     homeForm.dangerousAttackConversion,\n  // //   awayForm.AverageDangerousAttacksOverall * awayForm.dangerousAttackConversion\n  // // );\n  // match.goalDiffHomeOrAwayComparison =\n  //   parseFloat(homeForm.goalDifferenceHomeOrAway) -\n  //   parseFloat(awayForm.goalDifferenceHomeOrAway);\n  // match.goalDifferenceComparison =\n  //   parseFloat(homeForm.goalDifference) - parseFloat(awayForm.goalDifference);\n  // const goalDiffHomeOrAwayComparison = await compareStat(\n  //   homeForm.goalDifferenceHomeOrAway,\n  //   awayForm.goalDifferenceHomeOrAway\n  // );\n  // const overallDirectnessComparison = await compareStat(\n  //   homeForm.directnessOverallStrength,\n  //   awayForm.directnessOverallStrength\n  // );\n  // // const hOrADirectnessComparison = await compareStat(\n  // //   homeForm.directnessHomeOnly,\n  // //   awayForm.directnessAwayOnly\n  // // );\n  // const accuracyComparison = await compareStat(\n  //   homeForm.accuracyOverallStrength,\n  //   awayForm.accuracyOverallStrength\n  // );\n  // const accuracyComparisonLast5 = await compareStat(\n  //   homeForm.accuracyOverallStrengthLast5,\n  //   awayForm.accuracyOverallStrengthLast5\n  // );\n  // // console.log(match.game)\n  // // console.log(attackStrengthComparison);\n  // // console.log(defenceStrengthComparison);\n  // // console.log(possessiontrengthComparison);\n  // // console.log(attackStrengthComparisonLast5);\n  // // console.log(defenceStrengthComparisonLast5);\n  // // console.log(attackStrengthHAComparison);\n  // // console.log(defenceStrengthHAComparison);\n  // // console.log(homeAwayPointAverageComparison);\n  // // console.log(goalDiffHomeOrAwayComparison);\n  // // // console.log(oddsComparison);\n  // // console.log(overallDirectnessComparison);\n  // // console.log(accuracyComparisonLast5);\n  // // console.log(accuracyComparison);\n  // // let calculation =\n  // //   attackStrengthComparison * 0 +\n  // //   attackStrengthComparisonLast5 * 0 +\n  // //   attackStrengthHAComparison * 1 +\n  // //   defenceStrengthComparison * 0 +\n  // //   defenceStrengthComparisonLast5 * 0 +\n  // //   defenceStrengthHAComparison * 1 +\n  // //   possessiontrengthComparison * 0 +\n  // //   possessionHAStrengthComparison * 0 +\n  // //   possessiontrengthComparisonLast5 * 1 +\n  // //   // xgToActualDiffComparison * 1 +\n  // //   // xgForStrengthRecentComparison * 1 +\n  // //   // xgAgainstStrengthRecentComparison * 1 +\n  // //   homeAwayPointAverageComparison * 5 +\n  // //   goalDiffHomeOrAwayComparison * 0 +\n  // //   // xgActualComparison * 0 +\n  // //   // xgForComparison * 1 +\n  // //   // xgAgainstComparison * 1 +\n  // //   // XGComparison * 0 +\n  // //   oddsComparison * 2 +\n  // //   // dangerousAttacksWithConverstionComparison * 0.05 +\n  // //   overallDirectnessComparison * 0 +\n  // //   // hOrADirectnessComparison * 0 +\n  // //   accuracyComparisonLast5 * 0 +\n  // //   accuracyComparison * 0;\n  // // // console.log(match.game)\n  // // // console.log(calculation)\n  // let calculation =\n  //   attackStrengthComparisonLast5 * 2 +\n  //   attackStrengthHAComparison * 1 +\n  //   defenceStrengthComparisonLast5 * 2 +\n  //   defenceStrengthHAComparison * 1 +\n  //   possessionHAStrengthComparison * 1 +\n  //   possessiontrengthComparisonLast5 * 1 +\n  //   possessiontrengthComparison * 1 +\n  //   // xgToActualDiffComparison * 1 +\n  //   // xgForStrengthRecentComparison * 1 +\n  //   // xgAgainstStrengthRecentComparison * 1 +\n  //   homeAwayPointAverageComparison * 2 +\n  //   goalDiffHomeOrAwayComparison * 0 +\n  //   // xgActualComparison * 1 +\n  //   // xgForComparison * 1 +\n  //   // xgAgainstComparison * 1 +\n  //   oddsComparison * 0 +\n  //   // dangerousAttacksWithConverstionComparison * 0.05 +\n  //   overallDirectnessComparison * 0 +\n  //   accuracyComparison * 1;\n  // let homeWinOutcomeProbability =\n  //   match.homeTeamWinPercentage + match.awayTeamLossPercentage;\n  // let awayWinOutcomeProbability =\n  //   match.homeTeamLossPercentage + match.awayTeamWinPercentage;\n  // let drawOutcomeProbability =\n  //   match.homeTeamDrawPercentage + match.awayTeamDrawPercentage;\n  // if (\n  //   drawOutcomeProbability > homeWinOutcomeProbability &&\n  //   drawOutcomeProbability > awayWinOutcomeProbability\n  // ) {\n  //   switch (true) {\n  //     case drawOutcomeProbability > 100:\n  //       calculation = calculation / 3;\n  //       break;\n  //     default:\n  //       calculation = calculation * 1;\n  //       break;\n  //   }\n  // } else {\n  //   calculation = calculation * 1;\n  // }\n  // if (calculation > 0) {\n  //   if (\n  //     homeForm.lastGame === \"L\" ||\n  //     homeForm.last2Points < 2 ||\n  //     awayForm.last2Points >= 5 ||\n  //     match.XGdifferentialValueRaw < 0\n  //   ) {\n  //     calculation = calculation / 2;\n  //   }\n  // } else if (calculation < 0) {\n  //   if (\n  //     awayForm.lastGame === \"L\" ||\n  //     awayForm.last2Points < 2 ||\n  //     homeForm.last2Points >= 5 ||\n  //     match.XGdifferentialValueRaw > 0\n  //   ) {\n  //     calculation = calculation / 2;\n  //   }\n  // }\n  // // if (homeForm.averageOddsHome !== null || awayForm.averageOddsAway !== null) {\n  // //   if (\n  // //     calculation > 0 &&\n  // //     homeForm.averageOddsHome < match.homeOdds &&\n  // //     awayForm.averageOddsAway > match.awayOdds\n  // //   ) {\n  // //     calculation = calculation / 2;\n  // //   } else if (\n  // //     calculation > 0 &&\n  // //     homeForm.averageOddsHome > match.homeOdds &&\n  // //     awayForm.averageOddsAway < match.awayOdds\n  // //   ) {\n  // //     calculation = calculation * 1.25;\n  // //   } else {\n  // //     calculation = calculation * 1;\n  // //   }\n  // //   if (\n  // //     calculation < 0 &&\n  // //     awayForm.averageOddsAway < match.awayOdds &&\n  // //     homeForm.averageOddsHome > match.homeOdds\n  // //   ) {\n  // //     calculation = calculation / 2;\n  // //   } else if (\n  // //     calculation < 0 &&\n  // //     awayForm.averageOddsAway > match.awayOdds &&\n  // //     homeForm.averageOddsHome < match.homeOdds\n  // //   ) {\n  // //     calculation = calculation * 1.25;\n  // //   } else {\n  // //     calculation = calculation * 1;\n  // //   }\n  // // }\n  // if (\n  //   calculation > 0 &&\n  //   homeForm.improving === true &&\n  //   awayForm.improving === false\n  // ) {\n  //   console.log(homeForm);\n  //   calculation = calculation * 1.5;\n  // } else if (\n  //   calculation < 0 &&\n  //   awayForm.improving === true &&\n  //   awayForm.improving === false\n  // ) {\n  //   calculation = calculation * 1.5;\n  // } else if (\n  //   calculation > 0 &&\n  //   homeForm.improving === false &&\n  //   awayForm.improving === true\n  // ) {\n  //   calculation = calculation / 2;\n  // } else if (\n  //   calculation < 0 &&\n  //   awayForm.improving === false &&\n  //   homeForm.improving === true\n  // ) {\n  //   calculation = calculation / 2;\n  // }\n  // // if (\n  // //   (calculation < 0 && homeForm.oddsReliabilityWin < 50) ||\n  // //   (calculation < 0 && awayForm.oddsReliabilityWinAsUnderdog > 45)\n  // // ) {\n  // //   calculation = calculation / 2;\n  // // } else if (\n  // //   (calculation > 0 && awayForm.oddsReliabilityWin < 50) ||\n  // //   (calculation > 0 && homeForm.oddsReliabilityWinAsUnderdog > 45)\n  // // ) {\n  // //   calculation = calculation / 2;\n  // // }\n  // // if (calculation < 0 && homeForm.predictabilityScore < 0.3) {\n  // //   calculation = calculation / 2;\n  // // } else if (calculation > 0 && awayForm.predictabilityScore < 0.3) {\n  // //   calculation = calculation / 2;\n  // // }\n  // return calculation;\n}\n\nexport async function roundCustom(num, form, otherForm) {\n  let wholeNumber = Math.floor(num);\n  let remainder = num - wholeNumber;\n  let goals;\n\n  // switch (true) {\n  //   case remainder >= 0.9:\n  //     switch (true) {\n  //       default:\n  //         goals = Math.round(num);\n  //         break;\n  //     }\n  //     break;\n  //   case remainder >= 0.8 && remainder < 0.9:\n  //     switch (true) {\n  //       case form.actualToXGDifference >= 0:\n  //         goals = Math.ceil(num);\n  //         break;\n  //       case form.actualToXGDifference < 0:\n  //         goals = Math.floor(num);\n  //         break;\n  //       default:\n  //         goals = Math.round(num);\n  //         break;\n  //     }\n  //     break;\n  //   case remainder >= 0.6 && remainder < 0.8:\n  //     switch (true) {\n  //       case form.actualToXGDifference >= 10:\n  //         goals = Math.ceil(num);\n  //         break;\n  //       case form.actualToXGDifference < 10:\n  //         goals = Math.floor(num);\n  //         break;\n  //       default:\n  //         goals = Math.round(num);\n  //         break;\n  //     }\n  //     break;\n  //   case remainder >= 0.5 && remainder < 0.6:\n  //     switch (true) {\n  //       case form.actualToXGDifference >= 20:\n  //         goals = Math.ceil(num);\n  //         break;\n  //       case form.actualToXGDifference < 20:\n  //         goals = Math.floor(num);\n  //         break;\n  //       default:\n  //         goals = Math.round(num);\n  //         break;\n  //     }\n  //     break;\n  //   default:\n  //     goals = Math.floor(num);\n  //     break;\n  // }\n\n  if (remainder > 0.5) {\n    goals = Math.ceil(num);\n  } else {\n    goals = Math.floor(num);\n  }\n\n  return goals;\n}\n\n//Calculates scores based on prior XG figures, weighted by odds\nlet i = 0;\n\nexport async function calculateScore(match, index, divider, calculate) {\n  i++;\n\n  let teams;\n\n  if (\n    calculate === true &&\n    allForm.find(\n      (game) =>\n        game.home.teamName === match.homeTeam &&\n        game.away.teamName === match.awayTeam\n    )\n  ) {\n    teams = [\n      allForm.find((game) => game.home.teamName === match.homeTeam).home,\n      allForm.find((game) => game.away.teamName === match.awayTeam).away,\n    ];\n  } else {\n    calculate = false;\n  }\n\n  let formHome;\n  let formAway;\n\n  if (calculate) {\n    for (let i = 0; i < teams.length; i++) {\n      if (teams[0][index].PlayedHome <= 1 || teams[1][index].PlayedAway <= 1) {\n        index = 2;\n        divider = 10;\n      }\n\n      if (teams[i][index].formRun) {\n        teams[i][index].lastHomeOrAwayPoints = getPointsFromLastX(\n          teams[i][index].formRun\n        );\n\n        teams[i][index].homeOrAwayAverage = await getPointAverage(\n          teams[i][index].lastHomeOrAwayPoints,\n          teams[i][index].formRun.length\n        );\n      }\n\n      teams[i][0].ScoredAverage = teams[i][0].ScoredOverall / 5;\n      teams[i][1].ScoredAverage = teams[i][1].ScoredOverall / 6;\n      teams[i][2].ScoredAverage = teams[i][2].ScoredOverall / 10;\n\n      teams[i][0].ConcededAverage = teams[i][0].ConcededOverall / 5;\n      teams[i][1].ConcededAverage = teams[i][1].ConcededOverall / 6;\n      teams[i][2].ConcededAverage = teams[i][2].ConcededOverall / 10;\n\n      if (teams[i][1].ScoredAverage === 0) {\n        teams[i][1].ScoredAverage = teams[i][index].ScoredOverall / 10;\n        teams[i][1].ScoredOverall = teams[i][2].ScoredOverall / 2;\n      }\n\n      if (teams[i][1].ConcededAverage === 0) {\n        teams[i][1].ConcededAverage = teams[i][index].ConcededOverall / 10;\n        teams[i][1].ConcededOverall = teams[i][2].ConcededOverall / 2;\n      }\n\n      teams[i][index].ScoredAverageShortTerm = teams[i][0].ScoredOverall / 5;\n      teams[i][index].ConcededAverageShortTerm =\n        teams[i][0].ConcededOverall / 5;\n\n      teams[i][index].longTermAverageGoals = teams[i][2].ScoredOverall / 10;\n      teams[i][index].longTermAverageConceeded =\n        teams[i][2].ConcededOverall / 10;\n\n      let recentGoalDiff =\n        teams[i][index].ScoredAverageShortTerm -\n        teams[i][index].ConcededAverageShortTerm;\n      let distantGoalDiff =\n        teams[i][index].longTermAverageGoals -\n        teams[i][index].longTermAverageConceeded;\n\n      let recentDA = teams[i][0].AverageDangerousAttacksOverall;\n      let distantDA = teams[i][2].AverageDangerousAttacksOverall;\n\n      let recentPosession = teams[i][0].AveragePossessionOverall;\n      let distantPosession = teams[i][2].AveragePossessionOverall;\n\n      let recentCleanSheet = teams[i][0].CleanSheetPercentage;\n      let distantCleanSheet = teams[i][2].CleanSheetPercentage;\n\n      let recentFormArray = [\n        recentGoalDiff,\n        recentDA,\n        recentPosession,\n        recentCleanSheet,\n      ];\n      let distantFormArray = [\n        distantGoalDiff,\n        distantDA,\n        distantPosession,\n        distantCleanSheet,\n      ];\n\n      teams[i][index].formTrendScore = await compareFormTrend(\n        recentFormArray,\n        distantFormArray\n      );\n\n      teams[i][index].expectedGoals = parseFloat(teams[i][index].XG);\n\n      teams[i][index].ScoredAverageShortAndLongTerm =\n        (teams[i][index].ScoredOverall / 10 +\n          teams[i][index].ScoredAverageShortTerm) /\n        2;\n\n      teams[i][index].conceededAverageShortAndLongTerm =\n        (teams[i][index].ConcededOverall / 10 +\n          teams[i][index].ConcededAverageShortTerm) /\n        2;\n\n      teams[i][index].longTermGoalDifference =\n        teams[i][2].ScoredAverage - teams[i][2].ConcededAverage;\n\n      teams[i][index].shortTermGoalDifference =\n        teams[i][0].ScoredAverage - teams[i][0].ConcededAverage;\n\n      teams[i][index].XGdifferential = await diff(\n        teams[i][index].XGOverall,\n        teams[i][index].XGAgainstAvgOverall\n      );\n    }\n\n    homeOdds = match.homeOdds;\n    awayOdds = match.awayOdds;\n\n    formHome = teams[0][index];\n    formAway = teams[1][index];\n\n    // if (\n    //   (formHome.XGOverall - formHome.XGAgainstAvgOverall) < (formHome.last5XG - formHome.XGAgainstlast5)\n    // ) {\n    //   formHome.improving = true;\n    // } else {\n    //   formHome.improving = false;\n    // }\n\n    // if (\n    //   (formAway.XGOverall - formAway.XGAgainstAvgOverall) < (formAway.last5XG - formAway.XGAgainstlast5)\n    // ) {\n    //   formAway.improving = true;\n    // } else {\n    //   formAway.improving = false;\n    // }\n\n\n    let homeTwoGameAvg = formHome.last2Points / 2;\n    let awayTwoGameAvg = formAway.last2Points / 2;\n\n\n\n    // let [last10WeightingHome, last10WeightingAway] = await getPointWeighting(\n    //   pointsDiff10\n    // );\n\n    // let [last2WeightingHome, last2WeightingAway] = await getPointWeighting(\n    //   pointsDiff2\n    // );\n\n    formHome.dangerousAttackConversion =\n      (formHome.ScoredAverageShortAndLongTerm /\n        formHome.AverageDangerousAttacksOverall) *\n      100;\n    formAway.dangerousAttackConversion =\n      (formAway.ScoredAverageShortAndLongTerm /\n        formAway.AverageDangerousAttacksOverall) *\n      100;\n\n    [formHome.clinicalRating, formHome.clinicalScore] = await getClinicalRating(\n      formHome\n    );\n    [formAway.clinicalRating, formAway.clinicalScore] = await getClinicalRating(\n      formAway\n    );\n\n    let XGdifferential = await diff(\n      formHome.XGdifferential,\n      formAway.XGdifferential\n    );\n\n    formHome.teamName = match.homeTeam;\n    formAway.teamName = match.awayTeam;\n\n    match.XGdifferentialValue = Math.abs(XGdifferential);\n    match.XGdifferentialValueRaw = parseFloat(XGdifferential);\n    if (\n      allLeagueResultsArrayOfObjects[match.leagueIndex].fixtures.length > 10 &&\n      match.leagueID !== 7956\n    ) {\n      [\n        formHome.predictedGoalsBasedOnHomeAv,\n        formHome.predictedGoalsBasedOnAwayAv,\n        formHome.allTeamGoalsBasedOnAverages,\n        formHome.predictedGoalsConceededBasedOnHomeAv,\n        formHome.predictedGoalsConceededBasedOnAwayAv,\n        formHome.allTeamGoalsConceededBasedOnAverages,\n        formHome.averageOddsHome,\n        formHome.averageOddsAway,\n        formHome.averageScoredLeague,\n        formHome.averageConceededLeague,\n        formHome.last10btts,\n        formHome.last10bttsHome,\n        formHome.last10bttsAway,\n        match.bttsAllPercentageHome,\n        match.bttsPercentageHomeHome,\n        match.bttsPercentageHomeAway,\n        formHome.forAndAgainstRollingAvHomeOrAway,\n        formHome.forAndAgainstRollingAv,\n      ] = await getPastLeagueResults(match.homeTeam, match, \"home\", formHome);\n\n      [\n        formAway.predictedGoalsBasedOnHomeAv,\n        formAway.predictedGoalsBasedOnAwayAv,\n        formAway.allTeamGoalsBasedOnAverages,\n        formAway.predictedGoalsConceededBasedOnHomeAv,\n        formAway.predictedGoalsConceededBasedOnAwayAv,\n        formAway.allTeamGoalsConceededBasedOnAverages,\n        formAway.averageOddsHome,\n        formAway.averageOddsAway,\n        formAway.averageScoredLeague,\n        formAway.averageConceededLeague,\n        formAway.last10btts,\n        formAway.last10bttsHome,\n        formAway.last10bttsAway,\n        match.bttsAllPercentageAway,\n        match.bttsPercentageAwayHome,\n        match.bttsPercentageAwayAway,\n        formAway.forAndAgainstRollingAvHomeOrAway,\n        formAway.forAndAgainstRollingAv,\n      ] = await getPastLeagueResults(match.awayTeam, match, \"away\", formAway);\n    } else {\n      formHome.completeData = false;\n      formHome.predictedGoalsBasedOnHomeAv = formHome.ScoredAverage;\n      formHome.predictedGoalsBasedOnAwayAv = formHome.ConcededAverage;\n      formHome.allTeamGoalsBasedOnAverages = formHome.ScoredAverage;\n      formHome.forAndAgainstRollingAv = {\n        goalsFor: formHome.ScoredAverage,\n        goalsAgainst: formHome.ConcededAverage,\n      };\n      formHome.forAndAgainstRollingAvHomeOrAway = {\n        goalsFor: formHome.ScoredAverage,\n        goalsAgainst: formHome.ConcededAverage,\n      };\n      formHome.predictedGoalsConceededBasedOnHomeAv = formHome.ConcededAverage;\n      formHome.predictedGoalsConceededBasedOnAwayAv = formHome.ConcededAverage;\n      formHome.allTeamGoalsConceededBasedOnAverages = formHome.ConcededAverage;\n      formHome.averageOddsHome = null;\n      formHome.averageOddsAway = null;\n      formHome.averageScoredLeague = null;\n      formHome.averageConceededLeague = null;\n      formHome.goalDifference =\n        formHome.ScoredOverall - formHome.ConcededOverall;\n      formHome.goalDifferenceHomeOrAway =\n        formHome.ScoredOverall - formHome.ConcededOverall;\n      formHome.last10btts = null;\n      formHome.last10bttsHome = null;\n      formHome.last10bttsAway = null;\n      formHome.allTeamResults = [];\n      formHome.resultsAll = [];\n      formHome.resultsHome = [];\n      formHome.resultsAway = [];\n      match.bttsAllPercentageHome = \"\";\n      match.bttsPercentageHomeHome = \"\";\n      match.bttsPercentageHomeAway = \"\";\n      formAway.completeData = false;\n      formAway.predictedGoalsBasedOnHomeAv = formAway.ScoredAverage;\n      formAway.predictedGoalsBasedOnAwayAv = formAway.ConcededAverage;\n      formAway.allTeamGoalsBasedOnAverages = formAway.ScoredAverage;\n      formAway.forAndAgainstRollingAv = {\n        goalsFor: formAway.ScoredAverage,\n        goalsAgainst: formAway.ConcededAverage,\n      };\n      formAway.forAndAgainstRollingAvHomeOrAway = {\n        goalsFor: formAway.ScoredAverage,\n        goalsAgainst: formAway.ConcededAverage,\n      };\n      formAway.predictedGoalsConceededBasedOnHomeAv = formAway.ConcededAverage;\n      formAway.predictedGoalsConceededBasedOnAwayAv = formAway.ConcededAverage;\n      formAway.allTeamGoalsConceededBasedOnAverages = formAway.ConcededAverage;\n      formAway.averageOddsHome = null;\n      formAway.averageOddsAway = null;\n      formAway.averageScoredLeague = null;\n      formAway.averageConceededLeague = null;\n      formAway.goalDifference =\n        formAway.ScoredOverall - formAway.ConcededOverall;\n      formAway.goalDifferenceHomeOrAway =\n        formAway.ScoredOverall - formAway.ConcededOverall;\n\n      formAway.last10btts = null;\n      formAway.last10bttsHome = null;\n      formAway.last10bttsAway = null;\n      formAway.allTeamResults = [];\n      formAway.resultsAll = [];\n      formAway.resultsHome = [];\n      formAway.resultsAway = [];\n      match.bttsAllPercentageAway = \"\";\n      match.bttsPercentageAwayHome = \"\";\n      match.bttsPercentageAwayAway = \"\";\n    }\n\n    if (\n      typeof formHome.homeTeamHomePositionRaw === \"number\" &&\n      typeof formAway.awayTeamAwayPositionRaw === \"number\"\n    ) {\n      formHome.homePositionHomeOnly = parseFloat(\n        formHome.homeTeamHomePositionRaw\n      );\n      formAway.awayPositionAwayOnly = parseFloat(\n        formAway.awayTeamAwayPositionRaw\n      );\n      formHome.homePosition = parseFloat(formHome.homeRawPosition);\n      formAway.awayPosition = parseFloat(formAway.awayRawPosition);\n    } else {\n      formHome.homePositionHomeOnly = \"N/A\";\n      formAway.awayPositionAwayOnly = \"N/A\";\n      formHome.homePosition = \"N/A\";\n      formAway.awayPosition = \"N/A\";\n    }\n\n    if (formHome.last10Goals && formAway.last10Goals !== 0) {\n      if (\n        formHome.last5Goals - formHome.last5GoalsConceeded >\n        formHome.last10Goals - formHome.last10GoalsConceeded\n      ) {\n        formHome.improving = true;\n      } else {\n        formHome.improving = false;\n      }\n\n      if (\n        formAway.last5Goals - formAway.last5GoalsConceeded >\n        formAway.last10Goals - formAway.last10GoalsConceeded\n      ) {\n        formAway.improving = true;\n      } else {\n        formAway.improving = false;\n      }\n    }\n\n    let pointsDiff6 = await getPointsDifferential(\n      formHome.avPoints6,\n      formAway.avPoints6\n    );\n\n    formHome.AttackingPotency = (formHome.XG / formHome.AttacksHome) * 100;\n    formAway.AttackingPotency = (formAway.XG / formAway.AttacksAverage) * 100;\n\n    formHome.lastGame = formHome.resultsAll[0];\n    formHome.previousToLastGame = formHome.resultsAll[1];\n\n    formAway.lastGame = formAway.resultsAll[0];\n    formAway.previousToLastGame = formAway.resultsAll[1];\n\n    let teamComparisonScore;\n\n    const attackingMetricsHome = {\n      \"Average Dangerous Attacks\": formHome.AverageDangerousAttacksOverall,\n      \"Average Shots\": formHome.avgShots,\n      \"Average Shot Value\": formHome.avgShotValue,\n      \"Average Shots On Target\": formHome.AverageShotsOnTargetOverall\n        ? formHome.AverageShotsOnTargetOverall\n        : formHome.AverageShotsOnTarget,\n      \"Average Expected Goals\": formHome.XGOverall\n        ? formHome.XGOverall\n        : formHome.expectedGoals,\n      \"Recent XG\": formHome.XGlast5 ? formHome.XGlast5 : formHome.XGOverall,\n      \"Average Goals\": formHome.avgScored\n        ? formHome.avgScored\n        : formHome.ScoredAverage,\n      Corners: formHome.AverageCorners\n        ? formHome.AverageCorners\n        : formHome.CornersAverage,\n    };\n\n    const attackingMetricsHomeLast5 = {\n      \"Average Dangerous Attacks\": formHome.avDALast5\n        ? formHome.avDALast5\n        : formHome.AverageDangerousAttacksOverall,\n      \"Average Shots\": formHome.avShotsLast5\n        ? formHome.avShotsLast5\n        : formHome.AverageShots,\n      \"Average Shot Value\": formHome.avgShotValueLast5,\n      \"Average Shots On Target\": formHome.avSOTLast5\n        ? formHome.avSOTLast5\n        : formHome.AverageShotsOnTarget,\n      \"Average Expected Goals\": formHome.XGlast5\n        ? formHome.XGlast5\n        : formHome.XGOverall,\n      \"Recent XG\": formHome.XGlast5 ? formHome.XGlast5 : formHome.XGOverall,\n      \"Average Goals\": formHome.avScoredLast5\n        ? formHome.avScoredLast5\n        : formHome.ScoredAverage,\n      Corners: formHome.avCornersLast5\n        ? formHome.avCornersLast5\n        : formHome.CornersAverage,\n    };\n\n    const attackingMetricsHomeOnly = {\n      \"Average Dangerous Attacks\": formHome.avgDangerousAttacksHome\n        ? formHome.avgDangerousAttacksHome\n        : formHome.AverageDangerousAttacksOverall,\n      \"Average Shots\": formHome.avgShotsHome\n        ? formHome.avgShotsHome\n        : formHome.AverageShots,\n      \"Average Shot Value\": formHome.avgShotValueHome,\n      \"Average Shots On Target\": formHome.avgShotsOnTargetHome\n        ? formHome.avgShotsOnTargetHome\n        : formHome.AverageShotsOnTarget,\n      \"Average Expected Goals\": formHome.avgXGScoredHome\n        ? formHome.avgXGScoredHome\n        : formHome.XGOverall,\n      \"Recent XG\": formHome.last5XGAvgForHome\n        ? formHome.last5XGAvgForHome\n        : formHome.XGOverall,\n      \"Average Goals\": formHome.avgScoredHome\n        ? formHome.avgScoredHome\n        : formHome.ScoredAverage,\n      Corners: formHome.cornersAvHome\n        ? formHome.cornersAvHome\n        : formHome.CornersAverage,\n    };\n\n    const attackingMetricsAwayOnly = {\n      \"Average Dangerous Attacks\": formAway.avgDangerousAttacksAway\n        ? formAway.avgDangerousAttacksAway\n        : formAway.AverageDangerousAttacksOverall,\n      \"Average Shots\": formAway.avgShotsAway\n        ? formAway.avgShotsAway\n        : formAway.AverageShots,\n      \"Average Shot Value\": formAway.avgShotValueAway,\n      \"Average Shots On Target\": formAway.avgShotsOnTargetAway\n        ? formAway.avgShotsOnTargetAway\n        : formAway.AverageShotsOnTarget,\n      \"Average Expected Goals\": formAway.avgXGScoredAway\n        ? formAway.avgXGScoredAway\n        : formAway.XGOverall,\n      \"Recent XG\": formAway.last5XGAvgForAway\n        ? formAway.last5XGAvgForAway\n        : formAway.XGOverall,\n      \"Average Goals\": formAway.avgScoredAway\n        ? formAway.avgScoredAway\n        : formAway.ScoredAverage,\n      Corners: formAway.cornersAvAway\n        ? formAway.cornersAvAway\n        : formAway.CornersAverage,\n    };\n\n    const attackingMetricsAway = {\n      \"Average Dangerous Attacks\": formAway.AverageDangerousAttacksOverall,\n      \"Average Shots\": formAway.avgShots,\n      \"Average Shot Value\": formAway.avgShotValue,\n      \"Average Shots On Target\": formAway.AverageShotsOnTargetOverall\n        ? formAway.AverageShotsOnTargetOverall\n        : formAway.AverageShotsOnTarget,\n      \"Average Expected Goals\": formAway.XGOverall\n        ? formAway.XGOverall\n        : formAway.expectedGoals,\n      \"Recent XG\": formAway.XGlast5 ? formAway.XGlast5 : formAway.XGOverall,\n      \"Average Goals\": formAway.avgScored\n        ? formAway.avgScored\n        : formAway.ScoredAverage,\n      Corners: formAway.AverageCorners\n        ? formAway.AverageCorners\n        : formAway.CornersAverage,\n    };\n\n    const attackingMetricsAwayLast5 = {\n      \"Average Dangerous Attacks\": formAway.avDALast5\n        ? formAway.avDALast5\n        : formAway.AverageDangerousAttacksOverall,\n      \"Average Shots\": formAway.avShotsLast5\n        ? formAway.avShotsLast5\n        : formAway.AverageShots,\n      \"Average Shot Value\": formAway.avgShotValueLast5,\n      \"Average Shots On Target\": formAway.avSOTLast5\n        ? formAway.avSOTLast5\n        : formAway.AverageShotsOnTarget,\n      \"Average Expected Goals\": formAway.XGlast5\n        ? formAway.XGlast5\n        : formAway.XGOverall,\n      \"Recent XG\": formAway.XGlast5 ? formAway.XGlast5 : formAway.XGOverall,\n      \"Average Goals\": formAway.avScoredLast5\n        ? formAway.avScoredLast5\n        : formAway.ScoredAverage,\n      Corners: formAway.avCornersLast5\n        ? formAway.avCornersLast5\n        : formAway.CornersAverage,\n    };\n\n    const defensiveMetricsHome = {\n      \"Average XG Against\": formHome.XGAgainstAvgOverall\n        ? formHome.XGAgainstAvgOverall\n        : formHome.XGAgainstAvgOverall,\n      \"Recent XG Against\": formHome.XGAgainstlast5\n        ? formHome.XGAgainstlast5\n        : formHome.XGAgainstAvgOverall,\n      \"Average Goals Against\": formHome.avgConceeded\n        ? formHome.avgConceeded\n        : formHome.ConcededAverage,\n      \"Average SOT Against\": formHome.AverageShotsOnTargetAgainstOverall\n        ? formHome.AverageShotsOnTargetAgainstOverall\n        : 5,\n    };\n\n    const defensiveMetricsHomeLast5 = {\n      \"Average XG Against\": formHome.XGAgainstlast5\n        ? formHome.XGAgainstlast5\n        : formHome.XGAgainstAvgOverall,\n      \"Recent XG Against\": formHome.avXGAgainstLast5\n        ? formHome.avXGAgainstLast5\n        : formHome.XGAgainstAvgOverall,\n      \"Average Goals Against\": formHome.avConceededLast5\n        ? formHome.avConceededLast5\n        : formHome.ConcededAverage,\n      \"Average SOT Against\": formHome.avSOTAgainstLast5\n        ? formHome.avSOTAgainstLast5\n        : 5,\n    };\n\n    const defensiveMetricsAway = {\n      \"Average XG Against\": formAway.XGAgainstAvgOverall\n        ? formAway.XGAgainstAvgOverall\n        : formAway.XGAgainstAvgOverall,\n      \"Recent XG Against\": formAway.XGAgainstlast5\n        ? formAway.XGAgainstlast5\n        : formAway.XGAgainstAvgOverall,\n      \"Average Goals Against\": formAway.avgConceeded\n        ? formAway.avgConceeded\n        : formAway.ConcededAverage,\n      \"Average SOT Against\": formAway.AverageShotsOnTargetAgainstOverall\n        ? formAway.AverageShotsOnTargetAgainstOverall\n        : 5,\n    };\n\n    const defensiveMetricsAwayLast5 = {\n      \"Average XG Against\": formAway.XGAgainstlast5\n        ? formAway.XGAgainstlast5\n        : formAway.XGAgainstAvgOverall,\n      \"Recent XG Against\": formAway.avXGAgainstLast5\n        ? formAway.avXGAgainstLast5\n        : formAway.XGAgainstAvgOverall,\n      \"Average Goals Against\": formAway.avConceededLast5\n        ? formAway.avConceededLast5\n        : formAway.ConcededAverage,\n      \"Average SOT Against\": formAway.avSOTAgainstLast5\n        ? formAway.avSOTAgainstLast5\n        : 5,\n    };\n\n    const defensiveMetricsHomeOnly = {\n      \"Average XG Against\": formHome.avgXGConceededHome\n        ? formHome.avgXGConceededHome\n        : formHome.XGAgainstAvgOverall,\n      \"Recent XG Against\": formHome.last5XGAvgAgainstHome\n        ? formHome.last5XGAvgAgainstHome\n        : formHome.XGAgainstAvgOverall,\n      \"Average Goals Against\": formHome.teamConceededAvgHomeOnly\n        ? formHome.teamConceededAvgHomeOnly\n        : formHome.ConcededAverage,\n      \"Average SOT Against\": formHome.avgShotsOnTargetAgainstHome\n        ? formHome.avgShotsOnTargetAgainstHome\n        : 5,\n    };\n\n    const defensiveMetricsAwayOnly = {\n      \"Average XG Against\": formAway.avgXGConceededAway\n        ? formAway.avgXGConceededAway\n        : formAway.XGAgainstAvgOverall,\n      \"Recent XG Against\": formAway.last5XGAvgAgainstAway\n        ? formAway.last5XGAvgAgainstAway\n        : formAway.XGAgainstAvgOverall,\n      \"Average Goals Against\": formAway.teamConceededAvgAwayOnly\n        ? formAway.teamConceededAvgAwayOnly\n        : formAway.ConcededAverage,\n      \"Average SOT Against\": formAway.avgShotsOnTargetAgainstAway\n        ? formAway.avgShotsOnTargetAgainstAway\n        : 5,\n    };\n\n    formHome.attackingMetrics = attackingMetricsHome;\n    formHome.defensiveMetrics = defensiveMetricsHome;\n    formAway.attackingMetrics = attackingMetricsAway;\n    formAway.defensiveMetrics = defensiveMetricsAway;\n\n    formHome.attackingStrength = await calculateAttackingStrength(\n      attackingMetricsHome\n    );\n\n    formHome.attackingStrengthScoreGeneration =\n      await calculateAttackingStrength(attackingMetricsHome);\n\n    formHome.attackingStrengthLast5 = await calculateAttackingStrength(\n      attackingMetricsHomeLast5\n    );\n\n    formHome.attackingStrengthHomeOnly = await calculateAttackingStrength(\n      attackingMetricsHomeOnly\n    );\n\n    formAway.attackingStrength = await calculateAttackingStrength(\n      attackingMetricsAway\n    );\n\n    formAway.attackingStrengthLast5 = await calculateAttackingStrength(\n      attackingMetricsAwayLast5\n    );\n\n    formAway.attackingStrengthAwayOnly = await calculateAttackingStrength(\n      attackingMetricsAwayOnly\n    );\n\n    formHome.defensiveStrength = await calculateDefensiveStrength(\n      defensiveMetricsHome\n    );\n\n    formHome.defensiveStrengthScoreGeneration =\n      await calculateDefensiveStrength(defensiveMetricsHome, 0.75);\n\n    formHome.defensiveStrengthLast5 = await calculateDefensiveStrength(\n      defensiveMetricsHomeLast5\n    );\n\n    formHome.defensiveStrengthScoreGenerationLast5 =\n      await calculateDefensiveStrength(defensiveMetricsHomeLast5, 0.75);\n\n    formHome.defensiveStrengthHomeOnly = await calculateDefensiveStrength(\n      defensiveMetricsHomeOnly\n    );\n\n    formHome.defensiveStrengthScoreGenerationHomeOnly =\n      await calculateDefensiveStrength(defensiveMetricsHomeOnly, 0.75);\n\n    formAway.defensiveStrength = await calculateDefensiveStrength(\n      defensiveMetricsAway\n    );\n\n    formAway.defensiveStrengthScoreGeneration =\n      await calculateDefensiveStrength(defensiveMetricsAway, 0.75);\n\n    formAway.defensiveStrengthLast5 = await calculateDefensiveStrength(\n      defensiveMetricsAwayLast5\n    );\n\n    formAway.defensiveStrengthScoreGenerationLast5 =\n      await calculateDefensiveStrength(defensiveMetricsAwayLast5, 0.75);\n\n    formAway.defensiveStrengthAwayOnly = await calculateDefensiveStrength(\n      defensiveMetricsAwayOnly\n    );\n\n    formAway.defensiveStrengthScoreGenerationAwayOnly =\n      await calculateDefensiveStrength(defensiveMetricsAwayOnly, 0.75);\n\n    formHome.possessionStrength = await calculateMetricStrength(\n      \"averagePossession\",\n      formHome.AveragePossessionOverall\n        ? formHome.AveragePossessionOverall\n        : formHome.AveragePossessionOverall\n    );\n\n    formHome.possessionStrengthLast5 = await calculateMetricStrength(\n      \"averagePossession\",\n      formHome.avPosessionLast5\n        ? formHome.avPosessionLast5\n        : formHome.AveragePossessionOverall\n    );\n\n    formHome.possessionStrengthHomeOnly = await calculateMetricStrength(\n      \"averagePossession\",\n      formHome.avgPossessionHome\n        ? formHome.avgPossessionHome\n        : formHome.AveragePossessionOverall\n    );\n\n    formAway.possessionStrengthLast5 = await calculateMetricStrength(\n      \"averagePossession\",\n      formAway.avPosessionLast5\n        ? formAway.avPosessionLast5\n        : formAway.AveragePossessionOverall\n    );\n\n    formAway.possessionStrength = await calculateMetricStrength(\n      \"averagePossession\",\n      formAway.AveragePossessionOverall\n        ? formAway.AveragePossessionOverall\n        : formAway.AveragePossessionOverall\n    );\n\n    formAway.possessionStrengthAwayOnly = await calculateMetricStrength(\n      \"averagePossession\",\n      formAway.avgPossessionAway\n        ? formAway.avgPossessionAway\n        : formAway.AveragePossessionOverall\n    );\n\n    formHome.XGdifferentialRecent = await diff(\n      formHome.XGlast5,\n      formHome.XGAgainstlast5\n    );\n\n    formHome.actualToXGDifferenceRecent = await diff(\n      formHome.XGdifferentialRecent,\n      formHome.last5GoalDiff\n    );\n\n    formAway.XGdifferentialRecent = await diff(\n      formAway.XGlast5,\n      formAway.XGAgainstlast5\n    );\n\n    formAway.actualToXGDifferenceRecent = await diff(\n      formAway.XGdifferentialRecent,\n      formAway.last5GoalDiff\n    );\n\n    formHome.directnessOverall =\n      (formHome.AverageShots / formHome.AveragePossessionOverall) * 10;\n\n    formHome.directnessOverallLast5 =\n      (formHome.avShotsLast5 / formHome.avPosessionLast5) * 10;\n\n    formAway.directnessOverallLast5 =\n      (formAway.avShotsLast5 / formAway.avPosessionLast5) * 10;\n\n    formHome.directnessHomeOnly =\n      (formHome.avgShotsHome / formHome.avgPossessionHome) * 10;\n\n    formAway.directnessOverall =\n      (formAway.AverageShots / formAway.AveragePossessionOverall) * 10;\n\n    formAway.directnessAwayOnly =\n      (formAway.avgShotsAway / formAway.avgPossessionAway) * 10;\n\n    formHome.directnessOverallStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formHome.directnessOverall\n    );\n\n    formHome.directnessOverallStrengthLast5 = await calculateMetricStrength(\n      \"directnessOverall\",\n      formHome.directnessOverallLast5\n    );\n\n    formHome.directnessHomeStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formHome.directnessHomeOnly\n    );\n\n    formAway.directnessOverallStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formAway.directnessOverall\n    );\n\n    formAway.directnessOverallStrengthLast5 = await calculateMetricStrength(\n      \"directnessOverall\",\n      formAway.directnessOverallLast5\n    );\n\n    formAway.directnessAwayStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formAway.directnessAwayOnly\n    );\n\n    formHome.shootingAccuracy =\n      (formHome.AverageShotsOnTargetOverall\n        ? formHome.AverageShotsOnTargetOverall / formHome.avgShots\n        : formHome.AverageShotsOnTarget / formHome.avgShots) *\n      formHome.AverageShotsOnTargetOverall\n        ? formHome.AverageShotsOnTargetOverall\n        : formHome.AverageShotsOnTarget;\n\n    formHome.shootingAccuracyLast5 =\n      (formHome.avSOTLast5 / formHome.avShotsLast5) * formHome.avSOTLast5;\n\n    formAway.shootingAccuracyLast5 =\n      (formAway.avSOTLast5 / formAway.avShotsLast5) * formAway.avSOTLast5;\n\n    formHome.shootingAccuracyHomeOnly =\n      (formHome.avgShotsOnTargetHome / formHome.avgShotsHome) *\n      formHome.avgShotsOnTargetHome;\n\n    formAway.shootingAccuracy =\n      (formAway.AverageShotsOnTargetOverall\n        ? formAway.AverageShotsOnTargetOverall / formAway.avgShots\n        : formAway.AverageShotsOnTarget / formAway.avgShots) *\n      formAway.AverageShotsOnTargetOverall\n        ? formAway.AverageShotsOnTargetOverall\n        : formAway.AverageShotsOnTarget;\n\n    formAway.shootingAccuracyAwayOnly =\n      (formAway.avgShotsOnTargetAway / formAway.avgShotsAway) *\n      formAway.avgShotsOnTargetAway;\n\n    formHome.accuracyOverallStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formHome.avgShotValue\n    );\n\n    formHome.accuracyOverallStrengthLast5 = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formHome.avgShotValueLast5\n    );\n\n    formHome.accuracyHomeStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formHome.avgShotValueHome\n    );\n\n    formAway.accuracyOverallStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formAway.avgShotValue\n    );\n\n    formAway.accuracyOverallStrengthLast5 = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formAway.avgShotValueLast5\n    );\n\n    formAway.accuracyAwayStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formAway.avgShotValueAway\n    );\n\n    formHome.xgForStrength = await calculateMetricStrength(\n      \"xgFor\",\n      formHome.XGOverall\n    );\n\n    formHome.xgForStrengthLast5 = await calculateMetricStrength(\n      \"xgFor\",\n      formHome.XGlast5\n    );\n\n    formHome.xgForStrengthHomeOnly = await calculateMetricStrength(\n      \"xgFor\",\n      formHome.avgXGScoredHome\n    );\n\n    formHome.xgAgainstStrength = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formHome.XGAgainstAvgOverall\n    );\n\n    formHome.xgAgainstStrengthLast5 = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formHome.XGAgainstlast5\n    );\n\n    formHome.xgAgainstStrengthHomeOnly = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formHome.avgXGConceededHome\n    );\n\n    formAway.xgForStrength = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.XGOverall\n    );\n\n    formAway.xgForStrengthLast5 = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.last5XGAvgFor\n    );\n\n    formAway.xgForStrengthLast5 = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.XGlast5\n    );\n\n    formAway.xgForStrengthAwayOnly = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.avgXGScoredAway\n    );\n\n    formAway.xgAgainstStrength = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formAway.XGAgainstAvgOverall\n    );\n\n    formAway.xgAgainstStrengthLast5 = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formAway.XGAgainstlast5\n    );\n\n    formAway.xgAgainstStrengthAwayOnly = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formAway.avgXGConceededAway\n    );\n\n    formHome.actualToXGDifference = parseInt(\n      await diff(formHome.XGDiffNonAverage, formHome.goalDifference)\n    );\n\n    formAway.actualToXGDifference = parseInt(\n      await diff(formAway.XGDiffNonAverage, formAway.goalDifference)\n    );\n\n    // teamComparisonScore = await compareTeams(formHome, formAway, match);\n\n    [formHome.teamGoalsCalc, formAway.teamGoalsCalc] = await generateGoals(\n      formHome,\n      formAway,\n      match\n    );\n\n    // teamComparisonScore = teamComparisonScore * 0.3;\n    // LEAVE\n\n    // if (teamComparisonScore > 0.45) {\n    //   teamComparisonScore = 0.45;\n    // } else if (teamComparisonScore < -0.45) {\n    //   teamComparisonScore = -0.45;\n    // }\n\n    // if (teamComparisonScore < 0) {\n    //   formHome.teamStrengthWeighting = 1 + teamComparisonScore / 1;\n    //   formAway.teamStrengthWeighting = 1 - teamComparisonScore / 1;\n    // } else if (teamComparisonScore >= 0) {\n    //   formHome.teamStrengthWeighting = 1 + teamComparisonScore / 1;\n    //   formAway.teamStrengthWeighting = 1 - teamComparisonScore / 1;\n    // }\n\n    // teamComparisonScore = 0;\n\n    // match.teamComparisonScore = teamComparisonScore.toFixed(2);\n    // match.goalWeighting = 1 + parseFloat(match.teamComparisonScore)\n\n    // let team1Metrics = {\n    //   weighting: formHome.teamGoalsCalc,\n    //   odds: match.homeOdds,\n    //   XGRating: formHome.XGRating,\n    //   actualToXGDifference: formHome.actualToXGDifference,\n    //   // Add other relevant metrics here\n    // };\n\n    // let team2Metrics = {\n    //   weighting: formAway.teamGoalsCalc,\n    //   odds: match.awayOdds,\n    //   XGRating: formAway.XGRating,\n    //   actualToXGDifference: formAway.actualToXGDifference,\n    //   // Add other relevant metrics here\n    // };\n\n    // // pass arrays of league goals and conceeded\n    // let scorePredictions;\n    // let scorePredictionsHA;\n    // let scorePredictionsRecent;\n\n    // if (\n    //   formHome.allConceededArrayHome !== undefined &&\n    //   formAway.allConceededArrayAway !== undefined\n    // ) {\n    //   scorePredictionsRecent = await predictScore(\n    //     formHome.allGoalsArrayHomeRecent,\n    //     formHome.allConceededArrayHomeRecent,\n    //     formAway.allGoalsArrayAwayRecent,\n    //     formAway.allConceededArrayAwayRecent,\n    //     team1Metrics,\n    //     team2Metrics,\n    //     match.game\n    //   );\n    //   scorePredictionsHA = await predictScore(\n    //     formHome.allGoalsArrayHomeOnly,\n    //     formHome.allConceededArrayHomeOnly,\n    //     formAway.allGoalsArrayAwayOnly,\n    //     formAway.allConceededArrayAwayOnly,\n    //     team1Metrics,\n    //     team2Metrics,\n    //     match.game\n    //   );\n    //   scorePredictions = await predictScore(\n    //     formHome.allGoalsArrayHome,\n    //     formHome.allConceededArrayHome,\n    //     formAway.allGoalsArrayAway,\n    //     formAway.allConceededArrayAway,\n    //     team1Metrics,\n    //     team2Metrics,\n    //     match.game\n    //   );\n    // }\n\n    let finalHomeGoals;\n    let finalAwayGoals;\n\n    const homeGoalDiff =\n      formHome.ScoredAverageShortAndLongTerm -\n      formHome.conceededAverageShortAndLongTerm;\n    const awayGoalDiff =\n      formAway.ScoredAverageShortAndLongTerm -\n      formAway.conceededAverageShortAndLongTerm;\n\n    formHome.goalsDifferential =\n      parseFloat(await diff(homeGoalDiff, awayGoalDiff)) / 1;\n    formAway.goalsDifferential =\n      parseFloat(await diff(awayGoalDiff, homeGoalDiff)) / 1;\n\n    formHome.rollingAverageGoalsDifferential = parseFloat(\n      formHome.allTeamGoalsBasedOnAverages -\n        formHome.allTeamGoalsConceededBasedOnAverages\n    );\n    formAway.rollingAverageGoalsDifferential = parseFloat(\n      formAway.allTeamGoalsBasedOnAverages -\n        formAway.allTeamGoalsConceededBasedOnAverages\n    );\n\n    match.GoalsInGamesAverageHome =\n      formHome.avScoredLast5 + formHome.avConceededLast5;\n\n    match.GoalsInGamesAverageAway =\n      formAway.avScoredLast5 + formAway.avConceededLast5;\n\n    let factorOneHome;\n    let factorOneAway;\n\n    factorOneHome =\n      // homeLeagueOrAllFormAverageGoals * 1 +\n      // formHome.last5Goals * 0.5 +\n      // formAway.last5GoalsConceeded * 0.5 +\n      (formHome.forAndAgainstRollingAvHomeOrAway.goalsFor * 2 +\n        formAway.forAndAgainstRollingAvHomeOrAway.goalsAgainst * 2 +\n        formHome.forAndAgainstRollingAv.goalsFor * 0 +\n        formAway.forAndAgainstRollingAv.goalsAgainst * 0 +\n        formHome.allTeamGoalsBasedOnAverages * 0 +\n        formAway.allTeamGoalsConceededBasedOnAverages * 0\n        // formHome.XGOverall * 1 +\n        // formAway.XGAgainstAvgOverall * 1 +\n\n      ) \n        /\n      8;\n\n    factorOneAway =\n      // awayLeagueOrAllFormAverageGoals * 1 +\n      // formAway.last5Goals * 0.5 +\n      // formHome.last5GoalsConceeded * 0.5 +\n      (formAway.forAndAgainstRollingAvHomeOrAway.goalsFor * 2 +\n        formHome.forAndAgainstRollingAvHomeOrAway.goalsAgainst * 2 +\n        formAway.forAndAgainstRollingAv.goalsFor * 0 +\n        formHome.forAndAgainstRollingAv.goalsAgainst * 0 +\n        formAway.allTeamGoalsBasedOnAverages * 0 +\n        formHome.allTeamGoalsConceededBasedOnAverages * 0 \n        // formAway.XGOverall * 1 +\n        // formHome.XGAgainstAvgOverall * 1 +\n      ) /\n      8;\n\n    // let factorTwoHome;\n    // let factorTwoAway;\n\n    // // if (\n    //   scorePredictions !== undefined &&\n    //   scorePredictions[0].probability !== 1\n    // ) {\n    //   factorTwoHome =\n    //     // scorePredictions[0].team1Score +\n    //     // scorePredictionsRecent[0].team1Score +\n    //     scorePredictionsHA[0].team1Score / 2;\n    //   factorTwoAway =\n    //     // scorePredictions[0].team2Score +\n    //     // scorePredictionsRecent[0].team2Score +\n    //     scorePredictionsHA[0].team2Score / 2;\n    // } else {\n    //   factorTwoHome = factorOneHome;\n    //   factorTwoAway = factorOneAway;\n    // }\n\n    let homeComparisonWeighting;\n    let awayComparisonWeighting;\n    match.scoreDiff = await diff(factorOneHome, factorOneAway);\n\n    if (teamComparisonScore > 0) {\n      homeComparisonWeighting = 1 + Math.abs(teamComparisonScore);\n      awayComparisonWeighting = 1 + -Math.abs(teamComparisonScore);\n    } else if (teamComparisonScore < 0) {\n      homeComparisonWeighting = 1 + -Math.abs(teamComparisonScore);\n      awayComparisonWeighting = 1 + Math.abs(teamComparisonScore);\n    } else {\n      homeComparisonWeighting = 1;\n      awayComparisonWeighting = 1;\n    }\n\n    // ROI\n    // Cumalative ROI for all 1402 match outcomes: + 7.58%\n\n    // const adjustmentHome =\n    //   formHome.avgShotValue > 10.5\n    //     ? parseFloat(formHome.actualToXGDifferenceRecent * 0.25)\n    //     : parseFloat(formHome.actualToXGDifferenceRecent * 0.5);\n    // const adjustmentAway =\n    //   formAway.twoGameAverage > 10.5\n    //     ? parseFloat(formAway.actualToXGDifferenceRecent * 0.25)\n    //     : parseFloat(formAway.actualToXGDifferenceRecent * 0.5);\n\n    // const homeAdj = formHome.actualToXGDifferenceRecent / 2;\n    // const awayAdj = formAway.actualToXGDifferenceRecent / 2;\n\n    // let experimentalHomeGoals = formHome.teamGoalsCalc;\n    let experimentalHomeGoals =\n      // factorOneHome * 1 +\n      // (formHome.allTeamGoalsBasedOnAverages +\n      // formAway.allTeamGoalsConceededBasedOnAverages +\n      // formHome.predictedGoalsBasedOnHomeAv +\n      // formAway.predictedGoalsConceededBasedOnAwayAv +\n      // formHome.XGPredictionHome.goalsFor +\n      // formAway.XGPredictionAway.goalsAgainst +\n      (formHome.teamGoalsCalc +\n        formHome.forAndAgainstRollingAvHomeOrAway.goalsFor +\n        formAway.forAndAgainstRollingAvHomeOrAway.goalsAgainst +\n        formHome.forAndAgainstRollingAv.goalsFor +\n        formAway.forAndAgainstRollingAv.goalsAgainst) /\n      5;\n    // + homeAdj;\n\n    // (factorOneHome * homeComparisonWeighting +\n    //   (formHome.teamGoalsCalc * 2) +\n    //   factorTwoHome) /\n    // 4;\n    // (formHome.forAndAgainstRollingAvHomeOrAway.goalsFor + formAway.forAndAgainstRollingAvHomeOrAway.goalsAgainst) / 2\n\n    // let experimentalAwayGoals = formAway.teamGoalsCalc;\n    let experimentalAwayGoals =\n      // factorOneAway * 1 +\n      // (formAway.allTeamGoalsBasedOnAverages +\n      // formHome.allTeamGoalsConceededBasedOnAverages +\n      // formAway.predictedGoalsBasedOnAwayAv +\n      // formHome.predictedGoalsConceededBasedOnHomeAv +\n      // formAway.XGPredictionAway.goalsFor +\n      // formHome.XGPredictionHome.goalsAgainst +\n      (formAway.teamGoalsCalc +\n        formAway.forAndAgainstRollingAvHomeOrAway.goalsFor +\n        formHome.forAndAgainstRollingAvHomeOrAway.goalsAgainst +\n        formAway.forAndAgainstRollingAv.goalsFor +\n        formHome.forAndAgainstRollingAv.goalsAgainst) /\n      5;\n    // + awayAdj;\n\n    // console.log(experimentalHomeGoals);\n    // console.log(adjustmentHome);\n\n    // (factorOneAway * awayComparisonWeighting +\n    //   (formAway.teamGoalsCalc * 2) +\n    //   factorTwoAway) /\n    // 4;\n    // (formAway.forAndAgainstRollingAvHomeOrAway.goalsFor + formHome.forAndAgainstRollingAvHomeOrAway.goalsAgainst) / 2\n\n    let rawFinalHomeGoals = experimentalHomeGoals;\n    let rawFinalAwayGoals = experimentalAwayGoals;\n\n    // if(rawFinalHomeGoals < 0){\n    //   rawFinalHomeGoals = 0\n    // }\n\n    // if(rawFinalAwayGoals < 0){\n    //   rawFinalAwayGoals = 0\n    // }\n\n    match.rawFinalHomeGoals = rawFinalHomeGoals;\n    match.rawFinalAwayGoals = rawFinalAwayGoals;\n\n    // if (rawFinalHomeGoals < 1 && rawFinalHomeGoals > 0 && rawFinalAwayGoals < 1 && rawFinalAwayGoals > 0) {\n    //   if (\n    //     formHome.CleanSheetPercentage < 45 &&\n    //     formAway.CleanSheetPercentage < 45\n    //   ) {\n    //     finalHomeGoals = Math.ceil(rawFinalHomeGoals);\n    //     finalAwayGoals = Math.ceil(rawFinalAwayGoals);\n    //   } else {\n    //     finalHomeGoals = Math.floor(rawFinalHomeGoals);\n    //     finalAwayGoals = Math.floor(rawFinalAwayGoals);\n    //   }\n    // }\n    // else if (rawFinalHomeGoals < 0 && rawFinalAwayGoals < 0) {\n    //   if (\n    //     formHome.CleanSheetPercentage < 45 &&\n    //     formAway.CleanSheetPercentage < 45\n    //   ) {\n    //     finalHomeGoals = 1;\n    //     finalAwayGoals = 1;\n    //   } else {\n    //     finalHomeGoals = Math.floor(rawFinalHomeGoals);\n    //     finalAwayGoals = Math.floor(rawFinalAwayGoals);\n    //   }\n    // }\n    // else {\n    //   finalHomeGoals = Math.floor(rawFinalHomeGoals);\n    //   finalAwayGoals = Math.floor(rawFinalAwayGoals);\n    // }\n\n    if (rawFinalHomeGoals < 0) {\n      rawFinalHomeGoals = 0;\n    }\n\n    if (rawFinalAwayGoals < 0) {\n      rawFinalAwayGoals = 0;\n    }\n\n    if(rawFinalHomeGoals > formHome.avgScored && rawFinalAwayGoals > formAway.avgScored){\n      rawFinalHomeGoals -= Math.abs(-1)\n      rawFinalAwayGoals -= Math.abs(-1)\n    }\n\n    finalHomeGoals = Math.round(rawFinalHomeGoals);\n    finalAwayGoals = Math.round(rawFinalAwayGoals);\n\n    // finalHomeGoals = rawFinalHomeGoals;\n    // finalAwayGoals = rawFinalAwayGoals;\n\n    // finalHomeGoals = await roundCustom(rawFinalHomeGoals);\n    // finalAwayGoals = await roundCustom(rawFinalAwayGoals);\n\n    // if (finalHomeGoals > formHome.avgScored + 2) {\n    //   finalHomeGoals = Math.round((finalHomeGoals + formHome.avgScored) / 2);\n    // }\n\n    // if (finalAwayGoals > formAway.avgScored + 2) {\n    //   finalAwayGoals = Math.round((finalAwayGoals + formAway.avgScored) / 2);\n    // }\n\n    // if (finalAwayGoals < 0) {\n    //   let difference = Math.abs(\n    //     parseFloat((await diff(0, finalAwayGoals)) / 2)\n    //   );\n    //   rawFinalHomeGoals = rawFinalHomeGoals + difference;\n    //   finalAwayGoals = 0;\n    // }\n\n    // if (finalHomeGoals < 0) {\n    //   let difference = Math.abs(\n    //     parseFloat((await diff(0, finalHomeGoals)) / 2)\n    //   );\n    //   rawFinalAwayGoals = rawFinalAwayGoals + difference;\n    //   finalHomeGoals = 0;\n    // }\n\n    if (match.status !== \"suspended\") {\n      if (finalHomeGoals > finalAwayGoals) {\n        match.prediction = \"homeWin\";\n        homePredictions = homePredictions + 1;\n        if (\n          formHome.lastGame === \"L\" ||\n          formHome.last2Points < 3 ||\n          formAway.last2Points > 4 ||\n          formHome.oddsReliabilityWin < 50\n        ) {\n          match.includeInMultis = false;\n        } else {\n          match.includeInMultis = true;\n        }\n      } else if (finalAwayGoals > finalHomeGoals) {\n        match.prediction = \"awayWin\";\n        awayPredictions = awayPredictions + 1;\n        if (\n          formAway.lastGame === \"L\" ||\n          formAway.last2Points < 3 ||\n          formHome.last2Points > 4 ||\n          formAway.oddsReliabilityWin < 50\n        ) {\n          match.includeInMultis = false;\n        } else {\n          match.includeInMultis = true;\n        }\n      } else if (finalHomeGoals === finalAwayGoals) {\n        match.prediction = \"draw\";\n        drawPredictions = drawPredictions + 1;\n      }\n    }\n\n    console.log(`drawPredictions: ${drawPredictions}`);\n\n    if (\n      (XGdifferential > 1 && match.prediction === \"homeWin\") ||\n      (XGdifferential < -1.6 && match.prediction === \"awayWin\")\n    ) {\n      match.XGdifferential = true;\n    } else {\n      match.XGdifferential = false;\n    }\n\n    if (\n      (pointsDiff6 > 1.2 && match.prediction === \"homeWin\") ||\n      (pointsDiff6 < -1.2 && match.prediction === \"awayWin\")\n    ) {\n      match.pointsDifferential = true;\n      match.pointsDifferentialValue = Math.abs(pointsDiff6);\n      match.pointsDifferentialValueRaw = parseFloat(pointsDiff6);\n    } else {\n      match.pointsDifferential = false;\n      match.pointsDifferentialValue = Math.abs(pointsDiff6);\n      match.pointsDifferentialValueRaw = parseFloat(pointsDiff6);\n    }\n\n    let rollingGoalDiffDifferential = await diff(\n      formHome.rollingAverageGoalsDifferential,\n      formAway.rollingAverageGoalsDifferential\n    );\n\n    if (\n      (rollingGoalDiffDifferential > 1.5 && match.prediction === \"homeWin\") ||\n      (rollingGoalDiffDifferential < -1.5 && match.prediction === \"awayWin\")\n    ) {\n      match.rollingGoalDiff = true;\n      match.rollingGoalDiffValue = rollingGoalDiffDifferential;\n    } else {\n      match.rollingGoalDiff = false;\n      match.rollingGoalDiffValue = rollingGoalDiffDifferential;\n    }\n\n    let dangerousAttacksDifferential = await diff(\n      formHome.AverageDangerousAttacksOverall,\n      formAway.AverageDangerousAttacksOverall\n    );\n\n    if (\n      (dangerousAttacksDifferential > 20 && match.prediction === \"homeWin\") ||\n      (dangerousAttacksDifferential < -20 && match.prediction === \"awayWin\")\n    ) {\n      match.dangerousAttacksDiff = true;\n      match.dangerousAttacksDiffValue = dangerousAttacksDifferential;\n    } else {\n      match.dangerousAttacksDiff = false;\n      match.dangerousAttacksDiffValue = dangerousAttacksDifferential;\n    }\n\n    switch (true) {\n      case match.status !== \"complete\":\n        break;\n      case match.homeGoals > match.awayGoals:\n        match.winner = match.homeTeam;\n        match.outcome = \"homeWin\";\n        homeOutcomes = homeOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formHome.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formAway.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formHome.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formAway.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formHome.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formAway.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formHome.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formAway.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += homeOdds;\n        sumOddsLoss = sumOddsLoss += awayOdds;\n        sumXGForWin = sumXGForWin += formHome.XGOverall;\n        sumXGForLoss = sumXGForLoss += formAway.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formHome.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formAway.XGAgainstAvgOverall;\n        break;\n      case match.homeGoals === match.awayGoals:\n        match.winner = \"draw\";\n        match.outcome = \"draw\";\n        allOutcomes = allOutcomes + 1;\n        allDrawOutcomes = allDrawOutcomes + 1;\n        break;\n      case match.homeGoals < match.awayGoals:\n        match.winner = match.awayTeam;\n        match.outcome = \"awayWin\";\n        allOutcomes = allOutcomes + 1;\n        awayOutcomes = awayOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formAway.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formHome.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formAway.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formHome.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formAway.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formHome.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formAway.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formHome.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += awayOdds;\n        sumOddsLoss = sumOddsLoss += homeOdds;\n        sumXGForWin = sumXGForWin += formAway.XGOverall;\n        sumXGForLoss = sumXGForLoss += formHome.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formAway.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formHome.XGAgainstAvgOverall;\n        break;\n      default:\n        break;\n    }\n\n    console.log(`allDrawOutcomes: ${allDrawOutcomes}`);\n\n    if (match.status === \"complete\") {\n      if (match.prediction === match.outcome) {\n        match.predictionOutcome = \"Won\";\n        winAmount = winAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      } else if (match.prediction !== match.outcome) {\n        match.predictionOutcome = \"Lost\";\n        lossAmount = lossAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      }\n    }\n\n    if (match.status === \"complete\") {\n      if (match.homeGoals + match.awayGoals > 2) {\n        match.over25PredictionOutcome = \"Won\";\n      } else {\n        match.over25PredictionOutcome = \"Lost\";\n      }\n    }\n\n    if (\n      match.status === \"complete\" &&\n      match.homeGoals > 0 &&\n      match.awayGoals > 0\n    ) {\n      match.bttsOutcome = \"bttsWon\";\n    } else {\n      match.bttsOutcome = \"bttsLost\";\n    }\n\n    match.formHome = formHome;\n    match.formAway = formAway;\n\n    // formObjectHome = formHome;\n    // formObjectAway = formAway;\n\n    // console.log(formObjectHome)\n    // console.log(formObjectAway)\n\n    let total = parseInt(finalHomeGoals + finalAwayGoals);\n    totalGoals = totalGoals + total;\n\n    let total2 = parseInt(match.homeGoals + match.awayGoals);\n    totalGoals2 = totalGoals2 + total2;\n\n    numberOfGames = numberOfGames + 1;\n\n    if (finalHomeGoals < 0) {\n      finalHomeGoals = 0;\n    }\n\n    if (finalAwayGoals < 0) {\n      finalAwayGoals = 0;\n    }\n\n    if (match.status === \"suspended\") {\n      finalHomeGoals = \"P\";\n      finalAwayGoals = \"P\";\n    }\n\n    if (\n      finalHomeGoals > finalAwayGoals &&\n      (match.homeOdds < rangeValue[0] || match.homeOdds > rangeValue[1])\n    ) {\n      match.omit = true;\n    } else if (\n      finalAwayGoals > finalHomeGoals &&\n      (match.awayOdds < rangeValue[0] || match.awayOdds > rangeValue[1])\n    ) {\n      match.omit = true;\n    } else if (\n      finalHomeGoals === finalAwayGoals &&\n      (match.drawOdds < rangeValue[0] || match.drawOdds > rangeValue[1])\n    ) {\n      match.omit = true;\n    }\n\n    const last10PointDiffHomePerspective = Math.abs(\n      formHome.pointsSum6 - formAway.pointsSum6\n    );\n\n    const last6PointDiffAwayPerspective = Math.abs(\n      formAway.pointsSum6 - formHome.pointsSum6\n    );\n\n    const XGDiffBetweenTeamsHomePerspective = Math.abs(\n      formHome.XGDiffNonAverage - formAway.XGDiffNonAverage\n    );\n    const XGDiffBetweenTeamsAwayPerspective = Math.abs(\n      formAway.XGDiffNonAverage - formHome.XGDiffNonAverage\n    );\n\n    match.goalDiffHomeOrAwayComparison =\n      parseFloat(formHome.goalDifferenceHomeOrAway) -\n      parseFloat(formAway.goalDifferenceHomeOrAway);\n\n    match.goalDifferenceComparison =\n      parseFloat(formHome.goalDifference) - parseFloat(formAway.goalDifference);\n\n    switch (true) {\n      case finalHomeGoals > finalAwayGoals:\n        if (minimumXG !== 0 && XGDiffBetweenTeamsHomePerspective < minimumXG) {\n          match.omit = true;\n        }\n        if (\n          minimumLast6 !== 0 &&\n          last10PointDiffHomePerspective < minimumLast6\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGDHorA !== 0 &&\n          match.goalDiffHomeOrAwayComparison < minimumGDHorA\n        ) {\n          match.omit = true;\n        }\n        if (minimumGD !== 0 && match.goalDifferenceComparison < minimumGD) {\n          match.omit = true;\n        }\n        break;\n      case finalHomeGoals < finalAwayGoals:\n        if (minimumXG !== 0 && XGDiffBetweenTeamsAwayPerspective < minimumXG) {\n          match.omit = true;\n        }\n        if (\n          minimumLast6 !== 0 &&\n          last6PointDiffAwayPerspective < minimumLast6\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGDHorA !== 0 &&\n          Math.abs(match.goalDiffHomeOrAwayComparison) < minimumGDHorA\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGD !== 0 &&\n          Math.abs(match.goalDifferenceComparison) < minimumGD\n        ) {\n          match.omit = true;\n        }\n        break;\n      case finalHomeGoals === finalAwayGoals:\n        if (\n          minimumXG !== 0 &&\n          Math.abs(XGDiffBetweenTeamsHomePerspective) < minimumXG\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumLast6 !== 0 &&\n          last10PointDiffHomePerspective < minimumLast6\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGDHorA !== 0 &&\n          Math.abs(match.goalDiffHomeOrAwayComparison) < minimumGDHorA\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGD !== 0 &&\n          Math.abs(match.goalDifferenceComparison) < minimumGD\n        ) {\n          match.omit = true;\n        }\n        break;\n      default:\n        break;\n    }\n\n    // if (\n    //   match.game_week < 4\n    //   // match.omit === true\n    //   // match.game_week < 3 &&\n    // ) {\n    //   finalHomeGoals = \"-\";\n    //   finalAwayGoals = \"-\";\n    //   match.status = \"notEnoughData\";\n    // }\n\n    return [\n      finalHomeGoals,\n      finalAwayGoals,\n      rawFinalHomeGoals,\n      rawFinalAwayGoals,\n    ];\n  } else {\n    finalHomeGoals = \"\";\n    finalAwayGoals = \"\";\n    rawFinalHomeGoals = \"\";\n    rawFinalAwayGoals = \"\";\n    match.status = \"notEnoughData\";\n    match.profit = 0;\n  }\n\n  return [finalHomeGoals, finalAwayGoals, rawFinalHomeGoals, rawFinalAwayGoals];\n}\n\nasync function getSuccessMeasure(fixtures) {\n  let sumProfit = 0;\n  let investment = 0;\n  let exactScores = 0;\n  let successCount = 0;\n  let profit = 0;\n  let netProfit = 0;\n\n  // await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}tips/${dateStamp}`, {\n  //   method: \"PUT\",\n  //   headers: {\n  //     Accept: \"application/json\",\n  //     \"Content-Type\": \"application/json\",\n  //   },\n  //   body: JSON.stringify(matches)\n  // })\n\n  for (let i = 0; i < fixtures.length; i++) {\n    if (\n      fixtures[i].status === \"complete\" &&\n      fixtures[i].hasOwnProperty(\"prediction\") &&\n      fixtures[i].omit !== true\n    ) {\n      sumProfit = sumProfit + fixtures[i].profit;\n      investment = investment + 1;\n      netProfit = (sumProfit - investment).toFixed(2);\n      profit = parseFloat(netProfit);\n      if (fixtures[i].exactScore === true) {\n        exactScores = exactScores + 1;\n      }\n      if (fixtures[i].predictionOutcome === \"Won\") {\n        successCount = successCount + 1;\n      }\n    }\n  }\n\n  totalInvestment = totalInvestment + investment;\n  totalProfit = totalProfit + profit;\n  let ROI = (profit / investment) * 100;\n  totalROI = (totalProfit / totalInvestment) * 100;\n  console.log(`Total Profit : ${totalProfit}`);\n  console.log(`Total Investment : ${totalInvestment}`);\n  console.log(`Total ROI : ${totalROI}`);\n  var operand = ROI >= 0 ? \"+\" : \"\";\n  var operandTwo = totalROI >= 0 ? \"+\" : \"\";\n  let exactScoreHitRate = ((exactScores / investment) * 100).toFixed(1);\n  let successRate = ((successCount / investment) * 100).toFixed(1);\n\n  if (investment > 0) {\n    ReactDOM.render(\n      <Fragment>\n        <Div\n          className={\"SuccessMeasure\"}\n          text={`ROI for \n            all ${investment} W/D/W \n            outcomes: ${operand} ${ROI.toFixed(2)}%`}\n        />\n        <p>{`Correct W/D/W predictions: ${successCount} (${successRate}%)`}</p>\n        <p>{`Exact scores predicted: ${exactScores} (${exactScoreHitRate}%)`}</p>\n        <Div\n          className={\"SuccessMeasure\"}\n          text={`Cumalative ROI for \n            all ${totalInvestment} match outcomes: ${operandTwo} ${totalROI.toFixed(\n            2\n          )}%`}\n        />\n      </Fragment>,\n      document.getElementById(\"successMeasure2\")\n    );\n  } else {\n    return;\n  }\n}\n\nexport var tips = [];\nexport var allTips = [];\nlet allTipsSorted = [];\nvar newArray = [];\nvar bestBets = [];\nvar price;\nvar Over25Tips = [];\nvar XGDiffTips = [];\nvar rollingDiffTips = [];\nvar dangerousAttacksDiffTips = [];\nvar pointsDiffTips = [];\nvar combinations;\nvar exoticArray = [];\nvar gamesInExotic;\nvar minimumExotic;\nvar exoticStake;\nvar exoticString;\nvar bttsArray = [];\nvar accumulatedOdds = 1;\nlet predictions = [];\n\nexport async function getNewTips(array) {\n  // allTips = [];\n  newArray = [];\n  accumulatedOdds = 1;\n\n  if (array.length > 1 && incrementValue > 0) {\n    array.forEach((tip) => {\n      if (\n        array.indexOf(tip) < incrementValue\n        // tip.goalDifferential >= incrementValue && tip.comparisonScore > 0\n      ) {\n        newArray.push(tip);\n        accumulatedOdds = parseFloat(accumulatedOdds) * parseFloat(tip.rawOdds);\n      }\n    });\n  }\n  await renderTips(newArray);\n}\n\nexport async function getScorePrediction(day, mocked) {\n  let mock = mocked;\n  clicked = true;\n  tips = [];\n  bestBets = [];\n  // price = 0\n  bttsArray = [];\n  Over25Tips = [];\n  XGDiffTips = [];\n  pointsDiffTips = [];\n  rollingDiffTips = [];\n  dangerousAttacksDiffTips = [];\n  allTips = [];\n\n  let index = 2;\n  let divider = 10;\n\n  ReactDOM.render(<div></div>, document.getElementById(\"GeneratePredictions\"));\n\n  await Promise.all(\n    matches.map(async (match) => {\n      // if there are no stored predictions, calculate them based on live data\n      if (match) {\n        switch (true) {\n          case match.status === \"canceled\":\n            match.goalsA = \"P\";\n            match.goalsB = \"P\";\n            match.completeData = false;\n            await calculateScore(match, index, divider, false);\n            break;\n          case match.leagueID === 6935 ||\n            match.leagueID === 7061 ||\n            (match.game_week < 3 && match.game_week !== 0):\n            match.goalsA = \"x\";\n            match.goalsB = \"x\";\n            match.completeData = false;\n            await calculateScore(match, index, divider, true);\n            break;\n          default:\n            [\n              match.goalsA,\n              match.goalsB,\n              match.unroundedGoalsA,\n              match.unroundedGoalsB,\n              match.completeData = true,\n            ] = await calculateScore(match, index, divider, true);\n            break;\n        }\n      } else {\n        [\n          match.goalsA,\n          match.goalsB,\n          match.unroundedGoalsA,\n          match.unroundedGoalsB,\n        ] = await calculateScore(match, index, divider, true);\n      }\n\n      await getBTTSPotential(\n        match,\n        match.goalsA,\n        match.goalsB,\n        match.unroundedGoalsA,\n        match.unroundedGoalsB\n      );\n\n      let predictionObject;\n      let Over25PredictionObject;\n      let XGPredictionObject;\n      let pointsDiffObject;\n      let rollingDiffObject;\n      let dangerousAttacksDiffObject;\n\n      if (match.status === \"complete\" && match.prediction) {\n        match.outcomeSymbol =\n          match.predictionOutcome === \"Won\" ? \"\\u2714\" : \"\\u2718\";\n        match.over25PredictionOutcomeSymbol =\n          match.over25PredictionOutcome === \"Won\" ? \"\\u2714\" : \"\\u2718\";\n        match.bttsOutcomeSymbol =\n          match.bttsOutcome === \"bttsWon\" ? \"\\u2714\" : \"\\u2718\";\n      } else {\n        match.outcomeSymbol = \"\";\n        match.over25PredictionOutcomeSymbol = \"\";\n        match.bttsOutcomeSymbol = \"\";\n      }\n\n      //STICK\n\n      if (\n        match.unroundedGoalsA - match.unroundedGoalsB > 0.65 &&\n        match.homeOdds !== 0 &&\n        match.fractionHome !== \"N/A\" &&\n        match.includeInMultis !== false &&\n        match.omit !== true\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.status !== \"notEnoughData\" &&\n          match.homeOdds < 3\n        ) {\n          predictionObject = {\n            team: `${match.homeTeam} to win`,\n            game:\n              match.status === \"complete\"\n                ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n                : match.game,\n            odds: match.fractionHome,\n            rawOdds: match.homeOdds,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            outcome: match.predictionOutcome,\n            outcomeSymbol: match.outcomeSymbol,\n            goalDifferential: parseFloat(\n              await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n            ),\n            experimentalCalc: (\n              (match.unroundedGoalsA - match.unroundedGoalsB) *\n              Math.abs(match.teamComparisonScore)\n            ).toFixed(2),\n            XGdifferentialValue: parseFloat(match.XGdifferentialValue),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formHome.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n\n            if (\n              match.unroundedGoalsA - match.unroundedGoalsB >\n              incrementValue\n            ) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      } else if (\n        match.unroundedGoalsB - match.unroundedGoalsA > 1.75 &&\n        match.awayOdds !== 0 &&\n        match.fractionAway !== \"N/A\" &&\n        match.includeInMultis !== false &&\n        match.omit !== true\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.status !== \"notEnoughData\" &&\n          match.awayOdds < 3.5\n        ) {\n          predictionObject = {\n            team: `${match.awayTeam} to win`,\n            game:\n              match.status === \"complete\"\n                ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n                : match.game,\n            rawOdds: match.awayOdds,\n            odds: match.fractionAway,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            outcome: match.predictionOutcome,\n            outcomeSymbol: match.outcomeSymbol,\n            goalDifferential:\n              parseFloat(\n                await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n              ) - 1,\n            experimentalCalc: (\n              (match.unroundedGoalsB - match.unroundedGoalsA) *\n              Math.abs(match.teamComparisonScore)\n            ).toFixed(2),\n            XGdifferentialValue: parseFloat(match.XGdifferentialValue),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formAway.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n            if (match.unroundedGoalsB - match.unroundedGoalsA > 2) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      }\n\n      if (\n        match.btts === true &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\" &&\n        match.status !== \"notEnoughData\"\n      ) {\n        bttsArray.push(match);\n      }\n      if (\n        match.unroundedGoalsA + match.unroundedGoalsB > 4 &&\n        match.goalsA + match.goalsB > 2 &&\n        match.GoalsInGamesAverageHome > 3 &&\n        match.GoalsInGamesAverageAway > 3\n      ) {\n        Over25PredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: match.homeTeam,\n          decimalOdds: match.homeDoubleChance,\n          rawOdds: match.over25Odds,\n          odds: match.over25Odds,\n          comparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.over25PredictionOutcomeSymbol,\n          doubleChanceOutcome: match.over25PredictionOutcome,\n          goalTotalUnrounded: match.unroundedGoalsA + match.unroundedGoalsB,\n        };\n        Over25Tips.push(Over25PredictionObject);\n      }\n\n      if (\n        match.XGdifferential === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        XGPredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          XGdifferentialValue: match.XGdifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        XGDiffTips.push(XGPredictionObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        XGPredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          XGdifferentialValue: match.XGdifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        XGDiffTips.push(XGPredictionObject);\n      }\n\n      if (\n        match.pointsDifferential === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        pointsDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          pointsDifferentialValue: match.pointsDifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        pointsDiffTips.push(pointsDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        pointsDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          pointsDifferentialValue: match.pointsDifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        pointsDiffTips.push(pointsDiffObject);\n      }\n\n      if (\n        match.rollingGoalDiff === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        rollingDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        rollingDiffTips.push(rollingDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        rollingDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        rollingDiffTips.push(rollingDiffObject);\n      }\n\n      if (\n        match.dangerousAttacksDiff === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        dangerousAttacksDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        dangerousAttacksDiffTips.push(dangerousAttacksDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        dangerousAttacksDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        dangerousAttacksDiffTips.push(dangerousAttacksDiffObject);\n      }\n\n      predictions.push(match);\n    })\n  );\n  ReactDOM.render(\n    <RenderAllFixtures matches={matches} result={true} bool={mock} />,\n    document.getElementById(\"FixtureContainer\")\n  );\n  await getSuccessMeasure(matches);\n  await getMultis();\n  await getNewTips(allTipsSorted);\n\n  // await renderTips();\n}\n\nasync function getMultis() {\n  allTipsSorted = allTips.sort(function (a, b) {\n    return b.goalDifferential - a.goalDifferential;\n  });\n\n  bestBets.sort(function (a, b) {\n    if (a.goalDifferential === b.goalDifferential) {\n      return b.comparisonScore - a.comparisonScore;\n    } else {\n      return b.goalDifferential > a.goalDifferential ? 1 : -1;\n    }\n  });\n\n  bttsArray.sort(function (a, b) {\n    return b.combinedBTTS - a.combinedBTTS;\n  });\n\n  Over25Tips.sort(function (a, b) {\n    return b.goalTotalUnrounded - a.goalTotalUnrounded;\n  });\n\n  XGDiffTips.sort(function (a, b) {\n    return Math.abs(b.XGdifferentialValue) - Math.abs(a.XGdifferentialValue);\n  });\n\n  pointsDiffTips.sort(function (a, b) {\n    return (\n      Math.abs(b.pointsDifferentialValue) - Math.abs(a.pointsDifferentialValue)\n    );\n  });\n\n  rollingDiffTips.sort(function (a, b) {\n    return Math.abs(b.rollingGoalDiffValue) - Math.abs(a.rollingGoalDiffValue);\n  });\n\n  dangerousAttacksDiffTips.sort(function (a, b) {\n    return (\n      Math.abs(b.dangerousAttacksDiffValue) -\n      Math.abs(a.dangerousAttacksDiffValue)\n    );\n  });\n\n  exoticArray = [];\n  gamesInExotic = 0;\n  exoticStake = 0;\n  exoticString = \"\";\n\n  switch (true) {\n    case allTips.length >= 10:\n      for (let i = 0; i < 10; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 10;\n      minimumExotic = 8;\n      exoticStake = 0.1;\n      exoticString = \"45 8-folds, 10 9-folds and 1 10-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 9:\n      for (let i = 0; i < 9; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 9;\n      minimumExotic = 7;\n      exoticStake = 0.1;\n      exoticString = \"36 7-folds, 9 8-folds and 1 9-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 8:\n      for (let i = 0; i < 8; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 8;\n      minimumExotic = 6;\n      exoticStake = 0.1;\n      exoticString = \"28 6-folds, 8 7-folds and 1 8-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 7:\n      for (let i = 0; i < 7; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 7;\n      minimumExotic = 6;\n      exoticStake = 1;\n      exoticString = \"7 6-folds and 1 7-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 6:\n      for (let i = 0; i < 6; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 6;\n      minimumExotic = 5;\n      exoticStake = 1;\n      exoticString = \"6 5-folds and 1 6-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 5:\n      for (let i = 0; i < 5; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 5;\n      minimumExotic = 4;\n      exoticStake = 1;\n      exoticString = \"5 4-folds and 1 5-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case Over25Tips.length >= 4:\n      for (let i = 0; i < 4; i++) {\n        let game = Over25Tips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 4;\n      minimumExotic = 3;\n      exoticStake = 1;\n      exoticString = \"4 3-folds and 1 4-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    default:\n      break;\n  }\n}\n\nexport function getAccumulatorPrice(priceArray) {\n  var result = 1;\n  for (var i = 0; i < priceArray.length; i++)\n    result = result * priceArray[i].rawOdds;\n\n  return result;\n}\n\nexport function getCoverBetMaxReturns(priceArray, minAccSize, stake) {\n  var total = 0;\n  combinations = 0;\n\n  for (var i = minAccSize; i <= priceArray.length; i++) {\n    var perms = getUniquePermutations(priceArray, i);\n    combinations = combinations + perms.length;\n\n    for (var j = 0; j < perms.length; j++)\n      total += getAccumulatorPrice(perms[j]) * stake;\n  }\n  return parseFloat(total.toFixed(2));\n}\n\nfunction getUniquePermutations(arr, permLength) {\n  if (arr.length <= permLength) return [arr];\n\n  var permutations = [];\n  var newArr = [];\n\n  newArr = arr.slice(0);\n\n  for (var i = 0; i < arr.length; i++) {\n    newArr = arr.slice(0);\n    newArr.splice(i, 1);\n    permutations = twoDimArrayUnion(\n      permutations,\n      getUniquePermutations(newArr, permLength)\n    );\n  }\n  return permutations;\n}\n\nfunction twoDimArrayUnion(arr1, arr2) {\n  for (var i = 0; i < arr2.length; i++) {\n    var duplicate = false;\n\n    for (var j = 0; j < arr1.length; j++)\n      if (arr1[j].length === arr2[i].length)\n        for (var k = 0; k < arr1[j].length; k++)\n          if (arr1[j][k] !== arr2[i][k]) break;\n          else if (k === arr1[j].length - 1) duplicate = true;\n\n    if (!duplicate) arr1.push(arr2[i]);\n  }\n\n  return arr1;\n}\n\nfunction NewlineText(props) {\n  const text = props.text;\n  const newText = text.split(\"\\n\").map((str) => <p>{str}</p>);\n\n  return newText;\n}\n\nasync function renderTips() {\n  if (newArray.length > 0) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <div className=\"BestPredictionsExplainer\">\n                  Add or remove a selection using the buttons below. Predictions\n                  are ordered by confidence in the outcome.\n                </div>\n                {newArray.map((tip) => (\n                  <li key={`${tip.game}acca`}>\n                    <div>\n                      {tip.team}: {tip.odds}{\" \"}\n                      <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                    </div>\n                    <div className=\"TipGame\">{tip.game}</div>\n                  </li>\n                ))}\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  No games fit the criteria\n                </h4>\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  }\n\n  if (exoticArray.length > 4) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Exotic of the day\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  <NewlineText\n                    text={`${gamesInExotic} games: ${exoticString}\\nStake per multi: ${exoticStake} units - ${combinations} combinations\\nTotal stake: ${(\n                      exoticStake * combinations\n                    ).toFixed(2)} unit(s)`}\n                  />\n                  {`Potential winnings: ${price.toFixed(2)} units`}\n                </h4>\n                {exoticArray.map((tip) => (\n                  <li key={tip.team}>\n                    {tip.team}: {tip.odds}{\" \"}\n                    <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                    <div>{tip.game}</div>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Exotic of the day\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  Not enough games for this feature\n                </h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  }\n\n  if (Over25Tips.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Over 2.5 goals tips\"}\n            element={\n              <ul className=\"LongshotPredictions\" id=\"LongshotPredictions\">\n                <h4>Over 2.5 goals</h4>\n                {Over25Tips.map((tip) => (\n                  <li key={tip.team}>\n                    {tip.game} - Odds: {tip.odds}{\" \"}\n                    <span className={`${tip.doubleChanceOutcome}`}>\n                      {tip.outcomeSymbol}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Over 2.5 goals tips\"}\n            element={\n              <ul className=\"LongshotPredictions\" id=\"LongshotPredictions\">\n                <h4>No games fit the criteria</h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  }\n\n  if (bttsArray.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"BTTS games\"}\n            element={\n              <ul className=\"BTTSGames\" id=\"BTTSGames\">\n                <h4>Games with highest chance of BTTS</h4>\n                {bttsArray.map((game) => (\n                  <li key={game.game}>\n                    {`${game.game} odds: ${game.bttsFraction}`}{\" \"}\n                    <span className={game.bttsOutcome}>\n                      {game.bttsOutcomeSymbol}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"BTTS games\"}\n            element={\n              <ul className=\"BTTSGames\" id=\"BTTSGames\">\n                <h4>No games fit the criteria</h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  }\n\n  ReactDOM.render(\n    <div>\n      <Collapsable\n        buttonText={\"XG tips\"}\n        element={\n          <Slider\n            element={\n              XGDiffTips.length > 0 ? (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>Games with greatest XG Differentials</h4>\n                  {XGDiffTips.map((tip) => (\n                    <li key={tip.game}>\n                      {tip.game} | {tip.prediction} {tip.odds}{\" \"}\n                      <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>Games with greatest XG Differentials</h4>\n                  <li key={\"noPPGDiff\"}>\n                    Sorry, no games fit this criteria today\n                  </li>\n                </ul>\n              )\n            }\n            element2={\n              pointsDiffTips.length > 0 ? (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest points per game differentials (last 6)\n                  </h4>\n                  {pointsDiffTips.map((game) => (\n                    <li key={game.game}>\n                      {game.game} | {game.prediction} {game.odds}{\" \"}\n                      <span className={game.outcome}>{game.outcomeSymbol}</span>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest points per game differentials (last 6)\n                  </h4>\n                  <li key={\"noPPGDiff\"}>\n                    Sorry, no games fit this criteria today\n                  </li>\n                </ul>\n              )\n            }\n            element3={\n              rollingDiffTips.length > 0 ? (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest rolling goal difference differentials\n                  </h4>\n                  {rollingDiffTips.map((game) => (\n                    <li key={game.game}>\n                      {game.game} | {game.prediction} {game.odds}{\" \"}\n                      <span className={game.outcome}>{game.outcomeSymbol}</span>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest rolling goal difference differentials\n                  </h4>\n                  <li key={\"noPPGDiff\"}>\n                    Sorry, no games fit this criteria today\n                  </li>\n                </ul>\n              )\n            }\n            element4={\n              dangerousAttacksDiffTips.length > 0 ? (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest average dangerous attacks differentials\n                  </h4>\n                  {dangerousAttacksDiffTips.map((game) => (\n                    <li key={game.game}>\n                      {game.game} | {game.prediction} {game.odds}{\" \"}\n                      <span className={game.outcome}>{game.outcomeSymbol}</span>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest average dangerous attacks differentials\n                  </h4>\n                  <li key={\"noPPGDiff\"}>\n                    Sorry, no games fit this criteria today\n                  </li>\n                </ul>\n              )\n            }\n            element5={\n              <div className=\"DonationButton\">\n                <h2>Help with running costs</h2>\n                <h4>\n                  Monthly costs are rising and each donation helps keep XG\n                  Tipping free to use\n                </h4>\n                <StyledKofiButton buttonText=\"No sign up donation\" />\n              </div>\n            }\n          ></Slider>\n        }\n      ></Collapsable>\n      <div className=\"FiltersSelected\">\n        <h4>Filters selected:</h4>\n        <ul className=\"FiltersSelectedList\">\n          <li>Minimum goal difference spread: {minimumGD}</li>\n          <li>\n            Minimum goal difference spread (home or away only): {minimumGDHorA}\n          </li>\n          <li>Minimum XG difference spread: {minimumXG}</li>\n          <li>Minimum PPG difference spread: {minimumLast6}</li>\n          <li>\n            Odds range: {rangeValue[0]} - {rangeValue[1]}\n          </li>\n        </ul>\n      </div>\n    </div>,\n    document.getElementById(\"insights\")\n  );\n}\n","import React, { useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Collapsable from \"../components/CollapsableElement\";\n// import TeamOfTheWeek from \"../components/TeamOfTheWeek\";\n// import TeamOfTheSeason from \"../components/TeamOfTheSeason\";\n\nexport var toggleState = false;\nexport var setIsOff = false;\n\nconst upArrow = \"\\u{25B2}\";\n\nconst StyledTableCell2 = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"rgba(226, 226, 226, 1)\",\n    color: \"white\",\n    padding: \"0.35em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    textAlign: \"left\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    fontSize: \"1.9em\",\n    textAlign: \"left\",\n    fontFamily: \"inherit\",\n    padding: \"0.5em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"#030061\",\n  },\n}))(TableCell);\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"white\",\n    color: \"#030061\",\n    padding: \"0.5em\",\n    paddingTop: \"1em\",\n    paddingBottom: \"1em\",\n    textAlign: \"center\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    // backgroundColor: \"#030061\",\n    fontSize: \"1.9em\",\n    textAlign: \"center\",\n    fontFamily: \"inherit\",\n    padding: \"0.35em\",\n    paddingTop: \"1em\",\n    paddingBottom: \"1em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"#030061\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#rgba(226, 226, 226, 0.424)\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#rgba(226, 226, 226, 1)\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\nfunction styleForm(formIndicator) {\n  let className;\n  if (formIndicator === \"W\") {\n    className = \"winLeague\";\n  } else if (formIndicator === \"D\") {\n    className = \"drawLeague\";\n  } else if (formIndicator === \"L\") {\n    className = \"lossLeague\";\n  }\n  return className;\n}\n\nexport default function LeagueTable(props) {\n  [toggleState, setIsOff] = useState(false);\n\n  let rows = props.Teams.map((team, i) => (\n    <StyledTableRow key={`${props.Key}row${i}`}>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${i + 1}`}\n      </StyledTableCell>\n      <StyledTableCell2 component=\"th\" scope=\"row\" style={{ width: \"15em\" }}>\n        {`${team.Name}`}\n      </StyledTableCell2>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Played}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Wins}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Draws}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Losses}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.For}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Against}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.GoalDifference}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Points}`}\n      </StyledTableCell>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ textAlign: \"center\" }}\n      >\n        <span className={styleForm(team.Form[0])}>\n          {team.Form[0] !== undefined ? team.Form[0] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[1])}>\n          {team.Form[1] !== undefined ? team.Form[1] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[2])}>\n          {team.Form[2] !== undefined ? team.Form[2] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[3])}>\n          {team.Form[3] !== undefined ? team.Form[3] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[4])}>\n          {team.Form[4] !== undefined ? team.Form[4] : \"\"}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  ));\n\n  const leagueResults = [];\n  let singleResult;\n  if (props.Results) {\n    props.Results.forEach((result) => {\n      singleResult = (\n        <div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_xg}</span>\n            <span className=\"column\">XG</span>\n            <span className=\"column\">{result.team_b_xg}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shots}</span>\n            <span className=\"column\">Shots</span>\n            <span className=\"column\">{result.team_b_shots}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shotsOnTarget}</span>\n            <span className=\"column\">SOT</span>\n            <span className=\"column\">{result.team_b_shotsOnTarget}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_dangerous_attacks}</span>\n            <span className=\"column\">Dangerous Attacks</span>\n            <span className=\"column\">{result.team_b_dangerous_attacks}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_possession}%</span>\n            <span className=\"column\">Possession</span>\n            <span className=\"column\">{result.team_b_possession}%</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_red_cards}</span>\n            <span className=\"column\">Red cards</span>\n            <span className=\"column\">{result.team_b_red_cards}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.odds_ft_1}</span>\n            <span className=\"column\">Odds (pre-match)</span>\n            <span className=\"column\">{result.odds_ft_2}</span>\n          </div>\n        </div>\n      );\n\n      leagueResults.push(\n        <Collapsable\n          classNameButton=\"ResultButton\"\n          buttonText={\n            <div className=\"ResultRowOverview\">\n              <div className=\"columnOverviewHome\">{result.home_name}</div>\n              <span className=\"columnOverviewScore\">\n                {result.homeGoalCount} : {result.awayGoalCount}\n              </span>\n              <div className=\"columnOverviewAway\">{result.away_name}</div>\n            </div>\n          }\n          element={singleResult}\n        />\n      );\n    });\n  }\n\n  const leagueResultsOlder = [];\n  if (props.LastWeeksResults) {\n    props.LastWeeksResults.forEach((result) => {\n      singleResult = (\n        <div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_xg}</span>\n            <span className=\"column\">XG</span>\n            <span className=\"column\">{result.team_b_xg}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shots}</span>\n            <span className=\"column\">Shots</span>\n            <span className=\"column\">{result.team_b_shots}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shotsOnTarget}</span>\n            <span className=\"column\">SOT</span>\n            <span className=\"column\">{result.team_b_shotsOnTarget}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_dangerous_attacks}</span>\n            <span className=\"column\">Dangerous Attacks</span>\n            <span className=\"column\">{result.team_b_dangerous_attacks}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_possession}</span>\n            <span className=\"column\">Possession</span>\n            <span className=\"column\">{result.team_b_possession}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_red_cards}</span>\n            <span className=\"column\">Red cards</span>\n            <span className=\"column\">{result.team_b_red_cards}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.odds_ft_1}</span>\n            <span className=\"column\">Odds (pre-match)</span>\n            <span className=\"column\">{result.odds_ft_2}</span>\n          </div>\n        </div>\n      );\n\n      leagueResultsOlder.push(\n        <Collapsable\n          classNameButton=\"ResultButton\"\n          buttonText={\n            <div className=\"ResultRowOverview\">\n              <div className=\"columnOverviewHome\">{result.home_name}</div>\n              <span className=\"columnOverviewScore\">\n                {result.homeGoalCount} : {result.awayGoalCount}\n              </span>\n              <div className=\"columnOverviewAway\">{result.away_name}</div>\n            </div>\n          }\n          element={singleResult}\n        />\n      );\n    });\n  }\n\n  function getTopScorersTeam(id) {\n    let found = props.Teams.find((team) => team.ID === id);\n    return found.Name;\n  }\n\n  async function sorted(league, value, order) {\n    let sortedByForm;\n    if (order === \"desc\") {\n      sortedByForm = league.sort((a, b) => b[value] - a[value]);\n    } else {\n      sortedByForm = league.sort((a, b) => a[value] - b[value]);\n    }\n    setIsOff(!toggleState);\n    return sortedByForm;\n  }\n\n  if (\n    props.GamesPlayed > 3 &&\n    props.Teams[0].LeagueID !== 7956 &&\n    props.Teams[0].LeagueID !== 6969 &&\n    props.Teams[0].LeagueID !== 11084\n  ) {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table\n            className=\"Table\"\n            aria-label=\"customized table\"\n            key={props.Key}\n            style={{ marginTop: \"2em\", marginBottom: \"1em\" }}\n          >\n            <TableHead>\n              <TableRow>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"Points\", \"desc\")}\n                  >\n                    Pts {upArrow}\n                  </button>\n                </td>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"LastXPoints\", \"desc\")}\n                  >\n                    Last 5 {upArrow}\n                  </button>\n                </td>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n          <h5>{`${props.mostRecentGameweek} results`}</h5>\n          <div className=\"ResultsList\" id=\"ResultsList\">\n            <ul>{leagueResults}</ul>\n          </div>\n          <div className=\"LeagueStatisticsHeader\">League Statistics</div>\n          {/* <TeamOfTheWeek></TeamOfTheWeek>\n          <TeamOfTheSeason></TeamOfTheSeason> */}\n          <div className=\"LeagueStatistics\">\n            <ul className=\"LeagueStatsColumn\">\n              <li>Average home goals: {props.Stats.seasonAVG_home}</li>\n              <li>Average away goals: {props.Stats.seasonAVG_away}</li>\n              <li>BTTS: {props.Stats.seasonBTTSPercentage}%</li>\n              <li>\n                Over 0.5 goals: {props.Stats.seasonOver05Percentage_overall}%\n              </li>\n              <li>\n                Over 1.5 goals: {props.Stats.seasonOver15Percentage_overall}%\n              </li>\n              <li>\n                Over 2.5 goals: {props.Stats.seasonOver25Percentage_overall}%\n              </li>\n              <li>\n                Over 3.5 goals: {props.Stats.seasonOver35Percentage_overall}%\n              </li>\n              <li>\n                Over 4.5 goals: {props.Stats.seasonOver45Percentage_overall}%\n              </li>\n            </ul>\n            <ul className=\"LeagueStatsColumn\">\n              <li>\n                Over 7.5 corners: {props.Stats.over75CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 8.5 corners: {props.Stats.over85CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 9.5 corners: {props.Stats.over95CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 10.5 corners:{\" \"}\n                {props.Stats.over105CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 11.5 corners:{\" \"}\n                {props.Stats.over115CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 12.5 corners:{\" \"}\n                {props.Stats.over125CornersPercentage_overall}%\n              </li>\n              <li>Corners average: {props.Stats.cornersAVG_overall}</li>\n              <li>Cards average: {props.Stats.cardsAVG_overall}</li>\n            </ul>\n            <ul className=\"TopScorersColumn\">\n              <h4>Top scorers</h4>\n              <li>\n                {props.Stats.top_scorers[0].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[0].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[0].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[1].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[1].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[1].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[2].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[2].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[2].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[3].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[3].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[3].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[4].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[4].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[4].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[5].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[5].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[5].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[6].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[6].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[6].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[7].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[7].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[7].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[8].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[8].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[8].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[9].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[9].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[9].goals_overall}\n              </li>\n            </ul>\n          </div>\n        </TableContainer>\n      );\n    }\n  } else if (props.Teams[0].LeagueID === 4340) {\n    return null;\n  } else {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table aria-label=\"customized table\" key={props.Key}>\n            <TableHead>\n              <TableRow>\n                <button\n                  className=\"SortedColumn\"\n                  style={{ textAlign: \"center\" }}\n                  onClick={() => sorted(props.Teams, \"Position\")}\n                >\n                  {upArrow}\n                </button>{\" \"}\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <StyledTableCell>Pts</StyledTableCell>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"LastXPoints\", \"desc\")}\n                  >\n                    Last 5 {upArrow}\n                  </button>\n                </td>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n        </TableContainer>\n      );\n    }\n  }\n}\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { orderedLeagues } from \"../App\";\nimport { getForm } from \"./getForm\";\nimport { Fixture } from \"../components/Fixture\";\nimport { Button } from \"../components/Button\";\nimport { Slide } from \"../components/Slider\";\nimport { getScorePrediction } from \"../logic/getScorePredictions\";\nimport { ThreeDots } from \"react-loading-icons\";\nimport { selectedOdds } from \"../components/OddsRadio\";\nimport LeagueTable from \"../components/LeagueTable\";\nimport { getPointsFromLastX } from \"../logic/getScorePredictions\";\nimport SlideDiff from \"../components/SliderDiff\";\nimport Collapsable from \"../components/CollapsableElement\";\n\nvar oddslib = require(\"oddslib\");\n\n// require(\"dotenv\").config();\n\nvar fixtureResponse;\nvar fixtureArray = [];\nexport var matches = [];\nexport var resultedMatches = [];\nexport let arrayOfGames = [];\n\nvar league;\nvar leagueID;\nvar leagueGames = [];\nexport var leagueArray = [];\nvar leagueIdArray = [];\nexport var leagueStatsArray = [];\nexport let leagueInstance;\nexport let groupInstance;\nexport let allLeagueResultsArrayOfObjects = [];\nvar lastThreeFormHome;\nvar lastThreeFormAway;\nvar lastFiveFormHome;\nvar lastFiveFormAway;\nvar lastSixFormHome;\nvar lastSixFormAway;\nvar lastTenFormHome;\nvar lastTenFormAway;\nvar leagueOrAll;\nvar formRunHome;\nvar formRunAway;\nlet WDLinLeagueHome;\nlet WDLinLeagueAway;\nlet HomeAverageGoals;\nlet homeAverageGoals;\nlet HomeAverageConceded;\nlet homeAverageConceded;\nlet AwayAverageGoals;\nlet awayAverageGoals;\nlet AwayAverageConceded;\nlet awayAverageConceded;\n\n// export var [currentDay, month, year] = new Date()\n//   .toLocaleDateString(\"en-US\", { timeZone: \"Europe/London\" })\n//   .split(\"/\");\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nexport let allForm = [];\nexport let tableArray = [];\nexport let worldCupArray = [];\ngroupInstance = [];\nleagueInstance = [];\n\nasync function convertTimestampForSofaScore(timestamp) {\n  let newDate = new Date(timestamp);\n\n  let year = newDate.getFullYear();\n  let month = String(newDate.getMonth() + 1).padStart(2, '0'); // Adding 1 to month because it is zero-based\n  let day = String(newDate.getDate()).padStart(2, '0');\n  \n  let converted = `${year}-${month}-${day}`;\n\n  return converted;\n}\n\nasync function convertTimestamp(timestamp) {\n  let newDate = new Date(timestamp);\n  let [day, month, year] = newDate.toLocaleDateString(\"en-US\").split(\"/\");\n\n  let converted = `${year}-${day}-${month}`;\n\n  return converted;\n}\n\n\nexport async function generateTables(a, leagueIdArray, allResults) {\n  // leagueIdArray = [];\n  tableArray = [];\n  worldCupArray = [];\n  let i = 0;\n  leagueArray.forEach(function (league) {\n    let currentLeagueId = leagueIdArray[i];\n    i++;\n    leagueInstance = [];\n    //Skip MLS which has a weird format\n    console.log(league)\n    if (\n      !league.data.specific_tables[0].groups &&\n      currentLeagueId !== 6969 &&\n      league.data.specific_tables[0].table\n    ) {\n      for (\n        let index = 0;\n        index < league.data.specific_tables[0].table.length;\n        index++\n      ) {\n        let currentTeam = league.data.specific_tables[0].table[index];\n        let last5;\n        if (currentTeam.wdl_record.length < 5) {\n          last5 = currentTeam.wdl_record\n            .slice(`-${currentTeam.wdl_record.length}`)\n            .toUpperCase();\n        } else {\n          last5 = currentTeam.wdl_record.slice(-5).toUpperCase();\n        }\n\n        const team = {\n          LeagueID: currentLeagueId,\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          ID: currentTeam.id,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: last5,\n          LastXPoints: getPointsFromLastX(last5.split(\"\")),\n          Points: currentTeam.points,\n          wdl: currentTeam.wdl_record,\n          seasonGoals: currentTeam.seasonGoals,\n          seasonConceded: currentTeam.seasonConceded,\n        };\n        leagueInstance.push(team);\n      }\n      tableArray.push({ id: currentLeagueId, table: leagueInstance });\n    } else if (currentLeagueId === 11084) {\n      // for (let x = 0; x < league.data.specific_tables[0].groups.length; x++) {\n      // for (\n      //   let index = 0;\n      //   index < league.data.specific_tables[0].groups[x].table.length;\n      //   index++\n      // )\n      league.data.specific_tables[0].groups.forEach((group) => {\n        leagueInstance = [];\n        for (let index = 0; index < group.table.length; index++) {\n          let currentTeam = group.table[index];\n          let last5 = \"N/A\";\n          const team = {\n            LeagueID: currentLeagueId,\n            Position: index + 1,\n            Name: currentTeam.cleanName,\n            ID: currentTeam.id,\n            Played: currentTeam.matchesPlayed,\n            Wins: currentTeam.seasonWins_overall,\n            Draws: currentTeam.seasonDraws_overall,\n            Losses: currentTeam.seasonLosses_overall,\n            For: currentTeam.seasonGoals,\n            Against:\n              currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n            GoalDifference: currentTeam.seasonGoalDifference,\n            Form: last5,\n            LastXPoints: getPointsFromLastX(last5.split(\"\")),\n            Points: currentTeam.points,\n            wdl: currentTeam.wdl_record,\n            seasonGoals: currentTeam.seasonGoals,\n            seasonConceded: currentTeam.seasonConceded,\n          };\n          leagueInstance.push(team);\n        }\n        worldCupArray.push({\n          group: group.name,\n          table: leagueInstance,\n        });\n      });\n    } else if (league.data.league_table === null) {\n      for (\n        let index = 0;\n        index < league.data.all_matches_table_overall.length;\n        index++\n      ) {\n        let currentTeam = league.data.all_matches_table_overall[index];\n        let last5 = \"N/A\";\n        const team = {\n          LeagueID: currentLeagueId,\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          ID: currentTeam.id,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: last5,\n          LastXPoints: getPointsFromLastX(last5.split(\"\")),\n          Points: currentTeam.points,\n          wdl: currentTeam.wdl_record,\n          seasonGoals: currentTeam.seasonGoals,\n          seasonConceded: currentTeam.seasonConceded,\n        };\n        leagueInstance.push(team);\n      }\n\n      tableArray.push({ id: currentLeagueId, table: leagueInstance });\n    }\n  });\n}\n\nexport async function renderTable(index, results, id) {\n  let league;\n  //World cup table rendering\n\n  // let mostRecentGame = results.fixtures.pop();\n  let mostRecentGame = results.fixtures.pop();\n\n  let mostRecentGameweek = \"Latest\";\n\n  const gameweeksResults = results.fixtures.filter(\n    (games) => games.game_week === mostRecentGame.game_week\n  );\n\n  // const lastGameweeksResults = results.fixtures.filter(\n  //   (games) => games.game_week === mostRecentGameweek - 1\n  // );\n\n  const leagueTable = tableArray.filter((table) => table.id === id);\n\n  league = leagueTable[0].table;\n\n  let statistics;\n  let leagueStatistics = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}leagueStats/${id}`\n  );\n  await leagueStatistics.json().then((stats) => {\n    statistics = stats.data;\n  });\n\n  if (league !== undefined) {\n    ReactDOM.render(\n      <LeagueTable\n        Teams={league}\n        Stats={statistics}\n        Key={`League${index}`}\n        GamesPlayed={statistics.game_week}\n        Results={gameweeksResults}\n        mostRecentGameweek={mostRecentGameweek}\n      />,\n      document.getElementById(`leagueName${id}`)\n    );\n  }\n}\n\nasync function createFixture(match, result, mockBool) {\n  let roundedHomeOdds;\n  let roundedAwayOdds;\n  let roundedBTTSOdds;\n  let homeFraction;\n  let awayFraction;\n  let bttsFraction;\n\n  if (selectedOdds === \"Fractional odds\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      roundedHomeOdds = (Math.round(match.homeOdds * 5) / 5).toFixed(1);\n      roundedAwayOdds = (Math.round(match.awayOdds * 5) / 5).toFixed(1);\n\n      if (roundedHomeOdds < 1.1) {\n        roundedHomeOdds = 1.1;\n      }\n      if (roundedAwayOdds < 1.1) {\n        roundedAwayOdds = 1.1;\n      }\n\n      if (match.homeOdds === 0.1 && match.awayOdds === 0.1) {\n        match.homeOdds = 3;\n        roundedHomeOdds = 3;\n        match.awayOdds = 3;\n        roundedAwayOdds = 3;\n      }\n\n      try {\n        homeFraction = oddslib\n          .from(\"decimal\", roundedHomeOdds)\n          .to(\"fractional\", { precision: 1 });\n        awayFraction = oddslib\n          .from(\"decimal\", roundedAwayOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      roundedBTTSOdds = (Math.round(match.bttsOdds * 5) / 5).toFixed(1);\n\n      if (roundedBTTSOdds < 1.1) {\n        roundedBTTSOdds = 1.1;\n      }\n\n      try {\n        bttsFraction = oddslib\n          .from(\"decimal\", roundedBTTSOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  } else if (selectedOdds === \"Decimal odds\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      homeFraction = match.homeOdds;\n      awayFraction = match.awayOdds;\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      bttsFraction = match.bttsOdds;\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  }\n\n  match.omit = false;\n  match.homeTeamWinsPercentage = match.homeTeamWinPercentage;\n  match.homeTeamLossesPercentage = match.homeTeamLossPercentage;\n  match.homeTeamDrawsPercentage = match.homeTeamDrawPercentage;\n\n  match.awayTeamWinsPercentage = match.awayTeamWinPercentage;\n  match.awayTeamLossesPercentage = match.awayTeamLossPercentage;\n  match.awayTeamDrawsPercentage = match.awayTeamDrawPercentage;\n  match.fractionHome = homeFraction;\n  match.fractionAway = awayFraction;\n\n  match.bttsFraction = bttsFraction;\n\n  match.game = match.homeTeam + \" v \" + match.awayTeam;\n\n  // ReactDOM.render(\n  //   <Fixture\n  //     fixtures={matches}\n  //     result={result}\n  //     mock={mockBool}\n  //     className={\"individualFixture\"}\n  //   />,\n  //   document.getElementById(\"FixtureContainer\")\n  // );\n}\n\nexport function RenderAllFixtures(props) {\n  return (\n    <Fixture\n      fixtures={props.matches}\n      result={props.result}\n      mock={false}\n      className={\"individualFixture\"}\n    />\n  );\n}\n//     document.getElementById(\"FixtureContainer\")\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nlet isFunctionRunning = false;\n\nexport async function generateFixtures(\n  day,\n  date,\n  selectedOdds,\n  footyStatsFormattedDate,\n  current,\n  todaysDate,\n  dateSS\n) {\n  if (!isFunctionRunning) {\n    isFunctionRunning = true;\n    // const randomInt = Math.random() * 10\n\n    // if(randomInt >= 7){\n    //   alert(\"XGTipping is now serving over 2000 users a month,1 relying on donations to cover increasing running costs. If you can afford to do so and like what we do, please, help us stay subscription fee today by tapping to Donation button at the bottom of the page\")\n    // }\n\n    ReactDOM.render(\n      <div>\n        <div className=\"LoadingText\">\n          Loading all league, fixture & form data, please be patient...\n        </div>\n        <ThreeDots height=\"3em\" fill=\"#030061\" />\n      </div>,\n      document.getElementById(\"Loading\")\n    );\n\n    //cleanup if different day is selected\n    ReactDOM.render(\n      <div></div>,\n      document.getElementById(\"GeneratePredictions\")\n    );\n    ReactDOM.render(<div></div>, document.getElementById(\"successMeasure2\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"bestPredictions\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"exoticOfTheDay\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"insights\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"longShots\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"BTTS\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"draws\"));\n\n    const url = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${footyStatsFormattedDate}`;\n    const formUrl = `${process.env.REACT_APP_EXPRESS_SERVER}form/${date}`;\n\n    matches = [];\n    fixtureArray = [];\n\n    league = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${todaysDate}`\n    );\n\n    ReactDOM.render(<div></div>, document.getElementById(\"FixtureContainer\"));\n\n    fixtureResponse = await fetch(url);\n\n    await fixtureResponse.json().then((fixtures) => {\n      fixtureArray = Array.from(fixtures.data);\n    });\n\n    let form;\n    let formArray = [];\n    allForm = [];\n    var isFormStored;\n    var isStoredLocally;\n    var leaguesStored = false;\n    let storedForm = await fetch(formUrl);\n    if (storedForm.status === 201 || storedForm.status === 200) {\n      await storedForm.json().then((form) => {\n        formArray = Array.from(form.allForm);\n        isFormStored = true;\n        isStoredLocally = true;\n        allForm = formArray;\n      });\n    } else {\n      isFormStored = false;\n      isStoredLocally = false;\n    }\n\n    leagueIdArray = [];\n    for (let i = 0; i < orderedLeagues.length; i++) {\n      leagueID = orderedLeagues[i].element.id;\n      leagueIdArray.push(leagueID);\n    }\n\n    var leaguePositions = [];\n    leagueArray = [];\n\n    let allLeagueResults;\n\n    allLeagueResults = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}results`\n    );\n\n    if(league.status === 200){\n      leaguesStored = true;\n      console.log(\"leagues fetched from s3\")\n    }\n\n    if (league.status === 200 && allLeagueResults.status === 201) {\n      console.log(\"Not fetching leagues\");\n      await league.json().then((leagues) => {\n        leagueArray = Array.from(leagues.leagueArray);\n      });\n      updateResults(false);\n\n      await allLeagueResults.json().then((allGames) => {\n        allLeagueResultsArrayOfObjects = Array.from(allGames);\n      });\n\n      leaguesStored = true;\n      generateTables(\n        leagueArray,\n        leagueIdArray,\n        allLeagueResultsArrayOfObjects\n      );\n      arrayOfGames = []\n\n      const sofaScore = await fetch(`https://www.sofascore.com/api/v1/sport/football/scheduled-events/${dateSS}`)\n      await sofaScore.json().then((games) => {\n        games.events.forEach((game) => {\n          arrayOfGames.push({\n            homeTeam: game.homeTeam.name,\n            awayTeam: game.awayTeam.name,\n            id: game.id,\n            time: game.startTimestamp,\n            homeGoals: game.homeScore.display != undefined ? game.homeScore.display : \"-\",\n            awayGoals: game.awayScore.display != undefined ? game.awayScore.display : \"-\"\n          })\n        })\n      })\n\n      const sofaScoreLeagues = await fetch('')\n    } else {\n      allLeagueResultsArrayOfObjects = [];\n      console.log(\"Fetching leagues\");\n      for (let i = 0; i < orderedLeagues.length; i++) {\n        league = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}tables/${orderedLeagues[i].element.id}/${todaysDate}`\n        );\n        // eslint-disable-next-line no-loop-func\n        await league.json().then((table) => {\n          leagueArray.push(table);\n        });\n        leaguesStored = false;\n      }\n\n      //set variable for date X amount of days in the past and use that to filter the results\n\n      let startDate = (new Date().getTime() / 1000).toFixed(0);\n      // deduct 3 months\n      let targetDate = startDate - 23778463;\n\n      for (const orderedLeague of orderedLeagues) {\n        let fixtures = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${orderedLeague.element.id}`\n        );\n\n        let games = await fixtures.json();\n        let gamesFiltered;\n        let gamesShortened;\n        if (games.pager.current_page < games.pager.max_page) {\n          const page2 = await fetch(\n            `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${orderedLeague.element.id}&page=2`\n          );\n          let page2Data = await page2.json();\n\n          const gamesConcat = games.data.concat(page2Data.data);\n          const gamesConcatFiltered = gamesConcat.filter((game) => game.status === \"complete\");\n\n          let mostRecentResults = gamesConcatFiltered.filter(\n            (game) => game.date_unix > targetDate\n          );\n          let sorted = mostRecentResults.sort((a, b) => a.date_unix - b.date_unix);\n          gamesShortened = sorted.slice(-600);\n          gamesFiltered = gamesShortened;\n        } else {\n\n          gamesFiltered = games.data.filter(\n            (game) => game.status === \"complete\"\n          );\n\n          if (current) {\n            let mostRecentResults = gamesFiltered.filter(\n              (game) => game.date_unix > targetDate\n            );\n            gamesFiltered = mostRecentResults.slice(-600);\n          }\n        }\n\n        // let mostRecentResults = gamesFiltered.filter(\n        //   (game) => game.date_unix > targetDate\n        // );\n\n        const shortenedResults = gamesFiltered.map(\n          ({\n            home_name,\n            away_name,\n            homeGoalCount,\n            awayGoalCount,\n            date_unix,\n            team_a_xg,\n            team_b_xg,\n            odds_ft_1,\n            odds_ft_2,\n            team_a_shots,\n            team_b_shots,\n            team_a_corners,\n            team_b_corners,\n            team_a_shotsOnTarget,\n            team_b_shotsOnTarget,\n            team_a_red_cards,\n            team_b_red_cards,\n            team_a_possession,\n            team_b_possession,\n            team_a_dangerous_attacks,\n            team_b_dangerous_attacks,\n            pre_match_teamA_overall_ppg,\n            pre_match_teamB_overall_ppg,\n            game_week,\n          }) => ({\n            home_name,\n            away_name,\n            homeGoalCount,\n            awayGoalCount,\n            date_unix,\n            team_a_xg,\n            team_b_xg,\n            odds_ft_1,\n            odds_ft_2,\n            team_a_shots,\n            team_b_shots,\n            team_a_corners,\n            team_b_corners,\n            team_a_shotsOnTarget,\n            team_b_shotsOnTarget,\n            team_a_red_cards,\n            team_b_red_cards,\n            team_a_possession,\n            team_b_possession,\n            team_a_dangerous_attacks,\n            team_b_dangerous_attacks,\n            pre_match_teamA_overall_ppg,\n            pre_match_teamB_overall_ppg,\n            game_week,\n          })\n        );\n\n        let leagueObj = {\n          // leagueObject[orderedLeague] = {\n          name: orderedLeague.name,\n          id: orderedLeague.element.id,\n          fixtures: shortenedResults,\n        };\n\n        allLeagueResultsArrayOfObjects.push(leagueObj);\n      }\n      updateResults(true);\n      generateTables(\n        leagueArray,\n        leagueIdArray,\n        allLeagueResultsArrayOfObjects\n      );\n    }\n\n    let teamPositionPrefix;\n\n    async function getPrefix(position) {\n      switch (position) {\n        case 1:\n        case 21:\n        case 31:\n        case 41:\n          teamPositionPrefix = \"st\";\n          break;\n        case 2:\n        case 22:\n        case 32:\n        case 42:\n          teamPositionPrefix = \"nd\";\n          break;\n        case 3:\n        case 23:\n        case 33:\n        case 43:\n          teamPositionPrefix = \"rd\";\n          break;\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18:\n        case 19:\n        case 20:\n        case 24:\n        case 25:\n        case 26:\n        case 27:\n        case 28:\n        case 29:\n        case 30:\n        case 34:\n        case 35:\n        case 36:\n        case 37:\n        case 38:\n        case 39:\n        case 40:\n        case 44:\n        case 45:\n        case 46:\n        case 47:\n        case 48:\n          teamPositionPrefix = \"th\";\n          break;\n        default:\n          break;\n      }\n      return teamPositionPrefix;\n    }\n\n    for (let i = 0; i < leagueArray.length; i++) {\n      let leagueInstance;\n      let homeLeague;\n      let awayLeague;\n\n      if (leagueArray[i].data.league_table !== null) {\n        leagueInstance = leagueArray[i].data.league_table;\n        homeLeague = leagueArray[i].data.all_matches_table_home;\n        awayLeague = leagueArray[i].data.all_matches_table_away;\n      } else {\n        leagueInstance = leagueArray[i].data.all_matches_table_overall;\n        homeLeague = leagueArray[i].data.all_matches_table_home;\n        awayLeague = leagueArray[i].data.all_matches_table_away;\n      }\n\n      for (let x = 0; x < leagueInstance.length; x++) {\n        let regularSeason = leagueArray[i].data.specific_tables.find(\n          (season) =>\n            season.round === \"Regular Season\" ||\n            season.round === \"2024\" ||\n            season.round === \"2024/2025\" ||\n            season.round === \"Apertura\" ||\n            season.round === \"1st Phase\"\n          // season.round === \"North\" ||\n          // season.round === \"South\"\n        );\n        let string;\n\n        if (regularSeason !== undefined && regularSeason.table) {\n          string = regularSeason.table[x];\n          homeLeague = leagueArray[i].data.all_matches_table_home;\n          awayLeague = leagueArray[i].data.all_matches_table_away;\n        } else {\n          string = leagueArray[i].data.all_matches_table_overall[x];\n          homeLeague = leagueArray[i].data.all_matches_table_home;\n          awayLeague = leagueArray[i].data.all_matches_table_away;\n        }\n\n        let stringHome = homeLeague[x];\n        let stringAway = awayLeague[x];\n\n\n        if(string){\n          leaguePositions.push({\n            name: string.cleanName,\n            position: x + 1,\n            rawPosition: x + 1,\n            homeFormName: stringHome ? stringHome.cleanName : string.cleanName,\n            awayFormName: stringAway ? stringAway.cleanName : string.cleanName,\n            homeSeasonWinPercentage: stringHome\n              ? stringHome.seasonWins\n              : string.seasonWins,\n            awaySeasonWinPercentage: stringAway\n              ? stringAway.seasonWins\n              : string.seasonWins,\n            homeSeasonLossPercentage: stringHome\n              ? stringHome.seasonLosses_home\n              : string.seasonLosses_home,\n            awaySeasonLossPercentage: stringAway\n              ? stringAway.seasonLosses_away\n              : string.seasonLosses_away,\n            homeSeasonDrawPercentage: stringHome\n              ? stringHome.seasonDraws\n              : string.seasonDraws,\n            awaySeasonDrawPercentage: stringAway\n              ? stringAway.seasonDraws\n              : string.seasonDraws,\n            homeSeasonMatchesPlayed: stringHome\n              ? stringHome.matchesPlayed\n              : string.matchesPlayed,\n            awaySeasonMatchesPlayed: stringAway\n              ? stringAway.matchesPlayed\n              : string.matchesPlayed,\n            ppg: string.points / string.matchesPlayed,\n            wdl: string.wdl_record ? string.wdl_record : \"\",\n            played: string.matchesPlayed,\n            seasonGoals: string.seasonGoals,\n            seasonConceded: string.seasonConceded,\n          });\n        }\n      }\n    }\n\n    let previousLeagueName;\n\n    for (let i = 0; i < orderedLeagues.length; i++) {\n      leagueID = orderedLeagues[i].element.id;\n      leagueGames = fixtureArray.filter(\n        (game) => game.competition_id === orderedLeagues[i].element.id\n      );\n\n      for (const fixture of leagueGames) {\n        const unixTimestamp = fixture.date_unix;\n        const milliseconds = unixTimestamp * 1000;\n        const dateObject = new Date(milliseconds);\n\n        let match = {};\n        if (orderedLeagues[i].name !== previousLeagueName) {\n          match.leagueName = orderedLeagues[i].name;\n          match.leagueIndex = i;\n          match.leagueID = leagueID;\n        } else {\n          match.leagueName = null;\n          match.leagueIndex = i;\n          match.leagueID = leagueID;\n        }\n        match.id = fixture.id;\n        match.competition_id = fixture.competition_id;\n        match.date = fixture.date_unix;\n        match.time = dateObject.toLocaleString(\"en-GB\", {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n        });\n        match.homeTeam = fixture.home_name;\n        match.awayTeam = fixture.away_name;\n\n        match.homeOdds = +fixture.odds_ft_1.toFixed(2);\n        match.awayOdds = +fixture.odds_ft_2.toFixed(2);\n        match.drawOdds = +fixture.odds_ft_x.toFixed(2);\n        match.homeDoubleChance = fixture.odds_doublechance_1x;\n        match.awayDoubleChance = fixture.odds_doublechance_x2;\n        match.bttsOdds = fixture.odds_btts_yes;\n        match.homeId = fixture.homeID;\n        match.awayId = fixture.awayID;\n        match.form = [];\n        match.homeTeamInfo = [];\n        match.awayTeamInfo = [];\n        match.btts = false;\n\n        previousLeagueName = orderedLeagues[i].name;\n\n        let homeTeaminLeague;\n        let awayTeaminLeague;\n        let teamPositionHome;\n        let teamPositionHomeTable;\n        let teamPositionAwayTable;\n        let homeTeamWinPercentageHome;\n        let awayTeamWinPercentageAway;\n        let homeTeamLossPercentageHome;\n        let awayTeamLossPercentageAway;\n        let homeTeamDrawPercentageHome;\n        let awayTeamDrawPercentageAway;\n        let teamPositionAway;\n        let homePrefix;\n        let homePrefixHomeTable;\n        let awayPrefix;\n        let awayPrefixAwayTable;\n        let homeSeasonPPG;\n        let awaySeasonPPG;\n\n        try {\n          homeTeaminLeague = leaguePositions.find(\n            (team) => team.name === match.homeTeam\n          );\n\n          let homeTeaminHomeLeague = leaguePositions.find(\n            (team) => team.homeFormName === match.homeTeam\n          );\n\n          \n          teamPositionHome = homeTeaminLeague.position;\n          teamPositionHomeTable = homeTeaminHomeLeague.position;\n\n          WDLinLeagueHome = Array.from(homeTeaminLeague.wdl.toUpperCase());\n          HomeAverageGoals =\n            homeTeaminLeague.seasonGoals / homeTeaminLeague.played;\n          HomeAverageConceded =\n            homeTeaminLeague.seasonConceded / homeTeaminLeague.played;\n\n          homeTeamWinPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonWinPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homeTeamLossPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonLossPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homeTeamDrawPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonDrawPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homePrefix = await getPrefix(teamPositionHome);\n          homePrefixHomeTable = await getPrefix(teamPositionHomeTable);\n\n          homeSeasonPPG = homeTeaminLeague.ppg.toFixed(2);\n        } catch (error) {\n          console.log(error);\n          teamPositionHome = \"N/A\";\n          homePrefix = \"\";\n          homePrefixHomeTable = \"\";\n          homeSeasonPPG = \"N/A\";\n          homeTeaminLeague = {\n            rawPosition: \"N/A\",\n          };\n          WDLinLeagueHome = \"N/A\";\n        }\n\n        try {\n          awayTeaminLeague = leaguePositions.find(\n            (team) => team.name === match.awayTeam\n          );\n\n          let awayTeaminAwayLeague = leaguePositions.find(\n            (team) => team.awayFormName === match.awayTeam\n          );\n\n          teamPositionAway = awayTeaminLeague.position;\n          teamPositionAwayTable = awayTeaminAwayLeague.position;\n\n          WDLinLeagueAway = Array.from(awayTeaminLeague.wdl.toUpperCase());\n          AwayAverageGoals =\n            awayTeaminLeague.seasonGoals / awayTeaminLeague.played;\n          AwayAverageConceded =\n            awayTeaminLeague.seasonConceded / awayTeaminLeague.played;\n\n          awayTeamWinPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonWinPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayTeamLossPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonLossPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayTeamDrawPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonDrawPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayPrefix = await getPrefix(teamPositionAway);\n          awayPrefixAwayTable = await getPrefix(teamPositionAwayTable);\n\n          awaySeasonPPG = awayTeaminLeague.ppg.toFixed(2);\n        } catch (error) {\n          console.log(error);\n          teamPositionAway = \"N/A\";\n          awayPrefix = \"\";\n          awaySeasonPPG = \"N/A\";\n          awayTeaminLeague = {\n            rawPosition: \"N/A\",\n          };\n          WDLinLeagueAway = \"N/A\";\n        }\n\n        if (!isFormStored) {\n          form = await getForm(match);\n\n          let homeFormString5 =\n            form[0].data[0].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString5 =\n            form[1].data[0].stats.additional_info.formRun_overall.toUpperCase();\n          let homeFormString6 =\n            form[0].data[1].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString6 =\n            form[1].data[1].stats.additional_info.formRun_overall.toUpperCase();\n          let homeFormString10 =\n            form[0].data[2].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString10 =\n            form[1].data[2].stats.additional_info.formRun_overall.toUpperCase();\n\n          let homeFormRun =\n            form[0].data[2].stats.additional_info.formRun_home.toUpperCase();\n          let awayFormRun =\n            form[1].data[2].stats.additional_info.formRun_away.toUpperCase();\n\n          if (WDLinLeagueHome.length >= 10) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = WDLinLeagueHome.slice(-6);\n            lastTenFormHome = WDLinLeagueHome.slice(-10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = WDLinLeagueAway.slice(-6);\n            lastTenFormAway = WDLinLeagueAway.slice(-10);\n            leagueOrAll = \"League\";\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else if (WDLinLeagueHome.length >= 6) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = WDLinLeagueHome.slice(-6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = WDLinLeagueAway.slice(-6);\n            lastTenFormAway = Array.from(awayFormString10);\n            leagueOrAll = \"League\";\n\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else if (WDLinLeagueHome.length >= 5) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = Array.from(homeFormString6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = Array.from(awayFormString6);\n            lastTenFormAway = Array.from(awayFormString10);\n            leagueOrAll = \"League\";\n\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else {\n            lastThreeFormHome = [\n              homeFormString5[2],\n              homeFormString5[3],\n              homeFormString5[4],\n            ];\n            lastFiveFormHome = Array.from(homeFormString5);\n            lastSixFormHome = Array.from(homeFormString6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = [\n              awayFormString5[2],\n              awayFormString5[3],\n              awayFormString5[4],\n            ];\n\n            lastFiveFormAway = Array.from(awayFormString5);\n            lastSixFormAway = Array.from(awayFormString6);\n            lastTenFormAway = Array.from(awayFormString10);\n\n            leagueOrAll = \"All\";\n\n            homeAverageGoals = undefined;\n            homeAverageConceded = undefined;\n            awayAverageGoals = undefined;\n            awayAverageConceded = undefined;\n          }\n\n          formRunHome = Array.from(homeFormRun);\n          formRunAway = Array.from(awayFormRun);\n\n          if (\n            teamPositionHome === 0 ||\n            form[0].data[0].season_format !== \"Domestic League\"\n          ) {\n            teamPositionHome = \"N/A\";\n            teamPositionHomeTable = \"N/A\";\n            homePrefix = \"\";\n            homePrefixHomeTable = \"\";\n          }\n\n          if (\n            teamPositionAway === 0 ||\n            form[0].data[0].season_format !== \"Domestic League\"\n          ) {\n            teamPositionAway = \"N/A\";\n            teamPositionAwayTable = \"N/A\";\n            awayPrefix = \"\";\n            awayPrefixAwayTable = \"\";\n          }\n\n          allForm.push({\n            id: match.id,\n            teamIDHome: match.homeId,\n            teamIDAway: match.awayId,\n            leagueId: leagueID,\n            home: {\n              teamName: match.homeTeam,\n              0: {\n                XGOverall: parseFloat(form[0].data[0].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[0].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[0].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[0].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[0].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[0].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[0].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[0].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[0].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[0].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[0].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[0].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[0].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[0].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[0].stats.shotsOnTargetAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[0].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[0].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[0].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[0].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[0].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[0].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[0].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[0].stats.seasonBTTSPercentage_home\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition: homeTeaminLeague.rawPosition !== undefined\n                  ? homeTeaminLeague.rawPosition\n                  : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n              1: {\n                XGOverall: parseFloat(form[0].data[1].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[1].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[1].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[1].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[1].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[1].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[1].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[1].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[1].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[1].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[1].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[1].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[1].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[1].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[1].stats.shotsOnTargetAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[1].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[1].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[1].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[1].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[1].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[1].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[1].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[1].stats.seasonBTTSPercentage_home\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition: homeTeaminLeague.rawPosition !== undefined\n                  ? homeTeaminLeague.rawPosition\n                  : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n              2: {\n                XGOverall: parseFloat(form[0].data[2].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[2].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[2].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[2].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[2].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[2].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[2].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[2].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[2].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[2].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[2].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[2].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[2].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[2].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[2].stats.shotsOnTargetAVG_home\n                ),\n                AverageShots: parseFloat(\n                  form[0].data[2].stats.shotsAVG_overall\n                ),\n                AverageShotsHomeOrAway: parseFloat(\n                  form[0].data[2].stats.shotsAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[2].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[2].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[2].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[2].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[2].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[2].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[2].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[2].stats.seasonBTTSPercentage_home\n                ),\n                lastThreeForm: lastThreeFormHome.reverse(),\n                LastFiveForm: lastFiveFormHome.reverse(),\n                LastSixForm: lastSixFormHome.reverse(),\n                LastTenForm: lastTenFormHome.reverse(),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition: homeTeaminLeague.rawPosition !== undefined\n                  ? homeTeaminLeague.rawPosition\n                  : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                SeasonPPG: homeSeasonPPG,\n                WinPercentage: homeTeamWinPercentageHome,\n                LossPercentage: homeTeamLossPercentageHome,\n                DrawPercentage: homeTeamDrawPercentageHome,\n                formRun: formRunHome,\n                goalDifference:\n                  form[0].data[2].stats.seasonGoalDifference_overall,\n                goalDifferenceHomeOrAway:\n                  form[0].data[2].stats.seasonGoalDifference_home,\n                BttsPercentage:\n                  form[0].data[2].stats.seasonBTTSPercentage_overall,\n                BttsPercentageHomeOrAway:\n                  form[0].data[2].stats.seasonBTTSPercentage_home,\n                CardsTotal: form[0].data[2].stats.cardsTotal_overall,\n                CornersAverage: form[0].data[2].stats.cornersAVG_overall,\n                ScoredBothHalvesPercentage:\n                  form[0].data[2].stats.scoredBothHalvesPercentage_overall,\n                LastMatch: await convertTimestamp(\n                  form[0].data[0].last_updated_match_timestamp\n                ),\n                WDLRecord: WDLinLeagueHome,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n            },\n            away: {\n              teamName: match.awayTeam,\n              0: {\n                XGOverall: parseFloat(form[1].data[0].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[0].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[0].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[0].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[0].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[0].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[0].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[0].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[0].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[0].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[0].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[0].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[0].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[0].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[0].stats.shotsOnTargetAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[0].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[0].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[0].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[0].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[0].stats.seasonBTTSPercentage_away\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n              1: {\n                XGOverall: parseFloat(form[1].data[1].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[1].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[1].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[1].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[1].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[1].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[1].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[1].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[1].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[1].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[1].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[1].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[1].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[1].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[1].stats.shotsOnTargetAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[1].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[1].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[1].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[1].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[1].stats.seasonBTTSPercentage_away\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n              2: {\n                XGOverall: parseFloat(form[1].data[2].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[2].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[2].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[2].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[2].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[2].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[2].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[2].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[2].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[2].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[2].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[2].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[2].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[2].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[2].stats.shotsOnTargetAVG_away\n                ),\n                AverageShots: parseFloat(\n                  form[1].data[2].stats.shotsAVG_overall\n                ),\n                AverageShotsHomeOrAway: parseFloat(\n                  form[1].data[2].stats.shotsAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[2].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[2].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[2].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[2].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[2].stats.seasonBTTSPercentage_away\n                ),\n                // lastThreeForm: lastThreeFormAway.reverse(),\n                // LastFiveForm: lastFiveFormAway.reverse(),\n                // LastSixForm: lastSixFormAway.reverse(),\n                // LastTenForm: lastTenFormAway.reverse(),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                SeasonPPG: awaySeasonPPG,\n                WinPercentage: awayTeamWinPercentageAway,\n                LossPercentage: awayTeamLossPercentageAway,\n                DrawPercentage: awayTeamDrawPercentageAway,\n                formRun: formRunAway,\n                goalDifference:\n                  form[1].data[2].stats.seasonGoalDifference_overall,\n                goalDifferenceHomeOrAway:\n                  form[1].data[2].stats.seasonGoalDifference_away,\n                BttsPercentage:\n                  form[1].data[2].stats.seasonBTTSPercentage_overall,\n                BttsPercentageHomeOrAway:\n                  form[1].data[2].stats.seasonBTTSPercentage_away,\n                CardsTotal: form[1].data[2].stats.cardsTotal_overall,\n                CornersAverage: form[1].data[2].stats.cornersAVG_overall,\n                ScoredBothHalvesPercentage:\n                  form[1].data[2].stats.scoredBothHalvesPercentage_overall,\n                LastMatch: await convertTimestamp(\n                  form[1].data[0].last_updated_match_timestamp\n                ),\n                WDLRecord: WDLinLeagueAway,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n            },\n          });\n        }\n\n        match.homeBadge = fixture.home_image;\n        match.awayBadge = fixture.away_image;\n\n        match.homePpg = fixture.home_ppg.toFixed(2);\n        match.awayPpg = fixture.away_ppg.toFixed(2);\n\n        match.lastFiveFormHome = lastFiveFormHome;\n        match.lastFiveFormAway = lastFiveFormAway;\n\n        match.homeRawPosition = homeTeaminLeague.rawPosition;\n        match.awayRawPosition = awayTeaminLeague.rawPosition;\n\n        match.homeTeamHomePosition = `${teamPositionHomeTable}${homePrefixHomeTable}`;\n        match.awayTeamAwayPosition = `${teamPositionAwayTable}${awayPrefixAwayTable}`;\n\n        match.homeTeamHomePositionRaw = teamPositionHomeTable;\n        match.awayTeamAwayPositionRaw = teamPositionAwayTable;\n\n        match.homeTeamWinPercentage = homeTeamWinPercentageHome;\n        match.awayTeamWinPercentage = awayTeamWinPercentageAway;\n\n        match.homeTeamLossPercentage = homeTeamLossPercentageHome;\n        match.awayTeamLossPercentage = awayTeamLossPercentageAway;\n\n        match.homeTeamDrawPercentage = homeTeamDrawPercentageHome;\n        match.awayTeamDrawPercentage = awayTeamDrawPercentageAway;\n        match.status = fixture.status;\n        match.over25Odds = fixture.odds_ft_over25;\n        match.btts_potential = fixture.btts_potential;\n        match.game = match.homeTeam + \" v \" + match.awayTeam;\n        match.stadium = fixture.stadium_name;\n        match.homeGoals = fixture.homeGoalCount;\n        match.awayGoals = fixture.awayGoalCount;\n\n        match.expectedGoalsHomeToDate = fixture.team_a_xg_prematch;\n        match.expectedGoalsAwayToDate = fixture.team_b_xg_prematch;\n        match.game_week = fixture.game_week;\n\n        if (match.status !== \"canceled\" || match.status !== \"suspended\") {\n          matches.push(match);\n          await createFixture(match, false);\n        }\n      }\n\n      if (matches.length > 0) {\n        ReactDOM.render(\n          <Fragment>\n            <Button\n              text={\"Get Predictions & League stats\"}\n              onClickEvent={() => getScorePrediction(day)}\n              className={\"GeneratePredictions\"}\n            />\n            <div className=\"Version\">Prediction engine v1.1.3 (01/11/24)</div>\n            <Collapsable\n              buttonText={\"Filters\"}\n              element={\n                <div className=\"FilterContainer\">\n                  <h6>\n                    Use the below filters to remove predictions that don't meet\n                    the set criteria. These will be greyed out and not included\n                    in multi-builders and ROI stats\n                  </h6>\n                  <h6>Goals for/against differential filter (BETA)</h6>\n                  <div>\n                    I'm looking for tips where the goal differential between\n                    teams is at least...\n                  </div>\n                  <SlideDiff\n                    value=\"0\"\n                    text=\"all games\"\n                    useCase=\"gd\"\n                    lower=\"0\"\n                    upper=\"30\"\n                  ></SlideDiff>\n                  <h6>\n                    Goals for/against home or away differential filter (BETA)\n                  </h6>\n                  <div>\n                    I'm looking for tips where the goal differential (home or\n                    away only) between teams is at least...\n                  </div>\n                  <SlideDiff\n                    value=\"0\"\n                    text=\"all games\"\n                    useCase=\"gdHorA\"\n                    lower=\"0\"\n                    upper=\"30\"\n                  ></SlideDiff>\n                  <Fragment>\n                    <h6>XG for/against differential filter (BETA)</h6>\n                    <div>\n                      I'm looking for tips where the XG differential between\n                      teams is at least...\n                    </div>\n                    <SlideDiff\n                      value=\"0\"\n                      text=\"all games\"\n                      useCase=\"xg\"\n                      lower=\"0\"\n                      upper=\"30\"\n                    ></SlideDiff>\n                  </Fragment>\n                  <Fragment>\n                    <h6>Last 6 points differential filter (BETA)</h6>\n                    <div>\n                      I'm looking for tips where the points differential between\n                      teams is at least...\n                    </div>\n                    <SlideDiff\n                      value=\"0\"\n                      text=\"all games\"\n                      useCase=\"last10\"\n                      lower=\"0\"\n                      upper=\"18\"\n                    ></SlideDiff>\n                  </Fragment>\n                  <Fragment>\n                    <h6>Choose your risk profile</h6>\n                    <div>\n                      I'm looking for tips where the odds are between...\n                    </div>\n                    <Slide value=\"1\" text=\"all games\"></Slide>\n                  </Fragment>\n                </div>\n              }\n            />\n            ,\n          </Fragment>,\n          document.getElementById(\"GeneratePredictions\")\n        );\n      }\n\n      // }\n    }\n\n    ReactDOM.render(\n      <div>\n        <div className=\"LoadingText\"></div>\n      </div>,\n      document.getElementById(\"Loading\")\n    );\n\n    async function updateResults(bool) {\n      console.log(\"updating results\");\n      if (allLeagueResultsArrayOfObjects.length > 0 && bool === true) {\n        await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}results`, {\n          method: \"DELETE\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }).then(async () => {\n          await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}results`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(allLeagueResultsArrayOfObjects),\n          });\n        });\n      } else {\n        console.log(\"EMPTY RESULTS\");\n      }\n    }\n\n    if (!isStoredLocally) {\n      await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}allForm/${date}`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ allForm }),\n      });\n      await updateResults(true);\n    }\n    if (!leaguesStored) {\n      await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${todaysDate}`,\n        {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ leagueArray }),\n        }\n      );\n    }\n    // const allFixtures = await RenderAllFixtures(matches, false)\n    ReactDOM.render(\n      <RenderAllFixtures matches={matches} result={false} bool={false} />,\n      document.getElementById(\"FixtureContainer\")\n    );\n    // ReactDOM.render(<RenderAllFixtures matches={matches} bool={false}/>),document.getElementById(\"FixtureContainer\")\n    setTimeout(() => {\n      isFunctionRunning = false;\n    }, 3000);\n  }\n}\n","import React from \"react\";\n\nfunction PreviousGames(props) {\n  // Function to find the key(s) from a given value\n  function getKeysByValue(object, value) {\n    // Use Object.keys() and filter to find keys with the given value\n    return Object.keys(object).filter((key) => object[key] === value);\n  }\n\n  // Capture the array of JSX elements created by map\n  const games = props.reducedArr.map((result, index) => {\n    // Example usage\n    const home = result.team_a_id; // The value you want to find the key for\n    const away = result.team_b_id; // The value you want to find the key for\n\n    const teamNameHome = getKeysByValue(props.teamObject, home);\n    const teamNameAway = getKeysByValue(props.teamObject, away);\n    const unixTimestamp = result.date_unix;\n    const milliseconds = unixTimestamp * 1000;\n    const dateObject = new Date(milliseconds);\n    const date = `${dateObject.getDate()}/${\n      dateObject.getMonth() + 1\n    }/${dateObject.getFullYear()}`;\n\n    return (\n      <>\n        <li key=\"lastGameDetail\" className=\"LastGameDetail\">\n          {`${date}`}\n        </li>\n        <div className=\"LastGameOverview\" key={index}>\n          <div className=\"LastGameHome\">{`${teamNameHome}`}</div>\n          <span className=\"LastGameScore\">{`${result.team_a_goals}`}</span>\n          <span className=\"LastGameScore\">{`${result.team_b_goals}`}</span>\n          <div className=\"LastGameAway\">{`${teamNameAway}`}</div>{\" \"}\n          {/* Changed team_b_id */}\n        </div>\n      </>\n    );\n  });\n\n  // Return the array of JSX elements\n  return <>{games}</>;\n}\n\nexport default PreviousGames;\n","import React from \"react\";\nimport PreviousGames from \"../components/PreviousGames\"\n\nfunction HeadToHead(props) {\n  return (\n    <ul className={props.className} style={props.style}>\n      <li key=\"Stadium\" className=\"Stadium\" data-cy={props.name + \"Stadium\"}>\n        {`Venue - ${props.stadium}`}\n      </li>\n      <div className=\"KeyStatsOne\">\n      <li key=\"h2h\" className=\"h2h\" data-cy={props.name + \"h2h\"}>\n        {`Matches played: ${props.matches}`}\n      </li>\n      <li key=\"homeWins\" className=\"homeWins\" data-cy={props.name + \"homeWins\"}>\n        {`${props.homeTeam} wins: ${props.homeWins}`}\n      </li>\n      <li key=\"awayWins\" className=\"awayWins\" data-cy={props.name + \"awayWins\"}>\n        {`${props.awayTeam} wins: ${props.awayWins}`}\n      </li>\n      <li key=\"draws\" className=\"draws\" data-cy={props.name + \"draws\"}>\n        {`Draws: ${props.draws}`}\n      </li>\n      </div>\n      <div className=\"KeyStatsTwo\">\n      <li\n        key=\"averageGoals\"\n        className=\"averageGoals\"\n        data-cy={props.name + \"averageGoals\"}\n      >\n        {`Average goals in fixture: ${props.averageGoals}`}\n      </li>\n      <li\n        key=\"bestHomeOdds\"\n        className=\"bestHomeOdds\"\n        data-cy={props.name + \"bestHomeOdds\"}\n      >\n        {`Best oods for home win @: ${props.bestHomeOdds}`}\n      </li>\n      <li\n        key=\"bestAwayOdds\"\n        className=\"bestAwayOdds\"\n        data-cy={props.name + \"bestAwayOdds\"}\n      >\n        {`Best oods for away win @: ${props.bestAwayOdds}`}\n      </li>\n      </div>\n      {/* <li\n        key=\"lastGameDetail\"\n        className=\"LastGameDetail\"\n        data-cy={props.name + \"Last\"}\n      >\n        {`Last meeting - ${props.lastGameStadiumName} ${props.lastGameDate}`}\n      </li> */}\n      <PreviousGames reducedArr={props.reducedArr} teamObject={props.teamObject}></PreviousGames>\n      {/* <div className=\"LastGameOverview\">\n        <div\n          key=\"lastGame\"\n          className=\"LastGameHome\"\n          data-cy={props.name + \"LastGame\"}\n        >\n          {`${props.lastGameHomeTeam}`}\n        </div>\n        <span className=\"LastGameScore\">{`${props.lastGameHomeGoals}`}</span>\n        <span className=\"LastGameScore\">{`${props.lastGameAwayGoals}`}</span>\n        <div className=\"LastGameAway\">{`${props.lastGameAwayTeam}`}</div>\n      </div> */}\n\n      {/* <li\n        key=\"secondToLastGameDetail\"\n        className=\"secondToLastGameDetail\"\n        data-cy={props.name + \"secondToLast\"}\n      >\n        {`Second to last meeting - ${props.secondToLastGameStadiumName} ${props.secondToLastGameDate}`}\n      </li>\n      <div className=\"LastGameOverview\">\n        <div\n          key=\"lastGame\"\n          className=\"LastGameHome\"\n          data-cy={props.name + \"LastGame\"}\n        >\n          {`${props.secondToLastGameHomeTeam}`}\n        </div>\n        <span className=\"LastGameScore\">{`${props.secondToLastGameHomeGoals}`}</span>\n        <span className=\"LastGameScore\">{`${props.secondToLastGameAwayGoals}`}</span>\n        <div className=\"LastGameAway\">\n          {`${props.secondToLastGameAwayTeam}`}\n        </div>\n      </div> */}\n    </ul>\n  );\n}\n\nexport default HeadToHead;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    // backgroundColor: \"#dedddd\",\n    padding: 10,\n    textAlign: \"center\",\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    // border: \"none\",\n    margin: \"none\",\n    color: 'white',\n    lineHeight: '2em',\n    backgroundColor: '#030061',\n  },\n  body: {\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    padding: 10,\n    color: 'white',\n    // border: \"none\",\n    margin: \"none\",\n    backgroundColor: '#030061',\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#030061\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#030052\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\n\nexport default function CustomizedTables(props) {\n\n\n  return (\n    <TableContainer className=\"StatsTable\">\n      <Table aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Stat</StyledTableCell>\n            <StyledTableCell>H2H history</StyledTableCell>\n            <StyledTableCell>XGTipping forecast</StyledTableCell>\n            <StyledTableCell>Odds (yes)</StyledTableCell>\n            <StyledTableCell>Odds (no)</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        <StyledTableRow key=\"O05\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 0.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o05Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o05Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u05Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O15\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 1.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o15Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o15Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u15Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O25\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 2.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o25Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o25Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u25Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O35\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 3.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o35Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o35Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u35Odds}</StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport HeadToHead from \"../components/HeadToHead\";\nimport { Fragment } from \"react\";\nimport CustomizedTables from \"../components/Table\";\n\nexport async function getTeamStats(\n  id,\n  home,\n  away,\n  homeBTTS,\n  homeOnlyBTTS,\n  awayBTTS,\n  awayOnlyBTTS\n) {\n  let identifier = id;\n  let bestHomeOdds;\n  let bestHomeOddsProvider;\n  let bestAwayOdds;\n  let bestAwayOddsProvider;\n\n  let match = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}match/${identifier}`\n  );\n  await match.json().then(async (match) => {\n    const matchArr = match.data.h2h.previous_matches_ids;\n    const reducedMatchArr = matchArr.slice(0, 10)\n\n    let oddsComparisonHomeArray = [];\n    let oddsComparisonAwayArray = [];\n\n    if (match.data.odds_comparison) {\n      oddsComparisonHomeArray = match.data.odds_comparison[\"FT Result\"][1];\n      oddsComparisonAwayArray = match.data.odds_comparison[\"FT Result\"][2];\n\n      let sortedHomeOdds = Object.entries(oddsComparisonHomeArray).sort(\n        (a, b) => b[1] - a[1]\n      );\n      let sortedAwayOdds = Object.entries(oddsComparisonAwayArray).sort(\n        (a, b) => b[1] - a[1]\n      );\n\n      bestHomeOddsProvider = sortedHomeOdds[0][0];\n      bestHomeOdds = sortedHomeOdds[0][1];\n      bestAwayOddsProvider = sortedAwayOdds[0][0];\n      bestAwayOdds = sortedAwayOdds[0][1];\n    } else {\n      bestHomeOddsProvider = \"N/A\";\n      bestHomeOdds = \"N/A\";\n      bestAwayOddsProvider = \"N/A\";\n      bestAwayOdds = \"N/A\";\n    }\n\n    async function getBTTSPercentage(\n      homeToal,\n      home,\n      awayTotal,\n      away,\n      fixtureHistory\n    ) {\n\n      let total = homeToal + home + awayTotal + away + fixtureHistory;\n      return total / 5;\n    }\n\n    async function getFairOdds(impliedProbability) {\n      let impliedProbabilityDivided = impliedProbability / 100;\n      return (1 / impliedProbabilityDivided).toFixed(2);\n    }\n\n\n\n    if (match.data.h2h.previous_matches_results.totalMatches > 0) {\n\n      let homeTeam = match.data.home_name;\n      let awayTeam = match.data.away_name;\n\n      let teamMappings = {\n        [homeTeam]: match.data.homeID,\n        [awayTeam]: match.data.awayID\n      };\n\n      reducedMatchArr.sort((a, b) => b.date_unix - a.date_unix);\n\n      let date;\n      // await previousMatch.json().then(async (game) => {\n      //   previousMatchDetails = game.data;\n      //   const unixTimestamp = previousMatchDetails.date_unix;\n      //   const milliseconds = unixTimestamp * 1000;\n      //   dateObject = new Date(milliseconds);\n      //   date = `${dateObject.getDate()}/${\n      //     dateObject.getMonth() + 1\n      //   }/${dateObject.getFullYear()}`;\n\n      //   let secondToPreviousMatch;\n      //   let dateObject2;\n\n      //   // if (secondMatchExists !== false) {\n      //   //   secondToPreviousMatch = await fetch(\n      //   //     `${process.env.REACT_APP_EXPRESS_SERVER}match/${secondToLastMatch}`\n      //   //   );\n      //   //   await secondToPreviousMatch.json().then((game) => {\n      //   //     secondToPreviousMatchDetails = game.data;\n      //   //     const unixTimestamp = secondToPreviousMatchDetails.date_unix;\n      //   //     const milliseconds = unixTimestamp * 1000;\n      //   //     dateObject2 = new Date(milliseconds);\n      //   //     date2 = `${dateObject2.getDate()}/${\n      //   //       dateObject2.getMonth() + 1\n      //   //     }/${dateObject2.getFullYear()}`;\n      //   //   });\n      //   // }\n      // });\n\n\n      const BTTSForecast = await getBTTSPercentage(\n        homeBTTS,\n        homeOnlyBTTS,\n        awayBTTS,\n        awayOnlyBTTS,\n        match.data.h2h.betting_stats.bttsPercentage\n      );\n      const fairOddsBTTSYes = await getFairOdds(BTTSForecast);\n      const fairOddsBTTSNo = await getFairOdds(100 - BTTSForecast);\n\n      ReactDOM.render(\n        <Fragment>\n          <h3>Fixture history</h3>\n          <HeadToHead\n            className={\"PreviousMatchStats\"}\n            homeTeam={home}\n            awayTeam={away}\n            reducedArr={reducedMatchArr}\n            teamObject={teamMappings}\n            stadium={match.data.stadium_name}\n            matches={match.data.h2h.previous_matches_results.totalMatches}\n            homeWins={match.data.h2h.previous_matches_results.team_a_wins}\n            awayWins={match.data.h2h.previous_matches_results.team_b_wins}\n            draws={match.data.h2h.previous_matches_results.draw}\n            averageGoals={match.data.h2h.betting_stats.avg_goals}\n            bestHomeOdds={`${bestHomeOddsProvider} - ${bestHomeOdds}`}\n            bestAwayOdds={`${bestAwayOddsProvider} - ${bestAwayOdds}`}\n            // lastGameStadiumName={\n            //   previousMatchDetails.stadium_name\n            //     ? previousMatchDetails.stadium_name\n            //     : \"-\"\n            // }\n            // lastGameHomeGoals={\n            //   previousMatchDetails.homeGoalCount !== undefined\n            //     ? previousMatchDetails.homeGoalCount\n            //     : \"-\"\n            // }\n            // lastGameAwayGoals={\n            //   previousMatchDetails.awayGoalCount !== undefined\n            //     ? previousMatchDetails.awayGoalCount\n            //     : \"-\"\n            // }\n            // lastGameHomeTeam={\n            //   previousMatchDetails.home_name\n            //     ? previousMatchDetails.home_name\n            //     : \"-\"\n            // }\n            // lastGameAwayTeam={\n            //   previousMatchDetails.away_name\n            //     ? previousMatchDetails.away_name\n            //     : \"-\"\n            // }\n            // lastGameDate={!isNaN(date) ? date : \"-\"}\n            // secondToLastGameStadiumName={\n            //   secondToPreviousMatchDetails.stadium_name\n            //     ? secondToPreviousMatchDetails.stadium_name\n            //     : \"-\"\n            // }\n            // secondToLastGameHomeGoals={\n            //   secondToPreviousMatchDetails.homeGoalCount !== undefined\n            //     ? secondToPreviousMatchDetails.homeGoalCount\n            //     : \"-\"\n            // }\n            // secondToLastGameAwayGoals={\n            //   secondToPreviousMatchDetails.awayGoalCount !== undefined\n            //     ? secondToPreviousMatchDetails.awayGoalCount\n            //     : \"-\"\n            // }\n            // secondToLastGameHomeTeam={\n            //   secondToPreviousMatchDetails.home_name\n            //     ? secondToPreviousMatchDetails.home_name\n            //     : \"-\"\n            // }\n            // secondToLastGameAwayTeam={\n            //   secondToPreviousMatchDetails.away_name\n            //     ? secondToPreviousMatchDetails.away_name\n            //     : \"-\"\n            // }\n            // secondToLastGameDate={!isNaN(date2) ? date2 : \"-\"}\n          ></HeadToHead>\n          <CustomizedTables\n            o05Stat={match.data.h2h.betting_stats.over05Percentage}\n            o15Stat={match.data.h2h.betting_stats.over15Percentage}\n            o15Forecast={match.data.o15_potential}\n            o05Odds={match.data.odds_ft_over05}\n            u05Odds={match.data.odds_ft_under05}\n            o15Odds={match.data.odds_ft_over15}\n            u15Odds={match.data.odds_ft_under15}\n            o25Stat={match.data.h2h.betting_stats.over25Percentage}\n            o25Forecast={match.data.o25_potential}\n            o25Odds={match.data.odds_ft_over25}\n            u25Odds={match.data.odds_ft_under25}\n            o35Stat={match.data.h2h.betting_stats.over35Percentage}\n            o35Forecast={match.data.o35_potential}\n            o35Odds={match.data.odds_ft_over35}\n            u35Odds={match.data.odds_ft_under35}\n            BTTSStat={match.data.h2h.betting_stats.bttsPercentage}\n            BTTSForecast={`${BTTSForecast}%`}\n            BTTSOdds={`${match.data.odds_btts_yes}\\n Fair odds: ${fairOddsBTTSYes}`}\n            BTTSOddsNo={`${match.data.odds_btts_no}\\n Fair odds: ${fairOddsBTTSNo}`}\n            CornersStat={\"–\"}\n            CornersForecast={match.data.corners_potential}\n            CornersOdds={match.data.odds_corners_over_105}\n          />\n        </Fragment>,\n        document.getElementById(`H2HStats${identifier}`)\n      );\n    } else {\n      ReactDOM.render(\n        <div>No fixture history found</div>,\n        document.getElementById(`H2HStats${identifier}`)\n      );\n    }\n  });\n}\n","async function getOverOrUnderText(xgSum) {\n  let overUnderAchievingSum = xgSum;\n  let text;\n  switch (true) {\n    case overUnderAchievingSum > 1.5:\n      text = \"Underachieving drastically against expected goals.\";\n      break;\n    case overUnderAchievingSum > 1.25 && overUnderAchievingSum <= 1.5:\n      text = \"Underachieving significantly against expected goals.\";\n      break;\n    case overUnderAchievingSum > 1 && overUnderAchievingSum <= 1.25:\n      text = \"Underachieving moderately against expected goals.\";\n      break;\n    case overUnderAchievingSum > 0.75 && overUnderAchievingSum <= 1:\n      text = \"Underachieving slightly against expected goals.\";\n      break;\n    case overUnderAchievingSum > 0.4 && overUnderAchievingSum <= 0.75:\n      text = \"Underachieving very slightly against expected goals.\";\n      break;\n    case overUnderAchievingSum > -0.4 && overUnderAchievingSum <= 0.4:\n      text = \"Roughly matching the expected goal difference overall.\";\n      break;\n    case overUnderAchievingSum < -0.4 && overUnderAchievingSum >= -0.75:\n      text = \"Overachieving very slightly against expected goals.\";\n      break;\n    case overUnderAchievingSum < -0.75 && overUnderAchievingSum >= -1:\n      text = \"Overachieving slightly against expected goals overall.\";\n      break;\n    case overUnderAchievingSum < -1 && overUnderAchievingSum >= -1.25:\n      text = \"Overachieving moderately against expected goals.\";\n      break;\n    case overUnderAchievingSum < -1.25 && overUnderAchievingSum >= -1.5:\n      text = \"Overachieving significantly against expected goals.\";\n      break;\n    case overUnderAchievingSum < -1.5:\n      text = \"Overachieving drastically against expected goals.\";\n      break;\n    default:\n      text = \"\";\n      break;\n  }\n  \n  return text;\n}\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nasync function getXGDifferential(xgFor, xgAgainst, goalsFor, goalsAgainst) {\n  let xgDiff = xgFor - xgAgainst;\n  let goalDiff = goalsFor - goalsAgainst;\n  let compareXgAndGoalDiff = await diff(xgDiff, goalDiff);\n\n  return compareXgAndGoalDiff;\n}\n\nasync function getAttackingSummary(goalsRecent, goalsLongTerm) {\n\n  let text;\n  if (goalsRecent >= 3) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Free-scoring and improving recently in front of goal.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Free-scoring and consistent recently in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Free-scoring overall, but less so recently in games.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 3 && goalsRecent >= 2) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Impressive scoring; improving recently in front of goal.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Impressive scoring; consistent recently in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Impressive scoring, but less so recently in games.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 2 && goalsRecent >= 1) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Decent scoring; improving recently in front of goal.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Decent scoring; consistent recently in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Decent scoring, but less so recently in games.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 1 && goalsRecent > 0) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Poor scoring, but improving recently in front of goal.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Poor scoring, consistent in front of goal recently.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Poor scoring, no signs of improvement recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent === 0) {\n    switch (true) {\n      case goalsRecent === 0:\n        text = \"Woeful scoring; no goals scored recently at all.\";\n        break;\n      default:\n        text = \"\";\n        break;\n    }\n  }\n  return text;  \n}\n\nasync function getDefenceSummary(cleansheetStat) {\n  let text;\n  switch (true) {\n    case cleansheetStat > 80:\n      text = `Incredibly strong defensively; ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    case cleansheetStat > 60 && cleansheetStat <= 80:\n      text = `Very strong defensively; ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    case cleansheetStat > 40 && cleansheetStat <= 60:\n      text = `Defensively impressive; ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    case cleansheetStat > 20 && cleansheetStat <= 40:\n      text = `Defensively average; ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    case cleansheetStat > 1 && cleansheetStat <= 20:\n      text = `Defensively frail; only ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    case cleansheetStat === 0:\n      text = `Defensively weak; ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    default:\n      break;\n  }  \n  return text;\n}\n\nasync function GenerateFormSummary(form, lastx, recentForm) {\n  let text;\n  // let six = lastx[2];\n  let ten = lastx[1];\n  let five = lastx[0];\n\n  let xgSum = await getXGDifferential(\n    form.XGOverall,\n    form.XGAgainstAvgOverall,\n    form.ScoredOverall / 10,\n    form.ConcededOverall / 10\n  );\n  let xgText = await getOverOrUnderText(xgSum);\n  let attackString = await getAttackingSummary(\n    form.last5Goals,\n    form.last10Goals\n  );\n  let defenceString = await getDefenceSummary(form.CleanSheetPercentage);\n  let pointsAverageTotal =\n    (parseFloat(five) + parseFloat(ten)) / 2;\n\n    if (pointsAverageTotal >= 2.6) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Outstanding recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Outstanding recent form, steady over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Outstanding recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 2.3) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Excellent recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Excellent recent form, steady over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Excellent recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 2) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Very good recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Very good recent form, steady over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Very good recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 1.7) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Good recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Good recent form, steady over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Good recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 1.4) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Fairly good recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Fairly good recent form, steady over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Fairly good recent form, worsened in last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 1.1) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Average recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Average recent form, steady over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Average recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 0.8) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Poor recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Poor recent form, steady over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Poor recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 0.5) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Very poor recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Very poor recent form, steady over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Very poor recent form, worsened in last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal < 0.5) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Terrible recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Terrible recent form, steady over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Terrible recent form, worsened in last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else {\n      console.log(pointsAverageTotal);\n    }\n  \n  return text + ` ${xgText} ${attackString} ${defenceString}`;\n}\n\nexport default GenerateFormSummary;\n","// import { light } from \"@material-ui/core/styles/createPalette\";\n// import { toBePartiallyChecked } from \"@testing-library/jest-dom/dist/matchers\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  ArcElement,\n  LineElement,\n  Filler,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  SubTitle,\n} from \"chart.js\";\nimport { Line, Radar, Bar, Doughnut } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  ArcElement,\n  Filler,\n  BarElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  SubTitle\n);\n\nexport function Chart(props) {\n  let length;\n  let depth;\n\n  if (props.type === \"Points over time\") {\n    length = props.data1.length * 3;\n    depth = 0;\n  } else if (props.type === \"Rolling average points over last 10\") {\n    length = Math.abs(props.height);\n    depth = 0;\n  } else if (Math.abs(props.height) > Math.abs(props.depth)) {\n    length = Math.abs(props.height);\n    depth = -Math.abs(props.height);\n  } else if (Math.abs(props.height) < Math.abs(props.depth)) {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  } else {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  }\n\n  const options = {\n    color: \"#030061\",\n    responsive: true,\n    aspectRatio: 1.2,\n    maintainAspectRatio: true,\n    layout: {\n      padding: 3,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    scales: {\n      y: {\n        suggestedMin: depth,\n        suggestedMax: length,\n        // suggestedMax: Math.max(...props.data1) > 3 ? Math.max(...props.data1) : 3,\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          font: {\n            size: 12,\n          },\n        },\n      },\n      x: {\n        title: {\n          display: false,\n          text: \"Last X Games\",\n          font: {\n            size: 14,\n          },\n        },\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          display: false,\n          font: {\n            size: 14,\n          },\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 5,\n        },\n      },\n      title: {\n        display: true,\n        text: props.type,\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  const labels = Array.from(props.data1.keys());\n\n  console.log(props.data1)\n  console.log(props.data3)\n\n  let data = {\n    labels,\n    datasets: [\n      {\n        label: props.team1,\n        font: {\n          color: \"black\",\n        },\n        data: props.data1,\n        borderColor: \"#030061\",\n        borderWidth: 3,\n        backgroundColor: \"#030061\",\n        tension: props.tension,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        borderColor: \"#970d00\",\n        borderWidth: 3,\n        backgroundColor: \"#970d00\",\n        tension: props.tension,\n      }\n    ],\n  };\n\n  return <Line options={options} data={data} />;\n}\n\nexport function MultilineChart(props) {\n  let length;\n  let depth;\n\n  if (props.type === \"Points over time\") {\n    length = props.data1.length * 3;\n    depth = 0;\n  } else if (props.type === \"Rolling average points over last 10\") {\n    length = Math.abs(props.height);\n    depth = 0;\n  } else if (Math.abs(props.height) > Math.abs(props.depth)) {\n    length = Math.abs(props.height);\n    depth = -Math.abs(props.height);\n  } else if (Math.abs(props.height) < Math.abs(props.depth)) {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  } else {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  }\n\n  const options = {\n    color: \"#030061\",\n    responsive: true,\n    aspectRatio: 1.2,\n    maintainAspectRatio: true,\n    layout: {\n      padding: 3,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    scales: {\n      y: {\n        suggestedMin: depth,\n        suggestedMax: length,\n        // suggestedMax: Math.max(...props.data1) > 3 ? Math.max(...props.data1) : 3,\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          font: {\n            size: 12,\n          },\n        },\n      },\n      x: {\n        title: {\n          display: false,\n          text: \"Last X Games\",\n          font: {\n            size: 14,\n          },\n        },\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          display: false,\n          font: {\n            size: 14,\n          },\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 5,\n        },\n      },\n      title: {\n        display: true,\n        text: props.type,\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  const labels = Array.from(props.data1.keys());\n\n  console.log(props.data1)\n  console.log(props.data3)\n\n  let data = {\n    labels,\n    datasets: [\n      {\n        label: props.team1,\n        font: {\n          color: \"black\",\n        },\n        data: props.data1,\n        borderColor: \"#030061\",\n        borderWidth: 3,\n        backgroundColor: \"#030061\",\n        tension: props.tension,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        borderColor: \"#970d00\",\n        borderWidth: 3,\n        backgroundColor: \"#970d00\",\n        tension: props.tension,\n      },\n      {\n        label: `${props.team1} XG Diff`,\n        font: {\n          color: \"black\",\n        },\n        data: props.data3,\n        borderColor: \"#0600d6\",\n        borderWidth: 3,\n        backgroundColor: \"#0600d6\",\n        tension: props.tension,\n        hidden: true,\n      },\n      {\n        label: `${props.team2} XG Diff`,\n        font: {\n          color: \"black\",\n        },\n        data: props.data4,\n        borderColor: \"#be1000\",\n        borderWidth: 3,\n        backgroundColor: \"#be1000\",\n        tension: props.tension,\n        hidden: true,\n      },\n      {\n        label: `${props.team1} SOT Diff`,\n        font: {\n          color: \"black\",\n        },\n        data: props.data5,\n        borderColor: \"#0700ea\",\n        borderWidth: 3,\n        backgroundColor: \"#0700ea\",\n        tension: props.tension,\n        hidden: true,\n      },\n      {\n        label: `${props.team2} SOT Diff`,\n        font: {\n          color: \"black\",\n        },\n        data: props.data6,\n        borderColor: \"#e51300\",\n        borderWidth: 3,\n        backgroundColor: \"#e51300\",\n        tension: props.tension,\n        hidden: true,\n      },\n    ],\n  };\n\n  return <Line options={options} data={data} />;\n}\n\n\nexport function DoughnutChart(props) {\n  const options = {\n    color: \"#030061\",\n\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 10,\n          color: \"#030061\",\n        },\n      },\n      title: {\n        display: true,\n        text: \"XG Tipping Form Comparison\",\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  const data = {\n    labels: [props.homeTeam, props.awayTeam],\n    datasets: [\n      {\n        data: props.data,\n        backgroundColor: [\"#030061\", \"#970d00\"],\n        rotation: 270,\n        hoverOffset: 4,\n        cutout: \"75%\",\n        circumference: 180,\n      },\n    ],\n  };\n\n  const config = {\n    type: \"doughnut\",\n    data: data,\n  };\n\n  return <Doughnut options={options} data={data} />;\n}\n\nexport function RadarChart(props) {\n  const options = {\n    color: \"#030061\",\n    scales: {\n      r: {\n        angleLines: {\n          display: false,\n        },\n        suggestedMin: 0,\n        suggestedMax: 1,\n        ticks: {\n          precision: 0,\n          display: false,\n        },\n        // grid: {\n        //     circular: true,\n        //   }\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 10,\n          color: \"#030061\",\n        },\n      },\n      title: {\n        display: true,\n        text: props.title,\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  let data = {\n    labels: [\n      \"Attack rating\",\n      \"Defence rating\",\n      \"Ball retention\",\n      \"XG For\",\n      \"XG Against\",\n      \"Directness\",\n      \"Attacking precision\",\n    ],\n    datasets: [\n      {\n        label: props.team1,\n        data: props.data,\n        fill: true,\n        backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n        borderColor: \"#030061\",\n        pointBackgroundColor: \"#030061\",\n        pointBorderColor: \"#fff\",\n        pointHoverBackgroundColor: \"#fff\",\n        pointHoverBorderColor: \"rgb(255, 99, 132)\",\n        borderWidth: 2,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        fill: true,\n        backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n        borderColor: \"#970d00\",\n        pointBackgroundColor: \"#970d00\",\n        pointBorderColor: \"#fff\",\n        pointHoverBackgroundColor: \"#fff\",\n        pointHoverBorderColor: \"rgb(54, 162, 235)\",\n        borderWidth: 2,\n      },\n    ],\n  };\n\n  return <Radar options={options} data={data} />;\n}\n\nexport function BarChart(props) {\n  const datasetOne = props.data1;\n  const datasetTwo = props.data2;\n  const sum = datasetTwo.map(function (num, idx) {\n    return num - datasetOne[idx];\n  });\n\n  const max = Math.max(...sum);\n  const min = Math.min(...sum);\n\n  const largest = findLargestNum(max, min);\n\n  function findLargestNum(numOne, numTwo) {\n    const tempArr = [];\n    const firstNum = Math.abs(numOne);\n    const secondNum = Math.abs(numTwo);\n    tempArr.push(firstNum, secondNum);\n\n    return Math.max(...tempArr);\n  }\n\n  const options = {\n    color: \"#030061\",\n    indexAxis: \"y\",\n    // Elements options apply to all of the options unless overridden in a dataset\n    // In this case, we are setting the border of each horizontal bar to be 2px wide\n    aspectRatio: 1.3,\n    elements: {\n      bar: {\n        borderWidth: 2,\n      },\n    },\n    scales: {\n      x: {\n        min: -4,\n        max: 4,\n        ticks: {\n          display: false,\n        },\n      },\n      y: {\n        ticks: {\n          font: {\n            size: 10,\n          },\n        },\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: false,\n      },\n      title: {\n        display: true,\n        text: props.text,\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  const labels = [\n    \"Highest Goals\",\n    \"Fewest Conceeded\",\n    \"PPG\",\n    \"Highest XG\",\n    \"Fewest XG Conceeded\",\n    \"Shots On Target\",\n    \"Dangerous Attacks\",\n    \"Av. Possession\",\n    \"Home/Away Goal Diff\",\n    \"Corners\",\n  ];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        // label: 'Dataset 1',\n        legend: {\n          display: false,\n        },\n        data: sum,\n        backgroundColor(context) {\n          const index = context.dataIndex;\n          const value = context.dataset.data[index];\n          return value < 0 ? \"#030061\" : \"#970d00\";\n        },\n      },\n    ],\n  };\n\n  return <Bar options={options} data={data} />;\n}\n\nexport function BarChartTwo(props) {\n  const dataset = [props.data1, props.data2]\n\n  const options = {\n    color: \"#030061\",\n    indexAxis: \"x\",\n    // Elements options apply to all of the options unless overridden in a dataset\n    // In this case, we are setting the border of each horizontal bar to be 2px wide\n    aspectRatio: 1.3,\n    elements: {\n      bar: {\n        borderWidth: 2,\n      },\n    },\n    scales: {\n      y: {\n        min: -0.8,\n        max: 0.8,\n        ticks: {\n          display: true,\n          font: {\n            size: 10,\n          },\n        },\n      },\n      // y: {\n      //   suggestedMin: -0.8,\n      //   suggestedMax: 0.8,\n      //   ticks: {\n      //     font: {\n      //       size: 10,\n      //     },\n      //   },\n      // },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: true,\n      },\n      title: {\n        display: true,\n        text: [props.text],\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n      subtitle: {\n        display: true,\n        text: \"Green - Improving | Red - Worsening\",\n        color: \"#030061\",\n        font: {\n          size: 12,\n        },\n        padding: {\n          bottom: 10,\n        },\n      },\n    },\n  };\n\n  const labels = [\n    props.homeTeam,\n    props.awayTeam,\n  ];\n\n  const data = {\n    labels: labels,\n    datasets: [\n      {\n        legend: {\n          display: false,\n        },\n        // label: \"XG Recent Swing\",\n        data: dataset,\n        ticks: {\n          font: {\n            size: 14,\n          },\n        },\n        barThickness: 120,\n        backgroundColor(context) {\n          const index = context.dataIndex;\n          const value = context.dataset.data[index];\n          return value < 0 ? \"#730a00\" : \"#016001\";\n        },\n      },\n    ],\n  };\n\n  return <Bar options={options} data={data} />;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SofaLineupsWidget = ({ id, team1, team2, time, homeGoals, awayGoals }) => {\n  const iframeSrc = `https://widgets.sofascore.com/embed/lineups?id=${id}&widgetTheme=light`;\n\n  let differenceInSeconds, minutes\n  const currentTime = new Date().getTime() / 1000;\n  // Calculate the difference in seconds\n    if(time > 0){\n        differenceInSeconds = time - currentTime;\n        minutes = Math.floor(differenceInSeconds / 60);\n    } else {\n        minutes = -99999999\n    }\n\n\n\n  if(team1 === \"N/A\") {\n    return <h6>No lineups available for this match yet</h6>\n  } else if (minutes > 60) {\n    return (\n      <div>\n        <h6>Predicted lineups</h6>\n        <iframe\n          id={`sofa-lineups-embed-${id}`}\n          src={iframeSrc}\n          style={{\n            height: \"786px\",\n            maxWidth: \"800px\",\n            width: \"100%\",\n            border: \"0\",\n          }}\n          scrolling=\"no\"\n          title=\"SofaScore Lineups\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n      </div>\n    );\n  } else if (minutes < 60 && minutes > 0) {\n    return (\n      <div>\n        <h6>Lineups</h6>\n        <iframe\n          id={`sofa-lineups-embed-${id}`}\n          src={iframeSrc}\n          style={{\n            height: \"786px\",\n            maxWidth: \"800px\",\n            width: \"100%\",\n            border: \"0\",\n          }}\n          scrolling=\"no\"\n          title=\"SofaScore Lineups\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n      </div>\n    );\n  } else if (minutes < 0) {\n    return (\n      <div>\n        <div className=\"CurrentScore\">Score: {`${team1}: ${homeGoals} - ${team2}: ${awayGoals}`}</div>\n        <span>Score not live updated</span>\n        <h6 className=\"AttackingMomentum\">Live attacking momentum and goals</h6>\n        <iframe\n          width=\"100%\"\n          height=\"286\"\n          src={`https://widgets.sofascore.com/embed/attackMomentum?id=${id}&widgetTheme=light`}\n          frameborder=\"0\"\n          scrolling=\"no\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n        <h6>Lineups and in-play ratings</h6>\n        <iframe\n          id={`sofa-lineups-embed-${id}`}\n          src={iframeSrc}\n          style={{\n            height: \"786px\",\n            maxWidth: \"800px\",\n            width: \"100%\",\n            border: \"0\",\n          }}\n          scrolling=\"no\"\n          title=\"SofaScore Lineups\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n      </div>\n    );\n  }\n  else {\n    return <h6>{`Lineups coming in approximately ${minutes - 60} minutes`}</h6>;\n  }\n};\n\n\nSofaLineupsWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  team1: PropTypes.string.isRequired,\n  team2: PropTypes.string.isRequired,\n};\n\nexport default SofaLineupsWidget;\n","import ReactDOM from \"react-dom\";\nimport { Button } from \"../components/Button\";\nimport Stats from \"../components/createStatsDiv\";\nimport Div from \"../components/Div\";\nimport { allForm } from \"../logic/getFixtures\";\nimport { getTeamStats } from \"../logic/getTeamStats\";\nimport { getPointsFromLastX } from \"../logic/getScorePredictions\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport GenerateFormSummary from \"../logic/compareFormTrend\";\nimport {\n  Chart,\n  MultilineChart,\n  RadarChart,\n  BarChart,\n  BarChartTwo,\n  DoughnutChart,\n} from \"../components/Chart\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { clicked } from \"../logic/getScorePredictions\";\nimport SofaLineupsWidget from \"../components/SofaScore\";\nimport { arrayOfGames } from \"../logic/getFixtures\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nexport async function calculateAttackingStrength(stats) {\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    // averagePossession: 0.15,\n    \"Average Dangerous Attacks\": 0,\n    \"Average Shots\": 0.05,\n    \"Average Shots On Target\": 0.15,\n    \"Average Expected Goals\": 0.15,\n    \"Recent XG\": 0.25,\n    \"Average Goals\": 0.25,\n    Corners: 0,\n    \"Average Shot Value\": 0.1,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    // averagePossession: { min: 25, max: 75 },\n    \"Average Dangerous Attacks\": { min: 25, max: 75 }, // Adjust the max value as needed\n    \"Average Shots\": { min: 4, max: 25 }, // Adjust the max value as needed\n    \"Average Shots On Target\": { min: 3, max: 7 }, // Adjust the max value as needed\n    \"Average Expected Goals\": { min: 0.75, max: 2.25 }, // Adjust the max value as needed\n    \"Recent XG\": { min: 0.5, max: 2.25 }, // Adjust the max value as needed\n    \"Average Goals\": { min: 0, max: 3 }, // Adjust the max value as needed\n    Corners: { min: 2, max: 9 },\n    \"Average Shot Value\": { min: 8.5, max: 13 },\n  };\n\n  // Normalize each metric value and calculate the weighted sum\n  let weightedSum = 0;\n  for (const metric in stats) {\n    if (\n      stats.hasOwnProperty(metric) &&\n      weights.hasOwnProperty(metric) &&\n      ranges.hasOwnProperty(metric)\n    ) {\n      const normalizedValue = Math.max(\n        0,\n        Math.min(\n          1,\n          (stats[metric] - ranges[metric].min) /\n            (ranges[metric].max - ranges[metric].min)\n        )\n      );\n      weightedSum += normalizedValue * weights[metric];\n    } else {\n      console.log(metric);\n    }\n  }\n\n  return parseFloat(weightedSum.toFixed(2));\n}\n\nexport async function calculateDefensiveStrength(stats, normalizedValue = 1) {\n  let normValue = normalizedValue;\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    \"Average XG Against\": 0.2,\n    \"Recent XG Against\": 0.35,\n    \"Average Goals Against\": 0.35,\n    \"Average SOT Against\": 0.1,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    \"Average XG Against\": { min: 0.5, max: 2.25 }, // Adjust the max value as needed\n    \"Recent XG Against\": { min: 0.75, max: 2.25 },\n    \"Average Goals Against\": { min: 0, max: 3 }, // Adjust the max value as needed\n    \"Average SOT Against\": { min: 3, max: 7 },\n  };\n\n  // Normalize each metric value and calculate the weighted sum\n  let weightedSum = 0;\n  for (const metric in stats) {\n    if (\n      stats.hasOwnProperty(metric) &&\n      weights.hasOwnProperty(metric) &&\n      ranges.hasOwnProperty(metric)\n    ) {\n     // Normalize the value and clamp it between 0 and 1\n     let normalizedValue = (stats[metric] - ranges[metric].min) / (ranges[metric].max - ranges[metric].min);\n     normalizedValue = Math.max(0, Math.min(1, normalizedValue));\n\n     // Reverse logic for defensive strength: better defense, lower metric value\n     let val = normValue - normalizedValue;\n     \n     // Add the weighted value to the weightedSum\n     weightedSum += val * weights[metric];\n    }\n  }\n\n  return parseFloat(weightedSum.toFixed(2));\n}\n\nexport async function calculateMetricStrength(metricName, metricValue) {\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    averagePossession: 1,\n    xgFor: 1,\n    xgAgainst: 1,\n    directnessOverall: 1,\n    accuracyOverall: 1,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    averagePossession: { min: 20, max: 80 },\n    xgFor: { min: 0.25, max: 2.75 },\n    xgAgainst: { min: 0.25, max: 2.75 },\n    directnessOverall: { min: 0.5, max: 7 },\n    accuracyOverall: { min: 6, max: 14 },\n  };\n\n  // Ensure the metric is valid and exists in the weights and ranges objects\n  if (\n    !weights.hasOwnProperty(metricName) ||\n    !ranges.hasOwnProperty(metricName)\n  ) {\n    throw new Error(\"Invalid metric name or missing normalization range.\");\n  }\n\n  // Normalize the metric value\n  const normalizedValue =\n    (metricValue - ranges[metricName].min) /\n    (ranges[metricName].max - ranges[metricName].min);\n\n  // Calculate the weighted score\n  const weightedScore = normalizedValue * weights[metricName];\n\n  return parseFloat(weightedScore.toFixed(2));\n}\n\n// export async function getDefenceStrength(goalsAgainst) {\n//   let strength;\n//   switch (true) {\n//     case goalsAgainst >= 2.8:\n//       strength = 1;\n//       break;\n//     case goalsAgainst >= 2.5 && goalsAgainst < 2.8:\n//       strength = 2;\n//       break;\n//     case goalsAgainst >= 2.2 && goalsAgainst < 2.5:\n//       strength = 3;\n//       break;\n//     case goalsAgainst >= 1.9 && goalsAgainst < 2.2:\n//       strength = 4;\n//       break;\n//     case goalsAgainst >= 1.6 && goalsAgainst < 1.9:\n//       strength = 5;\n//       break;\n//     case goalsAgainst >= 1.3 && goalsAgainst < 1.6:\n//       strength = 6;\n//       break;\n//     case goalsAgainst >= 1 && goalsAgainst < 1.3:\n//       strength = 7;\n//       break;\n//     case goalsAgainst >= 0.7 && goalsAgainst < 1:\n//       strength = 8;\n//       break;\n//     case goalsAgainst >= 0.4 && goalsAgainst < 0.7:\n//       strength = 9;\n//       break;\n//     case goalsAgainst < 0.4:\n//       strength = 10;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getPossessionStrength(possession) {\n//   let strength;\n//   switch (true) {\n//     case possession >= 68:\n//       strength = 10;\n//       break;\n//     case possession >= 64 && possession < 68:\n//       strength = 9;\n//       break;\n//     case possession >= 60 && possession < 64:\n//       strength = 8;\n//       break;\n//     case possession >= 56 && possession < 60:\n//       strength = 7;\n//       break;\n//     case possession >= 52 && possession < 56:\n//       strength = 6;\n//       break;\n//     case possession >= 48 && possession < 52:\n//       strength = 5;\n//       break;\n//     case possession >= 44 && possession < 48:\n//       strength = 4;\n//       break;\n//     case possession >= 40 && possession < 44:\n//       strength = 3;\n//       break;\n//     case possession >= 35 && possession < 40:\n//       strength = 2;\n//       break;\n//     case possession < 35:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getShotsStrength(Shots) {\n//   let strength;\n//   switch (true) {\n//     case Shots >= 15:\n//       strength = 10;\n//       break;\n//     case Shots >= 14.25 && Shots < 15:\n//       strength = 9;\n//       break;\n//     case Shots >= 13.5 && Shots < 14.25:\n//       strength = 8;\n//       break;\n//     case Shots >= 12.75 && Shots < 13.5:\n//       strength = 7;\n//       break;\n//     case Shots >= 12 && Shots < 12.75:\n//       strength = 6;\n//       break;\n//     case Shots >= 11.25 && Shots < 12:\n//       strength = 5;\n//       break;\n//     case Shots >= 10.5 && Shots < 11.25:\n//       strength = 4;\n//       break;\n//     case Shots >= 9.75 && Shots < 10.5:\n//       strength = 3;\n//       break;\n//     case Shots >= 9 && Shots < 9.75:\n//       strength = 2;\n//       break;\n//     case Shots < 9:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getShotsStrengthHorA(Shots) {\n//   let strength;\n//   switch (true) {\n//     case Shots >= 19.5:\n//       strength = 10;\n//       break;\n//     case Shots >= 18 && Shots < 19.5:\n//       strength = 9;\n//       break;\n//     case Shots >= 17 && Shots < 18:\n//       strength = 8;\n//       break;\n//     case Shots >= 15.5 && Shots < 17:\n//       strength = 7;\n//       break;\n//     case Shots >= 14 && Shots < 15.5:\n//       strength = 6;\n//       break;\n//     case Shots >= 12.5 && Shots < 14:\n//       strength = 5;\n//       break;\n//     case Shots >= 11 && Shots < 12.5:\n//       strength = 4;\n//       break;\n//     case Shots >= 9.5 && Shots < 11:\n//       strength = 3;\n//       break;\n//     case Shots >= 8 && Shots < 9.5:\n//       strength = 2;\n//       break;\n//     case Shots < 8:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGForStrength(XG) {\n//   let strength;\n//   switch (true) {\n//     case XG >= 2.9:\n//       strength = 10;\n//       break;\n//     case XG >= 2.6 && XG < 2.9:\n//       strength = 9;\n//       break;\n//     case XG >= 2.3 && XG < 2.6:\n//       strength = 8;\n//       break;\n//     case XG >= 2 && XG < 2.3:\n//       strength = 7;\n//       break;\n//     case XG >= 1.7 && XG < 2:\n//       strength = 6;\n//       break;\n//     case XG >= 1.4 && XG < 1.7:\n//       strength = 5;\n//       break;\n//     case XG >= 1.1 && XG < 1.4:\n//       strength = 4;\n//       break;\n//     case XG >= 0.8 && XG < 1.1:\n//       strength = 3;\n//       break;\n//     case XG >= 0.5 && XG < 0.8:\n//       strength = 2;\n//       break;\n//     case XG < 0.5:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGAgainstStrength(XGAgainst) {\n//   let strength;\n//   switch (true) {\n//     case XGAgainst >= 2.9:\n//       strength = 1;\n//       break;\n//     case XGAgainst >= 2.6 && XGAgainst < 2.9:\n//       strength = 2;\n//       break;\n//     case XGAgainst >= 2.3 && XGAgainst < 2.6:\n//       strength = 3;\n//       break;\n//     case XGAgainst >= 2 && XGAgainst < 2.3:\n//       strength = 4;\n//       break;\n//     case XGAgainst >= 1.7 && XGAgainst < 2:\n//       strength = 5;\n//       break;\n//     case XGAgainst >= 1.4 && XGAgainst < 1.7:\n//       strength = 6;\n//       break;\n//     case XGAgainst >= 1.1 && XGAgainst < 1.4:\n//       strength = 7;\n//       break;\n//     case XGAgainst >= 0.8 && XGAgainst < 1.1:\n//       strength = 8;\n//       break;\n//     case XGAgainst >= 0.5 && XGAgainst < 0.8:\n//       strength = 9;\n//       break;\n//     case XGAgainst < 0.5:\n//       strength = 10;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGDifferentialStrength(XGDiff) {\n//   let strength;\n//   switch (true) {\n//     case XGDiff >= 1.5:\n//       strength = 10;\n//       break;\n//     case XGDiff >= 1 && XGDiff < 1.5:\n//       strength = 9;\n//       break;\n//     case XGDiff >= 0.5 && XGDiff < 1:\n//       strength = 8;\n//       break;\n//     case XGDiff >= 0.25 && XGDiff < 0.5:\n//       strength = 7;\n//       break;\n//     case XGDiff > 0 && XGDiff < 0.25:\n//       strength = 6;\n//       break;\n//     case XGDiff <= 0 && XGDiff > -0.25:\n//       strength = 5;\n//       break;\n//     case XGDiff <= -0.25 && XGDiff > -0.5:\n//       strength = 4;\n//       break;\n//     case XGDiff <= -0.5 && XGDiff > -1:\n//       strength = 3;\n//       break;\n//     case XGDiff <= -1 && XGDiff > -1.5:\n//       strength = 2;\n//       break;\n//     case XGDiff <= -1.5:\n//       strength = 1;\n//       break;\n//     default:\n//       console.log(\"default clause triggered\");\n//       break;\n//   }\n//   return strength;\n// }\n\nexport async function getXGtoActualDifferentialStrength(XGDiff) {\n  let strength;\n  switch (true) {\n    case XGDiff >= 1.5:\n      strength = 10;\n      break;\n    case XGDiff >= 1 && XGDiff < 1.5:\n      strength = 9;\n      break;\n    case XGDiff >= 0.5 && XGDiff < 1:\n      strength = 8;\n      break;\n    case XGDiff >= 0.25 && XGDiff < 0.5:\n      strength = 7;\n      break;\n    case XGDiff > 0 && XGDiff < 0.25:\n      strength = 6;\n      break;\n    case XGDiff <= 0 && XGDiff > -0.25:\n      strength = 5;\n      break;\n    case XGDiff <= -0.25 && XGDiff > -0.5:\n      strength = 4;\n      break;\n    case XGDiff <= -0.5 && XGDiff > -1:\n      strength = 3;\n      break;\n    case XGDiff <= -1 && XGDiff > -1.5:\n      strength = 2;\n      break;\n    case XGDiff <= -1.5:\n      strength = 1;\n      break;\n    default:\n      strength = 1;\n      break;\n  }\n  return strength;\n}\n\nlet rollingGoalDiffTotalHome = [];\nlet rollingGoalDiffTotalAway = [];\nlet rollingXGDiffTotalHome = [];\nlet rollingXGDiffTotalAway = [];\nlet rollingSOTDiffTotalHome = [];\nlet rollingSOTDiffTotalAway = [];\n\nexport async function createStatsDiv(game, displayBool) {\n  if (game.status !== \"void\") {\n    // takes the displayBool boolean from the fixture onClick and sets the styling of the stats div from there\n    function styling(testBool) {\n      let bool = testBool;\n      if (bool === true && clicked === true) {\n        // set stats element to display flex\n        return { display: \"block\" };\n      } else {\n        // set stats element to display none\n        return { display: \"none\" };\n      }\n    }\n    let style = styling(displayBool);\n\n    if (clicked === false) {\n      alert(\"Tap Get Predictions to fetch all game stats first\");\n    } else {\n      let index = 2;\n      let divider = 10;\n\n      let gameStats = allForm.find((match) => match.id === game.id);\n      const gameArrayHome = [];\n      const gameArrayAway = [];\n      const gameArrayHomeTeamHomeGames = [];\n      const gameArrayAwayTeamAwayGames = [];\n      let goalDiffArrayHome;\n      let goalDiffArrayAway;\n      let xgDiffArrayHome;\n      let xgDiffArrayAway;\n      let sotDiffArrayHome;\n      let sotDiffArrayAway;\n      let latestHomeGoalDiff;\n      let latestAwayGoalDiff;\n\n      var getEMA = (a, r) =>\n        a.reduce(\n          (p, n, i) =>\n            i\n              ? p.concat(\n                  (2 * n) / (r + 1) + (p[p.length - 1] * (r - 1)) / (r + 1)\n                )\n              : p,\n          [a[0]]\n        );\n\n      const homeForm = gameStats.home[index];\n      const awayForm = gameStats.away[index];\n\n      if (displayBool === true) {\n        // let fixtures = await fetch(\n        //   `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${gameStats.leagueId}`\n        // );\n\n        const pos = allLeagueResultsArrayOfObjects\n          .map((i) => i.id)\n          .indexOf(gameStats.leagueId);\n        let matches = allLeagueResultsArrayOfObjects[pos];\n        // await fixtures.json().then((matches) => {\n        const resultHome = matches.fixtures.filter(\n          (game) =>\n            game.home_name === gameStats.home.teamName ||\n            game.away_name === gameStats.home.teamName\n        );\n\n        const resultHomeOnly = matches.fixtures.filter(\n          (game) => game.home_name === gameStats.home.teamName\n        );\n\n        resultHome.sort((a, b) => b.date_unix - a.date_unix);\n        resultHomeOnly.sort((a, b) => b.date_unix - a.date_unix);\n\n        for (let i = 0; i < resultHome.length; i++) {\n          let unixTimestamp = resultHome[i].date_unix;\n          let milliseconds = unixTimestamp * 1000;\n          let dateObject = new Date(milliseconds).toLocaleString(\"en-GB\", {\n            timeZone: \"UTC\",\n          });\n\n          let won;\n          let goalsScored;\n          let goalsConceeded;\n\n          switch (true) {\n            case resultHome[i].home_name === gameStats.home.teamName:\n              switch (true) {\n                case resultHome[i].homeGoalCount > resultHome[i].awayGoalCount:\n                  won = \"W\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                case resultHome[i].homeGoalCount ===\n                  resultHome[i].awayGoalCount:\n                  won = \"D\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                case resultHome[i].homeGoalCount < resultHome[i].awayGoalCount:\n                  won = \"L\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                default:\n                  break;\n              }\n              break;\n            case resultHome[i].away_name === gameStats.home.teamName:\n              switch (true) {\n                case resultHome[i].homeGoalCount > resultHome[i].awayGoalCount:\n                  won = \"L\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                case resultHome[i].homeGoalCount ===\n                  resultHome[i].awayGoalCount:\n                  won = \"D\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                case resultHome[i].homeGoalCount < resultHome[i].awayGoalCount:\n                  won = \"W\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                default:\n                  break;\n              }\n              break;\n            default:\n              break;\n          }\n\n          gameArrayHome.push({\n            id: resultHome[i].id,\n            date: dateObject,\n            homeTeam: resultHome[i].home_name,\n            homeGoals: resultHome[i].homeGoalCount,\n            homeXG: resultHome[i].team_a_xg,\n            homeOdds: resultHome[i].odds_ft_1,\n            awayTeam: resultHome[i].away_name,\n            awayGoals: resultHome[i].awayGoalCount,\n            awayXG: resultHome[i].team_b_xg,\n            awayOdds: resultHome[i].odds_ft_2,\n            won: won,\n            homeShots: resultHome[i].team_a_shots,\n            awayShots: resultHome[i].team_b_shots,\n            homeSot: resultHome[i].team_a_shotsOnTarget,\n            awaySot: resultHome[i].team_b_shotsOnTarget,\n            homeRed: resultHome[i].team_a_red_cards,\n            awayRed: resultHome[i].team_b_red_cards,\n            homePossession: resultHome[i].team_a_possession,\n            awayPossession: resultHome[i].team_b_possession,\n            homeDangerousAttacks: resultHome[i].team_a_dangerous_attacks,\n            awayDangerousAttacks: resultHome[i].team_b_dangerous_attacks,\n            homePPG: resultHome[i].pre_match_teamA_overall_ppg,\n            awayPPG: resultHome[i].pre_match_teamB_overall_ppg,\n            unixTimestamp: resultHome[i].date_unix,\n            goalsFor: goalsScored,\n            goalsAgainst: goalsConceeded,\n            btts:\n              resultHome[i].homeGoalCount > 0 && resultHome[i].awayGoalCount > 0\n                ? \"\\u2714\"\n                : \"\\u2718\",\n          });\n        }\n\n        for (let i = 0; i < resultHomeOnly.length; i++) {\n          let wonHomeOrAwayOnly;\n\n          switch (true) {\n            case resultHomeOnly[i].home_name === gameStats.home.teamName:\n              switch (true) {\n                case resultHomeOnly[i].homeGoalCount >\n                  resultHomeOnly[i].awayGoalCount:\n                  wonHomeOrAwayOnly = \"W\";\n                  gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n                  break;\n                case resultHomeOnly[i].homeGoalCount ===\n                  resultHomeOnly[i].awayGoalCount:\n                  wonHomeOrAwayOnly = \"D\";\n                  gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n                  break;\n                case resultHomeOnly[i].homeGoalCount <\n                  resultHomeOnly[i].awayGoalCount:\n                  wonHomeOrAwayOnly = \"L\";\n                  gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n                  break;\n                default:\n                  break;\n              }\n              break;\n\n            default:\n              break;\n          }\n        }\n\n        goalDiffArrayHome = homeForm.allTeamResults.map(\n          (a) => a.scored - a.conceeded\n        );\n        goalDiffArrayHome = goalDiffArrayHome.reverse()\n        xgDiffArrayHome = homeForm.allTeamResults.map(\n          (a) => a.XG - a.XGAgainst\n        );\n        xgDiffArrayHome = xgDiffArrayHome.reverse()\n\n        sotDiffArrayHome = homeForm.allTeamResults.map(\n          (a) => a.sot - a.sotAgainst\n        );\n        sotDiffArrayHome = sotDiffArrayHome.reverse()\n        \n        // goalDiffArrayHome = gameArrayHome.map(\n        //   (a) => a.goalsFor - a.goalsAgainst\n        // );\n\n\n        gameArrayHome.sort((a, b) => b.unixTimestamp - a.unixTimestamp);\n\n        rollingGoalDiffTotalHome = goalDiffArrayHome.map((sum => value => sum += value)(0));\n        rollingXGDiffTotalHome = xgDiffArrayHome.map((sum => value => sum += value)(0));;\n        rollingSOTDiffTotalHome = sotDiffArrayHome.map((sum => value => sum += value)(0));\n\n        const resultAway = matches.fixtures.filter(\n          (game) =>\n            game.away_name === gameStats.away.teamName ||\n            game.home_name === gameStats.away.teamName\n        );\n\n        const resultAwayOnly = matches.fixtures.filter(\n          (game) => game.away_name === gameStats.away.teamName\n        );\n\n        resultAway.sort((a, b) => b.date_unix - a.date_unix);\n        resultAwayOnly.sort((a, b) => b.date_unix - a.date_unix);\n\n        for (let i = 0; i < resultAway.length; i++) {\n          let unixTimestamp = resultAway[i].date_unix;\n          let milliseconds = unixTimestamp * 1000;\n          let dateObject = new Date(milliseconds).toLocaleString(\"en-GB\", {\n            timeZone: \"UTC\",\n          });\n\n          let won;\n          let goalsScored;\n          let goalsConceeded;\n\n          switch (true) {\n            case resultAway[i].home_name === gameStats.away.teamName:\n              switch (true) {\n                case resultAway[i].homeGoalCount > resultAway[i].awayGoalCount:\n                  won = \"W\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                case resultAway[i].awayGoalCount ===\n                  resultAway[i].homeGoalCount:\n                  won = \"D\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                case resultAway[i].homeGoalCount < resultAway[i].awayGoalCount:\n                  won = \"L\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                default:\n                  break;\n              }\n              break;\n\n            case resultAway[i].away_name === gameStats.away.teamName:\n              switch (true) {\n                case resultAway[i].homeGoalCount > resultAway[i].awayGoalCount:\n                  won = \"L\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                case resultAway[i].homeGoalCount ===\n                  resultAway[i].awayGoalCount:\n                  won = \"D\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                case resultAway[i].homeGoalCount < resultAway[i].awayGoalCount:\n                  won = \"W\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                default:\n                  break;\n              }\n              break;\n            default:\n              break;\n          }\n\n          gameArrayAway.push({\n            id: resultAway[i].id,\n            date: dateObject,\n            homeTeam: resultAway[i].home_name,\n            homeGoals: resultAway[i].homeGoalCount,\n            homeXG: resultAway[i].team_a_xg,\n            homeOdds: resultAway[i].odds_ft_1,\n            awayTeam: resultAway[i].away_name,\n            awayGoals: resultAway[i].awayGoalCount,\n            awayXG: resultAway[i].team_b_xg,\n            awayOdds: resultAway[i].odds_ft_2,\n            won: won,\n            homeShots: resultAway[i].team_a_shots,\n            awayShots: resultAway[i].team_b_shots,\n            homeSot: resultAway[i].team_a_shotsOnTarget,\n            awaySot: resultAway[i].team_b_shotsOnTarget,\n            homeRed: resultAway[i].team_a_red_cards,\n            awayRed: resultAway[i].team_b_red_cards,\n            homePossession: resultAway[i].team_a_possession,\n            awayPossession: resultAway[i].team_b_possession,\n            homeDangerousAttacks: resultAway[i].team_a_dangerous_attacks,\n            awayDangerousAttacks: resultAway[i].team_b_dangerous_attacks,\n            homePPG: resultAway[i].pre_match_teamA_overall_ppg,\n            awayPPG: resultAway[i].pre_match_teamB_overall_ppg,\n            unixTimestamp: resultAway[i].date_unix,\n            goalsFor: goalsScored,\n            goalsAgainst: goalsConceeded,\n            btts:\n              resultAway[i].homeGoalCount > 0 && resultAway[i].awayGoalCount > 0\n                ? \"\\u2714\"\n                : \"\\u2718\",\n          });\n        }\n\n        for (let i = 0; i < resultAwayOnly.length; i++) {\n          let wonAwayOrAwayOnly;\n\n          switch (true) {\n            case resultAwayOnly[i].away_name === gameStats.away.teamName:\n              switch (true) {\n                case resultAwayOnly[i].awayGoalCount >\n                  resultAwayOnly[i].homeGoalCount:\n                  wonAwayOrAwayOnly = \"W\";\n                  gameArrayAwayTeamAwayGames.push(wonAwayOrAwayOnly);\n                  break;\n                case resultAwayOnly[i].awayGoalCount ===\n                  resultAwayOnly[i].homeGoalCount:\n                  wonAwayOrAwayOnly = \"D\";\n                  gameArrayAwayTeamAwayGames.push(wonAwayOrAwayOnly);\n                  break;\n                case resultAwayOnly[i].awayGoalCount <\n                  resultAwayOnly[i].homeGoalCount:\n                  wonAwayOrAwayOnly = \"L\";\n                  gameArrayAwayTeamAwayGames.push(wonAwayOrAwayOnly);\n                  break;\n                default:\n                  break;\n              }\n              break;\n\n            default:\n              break;\n          }\n        }\n\n        goalDiffArrayAway = awayForm.allTeamResults.map(\n          (a) => a.scored - a.conceeded\n        );\n        goalDiffArrayAway = goalDiffArrayAway.reverse()\n        xgDiffArrayAway = awayForm.allTeamResults.map(\n          (a) => a.XG - a.XGAgainst\n        );\n        xgDiffArrayAway = xgDiffArrayAway.reverse()\n\n        sotDiffArrayAway = awayForm.allTeamResults.map(\n          (a) => a.sot - a.sotAgainst\n        );\n        sotDiffArrayAway = sotDiffArrayAway.reverse()\n\n        gameArrayAway.sort((a, b) => b.unixTimestamp - a.unixTimestamp);\n\n        rollingGoalDiffTotalAway = goalDiffArrayAway.map((sum => value => sum += value)(0));\n        rollingXGDiffTotalAway = xgDiffArrayAway.map((sum => value => sum += value)(0));\n        rollingSOTDiffTotalAway = sotDiffArrayAway.map((sum => value => sum += value)(0));\n        // });\n      }\n\n      const bttsArrayHome = Array.from(gameArrayHome, (x) => x.btts);\n      const bttsArrayAway = Array.from(gameArrayAway, (x) => x.btts);\n      const resultsArrayHome = Array.from(gameArrayHome, (x) => x.won);\n      const resultsArrayAway = Array.from(gameArrayAway, (x) => x.won);\n\n      let homeTeam = gameStats.home.teamName;\n      let awayTeam = gameStats.away.teamName;\n\n      let time = game.time;\n\n      if (homeForm.last3Points === undefined) {\n        homeForm.last3Points = getPointsFromLastX(homeForm.lastThreeForm);\n\n        homeForm.last5Points = getPointsFromLastX(homeForm.LastFiveForm);\n\n        homeForm.last6Points = getPointsFromLastX(homeForm.LastSixForm);\n\n        homeForm.last10Points = getPointsFromLastX(homeForm.LastTenForm);\n\n        awayForm.last3Points = getPointsFromLastX(awayForm.lastThreeForm);\n\n        awayForm.last5Points = getPointsFromLastX(awayForm.LastFiveForm);\n\n        awayForm.last6Points = getPointsFromLastX(awayForm.LastSixForm);\n\n        awayForm.last10Points = getPointsFromLastX(awayForm.LastTenForm);\n      }\n\n      async function getPointAverage(pointTotal, games) {\n        return pointTotal / games;\n      }\n\n      // let homeThreeGameAverage = await getPointAverage(\n      //   homeForm.last3Points,\n      //   3\n      // );\n\n      let homeFiveGameAverage = await getPointAverage(homeForm.last5Points, 5);\n\n      let homeSixGameAverage = await getPointAverage(homeForm.last6Points, 6);\n\n      let homeTenGameAverage = await getPointAverage(homeForm.last10Points, 10);\n\n      // let awayThreeGameAverage = await getPointAverage(\n      //   awayForm.last3Points,\n      //   3\n      // );\n\n      let awayFiveGameAverage = await getPointAverage(awayForm.last5Points, 5);\n\n      let awaySixGameAverage = await getPointAverage(awayForm.last6Points, 6);\n\n      let awayTenGameAverage = await getPointAverage(awayForm.last10Points, 10);\n\n      async function getPointsFromGames(formArr) {\n        const pairings = {\n          W: 3,\n          D: 1,\n          L: 0,\n        };\n        let newArr = [];\n        let arrayOfIndividualPoints = [];\n        let sum = 0;\n\n        for (let i = 0; i < formArr.length; i++) {\n          sum = sum + pairings[formArr[i]];\n          newArr.push(sum);\n          arrayOfIndividualPoints.push(pairings[formArr[i]]);\n        }\n        return [newArr, arrayOfIndividualPoints];\n      }\n\n      async function getLastGameResult(lastGame) {\n        let text;\n        switch (true) {\n          case lastGame === \"L\":\n            text = \"Lost\";\n            break;\n          case lastGame === \"D\":\n            text = \"Drew\";\n            break;\n          case lastGame === \"W\":\n            text = \"Won\";\n            break;\n          default:\n            break;\n        }\n        return text;\n      }\n\n      let homeFormTrend = [\n        homeFiveGameAverage.toFixed(2),\n        homeTenGameAverage.toFixed(2),\n      ];\n\n      let awayFormTrend = [\n        awayFiveGameAverage.toFixed(2),\n        awayTenGameAverage.toFixed(2),\n      ];\n\n      let formTextStringHome;\n      let formTextStringAway;\n\n      if (displayBool === true && gameStats.home[2].LeagueOrAll === \"League\") {\n        formTextStringHome = await GenerateFormSummary(\n          gameStats.home[2],\n          homeFormTrend,\n          gameStats.home[0]\n        );\n        formTextStringAway = await GenerateFormSummary(\n          gameStats.away[2],\n          awayFormTrend,\n          gameStats.away[0]\n        );\n      } else {\n        formTextStringHome = \"\";\n        formTextStringAway = \"\";\n      }\n\n      let favouriteRecordHome, favouriteRecordAway;\n\n      if (homeForm.oddsReliabilityWin && awayForm.oddsReliabilityWin) {\n        favouriteRecordHome =\n          game.homeOdds < game.awayOdds || game.homeOdds === game.awayOdds\n            ? `${homeForm.teamName} have been favourites ${\n                homeForm.favouriteCount\n              } times. Of these games, they have Won: ${homeForm.oddsReliabilityWin.toFixed(\n                0\n              )}%, Drawn:  ${homeForm.oddsReliabilityDraw.toFixed(\n                0\n              )}%, Lost:  ${homeForm.oddsReliabilityLose.toFixed(0)}%`\n            : `${homeForm.teamName} have been underdogs ${\n                homeForm.underdogCount\n              } times. Of these games, they have Won: ${homeForm.oddsReliabilityWinAsUnderdog.toFixed(\n                0\n              )}%, Drawn:  ${homeForm.oddsReliabilityDrawAsUnderdog.toFixed(\n                0\n              )}%, Lost:  ${homeForm.oddsReliabilityLoseAsUnderdog.toFixed(\n                0\n              )}%`;\n        favouriteRecordAway =\n          game.homeOdds > game.awayOdds || game.homeOdds === game.awayOdds\n            ? `${awayForm.teamName} have been favourites ${\n                awayForm.favouriteCount\n              } times. Of these games, they have Won: ${awayForm.oddsReliabilityWin.toFixed(\n                0\n              )}%, Drawn:  ${awayForm.oddsReliabilityDraw.toFixed(\n                0\n              )}%, Lost:  ${awayForm.oddsReliabilityLose.toFixed(0)}%`\n            : `${awayForm.teamName} have been underdogs ${\n                awayForm.underdogCount\n              } times. Of these games, they have Won: ${awayForm.oddsReliabilityWinAsUnderdog.toFixed(\n                0\n              )}%, Drawn:  ${awayForm.oddsReliabilityDrawAsUnderdog.toFixed(\n                0\n              )}%, Lost:  ${awayForm.oddsReliabilityLoseAsUnderdog.toFixed(\n                0\n              )}%`;\n      } else if (!homeForm.oddsReliabilityWin && awayForm.oddsReliabilityWin) {\n        favouriteRecordHome = 'No previous fixtures match the profile of this game.'\n        favouriteRecordAway =\n          game.homeOdds > game.awayOdds || game.homeOdds === game.awayOdds\n            ? `${awayForm.teamName} have been favourites ${\n                awayForm.favouriteCount\n              } times. Of these games, they have Won: ${awayForm.oddsReliabilityWin.toFixed(\n                0\n              )}%, Drawn:  ${awayForm.oddsReliabilityDraw.toFixed(\n                0\n              )}%, Lost:  ${awayForm.oddsReliabilityLose.toFixed(0)}%`\n            : `${awayForm.teamName} have been underdogs ${\n                awayForm.underdogCount\n              } times. Of these games, they have Won: ${awayForm.oddsReliabilityWinAsUnderdog.toFixed(\n                0\n              )}%, Drawn:  ${awayForm.oddsReliabilityDrawAsUnderdog.toFixed(\n                0\n              )}%, Lost:  ${awayForm.oddsReliabilityLoseAsUnderdog.toFixed(\n                0\n              )}%`;\n      } else if (homeForm.oddsReliabilityWin && !awayForm.oddsReliabilityWin){\n        favouriteRecordHome =\n          game.homeOdds < game.awayOdds || game.homeOdds === game.awayOdds\n            ? `${homeForm.teamName} have been favourites ${\n                homeForm.favouriteCount\n              } times. Of these games, they have Won: ${homeForm.oddsReliabilityWin.toFixed(\n                0\n              )}%, Drawn:  ${homeForm.oddsReliabilityDraw.toFixed(\n                0\n              )}%, Lost:  ${homeForm.oddsReliabilityLose.toFixed(0)}%`\n            : `${homeForm.teamName} have been underdogs ${\n                homeForm.underdogCount\n              } times. Of these games, they have Won: ${homeForm.oddsReliabilityWinAsUnderdog.toFixed(\n                0\n              )}%, Drawn:  ${homeForm.oddsReliabilityDrawAsUnderdog.toFixed(\n                0\n              )}%, Lost:  ${homeForm.oddsReliabilityLoseAsUnderdog.toFixed(\n                0\n              )}%`;\n        favouriteRecordAway = 'No previous fixtures match the profile of this game.'\n      } else if(!homeForm.oddsReliabilityWin && !awayForm.oddsReliabilityWin){\n        favouriteRecordHome = 'No previous fixtures match the profile of this game.'\n        favouriteRecordAway = 'No previous fixtures match the profile of this game.'\n      }\n\n      let homeLastGame = await getLastGameResult(homeForm.LastFiveForm[4]);\n      let awayLastGame = await getLastGameResult(awayForm.LastFiveForm[4]);\n\n      // let homeAttackStrength = await getAttackStrength(\n      //   homeForm.ScoredOverall / 10\n      // );\n\n      const attackingMetricsHome = {\n        // averagePossession: homeForm.AveragePossessionOverall,\n        \"Average Dangerous Attacks\": homeForm.AverageDangerousAttacksOverall,\n        \"Average Shots\": homeForm.AverageShots,\n        \"Average Shots On Target\": homeForm.AverageShotsOnTargetOverall,\n        \"Average Expected Goals\": homeForm.XGOverall,\n        \"Recent XG\": homeForm.XGlast5 ? homeForm.XGlast5 : homeForm.XGOverall,\n        \"Average Goals\":\n          homeForm.averageScoredLeague !== undefined &&\n          homeForm.averageScoredLeague !== null\n            ? homeForm.averageScoredLeague\n            : homeForm.ScoredOverall / 10,\n      };\n      const attackingMetricsAway = {\n        // averagePossession: awayForm.AveragePossessionOverall,\n        \"Average Dangerous Attacks\": awayForm.AverageDangerousAttacksOverall,\n        \"Average Shots\": awayForm.AverageShots,\n        \"Average Shots On Target\": awayForm.AverageShotsOnTargetOverall,\n        \"Average Expected Goals\": awayForm.XGOverall,\n        \"Recent XG\": awayForm.XGlast5 ? awayForm.XGlast5 : awayForm.XGOverall,\n        \"Average Goals\":\n          awayForm.averageScoredLeague !== undefined &&\n          awayForm.averageScoredLeague !== null\n            ? awayForm.averageScoredLeague\n            : awayForm.ScoredOverall / 10,\n      };\n\n      const defensiveMetricsHome = {\n        \"Clean Sheet Percentage\": 100 - homeForm.CleanSheetPercentage,\n        \"Average XG Against\": homeForm.XGAgainstAvgOverall,\n        \"Recent XG Against\": homeForm.XGAgainstlast5\n          ? homeForm.XGAgainstlast5\n          : homeForm.XGAgainstAvgOverall,\n        \"Average Goals Against\":\n          homeForm.averageConceededLeague !== undefined &&\n          homeForm.averageConceededLeague !== null\n            ? homeForm.averageConceededLeague\n            : homeForm.ConcededOverall / 10,\n      };\n\n      const defensiveMetricsAway = {\n        \"Clean Sheet Percentage\": 100 - awayForm.CleanSheetPercentage,\n        \"Average XG Against\": awayForm.XGAgainstAvgOverall,\n        \"Recent XG Against\": awayForm.XGAgainstlast5\n          ? awayForm.XGAgainstlast5\n          : awayForm.XGAgainstAvgOverall,\n        \"Average Goals Against\":\n          awayForm.averageConceededLeague !== undefined &&\n          awayForm.averageConceededLeague !== null\n            ? awayForm.averageConceededLeague\n            : awayForm.ConcededOverall / 10,\n      };\n\n      let homeXGRating;\n      let awayXGRating;\n      let homeAttackStrength;\n      let homeAttackStrengthLast5;\n      let homeOnlyAttackStrength;\n      let homeDefenceStrength;\n      let homeDefenceStrengthLast5;\n      let homeOnlyDefenceStrength;\n      let homePossessionStrength;\n      let homePossessionStrengthLast5;\n      let homeOnlyPossessionStrength;\n      let homeXGForStrength;\n      let homeXGForStrengthLast5;\n      let homeOnlyXGForStrength;\n      let homeXGAgainstStrength;\n      let homeXGAgainstStrengthLast5;\n      let homeOnlyXGAgainstStrength;\n      let awayAttackStrength;\n      let awayAttackStrengthLast5;\n      let awayOnlyAttackStrength;\n      let awayDefenceStrength;\n      let awayDefenceStrengthLast5;\n      let awayOnlyDefenceStrength;\n      let awayPossessionStrength;\n      let awayPossessionStrengthLast5;\n      let awayOnlyPossessionStrength;\n      let awayXGForStrength;\n      let awayXGForStrengthLast5;\n      let awayOnlyXGForStrength;\n      let awayXGAgainstStrength;\n      let awayXGAgainstStrengthLast5;\n      let awayOnlyXGAgainstStrength;\n      let homeDirectnessStrength;\n      let homeDirectnessStrengthLast5;\n      let homeOnlyDirectnessStrength;\n      let awayDirectnessStrength;\n      let awayDirectnessStrengthLast5;\n      let awayOnlyDirectnessStrength;\n      let homeAccuracyOverallStrength;\n      let homeAccuracyOverallStrengthLast5;\n      let homeOnlyAccuracyOverallStrength;\n      let awayAccuracyOverallStrength;\n      let awayAccuracyOverallStrengthLast5;\n      let awayOnlyAccuracyOverallStrength;\n\n      if (homeForm.xgForStrength) {\n        console.log(\"not calculating\");\n        homeXGRating = homeForm.XGRating;\n        awayXGRating = awayForm.XGRating;\n        homeAttackStrength = homeForm.attackingStrength;\n        homeAttackStrengthLast5 = homeForm.attackingStrengthLast5;\n        homeOnlyAttackStrength = homeForm.attackingStrengthHomeOnly;\n        homeDefenceStrength = homeForm.defensiveStrength;\n        homeDefenceStrengthLast5 = homeForm.defensiveStrengthLast5;\n        homeOnlyDefenceStrength = homeForm.defensiveStrengthHomeOnly;\n        homePossessionStrength = homeForm.possessionStrength;\n        homePossessionStrengthLast5 = homeForm.possessionStrengthLast5;\n        homeOnlyPossessionStrength = homeForm.possessionStrengthHomeOnly;\n        homeXGForStrength = homeForm.xgForStrength;\n        homeXGForStrengthLast5 = homeForm.xgForStrengthLast5;\n        homeOnlyXGForStrength = homeForm.xgForStrengthHomeOnly;\n        homeXGAgainstStrength = homeForm.xgAgainstStrength;\n        homeXGAgainstStrengthLast5 = homeForm.xgAgainstStrengthLast5;\n        homeOnlyXGAgainstStrength = homeForm.xgAgainstStrengthHomeOnly;\n        homeDirectnessStrength = homeForm.directnessOverallStrength;\n        homeDirectnessStrengthLast5 = homeForm.directnessOverallStrengthLast5;\n        homeOnlyDirectnessStrength = homeForm.directnessHomeStrength;\n        homeAccuracyOverallStrength = homeForm.accuracyOverallStrength;\n        homeAccuracyOverallStrengthLast5 =\n          homeForm.accuracyOverallStrengthLast5;\n        homeOnlyAccuracyOverallStrength = homeForm.accuracyHomeStrength;\n        awayAttackStrength = awayForm.attackingStrength;\n        awayAttackStrengthLast5 = awayForm.attackingStrengthLast5;\n        awayOnlyAttackStrength = awayForm.attackingStrengthAwayOnly;\n        awayDefenceStrength = awayForm.defensiveStrength;\n        awayDefenceStrengthLast5 = awayForm.defensiveStrengthLast5;\n        awayOnlyDefenceStrength = awayForm.defensiveStrengthAwayOnly;\n        awayPossessionStrength = awayForm.possessionStrength;\n        awayPossessionStrengthLast5 = awayForm.possessionStrengthLast5;\n        awayOnlyPossessionStrength = awayForm.possessionStrengthAwayOnly;\n        awayXGForStrength = awayForm.xgForStrength;\n        awayXGForStrengthLast5 = awayForm.xgForStrengthLast5;\n        awayOnlyXGForStrength = awayForm.xgForStrengthAwayOnly;\n        awayXGAgainstStrength = awayForm.xgAgainstStrength;\n        awayXGAgainstStrengthLast5 = awayForm.xgAgainstStrengthLast5;\n        awayOnlyXGAgainstStrength = awayForm.xgAgainstStrengthAwayOnly;\n        awayDirectnessStrength = awayForm.directnessOverallStrength;\n        awayDirectnessStrengthLast5 = awayForm.directnessOverallStrengthLast5;\n        awayOnlyDirectnessStrength = awayForm.directnessAwayStrength;\n        awayAccuracyOverallStrength = awayForm.accuracyOverallStrength;\n        awayAccuracyOverallStrengthLast5 =\n          awayForm.accuracyOverallStrengthLast5;\n        awayOnlyAccuracyOverallStrength = awayForm.accuracyAwayStrength;\n      } else {\n        homeAttackStrength = await calculateAttackingStrength(\n          attackingMetricsHome\n        );\n\n        homeDefenceStrength = await calculateDefensiveStrength(\n          defensiveMetricsHome\n        );\n\n        homePossessionStrength = await calculateMetricStrength(\n          \"averagePossession\",\n          homeForm.AveragePossessionOverall\n        );\n\n        homeXGForStrength = await calculateMetricStrength(\n          \"xgFor\",\n          gameStats.home[2].XGOverall\n        );\n\n        homeXGAgainstStrength = await calculateMetricStrength(\n          \"xgAgainst\",\n          3 - gameStats.home[2].XGAgainstAvgOverall\n        );\n        homeDirectnessStrength = await calculateMetricStrength(\n          \"directnessOverall\",\n          homeForm.directnessOverall\n        );\n        homeAccuracyOverallStrength = await calculateMetricStrength(\n          \"accuracyOverall\",\n          homeForm.avgShotValue\n        );\n\n        awayAttackStrength = await calculateAttackingStrength(\n          attackingMetricsAway\n        );\n        awayDefenceStrength = await calculateDefensiveStrength(\n          defensiveMetricsAway\n        );\n        awayPossessionStrength = await calculateMetricStrength(\n          \"averagePossession\",\n          awayForm.AveragePossessionOverall\n        );\n        awayXGForStrength = await calculateMetricStrength(\n          \"xgFor\",\n          gameStats.away[2].XGOverall\n        );\n\n        awayXGAgainstStrength = await calculateMetricStrength(\n          \"xgAgainst\",\n          3 - gameStats.away[2].XGAgainstAvgOverall\n        );\n        awayDirectnessStrength = await calculateMetricStrength(\n          \"directnessOverall\",\n          awayForm.directnessOverall\n        );\n        awayAccuracyOverallStrength = await calculateMetricStrength(\n          \"accuracyOverall\",\n          awayForm.avgShotValue\n        );\n      }\n\n      let [formPointsHome, testArrayHome] = await getPointsFromGames(\n        gameStats.home[2].WDLRecord\n      );\n      let [formPointsAway, testArrayAway] = await getPointsFromGames(\n        gameStats.away[2].WDLRecord\n      );\n\n      let rollingGoalDiffHome = [\n        (gameStats.home[0].ScoredOverall - gameStats.home[0].ConcededOverall) /\n          10,\n        (gameStats.home[1].ScoredOverall - gameStats.home[1].ConcededOverall) /\n          6,\n        (gameStats.home[2].ScoredOverall - gameStats.home[2].ConcededOverall) /\n          5,\n      ];\n\n      let rollingGoalDiffAway = [\n        (gameStats.away[0].ScoredOverall - gameStats.away[0].ConcededOverall) /\n          10,\n        (gameStats.away[1].ScoredOverall - gameStats.away[1].ConcededOverall) /\n          6,\n        (gameStats.away[2].ScoredOverall - gameStats.away[2].ConcededOverall) /\n          5,\n      ];\n\n      const formDataMatch = [];\n\n      formDataMatch.push({\n        btts: game.btts_potential,\n      });\n\n      const formDataHome = [];\n\n      formDataHome.push({\n        name: game.homeTeam,\n        Last5: gameStats.home[2].LastFiveForm,\n        LeagueOrAll: gameStats.home[2].LeagueOrAll,\n        AverageGoals: homeForm.ScoredOverall / 10,\n        AverageConceeded: homeForm.ConcededOverall / 10,\n        AverageXG: homeForm.XGOverall,\n        AverageXGConceded: homeForm.XGAgainstAvgOverall,\n        AveragePossession: homeForm.AveragePossessionOverall,\n        AverageShotsOnTarget: homeForm.AverageShotsOnTargetOverall,\n        AverageDangerousAttacks: homeForm.AverageDangerousAttacksOverall,\n        homeOrAway: \"Home\",\n        leaguePosition: homeForm.LeaguePosition,\n        Last5PPG: homeForm.PPG,\n        SeasonPPG: homeForm.SeasonPPG,\n        lastGame: homeLastGame,\n        formRun: homeForm.formRun,\n        goalDifference: homeForm.goalDifference,\n        goalDifferenceHomeOrAway: homeForm.goalDifferenceHomeOrAway,\n        // BttsPercentage: homeForm.BttsPercentage || \"-\",\n        // BttsPercentageHomeOrAway: homeForm.BttsPercentageHomeOrAway || \"-\",\n        CardsTotal: homeForm.CardsTotal || \"-\",\n        CornersAverage: homeForm.AverageCorners || \"-\",\n        FormTextStringHome: formTextStringHome,\n        FavouriteRecord:\n          favouriteRecordHome + `. ${homeForm.reliabilityString}`,\n        BTTSArray: bttsArrayHome,\n        Results: homeForm.resultsAll,\n        ResultsHorA: homeForm.resultsHome.reverse(),\n        XGSwing: homeForm.XGChangeRecently\n        // BTTSAll: homeForm.last10btts,\n        // BTTSHorA: homeForm.last10bttsHome,\n      });\n\n      const formDataAway = [];\n\n      formDataAway.push({\n        name: game.awayTeam,\n        Last5: gameStats.away[2].LastFiveForm,\n        LeagueOrAll: gameStats.away[2].LeagueOrAll,\n        AverageGoals: awayForm.ScoredOverall / 10,\n        AverageConceeded: awayForm.ConcededOverall / 10,\n        AverageXG: awayForm.XGOverall,\n        AverageXGConceded: awayForm.XGAgainstAvgOverall,\n        AveragePossession: awayForm.AveragePossessionOverall,\n        AverageShotsOnTarget: awayForm.AverageShotsOnTargetOverall,\n        AverageDangerousAttacks: awayForm.AverageDangerousAttacksOverall,\n        homeOrAway: \"Away\",\n        leaguePosition: awayForm.LeaguePosition,\n        Last5PPG: awayForm.PPG,\n        SeasonPPG: awayForm.SeasonPPG,\n        lastGame: awayLastGame,\n        formRun: awayForm.formRun,\n        goalDifference: awayForm.goalDifference,\n        goalDifferenceHomeOrAway: awayForm.goalDifferenceHomeOrAway,\n        // BttsPercentage: awayForm.BttsPercentage || \"-\",\n        // BttsPercentageHomeOrAway: awayForm.BttsPercentageHomeOrAway || \"-\",\n        CardsTotal: awayForm.CardsTotal || \"-\",\n        CornersAverage: awayForm.AverageCorners || \"-\",\n        FormTextStringAway: formTextStringAway,\n        FavouriteRecord:\n          favouriteRecordAway + `. ${awayForm.reliabilityString}`,\n        BTTSArray: bttsArrayAway,\n        Results: awayForm.resultsAll,\n        ResultsHorA: awayForm.resultsAway.reverse(),\n        XGSwing: awayForm.XGChangeRecently\n        // BTTSAll: awayForm.last10btts,\n        // BTTSHorA: awayForm.last10bttsAway,\n      });\n\n      let formArrayHome;\n      let formArrayAway;\n      let chartType;\n\n      if (formPointsHome.length > 1) {\n        formArrayHome = formPointsHome;\n        formArrayAway = formPointsAway;\n        chartType = \"Points over time\";\n      } else {\n        formArrayHome = [\n          homeTenGameAverage,\n          homeSixGameAverage,\n          homeFiveGameAverage,\n        ];\n        formArrayAway = [\n          awayTenGameAverage,\n          awaySixGameAverage,\n          awayFiveGameAverage,\n        ];\n        chartType = \"Rolling average points over last 10\";\n      }\n\n      ReactDOM.render(\n        <div style={style}>\n          <div className=\"H2HStats\" id={`H2HStats${game.id}`}></div>\n          <div className=\"TrendsHome\" id={`TrendsHome${game.id}`}></div>\n          <div className=\"TrendsAway\" id={`TrendsAway${game.id}`}></div>\n        </div>,\n        document.getElementById(\"history\" + homeTeam)\n      );\n\n      //This tournament does not have league positions\n      if (game.leagueName === \"Europe UEFA Women's Euro\") {\n        game.homeTeamHomePosition = \"N/A\";\n        game.awayTeamAwayPosition = \"N/A\";\n      }\n\n      function singleResult(game) {\n        return (\n          <div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeXG}</span>\n              <span className=\"column\">XG</span>\n              <span className=\"column\">{game.awayXG}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeShots}</span>\n              <span className=\"column\">Shots</span>\n              <span className=\"column\">{game.awayShots}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeSot}</span>\n              <span className=\"column\">SOT</span>\n              <span className=\"column\">{game.awaySot}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeDangerousAttacks}</span>\n              <span className=\"column\">Dangerous Attacks</span>\n              <span className=\"column\">{game.awayDangerousAttacks}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homePossession}%</span>\n              <span className=\"column\">Possession</span>\n              <span className=\"column\">{game.awayPossession}%</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeRed}</span>\n              <span className=\"column\">Red cards</span>\n              <span className=\"column\">{game.awayRed}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homePPG}</span>\n              <span className=\"column\">PPG (pre-match)</span>\n              <span className=\"column\">{game.awayPPG}</span>\n            </div>\n          </div>\n        );\n      }\n\n      function singleSimilarResult(game) {\n        return (\n          <div>\n            <div className=\"ResultRowSmallDate\">\n              <span>{game.date}</span>\n            </div>\n            {/* <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.XG}</span>\n              <span className=\"column\">XG</span>\n              <span className=\"column\">{game.XGAgainst}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.sot}</span>\n              <span className=\"column\">SOT</span>\n              <span className=\"column\">{game.sotAgainst}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.possession}%</span>\n              <span className=\"column\">Possession</span>\n              <span className=\"column\">{100 - game.possession}%</span>\n            </div> */}\n          </div>\n        );\n      }\n\n      const overviewHome = gameArrayHome.slice(0, 10).map((game) => (\n        <div>\n          <Collapsable\n            classNameButton=\"ResultButton\"\n            buttonText={\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {game.homeGoals} : {game.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n              </div>\n            }\n            element={singleResult(game)}\n          />\n        </div>\n      ));\n\n      const overviewAway = gameArrayAway.slice(0, 10).map((game) => (\n        <div>\n          <Collapsable\n            classNameButton=\"ResultButton\"\n            buttonText={\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {game.homeGoals} : {game.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n              </div>\n            }\n            element={singleResult(game)}\n          />\n        </div>\n      ));\n\n      let similarGamesHome;\n\n      if (game.simlarGameResultsHome) {\n        similarGamesHome = game.simlarGameResultsHome.reverse().map((game) => (\n          <div>\n            <Collapsable\n              classNameButton=\"ResultButton\"\n              buttonText={\n                <div className={`ResultRowOverviewSmall${game.result}`}>\n                  <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                  <span className=\"columnOverviewScoreSmall\">\n                    {game.homeGoals} : {game.awayGoals}\n                  </span>\n                  <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n                </div>\n              }\n              element={singleSimilarResult(game)}\n            />\n          </div>\n        ));\n      } else {\n        similarGamesHome = (\n          <h4 className=\"NoGames\">No previous games fit this profile</h4>\n        );\n      }\n\n      let similarGamesAway;\n      if (game.simlarGameResultsAway) {\n        similarGamesAway = game.simlarGameResultsAway.reverse().map((game) => (\n          <div>\n            <Collapsable\n              classNameButton=\"ResultButton\"\n              buttonText={\n                <div className={`ResultRowOverviewSmall${game.result}`}>\n                  <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                  <span className=\"columnOverviewScoreSmall\">\n                    {game.homeGoals} : {game.awayGoals}\n                  </span>\n                  <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n                </div>\n              }\n              element={singleSimilarResult(game)}\n            />\n          </div>\n        ));\n      } else {\n        similarGamesAway = <h4>No previous games fit this profile</h4>;\n      }\n\n      function StatsHome() {\n        return (\n          <div className=\"flex-childOne\">\n            <ul style={style}>\n              <Stats\n                style={style}\n                homeOrAway=\"Home\"\n                gameCount={divider}\n                key={formDataHome[0].name}\n                last5={formDataHome[0].Last5}\n                homeOrAwayResults={gameArrayHomeTeamHomeGames}\n                LeagueOrAll={formDataHome[0].LeagueOrAll}\n                className={\"KeyStatsHome\"}\n                name={formDataHome[0].name}\n                goals={homeForm.avgScored}\n                conceeded={homeForm.avgConceeded}\n                XG={homeForm.XGOverall.toFixed(2)}\n                XGConceded={homeForm.XGAgainstAvgOverall.toFixed(2)}\n                XGSwing={homeForm.XGChangeRecently}\n                possession={homeForm.AveragePossessionOverall.toFixed(2)}\n                sot={homeForm.AverageShotsOnTargetOverall.toFixed(2)}\n                dangerousAttacks={\n                  homeForm.AverageDangerousAttacksOverall !== 0\n                    ? homeForm.AverageDangerousAttacksOverall.toFixed(2)\n                    : homeForm.AverageDangerousAttacks\n                }\n                leaguePosition={\n                  formDataHome[0].leaguePosition !== undefined &&\n                  formDataHome[0].leaguePosition !== \"undefined\"\n                    ? formDataHome[0].leaguePosition\n                    : 0\n                }\n                rawPosition={\n                  game.homeRawPosition !== undefined &&\n                  game.homeRawPosition !== \"undefined\"\n                    ? game.homeRawPosition\n                    : 0\n                }\n                homeOrAwayLeaguePosition={\n                  game.homeTeamHomePosition !== undefined &&\n                  game.homeTeamHomePosition !== \"undefined\"\n                    ? game.homeTeamHomePosition\n                    : 0\n                }\n                winPercentage={\n                  game.homeTeamWinPercentage ? game.homeTeamWinPercentage : 0\n                }\n                lossPercentage={\n                  game.homeTeamLossPercentage ? game.homeTeamLossPercentage : 0\n                }\n                drawPercentage={\n                  game.homeTeamDrawPercentage ? game.homeTeamDrawPercentage : 0\n                }\n                ppg={formDataHome[0].SeasonPPG}\n                formTrend={[\n                  homeTenGameAverage.toFixed(2),\n                  homeSixGameAverage.toFixed(2),\n                  homeFiveGameAverage.toFixed(2),\n                ]}\n                lastGame={homeLastGame}\n                formRun={homeForm.resultsAll.reverse()}\n                goalDifference={formDataHome[0].goalDifference}\n                goalDifferenceHomeOrAway={\n                  formDataHome[0].goalDifferenceHomeOrAway\n                }\n                BttsPercentage={formDataHome[0].BttsPercentage}\n                BttsPercentageHomeOrAway={\n                  formDataHome[0].BttsPercentageHomeOrAway\n                }\n                // BTTSAll={\n                //   formDataHome[0].BTTSAll\n                //     ? formDataHome[0].BTTSAll\n                //     : '\"Get Predictions\" first'\n                // }\n                // BTTSHorA={\n                //   formDataHome[0].BTTSHorA\n                //     ? formDataHome[0].BTTSHorA\n                //     : '\"Get Predictions\" first'\n                // }\n                BTTSArray={formDataHome[0].BTTSArray}\n                Results={formDataHome[0].Results}\n                ResultsHorA={formDataHome[0].ResultsHorA}\n                CardsTotal={formDataHome[0].CardsTotal}\n                CornersAverage={homeForm.AverageCorners}\n                ScoredBothHalvesPercentage={\n                  formDataHome[0].ScoredBothHalvesPercentage\n                }\n                FormTextString={formDataHome[0].FormTextStringHome}\n                FavouriteRecord={formDataHome[0].FavouriteRecord}\n              />\n            </ul>\n          </div>\n        );\n      }\n\n      function StatsAway() {\n        return (\n          <div className=\"flex-childTwo\">\n            <ul style={style}>\n              <Stats\n                style={style}\n                homeOrAway=\"Away\"\n                gameCount={divider}\n                key={formDataAway[0].name}\n                last5={formDataAway[0].Last5}\n                homeOrAwayResults={gameArrayAwayTeamAwayGames}\n                LeagueOrAll={formDataAway[0].LeagueOrAll}\n                className={\"KeyStatsAway\"}\n                classNameTwo={\"FormStatsAway\"}\n                name={formDataAway[0].name}\n                goals={awayForm.avgScored}\n                conceeded={awayForm.avgConceeded}\n                XG={awayForm.XGOverall.toFixed(2)}\n                XGConceded={awayForm.XGAgainstAvgOverall.toFixed(2)}\n                XGSwing={awayForm.XGChangeRecently}\n                //todo add goal diff and btts percentages\n                possession={awayForm.AveragePossessionOverall.toFixed(2)}\n                rawPosition={game.awayRawPosition ? game.awayRawPosition : 0}\n                sot={awayForm.AverageShotsOnTargetOverall.toFixed(2)}\n                dangerousAttacks={\n                  awayForm.AverageDangerousAttacksOverall !== 0\n                    ? awayForm.AverageDangerousAttacksOverall.toFixed(2)\n                    : awayForm.AverageDangerousAttacks\n                }\n                leaguePosition={\n                  formDataAway[0].leaguePosition !== undefined &&\n                  formDataAway[0].leaguePosition !== \"undefined\"\n                    ? formDataAway[0].leaguePosition\n                    : 0\n                }\n                homeOrAwayLeaguePosition={\n                  game.awayTeamAwayPosition !== undefined &&\n                  game.awayTeamAwayPosition !== \"undefinedundefined\"\n                    ? game.awayTeamAwayPosition\n                    : 0\n                }\n                winPercentage={\n                  game.awayTeamWinPercentage ? game.awayTeamWinPercentage : 0\n                }\n                lossPercentage={\n                  game.awayTeamLossPercentage ? game.awayTeamLossPercentage : 0\n                }\n                drawPercentage={\n                  game.awayTeamDrawPercentage ? game.awayTeamDrawPercentage : 0\n                }\n                ppg={formDataAway[0].SeasonPPG}\n                formTrend={[\n                  awayTenGameAverage.toFixed(2),\n                  awaySixGameAverage.toFixed(2),\n                  awayFiveGameAverage.toFixed(2),\n                ]}\n                lastGame={awayLastGame}\n                formRun={awayForm.resultsAll.reverse()}\n                goalDifference={formDataAway[0].goalDifference}\n                goalDifferenceHomeOrAway={\n                  formDataAway[0].goalDifferenceHomeOrAway\n                }\n                BttsPercentage={formDataAway[0].BttsPercentage}\n                BttsPercentageHomeOrAway={\n                  formDataAway[0].BttsPercentageHomeOrAway\n                }\n                // BTTSAll={\n                //   formDataAway[0].BTTSAll\n                //     ? formDataAway[0].BTTSAll\n                //     : '\"Get Predictions\" first'\n                // }\n                // BTTSHorA={\n                //   formDataAway[0].BTTSHorA\n                //     ? formDataAway[0].BTTSHorA\n                //     : '\"Get Predictions\" first'\n                // }\n                BTTSArray={formDataAway[0].BTTSArray}\n                Results={formDataAway[0].Results}\n                ResultsHorA={formDataAway[0].ResultsHorA}\n                CardsTotal={formDataAway[0].CardsTotal}\n                CornersAverage={awayForm.AverageCorners}\n                ScoredBothHalvesPercentage={\n                  formDataAway[0].ScoredBothHalvesPercentage\n                }\n                FormTextString={formDataAway[0].FormTextStringAway}\n                FavouriteRecord={formDataAway[0].FavouriteRecord}\n              />\n            </ul>\n          </div>\n        );\n      }\n\n      // const allHomeGames = homeForm.WDLRecord.reverse();\n      // const allAwayGames = awayForm.WDLRecord.reverse();\n\n      // // const pointsHome = getPointsFromLastX(formDataHome[0].Last5);\n      // const pointsHome = getPointsFromLastX(allHomeGames);\n      // const pointsHomeAv = await getPointAverage(\n      //   pointsHome,\n      //   allHomeGames.length\n      // );\n      // const pointsHomeLast5 = getPointsFromLastX(allHomeGames.slice(0, 5));\n      // const pointsHomeAvLast5 = await getPointAverage(pointsHomeLast5, 5);\n      // const pointsAway = getPointsFromLastX(allAwayGames);\n      // const pointsAwayAv = await getPointAverage(\n      //   pointsAway,\n      //   allAwayGames.length\n      // );\n      // const pointsAwayLast5 = getPointsFromLastX(allAwayGames.slice(0, 5));\n      // const pointsAwayAvLast5 = await getPointAverage(pointsAwayLast5, 5);\n\n      // console.log(homeForm.WDLRecord.length);\n      // console.log(pointsHomeAvLast5);\n      // console.log(pointsAwayAvLast5);\n\n      let id, team1, team2, timestamp, homeGoals, awayGoals;\n\n      async function getGameIdByHomeTeam(games, homeTeamName) {\n        const matchingGames = games.filter((game) =>\n          game.homeTeam.includes(homeTeamName)\n        );\n        if (matchingGames.length > 0) {\n          return matchingGames[0];\n        } else {\n          return null; // or any other value you prefer to return if no match is found\n        }\n      }\n\n      const matchingGame = await getGameIdByHomeTeam(\n        arrayOfGames,\n        game.homeTeam\n      );\n\n      console.log(matchingGame);\n      if (matchingGame) {\n        id = matchingGame.id.toString();\n        team1 = matchingGame.homeTeam;\n        team2 = matchingGame.awayTeam;\n        timestamp = matchingGame.time;\n        homeGoals = matchingGame.homeGoals;\n        awayGoals = matchingGame.awayGoals;\n      } else {\n        id = \"0\";\n        team1 = \"N/A\";\n        team2 = \"N/A\";\n        timestamp = 1;\n        homeGoals = \"-\";\n        awayGoals = \"-\";\n      }\n\n      if (homeForm.completeData === true && game.completeData === true) {\n        ReactDOM.render(\n          <>\n            <div style={style}>\n              <Collapsable\n                buttonText={\"Lineups & match action\"}\n                classNameButton=\"Lineups\"\n                element={\n                  <>\n                    <SofaLineupsWidget\n                      id={id}\n                      team1={team1}\n                      team2={team2}\n                      time={timestamp}\n                      homeGoals={homeGoals}\n                      awayGoals={awayGoals}\n                    ></SofaLineupsWidget>\n                  </>\n                }\n              />\n              <div style={style}>\n                <Div className=\"MatchTime\" text={`Kick off: ${time} GMT`}></Div>\n              </div>\n              <div className=\"flex-container\">\n                <StatsHome />\n                <StatsAway />\n              </div>\n              <div className=\"Chart\" id={`Chart${game.id}`} style={style}>\n                <RadarChart\n                  title=\"XG Tipping Strength Ratings - All Games\"\n                  data={[\n                    homeAttackStrength,\n                    homeDefenceStrength,\n                    homePossessionStrength,\n                    homeXGForStrength,\n                    homeXGAgainstStrength,\n                    homeDirectnessStrength,\n                    homeAccuracyOverallStrength,\n                  ]}\n                  data2={[\n                    awayAttackStrength,\n                    awayDefenceStrength,\n                    awayPossessionStrength,\n                    awayXGForStrength,\n                    awayXGAgainstStrength,\n                    awayDirectnessStrength,\n                    awayAccuracyOverallStrength,\n                  ]}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                ></RadarChart>\n                <RadarChart\n                  title=\"XG Tipping Strength Ratings - Last 5 games\"\n                  data={[\n                    homeAttackStrengthLast5,\n                    homeDefenceStrengthLast5,\n                    homePossessionStrengthLast5,\n                    homeXGForStrengthLast5,\n                    homeXGAgainstStrengthLast5,\n                    homeDirectnessStrengthLast5,\n                    homeAccuracyOverallStrengthLast5,\n                  ]}\n                  data2={[\n                    awayAttackStrengthLast5,\n                    awayDefenceStrengthLast5,\n                    awayPossessionStrengthLast5,\n                    awayXGForStrengthLast5,\n                    awayXGAgainstStrengthLast5,\n                    awayDirectnessStrengthLast5,\n                    awayAccuracyOverallStrengthLast5,\n                  ]}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                ></RadarChart>\n                <RadarChart\n                  title=\"XG Tipping Strength Ratings - Home/Away Games Only\"\n                  data={[\n                    homeOnlyAttackStrength,\n                    homeOnlyDefenceStrength,\n                    homeOnlyPossessionStrength,\n                    homeOnlyXGForStrength,\n                    homeOnlyXGAgainstStrength,\n                    homeOnlyDirectnessStrength,\n                    homeOnlyAccuracyOverallStrength,\n                  ]}\n                  data2={[\n                    awayOnlyAttackStrength,\n                    awayOnlyDefenceStrength,\n                    awayOnlyPossessionStrength,\n                    awayOnlyXGForStrength,\n                    awayOnlyXGAgainstStrength,\n                    awayOnlyDirectnessStrength,\n                    awayOnlyAccuracyOverallStrength,\n                  ]}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                ></RadarChart>\n                <DoughnutChart\n                  data={[homeXGRating, awayXGRating]}\n                  homeTeam={game.homeTeam}\n                  awayTeam={game.awayTeam}\n                ></DoughnutChart>\n                <BarChartTwo\n                  text=\"Recent XG Differential Swing\"\n                  homeTeam={homeForm.teamName}                  \n                  awayTeam={awayForm.teamName}\n                  data1={[\n                    homeForm.XGChangeRecently.toFixed(2)\n                  ]}\n                  data2={[\n                    awayForm.XGChangeRecently.toFixed(2)\n                  ]}\n                ></BarChartTwo>\n                <BarChart\n                  text=\"H2H - Home Team | Away Team\"\n                  data1={[\n                    homeForm.avgScored * 2,\n                    awayForm.avgConceeded * 2,\n                    homeForm.avPointsAll * 3,\n                    homeForm.XGOverall * 2,\n                    awayForm.XGAgainstAvgOverall * 2,\n                    homeForm.AverageShotsOnTargetOverall,\n                    homeForm.AverageDangerousAttacksOverall !== 0\n                      ? homeForm.AverageDangerousAttacksOverall / 7.5\n                      : homeForm.AverageDangerousAttacks / 7.5,\n                    homeForm.AveragePossessionOverall / 7.5,\n                    homeForm.goalDifferenceHomeOrAway / 10,\n                    homeForm.AverageCorners,\n                  ]}\n                  data2={[\n                    awayForm.avgScored * 2,\n                    homeForm.avgConceeded * 2,\n                    awayForm.avPointsAll * 3,\n                    awayForm.XGOverall * 2,\n                    homeForm.XGAgainstAvgOverall * 2,\n                    awayForm.AverageShotsOnTargetOverall,\n                    awayForm.AverageDangerousAttacksOverall !== 0\n                      ? awayForm.AverageDangerousAttacksOverall / 7.5\n                      : awayForm.AverageDangerousAttacks / 7.5,\n                    awayForm.AveragePossessionOverall / 7.5,\n                    awayForm.goalDifferenceHomeOrAway / 10,\n                    awayForm.AverageCorners,\n                  ]}\n                ></BarChart>\n                <Chart\n                  height={3}\n                  depth={0}\n                  data1={formArrayHome}\n                  data2={formArrayAway}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                  type={chartType}\n                  tension={0}\n                ></Chart>\n                <MultilineChart\n                  height={\n                    Math.max(\n                      rollingSOTDiffTotalHome[\n                        rollingSOTDiffTotalHome.length - 1\n                      ],\n                      rollingSOTDiffTotalAway[\n                        rollingSOTDiffTotalAway.length - 1\n                      ]\n                    ) > 2\n                      ? Math.max(\n                        rollingSOTDiffTotalHome[\n                          rollingSOTDiffTotalHome.length - 1\n                          ],\n                          rollingSOTDiffTotalAway[\n                            rollingSOTDiffTotalAway.length - 1\n                          ]\n                        )\n                      : 2\n                  }\n                  depth={\n                    Math.min(\n                      rollingSOTDiffTotalHome[\n                        rollingSOTDiffTotalHome.length - 1\n                      ],\n                      rollingSOTDiffTotalAway[\n                        rollingSOTDiffTotalAway.length - 1\n                      ]\n                    ) < -2\n                      ? Math.min(\n                        rollingSOTDiffTotalHome[\n                          rollingSOTDiffTotalHome.length - 1\n                          ],\n                          rollingSOTDiffTotalAway[\n                            rollingSOTDiffTotalAway.length - 1\n                          ]\n                        )\n                      : -2\n                  }\n                  data1={rollingGoalDiffTotalHome}\n                  data2={rollingGoalDiffTotalAway}\n                  data3={rollingXGDiffTotalHome}\n                  data4={rollingXGDiffTotalAway}\n                  data5={rollingSOTDiffTotalHome}\n                  data6={rollingSOTDiffTotalAway}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                  type={\"Goal/XG/SOT difference over time\"}\n                  tension={0.5}\n                ></MultilineChart>\n              </div>\n              <Div\n                text={`Last league games (most recent first)`}\n                className={\"LastGameHeader\"}\n              ></Div>\n              <div className=\"flex-container\">\n                <div className=\"flex-childOneOverviewSmall\">{overviewHome}</div>\n                <div className=\"flex-childTwoOverviewSmall\">{overviewAway}</div>\n              </div>\n              <h2>Results from similar profile games</h2>\n              <span>(Games where each team had similar odds)</span>\n              <h3>Most recent first</h3>\n              <div className=\"flex-container-similar\">\n                <div className=\"flex-childOneOverviewSmall\">\n                  {similarGamesHome}\n                </div>\n                <div className=\"flex-childTwoOverviewSmall\">\n                  {similarGamesAway}\n                </div>\n              </div>\n              <input type=\"hidden\" name=\"IL_IN_ARTICLE\" />\n              <Button\n                className=\"MoreStats\"\n                onClickEvent={() =>\n                  getTeamStats(\n                    game.id,\n                    game.homeTeam,\n                    game.awayTeam,\n                    formDataHome[0].BttsPercentage,\n                    formDataHome[0].BttsPercentageHomeOrAway,\n                    formDataAway[0].BttsPercentage,\n                    formDataAway[0].BttsPercentageHomeOrAway\n                  )\n                }\n                text={\"Fixture trends\"}\n              ></Button>\n            </div>\n          </>,\n          document.getElementById(\"stats\" + homeTeam)\n        );\n      } else if (\n        (homeForm.completeData = false || game.completeData == false)\n      ) {\n        ReactDOM.render(\n          <>\n            <div style={style}>\n              <Collapsable\n                buttonText={\"Lineups & match action\"}\n                classNameButton=\"Lineups\"\n                element={\n                  <>\n                    <SofaLineupsWidget\n                      id={id}\n                      team1={team1}\n                      team2={team2}\n                      time={timestamp}\n                      homeGoals={homeGoals}\n                      awayGoals={awayGoals}\n                    ></SofaLineupsWidget>\n                  </>\n                }\n              />\n              <div className=\"Chart\" id={`Chart${game.id}`} style={style}>\n                <RadarChart\n                  title=\"XG Tipping Strength Ratings - All Games\"\n                  data={[\n                    homeAttackStrength,\n                    homeDefenceStrength,\n                    homePossessionStrength,\n                    homeXGForStrength,\n                    homeXGAgainstStrength,\n                    homeDirectnessStrength,\n                    homeAccuracyOverallStrength,\n                  ]}\n                  data2={[\n                    awayAttackStrength,\n                    awayDefenceStrength,\n                    awayPossessionStrength,\n                    awayXGForStrength,\n                    awayXGAgainstStrength,\n                    awayDirectnessStrength,\n                    awayAccuracyOverallStrength,\n                  ]}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                ></RadarChart>\n              </div>\n              <div style={style}>\n                <Div className=\"MatchTime\" text={`Kick off: ${time} GMT`}></Div>\n                {/* <Div\n                  text={`Last league games (most recent first)`}\n                  className={\"LastGameHeader\"}\n                ></Div> */}\n              </div>\n              {/* <div className=\"flex-container\">\n                <div className=\"flex-childOneOverviewSmall\">{overviewHome}</div>\n                <div className=\"flex-childTwoOverviewSmall\">{overviewAway}</div>\n              </div>\n              <div className=\"flex-container\">\n                <StatsHome />\n                <StatsAway />\n              </div> */}\n              <h2>Results from similar profile games</h2>\n              <span>(Games where each team had similar odds)</span>\n              <h3>Most recent first</h3>\n              <div className=\"flex-container-similar\">\n                <div className=\"flex-childOneOverviewSmall\">\n                  {similarGamesHome}\n                </div>\n                <div className=\"flex-childTwoOverviewSmall\">\n                  {similarGamesAway}\n                </div>\n              </div>\n              <input type=\"hidden\" name=\"IL_IN_ARTICLE\" />\n              <Button\n                className=\"MoreStats\"\n                onClickEvent={() =>\n                  getTeamStats(\n                    game.id,\n                    game.homeTeam,\n                    game.awayTeam,\n                    formDataHome[0].BttsPercentage,\n                    formDataHome[0].BttsPercentageHomeOrAway,\n                    formDataAway[0].BttsPercentage,\n                    formDataAway[0].BttsPercentageHomeOrAway\n                  )\n                }\n                text={\"Fixture trends\"}\n              ></Button>\n            </div>\n          </>,\n          document.getElementById(\"stats\" + homeTeam)\n        );\n      }\n    }\n\n    // ReactDOM.render(\n    //   <Button\n    //     className=\"MoreStats\"\n    //     style={style}\n    //     onClickEvent={() =>\n    //       getTeamStats(\n    //         game.id,\n    //         game.homeTeam,\n    //         game.awayTeam,\n    //         formDataHome[0].BttsPercentage,\n    //         formDataHome[0].BttsPercentageHomeOrAway,\n    //         formDataAway[0].BttsPercentage,\n    //         formDataAway[0].BttsPercentageHomeOrAway\n    //       )\n    //     }\n    //     text={\"Fixture trends\"}\n    //   ></Button>,\n    //   document.getElementById(`H2HStats${game.id}`)\n    // );\n  }\n}\n","import React, { Fragment, useState } from \"react\";\nimport { CreateBadge } from \"./createBadge\";\nimport { createStatsDiv } from \"../logic/getStats\";\nimport { renderTable } from \"../logic/getFixtures\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport { useDispatch } from \"react-redux\";\nimport { setData } from \"../logic/dataSlice\";\nimport { Provider } from \"react-redux\";\nimport store from \"../logic/store\"; // Import your Redux store\nimport { formObjectHome } from \"../logic/getScorePredictions\";\nimport { clicked } from \"../logic/getScorePredictions\";\n\nlet resultValue;\nvar count;\nlet mockValue;\nvar setCount;\n\nfunction toggle(bool) {\n  count = !bool;\n  return count;\n}\n\nfunction GetDivider(fixture, mock) {\n  const matchStatus = fixture.status;\n  let isPrediction = resultValue;\n\n  if (fixture.fixture.omit === true && matchStatus !== \"complete\") {\n    isPrediction = true;\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"Omitted\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (mockValue === true && matchStatus === \"complete\") {\n    isPrediction = false;\n    return (\n      <Fragment>\n        <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n        <div\n          className=\"CorrectScore\"\n          key={fixture.fixture.homeTeam}\n          data-cy={\"score-\" + fixture.fixture.id}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (mockValue === true && matchStatus !== \"complete\") {\n    isPrediction = true;\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (isPrediction === false && matchStatus !== \"complete\") {\n    return (\n      <div className=\"divider\" data-cy={\"divider-\" + fixture.fixture.id}>\n        {\"V\"}\n      </div>\n    );\n  } else if (isPrediction === false && matchStatus === \"complete\") {\n    return (\n      <div\n        className=\"Result\"\n        data-cy={\"result-\" + fixture.fixture.id}\n      >{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n    );\n  } else if (isPrediction === true && matchStatus === \"complete\") {\n    let outcome;\n    let prediction;\n\n    switch (true) {\n      case fixture.fixture.homeGoals > fixture.fixture.awayGoals:\n        outcome = 0;\n        fixture.fixture.winner = fixture.fixture.homeTeam;\n        fixture.fixture.outcome = \"homeWin\";\n        break;\n      case fixture.fixture.homeGoals === fixture.fixture.awayGoals:\n        outcome = 1;\n        fixture.fixture.winner = \"draw\";\n        fixture.fixture.outcome = \"draw\";\n\n        break;\n      case fixture.fixture.homeGoals < fixture.fixture.awayGoals:\n        outcome = 2;\n        fixture.fixture.winner = fixture.fixture.awayTeam;\n        fixture.fixture.outcome = \"awayWin\";\n\n        break;\n      default:\n        break;\n    }\n\n    switch (true) {\n      case fixture.fixture.goalsA > fixture.fixture.goalsB:\n        prediction = 0;\n        break;\n      case fixture.fixture.goalsA === fixture.fixture.goalsB:\n        prediction = 1;\n        break;\n      case fixture.fixture.goalsA < fixture.fixture.goalsB:\n        prediction = 2;\n        break;\n      default:\n        break;\n    }\n\n    if (fixture.fixture.omit === true) {\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"Omitted\"\n            key={fixture.fixture.homeTeam}\n            data-cy={\"score-\" + fixture.fixture.id}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    } else if (outcome === prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        switch (true) {\n          case outcome === 0:\n            fixture.fixture.profit = fixture.fixture.homeOdds;\n            break;\n          case outcome === 1:\n            fixture.fixture.profit = fixture.fixture.drawOdds;\n            break;\n          case outcome === 2:\n            fixture.fixture.profit = fixture.fixture.awayOdds;\n            break;\n          default:\n            break;\n        }\n      } else fixture.fixture.profit = 1;\n\n      if (\n        fixture.fixture.goalsA === fixture.fixture.homeGoals &&\n        fixture.fixture.goalsB === fixture.fixture.awayGoals\n      ) {\n        fixture.fixture.exactScore = true;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"ExactScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      } else {\n        fixture.fixture.exactScore = false;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"CorrectScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      }\n    } else if (outcome !== prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        fixture.fixture.profit = 0;\n      } else {\n        fixture.fixture.profit = 1;\n      }\n      fixture.fixture.exactScore = false;\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"IncorrectScore\"\n            key={fixture.fixture.awayTeam}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    }\n  } else {\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  }\n}\n\nfunction renderLeagueName(fixture, mock) {\n  mockValue = mock;\n\n  let name = fixture.leagueName;\n  let id =\n    allLeagueResultsArrayOfObjects.length > 0\n      ? allLeagueResultsArrayOfObjects[fixture.leagueIndex].id\n      : null;\n  if (name === null || mock === true) {\n    return <div></div>;\n  } else {\n    return (\n      <div>\n        <div\n          className=\"leagueName\"\n          id={`league${id}`}\n          key={`leagueName${id}div`}\n          onClick={() =>\n            renderTable(\n              fixture.leagueIndex,\n              allLeagueResultsArrayOfObjects[fixture.leagueIndex],\n              id\n            )\n          }\n        >\n          {fixture.leagueName} &#9776;\n        </div>\n        <div\n          className=\"LeagueTable\"\n          key={`leagueName${id}`}\n          id={`leagueName${id}`}\n        ></div>\n      </div>\n    );\n  }\n}\n\nconst downArrow = \"\\u{2195}\";\nconst rightArrow = \"\\u{29C9}\";\n\nexport let testing;\n\nfunction SingleFixture({ fixture, count, mock }) {\n  const dispatch = useDispatch();\n  function StoreData() {\n    const fixtureDetails = {\n      id: fixture.id,\n      homeTeamName: fixture.homeTeam,\n      homeId: fixture.homeId,\n      homeTeamBadge: fixture.homeBadge,\n      awayTeamName: fixture.awayTeam,\n      awayId: fixture.awayId,\n      awayTeamBadge: fixture.awayBadge,\n      stadium: fixture.stadium,\n      time: fixture.time,\n      homeGoals: fixture.goalsA,\n      awayGoals: fixture.goalsB,\n    };\n\n    const homeDetails = {\n      \"Attacking Strength\": fixture.formHome.attackingStrength,\n      \"Defensive Strength\": fixture.formHome.defensiveStrength,\n    };\n\n    const awayDetails = {\n      \"Attacking Strength\": fixture.formAway.attackingStrength,\n      \"Defensive Strength\": fixture.formAway.defensiveStrength,\n    };\n\n    const dataToSend = {\n      key1: \"value1\",\n      key2: \"value2\",\n    };\n    fixture.formHome.defensiveMetrics[\"Clean Sheet Percentage\"] =\n      fixture.formHome.CleanSheetPercentage;\n    fixture.formAway.defensiveMetrics[\"Clean Sheet Percentage\"] =\n      fixture.formAway.CleanSheetPercentage;\n\n    console.log(fixture.formHome)\n\n    localStorage.setItem(\n      \"homeForm\",\n      JSON.stringify(fixture.formHome.attackingMetrics)\n    );\n    localStorage.setItem(\n      \"homeFormDef\",\n      JSON.stringify(fixture.formHome.defensiveMetrics)\n    );\n    localStorage.setItem(\n      \"allTeamResultsHome\",\n      JSON.stringify(fixture.formHome.allTeamResults)\n    );\n    localStorage.setItem(\"homeDetails\", JSON.stringify(homeDetails));\n\n    localStorage.setItem(\n      \"awayForm\",\n      JSON.stringify(fixture.formAway.attackingMetrics)\n    );\n    localStorage.setItem(\n      \"awayFormDef\",\n      JSON.stringify(fixture.formAway.defensiveMetrics)\n    );\n    localStorage.setItem(\n      \"allTeamResultsAway\",\n      JSON.stringify(fixture.formAway.allTeamResults)\n    );\n    localStorage.setItem(\"awayDetails\", JSON.stringify(awayDetails));\n\n    localStorage.setItem(\"fixtureDetails\", JSON.stringify(fixtureDetails));\n\n    dispatch(setData(dataToSend));\n  }\n\n  async function handleButtonClick(game) {\n    if (clicked === true) {\n      StoreData(formObjectHome);\n      window.open(\"/#/fixture\");\n    } else return;\n  }\n  return (\n    <div key={fixture.game}>\n      {renderLeagueName(fixture, mock)}\n      <div className={`individualFixtureContainer${fixture.omit}`}>\n        <li\n          className={`individualFixture${fixture.omit}`}\n          key={fixture.id}\n          data-cy={fixture.id}\n        >\n          <div className=\"HomeOdds\">{fixture.fractionHome}</div>\n          <div className=\"homeTeam\">{fixture.homeTeam}</div>\n          <GetDivider\n            result={resultValue}\n            status={fixture.status}\n            fixture={fixture}\n          />\n          {/* <div className=\"divider\">{\"V\"}</div> */}\n          <div className=\"awayTeam\">{fixture.awayTeam}</div>\n          <CreateBadge\n            image={fixture.homeBadge}\n            ClassName=\"HomeBadge\"\n            alt=\"Home team badge\"\n            flexShrink={5}\n          />\n          <CreateBadge\n            image={fixture.awayBadge}\n            ClassName=\"AwayBadge\"\n            alt=\"Away team badge\"\n          />\n          <div className=\"AwayOdds\">{fixture.fractionAway}</div>\n        </li>\n        <button\n          className=\"GameStats\"\n          onClick={() =>\n            mock === false ? createStatsDiv(fixture, count) : null\n          }\n          onMouseDown={() => (count = toggle(count))}\n        >\n          Game overview {downArrow}\n        </button>\n        <button\n          className=\"GameStatsTwo\"\n          onClick={() => handleButtonClick(fixture)}\n        >\n          More detail {rightArrow}\n        </button>\n        {/* <Checkbox/> */}\n      </div>\n      <div id={\"stats\" + fixture.homeTeam} />\n      <div className=\"MatchHistory\" id={\"history\" + fixture.homeTeam} />\n    </div>\n  );\n}\n\nconst List = ({ fixtures, mock }) => (\n  <div>\n    <div id=\"Headers\"></div>\n    <ul className=\"FixtureList\" id=\"FixtureList\">\n      {fixtures.map((fixture, i) => (\n        <SingleFixture\n          fixture={fixture}\n          key={fixture.game}\n          count={count}\n          mock={mock}\n        />\n      ))}\n    </ul>\n  </div>\n);\n\nexport function Fixture(props) {\n  [count, setCount] = useState(false);\n  resultValue = props.result;\n  return (\n    <Provider store={store}>\n      <List\n        fixtures={props.fixtures}\n        result={resultValue}\n        count={count}\n        mock={props.mock}\n      />\n    </Provider>\n  );\n}\n","// src/dataSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\n\n// src/dataSlice.js\nconst initialState = {\n  dataHome: localStorage.getItem('homeForm'),\n  dataAway: localStorage.getItem('awayForm'),\n  dataHomeDef: localStorage.getItem('homeFormDef'),\n  dataAwayDef: localStorage.getItem('awayFormDef'),\n  allTeamResultsHome: localStorage.getItem('allTeamResultsHome'),\n  allTeamResultsAway: localStorage.getItem('allTeamResultsAway'),\n  homeDetails:localStorage.getItem('homeDetails'),\n  awayDetails:localStorage.getItem('awayDetails'),\n  fixtureDetails: localStorage.getItem('fixtureDetails')\n};\n\nconst dataSlice = createSlice({\n  name: 'data',\n  initialState,\n  reducers: {\n    setData: (state, action) => {\n      state.data = action.payload;\n    },\n  },\n});\n\nexport const { setData } = dataSlice.actions;\n\nexport default dataSlice.reducer;\n","// src/store.js\nimport { configureStore } from '@reduxjs/toolkit';\nimport dataReducer from './dataSlice'; // Your data reducer\n\nconst store = configureStore({\n  reducer: {\n    data: dataReducer, // Ensure this key matches the key in your initialState\n  },\n});\n\nexport default store;\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./components/Header\";\nimport { Button } from \"./components/Button\";\nimport OddsRadio from \"./components/OddsRadio\";\nimport { Fixture } from \"./components/Fixture\";\nimport mockedFixtures from \"./data/mockedFixtures.json\";\nimport { selectedOdds } from \"./components/OddsRadio\";\nimport Collapsable from \"./components/CollapsableElement\";\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  RedditShareButton,\n  RedditIcon,\n  TelegramShareButton,\n  TelegramIcon,\n  TwitterShareButton,\n  TwitterIcon,\n  WhatsappShareButton,\n  WhatsappIcon,\n} from \"react-share\";\nimport { generateFixtures } from \"./logic/getFixtures\";\nimport { ThreeDots } from \"react-loading-icons\";\nimport Logo from \"./components/Logo\";\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\nimport reactDom from \"react-dom\";\n// require(\"dotenv\").config();\n\nexport const proxyurl = \"https://safe-caverns-99679.herokuapp.com/\";\nexport var fixtureList = [];\nexport let allLeagueData = [];\n\nexport const availableLeagues = [];\nexport var orderedLeagues = [];\n\nconst leagueOrder = [\n  11084, //Euro 2024\n  7432, //World Cup 22\n  12325, //premier league 22/23\n  12451, //championship 22/23\n  12446, //league 1 22/23\n  12422, //league 2 22/23\n  12622, //National league 22/23\n  12316, //La Liga 22/23\n  12455, //Scottish Prem 22/23\n  12529, //Bundesliga 22/23\n  12530, //Serie A 22/23\n  12337, //French Prem 22/23\n  12931, //Portagul Prem 22/23\n  12322, //Dutch Prem 22/23\n  12137, //Belgian Pro League 22/23\n  10969, //sweden 24\n  12132, //Danish Prem 24/25\n  10976, //Norway Prem 23\n  12472, //Austrian Prem 22/23\n  12734, //Greek Prem 22/23\n  12120, //Polish prem 22/23\n  12326, //Swiss prem 22/23\n  10946, //Irish Prem 23\n  12467, //Spanish secunda 22/23\n  12621, //Italy serie B 22/23\n  12528, //Bundesliga 2 22/23\n  12623, //German 3rd tier 22/23\n  12338, //French League 2 22/23\n  12456, //Scottish Championship 22/23\n  12474, //Scottish league 1 22/23\n  12453, //Scottish league 2 22/23\n  12827, //Women's prem 23/24\n  10977, //MLS 23\n  11321, //Brazil prem 24\n  11212, //Argentina prem 23\n  12136, //Mexico prem 23/24\n  12933, //National league North and South 22/23\n  // 13703, //Australian A league 23/24\n  11102, //S Korea 23\n];\n\nlet today;\nlet todayFootyStats;\nlet todaySS\nlet tomorrow;\nlet tomorrowFootyStats;\nlet tomorrowSS;\nlet date;\nlet dateSS;\nlet dateFootyStats;\nlet yesterday;\nlet yesterdayFootyStats;\nlet yesterdaySS\nlet lastSaturday;\nlet lastSaturdayFootyStats;\nlet lastSaturdaySS;\nlet historic;\nlet historicFootyStats;\nlet historicSS;\nlet tomorrowsDate;\nlet yesterdaysDate;\nlet saturdayDate;\nlet historicDate;\nlet string;\nlet dateString;\n\n(async function fetchLeagueData() {\n  let leagueList;\n\n  leagueList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}leagueList`);\n\n  let leagueArray;\n  await leagueList.json().then((leagues) => {\n    leagueArray = Array.from(leagues.data);\n  });\n\n  for (let i = 0; i < leagueArray.length; i++) {\n    const league = leagueArray[i];\n    const name = leagueArray[i].name;\n\n    for (let x = 0; x < league.season.length; x++) {\n      const element = league.season[x];\n\n      if (element.year === 2024 || element.year === 20242025) {\n        if (element.id !== 13703 && element.id !== 6935 && element.id !== 7061) {\n          availableLeagues.push({ name: name, element });\n        }\n      }\n    }\n\n    async function mapOrder(array, order, key) {\n      array.sort(function (a, b) {\n        var A = a.element[key],\n          B = b.element[key];\n\n        if (order.indexOf(A) > order.indexOf(B)) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n      return array;\n    }\n    //leagues ordered by id\n    orderedLeagues = await mapOrder(availableLeagues, leagueOrder, \"id\");\n  }\n  return orderedLeagues;\n})();\n\nexport async function getLeagueList() {\n  let i = 0;\n  date = new Date();\n  string = \"Today\";\n\n  async function incrementDate(num, date) {\n    i = i + num;\n    date.setDate(date.getDate() + num);\n    dateSS = await convertTimestampForSofaScore(date);\n\n    [date, dateFootyStats] = await calculateDate(date);\n    string = dateFootyStats;\n    await renderButtons();\n  }\n\n  async function decrementDate(num, date) {\n    i = i - num;\n    console.log(i);\n    if (i > -120) {\n      date.setDate(date.getDate() - num);\n      dateSS = await convertTimestampForSofaScore(date);\n      [date, dateFootyStats] = await calculateDate(date);\n      string = dateFootyStats;\n      dateString = date;\n      await renderButtons();\n    }\n  }\n\n  async function calculateDate(dateString) {\n    const day = dateString.getDate();\n    const month = dateString.getMonth() + 1;\n    const year = dateString.getFullYear();\n    return [`${month}${day}${year}`, `${year}-${month}-${day}`];\n  }\n\n  [today, todayFootyStats] = await calculateDate(new Date());\n\n  tomorrowsDate = new Date();\n  tomorrowsDate.setDate(tomorrowsDate.getDate() + 1);\n  [tomorrow, tomorrowFootyStats] = await calculateDate(tomorrowsDate);\n\n  yesterdaysDate = new Date();\n  yesterdaysDate.setDate(yesterdaysDate.getDate() - 1);\n  [yesterday, yesterdayFootyStats] = await calculateDate(yesterdaysDate);\n\n  saturdayDate = new Date();\n  saturdayDate.setDate(\n    saturdayDate.getDate() - ((saturdayDate.getDay() + 6) % 7)\n  );\n  saturdayDate.setDate(saturdayDate.getDate() - 2);\n  [lastSaturday, lastSaturdayFootyStats] = await calculateDate(saturdayDate);\n\n  historicDate = new Date();\n  historicDate.setDate(\n    historicDate.getDate() - ((historicDate.getDay() + 6) % 7)\n  );\n  historicDate.setDate(historicDate.getDate() - 9);\n  [historic, historicFootyStats] = await calculateDate(historicDate);\n\n\n  async function convertTimestampForSofaScore(timestamp) {\n    let newDate = new Date(timestamp);\n  \n    let year = newDate.getFullYear();\n    let month = String(newDate.getMonth() + 1).padStart(2, '0'); // Adding 1 to month because it is zero-based\n    let day = String(newDate.getDate()).padStart(2, '0');\n    \n    let converted = `${year}-${month}-${day}`;\n  \n    return converted;\n  }\n\n  todaySS = await convertTimestampForSofaScore(new Date());\n  tomorrowSS = await convertTimestampForSofaScore(tomorrowsDate);\n  yesterdaySS = await convertTimestampForSofaScore(yesterdaysDate);\n  lastSaturdaySS = await convertTimestampForSofaScore(saturdayDate);\n  historicSS = await convertTimestampForSofaScore(historicDate);\n\n  const text =\n    \"Select a day you would like to retrieve fixtures for from the options above\\n A list of games will be returned once the data has loaded\\n Once all fixtures have loaded, click on “Get Predictions” to see XGTipping's forecasted outcomes for every game\\n If a game has completed, the predictions is displayed on the right and the actual result on the left\\n Each individual fixture is tappable/clickable. By doing so, you can access a range of detailed stats, from comparative charts, granular performance measures to previous meetings.\\n All games are subject to the same automated prediction algorithm with the outcome being a score prediction. Factors that determine the tip include the following, amongst others:\\n - Goal differentials\\n - Expected goal differentials \\n - Attack/Defence performance\\n - Form trends over time\\n - Home/Away records\\n - WDL records\\n - Points per game \\n - A range of other comparative factors\\n  –\\n\";\n\n  const text2 =\n    \"A range of tools are available should you wish to use them\\n Build a multi - Use the '+' or '-' buttons to add or remove a game deemed to be one of XGTIpping's highest confidence tips from the day\\n Exotic of the day: A pre-built exotic multi comprising of XGTipping's highest confidence tips\\n BTTS games: Games where both teams to score is deemed a likely outcome\\n Over 2.5 goals tips: Games where over 2.5 goals are most likely to be scored\\n XG tips: Comprises only games where the expected goal differentials between each team are at their greatest. We believe this shows a true disparity in the form of the two opposing teams\\n Tap the 'How to use' option to hide this text\";\n\n  let textJoined = text.concat(text2);\n\n  let newText = textJoined.split(\"\\n\").map((i) => {\n    return <p>{i}</p>;\n  });\n\n  async function renderButtons() {\n    ReactDOM.render(\n      <div className=\"FixtureButtons\">\n        <div className=\"historicResults\">\n          <Button\n            text={\"Last Saturday\"}\n            className=\"HistoricFixturesButton\"\n            onClickEvent={async () =>\n              fixtureList.push(\n                await generateFixtures(\n                  \"lastSaturday\",\n                  lastSaturday,\n                  selectedOdds,\n                  lastSaturdayFootyStats,\n                  false,\n                  today,\n                  lastSaturdaySS\n                )\n              )\n            }\n          />\n        </div>\n        <Button\n          text={`<`}\n          className=\"FixturesButton\"\n          onClickEvent={async () => await decrementDate(1, date)}\n        />\n        <Button\n          text={dateFootyStats !== undefined ? dateFootyStats : date}\n          className=\"FixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"todaysFixtures\",\n                dateString,\n                selectedOdds,\n                dateFootyStats,\n                false,\n                today,\n                dateSS\n              )\n            )\n          }\n        />\n        <Button\n          text={`Today`}\n          className=\"FixturesButtonToday\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"todaysFixtures\",\n                today,\n                selectedOdds,\n                todayFootyStats,\n                true,\n                today,\n                todaySS\n              )\n            )\n          }\n        />\n        <Button\n          text={\"Tomorrow\"}\n          className=\"FixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"tomorrowsFixtures\",\n                tomorrow,\n                selectedOdds,\n                tomorrowFootyStats,\n                true,\n                today,\n                tomorrowSS\n              )\n            )\n          }\n        />\n      </div>,\n      document.getElementById(\"Buttons\")\n    );\n  }\n\n  ReactDOM.render(\n    <div className=\"FixtureButtons\">\n      <div className=\"historicResults\">\n        <Button\n          text={\"Last Saturday\"}\n          className=\"HistoricFixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"lastSaturday\",\n                lastSaturday,\n                selectedOdds,\n                lastSaturdayFootyStats,\n                false,\n                today,\n                lastSaturdaySS\n              )\n            )\n          }\n        />\n        {/* <Button\n          text={\"Historic predictions\"}\n          className=\"HistoricFixturesButtonRight\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"historic\",\n                historic,\n                selectedOdds,\n                historicFootyStats\n              )\n            )\n          }\n        /> */}\n      </div>\n      <Button\n        text={`<`}\n        className=\"FixturesButton\"\n        onClickEvent={async () => await decrementDate(1, date)}\n      />\n      <Button\n        text={`${string}`}\n        className=\"FixturesButtonToday\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"todaysFixtures\",\n              today,\n              selectedOdds,\n              todayFootyStats,\n              true,\n              today,\n              todaySS\n            )\n          )\n        }\n      />\n      <Button\n        text={\"Tomorrow\"}\n        className=\"FixturesButton\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"tomorrowsFixtures\",\n              tomorrow,\n              selectedOdds,\n              tomorrowFootyStats,\n              true,\n              today,\n              tomorrowSS\n            )\n          )\n        }\n      />\n    </div>,\n    document.getElementById(\"Buttons\")\n  );\n  ReactDOM.render(\n    <div className=\"OddsRadios\">\n      <OddsRadio value=\"Fractional odds\"></OddsRadio>\n      <OddsRadio value=\"Decimal odds\"></OddsRadio>\n    </div>,\n    document.getElementById(\"Checkbox\")\n  );\n  ReactDOM.render(\n    <Fragment>\n      <Collapsable\n        // className={\"HowToUse\"}\n        buttonText={\"How to use\"}\n        element={newText}\n      />\n    </Fragment>,\n    document.getElementById(\"XGDiff\")\n  );\n\n  // ReactDOM.render(\n  //   <Button\n  //     text={\"Lowest scoring leagues\"}\n  //     className={\"Under25TeamsButton\"}\n  //     onClickEvent={async () => {\n  //       let leagues = await getLowestScoringLeagues();\n  //       const leagueList = [];\n\n  //       leagues.forEach(async (league) =>\n  //         leagueList.push(\n  //           <ul className=\"GlobalStat\">\n  //             <p className=\"TeamName\">\n  //               {league.league} ({league.leagueCountry})\n  //             </p>\n  //             <li>Average goals: {league.averageGoals}</li>\n  //             <li>Under 2.5 goals %: {league.under25Percentage}%</li>\n  //           </ul>\n  //         )\n  //       );\n\n  //       reactDom.render(\n  //         <div>\n  //           <h3>Leagues with the lowest scoring games</h3>\n  //           <ul>{leagueList}</ul>\n  //         </div>,\n  //         document.getElementById(\"Under25Games\")\n  //       );\n  //     }}\n  //   ></Button>,\n  //   document.getElementById(\"Under25Games\")\n  // );\n\n  // ReactDOM.render(\n  //   <Button\n  //     text={\"Highest scoring leagues\"}\n  //     className={\"Over25TeamsButton\"}\n  //     onClickEvent={async () => {\n  //       let leagues = await getHighestScoringLeagues();\n  //       const leagueList = [];\n\n  //       leagues.forEach(async (league) =>\n  //         leagueList.push(\n  //           <ul className=\"GlobalStat\">\n  //             <p className=\"TeamName\">\n  //               {league.league} ({league.leagueCountry})\n  //             </p>\n  //             <li>Average goals: {league.averageGoals}</li>\n  //             <li>Over 2.5 goals %: {league.over25Percentage}%</li>\n  //           </ul>\n  //         )\n  //       );\n\n  //       reactDom.render(\n  //         <div>\n  //           <h3>Leagues with the highest scoring games</h3>\n  //           <ul>{leagueList}</ul>\n  //         </div>,\n  //         document.getElementById(\"Over25Games\")\n  //       );\n  //     }}\n  //   ></Button>,\n  //   document.getElementById(\"Over25Games\")\n  // );\n}\n\nasync function getHighestScoringLeagues() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}over25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    for (let index = 0; index < 215; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        over25Percentage:\n          leagues.data.top_leagues.data[index].seasonOver25Percentage_overall,\n        division: leagues.data.top_leagues.data[index].division,\n        leagueId: leagues.data.top_leagues.data[index].id,\n      };\n      arr.push(league);\n    }\n  });\n\n  const finalArray = arr.filter(\n    (league) =>\n      leagueOrder.find((element) => element === league.leagueId) &&\n      league.averageGoals >= 2.5\n  );\n\n  let sortedArray = finalArray.sort((a, b) => b.averageGoals - a.averageGoals);\n\n  return sortedArray;\n}\n\nasync function getLowestScoringLeagues() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}under25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    for (let index = 0; index < 215; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        under25Percentage:\n          leagues.data.top_leagues.data[index].seasonUnder25Percentage_overall,\n        leagueId: leagues.data.top_leagues.data[index].id,\n      };\n      arr.push(league);\n    }\n  });\n\n  const finalArray = arr.filter(\n    (league) =>\n      leagueOrder.find((element) => element === league.leagueId) &&\n      league.averageGoals < 2.5\n  );\n\n  let sortedArray = finalArray.sort((a, b) => a.averageGoals - b.averageGoals);\n\n  return sortedArray;\n}\n\nconst welcomeTextUnsplitOne = `Welcome to XGTipping. Your go-to resource for all things football, from predictions, comprehensive head to head stats, results, xg scores, odds, league tables, form, and bespoke multi-builders underpinned by expected goal (XG) data.\\n `;\nlet welcomeTextOne = welcomeTextUnsplitOne.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nconst welcomeTextUnsplitTwo = `XGTipping is completely independent and free to use, relying on a donation model to support running costs. For feedback or feature ideas, get in touch at @TippingXg.`;\nlet welcomeTextTwo = welcomeTextUnsplitTwo.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nfunction App() {\n  getLeagueList();\n  return (\n    <>\n      <div className=\"App\">\n        <Logo />\n        <a\n          className=\"SocialLink\"\n          href=\"https://www.reddit.com/r/xgtipping/\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          r/xgtipping\n        </a>\n        <div id=\"LoadingContainer\" className=\"LoadingContainer\" />\n        <div id=\"RadioContainer\" className=\"RadioContainer\">\n          <div id=\"RadioText\" />\n          <div id=\"RadioButtons\" />\n        </div>\n        <div id=\"Day\" />\n        <div id=\"Checkbox\" />\n        <div id=\"ExplainerText\" />\n        <div id=\"Loading\" className=\"Loading\"></div>\n        <div id=\"Buttons\" className=\"Buttons\">\n          <ThreeDots className=\"MainLoading\" fill=\"#030061\" />\n          <div>Loading all fixture and form data...</div>\n        </div>\n        <div id=\"GeneratePredictions\" className=\"GeneratePredictions\" />\n        <div id=\"bestPredictions\" className=\"bestPredictions\" />\n        <div id=\"exoticOfTheDay\" className=\"exoticOfTheDay\" />\n        <div id=\"successMeasure2\" />\n        <div id=\"RowOneContainer\" className=\"RowOneContainer\">\n          <div id=\"BTTS\" className=\"RowOne\" />\n          <div id=\"longShots\" className=\"RowOne\" />\n          <div id=\"draws\" className=\"RowOne\" />\n        </div>\n        <div id=\"insights\" />\n        <div id=\"risk\" />\n        <div id=\"successMeasure\" />\n        <div id=\"tables\" />\n        <div id=\"homeBadge\" />\n        <div id=\"FixtureContainerHeaders\"></div>\n        {/* <StyledKofiButton buttonText=\"Donations\"></StyledKofiButton> */}\n        <div id=\"XGDiff\" />\n        <div id=\"FixtureContainer\">\n          <h6 className=\"WelcomeText\">{welcomeTextOne}</h6>\n          <h6 className=\"GetMatchStatText\">\n            Below is an example of our tips/results overview for you to\n            familiarise yourself with. Get real fixtures using the date buttons,\n            above. When loaded, tap on one to see full match stats\n          </h6>\n          <div className=\"ExplainerContainer\">\n            <span className=\"oddsHomeExplainer\">Home odds</span>\n            <span className=\"emptyHomeTeam\"></span>\n            <span className=\"scoreExplainer\">Result / KO Time</span>\n            <span className=\"predictionExplainer\">Our Prediction</span>\n            <span className=\"emptyAwayTeam\"></span>\n            <span className=\"oddsAwayExplainer\">Away odds</span>\n          </div>\n          <Fixture\n            fixtures={mockedFixtures.matches}\n            // result={false}\n            mock={true}\n            className={\"individualFixture\"}\n          />\n          <div>\n            <h6 className=\"WelcomeText\">{welcomeTextTwo}</h6>\n            <h6 className=\"WelcomeText\">\n              We cover a range of leagues, including\n              <ul className=\"AllLeagues\">\n                <li className=\"League\">Premier League</li>\n                <li className=\"League\">English Football League</li>\n                <li className=\"League\">La Liga</li>\n                <li className=\"League\">Serie A</li>\n                <li className=\"League\">Bundesliga</li>\n                <li className=\"League\">Ligue 1</li>\n                <li className=\"League\">MLS</li>\n                <li className=\"League\">Primeira Liga</li>\n                <li className=\"League\">Loads more...</li>\n              </ul>\n            </h6>\n          </div>\n          <div>\n            <div className=\"DataText\">Raw data from</div>\n            <a\n              className=\"DataLink\"\n              href=\"https://www.footystats.org\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              footystats.org\n            </a>\n          </div>\n          <div className=\"bitcoin\" id=\"bitcoin\">\n            We aim to remain free to use, contributions are always appreciated\n            though:\n            <a\n              href=\"https://www.ko-fi.com/xgtipping\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Donations\n            </a>\n            <span className=\"bitcoinSymbol\">&#x20bf;itcoin address</span>\n            <span className=\"bitcoinAddress\">\n              bc1q7j62txkvhfu0dt3l0s07saze6pjnyzs26wfgp0\n            </span>\n          </div>\n        </div>\n        <div>\n    </div>\n        <div className=\"Social\">\n          <TwitterShareButton\n            url={\"www.xgtipping.com\"}\n            title={\"#XGTipping\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <TwitterIcon size={\"3em\"} round={true} />\n          </TwitterShareButton>\n          <RedditShareButton\n            url={\"www.xgtipping.com\"}\n            title={\"XGTipping\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <RedditIcon size={\"3em\"} round={true} />\n          </RedditShareButton>\n          <FacebookShareButton\n            url={\"www.xgtipping.com\"}\n            quote={\"XGTipping - data-driven football predictions\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <FacebookIcon size={\"3em\"} round={true} />\n          </FacebookShareButton>\n          <WhatsappShareButton\n            url={\"www.xgtipping.com\"}\n            title={\"XGTipping\"}\n            separator=\": \"\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <WhatsappIcon size={\"3em\"} round={true} />\n          </WhatsappShareButton>\n          <TelegramShareButton\n            url={\"XGTipping\"}\n            title={\"XGTipping\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <TelegramIcon size={\"3em\"} round={true} />\n          </TelegramShareButton>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n// import React from \"react\";\n// import { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\n// import HomePage from \"./components/HomePage\";\n// import TeamPage from \"./components/Team\";\n\n// const App = () => {\n//   return (\n//     <Router>\n//       <Routes>\n//       <Route path=\"/team\" element={<TeamPage />} />\n//         <Route path=\"/\" element={<HomePage />} />\n//         {/* Add more routes */}\n//       </Routes>\n//     </Router>\n//   );\n// };\n\n// export default App;\n","export default __webpack_public_path__ + \"static/media/xg-tipping-high-resolution-logo-transparent.90176ea6.png\";","import React from 'react';\nimport myImage from './images/xg-tipping-high-resolution-logo-transparent.png';\n\nconst Logo = () => {\n  return (\n    <div className=\"logo-container\">\n      <img src={myImage} alt=\"XG Tipping logo\" className='responsive-logo'/>\n    </div>\n  );\n};\n\nexport default Logo;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CreateBadge } from \"./createBadge\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction TeamPage() {\n  const [dataState, setData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const responseHome = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}team/${storedFixtureDetailsJson.homeId}`\n      );\n      const resultHome = await responseHome.json();\n\n      const responseAway = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}team/${storedFixtureDetailsJson.awayId}`\n      );\n      const resultAway = await responseAway.json();\n      // setData(result.data.stadium_name);\n\n      let indexHome = resultHome.data.findIndex(\n        (x) => x.season_format === \"Domestic League\"\n      );\n      let indexAway = resultAway.data.findIndex(\n        (x) => x.season_format === \"Domestic League\"\n      );\n\n      if (resultHome.data[indexHome].stats.seasonScoredNum_overall) {\n        setData((test) => ({\n          ...test,\n          scoredOverallHome:\n            resultHome.data[indexHome].stats.seasonScoredNum_overall,\n          playedHomeOnly:\n            resultHome.data[indexHome].stats.seasonMatchesPlayed_home,\n          scoredOverallHomeOnly:\n            resultHome.data[indexHome].stats.seasonScoredNum_home,\n          conceededOverallHome:\n            resultHome.data[indexHome].stats.seasonConcededNum_overall,\n          conceededOverallHomeOnly:\n            resultHome.data[indexHome].stats.seasonConcededNum_home,\n\n          PPGOverallHome: resultHome.data[indexHome].stats.seasonPPG_overall,\n          PPGOverallHomeOnly: resultHome.data[indexHome].stats.seasonPPG_home,\n          leaguePosition_overallHome:\n            resultHome.data[indexHome].stats.leaguePosition_overall,\n          leaguePosition_HomeOnly:\n            resultHome.data[indexHome].stats.leaguePosition_home,\n          averageAttendance:\n            resultHome.data[indexHome].stats.average_attendance_home,\n          BTTSPercentage_overallHome:\n            resultHome.data[indexHome].stats.seasonBTTSPercentage_overall,\n          BTTSAndWinPercentage_Home:\n            resultHome.data[indexHome].stats.BTTS_and_win_percentage_overall,\n          BTTSAndLosePercentage_Home:\n            resultHome.data[indexHome].stats.BTTS_and_lose_percentage_overall,\n          BTTSBothHalvesHome:\n            resultHome.data[indexHome].stats\n              .BTTS_both_halves_percentage_overall,\n          GoalDifferenceHT_overall_Home:\n            resultHome.data[indexHome].stats.GoalDifferenceHT_overall,\n          GD_2hg_overall_Home: resultHome.data[indexHome].stats.gd_2hg_overall,\n          leadingAtHTPercentage_overallHome:\n            resultHome.data[indexHome].stats.leadingAtHTPercentage_overall,\n          seasonOver15Percentage_overallHome:\n            resultHome.data[indexHome].stats.seasonOver15Percentage_overall,\n          seasonOver25Percentage_overallHome:\n            resultHome.data[indexHome].stats.seasonOver25Percentage_overall,\n          seasonOver35Percentage_overallHome:\n            resultHome.data[indexHome].stats.seasonOver35Percentage_overall,\n          seasonOver45Percentage_overallHome:\n            resultHome.data[indexHome].stats.seasonOver45Percentage_overall,\n          scoredBothHalvesPercentage_overallHome:\n            resultHome.data[indexHome].stats.scoredBothHalvesPercentage_overall,\n          shots_on_target_per_goals_scored_overallHome:\n            resultHome.data[indexHome].stats.additional_info\n              .shots_on_target_per_goals_scored_overall,\n          cornersTotalAVG_overallHome:\n            resultHome.data[indexHome].stats.cornersTotalAVG_overall,\n          cardsAVG_overallHome:\n            resultHome.data[indexHome].stats.cardsAVG_overall,\n          foulsAVG_overallHome:\n            resultHome.data[indexHome].stats.foulsAVG_overall,\n          penalties_won_per_match_overallHome:\n            resultHome.data[indexHome].stats.additional_info\n              .penalties_won_per_match_overall,\n          penalty_in_a_match_percentage_overallHome:\n            resultHome.data[indexHome].stats.additional_info\n              .penalty_in_a_match_percentage_overall,\n\n          scoredOverallAway:\n            resultAway.data[indexAway].stats.seasonScoredNum_overall,\n          playedAwayOnly:\n            resultAway.data[indexAway].stats.seasonMatchesPlayed_away,\n          scoredOverallAwayOnly:\n            resultAway.data[indexAway].stats.seasonScoredNum_away,\n          conceededOverallAway:\n            resultAway.data[indexAway].stats.seasonConcededNum_overall,\n          conceededOverallAwayOnly:\n            resultAway.data[indexAway].stats.seasonConcededNum_away,\n\n          PPGOverallAway: resultAway.data[indexAway].stats.seasonPPG_overall,\n          PPGOverallAwayOnly: resultAway.data[indexAway].stats.seasonPPG_away,\n          leaguePosition_overallAway:\n            resultAway.data[indexAway].stats.leaguePosition_overall,\n          leaguePosition_AwayOnly:\n            resultAway.data[indexAway].stats.leaguePosition_away,\n          BTTSPercentage_overallAway:\n            resultAway.data[indexAway].stats.seasonBTTSPercentage_overall,\n          BTTSAndWinPercentage_Away:\n            resultAway.data[indexAway].stats.BTTS_and_win_percentage_overall,\n          BTTSAndLosePercentage_Away:\n            resultAway.data[indexAway].stats.BTTS_and_lose_percentage_overall,\n          BTTSBothHalvesAway:\n            resultAway.data[indexAway].stats\n              .BTTS_both_halves_percentage_overall,\n          GoalDifferenceHT_overall_Away:\n            resultAway.data[indexAway].stats.GoalDifferenceHT_overall,\n          GD_2hg_overall_Away: resultAway.data[indexAway].stats.gd_2hg_overall,\n          leadingAtHTPercentage_overallAway:\n            resultAway.data[indexAway].stats.leadingAtHTPercentage_overall,\n          seasonOver15Percentage_overallAway:\n            resultAway.data[indexAway].stats.seasonOver15Percentage_overall,\n          seasonOver25Percentage_overallAway:\n            resultAway.data[indexAway].stats.seasonOver25Percentage_overall,\n          seasonOver35Percentage_overallAway:\n            resultAway.data[indexAway].stats.seasonOver35Percentage_overall,\n          seasonOver45Percentage_overallAway:\n            resultAway.data[indexAway].stats.seasonOver45Percentage_overall,\n          scoredBothHalvesPercentage_overallAway:\n            resultAway.data[indexAway].stats.scoredBothHalvesPercentage_overall,\n          shots_on_target_per_goals_scored_overallAway:\n            resultAway.data[indexAway].stats.additional_info\n              .shots_on_target_per_goals_scored_overall,\n\n          cornersTotalAVG_overallAway:\n            resultAway.data[indexAway].stats.cornersTotalAVG_overall,\n          cardsAVG_overallAway:\n            resultAway.data[indexAway].stats.cardsAVG_overall,\n          foulsAVG_overallAway:\n            resultAway.data[indexAway].stats.foulsAVG_overall,\n          penalties_won_per_match_overallAway:\n            resultAway.data[indexAway].stats.additional_info\n              .penalties_won_per_match_overall,\n          penalty_in_a_match_percentage_overallAway:\n            resultAway.data[indexAway].stats.additional_info\n              .penalty_in_a_match_percentage_overall,\n        }));\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  const storedDataHome = useSelector((state) => state.data.dataHome);\n  const jsonDataHome = JSON.parse(storedDataHome);\n  const propertyNamesHome = Object.entries(jsonDataHome);\n\n  const storedDataHomeDef = useSelector((state) => state.data.dataHomeDef);\n  const jsonDataHomeDef = JSON.parse(storedDataHomeDef);\n  const propertyNamesHomeDef = Object.entries(jsonDataHomeDef);\n\n  const storedDataallTeamResultsHome = useSelector(\n    (state) => state.data.allTeamResultsHome\n  );\n  const jsonDataallTeamResultsHome = JSON.parse(storedDataallTeamResultsHome);\n  const propertyNamesallTeamResultsHome = Object.values(\n    jsonDataallTeamResultsHome\n  );\n\n  const homeDetails = useSelector((state) => state.data.homeDetails);\n  const jsonHomeDetails = JSON.parse(homeDetails);\n\n  const storedDataAway = useSelector((state) => state.data.dataAway);\n  const jsonDataAway = JSON.parse(storedDataAway);\n  const propertyNamesAway = Object.entries(jsonDataAway);\n\n  const storedDataAwayDef = useSelector((state) => state.data.dataAwayDef);\n  const jsonDataAwayDef = JSON.parse(storedDataAwayDef);\n  const propertyNamesAwayDef = Object.entries(jsonDataAwayDef);\n\n  const storedDataallTeamResultsAway = useSelector(\n    (state) => state.data.allTeamResultsAway\n  );\n  const jsonDataallTeamResultsAway = JSON.parse(storedDataallTeamResultsAway);\n  const propertyNamesallTeamResultsAway = Object.values(\n    jsonDataallTeamResultsAway\n  );\n\n  const awayDetails = useSelector((state) => state.data.awayDetails);\n  const jsonAwayDetails = JSON.parse(awayDetails);\n\n  const storedFixtureDetails = useSelector(\n    (state) => state.data.fixtureDetails\n  );\n  const storedFixtureDetailsJson = JSON.parse(storedFixtureDetails);\n\n  const options = {\n    plugins: {\n      title: {\n        display: true,\n        text: \"Team comparison\",\n      },\n    },\n    aspectRatio: 0.5,\n    maintainAspectRatio: true,\n    responsive: true,\n    scales: {\n      x: {\n        stacked: true,\n      },\n      y: {\n        stacked: true,\n        display: false,\n      },\n    },\n  };\n  const labels = [\n    storedFixtureDetailsJson.homeTeamName,\n    storedFixtureDetailsJson.awayTeamName,\n  ];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        data: [\n          jsonHomeDetails[\"Attacking Strength\"],\n          jsonAwayDetails[\"Attacking Strength\"],\n        ],\n        label: \"Attacking Strength\",\n        backgroundColor: \"#030061\",\n      },\n      {\n        data: [\n          jsonHomeDetails[\"Defensive Strength\"],\n          jsonAwayDetails[\"Defensive Strength\"],\n        ],\n        label: \"Defensive Strength\",\n        backgroundColor: \"#CC3314\",\n      },\n    ],\n  };\n\n  return (\n    <div className=\"TeamStatsContainer\">\n      <div className=\"FixtureHeadingContiner\">\n        <CreateBadge\n          image={storedFixtureDetailsJson.homeTeamBadge}\n          ClassName=\"HomeTeamBadge\"\n          alt=\"Home team badge\"\n        ></CreateBadge>\n        {`${storedFixtureDetailsJson.homeTeamName} v ${storedFixtureDetailsJson.awayTeamName}`}\n        <CreateBadge\n          image={storedFixtureDetailsJson.awayTeamBadge}\n          ClassName=\"AwayTeamBadge\"\n          alt=\"Away team badge\"\n        ></CreateBadge>\n      </div>\n      <h3>\n        {storedFixtureDetailsJson.stadium} KO: {storedFixtureDetailsJson.time} |\n        Average Attendance: {dataState.averageAttendance}\n      </h3>\n      <h3>\n        XGTipping Prediction: {storedFixtureDetailsJson.homeGoals} -{\" \"}\n        {storedFixtureDetailsJson.awayGoals}\n      </h3>\n      <div className=\"TeamStats\">\n        <ul className=\"HomeTeamStats\">\n          <iframe\n            src={`https://footystats.org/api/club?id=${storedFixtureDetailsJson.homeId}`}\n            height=\"100%\"\n            width=\"100%\"\n            style={{\n              height: \"420px\",\n              width: \"100%\",\n              border: \"0.1em solid #030061\",\n            }}\n          ></iframe>\n          <h3>{storedFixtureDetailsJson.homeTeamName}</h3>\n          {propertyNamesHome.map(([key, value], index) => (\n            <li key={index}>\n              <strong>{key}:</strong>{\" \"}\n              {typeof value === \"object\" ? JSON.stringify(value) : value}\n            </li>\n          ))}\n          <ul className=\"HomeTeamStats\">\n            {propertyNamesHomeDef.map(([key, value], index) => (\n              <li key={index}>\n                <strong>{key}:</strong>{\" \"}\n                {typeof value === \"object\" ? JSON.stringify(value) : value}\n              </li>\n            ))}\n          </ul>\n          <li>Scored overall: {dataState.scoredOverallHome}</li>\n          <li>Conceeded overall: {dataState.conceededOverallHome}</li>\n          <li>\n            Average scored home only:{\" \"}\n            {(\n              dataState.scoredOverallHomeOnly / dataState.playedHomeOnly\n            ).toFixed(2)}\n          </li>\n          <li>\n            Average conceeded home only:{\" \"}\n            {(\n              dataState.conceededOverallHomeOnly / dataState.playedHomeOnly\n            ).toFixed(2)}\n          </li>\n          <li>PPG overall: {dataState.PPGOverallHome}</li>\n          <li>PPG home only: {dataState.PPGOverallHomeOnly}</li>\n          <li>League position: {dataState.leaguePosition_overallHome}</li>\n          <li>\n            League position home only: {dataState.leaguePosition_HomeOnly}\n          </li>\n          <li>BTTS {dataState.BTTSPercentage_overallHome}%</li>\n          <li>BTTS and win: {dataState.BTTSAndWinPercentage_Home}%</li>\n          <li>BTTS and lose: {dataState.BTTSAndLosePercentage_Home}%</li>\n          <li>BTTS both halves: {dataState.BTTSBothHalvesHome}%</li>\n          <li>\n            Goal diff 1st half only: {dataState.GoalDifferenceHT_overall_Home}\n          </li>\n          <li>Goal diff 2nd half only: {dataState.GD_2hg_overall_Home}</li>\n          <li>\n            Leading at half time: {dataState.leadingAtHTPercentage_overallHome}%\n          </li>\n          <li>\n            Over 1.5 goals in games:{\" \"}\n            {dataState.seasonOver15Percentage_overallHome}%\n          </li>\n          <li>\n            Over 2.5 goals in games:{\" \"}\n            {dataState.seasonOver25Percentage_overallHome}%\n          </li>\n          <li>\n            Over 3.5 goals in games:{\" \"}\n            {dataState.seasonOver35Percentage_overallHome}%\n          </li>\n          <li>\n            Over 4.5 goals in games:{\" \"}\n            {dataState.seasonOver45Percentage_overallHome}%\n          </li>\n          <li>\n            Scored both halves:{\" \"}\n            {dataState.scoredBothHalvesPercentage_overallHome}%\n          </li>\n          <li>\n            SOTs per goal:{\" \"}\n            {dataState.shots_on_target_per_goals_scored_overallHome}\n          </li>\n          <li>Corners in game avg: {dataState.cornersTotalAVG_overallHome}</li>\n          <li>Cards avg: {dataState.cardsAVG_overallHome}</li>\n          <li>Fouls against avg: {dataState.foulsAVG_overallHome}</li>\n          <li>\n            Penalties won avg: {dataState.penalties_won_per_match_overallHome}\n          </li>\n          <li>\n            Penalties in match:{\" \"}\n            {dataState.penalty_in_a_match_percentage_overallHome}%\n          </li>\n        </ul>\n        <ul className=\"AwayTeamStats\">\n          <iframe\n            src={`https://footystats.org/api/club?id=${storedFixtureDetailsJson.awayId}`}\n            height=\"100%\"\n            width=\"100%\"\n            style={{\n              height: \"420px\",\n              width: \"100%\",\n              color: \"#030061\",\n              border: \"0.1em solid #030061\",\n            }}\n          ></iframe>\n          <h3>{storedFixtureDetailsJson.awayTeamName}</h3>\n          {propertyNamesAway.map(([key, value], index) => (\n            <li key={index}>\n              <strong>{key}:</strong>{\" \"}\n              {typeof value === \"object\" ? JSON.stringify(value) : value}\n            </li>\n          ))}\n          <ul className=\"AwayTeamStats\">\n            {propertyNamesAwayDef.map(([key, value], index) => (\n              <li key={index}>\n                <strong>{key}:</strong>{\" \"}\n                {typeof value === \"object\" ? JSON.stringify(value) : value}\n              </li>\n            ))}\n          </ul>\n          <li>Scored overall: {dataState.scoredOverallAway}</li>\n          <li>Conceeded overall: {dataState.conceededOverallAway}</li>\n          <li>\n            Average scored away only:{\" \"}\n            {(\n              dataState.scoredOverallAwayOnly / dataState.playedAwayOnly\n            ).toFixed(2)}\n          </li>\n          <li>\n            Average conceeded away only:{\" \"}\n            {(\n              dataState.conceededOverallAwayOnly / dataState.playedAwayOnly\n            ).toFixed(2)}\n          </li>\n          <li>PPG overall: {dataState.PPGOverallAway}</li>\n          <li>PPG away only: {dataState.PPGOverallAwayOnly}</li>\n          <li>League position: {dataState.leaguePosition_overallAway}</li>\n          <li>\n            League position away only: {dataState.leaguePosition_AwayOnly}\n          </li>\n          <li>BTTS: {dataState.BTTSPercentage_overallAway}%</li>\n          <li>BTTS and win: {dataState.BTTSAndWinPercentage_Away}%</li>\n          <li>BTTS and lose: {dataState.BTTSAndLosePercentage_Away}%</li>\n          <li>BTTS both halves: {dataState.BTTSBothHalvesAway}%</li>\n          <li>\n            Goal diff 1st half only: {dataState.GoalDifferenceHT_overall_Away}\n          </li>\n          <li>Goal diff 2nd half only: {dataState.GD_2hg_overall_Away}</li>\n          <li>\n            Leading at half time: {dataState.leadingAtHTPercentage_overallAway}%\n          </li>\n          <li>\n            Over 1.5 goals in games:{\" \"}\n            {dataState.seasonOver15Percentage_overallAway}%\n          </li>\n          <li>\n            Over 2.5 goals in games:{\" \"}\n            {dataState.seasonOver25Percentage_overallAway}%\n          </li>\n          <li>\n            Over 3.5 goals in games:{\" \"}\n            {dataState.seasonOver35Percentage_overallAway}%\n          </li>\n          <li>\n            Over 4.5 goals in games:{\" \"}\n            {dataState.seasonOver45Percentage_overallAway}%\n          </li>\n          <li>\n            Scored both halves:{\" \"}\n            {dataState.scoredBothHalvesPercentage_overallAway}%\n          </li>\n          <li>\n            SOTs per goal:{\" \"}\n            {dataState.shots_on_target_per_goals_scored_overallAway}\n          </li>\n          <li>Corners in game avg: {dataState.cornersTotalAVG_overallAway}</li>\n          <li>Cards avg: {dataState.cardsAVG_overallAway}</li>\n          <li>Fouls against avg: {dataState.foulsAVG_overallAway}</li>\n          <li>\n            Penalties won avg: {dataState.penalties_won_per_match_overallAway}\n          </li>\n          <li>\n            Penalties in match:{\" \"}\n            {dataState.penalty_in_a_match_percentage_overallAway}%\n          </li>\n        </ul>\n        <div className=\"ChartContainer\">\n          <span className=\"Spacer\"></span>\n          <Bar options={options} data={data} className=\"ComparisonBar\" />\n          <span className=\"Spacer\"></span>\n        </div>\n        <ul className=\"HomeTeamResults\">\n          {propertyNamesallTeamResultsHome.map((match, index) => (\n            <>\n              <div className=\"MatchDate\">{match.date}</div>\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{match.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {match.homeGoals} : {match.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{match.awayTeam}</div>\n              </div>\n            </>\n          ))}\n        </ul>\n        <ul className=\"AwayTeamResults\">\n          {propertyNamesallTeamResultsAway.map((match, index) => (\n            <>\n              <div className=\"MatchDate\">{match.date}</div>\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{match.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {match.homeGoals} : {match.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{match.awayTeam}</div>\n              </div>\n            </>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default TeamPage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router, Route, Routes, HashRouter } from \"react-router-dom\";\nimport TeamPage from \"./components/Team\";\nimport { Provider } from \"react-redux\";\nimport store from \"./logic/store\"; // Import your Redux store\n\nimport {Fixture} from \"./components/Fixture\"\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n    <HashRouter>\n        <Routes>\n          <Route path=\"/fixture\" element={<TeamPage />} />\n          <Route path=\"/\" exact element={<App />} />\n          {/* <Route path=\"/\" element={<Fixture />} /> */}\n        </Routes>\n        </HashRouter>\n    </Provider>\n    ,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}