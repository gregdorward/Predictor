{"version":3,"sources":["components/Header.js","components/radio.js","components/Button.js","logic/getForm.js","components/createBadge.js","components/CollapsableElement.js","components/createStatsDiv.js","components/Div.js","components/Fixture.js","logic/getStats.js","logic/getScorePredictions.js","logic/getFixtures.js","components/TextSection.js","components/Checkbox.js","App.js","reportWebVitals.js","index.js"],"names":["Header","selectedOption","Radio","props","handleOptionChange","setState","value","state","className","this","type","name","checked","onChange","Component","Button","id","variant","onClick","onClickEvent","text","applyColour","a","colour","getForm","match","teams","homeId","awayId","fixtureForm","i","team","fetch","proxyurl","process","response","json","then","formData","length","CreateBadge","src","image","ClassName","alt","flex-shrink","flexShrink","Collapsable","isOpen","handleOnClick","prevState","style","fontFamily","buttonText","Stats","styleForm","formIndicator","console","log","last5","goals","conceeded","possession","XG","sot","dangerousAttacks","Div","resultValue","game","radioSelected","parseInt","index","divider","gameStats","allForm","find","homeTeam","home","teamName","awayTeam","away","time","push","btts","btts_potential","formDataHome","Last5","LastFiveForm","AverageGoals","ScoredOverall","toFixed","AverageConceeded","ConcededOverall","AverageXG","AveragePossession","AverageShotsOnTarget","AverageDangerousAttacks","homeOrAway","formDataAway","ReactDOM","render","document","getElementById","GetDivider","fixture","outcome","prediction","matchStatus","status","isPrediction","homeGoals","awayGoals","goalsA","goalsB","winner","profit","homeOdds","drawOdds","awayOdds","SingleFixture","createStatsDiv","backgroundColor","homeFormColour","homePpg","result","awayFormColour","awayPpg","homeBadge","awayBadge","newText","split","map","List","fixtures","Fixture","myHeaders","Headers","append","finalHomeGoals","finalAwayGoals","calculateScore","allLeagueData","roundCustom","calculate","gameTotalWeighting","num","wholeNumber","Math","floor","remainder","ceil","generalOffensiveRating","homeOffensiveRating","ScoredHome","PlayedHome","XGHome","awayOffensiveRating","ScoredAway","PlayedAway","XGAway","generalDefensiveRating","XGAgainstAvg","homeDefensiveRating","ConcededHome","XGAgainstHome","awayDefensiveRating","ConcededAway","XGAgainstAway","parseFloat","finishingScore","goalieRating","defenceScore","CleanSheetPercentage","scoredAverage","concededAverage","defenceRating","finalFinishingScore","XGConcededAdjustment","forecastedXG","forecastedXGConceded","goalsBasedOnAverages","round","homeRaw","awayRaw","formHome","formAway","oddsWeightingHome","oddsWeightingAway","diff","weighting","weightingSplitHome","abs","weightingSplitAway","homeWeighting","awayWeighting","homeCalculation","awayCalculation","competitionId","competition_id","averageGoals","homeAttackAdvantagePercentage","homeDefenceAdvantagePercentage","homeGoalWeighting","HomeDefenceWeighting","homeGoalsUnweighted","awayGoalsUnweighted","homeGoalsWithOddsWeighting","awayGoalsWithOddsWeighting","homeGoalsWithAwayDefenceWeighting","awayGoalsWithHomeDefenceWeighting","homeGoalswithHomeWeighting","awayGoalswithAwayWeighting","XGForAdjustedHomeGoals","XGForAdjustedAwayGoals","XGAgainstAdjustedHomeGoals","XGAgainstAdjustedAwayGoals","XGAdjustedHomeGoals","XGAdjustedAwayGoals","generalformHomeGoals","generalformAwayGoals","homeformHomeGoals","awayformAwayGoals","total","getSuccessMeasure","sum","roundedFigure","gameCount","fixtureResponse","fixtureArray","tips","longShotTips","accumulatedOdds","predictions","getScorePrediction","day","Promise","all","matches","predictionOutcome","predictionObject","odds","longShotPredictionObject","tip","require","config","lastFiveFormHome","lastFiveFormAway","leagueGames","Date","toLocaleDateString","month","year","tomorrowsDate","setDate","getDate","tomorrowDay","tomorrowMonth","tomorrowYear","yesterdaysDate","yesterdayYear","yesterday","today","tomorrow","b","createFixture","generateFixtures","radioState","radioValue","url","Array","from","data","method","headers","Accept","storedForm","form","formArray","isFormStored","isStoredLocally","filter","orderedLeagues","element","unixTimestamp","date_unix","dateObject","toLocaleString","hour","home_name","away_name","odds_ft_1","odds_ft_2","odds_ft_x","homeID","awayID","homeTeamInfo","awayTeamInfo","homeExtract","stats","additional_info","replace","slug","pop","toUpperCase","substring","awayExtract","slugAway","0","xg_for_avg_overall","xg_for_avg_home","xg_for_avg_away","seasonScoredNum_overall","seasonScoredNum_home","seasonScoredNum_away","seasonMatchesPlayed_home","seasonMatchesPlayed_away","seasonConcededNum_overall","seasonConcededNum_home","seasonConcededNum_away","xg_against_avg_overall","xg_against_avg_home","xg_against_avg_away","seasonCSPercentage_overall","possessionAVG_overall","shotsOnTargetAVG_overall","dangerous_attacks_avg_overall","PPG","seasonPPG_overall","AttacksHome","attacks_avg_home","AttacksAway","attacks_avg_away","DangerousAttacksHome","dangerous_attacks_avg_home","DangerousAttacksAway","dangerous_attacks_avg_away","1","2","home_image","away_image","home_ppg","away_ppg","homeGoalCount","awayGoalCount","body","JSON","stringify","TextBlock","React","leagueObject","fixtureList","availableLeagues","mapOrder","leagueList","leagues","leagueArray","array","order","key","sort","A","B","indexOf","league","x","season","leagueData","responseBody","english_name","homeWinPercentage","awayWinPercentage","drawPercentage","seasonAVG_overall","label","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.8b6c4d56.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <div>\n      <h1>Predictor</h1>\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nexport var selectedOption = \"5\";\n\nexport var fixtureList = [];\n\nexport class Radio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOption: this.props.value,\n    };\n  }\n\n  handleOptionChange = () => {\n    this.setState({\n      selectedOption: this.props.value,\n    });\n    selectedOption = this.state.selectedOption;\n  };\n\n  render() {\n    return (\n      <section className=\"dark\">\n        <div className={this.props.className}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"lastGames\"\n              checked={this.state.checked}\n              onChange={this.handleOptionChange}\n            />\n            <span className=\"design\"></span>\n            <span className=\"text\">Last {this.props.value} games</span>\n          </label>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Radio;\n","import React from \"react\";\n\nexport function Button(props) {\n  return (\n    <div id=\"Button\">\n      <button variant=\"primary\" type=\"button\" onClick={props.onClickEvent}>\n        {props.text}\n      </button>\n    </div>\n  );\n}\n","import { proxyurl } from \"../App\";\n\nconst allTeamForm = []\n\nexport async function applyColour(value) {\n  let colour;\n  switch (true) {\n    case value < 0.49:\n      colour = \"#CD5C5C\";\n      break;\n    case value >= 0.5 && value <= 1:\n      colour = \"#F08080\";\n      break;\n    case value >= 1.01 && value <= 1.25:\n      colour = \"#FFA07A\";\n      break;\n    case value >= 1.26 && value <= 1.5:\n      colour = \"#FFFFE0\";\n      break;\n    case value >= 1.51 && value <= 2:\n      colour = \"#CFDBC5\";\n      break;\n    case value >= 2.01 && value <= 2.5:\n      colour = \"#8AA37B\";\n      break;\n    case value >= 2.51 && value <= 3:\n      colour = \"#3F6826\";\n      break;\n    default:\n      colour = \"white\";\n      break;\n  }\n  return colour;\n}\n\nexport async function getForm(match) {\n  const teams = [match.homeId, match.awayId];\n  const fixtureForm = [];\n\n  for (let i = 0; i < teams.length; i++) {\n    const team = teams[i];\n    let response = await fetch(\n      proxyurl +\n        `https://api.footystats.org/lastx?key=${process.env.REACT_APP_API_KEY}&team_id=` +\n        team\n    );\n    await response.json().then((formData) => {\n      fixtureForm[i] = formData;\n    });\n  }\n  return fixtureForm;\n}\n\n\n\n","import React from \"react\";\n\nexport function CreateBadge(props) {\n  return (\n    <img\n      src={`https://cdn.footystats.org/img/${props.image}`}\n      className={props.ClassName}\n      alt={props.alt}\n      flex-shrink={props.flexShrink}\n    />\n  );\n}\n","import React, { Component } from \"react\";\nimport EscapeOutside from \"react-escape-outside\";\n\nclass Collapsable extends Component {\n  state = { isOpen: false };\n\n  handleOnClick = () => {\n    this.setState((prevState) => ({\n      isOpen: !prevState.isOpen,\n    }));\n  };\n\n  render() {\n    return (\n      <div style={{ fontFamily: \"sans-serif\" }}>\n        <button onClick={this.handleOnClick}>{this.props.buttonText}</button>\n        {this.state.isOpen && (\n          <EscapeOutside className=\"Collapsable\">\n            {this.props.text}\n          </EscapeOutside>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Collapsable;\n","import React, { Fragment } from \"react\";\n\nfunction Stats(props) {\n  function styleForm(formIndicator) {\n    let className;\n    if (formIndicator === \"W\") {\n      className = \"win\";\n    } else if (formIndicator === \"D\") {\n      className = \"draw\";\n    } else if (formIndicator === \"L\") {\n      className = \"loss\";\n    }\n    return className\n  }\n  console.log(props.last5)\n\n  return (\n    <ul className={props.className}>\n      <li key={props.name}>{`Team name - ${props.name}`}</li>\n      <li key=\"last5\">\n        <span\n          className={\n            styleForm(props.last5[0])\n          }\n        >\n          {props.last5[0]}\n        </span>\n        <span className={\n            styleForm(props.last5[1])\n          }>{props.last5[1]}</span>\n        <span className={\n            styleForm(props.last5[2])\n          }>{props.last5[2]}</span>\n        <span className={\n            styleForm(props.last5[3])\n          }>{props.last5[3]}</span>\n        <span className={\n            styleForm(props.last5[4])\n          }>{props.last5[4]}</span>\n      </li>\n\n      <li key=\"TeamScored\" className=\"TeamScored\">\n        {`Average goals scored - ${props.goals}`}\n      </li>\n      <li key=\"TeamConceeded\" className=\"TeamConceeded\">\n        {`Average goals conceeded - ${props.conceeded}`}\n      </li>\n      <li key=\"TeamPossession\" className=\"TeamPossession\">\n        {`Average possession - ${props.possession}%`}\n      </li>\n      <li key=\"TeamXG\" className=\"TeamXG\">\n        {`Average XG - ${props.XG}`}\n      </li>\n      <li key=\"AverageSOT\" className=\"AverageSOT\">\n        {`Average shots on target - ${props.sot}`}\n      </li>\n      <li key=\"DangerousAttacks\" className=\"DangerousAttacks\">\n        {`Average dangerous attacks - ${props.dangerousAttacks}`}\n      </li>\n    </ul>\n  );\n}\n\nexport default Stats;\n","import React from \"react\";\n\nfunction Div(props) {\n  return (\n    <div className={props.className}>{props.text}</div>\n  );\n}\n\nexport default Div;\n","import React, { Fragment } from \"react\";\nimport { CreateBadge } from \"./createBadge\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { createStatsDiv } from \"../logic/getStats\";\n\nlet resultValue;\nconst text =\n  \"Next to each badge is each team’s points per game picked up at home or away.\\n Once the fixtures have loaded, click on “Get Predictions” to get predictions based on form data.\\n Click on an individual fixture for detailed stats for both teams.\\n If you change your form selection, re-tapping the fixture will fetch new form data.\\n You can also fetch fresh predictions based on the newly selected option by re-tapping on “Get Predictions” at any time.\\n If a match is resulted, tapping “Get Predictions” will show how accurate the prediction was.\\n If no form radio button is chosen, the last 5 games will be used by default\";\n\n\nfunction GetDivider(fixture) {\n  const matchStatus = fixture.status;\n  const isPrediction = resultValue;\n\n  if (isPrediction === false && matchStatus !== \"complete\") {\n    return <div className=\"divider\">{\"V\"}</div>;\n  } else if (isPrediction === false && matchStatus === \"complete\") {\n    return (\n      <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n    );\n  } else if (isPrediction === true && matchStatus === \"complete\") {\n    let outcome;\n    let prediction;\n\n    switch (true) {\n      case fixture.fixture.homeGoals > fixture.fixture.awayGoals:\n        outcome = 0;\n        fixture.fixture.winner=fixture.fixture.homeTeam\n        break;\n      case fixture.fixture.homeGoals === fixture.fixture.awayGoals:\n        outcome = 1;\n        fixture.fixture.winner=\"draw\"\n        break;\n      case fixture.fixture.homeGoals < fixture.fixture.awayGoals:\n        outcome = 2;\n        fixture.fixture.winner=fixture.fixture.awayTeam\n        break;\n      default:\n        break;\n    }\n\n    switch (true) {\n      case fixture.fixture.goalsA > fixture.fixture.goalsB:\n        prediction = 0;\n        break;\n      case fixture.fixture.goalsA === fixture.fixture.goalsB:\n        prediction = 1;\n        break;\n      case fixture.fixture.goalsA < fixture.fixture.goalsB:\n        prediction = 2;\n        break;\n      default:\n        break;\n    }\n\n    if (outcome === prediction) {\n      switch (true) {\n        case outcome === 0:\n          fixture.fixture.profit = (fixture.fixture.homeOdds -1)\n          break;\n        case outcome === 1:\n          fixture.fixture.profit = (fixture.fixture.drawOdds -1)\n          break;\n        case outcome === 2:\n          fixture.fixture.profit = (fixture.fixture.awayOdds -1)\n          break;\n        default:\n          break;\n      }\n\n\n      return (\n        <Fragment>\n          <div className=\"CorrectResult\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div className=\"score\" key={fixture.fixture.homeTeam}>{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    } else if (outcome !== prediction) {\n      fixture.fixture.profit = -1\n\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div className=\"score\" key={fixture.fixture.awayTeam}>{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    }\n  } else {\n    return (\n      <div className=\"score\" key={fixture.fixture.id}>{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n    );\n  }\n}\n\nconst SingleFixture = ({ fixture }) => (\n  <div>\n    <li\n      className=\"individualFixture\"\n      key={fixture.id}\n      onClick={() => createStatsDiv(fixture)}\n    >\n      <div\n        className=\"homeForm\"\n        style={{\n          backgroundColor: fixture.homeFormColour,\n        }}\n      >\n        {fixture.homePpg}\n      </div>\n      <div className=\"homeTeam\">{fixture.homeTeam}</div>\n      <GetDivider\n        result={resultValue}\n        status={fixture.status}\n        fixture={fixture}\n      />\n      {/* <div className=\"divider\">{\"V\"}</div> */}\n      <div className=\"awayTeam\">{fixture.awayTeam}</div>\n      <div\n        className=\"awayForm\"\n        style={{\n          backgroundColor: fixture.awayFormColour,\n        }}\n      >\n        {fixture.awayPpg}\n      </div>\n      <CreateBadge\n        image={fixture.homeBadge}\n        ClassName=\"HomeBadge\"\n        alt=\"Home team badge\"\n        flexShrink={5}\n      />\n      <CreateBadge\n        image={fixture.awayBadge}\n        ClassName=\"AwayBadge\"\n        alt=\"Away team badge\"\n      />\n    </li>\n    <div>\n      <div id={\"stats\" + fixture.homeTeam}></div>\n      <Fragment>\n        <div id={\"BTTSPotential\" + fixture.id}></div>\n        <div className=\"StatsContainer\">\n          <div className=\"HomeStats\" id={\"home\" + fixture.homeTeam}></div>\n          <div className=\"AwayStats\" id={\"away\" + fixture.awayTeam}></div>\n        </div>\n      </Fragment>\n    </div>\n  </div>\n);\n\nlet newText = text.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nconst List = ({ fixtures }) => (\n  <div>\n    <Fragment>\n      <Collapsable buttonText={\"How do I use this?\"} text={newText} />\n    </Fragment>\n    <ul>\n      {fixtures.map((fixture, i) => (\n        <SingleFixture fixture={fixture} />\n      ))}\n    </ul>\n  </div>\n);\n\nexport function Fixture(props) {\n  resultValue = props.result;\n  return <List fixtures={props.fixtures} result={resultValue} />;\n}\n","import ReactDOM from \"react-dom\";\nimport Stats from \"../components/createStatsDiv\";\nimport Div from \"../components/Div\";\nimport { selectedOption } from \"../components/radio\";\nimport { allForm } from \"../logic/getFixtures\";\n\nexport async function createStatsDiv(game) {\n  let radioSelected = parseInt(selectedOption);\n\n  let index;\n  let divider;\n  if (radioSelected === 5) {\n    index = 0;\n    divider = 5;\n  } else if (radioSelected === 6) {\n    index = 1;\n    divider = 6;\n  } else if (radioSelected === 10) {\n    index = 2;\n    divider = 10;\n  }\n\n  let gameStats = allForm.find((match) => match.id === game.id)\n\n\n  let homeTeam = gameStats.home.teamName;\n  let awayTeam = gameStats.away.teamName;\n\n\n  let time = game.time;\n\n  const formDataMatch = [];\n\n  formDataMatch.push({\n    btts: game.btts_potential,\n  });\n\n  const formDataHome = [];\n\n  formDataHome.push({\n    name: game.homeTeam,\n    Last5: gameStats.home[index].LastFiveForm,\n    AverageGoals: (gameStats.home[index].ScoredOverall / divider).toFixed(2),\n    AverageConceeded: (gameStats.home[index].ConcededOverall / divider).toFixed(\n      2\n    ),\n    AverageXG: gameStats.home[index].XG,\n    AveragePossession: gameStats.home[index].AveragePossession,\n    AverageShotsOnTarget: gameStats.home[index].AverageShotsOnTarget,\n    AverageDangerousAttacks: gameStats.home[index].AverageDangerousAttacks,\n    homeOrAway: \"Home\",\n  });\n\n  const formDataAway = [];\n\n  formDataAway.push({\n    name: game.awayTeam,\n    Last5: gameStats.away[index].LastFiveForm,\n    AverageGoals: (gameStats.away[index].ScoredOverall / divider).toFixed(2),\n    AverageConceeded: (gameStats.away[index].ConcededOverall / divider).toFixed(\n      2\n    ),\n    AverageXG: gameStats.away[index].XG,\n    AveragePossession: gameStats.away[index].AveragePossession,\n    AverageShotsOnTarget: gameStats.away[index].AverageShotsOnTarget,\n    AverageDangerousAttacks: gameStats.away[index].AverageDangerousAttacks,\n    homeOrAway: \"Away\",\n  });\n\n  ReactDOM.render(\n    <Div className=\"MatchTime\" text={\"Kick off: \" + time}></Div>,\n    document.getElementById(\"stats\" + homeTeam)\n  );\n\n  ReactDOM.render(\n    <Div\n      className=\"BTTSPotential\"\n      text={\"BTTS Potential: \" + game.btts_potential + \"%\"}\n    ></Div>,\n    document.getElementById(\"BTTSPotential\" + game.id)\n  );\n\n  ReactDOM.render(\n    <Stats\n      key={formDataHome[0].name}\n      className={formDataHome[0].homeOrAway}\n      name={formDataHome[0].name}\n      last5 = {formDataHome[0].Last5}\n      goals={formDataHome[0].AverageGoals}\n      conceeded={formDataHome[0].AverageConceeded}\n      XG={formDataHome[0].AverageXG}\n      possession={formDataHome[0].AveragePossession}\n      sot={formDataHome[0].AverageShotsOnTarget}\n      dangerousAttacks={formDataHome[0].AverageDangerousAttacks}\n    />,\n    document.getElementById(\"home\" + homeTeam)\n  );\n\n  ReactDOM.render(\n    <Stats\n      key={formDataAway[0].name}\n      className={formDataAway[0].homeOrAway}\n      name={formDataAway[0].name}\n      last5 = {formDataAway[0].Last5}\n      goals={formDataAway[0].AverageGoals}\n      conceeded={formDataAway[0].AverageConceeded}\n      XG={formDataAway[0].AverageXG}\n      possession={formDataAway[0].AveragePossession}\n      sot={formDataAway[0].AverageShotsOnTarget}\n      dangerousAttacks={formDataAway[0].AverageDangerousAttacks}\n    />,\n    document.getElementById(\"away\" + awayTeam)\n  );\n}\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { matches, diff } from \"./getFixtures\";\nimport { Fixture } from \"../components/Fixture\";\nimport { selectedOption } from \"../components/radio\";\nimport Div from \"../components/Div\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { allForm } from \"../logic/getFixtures\";\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nvar requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\",\n};\n\nlet finalHomeGoals;\nlet finalAwayGoals;\nlet totalGoals = 0;\nlet numberOfGames = 0;\nlet averageGoals = totalGoals / numberOfGames;\n\n//Calculates scores based on prior XG figures, weighted by odds\nexport async function calculateScore(match, index, divider, id, allLeagueData) {\n  let homeRaw;\n  let awayRaw;\n\n  let teams;\n  let calculate = true;\n\n  let gameTotalWeighting;\n\n  switch (true) {\n    case divider === 5:\n      gameTotalWeighting = 5;\n      break;\n    case divider === 6:\n      gameTotalWeighting = 5;\n      break;\n    case divider === 10:\n      gameTotalWeighting = 5;\n      break;\n    default:\n      break;\n  }\n\n  if (allForm.find((game) => game.id === id)) {\n    teams = [\n      allForm.find((game) => game.id === id).home,\n      allForm.find((game) => game.id === id).away,\n    ];\n  } else {\n    calculate = false;\n  }\n\n  if (calculate) {\n    for (let i = 0; i < teams.length; i++) {\n\n      teams[i][index].generalOffensiveRating = ((teams[i][index].ScoredOverall / divider) + (teams[i][index].XG)) / 2\n      teams[i][index].homeOffensiveRating = ((teams[i][index].ScoredHome / teams[i][index].PlayedHome) + (teams[i][index].XGHome)) / 2\n      teams[i][index].awayOffensiveRating = ((teams[i][index].ScoredAway / teams[i][index].PlayedAway) + (teams[i][index].XGAway)) / 2\n\n      teams[i][index].generalDefensiveRating = ((teams[i][index].ConcededOverall / divider) + (teams[i][index].XGAgainstAvg)) / 2\n      teams[i][index].homeDefensiveRating = ((teams[i][index].ConcededHome / teams[i][index].PlayedHome) + (teams[i][index].XGAgainstHome)) / 2\n      teams[i][index].awayDefensiveRating = ((teams[i][index].ConcededAway / teams[i][index].PlayedAway) + (teams[i][index].XGAgainstAway)) / 2\n\n      if (parseFloat(teams[i][2].ScoredOverall) > 0) {\n        teams[i][index].finishingScore = parseFloat(\n          (\n            teams[i][2].XG /\n            (teams[i][2].ScoredOverall / 10)\n          ).toFixed(2) - 1\n        );\n      } else {\n        teams[i][index].finishingScore = 0.0;\n      }\n\n      if (teams[i][2].ConcededOverall > 0) {\n        teams[i][index].goalieRating = parseFloat(\n          (\n            teams[i][2].XGAgainstAvg /\n            (teams[i][2].ConcededOverall / 10)\n          ).toFixed(2) - 1\n        );\n      } else {\n        teams[i][index].goalieRating = 0.0;\n      }\n\n      teams[i][index].defenceScore = parseInt(\n        teams[i][index].CleanSheetPercentage\n      );\n\n      let defenceScore;\n      defenceScore = teams[i][index].defenceScore;\n\n      teams[i][index].scoredAverage = teams[i][index].ScoredOverall / divider;\n      teams[i][index].concededAverage =\n        teams[i][index].ConcededOverall / divider;\n\n      switch (true) {\n        case defenceScore === 0:\n          teams[i][index].defenceRating = 2;\n          break;\n        case defenceScore > 0 && defenceScore < 20:\n          teams[i][index].defenceRating = 1.8;\n          break;\n        case defenceScore >= 20 && defenceScore < 30:\n          teams[i][index].defenceRating = 1.5;\n          break;\n          case defenceScore >= 30 && defenceScore < 40:\n            teams[i][index].defenceRating = 1.1;\n            break;\n        case defenceScore >= 40 && defenceScore < 50:\n          teams[i][index].defenceRating = 0.8;\n          break;\n        case defenceScore >= 50 && defenceScore < 60:\n          teams[i][index].defenceRating = 0.6;\n          break;\n        case defenceScore >= 60 && defenceScore < 70:\n          teams[i][index].defenceRating = 0.5;\n          break;\n        case defenceScore >= 70 && defenceScore < 80:\n          teams[i][index].defenceRating = 0.4;\n          break;\n        case defenceScore >= 80:\n          teams[i][index].defenceRating = 0.2;\n          break;\n        default:\n          break;\n      }\n\n      teams[i][index].finalFinishingScore = parseFloat(\n        teams[i][index].finishingScore / gameTotalWeighting + 1\n      );\n\n      teams[i][index].XGConcededAdjustment = parseFloat(\n        teams[i][index].goalieRating / gameTotalWeighting + 1\n      );\n\n      teams[i][index].forecastedXG = parseFloat(teams[i][index].scoredAverage);\n\n      teams[i][index].forecastedXGConceded = parseFloat(\n        teams[i][index].concededAverage\n      );\n\n      teams[0][index].goalsBasedOnAverages = Math.round(\n        parseFloat(\n          (teams[0][index].forecastedXG +\n            teams[1][index].forecastedXGConceded) /\n            2\n        )\n      );\n\n      teams[1][index].goalsBasedOnAverages = Math.round(\n        parseFloat(\n          (teams[1][index].forecastedXG +\n            teams[0][index].forecastedXGConceded) /\n            2\n        )\n      );\n    }\n\n    if (match.homeOdds === 0 && match.awayOdds === 0) {\n      homeRaw = 0.0;\n      awayRaw = 0.0;\n    } else {\n      homeRaw = (1 / match.homeOdds).toFixed(2);\n      awayRaw = (1 / match.awayOdds).toFixed(2);\n    }\n\n    let formHome = teams[0][index];\n    let formAway = teams[1][index];\n\n    let oddsWeightingHome;\n    let oddsWeightingAway;\n    let homeWeighting;\n    let awayWeighting;\n\n    if (homeRaw > 0) {\n      oddsWeightingHome = homeRaw - awayRaw;\n      oddsWeightingAway = awayRaw - homeRaw;\n\n      let weighting = (await diff(oddsWeightingHome, oddsWeightingAway)) * 1;\n      let weightingSplitHome;\n      let weightingSplitAway;\n\n      if (weighting >= 0) {\n        if (oddsWeightingHome > oddsWeightingAway) {\n          weightingSplitHome = Math.abs(weighting) / 2;\n          weightingSplitAway = -Math.abs(weighting) / 2;\n        } else {\n          weightingSplitHome = -Math.abs(weighting) / 2;\n          weightingSplitAway = Math.abs(weighting) / 2;\n        }\n\n        homeWeighting = weightingSplitHome;\n        awayWeighting = weightingSplitAway;\n      } else {\n        awayWeighting = 0;\n        homeWeighting = 0;\n      }\n    } else {\n      //if no odds are returned set them to a 0 default\n      homeWeighting = 0;\n      awayWeighting = 0;\n    }\n\n    let homeCalculation;\n    let awayCalculation;\n\n    homeCalculation = parseFloat(homeWeighting);\n    awayCalculation = parseFloat(awayWeighting);\n\n\n    let averageLeageGoals = allLeagueData.find(\n      ({ competitionId }) => competitionId === match.competition_id\n    ).averageGoals;\n\n    let leagueName = allLeagueData.find(\n      ({ competitionId }) => competitionId === match.competition_id\n    ).name;\n\n    let homeAttackAdvantagePercentage = allLeagueData.find(\n      ({ competitionId }) => competitionId === match.competition_id\n    ).homeAttackAdvantagePercentage;\n\n    let homeDefenceAdvantagePercentage = allLeagueData.find(\n      ({ competitionId }) => competitionId === match.competition_id\n    ).homeDefenceAdvantagePercentage;\n\n    const homeGoalWeighting = homeAttackAdvantagePercentage / 100;\n    const HomeDefenceWeighting = homeDefenceAdvantagePercentage / 100;\n\n    const homeGoalsUnweighted = parseFloat(\n      (formHome.XG + formHome.scoredAverage) / 2\n    );\n\n    const awayGoalsUnweighted = parseFloat(\n      (formAway.XG + formAway.scoredAverage) / 2\n    );\n\n    const homeGoalsWithOddsWeighting = parseFloat(\n      homeGoalsUnweighted + homeCalculation\n    );\n\n    const awayGoalsWithOddsWeighting = parseFloat(\n      awayGoalsUnweighted + awayCalculation\n    );\n\n    const homeGoalsWithAwayDefenceWeighting = parseFloat(\n      homeGoalsWithOddsWeighting * formAway.defenceRating\n    );\n\n    const awayGoalsWithHomeDefenceWeighting = parseFloat(\n      awayGoalsWithOddsWeighting * formHome.defenceRating\n    );\n\n    let homeGoalswithHomeWeighting = parseFloat(\n      homeGoalsWithAwayDefenceWeighting * (1 + homeGoalWeighting)\n    );\n\n    let awayGoalswithAwayWeighting = parseFloat(\n      awayGoalsWithHomeDefenceWeighting * (1 - HomeDefenceWeighting)\n    );\n\n    let goalTotal = parseFloat(\n      homeGoalswithHomeWeighting + awayGoalswithAwayWeighting\n    );\n\n\n    if (homeGoalswithHomeWeighting < 0) {\n      homeGoalswithHomeWeighting = 0;\n    }\n\n    if (awayGoalswithAwayWeighting < 0) {\n      awayGoalswithAwayWeighting = 0;\n    }\n\n    let finalHomeGoals;\n    let finalAwayGoals;\n\n\n\n    console.log(match.game);\n    console.log(formHome)\n    console.log(formAway)\n\n    // console.log(\"formHome.forecastedXG\");\n    // console.log(formHome.forecastedXG);\n\n    // console.log(\"formAway.forecastedXG\");\n    // console.log(formAway.forecastedXG);\n\n    // console.log(\"formHome.ConcededOverall\")\n    // console.log(formHome.ConcededOverall)\n    // console.log(\"formAway.ConcededOverall\")\n    // console.log(formAway.ConcededOverall)\n\n    // console.log(\"formHome.XGAgainstAvg\")\n    // console.log(formHome.XGAgainstAvg)\n    // console.log(\"formAway.XGAgainstAvg\")\n    // console.log(formAway.XGAgainstAvg)\n\n    // console.log(\"formHome.forecastedXGConceded\")\n    // console.log(formHome.forecastedXGConceded)\n    // console.log(\"formAway.forecastedXGConceded\")\n    // console.log(formAway.forecastedXGConceded)\n\n    // console.log(\"Finishing score experiment\");\n    // console.log(match.game);\n    // console.log(formHome.finalFinishingScore);\n    // console.log(formAway.finalFinishingScore);\n\n    // console.log(\"XG Conceded experiment\");\n    // console.log(match.game);\n    // console.log(formHome.XGConcededAdjustment);\n    // console.log(formAway.XGConcededAdjustment);\n\n    // console.log(\"Scores before adjusting\");\n    // console.log(\"home\");\n    // console.log(\n    //   Math.round(\n    //     parseFloat(homeGoals * 5 + formHome.goalsBasedOnAverages * 5) / 10\n    //   )\n    // );\n    // console.log(\"away\");\n    // console.log(\n    //   Math.round(\n    //     parseFloat(awayGoalswithAwayWeighting* 5 + formAway.goalsBasedOnAverages * 5) / 10\n    //   )\n    // );\n\n    async function roundCustom(num) {\n      let wholeNumber = Math.floor(num);\n      let remainder = num - wholeNumber;\n      if (remainder <= 0.84) {\n        return Math.floor(num);\n      } else if (remainder > 0.84) {\n        return Math.ceil(num);\n      }\n    }\n\n    const XGForAdjustedHomeGoals =\n      homeGoalswithHomeWeighting * formHome.finalFinishingScore;\n    const XGForAdjustedAwayGoals =\n      awayGoalswithAwayWeighting * formAway.finalFinishingScore;\n    const XGAgainstAdjustedHomeGoals =\n      homeGoalswithHomeWeighting * formAway.XGConcededAdjustment;\n    const XGAgainstAdjustedAwayGoals =\n      awayGoalswithAwayWeighting * formHome.XGConcededAdjustment;\n\n    const XGAdjustedHomeGoals =\n      (XGForAdjustedHomeGoals + XGAgainstAdjustedHomeGoals) / 2;\n    const XGAdjustedAwayGoals =\n      (XGForAdjustedAwayGoals + XGAgainstAdjustedAwayGoals) / 2;\n\n\n\n      const generalformHomeGoals = ((formHome.generalOffensiveRating + homeCalculation) * formHome.finalFinishingScore) * formAway.defenceRating \n      const generalformAwayGoals = ((formAway.generalOffensiveRating + awayCalculation) * formAway.finalFinishingScore) * formHome.defenceRating \n  \n      const homeformHomeGoals = ((((formHome.homeOffensiveRating + homeCalculation) * formHome.finalFinishingScore) * formAway.defenceRating) * formAway.XGConcededAdjustment) * (1 + homeGoalWeighting) \n      const awayformAwayGoals = ((((formAway.awayOffensiveRating + awayCalculation) * formAway.finalFinishingScore) * formHome.defenceRating) * formHome.XGConcededAdjustment) * (1 - HomeDefenceWeighting)\n      console.log(`Home goals - ${generalformHomeGoals}`)\n      console.log(`Away goals - ${generalformAwayGoals}`)\n  \n      console.log(`Home goals based on home form - ${homeformHomeGoals}`)\n      console.log(`Away goals based on away form - ${awayformAwayGoals}`)\n\n\n    finalHomeGoals = await roundCustom(\n      parseFloat(\n        // XGAdjustedHomeGoals\n        // formHome.goalsBasedOnAverages\n        (XGAdjustedHomeGoals * 2 + formHome.goalsBasedOnAverages * 10 + homeformHomeGoals * 7 + generalformHomeGoals * 7) / 26\n      )\n    );\n\n    finalAwayGoals = await roundCustom(\n      parseFloat(\n        // XGAdjustedAwayGoals\n        // formAway.goalsBasedOnAverages\n        (XGAdjustedAwayGoals * 2 + formAway.goalsBasedOnAverages * 10 + awayformAwayGoals * 7 + generalformAwayGoals * 7) / 26\n      )\n    );\n\n    let total = parseInt(finalHomeGoals + finalAwayGoals);\n    totalGoals = totalGoals + total;\n\n    numberOfGames = numberOfGames + 1;\n\n    if(finalHomeGoals < 0){\n      finalHomeGoals = 0\n    }\n\n    if(finalAwayGoals < 0){\n      finalAwayGoals = 0\n    }\n    // console.log(\"DIVIDER\");\n    // console.log(divider);\n\n    // console.log(match.homeTeam);\n    // console.log(\"homeOdds\");\n    // console.log(match.homeOdds);\n\n    // console.log(\"homeGoals\");\n    // console.log(homeGoals);\n    // console.log(\"seasonScoredNum_overall\");\n    // console.log(formHome.ScoredOverall);\n    // console.log(\"forecastedXG\");\n    // console.log(formHome.forecastedXG);\n    // console.log(\"seasonConcededNum_overall\");\n    // console.log(formHome.ConcededOverall);\n    // console.log(\"homeCalculation\");\n    // console.log(homeCalculation);\n    // console.log(\"defenceHome\");\n    // console.log(\"homeWeighting\");\n    // console.log(homeWeighting);\n    // console.log(\"finalFinishingScoreHome\");\n    // console.log(formHome.finalFinishingScore);\n    // console.log(\"XG conceded adjustment\");\n    // console.log(formHome.XGConcededAdjustment);\n\n    // console.log(match.awayTeam);\n\n    // console.log(\"awayOdds\");\n    // console.log(match.awayOdds);\n    // console.log(\"awayGoals\");\n    // console.log(awayGoals);\n    // console.log(\"seasonScoredNum_overall\");\n    // console.log(formAway.ScoredOverall);\n    // console.log(\"forecastedXG\");\n    // console.log(formAway.forecastedXG);\n    // console.log(\"seasonConcededNum_overall\");\n    // console.log(formAway.ConcededOverall);\n    // console.log(\"awayCalculation\");\n    // console.log(awayCalculation);\n\n    // console.log(\"awayWeighting\");\n    // console.log(awayWeighting);\n    // console.log(\"finalFinishingScoreAway\");\n    // console.log(formAway.finalFinishingScore);\n    // console.log(\"XG conceded adjustment\");\n    // console.log(formAway.XGConcededAdjustment);\n\n    // console.log(\"FINAL HOME GOALS\");\n    // console.log(finalHomeGoals);\n\n    // console.log(\"FINAL AWAY GOALS\");\n    // console.log(finalAwayGoals);\n\n    // match.homePrediction = finalHomeGoals;\n    // match.awayPrediction = finalAwayGoals;\n    if (match.status === \"suspended\") {\n      finalHomeGoals = \"P\";\n      finalAwayGoals = \"P\";\n    }\n    return [finalHomeGoals, finalAwayGoals];\n  } else {\n    finalHomeGoals = \"-\";\n    finalAwayGoals = \"-\";\n  }\n\n  return [finalHomeGoals, finalAwayGoals];\n}\n\nfunction getSuccessMeasure(fixtures) {\n  let sum = -1;\n  let roundedFigure = -1;\n  let gameCount = 0;\n  for (let i = 0; i < fixtures.length; i++) {\n    if (fixtures[i].profit) {\n      const profit = parseFloat(fixtures[i].profit);\n      sum = parseFloat(sum + profit);\n      roundedFigure = sum.toFixed(2);\n      gameCount = gameCount + 1;\n    } else {\n      sum = parseFloat(sum + 0);\n      roundedFigure = sum.toFixed(2);\n    }\n  }\n\n  if (gameCount > 0) {\n    ReactDOM.render(\n      <Fragment>\n        <Div\n          className={\"SuccessMeasure\"}\n          text={`accumulated profit/loss if £1 was staked on each of the  ${gameCount} games: £${roundedFigure}`}\n        />\n      </Fragment>,\n      document.getElementById(\"successMeasure\")\n    );\n  } else {\n    return;\n  }\n}\n\nvar tips = [];\nvar longShotTips = [];\nvar accumulatedOdds = 1;\nlet predictions = [];\n\nexport async function getScorePrediction(day, allLeagueData) {\n  let radioSelected = parseInt(selectedOption);\n  tips = [];\n  longShotTips = [];\n  accumulatedOdds = 1;\n\n  let index;\n  let divider;\n  if (radioSelected === 5) {\n    index = 0;\n    divider = 5;\n  } else if (radioSelected === 6) {\n    index = 1;\n    divider = 6;\n  } else if (radioSelected === 10) {\n    index = 2;\n    divider = 10;\n  }\n\n  let makePostRequest = false;\n\n  await Promise.all(\n    matches.map(async (match) => {\n      // if there are no stored predictions, calculate them based on live data\n\n      if (match) {\n        switch (true) {\n          case match.status === \"!suspended\":\n            [match.goalsA, match.goalsB] = await calculateScore(\n              match,\n              index,\n              divider,\n              match.id,\n              allLeagueData\n            );\n            makePostRequest = true;\n\n            break;\n          case match.status === \"suspended\" || match.status === \"cancelled\":\n            match.goalsA = \"P\";\n            match.goalsB = \"P\";\n            break;\n          default:\n            [match.goalsA, match.goalsB] = await calculateScore(\n              match,\n              index,\n              divider,\n              match.id,\n              allLeagueData\n            );\n            makePostRequest = true;\n            break;\n        }\n      } else {\n        [match.goalsA, match.goalsB] = await calculateScore(\n          match,\n          index,\n          divider,\n          match.id,\n          allLeagueData\n        );\n      }\n\n      match.predictionOutcome = \"unknown\";\n      let predictionObject;\n      let longShotPredictionObject;\n\n      if (match.goalsA - 1 > match.goalsB && match.homeOdds !== 0) {\n        if (match.status === \"complete\" && match.homeTeam === match.winner) {\n          match.predictionOutcome = \"Won\";\n        } else if (\n          match.status === \"complete\" &&\n          match.homeTeam !== match.winner\n        ) {\n          match.predictionOutcome = \"Lost\";\n        }\n        accumulatedOdds =\n          parseFloat(accumulatedOdds) * parseFloat(match.homeOdds);\n        predictionObject = {\n          team: match.homeTeam,\n          odds: match.homeOdds,\n          outcome: match.predictionOutcome,\n        };\n        tips.push(predictionObject);\n      } else if (match.goalsB - 1 > match.goalsA && match.awayOdds !== 0) {\n        if (match.status === \"complete\" && match.awayTeam === match.winner) {\n          match.predictionOutcome = \"Won\";\n        } else if (\n          match.status === \"complete\" &&\n          match.awayTeam !== match.winner\n        ) {\n          match.predictionOutcome = \"Lost\";\n        }\n        accumulatedOdds =\n          parseFloat(accumulatedOdds) * parseFloat(match.awayOdds);\n        predictionObject = {\n          team: match.awayTeam,\n          odds: match.awayOdds,\n          outcome: match.predictionOutcome,\n        };\n        tips.push(predictionObject);\n      }\n\n      if (match.goalsA > match.goalsB && match.homeOdds >= 2.5) {\n        if (match.status === \"complete\" && match.homeTeam === match.winner) {\n          match.predictionOutcome = \"Won\";\n        } else if (\n          match.status === \"complete\" &&\n          match.homeTeam !== match.winner\n        ) {\n          match.predictionOutcome = \"Lost\";\n        }\n        longShotPredictionObject = {\n          team: match.homeTeam,\n          odds: match.homeOdds,\n          outcome: match.predictionOutcome,\n        };\n        longShotTips.push(longShotPredictionObject);\n      } else if (match.goalsA < match.goalsB && match.awayOdds >= 2.5) {\n        if (match.status === \"complete\" && match.awayTeam === match.winner) {\n          match.predictionOutcome = \"Won\";\n        } else if (\n          match.status === \"complete\" &&\n          match.awayTeam !== match.winner\n        ) {\n          match.predictionOutcome = \"Lost\";\n        }\n        longShotPredictionObject = {\n          team: match.awayTeam,\n          odds: match.awayOdds,\n          outcome: match.predictionOutcome,\n        };\n        longShotTips.push(longShotPredictionObject);\n      }\n\n      ReactDOM.render(\n        <Fixture\n          fixtures={matches}\n          result={true}\n          className={\"individualFixture\"}\n        />,\n        document.getElementById(\"FixtureContainer\")\n      );\n\n      if (tips.length > 0) {\n        ReactDOM.render(\n          <div>\n            <Fragment>\n              <Collapsable\n                buttonText={\"Predictions of the day\"}\n                text={\n                  <ul className=\"BestPredictions\">\n                    <lh>To win</lh>\n                    {tips.map((tip) => (\n                      <li className={tip.outcome} key={tip.team}>\n                        {tip.team} odds: {tip.odds}\n                      </li>\n                    ))}\n                    <div className=\"AccumulatedOdds\">{`Accumulator odds: ${accumulatedOdds.toFixed(\n                      2\n                    )} / 1`}</div>\n                  </ul>\n                }\n              />\n            </Fragment>\n          </div>,\n          document.getElementById(\"bestPredictions\")\n        );\n      }\n\n      if (longShotTips.length > 0) {\n        ReactDOM.render(\n          <div>\n            <Fragment>\n              <Collapsable\n                buttonText={\"Longshot predictions\"}\n                text={\n                  <ul className=\"LongshotPredictions\">\n                    <lh>To win</lh>\n                    {longShotTips.map((tip) => (\n                      <li className={tip.outcome} key={tip.team}>\n                        {tip.team} odds: {tip.odds}\n                      </li>\n                    ))}\n                  </ul>\n                }\n              />\n            </Fragment>\n          </div>,\n          document.getElementById(\"longShots\")\n        );\n      }\n      predictions.push(match);\n    })\n  );\n\n  await getSuccessMeasure(matches);\n}\n\n// async function postFixedPredictions(predictions, divider, day) {\n//   await fetch(\n//     `${process.env.REACT_APP_EXPRESS_SERVER}postPredictions${divider}${day}`, {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ predictions }),\n//     });\n// }\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { allLeagueData, orderedLeagues, proxyurl } from \"../App\";\nimport { getForm, applyColour } from \"./getForm\";\nimport { Fixture } from \"../components/Fixture\";\nimport { Button } from \"../components/Button\";\nimport { getScorePrediction } from \"../logic/getScorePredictions\";\n\nrequire(\"dotenv\").config();\n\nconsole.log(process.env.REACT_APP_EXPRESS_SERVER);\n\nvar fixtureResponse;\nvar fixtureArray;\nexport const matches = [];\nexport const resultedMatches = [];\nvar leagueGames = [];\nvar lastFiveFormHome;\nvar lastFiveFormAway;\n\nexport const [day, month, year] = new Date()\n  .toLocaleDateString(\"en-US\")\n  .split(\"/\");\nlet tomorrowsDate = new Date();\ntomorrowsDate.setDate(new Date().getDate() + 1);\nlet [\n  tomorrowDay,\n  tomorrowMonth,\n  tomorrowYear,\n] = tomorrowsDate.toLocaleDateString(\"en-US\").split(\"/\");\n\nlet yesterdaysDate = new Date();\nyesterdaysDate.setDate(new Date().getDate() - 1);\nlet [\n  yesterdayDay,\n  yesterdayMonth,\n  yesterdayYear,\n] = yesterdaysDate.toLocaleDateString(\"en-US\").split(\"/\");\n\nexport const yesterday = `https://api.footystats.org/todays-matches?key=${process.env.REACT_APP_API_KEY}&date=${yesterdayYear}-2-27`;\nexport const today = `https://api.footystats.org/todays-matches?key=${process.env.REACT_APP_API_KEY}&date=${year}-${day}-${month}`;\nexport const tomorrow = `https://api.footystats.org/todays-matches?key=${process.env.REACT_APP_API_KEY}&date=${tomorrowYear}-${tomorrowDay}-${tomorrowMonth}`;\n\nexport function getRadioState(state) {\n  let radioState = state;\n  return radioState;\n}\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nexport let allForm = [];\n\nasync function createFixture(match, result) {\n  match.game = match.homeTeam + \" v \" + match.awayTeam;\n\n  ReactDOM.render(\n    <Fixture\n      fixtures={matches}\n      result={result}\n      className={\"individualFixture\"}\n    />,\n    document.getElementById(\"FixtureContainer\")\n  );\n}\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nvar requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\",\n};\n\nexport async function generateFixtures(day, radioState) {\n  let radioValue = parseInt(radioState);\n\n  let index;\n  if (radioValue === 5) {\n    index = 0;\n  } else if (radioValue === 6) {\n    index = 1;\n  } else if (radioValue === 10) {\n    index = 2;\n  }\n\n  let url;\n  switch (day) {\n    case \"yesterdaysFixtures\":\n      url = yesterday;\n      break;\n    case \"todaysFixtures\":\n      url = today;\n      break;\n    case \"tomorrowsFixtures\":\n      url = tomorrow;\n      break;\n    default:\n      break;\n  }\n\n  fixtureResponse = await fetch(proxyurl + url);\n\n  await fixtureResponse.json().then((fixtures) => {\n    fixtureArray = Array.from(fixtures.data);\n  });\n\n  ReactDOM.render(\n    <Button\n      text={\"Get Predictions\"}\n      onClickEvent={() => getScorePrediction(day, allLeagueData)}\n    />,\n    document.getElementById(\"Buttons\")\n  );\n  let form;\n  let formArray;\n  var isFormStored;\n  var isStoredLocally;\n  let storedForm = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}form${day}`,\n    {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n      },\n    }\n  );\n  if (storedForm.status === 201) {\n    await storedForm.json().then((form) => {\n      formArray = Array.from(form.allForm);\n      isFormStored = true;\n      isStoredLocally = false;\n      allForm = formArray;\n    });\n  } else if (storedForm.status === 200) {\n    await storedForm.json().then((form) => {\n      formArray = Array.from(form.allForm);\n      isFormStored = true;\n      isStoredLocally = false;\n      allForm = formArray;\n    });\n  } else {\n    console.log(\"Stored form not fetched\");\n    isFormStored = false;\n    isStoredLocally = false;\n  }\n\n  for (let i = 0; i < orderedLeagues.length; i++) {\n    leagueGames = fixtureArray.filter(\n      (game) => game.competition_id === orderedLeagues[i].element.id\n    );\n\n    for (const fixture of leagueGames) {\n      const unixTimestamp = fixture.date_unix;\n      const milliseconds = unixTimestamp * 1000;\n      const dateObject = new Date(milliseconds);\n\n      let match = {};\n      match.id = fixture.id;\n      match.competition_id = fixture.competition_id;\n      match.time = dateObject.toLocaleString(\"en-US\", { hour: \"numeric\" });\n      match.homeTeam = fixture.home_name;\n      match.awayTeam = fixture.away_name;\n      match.homeOdds = fixture.odds_ft_1;\n      match.awayOdds = fixture.odds_ft_2;\n      match.drawOdds = fixture.odds_ft_x;\n      match.homeId = fixture.homeID;\n      match.awayId = fixture.awayID;\n      match.form = [];\n      match.homeTeamInfo = [];\n      match.awayTeamInfo = [];\n\n      if (!isFormStored) {\n        form = await getForm(match);\n        console.log(form);\n        console.log(\"Pusing match to form object\");\n\n        var homeExtract = form[0].data[0].stats.additional_info.replace(\n          /[\"']/g,\n          \"\"\n        );\n\n        var slug = homeExtract.split(\",53:\").pop().toUpperCase();\n        lastFiveFormHome = [...slug.substring(0, 5)];\n\n        var awayExtract = form[1].data[0].stats.additional_info.replace(\n          /[\"']/g,\n          \"\"\n        );\n\n        var slugAway = awayExtract.split(\",53:\").pop().toUpperCase();\n        lastFiveFormAway = [...slugAway.substring(0, 5)];\n\n        allForm.push({\n          id: match.id,\n          home: {\n            teamName: match.homeTeam,\n            0: {\n              XG: parseFloat(form[0].data[0].stats.xg_for_avg_overall),\n              XGHome: parseFloat(form[0].data[0].stats.xg_for_avg_home),\n              XGAway: parseFloat(form[0].data[0].stats.xg_for_avg_away),\n              ScoredOverall: parseFloat(\n                form[0].data[0].stats.seasonScoredNum_overall\n              ),\n              ScoredHome: parseFloat(\n                form[0].data[0].stats.seasonScoredNum_home\n              ),\n              ScoredAway: parseFloat(\n                form[0].data[0].stats.seasonScoredNum_away\n              ),\n              PlayedHome: parseFloat(\n               form[0].data[0].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[0].data[0].stats.seasonMatchesPlayed_away\n               ),\n              ConcededOverall: parseFloat(\n                form[0].data[0].stats.seasonConcededNum_overall\n              ),\n              ConcededHome: parseFloat(\n                form[0].data[0].stats.seasonConcededNum_home\n              ),\n              ConcededAway: parseFloat(\n                form[0].data[0].stats.seasonConcededNum_away\n              ),\n              XGAgainstAvg: parseFloat(\n                form[0].data[0].stats.xg_against_avg_overall\n              ),\n              XGAgainstHome: parseFloat(\n                form[0].data[0].stats.xg_against_avg_home\n              ),\n              XGAgainstAway: parseFloat(\n                form[0].data[0].stats.xg_against_avg_away\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[0].data[0].stats.seasonCSPercentage_overall\n              ),\n              AveragePossession: parseFloat(\n                form[0].data[0].stats.possessionAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[0].data[0].stats.shotsOnTargetAVG_overall\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[0].data[0].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[0].data[0].stats.seasonPPG_overall),\n              AttacksHome: parseFloat(form[0].data[0].stats.attacks_avg_home),\n              AttacksAway: parseFloat(form[0].data[0].stats.attacks_avg_away),\n              DangerousAttacksHome: parseFloat(\n                form[0].data[0].stats.dangerous_attacks_avg_home\n              ),\n              DangerousAttacksAway: parseFloat(\n                form[0].data[0].stats.dangerous_attacks_avg_away\n              ),\n              LastFiveForm: lastFiveFormHome,\n            },\n            1: {\n              XG: parseFloat(form[0].data[1].stats.xg_for_avg_overall),\n              XGHome: parseFloat(form[0].data[1].stats.xg_for_avg_home),\n              XGAway: parseFloat(form[0].data[1].stats.xg_for_avg_away),\n              ScoredOverall: parseFloat(\n                form[0].data[1].stats.seasonScoredNum_overall\n              ),\n              ScoredHome: parseFloat(\n                form[0].data[1].stats.seasonScoredNum_home\n              ),\n              ScoredAway: parseFloat(\n                form[0].data[1].stats.seasonScoredNum_away\n              ),\n              PlayedHome: parseFloat(\n               form[0].data[1].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[0].data[1].stats.seasonMatchesPlayed_away\n               ),\n              ConcededOverall: parseFloat(\n                form[0].data[1].stats.seasonConcededNum_overall\n              ),\n              ConcededHome: parseFloat(\n                form[0].data[1].stats.seasonConcededNum_home\n              ),\n              ConcededAway: parseFloat(\n                form[0].data[1].stats.seasonConcededNum_away\n              ),\n              XGAgainstAvg: parseFloat(\n                form[0].data[1].stats.xg_against_avg_overall\n              ),\n              XGAgainstHome: parseFloat(\n                form[0].data[1].stats.xg_against_avg_home\n              ),\n              XGAgainstAway: parseFloat(\n                form[0].data[1].stats.xg_against_avg_away\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[0].data[1].stats.seasonCSPercentage_overall\n              ),\n              AveragePossession: parseFloat(\n                form[0].data[1].stats.possessionAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[0].data[1].stats.shotsOnTargetAVG_overall\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[0].data[1].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[0].data[1].stats.seasonPPG_overall),\n              AttacksHome: parseFloat(form[0].data[1].stats.attacks_avg_home),\n              AttacksAway: parseFloat(form[0].data[1].stats.attacks_avg_away),\n              DangerousAttacksHome: parseFloat(\n                form[0].data[1].stats.dangerous_attacks_avg_home\n              ),\n              DangerousAttacksAway: parseFloat(\n                form[0].data[1].stats.dangerous_attacks_avg_away\n              ),\n              LastFiveForm: lastFiveFormHome,\n            },\n            2: {\n              XG: parseFloat(form[0].data[2].stats.xg_for_avg_overall),\n              XGHome: parseFloat(form[0].data[2].stats.xg_for_avg_home),\n              XGAway: parseFloat(form[0].data[2].stats.xg_for_avg_away),\n              ScoredOverall: parseFloat(\n                form[0].data[2].stats.seasonScoredNum_overall\n              ),\n              ScoredHome: parseFloat(\n                form[0].data[2].stats.seasonScoredNum_home\n              ),\n              ScoredAway: parseFloat(\n                form[0].data[2].stats.seasonScoredNum_away\n              ),\n              PlayedHome: parseFloat(\n               form[0].data[2].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[0].data[2].stats.seasonMatchesPlayed_away\n               ),\n              ConcededOverall: parseFloat(\n                form[0].data[2].stats.seasonConcededNum_overall\n              ),\n              ConcededHome: parseFloat(\n                form[0].data[2].stats.seasonConcededNum_home\n              ),\n              ConcededAway: parseFloat(\n                form[0].data[2].stats.seasonConcededNum_away\n              ),\n              XGAgainstAvg: parseFloat(\n                form[0].data[2].stats.xg_against_avg_overall\n              ),\n              XGAgainstHome: parseFloat(\n                form[0].data[2].stats.xg_against_avg_home\n              ),\n              XGAgainstAway: parseFloat(\n                form[0].data[2].stats.xg_against_avg_away\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[0].data[2].stats.seasonCSPercentage_overall\n              ),\n              AveragePossession: parseFloat(\n                form[0].data[2].stats.possessionAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[0].data[2].stats.shotsOnTargetAVG_overall\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[0].data[2].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[0].data[2].stats.seasonPPG_overall),\n              AttacksHome: parseFloat(form[0].data[2].stats.attacks_avg_home),\n              AttacksAway: parseFloat(form[0].data[2].stats.attacks_avg_away),\n              DangerousAttacksHome: parseFloat(\n                form[0].data[2].stats.dangerous_attacks_avg_home\n              ),\n              DangerousAttacksAway: parseFloat(\n                form[0].data[2].stats.dangerous_attacks_avg_away\n              ),\n              LastFiveForm: lastFiveFormHome,\n            },\n          },\n          away: {\n            teamName: match.awayTeam,\n            0: {\n              XG: parseFloat(form[1].data[0].stats.xg_for_avg_overall),\n              XGHome: parseFloat(form[1].data[0].stats.xg_for_avg_home),\n              XGAway: parseFloat(form[1].data[0].stats.xg_for_avg_away),\n              ScoredOverall: parseFloat(\n                form[1].data[0].stats.seasonScoredNum_overall\n              ),\n              ScoredHome: parseFloat(\n                form[1].data[0].stats.seasonScoredNum_home\n              ),\n              ScoredAway: parseFloat(\n                form[1].data[0].stats.seasonScoredNum_away\n              ),\n              PlayedHome: parseFloat(\n               form[1].data[0].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[1].data[0].stats.seasonMatchesPlayed_away\n               ),\n              ConcededOverall: parseFloat(\n                form[1].data[0].stats.seasonConcededNum_overall\n              ),\n              ConcededHome: parseFloat(\n                form[1].data[0].stats.seasonConcededNum_home\n              ),\n              ConcededAway: parseFloat(\n                form[1].data[0].stats.seasonConcededNum_away\n              ),\n              XGAgainstAvg: parseFloat(\n                form[1].data[0].stats.xg_against_avg_overall\n              ),\n              XGAgainstHome: parseFloat(\n                form[1].data[0].stats.xg_against_avg_home\n              ),\n              XGAgainstAway: parseFloat(\n                form[1].data[0].stats.xg_against_avg_away\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[1].data[0].stats.seasonCSPercentage_overall\n              ),\n              AveragePossession: parseFloat(\n                form[1].data[0].stats.possessionAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[1].data[0].stats.shotsOnTargetAVG_overall\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[1].data[0].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[1].data[0].stats.seasonPPG_overall),\n              AttacksHome: parseFloat(form[1].data[0].stats.attacks_avg_home),\n              AttacksAway: parseFloat(form[1].data[0].stats.attacks_avg_away),\n              DangerousAttacksHome: parseFloat(\n                form[1].data[0].stats.dangerous_attacks_avg_home\n              ),\n              DangerousAttacksAway: parseFloat(\n                form[1].data[0].stats.dangerous_attacks_avg_away\n              ),\n              LastFiveForm: lastFiveFormAway,\n            },\n            1: {\n              XG: parseFloat(form[1].data[1].stats.xg_for_avg_overall),\n              XGHome: parseFloat(form[1].data[1].stats.xg_for_avg_home),\n              XGAway: parseFloat(form[1].data[1].stats.xg_for_avg_away),\n              ScoredOverall: parseFloat(\n                form[1].data[1].stats.seasonScoredNum_overall\n              ),\n              ScoredHome: parseFloat(\n                form[1].data[1].stats.seasonScoredNum_home\n              ),\n              ScoredAway: parseFloat(\n                form[1].data[1].stats.seasonScoredNum_away\n              ),\n              PlayedHome: parseFloat(\n               form[1].data[1].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[1].data[1].stats.seasonMatchesPlayed_away\n               ),\n              ConcededOverall: parseFloat(\n                form[1].data[1].stats.seasonConcededNum_overall\n              ),\n              ConcededHome: parseFloat(\n                form[1].data[1].stats.seasonConcededNum_home\n              ),\n              ConcededAway: parseFloat(\n                form[1].data[1].stats.seasonConcededNum_away\n              ),\n              XGAgainstAvg: parseFloat(\n                form[1].data[1].stats.xg_against_avg_overall\n              ),\n              XGAgainstHome: parseFloat(\n                form[1].data[1].stats.xg_against_avg_home\n              ),\n              XGAgainstAway: parseFloat(\n                form[1].data[1].stats.xg_against_avg_away\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[1].data[1].stats.seasonCSPercentage_overall\n              ),\n              AveragePossession: parseFloat(\n                form[1].data[1].stats.possessionAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[1].data[1].stats.shotsOnTargetAVG_overall\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[1].data[1].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[1].data[1].stats.seasonPPG_overall),\n              AttacksHome: parseFloat(form[1].data[1].stats.attacks_avg_home),\n              AttacksAway: parseFloat(form[1].data[1].stats.attacks_avg_away),\n              DangerousAttacksHome: parseFloat(\n                form[1].data[1].stats.dangerous_attacks_avg_home\n              ),\n              DangerousAttacksAway: parseFloat(\n                form[1].data[1].stats.dangerous_attacks_avg_away\n              ),\n              LastFiveForm: lastFiveFormAway,\n            },\n            2: {\n              XG: parseFloat(form[1].data[2].stats.xg_for_avg_overall),\n              XGHome: parseFloat(form[1].data[2].stats.xg_for_avg_home),\n              XGAway: parseFloat(form[1].data[2].stats.xg_for_avg_away),\n              ScoredOverall: parseFloat(\n                form[1].data[2].stats.seasonScoredNum_overall\n              ),\n              ScoredHome: parseFloat(\n                form[1].data[2].stats.seasonScoredNum_home\n              ),\n              ScoredAway: parseFloat(\n                form[1].data[2].stats.seasonScoredNum_away\n              ),\n              PlayedHome: parseFloat(\n               form[1].data[2].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[1].data[2].stats.seasonMatchesPlayed_away\n               ),\n              ConcededOverall: parseFloat(\n                form[1].data[2].stats.seasonConcededNum_overall\n              ),\n              ConcededHome: parseFloat(\n                form[1].data[2].stats.seasonConcededNum_home\n              ),\n              ConcededAway: parseFloat(\n                form[1].data[2].stats.seasonConcededNum_away\n              ),\n              XGAgainstAvg: parseFloat(\n                form[1].data[2].stats.xg_against_avg_overall\n              ),\n              XGAgainstHome: parseFloat(\n                form[1].data[2].stats.xg_against_avg_home\n              ),\n              XGAgainstAway: parseFloat(\n                form[1].data[2].stats.xg_against_avg_away\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[1].data[2].stats.seasonCSPercentage_overall\n              ),\n              AveragePossession: parseFloat(\n                form[1].data[2].stats.possessionAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[1].data[2].stats.shotsOnTargetAVG_overall\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[1].data[2].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[1].data[2].stats.seasonPPG_overall),\n              AttacksHome: parseFloat(form[1].data[2].stats.attacks_avg_home),\n              AttacksAway: parseFloat(form[1].data[2].stats.attacks_avg_away),\n              DangerousAttacksHome: parseFloat(\n                form[1].data[2].stats.dangerous_attacks_avg_home\n              ),\n              DangerousAttacksAway: parseFloat(\n                form[1].data[2].stats.dangerous_attacks_avg_away\n              ),\n              LastFiveForm: lastFiveFormAway,\n            },\n          },\n        });\n      }\n\n      match.homeBadge = fixture.home_image;\n      match.awayBadge = fixture.away_image;\n\n      match.homePpg = fixture.home_ppg.toFixed(2);\n      match.homeFormColour = await applyColour(match.homePpg);\n\n      match.awayPpg = fixture.away_ppg.toFixed(2);\n      match.awayFormColour = await applyColour(match.awayPpg);\n\n      match.lastFiveFormHome = lastFiveFormHome;\n      match.lastFiveFormAway = lastFiveFormAway;\n\n      match.status = fixture.status;\n\n      match.btts_potential = fixture.btts_potential;\n      match.game = match.homeTeam + \" v \" + match.awayTeam;\n\n      match.homeGoals = fixture.homeGoalCount;\n      match.awayGoals = fixture.awayGoalCount;\n\n      console.log(match);\n\n      matches.push(match);\n\n      await createFixture(match, false);\n    }\n  }\n  if (!isStoredLocally) {\n    await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}allForm${day}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ allForm }),\n    });\n  }\n}\n","import React from \"react\";\n\nfunction TextBlock(props) {\n  return (\n    <div className={props.className}>\n      <div>{props.text}</div>\n    </div>\n  );\n}\n\nexport default TextBlock;\n","import React, { useState } from \"react\";\nimport { Checkbox } from \"@material-ui/core\";\nimport { orderedLeagues } from \"../App\";\n\n\nclass CheckBox extends React.Component {\n  state = { isChecked: true };\n\n  toggle = () => {\n    this.setState((prevState) => ({ isChecked: !prevState.isChecked }));\n  };\n\n  render() {\n    const items = [];\n\n    for (let i = 0; i < orderedLeagues.length; i++) {\n        const element = orderedLeagues[i];\n        console.log(element)\n        items.push(\n            <div className=\"Checkbox\">\n              <Checkbox className=\"LeagueCheckboxes\" checked={this.state.isChecked} onChange={this.toggle} />\n              <label className=\"LeagueOption\" onClick={this.toggle}>\n                {element.name}\n              </label>\n            </div>\n          );\n    }\n    return (\n    <div>{items}</div>\n    )\n}\n}\nexport default CheckBox","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./components/Header\";\nimport Radio from \"./components/radio\";\nimport { Button } from \"./components/Button\";\nimport {\n  today,\n  generateFixtures,\n  generatePriorFixtures,\n  tomorrow,\n  yesterday,\n} from \"./logic/getFixtures\";\nimport { selectedOption } from \"./components/radio\";\nimport TextBlock from \"./components/TextSection\";\nimport Collapsable from \"./components/CollapsableElement\";\nimport CheckBox from \"./components/Checkbox\";\nrequire(\"dotenv\").config();\n\nexport const proxyurl = \"https://safe-caverns-99679.herokuapp.com/\";\nexport var fixtureList = [];\nexport let allLeagueData = [];\nlet leagueObject;\n\n// var slider = document.getElementById(\"myRange\");\n\n// var output = document.getElementById(\"weight\");\n// output.innerHTML = slider.value;\n\n// slider.oninput = function () {\n//   output.innerHTML = this.value;\n//   weighting = this.value / 100;\n// };\n\n// (async function populateContent() {\n//   // spinner.showSpinner();\n\n//   // spinner.hideSpinner();\n// })();\n\nexport const availableLeagues = [];\nexport var orderedLeagues = [];\n\n(async function getLeagueList() {\n  let leagueList = await fetch(\n    proxyurl +\n      `https://api.footystats.org/league-list?key=${process.env.REACT_APP_API_KEY}&chosen_leagues_only=true`\n  );\n  let leagueArray;\n  await leagueList.json().then((leagues) => {\n    leagueArray = Array.from(leagues.data);\n  });\n\n  for (let i = 0; i < leagueArray.length; i++) {\n    const league = leagueArray[i];\n    const name = leagueArray[i].name;\n\n    for (let x = 0; x < league.season.length; x++) {\n      const element = league.season[x];\n\n      if (element.year === 20202021) {\n        availableLeagues.push({ name: name, element });\n      }\n    }\n\n    function mapOrder(array, order, key) {\n      array.sort(function (a, b) {\n        var A = a.element[key],\n          B = b.element[key];\n\n        if (order.indexOf(A) > order.indexOf(B)) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n\n      return array;\n    }\n\n    //leagues ordered by id\n    var leagueOrder = [\n      4759,\n      4912,\n      4845,\n      4844,\n      5018,\n      4944,\n      4478,\n      4673,\n      4889,\n      4889,\n      4746,\n      4567,\n      4505,\n      4842,\n      4972,\n      4676,\n      4645,\n      4547,\n      4902,\n      4903,\n      4803,\n      5151,\n      4930,\n      4655,\n      4930,\n      4693,\n    ];\n\n    orderedLeagues = mapOrder(availableLeagues, leagueOrder, \"id\");\n  }\n  console.log(process.env.REACT_APP_EXPRESS_SERVER);\n\n  let response;\n  let responseBody;\n\n  ReactDOM.render(\n    <div className=\"LoadingText\">\n      Loading form data. This might take a while if you're the first user\n      today...\n    </div>,\n    document.getElementById(\"RadioButtons\")\n  );\n\n  let leagueData = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}leagueData`\n  );\n\n  if (leagueData.status === 200) {\n    allLeagueData = await leagueData.json();\n    \n    await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}leagueData`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify( allLeagueData ),\n    });\n  } else {\n    for (let x = 0; x < orderedLeagues.length; x++) {\n      response = await fetch(\n        `${proxyurl}https://api.footystats.org/league-season?key=${process.env.REACT_APP_API_KEY}&season_id=${orderedLeagues[x].element.id}`\n      );\n      responseBody = await response.json();\n\n      leagueObject = {\n        name: responseBody.data.english_name,\n        competitionId: responseBody.data.id,\n        homeWinPercentage: responseBody.data.homeWinPercentage,\n        awayWinPercentage: responseBody.data.awayWinPercentage,\n        drawPercentage: responseBody.data.drawPercentage,\n        image: responseBody.data.image,\n        averageGoals: responseBody.data.seasonAVG_overall,\n        homeAttackAdvantagePercentage:\n          responseBody.data.homeAttackAdvantagePercentage,\n        homeDefenceAdvantagePercentage:\n          responseBody.data.homeDefenceAdvantagePercentage,\n      };\n      allLeagueData.push(leagueObject);\n      JSON.stringify(allLeagueData);\n    }\n    await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}leagueData`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify( allLeagueData ),\n    });\n  }\n\n  ReactDOM.render(\n    <div className=\"LastXGames\">\n      <Radio\n        value=\"5\"\n        label=\"form based on last 5 games\"\n        className=\"FormRadio\"\n      />\n      <Radio\n        value=\"6\"\n        label=\"form based on last 6 games\"\n        className=\"FormRadio\"\n      />\n      <Radio\n        value=\"10\"\n        label=\"form based on last 10 games\"\n        className=\"FormRadio\"\n      />\n    </div>,\n    document.getElementById(\"RadioButtons\")\n  );\n\n  ReactDOM.render(\n    <TextBlock\n      text=\"Select how many games you would like to fetch form data for\"\n      className=\"RadioText\"\n    />,\n    document.getElementById(\"RadioText\")\n  );\n\n  ReactDOM.render(\n    <div className=\"FixtureButtons\">\n      <Button\n        text={\"Get Yesterday's Fixtures\"}\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\"yesterdaysFixtures\", selectedOption)\n          )\n        }\n      />\n      <Button\n        text={\"Get Today's Fixtures\"}\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\"todaysFixtures\", selectedOption)\n          )\n        }\n      />\n      <Button\n        text={\"Get Tomorrow's Fixtures\"}\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\"tomorrowsFixtures\", selectedOption)\n          )\n        }\n      />\n    </div>,\n    document.getElementById(\"Buttons\")\n  );\n})();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div id=\"LoadingContainer\" className=\"LoadingContainer\" />\n      <div id=\"RadioContainer\" className=\"RadioContainer\">\n        <div id=\"RadioText\" />\n        <div id=\"RadioButtons\" />\n      </div>\n      <div id=\"Day\" />\n      <div id=\"Buttons\" />\n      <div id=\"successMeasure\" />\n      <div id=\"bestPredictions\" />\n      <div id=\"longShots\" />\n      <div id=\"homeBadge\" />\n      <div id=\"FixtureContainer\"></div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}