{"version":3,"sources":["components/Header.js","components/Button.js","components/OddsRadio.js","components/KofiButton.js","logic/getForm.js","components/createBadge.js","components/CollapsableElement.js","components/createStatsDiv.js","components/Div.js","components/HeadToHead.js","components/Table.js","logic/getTeamStats.js","components/Increment.js","logic/getScorePredictions.js","logic/getBTTSPotential.js","logic/getStats.js","components/Fixture.js","logic/getFixtures.js","components/LeagueTable.js","components/radio.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Button","props","id","text","variant","type","onClick","onClickEvent","selectedOdds","OddsRadio","handleOptionChange","setState","value","state","this","name","checked","onChange","Component","StyledKofiButton","color","title","kofiID","applyColour","a","colour","getForm","match","teams","homeId","awayId","fixtureForm","i","team","fetch","process","response","json","then","formData","console","log","data","season_format","length","CreateBadge","src","image","ClassName","alt","flexShrink","Collapsable","isOpen","handleOnClick","prevState","style","buttonText","Stats","styleForm","formIndicator","formRun","last5","homeOrAway","goals","conceeded","possession","XG","XGConceded","goalDifference","goalDifferenceHomeOrAway","sot","dangerousAttacks","leaguePosition","homeOrAwayLeaguePosition","winPercentage","toFixed","drawPercentage","lossPercentage","ppg","formTrend","BttsPercentage","BttsPercentageHomeOrAway","CardsTotal","CornersAverage","ScoredBothHalvesPercentage","Div","HeadToHead","stadium","lastGameStadiumName","lastGameDate","lastGameHomeTeam","lastGameHomeGoals","lastGameAwayGoals","lastGameAwayTeam","secondToLastGameStadiumName","secondToLastGameDate","secondToLastGameHomeTeam","secondToLastGameHomeGoals","secondToLastGameAwayGoals","secondToLastGameAwayTeam","matches","homeTeam","homeWins","awayTeam","awayWins","draws","averageGoals","bestHomeOdds","bestAwayOdds","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","white","padding","textAlign","fontSize","fontFamily","border","margin","body","TableCell","StyledTableRow","root","TableRow","CustomizedTables","TableContainer","component","Paper","Table","TableHead","TableBody","scope","align","o05Stat","o05Odds","u05Odds","o15Stat","o15Odds","u15Odds","o25Stat","o25Odds","u25Odds","o35Stat","o35Odds","u35Odds","BTTSStat","BTTSOdds","BTTSOddsNo","getTeamStats","home","away","identifier","matchArr","h2h","previous_matches_ids","oddsComparisonHomeArray","oddsComparisonAwayArray","odds_comparison","sortedHomeOdds","Object","entries","sort","b","sortedAwayOdds","bestHomeOddsProvider","bestAwayOddsProvider","previous_matches_results","totalMatches","date_unix","lastMatch","secondToLastMatch","previousMatch","game","previousMatchDetails","unixTimestamp","dateObject","Date","date","getDate","getMonth","getFullYear","secondToPreviousMatch","secondToPreviousMatchDetails","dateObject2","date2","ReactDOM","render","stadium_name","team_a_wins","team_b_wins","draw","betting_stats","avg_goals","homeGoalCount","awayGoalCount","home_name","away_name","over05Percentage","over15Percentage","o15Forecast","o15_potential","odds_ft_over05","odds_ft_under05","odds_ft_over15","odds_ft_under15","over25Percentage","o25Forecast","o25_potential","odds_ft_over25","odds_ft_under25","over35Percentage","o35Forecast","o35_potential","odds_ft_over35","odds_ft_under35","bttsPercentage","BTTSForecast","btts_potential","odds_btts_yes","odds_btts_no","CornersStat","CornersForecast","corners_potential","CornersOdds","odds_corners_over_105","document","getElementById","finalHomeGoals","finalAwayGoals","rawFinalHomeGoals","rawFinalAwayGoals","homeOdds","awayOdds","incrementValue","riskLevel","Increment","IncrementItem","getNewTips","allTips","DecreaseItem","show","getBTTSPotential","allForm","index","homeGoals","awayGoals","findIndex","item","teamName","homeBTTS","BTTSPercentage","awayBTTS","homeG","awayG","homeGoalsScoredAverage","ScoredAverage","awayGoalsScoredAverage","homeGoalsConceededAverage","ConcededAverage","awayGoalsConceededAverage","homeXG","XGOverall","awayXG","homeXGAgainst","XGAgainstAverage","awayXGAgainst","combinedBTTS","bttsFraction","status","btts","bttsChosen","totalGoals","Headers","append","winDAAverage","lossDAAverage","winOddsAverage","lossOddsAverage","winPossessionAverage","lossPossessionAverage","winLast10PPGAverage","lossLast10PPGAverage","winSOTAverage","lossSOTAverage","winXGForAverage","lossXGForAverage","winXGAgainstAverage","lossXGAgainstAverage","totalGoals2","sumStatDAWin","sumStatDALoss","sumStatPossessionWin","sumStatPossessionLoss","sumStatSOTWin","sumStatSOTLoss","sumStatPPGLast10Win","sumStatPPGLast10Loss","sumOddsWin","sumOddsLoss","sumXGForWin","sumXGForLoss","sumXGAgainstWin","sumXGAgainstLoss","allWinOutcomes","allLossOutcomes","getPointsFromLastX","lastX","pointsAddition","points","forEach","compareStat","statOne","statTwo","stat1","parseFloat","stat2","statOneNotZero","statTwoNotZero","gap","result","homePoints","awayPoints","getOverOrUnderAchievingResult","overUnderAchievingSum","correction","getClinicalRating","form","dangerousAttackConversion","rating","score","getPointsDifferential","pointsHomeAvg","pointsAwayAvg","diff","differential","getPointWeighting","pointsDiff","pointsDiffWeightingHome","pointsDiffWeightingAway","compareFormTrend","threeGameAverage","fiveGameAverage","sixGameAverage","tenGameAverage","recentGoalDiff","distantGoalDiff","getPointAverage","pointTotal","games","compareTeams","homeForm","awayForm","overUnderAchievingSumComparison","homePointsToAdd","awayPointsToAdd","AverageShotsOnTarget","sotComparisonHOrA","AverageShotsOnTargetOverall","sotComparison","CleanSheetPercentage","CleanSheetPercentageComparison","dangerousAttackConversionComparison","goalsPerDangerousAttack","goalsPerDangerousAttackComparison","AverageDangerousAttacks","dangerousAttacksComparisonHOrA","AverageDangerousAttacksOverall","dangerousAttacksComparison","XGdifferential","XGdifferentialComparison","formTrendScore","formTrendScoreComparison","last10Points","last10PointsComparison","twoGameAverage","twoGameAverageComparison","fiveGameAverageComparison","tenGameAverageComparison","SeasonPPG","seasonPPGComparison","AttackingPotency","attackingPotencyComparison","AveragePossession","AveragePossessionComparisonHOrA","goalDiffComparison","goalDiffHOrAComparison","AveragePossessionOverall","AveragePossessionComparison","awayPositionAwayOnly","homePositionHomeOnly","awayPosition","homePosition","positionComparison","undefined","WinPercentage","winPercentageComparison","winPercH","winPercA","drawPercH","DrawPercentage","drawPercA","homeTeamWinPercentage","awayTeamWinPercentage","homeTeamDrawPercentage","awayTeamDrawPercentage","LossPercentage","lossPercentageComparison","awayTeamLossPercentage","homeTeamLossPercentage","OddsComparison","homeOrAwayAverage","homeOrAwayAverageComparison","calculation","last2Points","roundCustom","num","otherForm","wholeNumber","Math","floor","remainder","overUnderAchievingSumAttack","overUnderAchievingSumDefence","ceil","calculateScore","divider","calculate","find","PlayedHome","PlayedAway","lastGame","LastFiveForm","previousToLastGame","last2","last3","last5Points","last6Points","LastSixForm","LastTenForm","last3Points","lastHomeOrAwayPoints","ScoredOverall","ConcededOverall","ScoredAverageShortTerm","ScoredAverageLongTermHomeOrAway","ConcededAverageShortTerm","ConcededAverageLongTermHomeOrAway","longTermAverageGoals","longTermAverageConceeded","expectedGoals","expectedGoalsConceeded","expectedGoalsLongTerm","expectedConceededGoalsLongTerm","ScoredAverageShortAndLongTerm","expectedGoalsShortAndLongTerm","conceededAverageShortAndLongTerm","finishingScore","goalieRating","goalOverOrUnderAchieving","concededOverOrUnderAchieving","forecastedXG","forecastedXGConceded","goalsBasedOnAverages","XGAgainstAvgOverall","XGWeighting","improving","homeRaw","awayRaw","formHome","formAway","overOrUnderAttack","trueFormAttack","overOrUnderDefence","trueFormDefence","homeTenGameAvg","awayTenGameAvg","pointsDiff10","last10WeightingHome","last10WeightingAway","clinicalRating","clinicalScore","oddsWeightingHome","oddsWeightingAway","weighting","weightingSplitHome","abs","weightingSplitAway","homeWeighting","awayWeighting","XGdifferentialValue","XGdifferentialValueRaw","homeTeamHomePositionRaw","awayTeamAwayPositionRaw","homeRawPosition","awayRawPosition","AttacksHome","AttacksAverage","teamComparisonScore","homeGoalDiff","awayGoalDiff","goalsDifferential","goalCalcHomeOnly","goalCalcAwayOnly","goalCalcHomeShortTerm","goalCalcAwayShortTerm","goalCalcHomeShortAndLongTerm","goalCalcAwayShortAndLongTerm","factorOneHome","factorOneAway","scoreDiff","homeComparisonWeighting","awayComparisonWeighting","homeAdvantage","awayAdvantage","difference","round","prediction","includeInMultis","winner","outcome","predictionOutcome","doubleChancePredictionOutcome","total","parseInt","total2","getSuccessMeasure","fixtures","sumProfit","investment","exactScores","successCount","profit","netProfit","exactScore","operand","ROI","exactScoreHitRate","successRate","allTipsSorted","price","combinations","gamesInExotic","exoticStake","exoticString","testBool","resultValue","newArray","bestBets","longShotTips","XGDiffTips","exoticArray","bttsArray","accumulatedOdds","predictions","array","tip","indexOf","push","rawOdds","renderTips","getScorePrediction","day","mocked","mock","Promise","all","map","goalsA","goalsB","unroundedGoalsA","unroundedGoalsB","fractionHome","predictionObject","odds","comparisonScore","rawComparisonScore","goalDifferential","experimentalCalc","fractionAway","sortByCalcA","sortByCalcB","homeDoubleChance","longShotPredictionObject","decimalOdds","doubleChanceOutcome","awayDoubleChance","getCoverBetMaxReturns","XGPredictionObject","otherTeam","Fixture","getAccumulatorPrice","priceArray","minAccSize","stake","perms","getUniquePermutations","j","arr","permLength","permutations","newArr","slice","splice","twoDimArrayUnion","arr1","arr2","duplicate","k","NewlineText","split","str","bttsOutcome","toggle","display","getLastGameResult","five","six","ten","gameStats","time","homeFiveGameAverage","homeSixGameAverage","homeTenGameAverage","awayFiveGameAverage","awaySixGameAverage","awayTenGameAverage","homeFormTrend","awayFormTrend","homeLastGame","awayLastGame","formDataHome","Last5","AverageGoals","AverageConceeded","AverageXG","AverageXGConceded","LeaguePosition","Last5PPG","PPG","formDataAway","gameCount","rawPosition","homeTeamHomePosition","awayTeamAwayPosition","GetDivider","fixture","matchStatus","isPrediction","drawOdds","renderLeagueName","leagueName","renderTable","leagueIndex","SingleFixture","pointsAverageDiffBool","pointsAverageDiff","createStatsDiv","homeBadge","awayBadge","newText","List","StyledTableCell2","paddingTop","paddingBottom","LeagueTable","rows","Teams","Position","Name","Played","Wins","Draws","Losses","For","Against","GoalDifference","Points","Form","Key","getTopScorersTeam","ID","LeagueID","marginTop","marginBottom","seasonAVG_home","seasonAVG_away","seasonBTTSPercentage","seasonOver05Percentage_overall","seasonOver15Percentage_overall","seasonOver25Percentage_overall","seasonOver35Percentage_overall","seasonOver45Percentage_overall","over75CornersPercentage_overall","over85CornersPercentage_overall","over95CornersPercentage_overall","over105CornersPercentage_overall","over115CornersPercentage_overall","over125CornersPercentage_overall","cornersAVG_overall","cardsAVG_overall","top_scorers","known_as","club_team_id","goals_overall","fixtureResponse","fixtureArray","oddslib","require","config","league","leagueID","leagueInstance","lastFiveFormHome","lastFiveFormAway","lastSixFormHome","lastSixFormAway","lastTenFormHome","lastTenFormAway","formRunHome","formRunAway","leagueGames","leagueArray","leagueIdArray","toLocaleDateString","currentDay","month","year","tomorrowsDate","setDate","tomorrowDay","tomorrowMonth","tomorrowYear","yesterdaysDate","yesterdayDay","yesterdayMonth","yesterdayYear","d","getDay","saturdayDay","saturdayMonth","saturdayYear","historicDate","historicDay","historicMonth","historicYear","saturday","historic","yesterday","today","tomorrow","tableArray","generateTables","currentLeagueId","specific_tables","groups","league_table","all_matches_table_overall","currentTeam","cleanName","matchesPlayed","seasonWins_overall","seasonDraws_overall","seasonLosses_overall","seasonGoals","seasonConceded_home","seasonConceded_away","seasonGoalDifference","table","rawForm","wdl_record","replace","toUpperCase","Array","from","leagueStatistics","stats","statistics","createFixture","mockBool","roundedHomeOdds","roundedAwayOdds","homeFraction","to","precision","awayFraction","error","bttsOdds","roundedBTTSOdds","homeTeamWinsPercentage","homeTeamLossesPercentage","homeTeamDrawsPercentage","awayTeamWinsPercentage","awayTeamLossesPercentage","awayTeamDrawsPercentage","generateFixtures","radioState","url","method","headers","Accept","storedForm","formArray","isFormStored","isStoredLocally","height","orderedLeagues","element","leaguePositions","leagues","x","string","stringHome","all_matches_table_home","stringAway","all_matches_table_away","position","homeFormName","awayFormName","homeSeasonWinPercentage","seasonWins","awaySeasonWinPercentage","homeSeasonLossPercentage","seasonLosses_home","awaySeasonLossPercentage","seasonLosses_away","homeSeasonDrawPercentage","seasonDraws","awaySeasonDrawPercentage","homeSeasonMatchesPlayed","awaySeasonMatchesPlayed","ppg_overall","filter","competition_id","getPrefix","teamPositionPrefix","previousLeagueName","toLocaleString","hour","minute","odds_ft_1","odds_ft_2","odds_ft_x","odds_doublechance_1x","odds_doublechance_x2","homeID","awayID","homeTeamInfo","awayTeamInfo","homeTeaminLeague","awayTeaminLeague","teamPositionHome","teamPositionHomeTable","teamPositionAwayTable","homeTeamWinPercentageHome","awayTeamWinPercentageAway","homeTeamLossPercentageHome","awayTeamLossPercentageAway","homeTeamDrawPercentageHome","awayTeamDrawPercentageAway","teamPositionAway","homePrefix","homePrefixHomeTable","awayPrefix","awayPrefixAwayTable","homeSeasonPPG","awaySeasonPPG","homeTeaminHomeLeague","awayTeaminAwayLeague","homeFormString5","additional_info","formRun_overall","awayFormString5","homeFormString6","awayFormString6","homeFormString10","awayFormString10","homeFormRun","formRun_home","awayFormRun","formRun_away","xg_for_avg_overall","xg_for_avg_home","seasonScoredNum_overall","seasonScoredAVG_home","seasonMatchesPlayed_home","seasonMatchesPlayed_away","seasonConcededNum_overall","seasonConcededAVG_home","xg_against_avg_overall","xg_against_avg_home","seasonCSPercentage_home","possessionAVG_overall","possessionAVG_home","shotsOnTargetAVG_overall","shotsOnTargetAVG_home","dangerous_attacks_avg_overall","seasonPPG_home","attacks_avg_home","AttacksAway","attacks_avg_away","dangerous_attacks_avg_home","homeAttackAdvantage","homeDefenceAdvantage","seasonBTTSPercentage_home","seasonGoalDifference_overall","seasonGoalDifference_home","seasonBTTSPercentage_overall","cardsTotal_overall","scoredBothHalvesPercentage_overall","xg_for_avg_away","seasonScoredAVG_away","seasonConcededAVG_away","xg_against_avg_away","seasonCSPercentage_away","possessionAVG_away","shotsOnTargetAVG_away","seasonPPG_away","dangerous_attacks_avg_away","seasonBTTSPercentage_away","seasonGoalDifference_away","home_image","away_image","homePpg","home_ppg","homeFormColour","awayPpg","away_ppg","awayFormColour","expectedGoalsHomeToDate","team_a_xg_prematch","expectedGoalsAwayToDate","team_b_xg_prematch","JSON","stringify","selectedOption","fixtureList","availableLeagues","getHighestScoringTeams","teamsList","top_fixtures","country","avg_potential","getMatchTime","teamCountry","timestamp","finalArray","bestO25Bets","sortedArray","getLowestScoringTeams","bestU25Bets","unixTime","leagueList","mapOrder","order","key","A","B","season","leagueOrder","teamList","reactDom","App","href","target","rel","TwitterShareButton","boxShadow","TwitterIcon","size","FacebookShareButton","quote","FacebookIcon","RedditShareButton","RedditIcon","WhatsappShareButton","separator","WhatsappIcon","TelegramShareButton","TelegramIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.9f87a461.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n      <h1 className=\"HeaderContainer\">XG Tipping</h1>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nexport function Button(props) {\n  return (\n    <div id=\"Button\">\n      <button data-cy={props.text} variant=\"primary\" type=\"button\" onClick={props.onClickEvent} className={props.className}>\n        {props.text}\n      </button>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nexport var selectedOdds = \"Fractional\";\n\n\nexport class OddsRadio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOdds: this.props.value,\n    };\n  }\n\n  handleOptionChange = () => {\n    this.setState({\n      selectedOdds: this.props.value,\n    });\n    selectedOdds = this.state.selectedOdds;\n  };\n\n  render() {\n    return (\n      <section className=\"dark2\">\n        <div className={this.props.className}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"odds\"\n              checked={this.state.checked}\n              onChange={this.handleOptionChange}\n              data-cy={this.props.value}\n            />\n            <span className=\"design\"></span>\n            <span className=\"text\">{this.props.value} odds</span>\n          </label>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default OddsRadio;","import KofiButton from \"kofi-button\"\n\nexport const StyledKofiButton = () => {\n  return (\n    <KofiButton className=\"DonateButton\" color=\"#e2e2e26c\" title=\"Donate\" kofiID=\"H2H0AX25Z\" />\n  )\n}","export async function applyColour(value) {\n  let colour;\n  switch (true) {\n    case value < 0.49:\n      colour = \"#CD5C5C\";\n      break;\n    case value >= 0.5 && value <= 1:\n      colour = \"#F08080\";\n      break;\n    case value >= 1.01 && value <= 1.25:\n      colour = \"#FFA07A\";\n      break;\n    case value >= 1.26 && value <= 1.5:\n      colour = \"#FFFFE0\";\n      break;\n    case value >= 1.51 && value <= 2:\n      colour = \"#CFDBC5\";\n      break;\n    case value >= 2.01 && value <= 2.5:\n      colour = \"#8AA37B\";\n      break;\n    case value >= 2.51 && value <= 3:\n      colour = \"#3F6826\";\n      break;\n    default:\n      colour = \"white\";\n      break;\n  }\n  return colour;\n}\n\nexport async function getForm(match) {\n  const teams = [match.homeId, match.awayId];\n  const fixtureForm = [];\n\n  for (let i = 0; i < teams.length; i++) {\n    const team = teams[i];\n\n    let response = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}form/${team}`\n    );\n    await response.json().then((formData) => {\n      console.log(formData.data[0].season_format)\n      fixtureForm[i] = formData;\n      console.log(fixtureForm[i])\n    });\n  }\n  return fixtureForm;\n}\n","import React from \"react\";\n\nexport function CreateBadge(props) {\n  return (\n    <img\n      src={`https://cdn.footystats.org/img/${props.image}`}\n      className={props.ClassName}\n      alt={props.alt}\n      flex-shrink={props.flexShrink}\n    />\n  );\n}\n","import React, { Component } from \"react\";\nimport EscapeOutside from \"react-escape-outside\";\n\nclass Collapsable extends Component {\n  state = { isOpen: false };\n\n  handleOnClick = () => {\n    this.setState((prevState) => ({\n      isOpen: !prevState.isOpen,\n    }));\n  };\n\n  render() {\n    return (\n      <div style={this.props.style}>\n        <button className={this.props.className} onClick={this.handleOnClick}>{this.props.buttonText}</button>\n        {this.state.isOpen && (\n          <EscapeOutside className=\"Collapsable\">\n            {this.props.text}\n          </EscapeOutside>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Collapsable;\n","import React, { Fragment } from \"react\";\n\nfunction Stats(props) {\n  function styleForm(formIndicator) {\n    let className;\n    if (formIndicator === \"W\") {\n      className = \"win\";\n    } else if (formIndicator === \"D\") {\n      className = \"draw\";\n    } else if (formIndicator === \"L\") {\n      className = \"loss\";\n    }\n    return className;\n  }\n\n  function getStyle(num) {\n    if(num >= 0){\n      return \"#00ff00\"\n    } else {\n      return \"#ff1500\";\n    }\n    }\n\n\n  if(props.formRun){\n    console.log(props)\n    return (\n      <Fragment>\n        <ul className={props.className} style={props.style}>\n          <li className=\"FormHeader\">All Form (most recent on right)</li>\n          <li key={`last5`} className=\"Form\">\n            <span className={styleForm(props.last5[0])}>{props.last5[0]}</span>\n            <span className={styleForm(props.last5[1])}>{props.last5[1]}</span>\n            <span className={styleForm(props.last5[2])}>{props.last5[2]}</span>\n            <span className={styleForm(props.last5[3])}>{props.last5[3]}</span>\n            <span className={styleForm(props.last5[4])}>{props.last5[4]}</span>\n          </li>\n          <li className=\"FormHeader\">{props.homeOrAway} form (most recent on right)</li>\n          <li key={`last5${props.homeOrAway}`} className=\"FormHomeOrAway\">\n          <span className={styleForm(props.formRun[0])}>{props.formRun[0]}</span>\n          <span className={styleForm(props.formRun[1])}>{props.formRun[1]}</span>\n            <span className={styleForm(props.formRun[2])}>{props.formRun[2]}</span>\n            <span className={styleForm(props.formRun[3])}>{props.formRun[3]}</span>\n            <span className={styleForm(props.formRun[4])}>{props.formRun[4]}</span>\n          </li>\n          <li\n            key=\"TeamScored\"\n            className=\"TeamScored\"\n            data-cy={props.name + \"teamScored\"}\n          >\n            {`Avg goals scored - ${props.goals}`}\n          </li>\n          <li\n            key=\"TeamConceeded\"\n            className=\"TeamConceeded\"\n            data-cy={props.name + \"teamConceded\"}\n          >\n            {`Avg goals conceeded - ${props.conceeded}`}\n          </li>\n          <li\n            key=\"TeamPossession\"\n            className=\"TeamPossession\"\n            data-cy={props.name + \"teamPossession\"}\n          >\n            {`Avg possession - ${props.possession}%`}\n          </li>\n          <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name + \"teamXG\"}>\n            {`Avg XG - ${props.XG}`}\n          </li>\n          <li\n            key=\"TeamXGConceded\"\n            className=\"TeamXGConceded\"\n            data-cy={props.name + \"teamXGConceded\"}\n          >\n            {`Avg XG conceded - ${props.XGConceded}`}\n          </li>\n          <li\n            key=\"goalDifference\"\n            className=\"goalDifference\"\n            data-cy={props.name + \"goalDifference\"}\n            \n          >\n            {`Goal difference : `}\n            <span>{props.goalDifference}</span>\n          </li>\n          <li\n            key=\"goalDifference\"\n            className=\"goalDifference\"\n            data-cy={props.name + \"goalDifference\"}\n          >\n            {`Goal difference ${props.homeOrAway} : ${props.goalDifferenceHomeOrAway}`}\n          </li>\n          <li\n            key=\"AverageSOT\"\n            className=\"AverageSOT\"\n            data-cy={props.name + \"averageSOT\"}\n          >\n            {`Avg shots on target - ${props.sot}`}\n          </li>\n          <li\n            key=\"DangerousAttacks\"\n            className=\"DangerousAttacks\"\n            data-cy={props.name + \"dangerousAttacks\"}\n          >\n            {`Avg dangerous attacks - ${props.dangerousAttacks}`}\n          </li>\n          <li\n            key=\"LeaguePosition\"\n            className=\"LeaguePosition\"\n            data-cy={props.name + \"leaguePosition\"}\n          >\n            {`League position - ${props.leaguePosition}`}\n          </li>\n  \n          <li\n            key=\"LeaguePositionHomeOrAway\"\n            className=\"LeaguePositionHomeOrAway\"\n            data-cy={props.name + \"LeaguePositionHomeOrAway\"}\n          >\n            {`Position (${props.homeOrAway} only) - ${props.homeOrAwayLeaguePosition}`}\n          </li>\n          <li\n            key=\"WinPercentage\"\n            className=\"WinPercentage\"\n            data-cy={props.name + \"WinPercentage\"}\n          >\n            {`${props.homeOrAway} wins - ${props.winPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"DrawPercentage\"\n            className=\"DrawPercentage\"\n            data-cy={props.name + \"DrawPercentage\"}\n          >\n            {`${props.homeOrAway} draws - ${props.drawPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"LossPercentage\"\n            className=\"LossPercentage\"\n            data-cy={props.name + \"LossPercentage\"}\n          >\n            {`${props.homeOrAway} losses - ${props.lossPercentage.toFixed(1)}%`}\n          </li>\n          <li key=\"PPG\" className=\"PPG\" data-cy={props.name + \"PPG\"}>\n            {`Season PPG - ${props.ppg}`}\n          </li>\n          <li\n            key=\"FormTrend10a\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 10 PPG: ${props.formTrend[0]}`}\n          </li>\n          <li\n            key=\"FormTrend10b\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 6 PPG: ${props.formTrend[1]}`}\n          </li>\n          <li\n            key=\"FormTrend10c\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 5 PPG: ${props.formTrend[2]}.`}\n          </li>\n          <li\n            key=\"BttsPercentage\"\n            className=\"BttsPercentage\"\n            data-cy={props.name + \"BttsPercentage\"}\n          >\n            {`BTTS: ${props.BttsPercentage}%`}\n          </li>\n          <li\n            key=\"BttsPercentageHomeOrAway\"\n            className=\"BttsPercentageHomeOrAway\"\n            data-cy={props.name + \"BttsPercentageHomeOrAway\"}\n          >\n            {`BTTS ${props.homeOrAway}: ${props.BttsPercentageHomeOrAway}%`}\n          </li>\n          <li\n            key=\"CardsTotal\"\n            className=\"CardsTotal\"\n            data-cy={props.name + \"CardsTotal\"}\n          >\n            {`Cards total: ${props.CardsTotal}`}\n          </li>\n          <li\n            key=\"CornersAverage\"\n            className=\"CornersAverage\"\n            data-cy={props.name + \"CornersAverage\"}\n          >\n            {`Corners average: ${props.CornersAverage}`}\n          </li>\n          <li\n            key=\"ScoredBothHalvesPercentage\"\n            className=\"ScoredBothHalvesPercentage\"\n            data-cy={props.name + \"ScoredBothHalvesPercentage\"}\n          >\n            {`Scored both halves: ${props.ScoredBothHalvesPercentage}%`}\n          </li>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  } else {\n    return (\n      <Fragment>\n        <ul className={props.className} style={props.style}>\n          <li className=\"FormHeader\">Form (most recent on right)</li>\n          <li key=\"last5\">\n            <span className={styleForm(props.last5[0])}>{props.last5[0]}</span>\n            <span className={styleForm(props.last5[1])}>{props.last5[1]}</span>\n            <span className={styleForm(props.last5[2])}>{props.last5[2]}</span>\n            <span className={styleForm(props.last5[3])}>{props.last5[3]}</span>\n            <span className={styleForm(props.last5[4])}>{props.last5[4]}</span>\n          </li>\n          <li\n            key=\"TeamScored\"\n            className=\"TeamScored\"\n            data-cy={props.name + \"teamScored\"}\n          >\n            {`Avg goals scored - ${props.goals}`}\n          </li>\n          <li\n            key=\"TeamConceeded\"\n            className=\"TeamConceeded\"\n            data-cy={props.name + \"teamConceded\"}\n          >\n            {`Avg goals conceeded - ${props.conceeded}`}\n          </li>\n          <li\n            key=\"TeamPossession\"\n            className=\"TeamPossession\"\n            data-cy={props.name + \"teamPossession\"}\n          >\n            {`Avg possession - ${props.possession}%`}\n          </li>\n          <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name + \"teamXG\"}>\n            {`Avg XG - ${props.XG}`}\n          </li>\n          <li\n            key=\"TeamXGConceded\"\n            className=\"TeamXGConceded\"\n            data-cy={props.name + \"teamXGConceded\"}\n          >\n            {`Avg XG conceded - ${props.XGConceded}`}\n          </li>\n          <li\n            key=\"AverageSOT\"\n            className=\"AverageSOT\"\n            data-cy={props.name + \"averageSOT\"}\n          >\n            {`Avg shots on target - ${props.sot}`}\n          </li>\n          <li\n            key=\"DangerousAttacks\"\n            className=\"DangerousAttacks\"\n            data-cy={props.name + \"dangerousAttacks\"}\n          >\n            {`Avg dangerous attacks - ${props.dangerousAttacks}`}\n          </li>\n          <li\n            key=\"LeaguePosition\"\n            className=\"LeaguePosition\"\n            data-cy={props.name + \"leaguePosition\"}\n          >\n            {`League position - ${props.leaguePosition}`}\n          </li>\n  \n          <li\n            key=\"LeaguePositionHomeOrAway\"\n            className=\"LeaguePositionHomeOrAway\"\n            data-cy={props.name + \"LeaguePositionHomeOrAway\"}\n          >\n            {`Position (${props.homeOrAway} only) - ${props.homeOrAwayLeaguePosition}`}\n          </li>\n          <li\n            key=\"WinPercentage\"\n            className=\"WinPercentage\"\n            data-cy={props.name + \"WinPercentage\"}\n          >\n            {`${props.homeOrAway} wins - ${props.winPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"DrawPercentage\"\n            className=\"DrawPercentage\"\n            data-cy={props.name + \"DrawPercentage\"}\n          >\n            {`${props.homeOrAway} draws - ${props.drawPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"LossPercentage\"\n            className=\"LossPercentage\"\n            data-cy={props.name + \"LossPercentage\"}\n          >\n            {`${props.homeOrAway} losses - ${props.lossPercentage.toFixed(1)}%`}\n          </li>\n          <li key=\"PPG\" className=\"PPG\" data-cy={props.name + \"PPG\"}>\n            {`Season PPG - ${props.ppg}`}\n          </li>\n          <li\n            key=\"FormTrend10a\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 10 PPG: ${props.formTrend[0]}`}\n          </li>\n          <li\n            key=\"FormTrend10b\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 6 PPG: ${props.formTrend[1]}`}\n          </li>\n          <li\n            key=\"FormTrend10c\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 5 PPG: ${props.formTrend[2]}.`}\n          </li>\n          <li\n            key=\"BttsPercentage\"\n            className=\"BttsPercentage\"\n            data-cy={props.name + \"BttsPercentage\"}\n          >\n            {`BTTS: ${props.BttsPercentage}%`}\n          </li>\n          <li\n            key=\"BttsPercentageHomeOrAway\"\n            className=\"BttsPercentageHomeOrAway\"\n            data-cy={props.name + \"BttsPercentageHomeOrAway\"}\n          >\n            {`BTTS ${props.homeOrAway}: ${props.BttsPercentageHomeOrAway}%`}\n          </li>\n          <li\n            key=\"CardsTotal\"\n            className=\"CardsTotal\"\n            data-cy={props.name + \"CardsTotal\"}\n          >\n            {`Cards total: ${props.CardsTotal}`}\n          </li>\n          <li\n            key=\"CornersAverage\"\n            className=\"CornersAverage\"\n            data-cy={props.name + \"CornersAverage\"}\n          >\n            {`Corners average: ${props.CornersAverage}`}\n          </li>\n          <li\n            key=\"ScoredBothHalvesPercentage\"\n            className=\"ScoredBothHalvesPercentage\"\n            data-cy={props.name + \"ScoredBothHalvesPercentage\"}\n          >\n            {`Scored both halves: ${props.ScoredBothHalvesPercentage}%`}\n          </li>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  }\n \n}\n\nexport default Stats;\n","import React from \"react\";\n\nfunction Div(props) {\n  return (\n    <div id={props.id} onClick={props.onClick} style={props.style} className={props.className}>{props.text}</div>\n  );\n}\n\nexport default Div;\n","import React from \"react\";\n\nfunction HeadToHead(props) {\n\n  return (\n    <ul className={props.className} style={props.style}>\n      <li key=\"Stadium\" className=\"Stadium\" data-cy={props.name + \"Stadium\"}>\n        {`Venue - ${props.stadium}`}\n      </li>\n      <li key=\"lastGameDetail\" className=\"LastGameDetail\" data-cy={props.name + \"Last\"}>\n        {`Last meeting - ${props.lastGameStadiumName} ${props.lastGameDate}`}\n      </li>\n      <li key=\"lastGame\" className=\"LastGame\" data-cy={props.name + \"LastGame\"}>\n        {`${props.lastGameHomeTeam} ${props.lastGameHomeGoals} - ${props.lastGameAwayGoals} ${props.lastGameAwayTeam}`}\n      </li>\n      <li key=\"secondToLastGameDetail\" className=\"secondToLastGameDetail\" data-cy={props.name + \"secondToLast\"}>\n        {`Second to last meeting - ${props.secondToLastGameStadiumName} ${props.secondToLastGameDate}`}\n      </li>\n      <li key=\"secondToLastGame\" className=\"LastGame\" data-cy={props.name + \"LastGame\"}>\n        {`${props.secondToLastGameHomeTeam} ${props.secondToLastGameHomeGoals} - ${props.secondToLastGameAwayGoals} ${props.secondToLastGameAwayTeam}`}\n      </li>\n      <li key=\"h2h\" className=\"h2h\" data-cy={props.name + \"h2h\"}>\n        {`Matches played: ${props.matches}`}\n      </li>\n      <li key=\"homeWins\" className=\"homeWins\" data-cy={props.name + \"homeWins\"}>\n        {`${props.homeTeam} wins: ${props.homeWins}`}\n      </li>\n      <li key=\"awayWins\" className=\"awayWins\" data-cy={props.name + \"awayWins\"}>\n        {`${props.awayTeam} wins: ${props.awayWins}`}\n      </li>\n      <li key=\"draws\" className=\"draws\" data-cy={props.name + \"draws\"}>\n        {`Draws: ${props.draws}`}\n      </li>\n      <li key=\"averageGoals\" className=\"averageGoals\" data-cy={props.name + \"averageGoals\"}>\n        {`Average goals in fixture: ${props.averageGoals}`}\n      </li>\n      <li key=\"bestHomeOdds\" className=\"bestHomeOdds\" data-cy={props.name + \"bestHomeOdds\"}>\n        {`Best oods for home win @: ${props.bestHomeOdds}`}\n      </li>\n      <li key=\"bestAwayOdds\" className=\"bestAwayOdds\" data-cy={props.name + \"bestAwayOdds\"}>\n        {`Best oods for away win @: ${props.bestAwayOdds}`}\n      </li>\n    </ul>\n  );\n}\n\nexport default HeadToHead;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#030052\",\n    color: theme.palette.common.white,\n    padding: 10,\n    textAlign: \"center\",\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    border: \"none\",\n    margin: \"none\"\n  },\n  body: {\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    padding: 10,\n    color: \"white\",\n    border: \"none\",\n    margin: \"none\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#030061\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#030052\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\n\nexport default function CustomizedTables(props) {\n\n\n  return (\n    <TableContainer component={Paper} className=\"StatsTable\">\n      <Table aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Stat</StyledTableCell>\n            <StyledTableCell>H2H history</StyledTableCell>\n            <StyledTableCell>Odds (yes)</StyledTableCell>\n            <StyledTableCell>Odds (no)</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        <StyledTableRow key=\"O05\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 0.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o05Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o05Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u05Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O15\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 1.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o15Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o15Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u15Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O25\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 2.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o25Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o25Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u25Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O35\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 3.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o35Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o35Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u35Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"BTTS\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              BTTS %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.BTTSStat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSOdds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSOddsNo}</StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport HeadToHead from \"../components/HeadToHead\";\nimport { Fragment } from \"react\";\nimport CustomizedTables from \"../components/Table\";\n\nexport async function getTeamStats(id, home, away) {\n  console.log(\"EXECUTED\");\n  let identifier = id;\n  let bestHomeOdds;\n  let bestHomeOddsProvider;\n  let bestAwayOdds;\n  let bestAwayOddsProvider\n  \n  let match = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}match/${identifier}`\n  );\n   await match.json().then(async (match) => {\n    console.log(match.data)\n    let matchArr = match.data.h2h.previous_matches_ids\n    let previousMatchDetails;\n    let secondToPreviousMatchDetails;\n\n    let oddsComparisonHomeArray = []\n    let oddsComparisonAwayArray = []\n\n    if(match.data.odds_comparison){\n    oddsComparisonHomeArray = match.data.odds_comparison[\"FT Result\"][1];\n    oddsComparisonAwayArray = match.data.odds_comparison[\"FT Result\"][2];\n\n    let sortedHomeOdds = Object.entries(oddsComparisonHomeArray).sort((a, b) => b[1] - a[1])\n    let sortedAwayOdds = Object.entries(oddsComparisonAwayArray).sort((a, b) => b[1] - a[1])\n\n    bestHomeOddsProvider = sortedHomeOdds[0][0]\n    bestHomeOdds = sortedHomeOdds[0][1]\n    bestAwayOddsProvider = sortedAwayOdds[0][0]\n    bestAwayOdds = sortedAwayOdds[0][1]\n    } else {\n      bestHomeOddsProvider = \"N/A\"\n      bestHomeOdds = \"N/A\"\n      bestAwayOddsProvider = \"N/A\"\n      bestAwayOdds = \"N/A\"\n    }\n\n    if(match.data.h2h.previous_matches_results.totalMatches > 0){\n      matchArr.sort((a, b) => b.date_unix - a.date_unix);\n      let lastMatch = matchArr[0].id\n      let secondToLastMatch = matchArr[1].id\n\n      let previousMatch = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}match/${lastMatch}`\n      );\n      let dateObject;\n      let date;\n      let date2;\n      await previousMatch.json().then(async (game) => {\n        previousMatchDetails = game.data\n        console.log(previousMatchDetails)\n        const unixTimestamp = previousMatchDetails.date_unix;\n        const milliseconds = unixTimestamp * 1000;\n        dateObject = new Date(milliseconds);\n         date = `${dateObject.getDate()}/${dateObject.getMonth()+1}/${dateObject.getFullYear()}`\n\n         let secondToPreviousMatch = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}match/${secondToLastMatch}`\n        );\n        let dateObject2;\n        await secondToPreviousMatch.json().then((game) => {\n          secondToPreviousMatchDetails = game.data\n          console.log(secondToPreviousMatchDetails)\n          const unixTimestamp = secondToPreviousMatchDetails.date_unix;\n          const milliseconds = unixTimestamp * 1000;\n          dateObject2 = new Date(milliseconds);\n          date2 = `${dateObject2.getDate()}/${dateObject2.getMonth()+1}/${dateObject2.getFullYear()}`\n        })\n  \n      })\n\n      ReactDOM.render(\n        <Fragment>\n          <h3>Fixture history</h3>\n          <HeadToHead\n            className={\"PreviousMatchStats\"}\n            homeTeam={home}\n            awayTeam={away}\n            stadium={match.data.stadium_name}\n            matches={match.data.h2h.previous_matches_results.totalMatches}\n            homeWins={match.data.h2h.previous_matches_results.team_a_wins}\n            awayWins={match.data.h2h.previous_matches_results.team_b_wins}\n            draws={match.data.h2h.previous_matches_results.draw}\n            averageGoals={match.data.h2h.betting_stats.avg_goals}\n            bestHomeOdds = {`${bestHomeOddsProvider} - ${bestHomeOdds}`}\n            bestAwayOdds = {`${bestAwayOddsProvider} - ${bestAwayOdds}`}\n            lastGameStadiumName={previousMatchDetails.stadium_name}\n            lastGameHomeGoals={previousMatchDetails.homeGoalCount}\n            lastGameAwayGoals={previousMatchDetails.awayGoalCount}\n            lastGameHomeTeam={previousMatchDetails.home_name}\n            lastGameAwayTeam={previousMatchDetails.away_name}\n            lastGameDate={date}\n            secondToLastGameStadiumName={secondToPreviousMatchDetails.stadium_name}\n            secondToLastGameHomeGoals={secondToPreviousMatchDetails.homeGoalCount}\n            secondToLastGameAwayGoals={secondToPreviousMatchDetails.awayGoalCount}\n            secondToLastGameHomeTeam={secondToPreviousMatchDetails.home_name}\n            secondToLastGameAwayTeam={secondToPreviousMatchDetails.away_name}\n            secondToLastGameDate={date2}\n          ></HeadToHead>\n          <CustomizedTables\n            o05Stat={match.data.h2h.betting_stats.over05Percentage}\n            o15Stat={match.data.h2h.betting_stats.over15Percentage}\n            o15Forecast={match.data.o15_potential}\n            o05Odds={match.data.odds_ft_over05}\n            u05Odds={match.data.odds_ft_under05}\n            o15Odds={match.data.odds_ft_over15}\n            u15Odds={match.data.odds_ft_under15}\n            o25Stat={match.data.h2h.betting_stats.over25Percentage}\n            o25Forecast={match.data.o25_potential}\n            o25Odds={match.data.odds_ft_over25}\n            u25Odds={match.data.odds_ft_under25}\n            o35Stat={match.data.h2h.betting_stats.over35Percentage}\n            o35Forecast={match.data.o35_potential}\n            o35Odds={match.data.odds_ft_over35}\n            u35Odds={match.data.odds_ft_under35}\n            BTTSStat={match.data.h2h.betting_stats.bttsPercentage}\n            BTTSForecast={match.data.btts_potential}\n            BTTSOdds={match.data.odds_btts_yes}\n            BTTSOddsNo={match.data.odds_btts_no}\n            CornersStat={\"–\"}\n            CornersForecast={match.data.corners_potential}\n            CornersOdds={match.data.odds_corners_over_105}\n          />\n        </Fragment>,\n        document.getElementById(`H2HStats${identifier}`)\n      );\n    } else {\n      ReactDOM.render(\n        <Fragment>\n          <h3>Fixture history</h3>\n          <HeadToHead\n            className={\"PreviousMatchStats\"}\n            homeTeam={home}\n            awayTeam={away}\n            stadium={match.data.stadium_name}\n            matches={match.data.h2h.previous_matches_results.totalMatches}\n            homeWins={match.data.h2h.previous_matches_results.team_a_wins}\n            awayWins={match.data.h2h.previous_matches_results.team_b_wins}\n            draws={match.data.h2h.previous_matches_results.draw}\n            averageGoals={match.data.h2h.betting_stats.avg_goals}\n            lastGameStadiumName=\"N/A\"\n            lastGameHomeGoals=\"previous\"\n            lastGameAwayGoals=\"match\"\n            lastGameHomeTeam=\"No\"\n            lastGameAwayTeam=\"data\"\n            lastGameDate=\"\"\n            secondToLastGameStadiumName=\"N/A\"\n            secondToLastGameHomeGoals=\"previous\"\n            secondToLastGameAwayGoals=\"match\"\n            secondToLastGameHomeTeam=\"No\"\n            secondToLastGameAwayTeam=\"data\"\n            secondToLastGameDate=\"\"\n          ></HeadToHead>\n          <CustomizedTables\n            o15Stat={match.data.h2h.betting_stats.over15Percentage}\n            o15Forecast={match.data.o15_potential}\n            o15Odds={match.data.odds_ft_over15}\n            o25Stat={match.data.h2h.betting_stats.over25Percentage}\n            o25Forecast={match.data.o25_potential}\n            o25Odds={match.data.odds_ft_over25}\n            BTTSStat={match.data.h2h.betting_stats.bttsPercentage}\n            BTTSForecast={match.data.btts_potential}\n            BTTSOdds={match.data.odds_btts_yes}\n            CornersStat={\"–\"}\n            CornersForecast={match.data.corners_potential}\n            CornersOdds={match.data.odds_corners_over_105}\n          />\n        </Fragment>,\n        document.getElementById(`H2HStats${identifier}`)\n      );\n    }\n\n\n  });\n}\n","import React, { Component, Fragment } from \"react\";\nimport { getNewTips } from \"../logic/getScorePredictions\"\nimport {allTips} from \"../logic/getScorePredictions\"\nexport var incrementValue = 3;\n\nexport var riskLevel = 10;\n\nclass Increment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      incrementValue,\n      riskLevel,\n      show: true,\n    };\n  }\n\n  IncrementItem = () => {\n    if(incrementValue > 1){\n    this.setState({ incrementValue: this.state.incrementValue - 1 });\n    this.setState({ riskLevel: this.state.riskLevel - 1 });\n    incrementValue = (this.state.incrementValue - 1);\n    riskLevel = this.state.riskLevel - 1;\n    }\n    getNewTips(allTips)\n  };\n  DecreaseItem = () => {\n    if(incrementValue > 0){\n      this.setState({ incrementValue: this.state.incrementValue + 1 });\n      this.setState({ riskLevel: this.state.riskLevel + 1 });\n      incrementValue = (this.state.incrementValue + 1);\n      riskLevel = this.state.riskLevel + 1;\n    }\n    getNewTips(allTips)\n  };\n\n  render() {\n    return (\n      <Fragment>\n          <button className=\"IncrementButton\" onClick={this.IncrementItem}>\n            -\n          </button>\n          <button className=\"DecrementButton\" onClick={this.DecreaseItem}>\n            +\n          </button>\n      </Fragment>\n\n    );\n  }\n}\n\nexport default Increment;\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { matches, diff } from \"./getFixtures\";\nimport { Fixture } from \"../components/Fixture\";\nimport Div from \"../components/Div\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { allForm } from \"../logic/getFixtures\";\nimport Increment from \"../components/Increment\";\nimport { incrementValue } from \"../components/Increment\";\nimport { getBTTSPotential } from \"../logic/getBTTSPotential\";\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nlet finalHomeGoals;\nlet finalAwayGoals;\nlet rawFinalHomeGoals;\nlet rawFinalAwayGoals;\nlet homeOdds;\nlet awayOdds;\nlet totalGoals = 0;\nlet totalGoals2 = 0;\nlet numberOfGames = 0;\nlet drawPredictions = 0;\nlet homePredictions = 0;\nlet awayPredictions = 0;\nlet allOutcomes = 0;\nlet homeOutcomes = 0;\nlet awayOutcomes = 0;\nlet winAmount = 0;\nlet lossAmount = 0;\nlet sumStatDAWin = 0;\nlet sumStatDALoss = 0;\nlet sumStatPossessionWin = 0;\nlet sumStatPossessionLoss = 0;\nlet sumStatSOTWin = 0;\nlet sumStatSOTLoss = 0;\nlet sumStatPPGLast10Win = 0;\nlet sumStatPPGLast10Loss = 0;\nlet sumOddsWin = 0;\nlet sumOddsLoss = 0;\nlet sumXGForWin = 0;\nlet sumXGForLoss = 0;\nlet sumXGAgainstWin = 0;\nlet sumXGAgainstLoss = 0;\nlet allWinOutcomes = 0;\nlet allLossOutcomes = 0;\nlet allDrawOutcomes = 0;\nlet winDAAverage;\nlet lossDAAverage;\nlet winOddsAverage;\nlet lossOddsAverage;\nlet winPossessionAverage;\nlet lossPossessionAverage;\nlet winLast10PPGAverage;\nlet lossLast10PPGAverage;\nlet winSOTAverage;\nlet lossSOTAverage;\nlet winXGForAverage;\nlet lossXGForAverage;\nlet winXGAgainstAverage;\nlet lossXGAgainstAverage;\n\nexport var renderPredictions;\n\nexport function getPointsFromLastX(lastX) {\n  let points = 0;\n  let pointsAddition;\n\n  lastX.forEach((game) => {\n    switch (true) {\n      case game === \"W\":\n        pointsAddition = 3;\n        break;\n      case game === \"D\":\n        pointsAddition = 1;\n        break;\n      case game === \"L\":\n        pointsAddition = 0;\n        break;\n      default:\n        break;\n    }\n\n    points = points + pointsAddition;\n  });\n  return points;\n}\n\nexport async function compareStat(statOne, statTwo) {\n  let stat1 = parseFloat(statOne);\n  let stat2 = parseFloat(statTwo);\n  let result;\n  let homePoints;\n  let awayPoints;\n  let gap;\n  let statOneNotZero = stat1 + 0.1;\n  let statTwoNotZero = stat2 + 0.1;\n\n  if (stat1 > stat2) {\n    gap = statOneNotZero / statTwoNotZero;\n  } else if (stat1 < stat2) {\n    gap = statTwoNotZero / statOneNotZero;\n  } else {\n    gap = 0;\n  }\n\n  if (gap >= 2) {\n    switch (true) {\n      case stat1 === stat2:\n        result = 0;\n        homePoints = 0;\n        awayPoints = 0;\n        break;\n      case stat1 > stat2:\n        result = 0.2;\n        homePoints = 2;\n        awayPoints = -0.2;\n        break;\n      case stat1 < stat2:\n        result = -0.2;\n        homePoints = -0.2;\n        awayPoints = 2;\n        break;\n      default:\n        break;\n    }\n  } else if (gap >= 1.6 && gap < 2) {\n    switch (true) {\n      case stat1 === stat2:\n        result = 0;\n        homePoints = 0;\n        awayPoints = 0;\n        break;\n      case stat1 > stat2:\n        result = 0.15;\n        homePoints = 1;\n        awayPoints = 0;\n        break;\n      case stat1 < stat2:\n        result = -0.15;\n        homePoints = 0;\n        awayPoints = 1;\n        break;\n      default:\n        break;\n    }\n  } else if (gap >= 1.3 && gap < 1.6) {\n    switch (true) {\n      case stat1 === stat2:\n        result = 0;\n        homePoints = 0;\n        awayPoints = 0;\n        break;\n      case stat1 > stat2:\n        result = 0.1;\n        homePoints = 1;\n        awayPoints = 0;\n        break;\n      case stat1 < stat2:\n        result = -0.1;\n        homePoints = 0;\n        awayPoints = 1;\n        break;\n      default:\n        break;\n    }\n  } else if (gap >= 1.1 && gap < 1.3) {\n    switch (true) {\n      case stat1 === stat2:\n        result = 0;\n        homePoints = 0;\n        awayPoints = 0;\n        break;\n      case stat1 > stat2:\n        result = 0.05;\n        homePoints = 1;\n        awayPoints = 0;\n        break;\n      case stat1 < stat2:\n        result = -0.05;\n        homePoints = 0;\n        awayPoints = 1;\n        break;\n      default:\n        break;\n    }\n  }\n  // else if (gap > 1.2 && gap < 1.3) {\n  //   switch (true) {\n  //     case stat1 === stat2:\n  //       result = 0;\n  //       homePoints = 0;\n  //       awayPoints = 0;\n  //       break;\n  //     case stat1 > stat2:\n  //       result = 0.5;\n  //       homePoints = 0.2;\n  //       awayPoints = 0.1;\n  //       break;\n  //     case stat1 < stat2:\n  //       result = -0.5;\n  //       homePoints = 0.1;\n  //       awayPoints = 0.2;\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  // }\n  else {\n    result = 0;\n    homePoints = 0;\n    awayPoints = 0;\n  }\n\n  return [result, homePoints, awayPoints];\n}\n\nexport async function getOverOrUnderAchievingResult(\n  index,\n  overUnderAchievingSum\n) {\n  let result;\n  let correction;\n\n  switch (true) {\n    case index === 0:\n      switch (true) {\n        case overUnderAchievingSum <= -1.2:\n          result = \"Overachieving drastically\";\n          correction = -0.4;\n          break;\n        case overUnderAchievingSum < -0.45 && overUnderAchievingSum > -1.2:\n          result = \"Overachieving\";\n          correction = -0.2;\n          break;\n        case overUnderAchievingSum < -0.1 && overUnderAchievingSum >= -0.45:\n          result = \"Overachieving slightly\";\n          correction = -0.1;\n          break;\n        case overUnderAchievingSum > 0.1 && overUnderAchievingSum <= 0.45:\n          result = \"Underachieving slightly\";\n          correction = 0.1;\n          break;\n        case overUnderAchievingSum > 0.45 && overUnderAchievingSum < 1.2:\n          result = \"Underachieving\";\n          correction = 0.2;\n          break;\n        case overUnderAchievingSum >= 1.2:\n          result = \"Underachieving drastically\";\n          correction = 0.4;\n          break;\n        default:\n          result = \"onPar\";\n          correction = 0;\n          break;\n      }\n\n      break;\n\n    case index === 1:\n      switch (true) {\n        case overUnderAchievingSum <= -0.9:\n          result = \"Overachieving drastically\";\n          correction = -0.4;\n          break;\n        case overUnderAchievingSum < -0.45 && overUnderAchievingSum > -0.9:\n          result = \"Overachieving\";\n          correction = -0.2;\n          break;\n        case overUnderAchievingSum < -0.1 && overUnderAchievingSum >= -0.45:\n          result = \"Overachieving slightly\";\n          correction = -0.1;\n          break;\n        case overUnderAchievingSum > 0.1 && overUnderAchievingSum <= 0.45:\n          result = \"Underachieving slightly\";\n          correction = 0.1;\n          break;\n        case overUnderAchievingSum > 0.45 && overUnderAchievingSum < 0.9:\n          result = \"Underachieving\";\n          correction = 0.2;\n          break;\n        case overUnderAchievingSum >= 0.9:\n          result = \"Underachieving drastically\";\n          correction = 0.4;\n          break;\n        default:\n          result = \"onPar\";\n          correction = 0;\n          break;\n      }\n\n      break;\n\n    case index === 2:\n      switch (true) {\n        case overUnderAchievingSum <= -1:\n          result = \"Overachieving drastically\";\n          correction = -0.4;\n          break;\n        case overUnderAchievingSum < -0.45 && overUnderAchievingSum > -1:\n          result = \"Overachieving\";\n          correction = -0.2;\n          break;\n        case overUnderAchievingSum < -0.2 && overUnderAchievingSum >= -0.45:\n          result = \"Overachieving slightly\";\n          correction = -0.1;\n          break;\n        case overUnderAchievingSum > 0.2 && overUnderAchievingSum <= 0.45:\n          result = \"Underachieving slightly\";\n          correction = 0.1;\n          break;\n        case overUnderAchievingSum > 0.45 && overUnderAchievingSum < 1:\n          result = \"Underachieving\";\n          correction = 0.2;\n          break;\n        case overUnderAchievingSum >= 1:\n          result = \"Underachieving drastically\";\n          correction = 0.4;\n          break;\n        default:\n          result = \"onPar\";\n          correction = 0;\n          break;\n      }\n\n      break;\n    default:\n      break;\n  }\n  return [result, correction];\n}\n\nexport async function getClinicalRating(form) {\n  let rating;\n  let score;\n  switch (true) {\n    case form.dangerousAttackConversion <= 15:\n      rating = \"excellent\";\n      score = 0.8;\n      break;\n\n    case form.dangerousAttackConversion > 15 &&\n      form.dangerousAttackConversion <= 20:\n      rating = \"great\";\n      score = 0.9;\n      break;\n\n    case form.dangerousAttackConversion > 20 &&\n      form.dangerousAttackConversion <= 25:\n      rating = \"very good\";\n      score = 0.95;\n      break;\n\n    case form.dangerousAttackConversion > 25 &&\n      form.dangerousAttackConversion <= 32.5:\n      rating = \"good\";\n      score = 0.98;\n      break;\n\n    case form.dangerousAttackConversion > 30 &&\n      form.dangerousAttackConversion <= 35:\n      rating = \"above average\";\n      score = 0.99;\n      break;\n\n    case form.dangerousAttackConversion > 35 &&\n      form.dangerousAttackConversion <= 40:\n      rating = \"average\";\n      score = 1;\n      break;\n\n    case form.dangerousAttackConversion > 40 &&\n      form.dangerousAttackConversion <= 45:\n      rating = \"below average\";\n      score = 1.01;\n      break;\n\n    case form.dangerousAttackConversion > 45 &&\n      form.dangerousAttackConversion <= 50:\n      rating = \"poor\";\n      score = 1.05;\n      break;\n\n    case form.dangerousAttackConversion > 50 &&\n      form.dangerousAttackConversion <= 55:\n      rating = \"very poor\";\n      score = 1.1;\n      break;\n\n    case form.dangerousAttackConversion > 55 &&\n      form.dangerousAttackConversion <= 60:\n      rating = \"terrible\";\n      score = 1.2;\n      break;\n\n    case form.dangerousAttackConversion > 60:\n      rating = \"awful\";\n      score = 1.3;\n      break;\n\n    default:\n      break;\n  }\n\n  return [rating, score];\n}\n\nexport async function getPointsDifferential(pointsHomeAvg, pointsAwayAvg) {\n  const differential = await diff(pointsHomeAvg, pointsAwayAvg);\n  return parseFloat(differential);\n}\n\nexport async function getPointWeighting(pointsDiff) {\n  let pointsDiffWeightingHome;\n  let pointsDiffWeightingAway;\n\n  switch (true) {\n    case pointsDiff >= 2.5:\n      pointsDiffWeightingHome = 0.6;\n      pointsDiffWeightingAway = -0.1;\n      break;\n    case pointsDiff >= 2 && pointsDiff < 2.5:\n      pointsDiffWeightingHome = 0.4;\n      pointsDiffWeightingAway = -0.1;\n      break;\n    case pointsDiff >= 1.5 && pointsDiff < 2:\n      pointsDiffWeightingHome = 0.3;\n      pointsDiffWeightingAway = -0.1;\n      break;\n    case pointsDiff >= 1 && pointsDiff < 1.5:\n      pointsDiffWeightingHome = 0.2;\n      pointsDiffWeightingAway = 0;\n      break;\n    case pointsDiff >= 0.5 && pointsDiff < 1:\n      pointsDiffWeightingHome = 0.1;\n      pointsDiffWeightingAway = 0;\n      break;\n    case pointsDiff > -0.5 && pointsDiff < 0.5:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n      break;\n    case pointsDiff <= -0.5 && pointsDiff > -1:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0.1;\n      break;\n    case pointsDiff <= -1 && pointsDiff > -1.5:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0.2;\n      break;\n    case pointsDiff <= -1.5 && pointsDiff > -2:\n      pointsDiffWeightingHome = -0.1;\n      pointsDiffWeightingAway = 0.3;\n      break;\n    case pointsDiff <= -2 && pointsDiff > -2.5:\n      pointsDiffWeightingHome = -0.1;\n      pointsDiffWeightingAway = 0.4;\n      break;\n    case pointsDiff <= -2.5:\n      pointsDiffWeightingHome = -0.1;\n      pointsDiffWeightingAway = 0.6;\n      break;\n    default:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n  }\n  return [pointsDiffWeightingHome, pointsDiffWeightingAway];\n}\n\nexport async function compareFormTrend(\n  threeGameAverage,\n  fiveGameAverage,\n  sixGameAverage,\n  tenGameAverage,\n  recentGoalDiff,\n  distantGoalDiff\n) {\n  let score;\n\n  if (fiveGameAverage > 2.5) {\n    switch (true) {\n      case fiveGameAverage > tenGameAverage:\n        score = 20;\n        break;\n      case fiveGameAverage === tenGameAverage:\n        score = 19;\n        break;\n      case fiveGameAverage < tenGameAverage:\n        score = 15;\n        break;\n      default:\n        break;\n    }\n  } else if (fiveGameAverage <= 2.5 && fiveGameAverage > 2) {\n    switch (true) {\n      case fiveGameAverage > tenGameAverage:\n        score = 17;\n        break;\n      case fiveGameAverage === tenGameAverage:\n        score = 16;\n        break;\n      case fiveGameAverage < tenGameAverage:\n        score = 14;\n        break;\n      default:\n        break;\n    }\n  } else if (fiveGameAverage <= 2 && fiveGameAverage > 1.5) {\n    switch (true) {\n      case fiveGameAverage > tenGameAverage:\n        score = 14;\n        break;\n      case fiveGameAverage === tenGameAverage:\n        score = 13;\n        break;\n      case fiveGameAverage < tenGameAverage:\n        score = 11;\n        break;\n      default:\n        break;\n    }\n    if (fiveGameAverage + 1 < tenGameAverage) {\n      score = score - 2;\n    }\n  } else if (fiveGameAverage <= 1.5 && fiveGameAverage > 1) {\n    switch (true) {\n      case fiveGameAverage > tenGameAverage:\n        score = 11;\n        break;\n      case fiveGameAverage === tenGameAverage:\n        score = 10;\n        break;\n      case fiveGameAverage < tenGameAverage:\n        score = 8;\n        break;\n      default:\n        break;\n    }\n    if (fiveGameAverage + 1 < tenGameAverage) {\n      score = score - 2;\n    }\n  } else if (fiveGameAverage <= 1 && fiveGameAverage > 0.5) {\n    switch (true) {\n      case fiveGameAverage > tenGameAverage:\n        score = 8;\n        break;\n      case fiveGameAverage === tenGameAverage:\n        score = 7;\n        break;\n      case fiveGameAverage < tenGameAverage:\n        score = 3;\n        break;\n      default:\n        break;\n    }\n    if (fiveGameAverage + 1 < tenGameAverage) {\n      score = score - 2;\n    }\n  } else if (fiveGameAverage <= 0.5) {\n    switch (true) {\n      case fiveGameAverage > tenGameAverage:\n        score = 3;\n        break;\n      case fiveGameAverage === tenGameAverage:\n        score = 2;\n        break;\n      case fiveGameAverage < tenGameAverage:\n        score = 1;\n        break;\n      default:\n        break;\n    }\n    // if (fiveGameAverage + 1 < tenGameAverage) {\n    //   score = 1;\n    // }\n  }\n\n  // if (fiveGameAverage > 1) {\n  //   if (\n  //     threeGameAverage >= sixGameAverage &&\n  //     sixGameAverage >= tenGameAverage\n  //   ) {\n  //     improving = true;\n  //   } else if (recentGoalDiff < distantGoalDiff) {\n  //     improving = false;\n  //   } else if (recentGoalDiff - 1 > distantGoalDiff) {\n  //     improving = true;\n  //   } else {\n  //     improving = false;\n  //   }\n  // }\n\n  return score;\n}\n\nexport async function getPointAverage(pointTotal, games) {\n  return pointTotal / games;\n}\n\nexport async function compareTeams(homeForm, awayForm, match) {\n  let sotComparisonHOrA;\n  let sotComparison;\n  let CleanSheetPercentageComparison;\n  let dangerousAttackConversionComparison;\n  let goalsPerDangerousAttackComparison;\n  let dangerousAttacksComparisonHOrA;\n  let dangerousAttacksComparison;\n  let XGdifferentialComparison;\n  let formTrendScoreComparison;\n  let last10PointsComparison;\n  let twoGameAverageComparison;\n  let fiveGameAverageComparison;\n  let tenGameAverageComparison;\n  let seasonPPGComparison;\n  let attackingPotencyComparison;\n  let AveragePossessionComparisonHOrA;\n  let AveragePossessionComparison;\n  let positionComparison;\n  let winPercentageComparison;\n  let lossPercentageComparison;\n  let OddsComparison;\n  let homeOrAwayAverageComparison;\n  let overUnderAchievingSumComparison;\n  let goalDiffComparison;\n  let goalDiffHOrAComparison;\n\n  let homePoints = 0;\n  let awayPoints = 0;\n  let homePointsToAdd;\n  let awayPointsToAdd;\n\n  if (\n    homeForm.overUnderAchievingSum < -0.5 ||\n    awayForm.overUnderAchievingSum < -0.5 ||\n    homeForm.overUnderAchievingSum > 0.5 ||\n    awayForm.overUnderAchievingSum > 0.5\n  ) {\n    [overUnderAchievingSumComparison, homePointsToAdd, awayPointsToAdd] =\n      await compareStat(\n        parseFloat(homeForm.overUnderAchievingSum),\n        parseFloat(awayForm.overUnderAchievingSum)\n      );\n    homePoints = homePoints + homePointsToAdd;\n    awayPoints = awayPoints + awayPointsToAdd;\n  } else {\n    overUnderAchievingSumComparison = 0;\n  }\n\n  [sotComparisonHOrA, homePointsToAdd, awayPointsToAdd] = await compareStat(\n    homeForm.AverageShotsOnTarget,\n    awayForm.AverageShotsOnTarget\n  );\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [sotComparison, homePointsToAdd, awayPointsToAdd] = await compareStat(\n    homeForm.AverageShotsOnTargetOverall,\n    awayForm.AverageShotsOnTargetOverall\n  );\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [CleanSheetPercentageComparison, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(\n      homeForm.CleanSheetPercentage,\n      awayForm.CleanSheetPercentage\n    );\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [dangerousAttackConversionComparison, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(\n      awayForm.dangerousAttackConversion,\n      homeForm.dangerousAttackConversion\n    );\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [goalsPerDangerousAttackComparison, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(\n      homeForm.goalsPerDangerousAttack,\n      awayForm.goalsPerDangerousAttack\n    );\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [dangerousAttacksComparisonHOrA, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(\n      homeForm.AverageDangerousAttacks,\n      awayForm.AverageDangerousAttacks\n    );\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [dangerousAttacksComparison, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(\n      homeForm.AverageDangerousAttacksOverall,\n      awayForm.AverageDangerousAttacksOverall\n    );\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [XGdifferentialComparison, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(homeForm.XGdifferential, awayForm.XGdifferential);\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [formTrendScoreComparison, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(homeForm.formTrendScore, awayForm.formTrendScore);\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [last10PointsComparison, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(homeForm.last10Points, awayForm.last10Points);\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [twoGameAverageComparison, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(homeForm.twoGameAverage, awayForm.twoGameAverage);\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [fiveGameAverageComparison, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(homeForm.fiveGameAverage, awayForm.fiveGameAverage);\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [tenGameAverageComparison, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(homeForm.tenGameAverage, awayForm.tenGameAverage);\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  if (homeForm.SeasonPPG !== \"N/A\" && awayForm.SeasonPPG !== \"N/A\") {\n    [seasonPPGComparison, homePointsToAdd, awayPointsToAdd] = await compareStat(\n      parseFloat(homeForm.SeasonPPG),\n      parseFloat(awayForm.SeasonPPG)\n    );\n  } else seasonPPGComparison = last10PointsComparison;\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [attackingPotencyComparison, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(homeForm.AttackingPotency, awayForm.AttackingPotency);\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [AveragePossessionComparisonHOrA, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(\n      homeForm.AveragePossession - 10,\n      awayForm.AveragePossession - 10\n    );\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  console.log(homeForm.goalDifference + \" & \" + awayForm.goalDifference);\n\n  [goalDiffComparison, homePointsToAdd, awayPointsToAdd] = await compareStat(\n    homeForm.goalDifference + 20,\n    awayForm.goalDifference + 20\n  );\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [goalDiffHOrAComparison, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(\n      homeForm.goalDifferenceHomeOrAway + 20,\n      awayForm.goalDifferenceHomeOrAway + 20\n    );\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [AveragePossessionComparison, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(\n      homeForm.AveragePossessionOverall - 10,\n      awayForm.AveragePossessionOverall - 10\n    );\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  if (\n    typeof awayForm.awayPositionAwayOnly === \"number\" &&\n    typeof homeForm.homePositionHomeOnly === \"number\"\n  ) {\n    [positionComparison, homePointsToAdd, awayPointsToAdd] = await compareStat(\n      awayForm.awayPositionAwayOnly + awayForm.awayPosition + 10,\n      homeForm.homePositionHomeOnly + homeForm.homePosition + 10\n    );\n  } else {\n    [positionComparison, homePointsToAdd, awayPointsToAdd] = await compareStat(\n      homeForm.tenGameAverage,\n      awayForm.tenGameAverage\n    );\n  }\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  let winPercH;\n  let winPercA;\n  let drawPercH;\n  let drawPercA;\n  let lossPercH;\n  let lossPercA;\n\n  if (homeForm.WinPercentage !== undefined) {\n    [winPercentageComparison, homePointsToAdd, awayPointsToAdd] =\n      await compareStat(\n        homeForm.WinPercentage + 40,\n        awayForm.WinPercentage + 40\n      );\n    winPercH = homeForm.WinPercentage;\n    winPercA = awayForm.WinPercentage;\n    drawPercH = homeForm.DrawPercentage;\n    drawPercA = awayForm.DrawPercentage;\n  } else {\n    [winPercentageComparison, homePointsToAdd, awayPointsToAdd] =\n      await compareStat(\n        match.homeTeamWinPercentage + 40,\n        match.awayTeamWinPercentage + 40\n      );\n    winPercH = match.homeTeamWinPercentage;\n    winPercA = match.awayTeamWinPercentage;\n    drawPercH = match.homeTeamDrawPercentage;\n    drawPercA = match.awayTeamDrawPercentage;\n  }\n\n  if (homeForm.LossPercentage !== undefined) {\n    [lossPercentageComparison, homePointsToAdd, awayPointsToAdd] =\n      await compareStat(\n        awayForm.LossPercentage + 40,\n        homeForm.LossPercentage + 40\n      );\n    lossPercA = awayForm.LossPercentage;\n    lossPercH = homeForm.LossPercentage;\n  } else {\n    [lossPercentageComparison, homePointsToAdd, awayPointsToAdd] =\n      await compareStat(\n        match.awayTeamLossPercentage + 40,\n        match.homeTeamLossPercentage + 40\n      );\n    lossPercA = match.awayTeamLossPercentage;\n    lossPercH = match.homeTeamLossPercentage;\n  }\n\n  [OddsComparison, homePointsToAdd, awayPointsToAdd] = await compareStat(\n    match.awayOdds,\n    match.homeOdds\n  );\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  if (homeForm.homeOrAwayAverage) {\n    [homeOrAwayAverageComparison, homePointsToAdd, awayPointsToAdd] =\n      await compareStat(\n        homeForm.homeOrAwayAverage + 1,\n        awayForm.homeOrAwayAverage + 1\n      );\n\n    homePoints = homePoints + homePointsToAdd;\n    awayPoints = awayPoints + awayPointsToAdd;\n  } else {\n    [homeOrAwayAverageComparison, homePointsToAdd, awayPointsToAdd] =\n      await compareStat(1, 1);\n\n    homePoints = homePoints + homePointsToAdd;\n    awayPoints = awayPoints + awayPointsToAdd;\n  }\n\n  let calculation =\n    OddsComparison * 1 +\n    positionComparison * 2 +\n    twoGameAverageComparison * 3 +\n    tenGameAverageComparison * 6 +\n    XGdifferentialComparison * 6 +\n    seasonPPGComparison * 0 +\n    formTrendScoreComparison * 0 +\n    fiveGameAverageComparison * 0 +\n    dangerousAttacksComparisonHOrA * 0 +\n    dangerousAttacksComparison * 1 +\n    sotComparison * 0 +\n    sotComparisonHOrA * 1 +\n    CleanSheetPercentageComparison * 1 +\n    dangerousAttackConversionComparison * 0 +\n    goalsPerDangerousAttackComparison * 0 +\n    attackingPotencyComparison * 0 +\n    AveragePossessionComparison * 0 +\n    AveragePossessionComparisonHOrA * 0 +\n    winPercentageComparison * 1 +\n    lossPercentageComparison * 1 +\n    homeOrAwayAverageComparison * 1 +\n    overUnderAchievingSumComparison * 4 +\n    goalDiffComparison * 4 +\n    goalDiffHOrAComparison * 3;\n\n  match.homePoints = homePoints;\n  match.awayPoints = awayPoints;\n\n  // if ((calculation > 0) && homeForm.overUnderAchievingSum < 0) {\n  //   calculation = -Math.abs(calculation)\n  // } else if((calculation < 0) && awayForm.overUnderAchievingSum < 0){\n  //   calculation = Math.abs(calculation)\n  // }\n\n  // adjust calculation based on worse team's win and draw percentages\n  if (calculation > 0) {\n    switch (true) {\n      case winPercA + drawPercA === 100:\n        // console.log(match.game)\n        // console.log(match)\n        // console.log(homeForm)\n        // console.log(awayForm)\n        calculation = calculation / 9;\n        break;\n      case winPercA + drawPercA >= 90 && winPercA + drawPercA < 100:\n        calculation = calculation / 8;\n        break;\n      case winPercA + drawPercA >= 80 && winPercA + drawPercA < 90:\n        calculation = calculation / 7;\n        break;\n      case winPercA + drawPercA >= 70 && winPercA + drawPercA < 80:\n        calculation = calculation / 6;\n        break;\n      case winPercA + drawPercA >= 60 && winPercA + drawPercA < 70:\n        calculation = calculation / 5;\n        break;\n      case winPercA + drawPercA >= 50 && winPercA + drawPercA < 60:\n        calculation = calculation / 4;\n        break;\n      case winPercA + drawPercA >= 40 && winPercA + drawPercA < 50:\n        calculation = calculation / 1.5;\n        break;\n      case winPercA + drawPercA >= 30 && winPercA + drawPercA < 40:\n        calculation = calculation / 1.25;\n        break;\n      case winPercA + drawPercA >= 20 && winPercA + drawPercA < 30:\n        calculation = calculation / 1;\n        break;\n      case winPercA + drawPercA >= 10 && winPercA + drawPercA < 20:\n        calculation = calculation * 2;\n        break;\n      case winPercA + drawPercA >= 0 && winPercA + drawPercA < 10:\n        calculation = calculation * 2.5;\n        break;\n      default:\n        break;\n    }\n  } else if (calculation < 0) {\n    switch (true) {\n      case winPercH + drawPercH === 100:\n        calculation = calculation / 9;\n        break;\n      case winPercH + drawPercH >= 90 && winPercH + drawPercH < 100:\n        calculation = calculation / 8;\n        break;\n      case winPercH + drawPercH >= 80 && winPercH + drawPercH < 90:\n        calculation = calculation / 7;\n        break;\n      case winPercH + drawPercH >= 70 && winPercH + drawPercH < 80:\n        calculation = calculation / 6;\n        break;\n      case winPercH + drawPercH >= 60 && winPercH + drawPercH < 70:\n        calculation = calculation / 5;\n        break;\n      case winPercH + drawPercH >= 50 && winPercH + drawPercH < 60:\n        calculation = calculation / 4;\n        break;\n      case winPercH + drawPercH >= 40 && winPercH + drawPercH < 50:\n        calculation = calculation / 1.5;\n        break;\n      case winPercH + drawPercH >= 30 && winPercH + drawPercH < 40:\n        calculation = calculation / 1.25;\n        break;\n      case winPercH + drawPercH >= 20 && winPercH + drawPercH < 30:\n        calculation = calculation * 1;\n        break;\n      case winPercH + drawPercH >= 10 && winPercH + drawPercH < 20:\n        calculation = calculation * 2;\n        break;\n      case winPercH + drawPercH >= 0 && winPercH + drawPercH < 10:\n        calculation = calculation * 2.5;\n        break;\n      default:\n        break;\n    }\n  }\n\n  // adjust calculation based on better team's win and draw percentages\n  if (calculation > 0) {\n    switch (true) {\n      case winPercH >= 90 && winPercH <= 100:\n        calculation = calculation * 4;\n        break;\n      case winPercH >= 80 && winPercH < 90:\n        calculation = calculation * 3;\n        break;\n      case winPercH >= 70 && winPercH < 80:\n        calculation = calculation * 2.5;\n        break;\n      case winPercH >= 60 && winPercH < 70:\n        calculation = calculation * 2;\n        break;\n      case winPercH >= 50 && winPercH < 60:\n        calculation = calculation * 1.5;\n        break;\n      case winPercH >= 40 && winPercH < 50:\n        calculation = calculation * 1.25;\n        break;\n      case winPercH >= 30 && winPercH < 40:\n        calculation = calculation * 1;\n        break;\n      case winPercH >= 20 && winPercH < 30:\n        calculation = calculation * 0.75;\n        break;\n      case winPercH >= 10 && winPercH < 20:\n        calculation = calculation * 0.5;\n        break;\n      case winPercH >= 0 && winPercH < 10:\n        calculation = calculation * 0.25;\n        break;\n      default:\n        break;\n    }\n  } else if (calculation < 0) {\n    switch (true) {\n      case winPercA >= 90 && winPercA <= 100:\n        calculation = calculation * 4;\n        break;\n      case winPercA >= 80 && winPercA < 90:\n        calculation = calculation * 3;\n        break;\n      case winPercA >= 70 && winPercA < 80:\n        calculation = calculation * 2.5;\n        break;\n      case winPercA >= 60 && winPercA < 70:\n        calculation = calculation * 2;\n        break;\n      case winPercA >= 50 && winPercA < 60:\n        calculation = calculation * 1.5;\n        break;\n      case winPercA >= 40 && winPercA < 50:\n        calculation = calculation * 1.25;\n        break;\n      case winPercA >= 30 && winPercA < 40:\n        calculation = calculation * 1;\n        break;\n      case winPercA >= 20 && winPercA < 30:\n        calculation = calculation * 0.75;\n        break;\n      case winPercA >= 10 && winPercA < 20:\n        calculation = calculation * 0.5;\n        break;\n      case winPercA >= 0 && winPercA < 10:\n        calculation = calculation * 0.25;\n        break;\n      default:\n        break;\n    }\n  }\n\n  if (calculation > 0) {\n    switch (true) {\n      case homeForm.last2Points < 1:\n        calculation = calculation / 7.5;\n        break;\n      case homeForm.last2Points < 3 && homeForm.last2Points >= 1:\n        calculation = calculation / 2;\n        break;\n      default:\n        break;\n    }\n  } else if (calculation < 0) {\n    switch (true) {\n      case awayForm.last2Points < 1:\n        calculation = calculation / 7.5;\n        break;\n      case awayForm.last2Points < 3 && awayForm.last2Points >= 1:\n        calculation = calculation / 2;\n        break;\n      default:\n        break;\n    }\n  }\n\n  return [calculation, homePoints, awayPoints];\n}\n\nexport async function roundCustom(num, form, otherForm) {\n  let wholeNumber = Math.floor(num);\n  let remainder = num - wholeNumber;\n\n  if (wholeNumber !== 0) {\n    // if (form.clinicalScore < 1) {\n    //   return Math.round(num);\n    // }\n    if (\n      form.overUnderAchievingSumAttack > 0.25 &&\n      otherForm.overUnderAchievingSumDefence < -0.25\n    ) {\n      return Math.ceil(num);\n    } else if (\n      form.overUnderAchievingSumAttack < -0.25 &&\n      otherForm.overUnderAchievingSumDefence > 0.25\n    ) {\n      return Math.floor(num);\n    } else if (remainder > 0.75) {\n      return Math.ceil(num);\n    } else {\n      return Math.floor(num);\n    }\n  } else if (wholeNumber === 0) {\n    // if (form.clinicalScore < 1) {\n    //   return Math.round(num);\n    // }\n    if (\n      form.overUnderAchievingSumAttack > 0.25 &&\n      otherForm.overUnderAchievingSumDefence < -0.25\n    ) {\n      return Math.ceil(num);\n    } else if (\n      form.overUnderAchievingSumAttack < -0.25 &&\n      otherForm.overUnderAchievingSumDefence > 0.25\n    ) {\n      return Math.floor(num);\n    } else if (remainder > 0.75) {\n      return Math.ceil(num);\n    } else {\n      return Math.floor(num);\n    }\n  } else {\n    return Math.floor(num);\n  }\n}\n\n//Calculates scores based on prior XG figures, weighted by odds\nexport async function calculateScore(match, index, divider, id) {\n  let homeRaw;\n  let awayRaw;\n\n  let teams;\n  let calculate = true;\n\n  if (\n    allForm.find(\n      (game) =>\n        game.home.teamName === match.homeTeam &&\n        game.away.teamName === match.awayTeam\n    )\n  ) {\n    teams = [\n      allForm.find((game) => game.home.teamName === match.homeTeam).home,\n      allForm.find((game) => game.away.teamName === match.awayTeam).away,\n    ];\n  } else {\n    calculate = false;\n  }\n\n  let formHome;\n  let formAway;\n\n  if (calculate) {\n    for (let i = 0; i < teams.length; i++) {\n      if (teams[0][index].PlayedHome <= 1 || teams[1][index].PlayedAway <= 1) {\n        index = 2;\n        divider = 10;\n      }\n\n      teams[i][index].lastGame = teams[i][index].LastFiveForm[4];\n      teams[i][index].previousToLastGame = teams[i][index].LastFiveForm[3];\n\n      let last2 = [\n        teams[i][index].lastGame,\n        teams[i][index].previousToLastGame,\n      ];\n      let last3 = [\n        teams[i][index].lastGame,\n        teams[i][index].previousToLastGame,\n        teams[i][index].LastFiveForm[2],\n      ];\n\n      teams[i][index].last5Points = getPointsFromLastX(\n        teams[i][index].LastFiveForm\n      );\n\n      teams[i][index].last6Points = getPointsFromLastX(\n        teams[i][index].LastSixForm\n      );\n\n      teams[i][index].last10Points = getPointsFromLastX(\n        teams[i][index].LastTenForm\n      );\n\n      teams[i][index].last3Points = getPointsFromLastX(last3);\n\n      teams[i][index].last2Points = getPointsFromLastX(last2);\n\n      teams[i][index].twoGameAverage = await getPointAverage(\n        teams[i][index].last2Points,\n        2\n      );\n      teams[i][index].threeGameAverage = await getPointAverage(\n        teams[i][index].last3Points,\n        3\n      );\n      teams[i][index].fiveGameAverage = await getPointAverage(\n        teams[i][index].last5Points,\n        5\n      );\n      teams[i][index].sixGameAverage = await getPointAverage(\n        teams[i][index].last6Points,\n        6\n      );\n      teams[i][index].tenGameAverage = await getPointAverage(\n        teams[i][index].last10Points,\n        10\n      );\n\n      if (teams[i][index].formRun) {\n        teams[i][index].lastHomeOrAwayPoints = getPointsFromLastX(\n          teams[i][index].formRun\n        );\n\n        teams[i][index].homeOrAwayAverage = await getPointAverage(\n          teams[i][index].lastHomeOrAwayPoints,\n          teams[i][index].formRun.length\n        );\n      }\n\n      let scoredAverageNotZero = 0.01;\n      let conceededAverageNotZero = 0.01;\n\n      if (teams[i][index].ScoredAverage === 0) {\n        teams[i][index].ScoredAverage = scoredAverageNotZero;\n        teams[i][0].ScoredOverall = scoredAverageNotZero;\n      }\n\n      if (teams[i][index].ConcededAverage === 0) {\n        teams[i][index].ConcededAverage = conceededAverageNotZero;\n        teams[i][0].ConcededOverall = conceededAverageNotZero;\n      }\n\n      teams[i][index].ScoredAverageShortTerm = teams[i][0].ScoredOverall / 5;\n      teams[i][index].ScoredAverageLongTermHomeOrAway =\n        teams[i][2].ScoredAverage;\n      teams[i][index].ConcededAverageShortTerm =\n        teams[i][0].ConcededOverall / 5;\n      teams[i][index].ConcededAverageLongTermHomeOrAway =\n        teams[i][2].ConcededAverage;\n\n      teams[i][index].longTermAverageGoals = teams[i][2].ScoredAverage;\n      teams[i][index].longTermAverageConceeded = teams[i][2].ConcededAverage;\n\n      let recentGoalDiff =\n        teams[i][index].ScoredAverageShortTerm -\n        teams[i][index].ConcededAverageShortTerm;\n      let distantGoalDiff =\n        teams[i][index].longTermAverageGoals -\n        teams[i][index].longTermAverageConceeded;\n\n      teams[i][index].formTrendScore = await compareFormTrend(\n        teams[i][index].threeGameAverage,\n        teams[i][index].fiveGameAverage,\n        teams[i][index].sixGameAverage,\n        teams[i][index].tenGameAverage,\n        teams[i][index].lastGame,\n        recentGoalDiff,\n        distantGoalDiff\n      );\n\n      teams[i][index].expectedGoals = parseFloat(teams[i][index].XG);\n      teams[i][index].expectedGoalsConceeded = parseFloat(\n        teams[i][index].XGAgainstAverage\n      );\n\n      teams[i][index].expectedGoalsLongTerm = parseFloat(teams[i][2].XG);\n\n      teams[i][index].expectedConceededGoalsLongTerm = parseFloat(\n        teams[i][index].XGAgainstAverage\n      );\n\n      teams[i][index].ScoredAverageShortAndLongTerm =\n        (teams[i][index].ScoredOverall / 10 +\n          teams[i][index].ScoredAverageShortTerm) /\n        2;\n\n      teams[i][index].expectedGoalsShortAndLongTerm =\n        (teams[i][index].expectedGoalsLongTerm +\n          teams[i][index].expectedGoals) /\n        2;\n\n      teams[i][index].conceededAverageShortAndLongTerm =\n        (teams[i][index].ConcededOverall / 10 +\n          teams[i][index].ConcededAverageShortTerm) /\n        2;\n\n      teams[i][index].finishingScore = parseFloat(\n        teams[i][index].XG - teams[i][index].ScoredAverage\n      );\n\n      teams[i][index].goalieRating = parseFloat(\n        teams[i][index].ConcededAverage - teams[i][index].XGAgainstAverage\n      );\n\n      let goalOverOrUnderAchieving = parseFloat(\n        await diff(teams[i][index].finishingScore, 0)\n      );\n\n      let concededOverOrUnderAchieving = parseFloat(\n        await diff(teams[i][index].goalieRating, 0)\n      );\n\n      teams[i][index].overUnderAchievingSumAttack = goalOverOrUnderAchieving;\n\n      teams[i][index].overUnderAchievingSumDefence =\n        concededOverOrUnderAchieving;\n\n      teams[i][index].overUnderAchievingSum =\n        goalOverOrUnderAchieving + concededOverOrUnderAchieving;\n\n      teams[i][index].forecastedXG = parseFloat(teams[i][index].ScoredAverage);\n\n      teams[i][index].forecastedXGConceded = parseFloat(\n        teams[i][index].ConcededAverage\n      );\n\n      teams[0][index].goalsBasedOnAverages = parseFloat(\n        (teams[0][index].forecastedXG + teams[1][index].forecastedXGConceded) /\n          2\n      );\n\n      teams[1][index].goalsBasedOnAverages = parseFloat(\n        (teams[1][index].forecastedXG + teams[0][index].forecastedXGConceded) /\n          2\n      );\n\n      teams[i][index].XGdifferential =\n        teams[i][index].XGOverall - teams[i][index].XGAgainstAvgOverall;\n\n      switch (true) {\n        case teams[i][index].XGdifferential > 1:\n          teams[i][index].XGWeighting = 6;\n          break;\n        case teams[i][index].XGdifferential <= 1 &&\n          teams[i][index].XGdifferential > 0.5:\n          teams[i][index].XGWeighting = 5;\n          break;\n        case teams[i][index].XGdifferential <= 0.5 &&\n          teams[i][index].XGdifferential > 0:\n          teams[i][index].XGWeighting = 4;\n          break;\n        case teams[i][index].XGdifferential >= -0.5 &&\n          teams[i][index].XGdifferential < 0:\n          teams[i][index].XGWeighting = 3;\n          break;\n        case teams[i][index].XGdifferential >= -1 &&\n          teams[i][index].XGdifferential < -0.5:\n          teams[i][index].XGWeighting = 2;\n          break;\n        case teams[i][index].XGdifferential < -1:\n          teams[i][index].XGWeighting = 1;\n          break;\n        default:\n          teams[i][index].XGWeighting = 1;\n          break;\n      }\n\n      if (\n        teams[i][0].XGOverall > teams[i][2].XGOverall &&\n        teams[i][0].XGAgainstAvgOverall < teams[i][2].XGAgainstAvgOverall\n      ) {\n        teams[i][index].improving = true;\n      }\n\n      if (\n        teams[i][0].XGOverall < teams[i][2].XGOverall &&\n        teams[i][0].XGAgainstAvgOverall > teams[i][2].XGAgainstAvgOverall\n      ) {\n        teams[i][index].improving = false;\n      }\n    }\n\n    homeOdds = match.homeOdds;\n    awayOdds = match.awayOdds;\n\n    if (\n      (match.homeOdds === 0 && match.awayOdds === 0) ||\n      (match.homeOdds === \"N/A\" && match.awayOdds === \"N/A\")\n    ) {\n      homeRaw = 1.0;\n      awayRaw = 1.0;\n    } else {\n      homeRaw = (1 / match.homeOdds).toFixed(2);\n      awayRaw = (1 / match.awayOdds).toFixed(2);\n    }\n\n    formHome = teams[0][index];\n    formAway = teams[1][index];\n\n    [formHome.overOrUnderAttack, formHome.trueFormAttack] =\n      await getOverOrUnderAchievingResult(\n        index,\n        formHome.overUnderAchievingSumAttack\n      );\n\n    [formHome.overOrUnderDefence, formHome.trueFormDefence] =\n      await getOverOrUnderAchievingResult(\n        index,\n        formHome.overUnderAchievingSumDefence\n      );\n\n    [formAway.overOrUnderAttack, formAway.trueFormAttack] =\n      await getOverOrUnderAchievingResult(\n        index,\n        formAway.overUnderAchievingSumAttack\n      );\n\n    [formAway.overOrUnderDefence, formAway.trueFormDefence] =\n      await getOverOrUnderAchievingResult(\n        index,\n        formAway.overUnderAchievingSumDefence\n      );\n\n    let homeTenGameAvg = formHome.last10Points / 10;\n    let awayTenGameAvg = formAway.last10Points / 10;\n\n    let pointsDiff10 = await getPointsDifferential(\n      homeTenGameAvg,\n      awayTenGameAvg\n    );\n\n    let [last10WeightingHome, last10WeightingAway] = await getPointWeighting(\n      pointsDiff10\n    );\n\n    formHome.dangerousAttackConversion =\n      formHome.AverageDangerousAttacks / formHome.ScoredAverageShortAndLongTerm;\n    formAway.dangerousAttackConversion =\n      formAway.AverageDangerousAttacks / formAway.ScoredAverageShortAndLongTerm;\n\n    formHome.goalsPerDangerousAttack =\n      formHome.ScoredAverageShortAndLongTerm / formHome.AverageDangerousAttacks;\n    formAway.goalsPerDangerousAttack =\n      formAway.ScoredAverageShortAndLongTerm / formAway.AverageDangerousAttacks;\n\n    [formHome.clinicalRating, formHome.clinicalScore] = await getClinicalRating(\n      formHome\n    );\n    [formAway.clinicalRating, formAway.clinicalScore] = await getClinicalRating(\n      formAway\n    );\n\n    let oddsWeightingHome;\n    let oddsWeightingAway;\n    let homeWeighting;\n    let awayWeighting;\n\n    let weightingSplitHome;\n    let weightingSplitAway;\n    let weighting;\n\n    if (homeRaw > 0) {\n      oddsWeightingHome = homeRaw - awayRaw;\n      oddsWeightingAway = awayRaw - homeRaw;\n\n      weighting = await diff(oddsWeightingHome, oddsWeightingAway);\n\n      if (weighting >= 0) {\n        weightingSplitHome = Math.abs(weighting) / 2;\n        weightingSplitAway = -Math.abs(weighting) / 2;\n      } else if (weighting < 0) {\n        weightingSplitHome = -Math.abs(weighting) / 2;\n        weightingSplitAway = Math.abs(weighting) / 2;\n      } else {\n        weightingSplitHome = 1;\n        weightingSplitAway = 1;\n      }\n    } else {\n      weightingSplitHome = 1;\n      weightingSplitAway = 1;\n    }\n\n    homeWeighting = weightingSplitHome * 0;\n    awayWeighting = weightingSplitAway * 0;\n\n    let homeCalculation;\n    let awayCalculation;\n\n    let XGdifferential = await diff(\n      formHome.XGdifferential,\n      formAway.XGdifferential\n    );\n\n    if (XGdifferential > 0.8 || XGdifferential < -1.6) {\n      match.XGdifferential = true;\n      match.XGdifferentialValue = Math.abs(XGdifferential);\n      match.XGdifferentialValueRaw = parseFloat(XGdifferential);\n    } else {\n      match.XGdifferential = false;\n      match.XGdifferentialValue = Math.abs(XGdifferential);\n      match.XGdifferentialValueRaw = parseFloat(XGdifferential);\n    }\n\n    if (\n      typeof formHome.homeTeamHomePositionRaw === \"number\" &&\n      typeof formAway.awayTeamAwayPositionRaw === \"number\"\n    ) {\n      formHome.homePositionHomeOnly = parseFloat(\n        formHome.homeTeamHomePositionRaw\n      );\n      formAway.awayPositionAwayOnly = parseFloat(\n        formAway.awayTeamAwayPositionRaw\n      );\n      formHome.homePosition = parseFloat(formHome.homeRawPosition);\n      formAway.awayPosition = parseFloat(formAway.awayRawPosition);\n    } else {\n      formHome.homePositionHomeOnly = \"N/A\";\n      formAway.awayPositionAwayOnly = \"N/A\";\n      formHome.homePosition = \"N/A\";\n      formAway.awayPosition = \"N/A\";\n    }\n\n    if (homeWeighting > 0.25) {\n      homeCalculation = 1.15;\n      awayCalculation = 0.85;\n    } else if (homeWeighting < -0.25) {\n      homeCalculation = 0.15;\n      awayCalculation = 1.85;\n    } else {\n      homeCalculation = parseFloat(1 + homeWeighting);\n      awayCalculation = parseFloat(1 + awayWeighting);\n    }\n\n    formHome.AttackingPotency = (formHome.XG / formHome.AttacksHome) * 100;\n    formAway.AttackingPotency = (formAway.XG / formAway.AttacksAverage) * 100;\n\n    let teamComparisonScore;\n    let homePoints;\n    let awayPoints;\n\n    [teamComparisonScore, homePoints, awayPoints] = await compareTeams(\n      formHome,\n      formAway,\n      match\n    );\n    teamComparisonScore = teamComparisonScore * 1;\n    if (teamComparisonScore > 1.8) {\n      teamComparisonScore = 1.8;\n    } else if (teamComparisonScore < -1.8) {\n      teamComparisonScore = -1.8;\n    }\n\n    match.teamComparisonScore = teamComparisonScore;\n\n    let finalHomeGoals;\n    let finalAwayGoals;\n\n    const homeGoalDiff =\n      formHome.ScoredAverageShortAndLongTerm -\n      formHome.conceededAverageShortAndLongTerm;\n    const awayGoalDiff =\n      formAway.ScoredAverageShortAndLongTerm -\n      formAway.conceededAverageShortAndLongTerm;\n\n    formHome.goalsDifferential =\n      parseFloat(await diff(homeGoalDiff, awayGoalDiff)) / 1;\n    formAway.goalsDifferential =\n      parseFloat(await diff(awayGoalDiff, homeGoalDiff)) / 1;\n\n    let goalCalcHomeOnly =\n      (formHome.ScoredAverageLongTermHomeOrAway +\n        formAway.ConcededAverageLongTermHomeOrAway) /\n      2;\n    let goalCalcAwayOnly =\n      (formAway.ScoredAverageLongTermHomeOrAway +\n        formHome.ConcededAverageLongTermHomeOrAway) /\n      2;\n\n    let goalCalcHomeShortTerm =\n      (formHome.ScoredAverageShortTerm + formAway.ConcededAverageShortTerm) / 2;\n    let goalCalcAwayShortTerm =\n      (formAway.ScoredAverageShortTerm + formHome.ConcededAverageShortTerm) / 2;\n\n    let goalCalcHomeShortAndLongTerm =\n      (formHome.ScoredAverageShortAndLongTerm +\n        formAway.conceededAverageShortAndLongTerm) /\n      2;\n    let goalCalcAwayShortAndLongTerm =\n      (formAway.ScoredAverageShortAndLongTerm +\n        formHome.conceededAverageShortAndLongTerm) /\n      2;\n\n    let factorOneHome =\n      (goalCalcHomeShortTerm * 1 +\n        goalCalcHomeShortAndLongTerm * 1 +\n        goalCalcHomeOnly * 1 +\n        formAway.expectedConceededGoalsLongTerm * 0.5 +\n        formHome.expectedGoalsLongTerm * 0.5 +\n        formAway.ConcededAverageShortTerm * 0 +\n        last10WeightingHome * 0 +\n        formHome.goalsDifferential * 0) /\n      4;\n\n    let factorOneAway =\n      (goalCalcAwayShortTerm * 1 +\n        goalCalcAwayShortAndLongTerm * 1 +\n        goalCalcAwayOnly * 1 +\n        formHome.expectedConceededGoalsLongTerm * 0.5 +\n        formAway.expectedGoalsLongTerm * 0.5 +\n        formHome.ConcededAverageShortTerm * 0 +\n        last10WeightingAway * 0 +\n        formAway.goalsDifferential * 0) /\n      4;\n\n    let homeComparisonWeighting;\n    let awayComparisonWeighting;\n    match.scoreDiff = await diff(factorOneHome, factorOneAway);\n\n    if (teamComparisonScore > 0) {\n      homeComparisonWeighting = 1 + teamComparisonScore;\n      awayComparisonWeighting = 1 - teamComparisonScore;\n    } else if (teamComparisonScore < 0) {\n      homeComparisonWeighting = 1 + teamComparisonScore;\n      awayComparisonWeighting = 1 - teamComparisonScore;\n    } else {\n      homeComparisonWeighting = 1;\n      awayComparisonWeighting = 1;\n    }\n\n    let isHomeTeamBetterHomeOrAway = await diff(\n      formHome.homePosition,\n      formHome.homeTeamHomePositionRaw\n    );\n    let isAwayTeamBetterHomeOrAway = await diff(\n      formAway.awayPosition,\n      formAway.awayTeamAwayPositionRaw\n    );\n\n    let homeAdvantage, awayAdvantage;\n\n    switch (true) {\n      // case isHomeTeamBetterHomeOrAway > 4 && isAwayTeamBetterHomeOrAway < -4:\n      //   homeAdvantage = 1.04;\n      //   awayAdvantage = 0.96;\n      //   break;\n      // case isHomeTeamBetterHomeOrAway >= 1 && isAwayTeamBetterHomeOrAway <= -1:\n      //   homeAdvantage = 1.02;\n      //   awayAdvantage = 0.98;\n      //   break;\n      default:\n        homeAdvantage = 1;\n        awayAdvantage = 1;\n        break;\n    }\n\n    let experimentalHomeGoals =\n      factorOneHome * 0.8 * homeComparisonWeighting * homeAdvantage;\n\n    let experimentalAwayGoals =\n      factorOneAway * 0.8 * awayComparisonWeighting * awayAdvantage;\n\n    let rawFinalHomeGoals = experimentalHomeGoals;\n    let rawFinalAwayGoals = experimentalAwayGoals;\n\n    match.rawFinalHomeGoals = rawFinalHomeGoals\n    match.rawFinalAwayGoals = rawFinalAwayGoals\n\n\n    if (\n      formHome.CleanSheetPercentage < 20 &&\n      formAway.CleanSheetPercentage < 20\n    ) {\n      rawFinalHomeGoals = rawFinalHomeGoals + 0.5;\n      rawFinalAwayGoals = rawFinalAwayGoals + 0.5;\n    } else if (\n      formHome.CleanSheetPercentage > 65 &&\n      formAway.CleanSheetPercentage > 65\n    ) {\n      rawFinalHomeGoals = rawFinalHomeGoals - 0.5;\n      rawFinalAwayGoals = rawFinalAwayGoals - 0.5;\n    }\n\n    let formTrendScoreComparison;\n\n    if (formAway) {\n      formTrendScoreComparison =\n        formAway.formTrendScore - formHome.formTrendScore;\n    } else {\n      formTrendScoreComparison = 0;\n    }\n\n    let trueFormDiffHome = await diff(\n      formHome.overUnderAchievingSum,\n      formAway.overUnderAchievingSum\n    );\n    let trueFormDiffAway = await diff(\n      formAway.overUnderAchievingSum,\n      formHome.overUnderAchievingSum\n    );\n\n    // if (trueFormDiffHome > 2) {\n    //   rawFinalHomeGoals =\n    //     rawFinalHomeGoals + formHome.expectedGoalsShortAndLongTerm / 4;\n    //   rawFinalAwayGoals = rawFinalAwayGoals + -Math.abs(trueFormDiffAway / 4);\n    // }\n\n    // if (trueFormDiffAway > 2) {\n    //   rawFinalHomeGoals = rawFinalHomeGoals + -Math.abs(trueFormDiffHome / 4);\n    //   rawFinalAwayGoals = rawFinalAwayGoals + trueFormDiffAway / 4;\n    // }\n\n    if (rawFinalAwayGoals < 0) {\n      let difference = parseFloat((await diff(0, rawFinalAwayGoals)) / 5);\n      rawFinalHomeGoals = rawFinalHomeGoals + difference;\n      rawFinalAwayGoals = 0;\n    }\n\n    if (rawFinalHomeGoals < 0) {\n      let difference = parseFloat((await diff(0, rawFinalHomeGoals)) / 5);\n      rawFinalAwayGoals = rawFinalAwayGoals + difference;\n      rawFinalHomeGoals = 0;\n    }\n\n    if (formHome.improving === true && formAway.improving === false) {\n      rawFinalHomeGoals = rawFinalHomeGoals + 0.5;\n      rawFinalAwayGoals = rawFinalAwayGoals - 0.5;\n    } else if (formAway.improving === true && formHome.improving === false) {\n      rawFinalHomeGoals = rawFinalHomeGoals - 0.5;\n      rawFinalAwayGoals = rawFinalAwayGoals + 0.5;\n    }\n\n    if (\n      (rawFinalHomeGoals + 1) / (formHome.ScoredAverage + 1) > 1.2 &&\n      (rawFinalHomeGoals + 1) / (formAway.ConcededAverage + 1) > 1.2\n    ) {\n      rawFinalHomeGoals = rawFinalHomeGoals - 1;\n    } else if (\n      (rawFinalHomeGoals + 1) / (formHome.ScoredAverage + 1) < 0.8 &&\n      (rawFinalHomeGoals + 1) / (formAway.ConcededAverage + 1) < 0.8\n    ) {\n      rawFinalHomeGoals = rawFinalHomeGoals + 1;\n    }\n\n    if (\n      (rawFinalAwayGoals + 1) / (formAway.ScoredAverage + 1) > 1.2 &&\n      (rawFinalAwayGoals + 1) / (formHome.ConcededAverage + 1) > 1.2\n    ) {\n      rawFinalAwayGoals = rawFinalAwayGoals - 1;\n    } else if (\n      (finalAwayGoals + 1) / (formAway.ScoredAverage + 1) < 0.8 &&\n      (finalAwayGoals + 1) / (formHome.ConcededAverage + 1) < 0.8\n    ) {\n      rawFinalAwayGoals = rawFinalAwayGoals + 1;\n    }\n\n    finalHomeGoals = await roundCustom(rawFinalHomeGoals, formHome, formAway);\n    finalAwayGoals = await roundCustom(rawFinalAwayGoals, formAway, formHome);\n\n    // if ((finalHomeGoals + 1) / (formHome.ScoredAverage + 1) > 1.5 && (finalHomeGoals + 1) / (formAway.ConcededAverage + 1) > 1.5) {\n    //   finalHomeGoals = finalHomeGoals - 1;\n    // }\n    // else if ((finalHomeGoals + 1) / (formHome.ScoredAverage + 1) < 0.25 && (finalHomeGoals + 1) / (formAway.ConcededAverage + 1) < 0.25){\n    //   finalHomeGoals = finalHomeGoals + 1;\n    // }\n\n    // if ((finalAwayGoals + 1) / (formAway.ScoredAverage + 1) > 1.5 && (finalAwayGoals + 1) / (formHome.ConcededAverage + 1) > 1.5) {\n    //   finalAwayGoals = finalAwayGoals - 1;\n    // }\n    // else if ((finalAwayGoals + 1) / (formAway.ScoredAverage + 1) < 0.25 && (finalAwayGoals + 1) / (formHome.ConcededAverage + 1) < 0.25){\n    //   finalAwayGoals = finalAwayGoals + 1;\n    // }\n\n    if (finalHomeGoals > 5) {\n      finalHomeGoals = Math.round(\n        (finalHomeGoals + formHome.expectedGoals) / 2\n      );\n    }\n\n    if (finalAwayGoals > 5) {\n      finalAwayGoals = Math.round(\n        (finalAwayGoals + formAway.expectedGoals) / 2\n      );\n    }\n\n    if (finalHomeGoals > finalAwayGoals) {\n      match.prediction = \"homeWin\";\n      homePredictions = homePredictions + 1;\n      if (\n        formHome.lastGame === \"L\" ||\n        formHome.last3Points < 3 ||\n        formAway.lastGame === \"W\" ||\n        match.XGdifferentialValueRaw < 0\n      ) {\n        match.includeInMultis = false;\n      } else {\n        match.includeInMultis = true;\n      }\n    } else if (finalAwayGoals > finalHomeGoals) {\n      match.prediction = \"awayWin\";\n      awayPredictions = awayPredictions + 1;\n      if (\n        formAway.lastGame === \"L\" ||\n        formAway.last3Points < 3 ||\n        formHome.lastGame === \"W\" ||\n        match.XGdifferentialValueRaw > 0\n      ) {\n        match.includeInMultis = false;\n      } else {\n        match.includeInMultis = true;\n      }\n    } else if (finalHomeGoals === finalAwayGoals) {\n      match.prediction = \"draw\";\n      drawPredictions = drawPredictions + 1;\n    }\n\n    switch (true) {\n      case match.homeGoals > match.awayGoals:\n        match.winner = match.homeTeam;\n        match.outcome = \"homeWin\";\n        homeOutcomes = homeOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formHome.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formAway.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formHome.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formAway.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formHome.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formAway.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formHome.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formAway.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += homeOdds;\n        sumOddsLoss = sumOddsLoss += awayOdds;\n\n        sumXGForWin = sumXGForWin += formHome.XGOverall;\n        sumXGForLoss = sumXGForLoss += formAway.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formHome.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formAway.XGAgainstAvgOverall;\n\n        break;\n      case match.homeGoals === match.awayGoals:\n        match.winner = \"draw\";\n        match.outcome = \"draw\";\n        allOutcomes = allOutcomes + 1;\n        allDrawOutcomes = allDrawOutcomes + 1;\n        break;\n      case match.homeGoals < match.awayGoals:\n        match.winner = match.awayTeam;\n        match.outcome = \"awayWin\";\n        allOutcomes = allOutcomes + 1;\n        awayOutcomes = awayOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formAway.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formHome.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formAway.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formHome.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formAway.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formHome.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formAway.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formHome.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += awayOdds;\n        sumOddsLoss = sumOddsLoss += homeOdds;\n\n        sumXGForWin = sumXGForWin += formAway.XGOverall;\n        sumXGForLoss = sumXGForLoss += formHome.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formAway.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formHome.XGAgainstAvgOverall;\n        break;\n      default:\n        break;\n    }\n\n    winDAAverage = (sumStatDAWin / allWinOutcomes).toFixed(2);\n    lossDAAverage = (sumStatDALoss / allLossOutcomes).toFixed(2);\n    winPossessionAverage = (sumStatPossessionWin / allWinOutcomes).toFixed(2);\n    lossPossessionAverage = (sumStatPossessionLoss / allLossOutcomes).toFixed(\n      2\n    );\n    winLast10PPGAverage = (sumStatPPGLast10Win / allWinOutcomes).toFixed(2);\n    lossLast10PPGAverage = (sumStatPPGLast10Loss / allLossOutcomes).toFixed(2);\n    winSOTAverage = (sumStatSOTWin / allWinOutcomes).toFixed(2);\n    lossSOTAverage = (sumStatSOTLoss / allLossOutcomes).toFixed(2);\n    winOddsAverage = (sumOddsWin / allWinOutcomes).toFixed(2);\n    lossOddsAverage = (sumOddsLoss / allLossOutcomes).toFixed(2);\n    winXGForAverage = (sumXGForWin / allWinOutcomes).toFixed(2);\n    lossXGForAverage = (sumXGForLoss / allLossOutcomes).toFixed(2);\n    winXGAgainstAverage = (sumXGAgainstWin / allWinOutcomes).toFixed(2);\n    lossXGAgainstAverage = (sumXGAgainstLoss / allLossOutcomes).toFixed(2);\n\n    if (match.status === \"complete\") {\n      if (match.prediction === match.outcome) {\n        match.predictionOutcome = \"Won\";\n        winAmount = winAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      } else if (match.prediction !== match.outcome) {\n        match.predictionOutcome = \"Lost\";\n        lossAmount = lossAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      }\n    }\n\n    if (match.status === \"complete\") {\n      if (match.predictionOutcome === \"Won\" || match.outcome === \"draw\") {\n        match.doubleChancePredictionOutcome = \"Won\";\n      } else if (match.prediction !== \"Won\" && match.outcome !== \"draw\") {\n        match.doubleChancePredictionOutcome = \"Lost\";\n      }\n    }\n\n    match.formHome = formHome;\n    match.formAway = formAway;\n\n    let total = parseInt(finalHomeGoals + finalAwayGoals);\n    totalGoals = totalGoals + total;\n\n    console.log(`Predicted: ${totalGoals}`);\n\n    let total2 = parseInt(match.homeGoals + match.awayGoals);\n    totalGoals2 = totalGoals2 + total2;\n\n    console.log(`Actual: ${totalGoals2}`);\n\n    numberOfGames = numberOfGames + 1;\n\n    if (finalHomeGoals < 0) {\n      finalHomeGoals = 0;\n    }\n\n    if (finalAwayGoals < 0) {\n      finalAwayGoals = 0;\n    }\n\n    if (match.status === \"suspended\") {\n      finalHomeGoals = \"P\";\n      finalAwayGoals = \"P\";\n    }\n\n    return [\n      finalHomeGoals,\n      finalAwayGoals,\n      rawFinalHomeGoals,\n      rawFinalAwayGoals,\n    ];\n  } else {\n    finalHomeGoals = \"\";\n    finalAwayGoals = \"\";\n    rawFinalHomeGoals = \"\";\n    rawFinalAwayGoals = \"\";\n    match.status = \"void\";\n  }\n\n  return [finalHomeGoals, finalAwayGoals, rawFinalHomeGoals, rawFinalAwayGoals];\n}\n\nasync function getSuccessMeasure(fixtures) {\n  let sumProfit = 0;\n  let investment = 0;\n  let exactScores = 0;\n  let successCount = 0;\n  let netProfit;\n\n  for (let i = 0; i < fixtures.length; i++) {\n    if (fixtures[i].status === \"complete\") {\n      sumProfit = sumProfit + fixtures[i].profit;\n      investment = investment + 1;\n      netProfit = (sumProfit - investment).toFixed(2);\n      if (fixtures[i].exactScore === true) {\n        exactScores = exactScores + 1;\n      }\n      if (fixtures[i].predictionOutcome === \"Won\") {\n        successCount = successCount + 1;\n      }\n    }\n  }\n\n  let ROI = (netProfit / investment) * 100;\n  var operand = ROI >= 0 ? \"+\" : \"\";\n  let exactScoreHitRate = ((exactScores / investment) * 100).toFixed(1);\n  let successRate = ((successCount / investment) * 100).toFixed(1);\n\n  if (investment > 0) {\n    ReactDOM.render(\n      <Fragment>\n        <Div\n          className={\"SuccessMeasure\"}\n          text={`ROI for \n            all ${investment} W/D/W \n            outcomes: ${operand} ${ROI.toFixed(2)}%`}\n        />\n        <p>{`Correct W/D/W predictions: ${successCount} (${successRate}%)`}</p>\n        <p>{`Exact scores predicted: ${exactScores} (${exactScoreHitRate}%)`}</p>\n      </Fragment>,\n      document.getElementById(\"successMeasure\")\n    );\n  } else {\n    return;\n  }\n}\n\nexport var tips = [];\nexport var allTips = [];\nlet allTipsSorted;\nvar newArray = [];\nvar bestBets = [];\nvar price;\nvar longShotTips = [];\nvar XGDiffTips = [];\nvar combinations;\nvar exoticArray = [];\nvar gamesInExotic;\nvar minimumExotic;\nvar exoticStake;\nvar exoticString;\nvar bttsArray = [];\nvar accumulatedOdds = 1;\nlet predictions = [];\n\nexport async function getNewTips(array) {\n  newArray = [];\n  accumulatedOdds = 1;\n\n  if (array.length > 1 && incrementValue > 0) {\n    array.forEach((tip) => {\n      if (\n        array.indexOf(tip) < incrementValue\n        // tip.goalDifferential >= incrementValue && tip.comparisonScore > 0\n      ) {\n        newArray.push(tip);\n        accumulatedOdds = parseFloat(accumulatedOdds) * parseFloat(tip.rawOdds);\n      }\n    });\n  }\n  await renderTips(newArray);\n}\n\nexport async function getScorePrediction(day, mocked) {\n  let mock = mocked;\n  tips = [];\n  bestBets = [];\n  // price = 0\n  bttsArray = [];\n  longShotTips = [];\n  XGDiffTips = [];\n\n  let index = 2;\n  let divider = 10;\n\n  ReactDOM.render(<div />, document.getElementById(\"Buttons\"));\n\n  await Promise.all(\n    matches.map(async (match) => {\n      // if there are no stored predictions, calculate them based on live data\n      if (match) {\n        switch (true) {\n          case match.status === \"canceled\":\n            match.goalsA = \"P\";\n            match.goalsB = \"P\";\n            break;\n          default:\n            [\n              match.goalsA,\n              match.goalsB,\n              match.unroundedGoalsA,\n              match.unroundedGoalsB,\n            ] = await calculateScore(match, index, divider, match.id);\n            break;\n        }\n      } else {\n        [\n          match.goalsA,\n          match.goalsB,\n          match.unroundedGoalsA,\n          match.unroundedGoalsB,\n        ] = await calculateScore(match, index, divider, match.id);\n      }\n\n      await getBTTSPotential(allForm, match, index, match.goalsA, match.goalsB);\n\n      let predictionObject;\n      let longShotPredictionObject;\n      let XGPredictionObject;\n\n      if (\n        (match.unroundedGoalsA - match.unroundedGoalsB > 0.75 &&\n          match.homeOdds !== 0 &&\n          match.fractionHome !== \"N/A\" &&\n          match.includeInMultis !== false) ||\n        (match.XGdifferentialValueRaw > 1.2 && match.includeInMultis !== false)\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.homeOdds < 3\n        ) {\n          predictionObject = {\n            team: `${match.homeTeam} to win`,\n            odds: match.fractionHome,\n            rawOdds: match.homeOdds,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            formTrend: match.formHome.improving,\n            outcome: match.predictionOutcome,\n            goalDifferential: parseFloat(\n              await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n            ),\n            experimentalCalc:\n              (match.unroundedGoalsA - match.unroundedGoalsB) *\n              Math.abs(match.teamComparisonScore),\n            XGdifferentialValue: parseFloat(match.XGdifferentialValue),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formHome.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n\n            if (\n              match.unroundedGoalsA - match.unroundedGoalsB > incrementValue &&\n              match.formHome.improving === true &&\n              match.formAway.improving === false &&\n              predictionObject.rawComparisonScore > 11\n            ) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      } else if (\n        (match.unroundedGoalsB - match.unroundedGoalsA > 1.75 &&\n          match.awayOdds !== 0 &&\n          match.fractionAway !== \"N/A\" &&\n          match.includeInMultis !== false) ||\n        (match.XGdifferentialValueRaw < -1.2 && match.includeInMultis !== false)\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.awayOdds < 3.5\n        ) {\n          predictionObject = {\n            team: `${match.awayTeam} to win`,\n            rawOdds: match.awayOdds,\n            odds: match.fractionAway,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            formTrend: match.formAway.improving,\n            outcome: match.predictionOutcome,\n            goalDifferential: parseFloat(\n              await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n            ),\n            experimentalCalc:\n              (match.unroundedGoalsB - match.unroundedGoalsA) *\n              Math.abs(match.teamComparisonScore),\n            XGdifferentialValue: parseFloat(match.XGdifferentialValue),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formAway.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n            if (\n              match.unroundedGoalsB - match.unroundedGoalsA > 2 &&\n              match.formHome.improving === false &&\n              match.formAway.improving === true &&\n              predictionObject.rawComparisonScore < -11\n            ) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      }\n\n      allTipsSorted = allTips.sort(function (a, b) {\n        let sortByCalcA = a.comparisonScore * a.XGdifferentialValue;\n        let sortByCalcB = b.comparisonScore * b.XGdifferentialValue;\n\n        if (sortByCalcA === sortByCalcB) {\n          return b.XGdifferentialValue - a.XGdifferentialValue;\n        } else {\n          return sortByCalcB > sortByCalcA ? 1 : -1;\n        }\n      });\n\n      bestBets.sort(function (a, b) {\n        if (a.goalDifferential === b.goalDifferential) {\n          return b.comparisonScore - a.comparisonScore;\n        } else {\n          return b.goalDifferential > a.goalDifferential ? 1 : -1;\n        }\n      });\n\n      if (\n        match.btts === true &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        bttsArray.push(match);\n\n        bttsArray.sort(function (a, b) {\n          return b.totalGoals - a.totalGoals;\n        });\n\n      }\n\n      if (\n        match.unroundedGoalsA > match.unroundedGoalsB &&\n        match.homeDoubleChance >= 1.4 &&\n        match.goalsA > match.goalsB\n      ) {\n        longShotPredictionObject = {\n          team: match.homeTeam,\n          decimalOdds: match.homeDoubleChance,\n          rawOdds: match.homeOdds,\n          odds: match.fractionHome,\n          comparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          doubleChanceOutcome: match.doubleChancePredictionOutcome,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        if (\n          match.prediction !== \"draw\" &&\n          longShotPredictionObject.comparisonScore > 0.1\n        ) {\n          longShotTips.push(longShotPredictionObject);\n        }\n      } else if (\n        match.unroundedGoalsA < match.unroundedGoalsB &&\n        match.awayDoubleChance >= 1.4 &&\n        match.goalsB > match.goalsA\n      ) {\n        longShotPredictionObject = {\n          team: match.awayTeam,\n          decimalOdds: match.awayDoubleChance,\n          rawOdds: match.awayOdds,\n          odds: match.fractionAway,\n          comparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          doubleChanceOutcome: match.doubleChancePredictionOutcome,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        if (\n          match.prediction !== \"draw\" &&\n          longShotPredictionObject.comparisonScore < -0.1\n        ) {\n          longShotTips.push(longShotPredictionObject);\n        }\n      }\n\n      longShotTips.sort(function (a, b) {\n        return b.goalDifferential - a.goalDifferential;\n      });\n\n      exoticArray = [];\n      gamesInExotic = 0;\n      exoticStake = 0;\n      exoticString = \"\";\n\n      switch (true) {\n        case XGDiffTips.length >= 10:\n          for (let i = 0; i < 10; i++) {\n            let game = XGDiffTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 10;\n          minimumExotic = 8;\n          exoticStake = 0.1;\n          exoticString = \"45 8-folds, 10 9-folds and 1 10-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case XGDiffTips.length >= 9:\n          for (let i = 0; i < 9; i++) {\n            let game = XGDiffTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 9;\n          minimumExotic = 7;\n          exoticStake = 0.1;\n          exoticString = \"36 7-folds, 9 8-folds and 1 9-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n\n        case XGDiffTips.length >= 8:\n          for (let i = 0; i < 8; i++) {\n            let game = XGDiffTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 8;\n          minimumExotic = 6;\n          exoticStake = 0.1;\n          exoticString = \"28 6-folds, 8 7-folds and 1 8-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case XGDiffTips.length >= 7:\n          for (let i = 0; i < 7; i++) {\n            let game = XGDiffTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 7;\n          minimumExotic = 6;\n          exoticStake = 1;\n          exoticString = \"7 6-folds and 1 7-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case allTips.length >= 10:\n          for (let i = 0; i < 10; i++) {\n            let game = allTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 10;\n          minimumExotic = 8;\n          exoticStake = 0.1;\n          exoticString = \"45 8-folds, 10 9-folds and 1 10-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case allTips.length >= 9:\n          for (let i = 0; i < 9; i++) {\n            let game = allTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 9;\n          minimumExotic = 7;\n          exoticStake = 0.1;\n          exoticString = \"36 7-folds, 9 8-folds and 1 9-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case allTips.length >= 8:\n          for (let i = 0; i < 8; i++) {\n            let game = allTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 8;\n          minimumExotic = 6;\n          exoticStake = 0.1;\n          exoticString = \"28 6-folds, 8 7-folds and 1 8-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case allTips.length >= 7:\n          for (let i = 0; i < 7; i++) {\n            let game = allTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 7;\n          minimumExotic = 6;\n          exoticStake = 1;\n          exoticString = \"7 6-folds and 1 7-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case allTips.length >= 6:\n          for (let i = 0; i < 6; i++) {\n            let game = allTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 6;\n          minimumExotic = 5;\n          exoticStake = 1;\n          exoticString = \"6 5-folds and 1 6-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case allTips.length >= 5:\n          for (let i = 0; i < 5; i++) {\n            let game = allTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 5;\n          minimumExotic = 4;\n          exoticStake = 1;\n          exoticString = \"5 4-folds and 1 5-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case longShotTips.length >= 4:\n          for (let i = 0; i < 4; i++) {\n            let game = longShotTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 4;\n          minimumExotic = 3;\n          exoticStake = 1;\n          exoticString = \"4 3-folds and 1 4-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        default:\n          break;\n      }\n\n      if (match.XGdifferential === true && match.prediction === \"homeWin\") {\n        XGPredictionObject = {\n          game: match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          formTrend: match.formHome.improving,\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          XGdifferentialValue: match.XGdifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n          experimentalCalc:\n          (match.unroundedGoalsA - match.unroundedGoalsB) *\n          Math.abs(match.teamComparisonScore),\n        };\n        XGDiffTips.push(XGPredictionObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\"\n      ) {\n        XGPredictionObject = {\n          game: match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          formTrend: match.formAway.improving,\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          XGdifferentialValue: match.XGdifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n          experimentalCalc:\n          (match.unroundedGoalsB - match.unroundedGoalsA) *\n          Math.abs(match.teamComparisonScore),\n        };\n        XGDiffTips.push(XGPredictionObject);\n      }\n\n      XGDiffTips.sort(function (a, b) {\n        return b.XGdifferentialValue - a.XGdifferentialValue;\n      });\n\n      if (mock !== true) {\n        ReactDOM.render(\n          <Fixture\n            fixtures={matches}\n            result={true}\n            mock={mock}\n            className={`individualFixture`}\n          />,\n          document.getElementById(\"FixtureContainer\")\n        );\n      } else if (mock === true) {\n        ReactDOM.render(\n          <Fixture\n            fixtures={matches}\n            result={true}\n            mock={mock}\n            className={\"individualFixture\"}\n          />,\n          document.getElementById(\"FixtureContainer\")\n        );\n      }\n\n      predictions.push(match);\n    })\n  );\n  await getSuccessMeasure(matches);\n\n  await getNewTips(allTipsSorted);\n\n  // await renderTips();\n}\n\nexport function getAccumulatorPrice(priceArray) {\n  var result = 1;\n  for (var i = 0; i < priceArray.length; i++)\n    result = result * priceArray[i].rawOdds;\n\n  return result;\n}\n\nexport function getCoverBetMaxReturns(priceArray, minAccSize, stake) {\n  var total = 0;\n  combinations = 0;\n\n  for (var i = minAccSize; i <= priceArray.length; i++) {\n    var perms = getUniquePermutations(priceArray, i);\n    combinations = combinations + perms.length;\n\n    for (var j = 0; j < perms.length; j++)\n      total += getAccumulatorPrice(perms[j]) * stake;\n  }\n  return parseFloat(total.toFixed(2));\n}\n\nfunction getUniquePermutations(arr, permLength) {\n  if (arr.length <= permLength) return [arr];\n\n  var permutations = [];\n  var newArr = [];\n\n  newArr = arr.slice(0);\n\n  for (var i = 0; i < arr.length; i++) {\n    newArr = arr.slice(0);\n    newArr.splice(i, 1);\n    permutations = twoDimArrayUnion(\n      permutations,\n      getUniquePermutations(newArr, permLength)\n    );\n  }\n  return permutations;\n}\n\nfunction twoDimArrayUnion(arr1, arr2) {\n  for (var i = 0; i < arr2.length; i++) {\n    var duplicate = false;\n\n    for (var j = 0; j < arr1.length; j++)\n      if (arr1[j].length === arr2[i].length)\n        for (var k = 0; k < arr1[j].length; k++)\n          if (arr1[j][k] !== arr2[i][k]) break;\n          else if (k === arr1[j].length - 1) duplicate = true;\n\n    if (!duplicate) arr1.push(arr2[i]);\n  }\n\n  return arr1;\n}\n\nfunction NewlineText(props) {\n  const text = props.text;\n  const newText = text.split(\"\\n\").map((str) => <p>{str}</p>);\n\n  return newText;\n}\n\nasync function renderTips() {\n  if (newArray.length > 0) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            className={\"PredictionsOfTheDay\"}\n            text={\n              <ul className=\"BestPredictions\">\n                <div className=\"BestPredictionsExplainer\">\n                  Add or remove a selection using the buttons below. Predictions\n                  are ordered by confidence in the outcome.\n                </div>\n                {newArray.map((tip) => (\n                  <li className={tip.outcome} key={tip.team}>\n                    {tip.team}: {tip.odds}\n                  </li>\n                ))}\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            className={\"PredictionsOfTheDay\"}\n            text={\n              <ul className=\"BestPredictions\">\n                <div className=\"BestPredictionsExplainer\">\n                  No games fit the criteria (try tapping the + button)\n                </div>\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  }\n\n  if (exoticArray.length > 4) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Exotic of the day\"}\n            className={\"PredictionsOfTheDay\"}\n            text={\n              <ul className=\"BestPredictions\">\n                <div className=\"BestPredictionsExplainer\">\n                  <NewlineText\n                    text={`${gamesInExotic} games: ${exoticString}\\nStake per multi: ${exoticStake} units - ${combinations} combinations\\nTotal stake: ${(\n                      exoticStake * combinations\n                    ).toFixed(2)} unit(s)`}\n                  />\n                  {`Potential winnings: ${price.toFixed(2)} units`}\n                </div>\n                {exoticArray.map((tip) => (\n                  <li className={tip.outcome} key={tip.team}>\n                    {tip.team}: {tip.odds}\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Exotic of the day\"}\n            className={\"PredictionsOfTheDay\"}\n            text={\n              <ul className=\"BestPredictions\">\n                <div className=\"BestPredictionsExplainer\">\n                  Not enough games for this feature\n                </div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  }\n\n  if (longShotTips.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Double chance tips\"}\n            text={\n              <ul className=\"LongshotPredictions\">\n                <lh>Double chance (Win or Draw - decimal odds only)</lh>\n                {longShotTips.map((tip) => (\n                  <li className={`${tip.doubleChanceOutcome}1`} key={tip.team}>\n                    {tip.team} to win or draw: {tip.decimalOdds}\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Double chance tips\"}\n            text={\n              <ul className=\"LongshotPredictions\">\n                <lh>No games fit the criteria</lh>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  }\n\n  if (XGDiffTips.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"XG Tips\"}\n            text={\n              <ul className=\"XGDiffTips\">\n                <lh>Games with greatest XG Differentials</lh>\n                {XGDiffTips.map((tip) => (\n                  <li className={tip.outcome} key={tip.game}>\n                    {tip.game} | {tip.prediction} {tip.odds}\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"draws\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"XG Tips\"}\n            text={\n              <ul className=\"XGDiffTips\">\n                <lh>No games fit the criteria</lh>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"draws\")\n    );\n  }\n\n  if (bttsArray.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            className={\"BTTSGames\"}\n            buttonText={\"BTTS games\"}\n            text={\n              <ul className=\"BTTSGames\">\n                <lh>Games with highest chance of BTTS</lh>\n                {bttsArray.map((game) => (\n                  <li className={game.bttsOutcome} key={game.game}>\n                    {`${game.game} odds: ${game.bttsFraction}`}\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            className={\"BTTSGames\"}\n            buttonText={\"BTTS games\"}\n            text={\n              <ul className=\"BTTSGames\">\n                <lh>No games fit the criteria</lh>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  }\n\n  if (allWinOutcomes > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Insights\"}\n            text={\n              <div>\n                <lh className=\"InsightsExplainer\">\n                  Average stats for winning/losing teams prior to this gameweek\n                </lh>\n                <div className=\"InsightsContainer\">\n                  <ul className=\"InsightsHome\">\n                    <lh className=\"WinningTeams\">Winning teams</lh>\n                    <li>{winOddsAverage} odds</li>\n                    <li>{winXGForAverage} XG For</li>\n                    <li>{winXGAgainstAverage} XG Against</li>\n                    <li>{winLast10PPGAverage} ppg (last 10)</li>\n                    <li>{winPossessionAverage}% possession</li>\n                    <li>{winSOTAverage} shots on target</li>\n                    <li>{winDAAverage} dangerous attacks</li>\n                  </ul>\n                  <ul className=\"InsightsAway\">\n                    <lh className=\"LosingTeams\">Losing teams</lh>\n                    <li>{lossOddsAverage} odds</li>\n                    <li>{lossXGForAverage} XG For</li>\n                    <li>{lossXGAgainstAverage} XG Against</li>\n                    <li>{lossLast10PPGAverage} ppg (last 10)</li>\n                    <li>{lossPossessionAverage}% possession</li>\n                    <li>{lossSOTAverage} shots on target</li>\n                    <li>{lossDAAverage} dangerous attacks</li>\n                  </ul>\n                </div>\n              </div>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"insights\")\n    );\n  }\n\n  // ReactDOM.render(\n  //   <div className=\"pointsGapExplainer\">\n  //     * games with greatest XG differentials\n  //   </div>,\n  //   document.getElementById(\"XGDiff\")\n  // );\n}\n","export async function getBTTSPotential(allForm, match, index, homeGoals, awayGoals) {\n\n  let homeTeam = match.homeTeam;\n  let awayTeam = match.awayTeam;\n\n\n  let home = allForm.findIndex(function (item, i) {\n    return item.home.teamName === homeTeam;\n  });\n\n  let away = allForm.findIndex(function (item, i) {\n    return item.away.teamName === awayTeam;\n  });\n  if(home !== -1 && away !== -1){\n\n\n  let homeBTTS = allForm[home].home[index].BTTSPercentage;\n  let awayBTTS = allForm[away].away[index].BTTSPercentage;\n  let homeG = homeGoals;\n  let awayG = awayGoals;\n\n  let homeGoalsScoredAverage = allForm[home].home[index].ScoredAverage\n  let awayGoalsScoredAverage = allForm[away].away[index].ScoredAverage\n\n  let homeGoalsConceededAverage = allForm[home].home[index].ConcededAverage\n  let awayGoalsConceededAverage = allForm[away].away[index].ConcededAverage\n\n  let homeXG = allForm[home].home[index].XGOverall;\n  let awayXG = allForm[away].away[index].XGOverall;\n\n  let homeXGAgainst = allForm[home].home[index].XGAgainstAverage;\n  let awayXGAgainst = allForm[away].away[index].XGAgainstAverage;\n\n  let homeGoalsAveragedOut = (homeGoalsScoredAverage + homeXG) / 2\n  let awayGoalsAveragedOut = (awayGoalsScoredAverage + awayXG) / 2 \n\n  let homeGoalsConceededAveragedOut = (homeGoalsConceededAverage + homeXGAgainst) / 2\n  let awayGoalsConceededAveragedOut = (awayGoalsConceededAverage + awayXGAgainst) / 2\n\n  match.combinedBTTS = (homeBTTS + awayBTTS) / 2;\n\nif(match.bttsFraction !== \"N/A\" && match.status !== \"suspended\" && match.status !== \"canceled\"){\n  if (\n    match.combinedBTTS > 60 &&\n    match.awayOdds < 3.5 &&\n    match.awayOdds > 1.4 &&\n    // homeGoalsAveragedOut > 1 &&\n    // awayGoalsAveragedOut > 1 &&\n    // homeGoalsConceededAveragedOut > 1 &&\n    // awayGoalsConceededAveragedOut > 1 &&\n    homeXG >= 1.1 &&\n    awayXG >= 1.1 &&\n    homeG >= 1 &&\n    awayG >= 1\n  ) {\n    match.btts = true;\n    match.bttsChosen = true;\n    match.totalGoals = match.rawFinalHomeGoals + match.rawFinalAwayGoals\n  } else {\n    match.btts = false;\n    match.bttsChosen = false;\n  }\n}\n  \n  }\n  return match;\n}\n\n","import ReactDOM from \"react-dom\";\nimport { Button } from \"../components/Button\";\nimport Stats from \"../components/createStatsDiv\";\nimport Div from \"../components/Div\";\nimport { allForm } from \"../logic/getFixtures\";\nimport { getTeamStats } from \"../logic/getTeamStats\";\nimport { getPointsFromLastX } from \"../logic/getScorePredictions\";\n\nlet testBool;\n\nexport async function createStatsDiv(game, mock) {\n  if (game.status !== \"void\") {\n    let bool = mock;\n\n    if (bool !== true) {\n      let radioSelected = 10;\n\n      function toggle() {\n        testBool = testBool ? false : true;\n        if (testBool === true) {\n          // set stats element to display flex\n          return { display: \"block\" };\n        } else {\n          // set stats element to display none\n          return { display: \"none\" };\n        }\n      }\n\n      let style = toggle();\n\n      let index;\n      let divider;\n      if (radioSelected === 5) {\n        index = 0;\n        divider = 5;\n      } else if (radioSelected === 6) {\n        index = 1;\n        divider = 6;\n      } else if (radioSelected === 10) {\n        index = 2;\n        divider = 10;\n      }\n\n      let gameStats = allForm.find((match) => match.id === game.id);\n\n      let homeTeam = gameStats.home.teamName;\n      let awayTeam = gameStats.away.teamName;\n\n      let time = game.time;\n\n      gameStats.home[index].last5Points = getPointsFromLastX(\n        gameStats.home[index].LastFiveForm\n      );\n\n      gameStats.home[index].last6Points = getPointsFromLastX(\n        gameStats.home[index].LastSixForm\n      );\n\n      gameStats.home[index].last10Points = getPointsFromLastX(\n        gameStats.home[index].LastTenForm\n      );\n\n      gameStats.away[index].last5Points = getPointsFromLastX(\n        gameStats.away[index].LastFiveForm\n      );\n\n      gameStats.away[index].last6Points = getPointsFromLastX(\n        gameStats.away[index].LastSixForm\n      );\n\n      gameStats.away[index].last10Points = getPointsFromLastX(\n        gameStats.away[index].LastTenForm\n      );\n\n      async function getPointAverage(pointTotal, games) {\n        return pointTotal / games;\n      }\n\n      let homeFiveGameAverage = await getPointAverage(\n        gameStats.home[index].last5Points,\n        5\n      );\n      let homeSixGameAverage = await getPointAverage(\n        gameStats.home[index].last6Points,\n        6\n      );\n      let homeTenGameAverage = await getPointAverage(\n        gameStats.home[index].last10Points,\n        10\n      );\n\n      let awayFiveGameAverage = await getPointAverage(\n        gameStats.away[index].last5Points,\n        5\n      );\n      let awaySixGameAverage = await getPointAverage(\n        gameStats.away[index].last6Points,\n        6\n      );\n      let awayTenGameAverage = await getPointAverage(\n        gameStats.away[index].last10Points,\n        10\n      );\n\n      async function getLastGameResult(lastGame) {\n        let text;\n        switch (true) {\n          case lastGame === \"L\":\n            text = \"Lost\";\n            break;\n          case lastGame === \"D\":\n            text = \"Drew\";\n            break;\n          case lastGame === \"W\":\n            text = \"Won\";\n            break;\n          default:\n            break;\n        }\n        return text;\n      }\n\n      async function compareFormTrend(five, six, ten) {\n        let text;\n        if (five >= 2.5) {\n          switch (true) {\n            case five > six && six > ten:\n              text =\n                \"Outstanding recent form with solid improvement over last 10 games\";\n              break;\n            case five > six && six < ten:\n              text =\n                \"Outstanding recent form which has improved with some inconsistency over last 10 games\";\n              break;\n            case five === six && six > ten:\n              text =\n                \"Outstanding recent form with most improvement in the last 6\";\n              break;\n            case five === six && six < ten:\n              text = \"Outstanding recent form with a slight dip in the last 6\";\n              break;\n            case five === six && six === ten:\n              text = \"Consistently outstanding form over the last 10\";\n              break;\n            case five < six && six === ten:\n              text =\n                \"Outstanding recent form but slightly worsening in the last 5\";\n              break;\n            case five < six && six > ten:\n              text =\n                \"Outstanding recent form but slightly fluctuating over the last 10\";\n              break;\n            case five < six && six < ten:\n              text = \"Outstanding recent form but beginning to worsen recently\";\n              break;\n            default:\n              break;\n          }\n        } else if (five < 2.5 && five >= 2) {\n          switch (true) {\n            case five > six && six > ten:\n              text =\n                \"Very good recent form with solid improvement over last 10 games\";\n              break;\n            case five > six && six < ten:\n              text =\n                \"Very good recent form which has improved with some inconsistency over last 10 games\";\n              break;\n            case five === six && six > ten:\n              text =\n                \"Very good recent form with most improvement in the last 6\";\n              break;\n            case five === six && six < ten:\n              text = \"Very good recent form with a slight dip in the last 6\";\n              break;\n            case five === six && six === ten:\n              text = \"Very good outstanding form over the last 10\";\n              break;\n            case five < six && six === ten:\n              text =\n                \"Very good recent form but slightly worsening in the last 5\";\n              break;\n            case five < six && six > ten:\n              text =\n                \"Very good recent form but slightly fluctuating over the last 10\";\n              break;\n            case five < six && six < ten:\n              text = \"Very good recent form but beginning to worsen recently\";\n              break;\n            default:\n              break;\n          }\n        } else if (five < 2 && five >= 1.5) {\n          switch (true) {\n            case five > six && six > ten:\n              text =\n                \"Good recent form with solid improvement over last 10 games\";\n              break;\n            case five > six && six < ten:\n              text =\n                \"Good recent form which has improved with some inconsistency over last 10 games\";\n              break;\n            case five === six && six > ten:\n              text = \"Good recent form with most improvement in the last 6\";\n              break;\n            case five === six && six < ten:\n              text = \"Good recent form with a slight dip in the last 6\";\n              break;\n            case five === six && six === ten:\n              text = \"Good outstanding form over the last 10\";\n              break;\n            case five < six && six === ten:\n              text = \"Good recent form but slightly worsening in the last 5\";\n              break;\n            case five < six && six > ten:\n              text =\n                \"Good recent form but slightly fluctuating over the last 10\";\n              break;\n            case five < six && six < ten:\n              text = \"Good recent form but worsening consistently\";\n              break;\n            default:\n              break;\n          }\n        } else if (five < 1.5 && five >= 1) {\n          switch (true) {\n            case five > six && six > ten:\n              text =\n                \"Average recent form with solid improvement over last 10 games\";\n              break;\n            case five > six && six < ten:\n              text =\n                \"Average recent form which has improved with some inconsistency over last 10 games\";\n              break;\n            case five === six && six > ten:\n              text = \"Average recent form with most improvement in the last 6\";\n              break;\n            case five === six && six < ten:\n              text = \"Average recent form with a slight dip in the last 6\";\n              break;\n            case five === six && six === ten:\n              text = \"Consistently average form over the last 10\";\n              break;\n            case five < six && six === ten:\n              text = \"Average recent form but slightly worsening in the last 5\";\n              break;\n            case five < six && six > ten:\n              text =\n                \"Average recent form, slightly fluctuating over the last 10\";\n              break;\n            case five < six && six < ten:\n              text = \"Average recent form, declining consistently\";\n              break;\n            default:\n              break;\n          }\n        } else if (five < 1 && five >= 0.5) {\n          switch (true) {\n            case five > six && six > ten:\n              text =\n                \"Poor recent form with gradual improvement over last 10 games\";\n              break;\n            case five > six && six < ten:\n              text =\n                \"Poor recent form but improving with some inconsistency over last 10 games\";\n              break;\n            case five === six && six > ten:\n              text =\n                \"Poor recent form with some improvement shown in the last 6\";\n              break;\n            case five === six && six < ten:\n              text = \"Poor recent form with a dip in the last 6\";\n              break;\n            case five === six && six === ten:\n              text = \"Consistently poor form over the last 10\";\n              break;\n            case five < six && six === ten:\n              text = \"Poor recent form, slightly worsening in the last 5\";\n              break;\n            case five < six && six > ten:\n              text = \"Poor recent form, slightly fluctuating over the last 10\";\n              break;\n            case five < six && six < ten:\n              text = \"Poor recent form, declining consistently\";\n              break;\n            default:\n              text = \"Poor recent form\";\n              break;\n          }\n        } else if (five < 0.5) {\n          switch (true) {\n            case five > six && six > ten:\n              text =\n                \"Terrible recent form with gradual improvement over last 10 games\";\n              break;\n            case five > six && six < ten:\n              text =\n                \"Terrible recent form with a slight improvement in the last 5\";\n              break;\n            case five === six && six > ten:\n              text =\n                \"Terrible recent form but improving slightly in the last 6\";\n              break;\n            case five === six && six < ten:\n              text = \"Terrible recent form with a dip in the last 6\";\n              break;\n            case five === six && six === ten:\n              text = \"Consistently terrible form over the last 10\";\n              break;\n            case five < six && six === ten:\n              text = \"Terrible recent form, worsening further in the last 5\";\n              break;\n            case five < six && six > ten:\n              text =\n                \"Terrible recent form, slightly fluctuating over the last 10\";\n              break;\n            case five < six && six < ten:\n              text = \"Terrible recent form, declining consistently\";\n              break;\n            default:\n              break;\n          }\n        }\n        return text;\n      }\n\n      let homeFormTrend = await compareFormTrend(\n        homeFiveGameAverage,\n        homeSixGameAverage,\n        homeTenGameAverage\n      );\n      let awayFormTrend = await compareFormTrend(\n        awayFiveGameAverage,\n        awaySixGameAverage,\n        awayTenGameAverage\n      );\n      let homeLastGame = await getLastGameResult(\n        gameStats.home[index].LastFiveForm[4]\n      );\n      let awayLastGame = await getLastGameResult(\n        gameStats.away[index].LastFiveForm[4]\n      );\n\n      const formDataMatch = [];\n\n      formDataMatch.push({\n        btts: game.btts_potential,\n      });\n\n      const formDataHome = [];\n\n      formDataHome.push({\n        name: game.homeTeam,\n        Last5: gameStats.home[index].LastFiveForm,\n        AverageGoals: gameStats.home[index].ScoredOverall / 10,\n        AverageConceeded: gameStats.home[index].ConcededOverall / 10,\n        AverageXG: gameStats.home[index].XGOverall,\n        AverageXGConceded: gameStats.home[index].XGAgainstAvgOverall,\n        AveragePossession: gameStats.home[index].AveragePossessionOverall,\n        AverageShotsOnTarget: gameStats.home[index].AverageShotsOnTargetOverall,\n        AverageDangerousAttacks:\n          gameStats.home[index].AverageDangerousAttacksOverall,\n        homeOrAway: \"Home\",\n        leaguePosition: gameStats.home[index].LeaguePosition,\n        Last5PPG: gameStats.home[index].PPG,\n        SeasonPPG: gameStats.home[index].SeasonPPG,\n        formTrend: homeFormTrend,\n        lastGame: homeLastGame,\n        formRun: gameStats.home[index].formRun,\n        goalDifference: gameStats.home[index].goalDifference,\n        goalDifferenceHomeOrAway: gameStats.home[index].goalDifferenceHomeOrAway,\n        BttsPercentage: gameStats.home[index].BttsPercentage,\n        BttsPercentageHomeOrAway: gameStats.home[index].BttsPercentageHomeOrAway,\n        CardsTotal: gameStats.home[index].CardsTotal,\n        CornersAverage: gameStats.home[index].CornersAverage,\n        ScoredBothHalvesPercentage:\n          gameStats.home[index].ScoredBothHalvesPercentage,\n      });\n\n      const formDataAway = [];\n\n      formDataAway.push({\n        name: game.awayTeam,\n        Last5: gameStats.away[index].LastFiveForm,\n        AverageGoals: gameStats.away[index].ScoredOverall / 10,\n        AverageConceeded: gameStats.away[index].ConcededOverall / 10,\n        AverageXG: gameStats.away[index].XGOverall,\n        AverageXGConceded: gameStats.away[index].XGAgainstAvgOverall,\n        AveragePossession: gameStats.away[index].AveragePossessionOverall,\n        AverageShotsOnTarget: gameStats.away[index].AverageShotsOnTargetOverall,\n        AverageDangerousAttacks:\n          gameStats.away[index].AverageDangerousAttacksOverall,\n        homeOrAway: \"Away\",\n        leaguePosition: gameStats.away[index].LeaguePosition,\n        Last5PPG: gameStats.away[index].PPG,\n        SeasonPPG: gameStats.away[index].SeasonPPG,\n        formTrend: awayFormTrend,\n        lastGame: awayLastGame,\n        formRun: gameStats.away[index].formRun,\n        goalDifference: gameStats.away[index].goalDifference,\n        goalDifferenceHomeOrAway: gameStats.away[index].goalDifferenceHomeOrAway,\n        BttsPercentage: gameStats.away[index].BttsPercentage,\n        BttsPercentageHomeOrAway: gameStats.away[index].BttsPercentageHomeOrAway,\n        CardsTotal: gameStats.away[index].CardsTotal,\n        CornersAverage: gameStats.away[index].CornersAverage,\n        ScoredBothHalvesPercentage:\n          gameStats.away[index].ScoredBothHalvesPercentage,\n      });\n      ReactDOM.render(\n        <div style={style}>\n          <Div className=\"MatchTime\" text={`Kick off: ${time} GMT`}></Div>\n          <Div className=\"FormExplainer\" text={`(Form stats based on last 10 games)`}></Div>\n\n        </div>,\n        document.getElementById(\"stats\" + homeTeam)\n      );\n\n      console.log(gameStats.home[index])\n\n      ReactDOM.render(\n        <div style={style}>\n          <div className=\"H2HStats\" id={`H2HStats${game.id}`}></div>\n          <div className=\"TrendsHome\" id={`TrendsHome${game.id}`}></div>\n          <div className=\"TrendsAway\" id={`TrendsAway${game.id}`}></div>\n        </div>,\n        document.getElementById(\"history\" + homeTeam)\n      );\n\n      ReactDOM.render(\n        <Stats\n          style={style}\n          homeOrAway=\"Home\"\n          gameCount={divider}\n          key={formDataHome[0].name}\n          last5={formDataHome[0].Last5}\n          className={formDataHome[0].homeOrAway}\n          name={formDataHome[0].name}\n          goals={formDataHome[0].AverageGoals}\n          conceeded={formDataHome[0].AverageConceeded}\n          XG={formDataHome[0].AverageXG}\n          XGConceded={formDataHome[0].AverageXGConceded}\n          possession={formDataHome[0].AveragePossession}\n          sot={formDataHome[0].AverageShotsOnTarget}\n          dangerousAttacks={formDataHome[0].AverageDangerousAttacks}\n          leaguePosition={formDataHome[0].leaguePosition}\n          rawPosition={game.homeRawPosition}\n          homeOrAwayLeaguePosition={game.homeTeamHomePosition}\n          winPercentage={game.homeTeamWinPercentage}\n          lossPercentage={game.homeTeamLossPercentage}\n          drawPercentage={game.homeTeamDrawPercentage}\n          ppg={formDataHome[0].SeasonPPG}\n          formTrend={[\n            homeTenGameAverage.toFixed(2),\n            homeSixGameAverage.toFixed(2),\n            homeFiveGameAverage.toFixed(2),\n          ]}\n          lastGame={homeLastGame}\n          formRun={formDataHome[0].formRun}\n          goalDifference={formDataHome[0].goalDifference}\n          goalDifferenceHomeOrAway={formDataHome[0].goalDifferenceHomeOrAway}\n          BttsPercentage={formDataHome[0].BttsPercentage}\n          BttsPercentageHomeOrAway={formDataHome[0].BttsPercentageHomeOrAway}\n          CardsTotal={formDataHome[0].CardsTotal}\n          CornersAverage={formDataHome[0].CornersAverage}\n          ScoredBothHalvesPercentage={\n            formDataHome[0].ScoredBothHalvesPercentage\n          }\n        />,\n        document.getElementById(\"home\" + homeTeam)\n      );\n\n      ReactDOM.render(\n        <Stats\n          style={style}\n          homeOrAway=\"Away\"\n          gameCount={divider}\n          key={formDataAway[0].name}\n          last5={formDataAway[0].Last5}\n          className={formDataAway[0].homeOrAway}\n          name={formDataAway[0].name}\n          goals={formDataAway[0].AverageGoals}\n          conceeded={formDataAway[0].AverageConceeded}\n          XG={formDataAway[0].AverageXG}\n          XGConceded={formDataAway[0].AverageXGConceded}\n          //todo add goal diff and btts percentages\n          possession={formDataAway[0].AveragePossession}\n          rawPosition={game.awayRawPosition}\n          sot={formDataAway[0].AverageShotsOnTarget}\n          dangerousAttacks={formDataAway[0].AverageDangerousAttacks}\n          leaguePosition={formDataAway[0].leaguePosition}\n          homeOrAwayLeaguePosition={game.awayTeamAwayPosition}\n          winPercentage={game.awayTeamWinPercentage}\n          lossPercentage={game.awayTeamLossPercentage}\n          drawPercentage={game.awayTeamDrawPercentage}\n          ppg={formDataAway[0].SeasonPPG}\n          formTrend={[\n            awayTenGameAverage.toFixed(2),\n            awaySixGameAverage.toFixed(2),\n            awayFiveGameAverage.toFixed(2),\n          ]}\n          lastGame={awayLastGame}\n          formRun={formDataAway[0].formRun}\n          goalDifference={formDataAway[0].goalDifference}\n          goalDifferenceHomeOrAway={formDataAway[0].goalDifferenceHomeOrAway}\n          BttsPercentage={formDataAway[0].BttsPercentage}\n          BttsPercentageHomeOrAway={formDataAway[0].BttsPercentageHomeOrAway}\n          CardsTotal={formDataAway[0].CardsTotal}\n          CornersAverage={formDataAway[0].CornersAverage}\n          ScoredBothHalvesPercentage={\n            formDataAway[0].ScoredBothHalvesPercentage\n          }\n        />,\n        document.getElementById(\"away\" + awayTeam)\n      );\n\n      ReactDOM.render(\n        <Button\n          className=\"MoreStats\"\n          style={style}\n          onClickEvent={() =>\n            getTeamStats(game.id, game.homeTeam, game.awayTeam)\n          }\n          text={\"More detail\"}\n        ></Button>,\n        document.getElementById(`H2HStats${game.id}`)\n      );\n    }\n  }\n}\n","import React, { Fragment } from \"react\";\nimport { CreateBadge } from \"./createBadge\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { createStatsDiv } from \"../logic/getStats\";\nimport { renderTable } from \"../logic/getFixtures\";\n\nlet resultValue;\nconst text =\n  \"XG Tipping formulates predictions based on recent form data ranging from points per game to each teams attacking potency\\n Expected Goals in previous matches are used to determine whether teams might be over or underperforming and predictions are weighted as such\\n Once all fixtures have loaded, click on “Get Predictions”\\n Predictions are displayed on the right and the results on the left\\n Click on an individual fixture for detailed stats for both teams.\";\n\nfunction GetDivider(fixture) {\n  const matchStatus = fixture.status;\n  const isPrediction = resultValue;\n\n  if (isPrediction === false && matchStatus !== \"complete\") {\n    return (\n      <div className=\"divider\" data-cy={\"divider-\" + fixture.fixture.id}>\n        {\"V\"}\n      </div>\n    );\n  } else if (isPrediction === false && matchStatus === \"complete\") {\n    return (\n      <div\n        className=\"Result\"\n        data-cy={\"result-\" + fixture.fixture.id}\n      >{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n    );\n  } else if (isPrediction === true && matchStatus === \"complete\") {\n    let outcome;\n    let prediction;\n\n    switch (true) {\n      case fixture.fixture.homeGoals > fixture.fixture.awayGoals:\n        outcome = 0;\n        fixture.fixture.winner = fixture.fixture.homeTeam;\n        fixture.fixture.outcome = \"homeWin\";\n        break;\n      case fixture.fixture.homeGoals === fixture.fixture.awayGoals:\n        outcome = 1;\n        fixture.fixture.winner = \"draw\";\n        fixture.fixture.outcome = \"draw\";\n\n        break;\n      case fixture.fixture.homeGoals < fixture.fixture.awayGoals:\n        outcome = 2;\n        fixture.fixture.winner = fixture.fixture.awayTeam;\n        fixture.fixture.outcome = \"awayWin\";\n\n        break;\n      default:\n        break;\n    }\n\n    switch (true) {\n      case fixture.fixture.goalsA > fixture.fixture.goalsB:\n        prediction = 0;\n        break;\n      case fixture.fixture.goalsA === fixture.fixture.goalsB:\n        prediction = 1;\n        break;\n      case fixture.fixture.goalsA < fixture.fixture.goalsB:\n        prediction = 2;\n        break;\n      default:\n        break;\n    }\n\n    if (fixture.fixture.homeGoals > 0 && fixture.fixture.awayGoals > 0) {\n      fixture.fixture.bttsOutcome = \"bttsWon\";\n    } else {\n      fixture.fixture.bttsOutcome = \"bttsLost\";\n    }\n\n    if (outcome === prediction) {\n      // console.log(fixture.fixture.game);\n      if (fixture.fixture.homeOdds !== 0) {\n        switch (true) {\n          case outcome === 0:\n            fixture.fixture.profit = fixture.fixture.homeOdds;\n            break;\n          case outcome === 1:\n            fixture.fixture.profit = fixture.fixture.drawOdds;\n            break;\n          case outcome === 2:\n            fixture.fixture.profit = fixture.fixture.awayOdds;\n            break;\n          default:\n            break;\n        }\n      } else fixture.fixture.profit = 1;\n\n      if (\n        fixture.fixture.goalsA === fixture.fixture.homeGoals &&\n        fixture.fixture.goalsB === fixture.fixture.awayGoals\n      ) {\n        fixture.fixture.exactScore = true;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"ExactScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      } else {\n        fixture.fixture.exactScore = false;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"CorrectScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      }\n      // console.log(`profit ${fixture.fixture.profit}`);\n    } else if (outcome !== prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        fixture.fixture.profit = 0;\n      } else {\n        fixture.fixture.profit = 1;\n      }\n      // console.log(fixture.fixture.game);\n      // console.log(`profit ${fixture.fixture.profit}`);\n      fixture.fixture.exactScore = false;\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"IncorrectScore\"\n            key={fixture.fixture.awayTeam}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    }\n  } else {\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  }\n}\n\nfunction getStyle(pointsAverageDiffBool) {\nif(pointsAverageDiffBool === true){\n  return \"individualFixtureGap\"\n} else {\n  return \"individualFixture\";\n}\n}\n\nfunction renderLeagueName(fixture) {\n  let name = fixture.leagueName;\n  if (name === null) {\n    return <div></div>;\n  } else {\n    return (\n      <div>\n        <div\n          className=\"leagueName\"\n          key={`leagueName${fixture.leagueIndex}div`}\n          onClick={() => renderTable(fixture.leagueIndex)}\n        >\n          {fixture.leagueName} &#9776;\n        </div>\n        <div\n          className=\"LeagueTable\"\n          key={`leagueName${fixture.leagueIndex}`}\n          id={`leagueName${fixture.leagueIndex}`}\n        ></div>\n      </div>\n    );\n  }\n}\n\nconst SingleFixture = ({ fixture }) => (\n  <div key={fixture.game}>\n    {renderLeagueName(fixture)}\n    <li\n      className={getStyle(fixture.pointsAverageDiff)}\n      key={fixture.id}\n      onClick={() => createStatsDiv(fixture)}\n      data-cy={fixture.id}\n    >\n      <div className=\"HomeOdds\">{fixture.fractionHome}</div>\n      <div className=\"homeTeam\">{fixture.homeTeam}</div>\n      <GetDivider\n        result={resultValue}\n        status={fixture.status}\n        fixture={fixture}\n      />\n      {/* <div className=\"divider\">{\"V\"}</div> */}\n      <div className=\"awayTeam\">{fixture.awayTeam}</div>\n      <CreateBadge\n        image={fixture.homeBadge}\n        ClassName=\"HomeBadge\"\n        alt=\"Home team badge\"\n        flexShrink={5}\n      />\n      <CreateBadge\n        image={fixture.awayBadge}\n        ClassName=\"AwayBadge\"\n        alt=\"Away team badge\"\n      />\n      <div className=\"AwayOdds\">{fixture.fractionAway}</div>\n    </li>\n    <div className=\"StatsDiv\">\n      <div id={\"stats\" + fixture.homeTeam}></div>\n      <Fragment>\n        <div\n          className=\"StatsContainer\"\n          data-cy={\"StatsContainer-\" + fixture.id}\n        >\n          <div className=\"HomeStats\" id={\"home\" + fixture.homeTeam}></div>\n          <div className=\"AwayStats\" id={\"away\" + fixture.awayTeam}></div>\n        </div>\n      </Fragment>\n      <div className=\"MatchHistory\" id={\"history\" + fixture.homeTeam}></div>\n    </div>\n  </div>\n);\n\nlet newText = text.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nconst List = ({ fixtures }) => (\n  <div>\n    <Fragment>\n      <Collapsable\n        className={\"HowToUse\"}\n        buttonText={\"Show / Hide help\"}\n        text={newText}\n      />\n    </Fragment>\n    <div id=\"Headers\"></div>\n    <ul className=\"FixtureList\" id=\"FixtureList\">\n      {fixtures.map((fixture, i) => (\n        <SingleFixture fixture={fixture} key={fixture.game}/>\n      ))}\n    </ul>\n  </div>\n);\n\nexport function Fixture(props) {\n  resultValue = props.result;\n\n  return <List fixtures={props.fixtures} result={resultValue} />;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { orderedLeagues } from \"../App\";\nimport { getForm, applyColour } from \"./getForm\";\nimport { Fixture } from \"../components/Fixture\";\nimport { Button } from \"../components/Button\";\nimport { getScorePrediction } from \"../logic/getScorePredictions\";\nimport { ThreeDots } from \"react-loading-icons\";\nimport { selectedOdds } from \"../components/OddsRadio\";\nimport LeagueTable from \"../components/LeagueTable\";\n\nvar oddslib = require(\"oddslib\");\n\nrequire(\"dotenv\").config();\n\nvar fixtureResponse;\nvar fixtureArray;\nexport const matches = [];\nexport const resultedMatches = [];\nvar league;\nvar leagueID;\nvar leagueGames = [];\nexport var leagueArray = [];\nvar leagueIdArray = [];\nexport var leagueStatsArray = [];\nexport let leagueInstance;\nvar lastFiveFormHome;\nvar lastFiveFormAway;\nvar lastSixFormHome;\nvar lastSixFormAway;\nvar lastTenFormHome;\nvar lastTenFormAway;\nvar formRunHome;\nvar formRunAway;\n\nexport const [currentDay, month, year] = new Date()\n  .toLocaleDateString(\"en-US\")\n  .split(\"/\");\nlet tomorrowsDate = new Date();\ntomorrowsDate.setDate(new Date().getDate() + 1);\nlet [tomorrowDay, tomorrowMonth, tomorrowYear] = tomorrowsDate\n  .toLocaleDateString(\"en-US\")\n  .split(\"/\");\n\nlet yesterdaysDate = new Date();\nyesterdaysDate.setDate(new Date().getDate() - 1);\nlet [yesterdayDay, yesterdayMonth, yesterdayYear] = yesterdaysDate\n  .toLocaleDateString(\"en-US\")\n  .split(\"/\");\n\n// var prevSat = new Date();\n\n// prevSat.setDate(prevSat.getDate() - (6-prevSat.getDay()))\n\n// console.log(prevSat)\n\nvar d = new Date();\n\n// set to Monday of this week\nd.setDate(d.getDate() - ((d.getDay() + 6) % 7));\n\n// set to Saturday just gone\nd.setDate(d.getDate() - 2);\n\nlet [saturdayDay, saturdayMonth, saturdayYear] = d\n  .toLocaleDateString(\"en-US\")\n  .split(\"/\");\n\nvar historicDate = new Date();\n\n// set to Monday of this week\nhistoricDate.setDate(\n  historicDate.getDate() - ((historicDate.getDay() + 6) % 7)\n);\n\n// set to Saturday prior to last\nhistoricDate.setDate(historicDate.getDate() - 9);\n\nlet [historicDay, historicMonth, historicYear] = historicDate\n  .toLocaleDateString(\"en-US\")\n  .split(\"/\");\n\nexport const saturday = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${saturdayYear}-${saturdayDay}-${saturdayMonth}`;\nexport const historic = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${historicYear}-${historicDay}-${historicMonth}`;\nexport const yesterday = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${yesterdayYear}-${yesterdayDay}-${yesterdayMonth}`;\nexport const today = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${year}-${currentDay}-${month}`;\nexport const tomorrow = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${tomorrowYear}-${tomorrowDay}-${tomorrowMonth}`;\n\nexport function getRadioState(state) {\n  let radioState = state;\n  return radioState;\n}\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nexport let allForm = [];\nexport let tableArray = [];\nleagueInstance = [];\n\nexport async function generateTables(a, leagueIdArray) {\n  let i = 0;\n  leagueArray.forEach(function (league) {\n    let currentLeagueId = leagueIdArray[i];\n    i++;\n    leagueInstance = [];\n    if (!league.data.specific_tables[0].groups) {\n      for (\n        let index = 0;\n        index < league.data.specific_tables[0].table.length;\n        index++\n      ) {\n        let currentTeam = league.data.specific_tables[0].table[index];\n        let last5 = currentTeam.wdl_record.slice(-5);\n        let rawForm = last5.replace(/,/g, \"\").toUpperCase();\n        let form = Array.from(rawForm);\n\n        const team = {\n          LeagueID: currentLeagueId,\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          ID: currentTeam.id,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: `${form[0]}${form[1]}${form[2]}${form[3]}${form[4]}`,\n          Points: currentTeam.points,\n        };\n        leagueInstance.push(team);\n      }\n      tableArray.push(leagueInstance);\n    } else if (league.data.league_table === null) {\n      for (\n        let index = 0;\n        index < league.data.all_matches_table_overall.length;\n        index++\n      ) {\n        let currentTeam = league.data.all_matches_table_overall[index];\n        let last5 = \"N/A\";\n        const team = {\n          LeagueID: currentLeagueId,\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          ID: currentTeam.id,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: last5,\n          Points: currentTeam.points,\n        };\n        leagueInstance.push(team);\n      }\n      tableArray.push(leagueInstance);\n    }\n  });\n}\n\n\nexport async function renderTable(index) {\n  let league = tableArray[index];\n  let statistics;\n let leagueStatistics = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}leagueStats/${league[0].LeagueID}`\n  )\n  await leagueStatistics.json().then((stats) => {\n    statistics = stats.data\n  });\n\n  if (league !== undefined) {\n    ReactDOM.render(\n      <LeagueTable Teams={league} Stats={statistics} Key={`League${index}`} />,\n      document.getElementById(`leagueName${index}`)\n    );\n  }\n}\n\nasync function createFixture(match, result, mockBool) {\n  let roundedHomeOdds;\n  let roundedAwayOdds;\n  let roundedBTTSOdds;\n  let homeFraction;\n  let awayFraction;\n  let bttsFraction;\n\n  if (selectedOdds === \"Fractional\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      roundedHomeOdds = (Math.round(match.homeOdds * 5) / 5).toFixed(1);\n      roundedAwayOdds = (Math.round(match.awayOdds * 5) / 5).toFixed(1);\n\n      if (roundedHomeOdds < 1.1) {\n        roundedHomeOdds = 1.1;\n      }\n      if (roundedAwayOdds < 1.1) {\n        roundedAwayOdds = 1.1;\n      }\n\n      try {\n        homeFraction = oddslib\n          .from(\"decimal\", roundedHomeOdds)\n          .to(\"fractional\", { precision: 1 });\n        awayFraction = oddslib\n          .from(\"decimal\", roundedAwayOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      roundedBTTSOdds = (Math.round(match.bttsOdds * 5) / 5).toFixed(1);\n\n      if (roundedBTTSOdds < 1.1) {\n        roundedBTTSOdds = 1.1;\n      }\n\n      try {\n        bttsFraction = oddslib\n          .from(\"decimal\", roundedBTTSOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  } else if (selectedOdds === \"Decimal\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      homeFraction = match.homeOdds;\n      awayFraction = match.awayOdds;\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      bttsFraction = match.bttsOdds;\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  }\n\n  match.homeTeamWinsPercentage = match.homeTeamWinPercentage;\n  match.homeTeamLossesPercentage = match.homeTeamLossPercentage;\n  match.homeTeamDrawsPercentage = match.homeTeamDrawPercentage;\n\n  match.awayTeamWinsPercentage = match.awayTeamWinPercentage;\n  match.awayTeamLossesPercentage = match.awayTeamLossPercentage;\n  match.awayTeamDrawsPercentage = match.awayTeamDrawPercentage;\n  match.fractionHome = homeFraction;\n  match.fractionAway = awayFraction;\n\n  match.bttsFraction = bttsFraction;\n\n  match.game = match.homeTeam + \" v \" + match.awayTeam;\n\n  if (mockBool !== true) {\n    ReactDOM.render(\n      <Fixture\n        fixtures={matches}\n        result={result}\n        mock={mockBool}\n        className={\"individualFixture\"}\n      />,\n      document.getElementById(\"FixtureContainer\")\n    );\n  } else if (mockBool === true) {\n    ReactDOM.render(\n      <Fixture\n        fixtures={matches}\n        result={result}\n        mock={mockBool}\n        className={\"individualFixture\"}\n      />,\n      document.getElementById(\"FixtureContainer\")\n    );\n  }\n}\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nexport async function generateFixtures(day, radioState, selectedOdds) {\n  let url;\n  switch (day) {\n    case \"lastSaturday\":\n      url = saturday;\n      break;\n    case \"historic\":\n      url = historic;\n      break;\n    case \"yesterdaysFixtures\":\n      url = yesterday;\n      break;\n    case \"todaysFixtures\":\n      url = today;\n      break;\n    case \"tomorrowsFixtures\":\n      url = tomorrow;\n      break;\n    default:\n      break;\n  }\n\n  fixtureResponse = await fetch(url);\n\n  await fixtureResponse.json().then((fixtures) => {\n    fixtureArray = Array.from(fixtures.data);\n  });\n\n  let form;\n  let formArray;\n  var isFormStored;\n  var isStoredLocally;\n  let storedForm = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}form${day}`,\n    {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n      },\n    }\n  );\n  if (storedForm.status === 201) {\n    await storedForm.json().then((form) => {\n      formArray = Array.from(form.allForm);\n      isFormStored = true;\n      isStoredLocally = false;\n      allForm = formArray;\n    });\n  } else if (storedForm.status === 200) {\n    await storedForm.json().then((form) => {\n      formArray = Array.from(form.allForm);\n      isFormStored = true;\n      isStoredLocally = false;\n      allForm = formArray;\n    });\n  } else {\n    isFormStored = false;\n    isStoredLocally = false;\n  }\n\n  ReactDOM.render(\n    <div>\n      <div className=\"LoadingText\">Loading all league data</div>\n      <ThreeDots height=\"3em\" />\n    </div>,\n    document.getElementById(\"Buttons\")\n  );\n\n\n  for (let i = 0; i < orderedLeagues.length; i++) {\n    leagueID = orderedLeagues[i].element.id;\n    leagueIdArray.push(leagueID);\n  }\n\n  league = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${currentDay}${month}${year}`\n  );\n\n  var leaguePositions = [];\n  if (league.status === 200) {\n    await league.json().then((leagues) => {\n      leagueArray = Array.from(leagues.leagueArray);\n    });\n    generateTables(leagueArray, leagueIdArray);\n  } else {\n    for (let i = 0; i < orderedLeagues.length; i++) {\n      league = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}tables/${orderedLeagues[i].element.id}/${currentDay}${month}${year}`\n      );\n      // eslint-disable-next-line no-loop-func\n      await league.json().then((table) => {\n        leagueArray.push(table);\n      });\n      generateTables(leagueArray, leagueIdArray);\n    }\n  }\n\n  for (let i = 0; i < 36; i++) {\n    for (\n      let x = 0;\n      x < leagueArray[i].data.all_matches_table_overall.length;\n      x++\n    ) {\n      let string = leagueArray[i].data.all_matches_table_overall[x];\n      let stringHome = leagueArray[i].data.all_matches_table_home[x];\n      let stringAway = leagueArray[i].data.all_matches_table_away[x];\n\n      leaguePositions.push({\n        name: string.cleanName,\n        position: string.position,\n        rawPosition: x + 1,\n        homeFormName: stringHome.cleanName,\n        awayFormName: stringAway.cleanName,\n        homeSeasonWinPercentage: stringHome.seasonWins,\n        awaySeasonWinPercentage: stringAway.seasonWins,\n        homeSeasonLossPercentage: stringHome.seasonLosses_home,\n        awaySeasonLossPercentage: stringAway.seasonLosses_away,\n        homeSeasonDrawPercentage: stringHome.seasonDraws,\n        awaySeasonDrawPercentage: stringAway.seasonDraws,\n        homeSeasonMatchesPlayed: stringHome.matchesPlayed,\n        awaySeasonMatchesPlayed: stringAway.matchesPlayed,\n        ppg: string.ppg_overall,\n      });\n    }\n  }\n\n  let previousLeagueName;\n\n  for (let i = 0; i < orderedLeagues.length; i++) {\n    leagueID = orderedLeagues[i].element.id;\n    leagueGames = fixtureArray.filter(\n      (game) => game.competition_id === orderedLeagues[i].element.id\n    );\n\n    for (const fixture of leagueGames) {\n      const unixTimestamp = fixture.date_unix;\n      const milliseconds = unixTimestamp * 1000;\n      const dateObject = new Date(milliseconds);\n\n      let match = {};\n      if (orderedLeagues[i].name !== previousLeagueName) {\n        match.leagueName = orderedLeagues[i].name;\n        match.leagueIndex = i;\n      } else {\n        match.leagueName = null;\n      }\n      match.id = fixture.id;\n      match.competition_id = fixture.competition_id;\n      match.time = dateObject.toLocaleString(\"en-GB\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      });\n      match.homeTeam = fixture.home_name;\n      match.awayTeam = fixture.away_name;\n      match.homeOdds = fixture.odds_ft_1;\n      match.awayOdds = fixture.odds_ft_2;\n      match.drawOdds = fixture.odds_ft_x;\n      match.homeDoubleChance = fixture.odds_doublechance_1x;\n      match.awayDoubleChance = fixture.odds_doublechance_x2;\n      match.bttsOdds = fixture.odds_btts_yes;\n      match.homeId = fixture.homeID;\n      match.awayId = fixture.awayID;\n      match.form = [];\n      match.homeTeamInfo = [];\n      match.awayTeamInfo = [];\n      match.btts = false;\n\n      previousLeagueName = orderedLeagues[i].name;\n\n      let homeTeaminLeague;\n      let awayTeaminLeague;\n      let teamPositionHome;\n      let teamPositionHomeTable;\n      let teamPositionAwayTable;\n      let homeTeamWinPercentageHome;\n      let awayTeamWinPercentageAway;\n      let homeTeamLossPercentageHome;\n      let awayTeamLossPercentageAway;\n      let homeTeamDrawPercentageHome;\n      let awayTeamDrawPercentageAway;\n      let teamPositionAway;\n      let teamPositionPrefix;\n      let homePrefix;\n      let homePrefixHomeTable;\n      let awayPrefix;\n      let awayPrefixAwayTable;\n      let homeSeasonPPG;\n      let awaySeasonPPG;\n\n      async function getPrefix(position) {\n        switch (position) {\n          case 1:\n          case 21:\n          case 31:\n            teamPositionPrefix = \"st\";\n            break;\n          case 2:\n          case 22:\n          case 32:\n            teamPositionPrefix = \"nd\";\n            break;\n          case 3:\n          case 23:\n          case 33:\n            teamPositionPrefix = \"rd\";\n            break;\n          case 4:\n          case 5:\n          case 6:\n          case 7:\n          case 8:\n          case 9:\n          case 10:\n          case 11:\n          case 12:\n          case 13:\n          case 14:\n          case 15:\n          case 16:\n          case 17:\n          case 18:\n          case 19:\n          case 20:\n          case 24:\n          case 25:\n          case 26:\n          case 27:\n          case 28:\n          case 29:\n          case 30:\n          case 34:\n          case 35:\n          case 36:\n          case 37:\n          case 38:\n          case 39:\n          case 40:\n            teamPositionPrefix = \"th\";\n            break;\n          default:\n            break;\n        }\n        return teamPositionPrefix;\n      }\n\n      try {\n        homeTeaminLeague = leaguePositions.find(\n          (team) => team.name === match.homeTeam\n        );\n\n        let homeTeaminHomeLeague = leaguePositions.find(\n          (team) => team.homeFormName === match.homeTeam\n        );\n\n        teamPositionHome = homeTeaminLeague.position;\n        teamPositionHomeTable = homeTeaminHomeLeague.position;\n\n        homeTeamWinPercentageHome =\n          (homeTeaminHomeLeague.homeSeasonWinPercentage /\n            homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n          100;\n\n        homeTeamLossPercentageHome =\n          (homeTeaminHomeLeague.homeSeasonLossPercentage /\n            homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n          100;\n\n        homeTeamDrawPercentageHome =\n          (homeTeaminHomeLeague.homeSeasonDrawPercentage /\n            homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n          100;\n\n        homePrefix = await getPrefix(teamPositionHome);\n        homePrefixHomeTable = await getPrefix(teamPositionHomeTable);\n\n        homeSeasonPPG = homeTeaminLeague.ppg.toFixed(2);\n      } catch (error) {\n        console.log(error);\n        teamPositionHome = \"N/A\";\n        homePrefix = \"\";\n        homePrefixHomeTable = \"\";\n        homeSeasonPPG = \"N/A\";\n      }\n\n      try {\n        awayTeaminLeague = leaguePositions.find(\n          (team) => team.name === match.awayTeam\n        );\n\n        let awayTeaminAwayLeague = leaguePositions.find(\n          (team) => team.awayFormName === match.awayTeam\n        );\n\n        teamPositionAway = awayTeaminLeague.position;\n        teamPositionAwayTable = awayTeaminAwayLeague.position;\n\n        awayTeamWinPercentageAway =\n          (awayTeaminAwayLeague.awaySeasonWinPercentage /\n            awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n          100;\n\n        awayTeamLossPercentageAway =\n          (awayTeaminAwayLeague.awaySeasonLossPercentage /\n            awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n          100;\n\n        awayTeamDrawPercentageAway =\n          (awayTeaminAwayLeague.awaySeasonDrawPercentage /\n            awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n          100;\n\n\n        awayPrefix = await getPrefix(teamPositionAway);\n        awayPrefixAwayTable = await getPrefix(teamPositionAwayTable);\n\n        awaySeasonPPG = awayTeaminLeague.ppg.toFixed(2);\n      } catch (error) {\n        console.log(error);\n        teamPositionAway = \"N/A\";\n        awayPrefix = \"\";\n        awaySeasonPPG = \"N/A\";\n      }\n\n      if (!isFormStored) {\n        form = await getForm(match);\n\n        // if (\n        //   form[0].data[0].stats.additional_info &&\n        //   form[1].data[0].stats.additional_info\n        // ) {\n\n        //   //get the last 5 games stats from a big block of text\n        //   var homeExtract = form[0].data[0].stats.additional_info.replace(\n        //     /[\"']/g,\n        //     \"\"\n        //   );\n\n        //   var slug = homeExtract.split(\",53:\").pop().toUpperCase();\n        let homeFormString5 =\n          form[0].data[0].stats.additional_info.formRun_overall.toUpperCase();\n        let awayFormString5 =\n          form[1].data[0].stats.additional_info.formRun_overall.toUpperCase();\n        let homeFormString6 =\n          form[0].data[1].stats.additional_info.formRun_overall.toUpperCase();\n        let awayFormString6 =\n          form[1].data[1].stats.additional_info.formRun_overall.toUpperCase();\n        let homeFormString10 =\n          form[0].data[2].stats.additional_info.formRun_overall.toUpperCase();\n        let awayFormString10 =\n          form[1].data[2].stats.additional_info.formRun_overall.toUpperCase();\n\n        let homeFormRun =\n          form[0].data[2].stats.additional_info.formRun_home.toUpperCase();\n        let awayFormRun =\n          form[1].data[2].stats.additional_info.formRun_away.toUpperCase();\n\n        lastFiveFormHome = Array.from(homeFormString5);\n        lastSixFormHome = Array.from(homeFormString6);\n        lastTenFormHome = Array.from(homeFormString10);\n        lastFiveFormAway = Array.from(awayFormString5);\n        lastSixFormAway = Array.from(awayFormString6);\n        lastTenFormAway = Array.from(awayFormString10);\n        formRunHome = Array.from(homeFormRun);\n        formRunAway = Array.from(awayFormRun);\n\n        if (teamPositionHome === 0) {\n          teamPositionHome = \"N/A\";\n          teamPositionHomeTable = \"N/A\";\n          homePrefix = \"\";\n          homePrefixHomeTable = \"\";\n        }\n\n        if (teamPositionAway === 0) {\n          teamPositionAway = \"N/A\";\n          teamPositionAwayTable = \"N/A\";\n          awayPrefix = \"\";\n          awayPrefixAwayTable = \"\";\n        }\n        // } else {\n        //   lastFiveFormHome = \"N/A\"\n        //   lastFiveFormAway = \"N/A\"\n        // }\n\n\n        allForm.push({\n          id: match.id,\n          home: {\n            teamName: match.homeTeam,\n            0: {\n              XGOverall: parseFloat(form[0].data[0].stats.xg_for_avg_overall),\n              XG: parseFloat(form[0].data[0].stats.xg_for_avg_home),\n              ScoredOverall: parseFloat(\n                form[0].data[0].stats.seasonScoredNum_overall\n              ),\n              ScoredAverage: parseFloat(\n                form[0].data[0].stats.seasonScoredAVG_home\n              ),\n              PlayedHome: parseFloat(\n                form[0].data[0].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[0].data[0].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[0].data[0].stats.seasonConcededNum_overall\n              ),\n              ConcededAverage: parseFloat(\n                form[0].data[0].stats.seasonConcededAVG_home\n              ),\n              XGAgainstAvgOverall: parseFloat(\n                form[0].data[0].stats.xg_against_avg_overall\n              ),\n              XGAgainstAverage: parseFloat(\n                form[0].data[0].stats.xg_against_avg_home\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[0].data[0].stats.seasonCSPercentage_home\n              ),\n              AveragePossessionOverall: parseFloat(\n                form[0].data[0].stats.possessionAVG_overall\n              ),\n              AveragePossession: parseFloat(\n                form[0].data[0].stats.possessionAVG_home\n              ),\n              AverageShotsOnTargetOverall: parseFloat(\n                form[0].data[0].stats.shotsOnTargetAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[0].data[0].stats.shotsOnTargetAVG_home\n              ),\n              AverageDangerousAttacksOverall: parseFloat(\n                form[0].data[0].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[0].data[0].stats.seasonPPG_home),\n              AttacksHome: parseFloat(form[0].data[0].stats.attacks_avg_home),\n              AttacksAway: parseFloat(form[0].data[0].stats.attacks_avg_away),\n              AverageDangerousAttacks: parseFloat(\n                form[0].data[0].stats.dangerous_attacks_avg_home\n              ),\n              homeAttackAdvantage: parseFloat(\n                form[0].data[0].stats.homeAttackAdvantage\n              ),\n              homeDefenceAdvantage: parseFloat(\n                form[0].data[0].stats.homeDefenceAdvantage\n              ),\n              BTTSPercentage: parseInt(\n                form[0].data[0].stats.seasonBTTSPercentage_home\n              ),\n              LastFiveForm: lastFiveFormHome,\n              LastSixForm: lastSixFormHome,\n              LastTenForm: lastTenFormHome,\n              LeaguePosition: `${teamPositionHome}${homePrefix}`,\n              homeRawPosition: homeTeaminLeague.rawPosition,\n              homeTeamHomePositionRaw: teamPositionHomeTable,\n              SeasonPPG: homeSeasonPPG,\n            },\n            1: {\n              XGOverall: parseFloat(form[0].data[1].stats.xg_for_avg_overall),\n              XG: parseFloat(form[0].data[1].stats.xg_for_avg_home),\n              ScoredOverall: parseFloat(\n                form[0].data[1].stats.seasonScoredNum_overall\n              ),\n              ScoredAverage: parseFloat(\n                form[0].data[1].stats.seasonScoredAVG_home\n              ),\n              PlayedHome: parseFloat(\n                form[0].data[1].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[0].data[1].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[0].data[1].stats.seasonConcededNum_overall\n              ),\n              ConcededAverage: parseFloat(\n                form[0].data[1].stats.seasonConcededAVG_home\n              ),\n              XGAgainstAvgOverall: parseFloat(\n                form[0].data[1].stats.xg_against_avg_overall\n              ),\n              XGAgainstAverage: parseFloat(\n                form[0].data[1].stats.xg_against_avg_home\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[0].data[1].stats.seasonCSPercentage_home\n              ),\n              AveragePossessionOverall: parseFloat(\n                form[0].data[1].stats.possessionAVG_overall\n              ),\n              AveragePossession: parseFloat(\n                form[0].data[1].stats.possessionAVG_home\n              ),\n              AverageShotsOnTargetOverall: parseFloat(\n                form[0].data[1].stats.shotsOnTargetAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[0].data[1].stats.shotsOnTargetAVG_home\n              ),\n              AverageDangerousAttacksOverall: parseFloat(\n                form[0].data[1].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[0].data[1].stats.seasonPPG_home),\n              AttacksHome: parseFloat(form[0].data[1].stats.attacks_avg_home),\n              AttacksAway: parseFloat(form[0].data[1].stats.attacks_avg_away),\n              AverageDangerousAttacks: parseFloat(\n                form[0].data[1].stats.dangerous_attacks_avg_home\n              ),\n              homeAttackAdvantage: parseFloat(\n                form[0].data[1].stats.homeAttackAdvantage\n              ),\n              homeDefenceAdvantage: parseFloat(\n                form[0].data[1].stats.homeDefenceAdvantage\n              ),\n              BTTSPercentage: parseInt(\n                form[0].data[1].stats.seasonBTTSPercentage_home\n              ),\n              LastFiveForm: lastFiveFormHome,\n              LastSixForm: lastSixFormHome,\n              LastTenForm: lastTenFormHome,\n              LeaguePosition: `${teamPositionHome}${homePrefix}`,\n              homeRawPosition: homeTeaminLeague.rawPosition,\n              homeTeamHomePositionRaw: teamPositionHomeTable,\n              SeasonPPG: homeSeasonPPG,\n            },\n            2: {\n              XGOverall: parseFloat(form[0].data[2].stats.xg_for_avg_overall),\n              XG: parseFloat(form[0].data[2].stats.xg_for_avg_home),\n              ScoredOverall: parseFloat(\n                form[0].data[2].stats.seasonScoredNum_overall\n              ),\n              ScoredAverage: parseFloat(\n                form[0].data[2].stats.seasonScoredAVG_home\n              ),\n              PlayedHome: parseFloat(\n                form[0].data[2].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[0].data[2].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[0].data[2].stats.seasonConcededNum_overall\n              ),\n              ConcededAverage: parseFloat(\n                form[0].data[2].stats.seasonConcededAVG_home\n              ),\n              XGAgainstAvgOverall: parseFloat(\n                form[0].data[2].stats.xg_against_avg_overall\n              ),\n              XGAgainstAverage: parseFloat(\n                form[0].data[2].stats.xg_against_avg_home\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[0].data[2].stats.seasonCSPercentage_home\n              ),\n              AveragePossessionOverall: parseFloat(\n                form[0].data[2].stats.possessionAVG_overall\n              ),\n              AveragePossession: parseFloat(\n                form[0].data[2].stats.possessionAVG_home\n              ),\n              AverageShotsOnTargetOverall: parseFloat(\n                form[0].data[2].stats.shotsOnTargetAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[0].data[2].stats.shotsOnTargetAVG_home\n              ),\n              AverageDangerousAttacksOverall: parseFloat(\n                form[0].data[2].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[0].data[2].stats.seasonPPG_home),\n              AttacksHome: parseFloat(form[0].data[2].stats.attacks_avg_home),\n              AttacksAway: parseFloat(form[0].data[2].stats.attacks_avg_away),\n              AverageDangerousAttacks: parseFloat(\n                form[0].data[2].stats.dangerous_attacks_avg_home\n              ),\n              homeAttackAdvantage: parseFloat(\n                form[0].data[2].stats.homeAttackAdvantage\n              ),\n              homeDefenceAdvantage: parseFloat(\n                form[0].data[2].stats.homeDefenceAdvantage\n              ),\n              BTTSPercentage: parseInt(\n                form[0].data[2].stats.seasonBTTSPercentage_home\n              ),\n              LastFiveForm: lastFiveFormHome,\n              LastSixForm: lastSixFormHome,\n              LastTenForm: lastTenFormHome,\n              LeaguePosition: `${teamPositionHome}${homePrefix}`,\n              homeRawPosition: homeTeaminLeague.rawPosition,\n              homeTeamHomePositionRaw: teamPositionHomeTable,\n              SeasonPPG: homeSeasonPPG,\n              WinPercentage: homeTeamWinPercentageHome,\n              LossPercentage: homeTeamLossPercentageHome,\n              DrawPercentage: homeTeamDrawPercentageHome,\n              formRun: formRunHome,\n              goalDifference: form[0].data[2].stats.seasonGoalDifference_overall,\n              goalDifferenceHomeOrAway: form[0].data[2].stats.seasonGoalDifference_home,\n              BttsPercentage: form[0].data[2].stats.seasonBTTSPercentage_overall,\n              BttsPercentageHomeOrAway: form[0].data[2].stats.seasonBTTSPercentage_home,\n              CardsTotal: form[0].data[2].stats.cardsTotal_overall,\n              CornersAverage: form[0].data[2].stats.cornersAVG_overall,\n              ScoredBothHalvesPercentage: form[0].data[2].stats.scoredBothHalvesPercentage_overall\n            },\n          },\n          away: {\n            teamName: match.awayTeam,\n            0: {\n              XGOverall: parseFloat(form[1].data[0].stats.xg_for_avg_overall),\n              XG: parseFloat(form[1].data[0].stats.xg_for_avg_away),\n              ScoredOverall: parseFloat(\n                form[1].data[0].stats.seasonScoredNum_overall\n              ),\n              ScoredAverage: parseFloat(\n                form[1].data[0].stats.seasonScoredAVG_away\n              ),\n              PlayedHome: parseFloat(\n                form[1].data[0].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[1].data[0].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[1].data[0].stats.seasonConcededNum_overall\n              ),\n              ConcededAverage: parseFloat(\n                form[1].data[0].stats.seasonConcededAVG_away\n              ),\n              XGAgainstAvgOverall: parseFloat(\n                form[1].data[0].stats.xg_against_avg_overall\n              ),\n              XGAgainstAverage: parseFloat(\n                form[1].data[0].stats.xg_against_avg_away\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[1].data[0].stats.seasonCSPercentage_away\n              ),\n              AveragePossessionOverall: parseFloat(\n                form[1].data[0].stats.possessionAVG_overall\n              ),\n              AveragePossession: parseFloat(\n                form[1].data[0].stats.possessionAVG_away\n              ),\n              AverageShotsOnTargetOverall: parseFloat(\n                form[1].data[0].stats.shotsOnTargetAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[1].data[0].stats.shotsOnTargetAVG_away\n              ),\n              AverageDangerousAttacksOverall: parseFloat(\n                form[1].data[0].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[1].data[0].stats.seasonPPG_away),\n              AttacksAverage: parseFloat(\n                form[1].data[0].stats.attacks_avg_away\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[1].data[0].stats.dangerous_attacks_avg_away\n              ),\n              BTTSPercentage: parseInt(\n                form[1].data[0].stats.seasonBTTSPercentage_away\n              ),\n              LastFiveForm: lastFiveFormAway,\n              LastSixForm: lastSixFormAway,\n              LastTenForm: lastTenFormAway,\n              LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n              awayRawPosition: awayTeaminLeague.rawPosition,\n              awayTeamAwayPositionRaw: teamPositionAwayTable,\n              SeasonPPG: awaySeasonPPG,\n            },\n            1: {\n              XGOverall: parseFloat(form[1].data[1].stats.xg_for_avg_overall),\n              XG: parseFloat(form[1].data[1].stats.xg_for_avg_away),\n              ScoredOverall: parseFloat(\n                form[1].data[1].stats.seasonScoredNum_overall\n              ),\n              ScoredAverage: parseFloat(\n                form[1].data[1].stats.seasonScoredAVG_away\n              ),\n              PlayedHome: parseFloat(\n                form[1].data[1].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[1].data[1].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[1].data[1].stats.seasonConcededNum_overall\n              ),\n              ConcededAverage: parseFloat(\n                form[1].data[1].stats.seasonConcededAVG_away\n              ),\n              XGAgainstAvgOverall: parseFloat(\n                form[1].data[1].stats.xg_against_avg_overall\n              ),\n              XGAgainstAverage: parseFloat(\n                form[1].data[1].stats.xg_against_avg_away\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[1].data[1].stats.seasonCSPercentage_away\n              ),\n              AveragePossessionOverall: parseFloat(\n                form[1].data[1].stats.possessionAVG_overall\n              ),\n              AveragePossession: parseFloat(\n                form[1].data[1].stats.possessionAVG_away\n              ),\n              AverageShotsOnTargetOverall: parseFloat(\n                form[1].data[1].stats.shotsOnTargetAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[1].data[1].stats.shotsOnTargetAVG_away\n              ),\n              AverageDangerousAttacksOverall: parseFloat(\n                form[1].data[1].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[1].data[1].stats.seasonPPG_away),\n              AttacksAverage: parseFloat(\n                form[1].data[1].stats.attacks_avg_away\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[1].data[1].stats.dangerous_attacks_avg_away\n              ),\n              BTTSPercentage: parseInt(\n                form[1].data[1].stats.seasonBTTSPercentage_away\n              ),\n              LastFiveForm: lastFiveFormAway,\n              LastSixForm: lastSixFormAway,\n              LastTenForm: lastTenFormAway,\n              LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n              awayRawPosition: awayTeaminLeague.rawPosition,\n              awayTeamAwayPositionRaw: teamPositionAwayTable,\n              SeasonPPG: awaySeasonPPG,\n            },\n            2: {\n              XGOverall: parseFloat(form[1].data[2].stats.xg_for_avg_overall),\n              XG: parseFloat(form[1].data[2].stats.xg_for_avg_away),\n              ScoredOverall: parseFloat(\n                form[1].data[2].stats.seasonScoredNum_overall\n              ),\n              ScoredAverage: parseFloat(\n                form[1].data[2].stats.seasonScoredAVG_away\n              ),\n              PlayedHome: parseFloat(\n                form[1].data[2].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[1].data[2].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[1].data[2].stats.seasonConcededNum_overall\n              ),\n              ConcededAverage: parseFloat(\n                form[1].data[2].stats.seasonConcededAVG_away\n              ),\n              XGAgainstAvgOverall: parseFloat(\n                form[1].data[2].stats.xg_against_avg_overall\n              ),\n              XGAgainstAverage: parseFloat(\n                form[1].data[2].stats.xg_against_avg_away\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[1].data[2].stats.seasonCSPercentage_away\n              ),\n              AveragePossessionOverall: parseFloat(\n                form[1].data[2].stats.possessionAVG_overall\n              ),\n              AveragePossession: parseFloat(\n                form[1].data[2].stats.possessionAVG_away\n              ),\n              AverageShotsOnTargetOverall: parseFloat(\n                form[1].data[2].stats.shotsOnTargetAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[1].data[2].stats.shotsOnTargetAVG_away\n              ),\n              AverageDangerousAttacksOverall: parseFloat(\n                form[1].data[2].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[1].data[2].stats.seasonPPG_away),\n              AttacksAverage: parseFloat(\n                form[1].data[2].stats.attacks_avg_away\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[1].data[2].stats.dangerous_attacks_avg_away\n              ),\n              BTTSPercentage: parseInt(\n                form[1].data[2].stats.seasonBTTSPercentage_away\n              ),\n              LastFiveForm: lastFiveFormAway,\n              LastSixForm: lastSixFormAway,\n              LastTenForm: lastTenFormAway,\n              LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n              awayRawPosition: awayTeaminLeague.rawPosition,\n              awayTeamAwayPositionRaw: teamPositionAwayTable,\n              SeasonPPG: awaySeasonPPG,\n              WinPercentage: awayTeamWinPercentageAway,\n              LossPercentage: awayTeamLossPercentageAway,\n              DrawPercentage: awayTeamDrawPercentageAway,\n              formRun: formRunAway,\n              goalDifference: form[1].data[2].stats.seasonGoalDifference_overall,\n              goalDifferenceHomeOrAway: form[1].data[2].stats.seasonGoalDifference_away,\n              BttsPercentage: form[1].data[2].stats.seasonBTTSPercentage_overall,\n              BttsPercentageHomeOrAway: form[1].data[2].stats.seasonBTTSPercentage_away,\n              CardsTotal: form[1].data[2].stats.cardsTotal_overall,\n              CornersAverage: form[1].data[2].stats.cornersAVG_overall,\n              ScoredBothHalvesPercentage: form[1].data[2].stats.scoredBothHalvesPercentage_overall\n            },\n          },\n        });\n      }\n\n      match.homeBadge = fixture.home_image;\n      match.awayBadge = fixture.away_image;\n\n      match.homePpg = fixture.home_ppg.toFixed(2);\n      match.homeFormColour = await applyColour(match.homePpg);\n\n      match.awayPpg = fixture.away_ppg.toFixed(2);\n      match.awayFormColour = await applyColour(match.awayPpg);\n\n      match.lastFiveFormHome = lastFiveFormHome;\n      match.lastFiveFormAway = lastFiveFormAway;\n\n      console.log(match)\n      console.log(homeTeaminLeague)\n      match.homeRawPosition = homeTeaminLeague.rawPosition;\n      match.awayRawPosition = awayTeaminLeague.rawPosition;\n\n      match.homeTeamHomePosition = `${teamPositionHomeTable}${homePrefixHomeTable}`;\n      match.awayTeamAwayPosition = `${teamPositionAwayTable}${awayPrefixAwayTable}`;\n\n      match.homeTeamHomePositionRaw = teamPositionHomeTable;\n      match.awayTeamAwayPositionRaw = teamPositionAwayTable;\n\n      match.homeTeamWinPercentage = homeTeamWinPercentageHome;\n      match.awayTeamWinPercentage = awayTeamWinPercentageAway;\n\n      match.homeTeamLossPercentage = homeTeamLossPercentageHome;\n      match.awayTeamLossPercentage = awayTeamLossPercentageAway;\n\n      match.homeTeamDrawPercentage = homeTeamDrawPercentageHome;\n      match.awayTeamDrawPercentage = awayTeamDrawPercentageAway;\n\n      match.status = fixture.status;\n\n      match.btts_potential = fixture.btts_potential;\n      match.game = match.homeTeam + \" v \" + match.awayTeam;\n\n      match.homeGoals = fixture.homeGoalCount;\n      match.awayGoals = fixture.awayGoalCount;\n\n      match.expectedGoalsHomeToDate = fixture.team_a_xg_prematch;\n      match.expectedGoalsAwayToDate = fixture.team_b_xg_prematch;\n\n      if (match.status !== \"canceled\" || match.status !== \"suspended\") {\n        matches.push(match);\n        await createFixture(match, false);\n      }\n    }\n    // }\n    ReactDOM.render(\n      <Button\n        text={\"Generate predictions\"}\n        onClickEvent={() => getScorePrediction(day)}\n      />,\n      document.getElementById(\"Buttons\")\n    );\n  }\n  if (!isStoredLocally) {\n    await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}allForm${day}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ allForm }),\n    });\n  }\n  await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${currentDay}${month}${year}`,\n    {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ leagueArray }),\n    }\n  );\n\n  // await fetch(\n  //   `${process.env.REACT_APP_EXPRESS_SERVER}leagueStats/${currentDay}${month}${year}`,\n  //   {\n  //     method: \"POST\",\n  //     headers: {\n  //       Accept: \"application/json\",\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify({ leagueStatsArray }),\n  //   }\n  // );\n}\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst StyledTableCell2 = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#030061\",\n    color: \"white\",\n    padding: \"0.35em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    textAlign: \"left\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    fontSize: \"1.9em\",\n    textAlign: \"left\",\n    fontFamily: \"inherit\",\n    padding: \"0.35em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"white\",\n  },\n}))(TableCell);\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#030061\",\n    color: \"white\",\n    padding: \"0.35em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    textAlign: \"center\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    // backgroundColor: \"#030061\",\n    fontSize: \"1.9em\",\n    textAlign: \"center\",\n    fontFamily: \"inherit\",\n    padding: \"0.35em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"white\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#030061\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#030052\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\nfunction styleForm(formIndicator) {\n  let className;\n  if (formIndicator === \"W\") {\n    className = \"winLeague\";\n  } else if (formIndicator === \"D\") {\n    className = \"drawLeague\";\n  } else if (formIndicator === \"L\") {\n    className = \"lossLeague\";\n  } \n  return className;\n}\n\nexport default function LeagueTable(props) {\n  let rows = props.Teams.map((team, i) => (\n    <StyledTableRow key={`${props.Key}row${i}`}>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Position}`}\n      </StyledTableCell>\n      <StyledTableCell2 component=\"th\" scope=\"row\">\n        {`${team.Name}`}\n      </StyledTableCell2>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Played}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Wins}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Draws}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Losses}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.For}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Against}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.GoalDifference}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Points}`}\n      </StyledTableCell>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ textAlign: \"center\" }}\n      >\n        <span className={styleForm(team.Form[0])}>{team.Form[0]}</span>\n        <span className={styleForm(team.Form[1])}>{team.Form[1]}</span>\n        <span className={styleForm(team.Form[2])}>{team.Form[2]}</span>\n        <span className={styleForm(team.Form[3])}>{team.Form[3]}</span>\n        <span className={styleForm(team.Form[4])}>{team.Form[4]}</span>\n      </StyledTableCell>\n    </StyledTableRow>\n  ));\n\n  function getTopScorersTeam(id){\n  let found = props.Teams.find(\n      (team) =>\n        team.ID === id\n    )\n    return found.Name;\n  }\n\n  if(props.Teams[0].LeagueID !== 6083 && props.Teams[0].LeagueID !== 6969 && props.Teams[0].LeagueID !== 7064){\n    console.log(props.Teams.LeagueID)\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table className=\"Table\" aria-label=\"customized table\" key={props.Key} style={{marginTop: \"2em\", marginBottom: \"1em\"}}>\n            <TableHead>\n              <TableRow>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <StyledTableCell>Pts</StyledTableCell>\n                <StyledTableCell style={{ textAlign: \"center\" }}>\n                  Last 5\n                </StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n          <div className=\"LeagueStatisticsHeader\">League Statistics</div>\n          <div className=\"LeagueStatistics\">\n          <ul className=\"LeagueStatsColumn\">\n            <li>Average home goals: {props.Stats.seasonAVG_home}</li>\n            <li>Average away goals: {props.Stats.seasonAVG_away}</li>\n            <li>BTTS: {props.Stats.seasonBTTSPercentage}%</li>\n            <li>Over 0.5 goals: {props.Stats.seasonOver05Percentage_overall}%</li>\n            <li>Over 1.5 goals: {props.Stats.seasonOver15Percentage_overall}%</li>\n            <li>Over 2.5 goals: {props.Stats.seasonOver25Percentage_overall}%</li>\n            <li>Over 3.5 goals: {props.Stats.seasonOver35Percentage_overall}%</li>\n            <li>Over 4.5 goals: {props.Stats.seasonOver45Percentage_overall}%</li>\n            </ul>\n            <ul className=\"LeagueStatsColumn\">\n            <li>Over 7.5 corners: {props.Stats.over75CornersPercentage_overall}%</li>\n            <li>Over 8.5 corners: {props.Stats.over85CornersPercentage_overall}%</li>\n            <li>Over 9.5 corners: {props.Stats.over95CornersPercentage_overall}%</li>\n            <li>Over 10.5 corners: {props.Stats.over105CornersPercentage_overall}%</li>\n            <li>Over 11.5 corners: {props.Stats.over115CornersPercentage_overall}%</li>\n            <li>Over 12.5 corners: {props.Stats.over125CornersPercentage_overall}%</li>\n            <li>Corners average: {props.Stats.cornersAVG_overall}</li>\n            <li>Cards average: {props.Stats.cardsAVG_overall}</li>\n\n            \n            </ul>\n            <ul className=\"TopScorersColumn\">\n            <h4>Top scorers</h4>\n            <li>{props.Stats.top_scorers[0].known_as} ({getTopScorersTeam(props.Stats.top_scorers[0].club_team_id)}): {props.Stats.top_scorers[0].goals_overall}</li>\n            <li>{props.Stats.top_scorers[1].known_as} ({getTopScorersTeam(props.Stats.top_scorers[1].club_team_id)}): {props.Stats.top_scorers[1].goals_overall}</li>\n            <li>{props.Stats.top_scorers[2].known_as} ({getTopScorersTeam(props.Stats.top_scorers[2].club_team_id)}): {props.Stats.top_scorers[2].goals_overall}</li>\n            <li>{props.Stats.top_scorers[3].known_as} ({getTopScorersTeam(props.Stats.top_scorers[3].club_team_id)}): {props.Stats.top_scorers[3].goals_overall}</li>\n            <li>{props.Stats.top_scorers[4].known_as} ({getTopScorersTeam(props.Stats.top_scorers[4].club_team_id)}): {props.Stats.top_scorers[4].goals_overall}</li>\n            <li>{props.Stats.top_scorers[5].known_as} ({getTopScorersTeam(props.Stats.top_scorers[5].club_team_id)}): {props.Stats.top_scorers[5].goals_overall}</li>\n            <li>{props.Stats.top_scorers[6].known_as} ({getTopScorersTeam(props.Stats.top_scorers[6].club_team_id)}): {props.Stats.top_scorers[6].goals_overall}</li>\n            <li>{props.Stats.top_scorers[7].known_as} ({getTopScorersTeam(props.Stats.top_scorers[7].club_team_id)}): {props.Stats.top_scorers[7].goals_overall}</li>\n            <li>{props.Stats.top_scorers[8].known_as} ({getTopScorersTeam(props.Stats.top_scorers[8].club_team_id)}): {props.Stats.top_scorers[8].goals_overall}</li>\n            <li>{props.Stats.top_scorers[9].known_as} ({getTopScorersTeam(props.Stats.top_scorers[9].club_team_id)}): {props.Stats.top_scorers[9].goals_overall}</li>\n          </ul>\n        </div>\n        </TableContainer>\n      );\n    }\n  } else {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table aria-label=\"customized table\" key={props.Key}>\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>P</StyledTableCell>\n                <StyledTableCell>Team</StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <StyledTableCell>Pts</StyledTableCell>\n                <StyledTableCell style={{ textAlign: \"center\" }}>\n                  Form\n                </StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n        </TableContainer>\n      );\n    }\n  }\n \n}\n","import React, { Component } from \"react\";\nexport var selectedOption = \"5\";\n\nexport var fixtureList = [];\n\nexport class Radio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOption: this.props.value,\n    };\n  }\n\n  handleOptionChange = () => {\n    this.setState({\n      selectedOption: this.props.value,\n    });\n    selectedOption = this.state.selectedOption;\n  };\n\n  render() {\n    return (\n      <section className=\"dark\">\n        <div className={this.props.className}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"lastGames\"\n              checked={this.state.checked}\n              onChange={this.handleOptionChange}\n              data-cy={this.props.value}\n            />\n            <span className=\"design\"></span>\n            <span className=\"text\">Last {this.props.value} games</span>\n          </label>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Radio;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./components/Header\";\nimport { Button } from \"./components/Button\";\nimport OddsRadio from \"./components/OddsRadio\";\nimport { selectedOdds } from \"./components/OddsRadio\";\nimport { StyledKofiButton } from \"./components/KofiButton\";\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  RedditShareButton,\n  RedditIcon,\n  TelegramShareButton,\n  TelegramIcon,\n  TwitterShareButton,\n  TwitterIcon,\n  WhatsappShareButton,\n  WhatsappIcon,\n} from \"react-share\";\n\nimport { generateFixtures } from \"./logic/getFixtures\";\nimport { selectedOption } from \"./components/radio\";\nimport { ThreeDots } from \"react-loading-icons\";\nimport reactDom from \"react-dom\";\nrequire(\"dotenv\").config();\n\nexport const proxyurl = \"https://safe-caverns-99679.herokuapp.com/\";\nexport var fixtureList = [];\nexport let allLeagueData = [];\n\nexport const availableLeagues = [];\nexport var orderedLeagues = [];\n\nasync function getHighestScoringTeams() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}over25`);\n  let arr = [];\n  let bestO25Bets;\n  await teamsList.json().then(async (teams) => {\n    console.log(teams.data);\n    for (let index = 0; index < 50; index++) {\n      const game = {\n        game: teams.data.top_fixtures.data[index].name,\n        teamCountry: teams.data.top_fixtures.data[index].country,\n        odds: teams.data.top_fixtures.data[index].odds_ft_over25,\n        averageGoals: teams.data.top_fixtures.data[index].avg_potential,\n        timestamp: await getMatchTime(\n          teams.data.top_fixtures.data[index].date_unix\n        ),\n      };\n      arr.push(game);\n    }\n\n    const finalArray = arr.filter(\n      (country) =>\n        country.teamCountry === \"England\" ||\n        country.teamCountry === \"Germany\" ||\n        country.teamCountry === \"Italy\" ||\n        country.teamCountry === \"France\" ||\n        country.teamCountry === \"Spain\"\n    );\n\n    bestO25Bets = finalArray.filter((game) => game.odds > 1.5);\n  });\n\n  let sortedArray = bestO25Bets.sort((a, b) => b.averageGoals - a.averageGoals);\n\n  return sortedArray;\n}\n\nasync function getLowestScoringTeams() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}under25`);\n  let arr = [];\n  let bestU25Bets;\n  await teamsList.json().then(async (teams) => {\n    console.log(teams.data);\n    for (let index = 0; index < 50; index++) {\n      const game = {\n        game: teams.data.top_fixtures.data[index].name,\n        teamCountry: teams.data.top_fixtures.data[index].country,\n        odds: teams.data.top_fixtures.data[index].odds_ft_under25,\n        averageGoals: teams.data.top_fixtures.data[index].avg_potential,\n        timestamp: await getMatchTime(\n          teams.data.top_fixtures.data[index].date_unix\n        ),\n      };\n      arr.push(game);\n    }\n\n    const finalArray = arr.filter(\n      (country) =>\n        country.teamCountry === \"England\" ||\n        country.teamCountry === \"Germany\" ||\n        country.teamCountry === \"Italy\" ||\n        country.teamCountry === \"France\" ||\n        country.teamCountry === \"Spain\"\n    );\n\n    bestU25Bets = finalArray.filter((game) => game.odds > 1.5);\n  });\n  let sortedArray = bestU25Bets.sort((a, b) => a.averageGoals - b.averageGoals);\n\n  return sortedArray;\n}\n\nasync function getMatchTime(unixTime) {\n  let milliseconds = unixTime * 1000;\n  let dateObject = new Date(milliseconds);\n\n  let time = dateObject.toLocaleString(\"en-GB\");\n  return time;\n}\n\n(async function getLeagueList() {\n  let leagueList;\n\n  leagueList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}leagueList`);\n\n  // ReactDOM.render(\n  //   <div className=\"LoadingText\">\n  //     Loading form data. This might take a while if you're the first user\n  //     today...\n  //   </div>,\n  //   document.getElementById(\"RadioButtons\")\n  // );\n\n  let leagueArray;\n  await leagueList.json().then((leagues) => {\n    leagueArray = Array.from(leagues.data);\n  });\n\n  for (let i = 0; i < leagueArray.length; i++) {\n    const league = leagueArray[i];\n    const name = leagueArray[i].name;\n\n    for (let x = 0; x < league.season.length; x++) {\n      const element = league.season[x];\n\n      if (element.year === 20212022 || element.year === 2022) {\n        if (element.id !== 5784) {\n          availableLeagues.push({ name: name, element });\n        }\n      }\n    }\n\n    async function mapOrder(array, order, key) {\n      array.sort(function (a, b) {\n        var A = a.element[key],\n          B = b.element[key];\n\n        if (order.indexOf(A) > order.indexOf(B)) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n      return array;\n    }\n\n    //leagues ordered by id\n    var leagueOrder = [\n      6135, //premier league 21/22\n      6089, //championship\n      6017, //league 1 21/22\n      6015, //league 2 21/22\n      6088, //National league 21/22\n      6211, //\n      5992, //Scottish Prem 21/22\n      6192, //\n      6198, //Serie A\n      6019, //French Prem 21/22\n      6117, //Portagul Prem 21/22\n      5951, //Dutch Prem 21/22\n      6079, //Belgian Pro League 21/22\n      7064, //sweden 22\n      5961, //Danish Prem 21\n      7048, //Norway Prem 21\n      6008, //Austrian Prem 21\n      6282, //Greek Prem 21\n      5948, //Polish prem 21/22\n      6967, //Irish Prem 21\n      6120, //Spanish secunda 21/22\n      6205, //\n      6020, //Bundesliga 2 21/22\n      6041, //German 3rd tier 21/22\n      6018, //French League 2 21/22\n      5991, //Scottish Championship\n      5976, //Scottish league 1 21/22\n      5974, //Scottish league 2 21/22\n      6173, //Women's prem 21/22\n      6969, //MLS 22\n      6639, //Australian A league 21/22\n      7097, //Brazil prem 22\n      6935, //Japan 21\n      7061, //S Korea 22\n      6038, //Mexico prem 21/22`\n      6083, //National league North and South 21/22\n    ];\n\n    orderedLeagues = await mapOrder(availableLeagues, leagueOrder, \"id\");\n  }\n\n  // ReactDOM.render(\n  //   <div className=\"LastXGames\">\n  //     <Radio\n  //       value=\"5\"\n  //       label=\"form based on last 5 games\"\n  //       className=\"FormRadio\"\n  //     />\n  //     <Radio\n  //       value=\"6\"\n  //       label=\"form based on last 6 games\"\n  //       className=\"FormRadio\"\n  //     />\n  //     <Radio\n  //       value=\"10\"\n  //       label=\"form based on last 10 games\"\n  //       className=\"FormRadio\"\n  //     />\n  //   </div>,\n  //   document.getElementById(\"RadioButtons\")\n  // );\n\n  // ReactDOM.render(\n  //   <TextBlock\n  //     text=\"Select how many games you would like to fetch form data for\"\n  //     className=\"RadioText\"\n  //   />,\n  //   document.getElementById(\"RadioText\")\n  // );\n\n  ReactDOM.render(\n    <div className=\"FixtureButtons\">\n      <div className=\"historicResults\">\n        <Button\n          text={\"Last Saturday\"}\n          className=\"HistoricFixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"lastSaturday\",\n                selectedOption,\n                selectedOdds\n              )\n            )\n          }\n        />\n        <Button\n          text={\"Historic predictions\"}\n          className=\"HistoricFixturesButtonRight\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\"historic\", selectedOption, selectedOdds)\n            )\n          }\n        />\n      </div>\n      <Button\n        text={\"Yesterday\"}\n        className=\"FixturesButton\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"yesterdaysFixtures\",\n              selectedOption,\n              selectedOdds\n            )\n          )\n        }\n      />\n      <Button\n        text={\"Today\"}\n        className=\"FixturesButton\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"todaysFixtures\",\n              selectedOption,\n              selectedOdds\n            )\n          )\n        }\n      />\n      <Button\n        text={\"Tomorrow\"}\n        className=\"FixturesButton\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"tomorrowsFixtures\",\n              selectedOption,\n              selectedOdds\n            )\n          )\n        }\n      />\n    </div>,\n    document.getElementById(\"Buttons\")\n  );\n  ReactDOM.render(\n    <div className=\"OddsRadios\">\n      <OddsRadio value=\"Fractional\"></OddsRadio>\n      <OddsRadio value=\"Decimal\"></OddsRadio>\n    </div>,\n    document.getElementById(\"Checkbox\")\n  );\n\n  ReactDOM.render(\n    <Button\n      text={\"Best value for under 2.5 goals\"}\n      className={\"Under25TeamsButton\"}\n      onClickEvent={async () => {\n        let games = await getLowestScoringTeams();\n        const teamList = [];\n\n        games.forEach(async (game) =>\n          teamList.push(\n            <ul className=\"GlobalStat\">\n              <p className=\"TeamName\">\n                {game.game} ({game.teamCountry})\n              </p>\n              <li>{game.timestamp}</li>\n              <li>Average combined goals: {game.averageGoals}</li>\n              <li>Odds under 2.5 goals: {game.odds}</li>\n            </ul>\n          )\n        );\n\n        reactDom.render(\n          <div>\n            <h3>Games featuring low scoring teams with high value odds</h3>\n            <ul>{teamList}</ul>\n          </div>,\n          document.getElementById(\"Under25Games\")\n        );\n      }}\n    ></Button>,\n    document.getElementById(\"Under25Games\")\n  );\n\n  ReactDOM.render(\n    <Button\n      text={\"Best value for over 2.5 goals\"}\n      className={\"Over25TeamsButton\"}\n      onClickEvent={async () => {\n        let games = await getHighestScoringTeams();\n        const teamList = [];\n\n        games.forEach(async (game) =>\n          teamList.push(\n            <ul className=\"GlobalStat\">\n              <p className=\"TeamName\">\n                {game.game} ({game.teamCountry})\n              </p>\n              <li>{game.timestamp}</li>\n              <li>Average combined goals: {game.averageGoals}</li>\n              <li>Odds over 2.5 goals: {game.odds}</li>\n            </ul>\n          )\n        );\n\n        reactDom.render(\n          <div>\n            <h3>Games featuring high scoring teams with high value odds</h3>\n            <ul>{teamList}</ul>\n          </div>,\n          document.getElementById(\"Over25Games\")\n        );\n      }}\n    ></Button>,\n    document.getElementById(\"Over25Games\")\n  );\n})();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <a\n        className=\"SocialLink\"\n        href=\"https://www.reddit.com/r/xgtipping/\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        r/xgtipping\n      </a>\n      <div id=\"LoadingContainer\" className=\"LoadingContainer\" />\n      <div id=\"RadioContainer\" className=\"RadioContainer\">\n        <div id=\"RadioText\" />\n        <div id=\"RadioButtons\" />\n      </div>\n      <div id=\"Day\" />\n      <div id=\"Checkbox\" />\n      <div id=\"Buttons\" className=\"Buttons\">\n        <ThreeDots className=\"MainLoading\" />\n        <div>Loading all fixture and form data...</div>\n      </div>\n      <div id=\"bestPredictions\" className=\"bestPredictions\" />\n      <div id=\"exoticOfTheDay\" className=\"exoticOfTheDay\" />\n      <div id=\"RowOneContainer\" className=\"RowOneContainer\">\n        <div id=\"BTTS\" className=\"RowOne\" />\n        <div id=\"longShots\" className=\"RowOne\" />\n        <div id=\"draws\" className=\"RowOne\" />\n      </div>\n      <div id=\"insights\" />\n      <div id=\"successMeasure\" />\n      <div id=\"tables\" />\n      <div id=\"homeBadge\" />\n      <div id=\"FixtureContainerHeaders\"></div>\n      <StyledKofiButton></StyledKofiButton>\n      <div id=\"XGDiff\"/>\n      <div id=\"FixtureContainer\">\n        <div>\n          <div className=\"WelcomeText\">\n            Global fixtures and predictions from 30+ league competitions,\n            including\n          </div>\n          <ul className=\"AllLeagues\">\n            <li className=\"League\">Premier League</li>\n            <li className=\"League\">La Liga</li>\n            <li className=\"League\">Serie A</li>\n            <li className=\"League\">Bundesliga</li>\n            <li className=\"League\">Ligue 1</li>\n            <li className=\"League\">MLS</li>\n            <li className=\"League\">Primeira Liga</li>\n          </ul>\n          <div className=\"DataText\">Raw data from</div>\n          <a\n            className=\"DataLink\"\n            href=\"https://www.footystats.org\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            footystats.org\n          </a>\n        </div>\n      </div>\n      <div id=\"Over25Games\" className=\"Over25Games\"></div>\n      <div id=\"Under25Games\" className=\"Under25Games\"></div>\n      <div className=\"Social\">\n        <TwitterShareButton\n          url={\"www.xgtipping.com\"}\n          title={\"#XGTipping\"}\n          className=\"ShareButton\"\n          style={{ backgroundColor: \"#e2e2e26c\", boxShadow: \"none\" }}\n        >\n          <TwitterIcon size={\"3em\"} round={true} />\n        </TwitterShareButton>\n        <FacebookShareButton\n          url={\"www.xgtipping.com\"}\n          quote={\"XGTipping - data-driven football predictions\"}\n          className=\"ShareButton\"\n          style={{ backgroundColor: \"#e2e2e26c\", boxShadow: \"none\" }}\n        >\n          <FacebookIcon size={\"3em\"} round={true} />\n        </FacebookShareButton>\n        <RedditShareButton\n          url={\"www.xgtipping.com\"}\n          title={\"XGTipping\"}\n          className=\"ShareButton\"\n          style={{ backgroundColor: \"#e2e2e26c\", boxShadow: \"none\" }}\n        >\n          <RedditIcon size={\"3em\"} round={true} />\n        </RedditShareButton>\n        <WhatsappShareButton\n          url={\"www.xgtipping.com\"}\n          title={\"XGTipping\"}\n          separator=\": \"\n          className=\"ShareButton\"\n          style={{ backgroundColor: \"#e2e2e26c\", boxShadow: \"none\" }}\n        >\n          <WhatsappIcon size={\"3em\"} round={true} />\n        </WhatsappShareButton>\n        <TelegramShareButton\n          url={\"XGTipping\"}\n          title={\"XGTipping\"}\n          className=\"ShareButton\"\n          style={{ backgroundColor: \"#e2e2e26c\", boxShadow: \"none\" }}\n        >\n          <TelegramIcon size={\"3em\"} round={true} />\n        </TelegramShareButton>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}