{"version":3,"sources":["components/Header.js","components/Button.js","components/OddsRadio.js","components/createBadge.js","components/createStatsDiv.js","components/Div.js","logic/getForm.js","components/Slider.js","components/CollapsableElement.js","components/Increment.js","logic/getBTTSPotential.js","components/Carousel.js","components/KofiButton.js","components/SliderDiff.js","logic/getScorePredictions.js","components/LeagueTable.js","logic/getFixtures.js","components/HeadToHead.js","components/Table.js","logic/getTeamStats.js","logic/compareFormTrend.js","components/Chart.js","components/SofaScore.js","logic/getStats.js","components/Fixture.js","logic/dataSlice.js","logic/store.js","App.js","reportWebVitals.js","components/Team.js","index.js"],"names":["Header","className","Button","props","id","text","variant","type","onClick","onClickEvent","style","selectedOdds","OddsRadio","handleOptionChange","setState","value","state","this","name","checked","onChange","Component","CreateBadge","image","ClassName","src","alt","flexShrink","Stats","styleForm","formIndicator","styleBTTS","BTTSBoolean","clicked","formRun","console","log","FormTextString","FavouriteRecord","Results","homeOrAway","ResultsHorA","homeOrAwayResults","BTTSArray","goals","conceeded","possession","XG","XGConceded","goalDifference","goalDifferenceHomeOrAway","sot","dangerousAttacks","leaguePosition","homeOrAwayLeaguePosition","winPercentage","toFixed","drawPercentage","lossPercentage","ppg","formTrend","CardsTotal","CornersAverage","Div","getForm","match","teams","homeId","awayId","fixtureForm","i","team","fetch","process","response","json","then","formData","lastMatchTimestamp","last_updated_match_timestamp","length","rangeValue","Slide","useState","range","setRange","fractionalValue","setFractionalValue","useEffect","roundedValueOne","Math","round","roundedValueTwo","fractionalOne","oddslib","from","to","precision","fractionalTwo","error","sx","width","color","event","newValue","valueLabelDisplay","step","min","max","valueLabelFormat","index","Collapsable","transitionTime","trigger","classNameButton","buttonText","classNameFlex","classNameTwo","element","classNameThree","elementTwo","incrementValue","riskLevel","Increment","IncrementItem","getNewTips","allTips","DecreaseItem","show","getBTTSPotential","homeGoals","awayGoals","unroundedHomeGoals","unroundedAwayGoals","homeBTTS","bttsAllPercentageHome","homeOnlyBTTS","bttsPercentageHomeHome","awayOnlyBTTS","bttsPercentageAwayAway","awayBTTS","bttsAllPercentageAway","homeG","awayG","combinedBTTS","bttsFraction","status","awayOdds","btts","bttsChosen","totalGoals","rawFinalHomeGoals","rawFinalAwayGoals","SwiperCore","use","EffectCoverflow","Pagination","Slider","effect","autoHeight","grabCursor","centeredSlides","slidesPerView","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","pagination","clickable","element2","element3","element4","element5","StyledKofiButton","title","kofiID","minimumXG","minimumGD","minimumGDHorA","minimumLast10","SlideDiff","finalHomeGoals","finalAwayGoals","homeOdds","setValue","useCase","marks","parseFloat","lower","upper","Headers","append","drawPredictions","sumStatDAWin","sumStatDALoss","sumStatPossessionWin","sumStatPossessionLoss","sumStatSOTWin","sumStatSOTLoss","sumStatPPGLast10Win","sumStatPPGLast10Loss","sumOddsWin","sumOddsLoss","sumXGForWin","sumXGForLoss","sumXGAgainstWin","sumXGAgainstLoss","allDrawOutcomes","totalROI","totalInvestment","totalProfit","convertTimestamp","timestamp","newDate","Date","toLocaleDateString","split","day","month","year","converted","getPointsFromLastX","lastX","pointsAddition","points","forEach","game","getPastLeagueResults","hOrA","form","date","allLeagueResultsArrayOfObjects","leagueIndex","fixtures","teamsHomeResults","filter","fixture","home_name","item","date_unix","sort","a","b","teamsAwayResults","away_name","homeResults","awayResults","oddsSumHome","oddsSumAway","favouriteCount","underdogCount","winningFavouriteCount","drawingFavouriteCount","beatenFavouriteCount","winningUnderdogCount","drawingUnderdogCount","beatenUnderdogCount","resultedGame","homeGoalCount","team_a_xg","awayGoalCount","team_b_xg","team_a_possession","team_a_shots","team_a_shotsOnTarget","team_b_shotsOnTarget","team_a_dangerous_attacks","team_a_corners","odds_ft_1","odds_ft_2","homeTeam","awayTeam","XGAgainst","scored","shots","sotAgainst","corners","dateRaw","oddsHome","oddsAway","result","push","team_b_possession","team_b_shots","team_b_dangerous_attacks","team_b_corners","reversedResultsHome","reversedResultsAway","y","allClearFavouriteResultsHome","allClearFavouriteResultsAway","simlarGameResultsHome","concat","allSlightFavouriteResultsHome","allSlightFavouriteResultsAway","allTossupResultsHome","allTossupResultsAway","allUnderdogResultsHome","allUnderdogResultsAway","allMassiveUnderdogResultsHome","allMassiveUnderdogResultsAway","z","simlarGameResultsAway","allTeamResults","allTeamResultsHome","allTeamResultsAway","points6","map","res","slice","pointsSum6","reduce","avPoints6","points5","pointsSum5","avPoints5","pointsAll","pointsSumAll","avPointsAll","resultsAll","resultsHome","resultsAway","avScoredLast5","avScoredLast5Sum","avConceededLast5","avConceededLast5Sum","avDALast5","avDALast5Sum","avSOTLast5","avSOTLast5Sum","avSOTAgainstLast5","avSOTAgainstLast5Sum","avShotsLast5","avShotsLast5Sum","avCornersLast5","avCornersLast5Sum","avPosessionLast5","avPosessionLast5Sum","avXGLast5","avXGLast5Sum","avXGAgainstLast5","avXGAgainstLast5Sum","averageOddsHome","averageOddsAway","oddsReliabilityWin","oddsReliabilityDraw","oddsReliabilityLose","oddsReliabilityWinAsUnderdog","oddsReliabilityDrawAsUnderdog","oddsReliabilityLoseAsUnderdog","reliableIndicator","unreliableIndicator","predictabilityScore","reliabilityString","teamGoalsHome","teamGoalsAway","teamGoalsAll","teamGoalsAllRecentAtStart","reverse","teamConceededHome","teamConceededAway","teamConceededAll","teamConceededAllRecentAtStart","teamXGForAll","teamXGAgainstAll","teamXGForAllRecentAtStart","teamXGAgainstAllRecentAtStart","teamXGForHome","teamXGAgainstHome","teamXGForAway","teamXGAgainstAway","XGSum","avgXGScored","XGAgainstSum","avgXGConceeded","possessionSum","avgPossession","possessionHome","possessionSumHome","avgPossessionHome","possessionAway","possessionSumAway","avgPossessionAway","dangerousAttacksSum","avgDangerousAttacks","dangerousAttacksHome","dangerousAttacksSumHome","avgDangerousAttacksHome","dangerousAttacksAway","dangerousAttacksSumAway","avgDangerousAttacksAway","shotsSum","avgShots","shotsHome","shotsSumHome","avgShotsHome","shotsAway","shotsSumAway","avgShotsAway","shotsOnTarget","shotsOnTargetSum","avgShotsOnTarget","shotsOnTargetHome","shotsOnTargetSumHome","avgShotsOnTargetHome","shotsOnTargetAway","shotsOnTargetSumAway","avgShotsOnTargetAway","shotsOnTargetAgainst","shotsOnTargetSumAgainst","avgShotsOnTargetAgainst","shotsOnTargetAgainstHome","shotsOnTargetSumAgainstHome","avgShotsOnTargetAgainstHome","shotsOnTargetAgainstAway","shotsOnTargetSumAgainstAway","avgShotsOnTargetAgainstAway","cornersSum","cornersAv","cornersHome","cornersSumHome","cornersAvHome","cornersAway","cornersSumAway","cornersAvAway","last5XG","last5XGSum","last5XGAvgFor","last5XGHome","last5XGSumHome","last5XGAvgForHome","last5XGAway","last5XGSumAway","last5XGAvgForAway","XGSumHome","avgXGScoredHome","XGSumAway","avgXGScoredAway","XGAgainstSumHome","avgXGConceededHome","XGAgainstSumAway","avgXGConceededAway","last5XGAgainst","last5XGAgainstSum","last5XGAvgAgainst","last5XGAgainstHome","last5XGAgainstSumHome","last5XGAvgAgainstHome","last5XGAgainstAway","last5XGAgainstSumAway","last5XGAvgAgainstAway","XGDiffNonAverage","XGDiffNonAverageLast5","XGOverall","XGlast5","XGAgainstAvgOverall","XGAgainstlast5","AveragePossessionOverall","AverageDangerousAttacksOverall","AverageCorners","AverageShotsOnTargetOverall","AverageShotsOnTargetAgainstOverall","alpha","beta","allGoalsArrayHomeRecent","allConceededArrayHomeRecent","allGoalsArrayHome","allConceededArrayHome","allGoalsArrayHomeOnly","allConceededArrayHomeOnly","sum","sumTwo","predictGoalsWithExponentialSmoothing","forAndAgainstRollingAv","forAndAgainstRollingAvHomeOrAway","allGoalsArrayAwayRecent","allConceededArrayAwayRecent","allGoalsArrayAway","allConceededArrayAway","allGoalsArrayAwayOnly","allConceededArrayAwayOnly","bttsHome","bttsAway","bttsAll","bttsHomeCount","bttsHomeString","bttsHomePercentage","bttsAwayCount","bttsAwayString","bttsAwayPercentage","bttsAllCount","bttsAllString","bttsAllPercentage","r","x","predictNextWeightedMovingAverage","teamGoalsHomeRollingAverage","teamGoalsAwayRollingAverage","RoundedXGFor","xg","RoundedXGAgainst","RoundedXGForHome","RoundedXGAgainstHome","RoundedXGForAway","RoundedXGAgainstAway","XGPrediction","XGPredictionHome","XGPredictionAway","teamConceededHomeRollingAverage","teamConceededAwayRollingAverage","avgScored","sumHome","avgScoredHome","sumAway","avgScoredAway","last5","last5Sum","last5AvgScored","last5Home","last5SumHome","last5AvgScoredHome","last5Away","last5SumAway","last5AvgScoredAway","last5Conceeded","last5ConceededSum","last5AvgConceeded","last5ConceededHome","last5ConceededSumHome","last5AvgConceededHome","last5ConceededAway","last5ConceededSumAway","last5AvgConceededAway","last10","last10Sum","last10AvgScored","last10Conceeded","last10ConceededSum","last10AvgConceeded","last5Goals","last5GoalsConceeded","last5GoalDiff","last10Goals","last10GoalsConceeded","last10GoalDiff","teamGoalsAllRollingAverage","teamGoalsConceededAllRollingAverage","avgConceeded","teamConceededHomeOnlySum","teamConceededAvgHomeOnly","teamConceededAwayOnlySum","teamConceededAvgAwayOnly","numbers","windowSize","startIndex","window","weights","Array","_","acc","num","movingAverage","w","calculateWeightedAverage","arr","weightedSum","totalWeight","weight","pow","teamGoalsFor","teamGoalsAgainst","lambdaFor","lambdaAgainst","predictedGoalsFor","predictedGoalsAgainst","goalsFor","goalsAgainst","calculateDifference","num1","num2","comparison","metricOne","metricTwo","stat1","stat2","statDiff","getClinicalRating","dangerousAttackConversion","rating","score","getPointsDifferential","pointsHomeAvg","pointsAwayAvg","diff","differential","getPointWeighting","pointsDiff","pointsDiffWeightingHome","pointsDiffWeightingAway","compareFormTrend","recentForm","distantForm","scoreTotal","recent","distant","getPointAverage","pointTotal","games","poissonDistribution","lambda","k","numerator","exp","denominator","factorial","n","calculateAverageGoals","adjustGoalsAvg","goalsAvg","strengthRatio","predictScore","goalsForTeam1","goalsAgainstTeam1","goalsForTeam2","goalsAgainstTeam2","team1Metrics","team2Metrics","team1AverageGoalsFor","team1AverageGoalsAgainst","team2AverageGoalsFor","team2AverageGoalsAgainst","team1StrengthRatio","team2StrengthRatio","adjustedTeam1AverageGoals","adjustedTeam2AverageGoals","adjustedTeam1AverageGoalsAgainst","adjustedTeam2AverageGoalsAgainst","maxGoals","scores","j","team1GoalExpectation","team2GoalExpectation","isFinite","probability","team1Score","team2Score","top5Scores","generateGoals","homeForm","awayForm","attackingStrength","defensiveStrengthScoreGeneration","homeAttackVsAwayDefenceComparison","awayAttackVsHomeDefenceComparison","defensiveStrength","attackingStrengthLast5","defensiveStrengthScoreGenerationLast5","homeAttackVsAwayDefenceComparisonLast5","awayAttackVsHomeDefenceComparisonLast5","attackingStrengthHomeOnly","defensiveStrengthScoreGenerationAwayOnly","homeAttackVsAwayDefenceComparisonHomeOnly","attackingStrengthAwayOnly","defensiveStrengthScoreGenerationHomeOnly","awayAttackVsHomeDefenceComparisonAwayOnly","lastGame","last2Points","XGdifferentialValueRaw","calculateScore","divider","calculate","allForm","find","home","teamName","away","PlayedHome","PlayedAway","LastFiveForm","previousToLastGame","last2","twoGameAverage","last3Points","threeGameAverage","last5Points","fiveGameAverage","last6Points","sixGameAverage","last10Points","tenGameAverage","lastHomeOrAwayPoints","homeOrAwayAverage","ScoredAverage","ScoredOverall","ConcededAverage","ConcededOverall","ScoredAverageShortTerm","ConcededAverageShortTerm","longTermAverageGoals","longTermAverageConceeded","recentGoalDiff","distantGoalDiff","recentDA","distantDA","recentPosession","distantPosession","recentCleanSheet","CleanSheetPercentage","distantCleanSheet","recentFormArray","distantFormArray","formTrendScore","expectedGoals","ScoredAverageShortAndLongTerm","conceededAverageShortAndLongTerm","longTermGoalDifference","shortTermGoalDifference","XGdifferential","XGdifferentialRecent","actualToXGDifferenceRecent","formHome","formAway","homeTenGameAvg","awayTenGameAvg","homeTwoGameAvg","awayTwoGameAvg","pointsDiff10","pointsDiff2","last10WeightingHome","last10WeightingAway","last2WeightingHome","last2WeightingAway","clinicalRating","clinicalScore","XGdifferentialValue","abs","leagueID","predictedGoalsBasedOnHomeAv","predictedGoalsBasedOnAwayAv","allTeamGoalsBasedOnAverages","predictedGoalsConceededBasedOnHomeAv","predictedGoalsConceededBasedOnAwayAv","allTeamGoalsConceededBasedOnAverages","averageScoredLeague","averageConceededLeague","last10btts","last10bttsHome","last10bttsAway","bttsPercentageHomeAway","bttsPercentageAwayHome","homeTeamHomePositionRaw","awayTeamAwayPositionRaw","homePositionHomeOnly","awayPositionAwayOnly","homePosition","homeRawPosition","awayPosition","awayRawPosition","improving","AttackingPotency","AttacksHome","AttacksAverage","attackingMetricsHome","AverageShots","Corners","attackingMetricsHomeLast5","attackingMetricsHomeOnly","attackingMetricsAwayOnly","attackingMetricsAway","attackingMetricsAwayLast5","defensiveMetricsHome","defensiveMetricsHomeLast5","defensiveMetricsAway","defensiveMetricsAwayLast5","defensiveMetricsHomeOnly","defensiveMetricsAwayOnly","attackingMetrics","defensiveMetrics","calculateAttackingStrength","attackingStrengthScoreGeneration","calculateDefensiveStrength","defensiveStrengthLast5","defensiveStrengthHomeOnly","defensiveStrengthAwayOnly","calculateMetricStrength","possessionStrength","possessionStrengthLast5","possessionStrengthHomeOnly","directnessOverall","directnessOverallLast5","directnessHomeOnly","directnessAwayOnly","directnessOverallStrength","directnessOverallStrengthLast5","directnessHomeStrength","directnessAwayStrength","shootingAccuracy","shootingAccuracyLast5","shootingAccuracyHomeOnly","shootingAccuracyAwayOnly","accuracyOverallStrength","accuracyOverallStrengthLast5","accuracyHomeStrength","accuracyAwayStrength","xgForStrength","xgForStrengthLast5","xgForStrengthHomeOnly","xgAgainstStrength","xgAgainstStrengthLast5","xgAgainstStrengthHomeOnly","possessionStrengthAwayOnly","xgForStrengthAwayOnly","xgAgainstStrengthAwayOnly","parseInt","actualToXGDifference","teamGoalsCalc","weighting","undefined","scorePredictionsRecent","scorePredictionsHA","scorePredictions","homeGoalDiff","awayGoalDiff","goalsDifferential","rollingAverageGoalsDifferential","GoalsInGamesAverageHome","GoalsInGamesAverageAway","factorOneHome","factorOneAway","factorTwoHome","factorTwoAway","scoreDiff","experimentalHomeGoals","experimentalAwayGoals","floor","omit","prediction","includeInMultis","outcome","pointsDifferential","pointsDifferentialValue","pointsDifferentialValueRaw","rollingGoalDiffDifferential","rollingGoalDiff","rollingGoalDiffValue","dangerousAttacksDifferential","dangerousAttacksDiff","dangerousAttacksDiffValue","winner","predictionOutcome","over25PredictionOutcome","bttsOutcome","total","total2","drawOdds","last10PointDiffHomePerspective","last10PointDiffAwayPerspective","XGDiffBetweenTeamsHomePerspective","XGDiffBetweenTeamsAwayPerspective","goalDiffHomeOrAwayComparison","goalDifferenceComparison","game_week","profit","getSuccessMeasure","sumProfit","investment","exactScores","successCount","netProfit","hasOwnProperty","exactScore","ROI","operand","operandTwo","exactScoreHitRate","successRate","ReactDOM","render","document","getElementById","price","combinations","gamesInExotic","exoticStake","exoticString","allTipsSorted","newArray","bestBets","Over25Tips","XGDiffTips","rollingDiffTips","dangerousAttacksDiffTips","pointsDiffTips","exoticArray","bttsArray","accumulatedOdds","predictions","array","tip","indexOf","rawOdds","renderTips","getScorePrediction","mocked","mock","Promise","all","matches","goalsA","goalsB","unroundedGoalsA","unroundedGoalsB","outcomeSymbol","over25PredictionOutcomeSymbol","bttsOutcomeSymbol","fractionHome","teamComparisonScore","predictionObject","odds","comparisonScore","rawComparisonScore","goalDifferential","experimentalCalc","fractionAway","Over25PredictionObject","decimalOdds","homeDoubleChance","over25Odds","doubleChanceOutcome","goalTotalUnrounded","XGPredictionObject","otherTeam","pointsDiffObject","rollingDiffObject","dangerousAttacksDiffObject","RenderAllFixtures","bool","getMultis","getCoverBetMaxReturns","getAccumulatorPrice","priceArray","minAccSize","stake","perms","getUniquePermutations","permLength","permutations","newArr","splice","twoDimArrayUnion","arr1","arr2","duplicate","NewlineText","str","toggleState","setIsOff","upArrow","StyledTableCell2","withStyles","theme","head","backgroundColor","padding","paddingTop","paddingBottom","textAlign","fontSize","fontFamily","margin","body","TableCell","StyledTableCell","StyledTableRow","root","TableRow","LeagueTable","singleResult","rows","Teams","component","scope","Name","Played","Wins","Draws","Losses","For","Against","GoalDifference","Points","Form","Key","leagueResults","team_a_red_cards","team_b_red_cards","leagueResultsOlder","getTopScorersTeam","ID","sorted","league","order","sortedByForm","LastWeeksResults","GamesPlayed","LeagueID","TableContainer","Paper","Table","marginTop","marginBottom","TableHead","TableBody","mostRecentGameweek","seasonAVG_home","seasonAVG_away","seasonBTTSPercentage","seasonOver05Percentage_overall","seasonOver15Percentage_overall","seasonOver25Percentage_overall","seasonOver35Percentage_overall","seasonOver45Percentage_overall","over75CornersPercentage_overall","over85CornersPercentage_overall","over95CornersPercentage_overall","over105CornersPercentage_overall","over115CornersPercentage_overall","over125CornersPercentage_overall","cornersAVG_overall","cardsAVG_overall","top_scorers","known_as","club_team_id","goals_overall","fixtureResponse","leagueInstance","lastThreeFormHome","lastThreeFormAway","lastFiveFormHome","lastFiveFormAway","lastSixFormHome","lastSixFormAway","lastTenFormHome","lastTenFormAway","leagueOrAll","formRunHome","formRunAway","WDLinLeagueHome","WDLinLeagueAway","HomeAverageGoals","homeAverageGoals","HomeAverageConceded","homeAverageConceded","AwayAverageGoals","awayAverageGoals","AwayAverageConceded","awayAverageConceded","require","fixtureArray","arrayOfGames","leagueGames","leagueArray","leagueIdArray","tableArray","worldCupArray","generateTables","allResults","currentLeagueId","data","specific_tables","groups","table","currentTeam","wdl_record","toUpperCase","Position","cleanName","matchesPlayed","seasonWins_overall","seasonDraws_overall","seasonLosses_overall","seasonGoals","seasonConceded_home","seasonConceded_away","seasonGoalDifference","LastXPoints","wdl","seasonConceded","group","league_table","all_matches_table_overall","results","mostRecentGame","pop","gameweeksResults","leagueTable","leagueStatistics","stats","statistics","createFixture","mockBool","roundedHomeOdds","roundedAwayOdds","homeFraction","awayFraction","bttsOdds","roundedBTTSOdds","homeTeamWinsPercentage","homeTeamWinPercentage","homeTeamLossesPercentage","homeTeamLossPercentage","homeTeamDrawsPercentage","homeTeamDrawPercentage","awayTeamWinsPercentage","awayTeamWinPercentage","awayTeamLossesPercentage","awayTeamLossPercentage","awayTeamDrawsPercentage","awayTeamDrawPercentage","Fixture","isFunctionRunning","generateFixtures","footyStatsFormattedDate","current","todaysDate","dateSS","getPrefix","position","teamPositionPrefix","updateResults","method","headers","Accept","JSON","stringify","height","fill","url","formUrl","formArray","leaguesStored","storedForm","isFormStored","isStoredLocally","orderedLeagues","leaguePositions","allLeagueResults","leagues","allGames","sofaScore","events","time","startTimestamp","homeScore","display","awayScore","startDate","getTime","targetDate","orderedLeague","gamesFiltered","gamesShortened","pager","current_page","max_page","page2","page2Data","gamesConcat","gamesConcatFiltered","mostRecentResults","shortenedResults","pre_match_teamA_overall_ppg","pre_match_teamB_overall_ppg","leagueObj","homeLeague","awayLeague","all_matches_table_home","all_matches_table_away","regularSeason","season","string","stringHome","stringAway","rawPosition","homeFormName","awayFormName","homeSeasonWinPercentage","seasonWins","awaySeasonWinPercentage","homeSeasonLossPercentage","seasonLosses_home","awaySeasonLossPercentage","seasonLosses_away","homeSeasonDrawPercentage","seasonDraws","awaySeasonDrawPercentage","homeSeasonMatchesPlayed","awaySeasonMatchesPlayed","played","competition_id","unixTimestamp","dateObject","previousLeagueName","leagueName","toLocaleString","hour","minute","odds_ft_x","odds_doublechance_1x","awayDoubleChance","odds_doublechance_x2","odds_btts_yes","homeID","awayID","homeTeamInfo","awayTeamInfo","homeTeaminLeague","awayTeaminLeague","teamPositionHome","teamPositionHomeTable","teamPositionAwayTable","homeTeamWinPercentageHome","awayTeamWinPercentageAway","homeTeamLossPercentageHome","awayTeamLossPercentageAway","homeTeamDrawPercentageHome","awayTeamDrawPercentageAway","teamPositionAway","homePrefix","homePrefixHomeTable","awayPrefix","awayPrefixAwayTable","homeSeasonPPG","awaySeasonPPG","homeTeaminHomeLeague","awayTeaminAwayLeague","homeFormString5","additional_info","formRun_overall","awayFormString5","homeFormString6","awayFormString6","homeFormString10","awayFormString10","homeFormRun","formRun_home","awayFormRun","formRun_away","season_format","xg_for_avg_overall","xg_for_avg_home","seasonScoredNum_overall","seasonScoredAVG_home","seasonMatchesPlayed_home","seasonMatchesPlayed_away","seasonConcededNum_overall","seasonConcededAVG_home","xg_against_avg_overall","XGAgainstAverage","xg_against_avg_home","seasonCSPercentage_overall","possessionAVG_overall","AveragePossession","possessionAVG_home","shotsOnTargetAVG_overall","AverageShotsOnTarget","shotsOnTargetAVG_home","dangerous_attacks_avg_overall","PPG","seasonPPG_overall","attacks_avg_home","AttacksAway","attacks_avg_away","AverageDangerousAttacks","dangerous_attacks_avg_home","homeAttackAdvantage","homeDefenceAdvantage","BTTSPercentage","seasonBTTSPercentage_home","LeagueOrAll","LeaguePosition","LeagueAverageGoals","LeagueAverageConceded","shotsAVG_overall","shotsAVG_home","seasonGoalDifference_overall","seasonGoalDifference_home","seasonBTTSPercentage_overall","cardsTotal_overall","scoredBothHalvesPercentage_overall","AverageShotsHomeOrAway","lastThreeForm","LastSixForm","LastTenForm","SeasonPPG","WinPercentage","LossPercentage","DrawPercentage","BttsPercentage","BttsPercentageHomeOrAway","ScoredBothHalvesPercentage","LastMatch","WDLRecord","xg_for_avg_away","seasonScoredAVG_away","seasonConcededAVG_away","xg_against_avg_away","possessionAVG_away","shotsOnTargetAVG_away","dangerous_attacks_avg_away","seasonBTTSPercentage_away","shotsAVG_away","seasonGoalDifference_away","teamIDHome","teamIDAway","leagueId","homeBadge","home_image","awayBadge","away_image","homePpg","home_ppg","awayPpg","away_ppg","homeTeamHomePosition","awayTeamAwayPosition","odds_ft_over25","btts_potential","stadium","stadium_name","expectedGoalsHomeToDate","team_a_xg_prematch","expectedGoalsAwayToDate","team_b_xg_prematch","setTimeout","HeadToHead","homeWins","awayWins","draws","averageGoals","bestHomeOdds","bestAwayOdds","lastGameStadiumName","lastGameDate","lastGameHomeTeam","lastGameHomeGoals","lastGameAwayGoals","lastGameAwayTeam","secondToLastGameStadiumName","secondToLastGameDate","secondToLastGameHomeTeam","secondToLastGameHomeGoals","secondToLastGameAwayGoals","secondToLastGameAwayTeam","lineHeight","CustomizedTables","align","o05Stat","o05Odds","u05Odds","o15Stat","o15Odds","u15Odds","o25Stat","o25Odds","u25Odds","o35Stat","o35Odds","u35Odds","BTTSStat","BTTSForecast","BTTSOdds","BTTSOddsNo","getTeamStats","identifier","getBTTSPercentage","getFairOdds","impliedProbability","impliedProbabilityDivided","homeToal","awayTotal","fixtureHistory","matchArr","h2h","previous_matches_ids","oddsComparisonHomeArray","oddsComparisonAwayArray","odds_comparison","sortedHomeOdds","Object","entries","sortedAwayOdds","bestHomeOddsProvider","bestAwayOddsProvider","previous_matches_results","totalMatches","lastMatch","secondMatchExists","secondToLastMatch","previousMatch","previousMatchDetails","getDate","getMonth","getFullYear","secondToPreviousMatch","secondToPreviousMatchDetails","dateObject2","date2","betting_stats","bttsPercentage","fairOddsBTTSYes","fairOddsBTTSNo","team_a_wins","team_b_wins","draw","avg_goals","isNaN","over05Percentage","over15Percentage","o15Forecast","o15_potential","odds_ft_over05","odds_ft_under05","odds_ft_over15","odds_ft_under15","over25Percentage","o25Forecast","o25_potential","odds_ft_under25","over35Percentage","o35Forecast","o35_potential","odds_ft_over35","odds_ft_under35","odds_btts_no","CornersStat","CornersForecast","corners_potential","CornersOdds","odds_corners_over_105","getOverOrUnderText","xgSum","overUnderAchievingSum","getXGDifferential","xgFor","xgAgainst","xgDiff","goalDiff","compareXgAndGoalDiff","getAttackingSummary","goalsRecent","goalsLongTerm","getDefenceSummary","cleansheetStat","lastx","ten","five","xgText","attackString","defenceString","pointsAverageTotal","GenerateFormSummary","Chart","data1","options","responsive","aspectRatio","maintainAspectRatio","layout","elements","point","radius","scales","suggestedMin","suggestedMax","grid","borderWidth","borderColor","ticks","font","size","plugins","legend","labels","boxHeight","keys","datasets","label","team1","tension","team2","data2","RadarChart","angleLines","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","BarChart","datasetOne","idx","numOne","numTwo","tempArr","firstNum","secondNum","findLargestNum","indexAxis","bar","tooltip","enabled","context","dataIndex","dataset","ChartJS","register","CategoryScale","LinearScale","RadialLinearScale","PointElement","ArcElement","Filler","BarElement","LineElement","Title","Tooltip","Legend","SofaLineupsWidget","differenceInSeconds","minutes","iframeSrc","currentTime","maxWidth","border","scrolling","frameborder","metric","ranges","normalizedValue","normValue","val","metricName","metricValue","averagePossession","accuracyOverall","Error","weightedScore","rollingGoalDiffTotalHome","rollingGoalDiffTotalAway","displayBool","testBool","styling","alert","getPointsFromGames","formArr","pairings","W","D","L","arrayOfIndividualPoints","getLastGameResult","homeXG","awayXG","homeShots","awayShots","homeSot","awaySot","homeDangerousAttacks","awayDangerousAttacks","homePossession","awayPossession","homeRed","awayRed","homePPG","awayPPG","singleSimilarResult","StatsHome","gameCount","formDataHome","Last5","gameArrayHomeTeamHomeGames","homeTenGameAverage","homeSixGameAverage","homeFiveGameAverage","homeLastGame","FormTextStringHome","StatsAway","formDataAway","gameArrayAwayTeamAwayGames","awayTenGameAverage","awaySixGameAverage","awayFiveGameAverage","awayLastGame","FormTextStringAway","getGameIdByHomeTeam","homeTeamName","matchingGames","includes","gameStats","gameArrayHome","gameArrayAway","goalDiffHomeMovingAv","goalDiffAwayMovingAv","getEMA","p","pos","resultHome","resultHomeOnly","timeZone","won","goalsScored","goalsConceeded","wonHomeOrAwayOnly","goalDiffArrayHome","cumulativeSumHome","resultAway","resultAwayOnly","wonAwayOrAwayOnly","goalDiffArrayAway","cumulativeSumAway","bttsArrayHome","bttsArrayAway","homeFormTrend","awayFormTrend","formTextStringHome","formTextStringAway","favouriteRecordHome","favouriteRecordAway","homeAttackStrength","homeAttackStrengthLast5","homeOnlyAttackStrength","homeDefenceStrength","homeDefenceStrengthLast5","homeOnlyDefenceStrength","homePossessionStrength","homePossessionStrengthLast5","homeOnlyPossessionStrength","homeXGForStrength","homeXGForStrengthLast5","homeOnlyXGForStrength","homeXGAgainstStrength","homeXGAgainstStrengthLast5","homeOnlyXGAgainstStrength","homeDirectnessStrength","homeDirectnessStrengthLast5","homeOnlyDirectnessStrength","homeAccuracyOverallStrength","homeAccuracyOverallStrengthLast5","homeOnlyAccuracyOverallStrength","awayAttackStrength","awayAttackStrengthLast5","awayOnlyAttackStrength","awayDefenceStrength","awayDefenceStrengthLast5","awayOnlyDefenceStrength","awayPossessionStrength","awayPossessionStrengthLast5","awayOnlyPossessionStrength","awayXGForStrength","awayXGForStrengthLast5","awayOnlyXGForStrength","awayXGAgainstStrength","awayXGAgainstStrengthLast5","awayOnlyXGAgainstStrength","awayDirectnessStrength","awayDirectnessStrengthLast5","awayOnlyDirectnessStrength","awayAccuracyOverallStrength","awayAccuracyOverallStrengthLast5","awayOnlyAccuracyOverallStrength","formPointsHome","formPointsAway","AverageGoals","AverageConceeded","AverageXG","AverageXGConceded","Last5PPG","formArrayHome","formArrayAway","chartType","overviewHome","overviewAway","similarGamesHome","similarGamesAway","matchingGame","toString","resultValue","count","mockValue","initialState","dataHome","localStorage","getItem","dataAway","dataHomeDef","dataAwayDef","homeDetails","awayDetails","fixtureDetails","dataSlice","createSlice","reducers","setData","action","payload","actions","store","configureStore","reducer","dataReducer","GetDivider","matchStatus","isPrediction","renderLeagueName","renderTable","SingleFixture","dispatch","useDispatch","StoreData","homeTeamBadge","awayTeamName","awayTeamBadge","setItem","key1","key2","open","createStatsDiv","onMouseDown","handleButtonClick","List","today","todayFootyStats","todaySS","tomorrow","tomorrowFootyStats","tomorrowSS","dateFootyStats","lastSaturday","lastSaturdayFootyStats","lastSaturdaySS","tomorrowsDate","yesterdaysDate","saturdayDate","historicDate","dateString","fixtureList","availableLeagues","leagueOrder","decrementDate","calculateDate","convertTimestampForSofaScore","renderButtons","String","padStart","setDate","getDay","textJoined","newText","leagueList","mapOrder","key","A","B","welcomeTextOne","welcomeTextTwo","App","getLeagueList","href","target","rel","mockedFixtures","TwitterShareButton","boxShadow","TwitterIcon","RedditShareButton","RedditIcon","FacebookShareButton","quote","FacebookIcon","WhatsappShareButton","separator","WhatsappIcon","TelegramShareButton","TelegramIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","TeamPage","dataState","fetchData","storedFixtureDetailsJson","responseHome","responseAway","indexHome","findIndex","indexAway","test","scoredOverallHome","playedHomeOnly","scoredOverallHomeOnly","seasonScoredNum_home","conceededOverallHome","conceededOverallHomeOnly","seasonConcededNum_home","PPGOverallHome","PPGOverallHomeOnly","seasonPPG_home","leaguePosition_overallHome","leaguePosition_overall","leaguePosition_HomeOnly","leaguePosition_home","averageAttendance","average_attendance_home","BTTSPercentage_overallHome","BTTSAndWinPercentage_Home","BTTS_and_win_percentage_overall","BTTSAndLosePercentage_Home","BTTS_and_lose_percentage_overall","BTTSBothHalvesHome","BTTS_both_halves_percentage_overall","GoalDifferenceHT_overall_Home","GoalDifferenceHT_overall","GD_2hg_overall_Home","gd_2hg_overall","leadingAtHTPercentage_overallHome","leadingAtHTPercentage_overall","seasonOver15Percentage_overallHome","seasonOver25Percentage_overallHome","seasonOver35Percentage_overallHome","seasonOver45Percentage_overallHome","scoredBothHalvesPercentage_overallHome","shots_on_target_per_goals_scored_overallHome","shots_on_target_per_goals_scored_overall","cornersTotalAVG_overallHome","cornersTotalAVG_overall","cardsAVG_overallHome","foulsAVG_overallHome","foulsAVG_overall","penalties_won_per_match_overallHome","penalties_won_per_match_overall","penalty_in_a_match_percentage_overallHome","penalty_in_a_match_percentage_overall","scoredOverallAway","playedAwayOnly","scoredOverallAwayOnly","seasonScoredNum_away","conceededOverallAway","conceededOverallAwayOnly","seasonConcededNum_away","PPGOverallAway","PPGOverallAwayOnly","seasonPPG_away","leaguePosition_overallAway","leaguePosition_AwayOnly","leaguePosition_away","BTTSPercentage_overallAway","BTTSAndWinPercentage_Away","BTTSAndLosePercentage_Away","BTTSBothHalvesAway","GoalDifferenceHT_overall_Away","GD_2hg_overall_Away","leadingAtHTPercentage_overallAway","seasonOver15Percentage_overallAway","seasonOver25Percentage_overallAway","seasonOver35Percentage_overallAway","seasonOver45Percentage_overallAway","scoredBothHalvesPercentage_overallAway","shots_on_target_per_goals_scored_overallAway","cornersTotalAVG_overallAway","cardsAVG_overallAway","foulsAVG_overallAway","penalties_won_per_match_overallAway","penalty_in_a_match_percentage_overallAway","storedDataHome","useSelector","jsonDataHome","parse","propertyNamesHome","storedDataHomeDef","jsonDataHomeDef","propertyNamesHomeDef","storedDataallTeamResultsHome","jsonDataallTeamResultsHome","propertyNamesallTeamResultsHome","values","jsonHomeDetails","storedDataAway","jsonDataAway","propertyNamesAway","storedDataAwayDef","jsonDataAwayDef","propertyNamesAwayDef","storedDataallTeamResultsAway","jsonDataallTeamResultsAway","propertyNamesallTeamResultsAway","jsonAwayDetails","storedFixtureDetails","stacked","path","Team","exact"],"mappings":"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","file":"static/js/main.b07722ac.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n      <h1 className=\"HeaderContainer\">XG Tipping</h1>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nexport function Button(props) {\n  return (\n    <div id=\"Button\">\n      <button data-cy={props.text} variant=\"primary\" type=\"button\" onClick={props.onClickEvent} className={props.className} style={props.style}>\n        {props.text}\n      </button>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nexport var selectedOdds = \"Fractional odds\";\n\nexport class OddsRadio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOdds: this.props.value,\n    };\n  }\n\n  handleOptionChange = () => {\n    this.setState({\n      selectedOdds: this.props.value,\n    });\n    selectedOdds = this.state.selectedOdds;\n  };\n\n  render() {\n    return (\n      <section className=\"dark2\">\n        <div className={this.props.className}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"odds\"\n              checked={this.state.checked}\n              onChange={this.handleOptionChange}\n              data-cy={this.props.value}\n            />\n            <span className=\"design\"></span>\n            <span className=\"text\">{this.props.value}</span>\n          </label>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default OddsRadio;\n","import React from \"react\";\n\nexport function CreateBadge(props) {\n\n  if(props.image === \"-\"){\n    return (\n      <div className={props.ClassName} />\n    );\n  } else {\n    return (\n      <img\n        src={`https://cdn.footystats.org/img/${props.image}`}\n        className={props.ClassName}\n        alt={props.alt}\n        flex-shrink={props.flexShrink}\n      />\n    );\n  }\n}\n","import React, { Fragment } from \"react\";\n\nfunction Stats(props) {\n  let shouldOpen = props.clicked\n  function styleForm(formIndicator) {\n    let className;\n    if (formIndicator === \"W\") {\n      className = \"win\";\n    } else if (formIndicator === \"D\") {\n      className = \"draw\";\n    } else if (formIndicator === \"L\") {\n      className = \"loss\";\n    }\n    return className;\n  }\n\n  function styleBTTS(BTTSBoolean) {\n    let className;\n    if (BTTSBoolean === \"\\u2714\") {\n      className = \"BTTSTrue\";\n    } else if (BTTSBoolean === \"\\u2718\") {\n      className = \"BTTSFalse\";\n    }\n    return className;\n  }\n\n  if (props.formRun) {\n    console.log(props.formRun)\n    return (\n      <Fragment>\n        <ul className={props.className} style={props.style}>\n          <li className=\"FormSummaryHome\">{props.FormTextString}</li>\n          <li className=\"FavouriteSummaryHome\">{props.FavouriteRecord}</li>\n          <li className=\"FormHeader\">\n            League results (most recent on right)\n          </li>\n          <li key={`last5League`} className=\"last5League\">\n          <span className={styleForm(props.Results[0])}>\n              {props.Results[0]}\n            </span>\n            <span className={styleForm(props.Results[1])}>\n              {props.Results[1]}\n            </span>\n            <span className={styleForm(props.Results[2])}>\n              {props.Results[2]}\n            </span>\n            <span className={styleForm(props.Results[3])}>\n              {props.Results[3]}\n            </span>\n            <span className={styleForm(props.Results[4])}>\n              {props.Results[4]}\n            </span>\n            <span className={styleForm(props.Results[5])}>\n              {props.Results[5]}\n            </span>\n          </li>\n          <li className=\"FormHeader\">\n            {props.homeOrAway} form (most recent on right)\n          </li>\n          <li key={`last5${props.homeOrAwayResults}`} className=\"FormHomeOrAway\">\n          <span className={styleForm(props.ResultsHorA[0])}>\n              {props.ResultsHorA[0]}\n            </span>\n            <span className={styleForm(props.ResultsHorA[1])}>\n              {props.ResultsHorA[1]}\n            </span>\n            <span className={styleForm(props.ResultsHorA[2])}>\n              {props.ResultsHorA[2]}\n            </span>\n            <span className={styleForm(props.ResultsHorA[3])}>\n              {props.ResultsHorA[3]}\n            </span>\n            <span className={styleForm(props.ResultsHorA[4])}>\n              {props.ResultsHorA[4]}\n            </span>\n            <span className={styleForm(props.ResultsHorA[5])}>\n              {props.ResultsHorA[5]}\n            </span>\n          </li>\n          <li\n            key=\"BTTSArrayHomeOrAway\"\n            className=\"BTTSArrayHomeOrAway\"\n            data-cy={props.name + \"BTTSArrayHomeOrAway\"}\n          >\n            <div className=\"BTTSResults\">BTTS</div>\n            <span className={styleBTTS(props.BTTSArray[5])}>{props.BTTSArray[5]}</span>\n            <span className={styleBTTS(props.BTTSArray[4])}>{props.BTTSArray[4]}</span>\n            <span className={styleBTTS(props.BTTSArray[3])}>{props.BTTSArray[3]}</span>\n            <span className={styleBTTS(props.BTTSArray[2])}>{props.BTTSArray[2]}</span>\n            <span className={styleBTTS(props.BTTSArray[1])}>{props.BTTSArray[1]}</span>\n            <span className={styleBTTS(props.BTTSArray[0])}>{props.BTTSArray[0]}</span>\n          </li>\n          <li\n            key=\"TeamScored\"\n            className=\"TeamScored\"\n            data-cy={props.name + \"teamScored\"}\n          >\n            {`Avg goals scored - ${props.goals}`}\n          </li>\n          <li\n            key=\"TeamConceeded\"\n            className=\"TeamConceeded\"\n            data-cy={props.name + \"teamConceded\"}\n          >\n            {`Avg goals conceeded - ${props.conceeded}`}\n          </li>\n          <li\n            key=\"TeamPossession\"\n            className=\"TeamPossession\"\n            data-cy={props.name + \"teamPossession\"}\n          >\n            {`Avg possession - ${props.possession}%`}\n          </li>\n          <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name + \"teamXG\"}>\n            {`Avg XG - ${props.XG}`}\n          </li>\n          <li\n            key=\"TeamXGConceded\"\n            className=\"TeamXGConceded\"\n            data-cy={props.name + \"teamXGConceded\"}\n          >\n            {`Avg XG conceded - ${props.XGConceded}`}\n          </li>\n          <li\n            key=\"goalDifference\"\n            className=\"goalDifference\"\n            data-cy={props.name + \"goalDifference\"}\n          >\n            {`Goal difference : `}\n            <span>{props.goalDifference}</span>\n          </li>\n          <li\n            key=\"goalDifferenceHorA\"\n            className=\"goalDifferenceHorA\"\n            data-cy={props.name + \"goalDifference\"}\n          >\n            {`Goal difference ${props.homeOrAway} : ${props.goalDifferenceHomeOrAway}`}\n          </li>\n          <li\n            key=\"AverageSOT\"\n            className=\"AverageSOT\"\n            data-cy={props.name + \"averageSOT\"}\n          >\n            {`Avg shots on target - ${props.sot}`}\n          </li>\n          <li\n            key=\"DangerousAttacks\"\n            className=\"DangerousAttacks\"\n            data-cy={props.name + \"dangerousAttacks\"}\n          >\n            {`Avg dangerous attacks - ${props.dangerousAttacks}`}\n          </li>\n          <li\n            key=\"LeaguePosition\"\n            className=\"LeaguePosition\"\n            data-cy={props.name + \"leaguePosition\"}\n          >\n            {`League position - ${props.leaguePosition}`}\n          </li>\n\n          <li\n            key=\"LeaguePositionHomeOrAway\"\n            className=\"LeaguePositionHomeOrAway\"\n            data-cy={props.name + \"LeaguePositionHomeOrAway\"}\n          >\n            {`Position (${props.homeOrAway} only) - ${props.homeOrAwayLeaguePosition}`}\n          </li>\n          <li\n            key=\"WinPercentage\"\n            className=\"WinPercentage\"\n            data-cy={props.name + \"WinPercentage\"}\n          >\n            {`${props.homeOrAway} wins - ${props.winPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"DrawPercentage\"\n            className=\"DrawPercentage\"\n            data-cy={props.name + \"DrawPercentage\"}\n          >\n            {`${props.homeOrAway} draws - ${props.drawPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"LossPercentage\"\n            className=\"LossPercentage\"\n            data-cy={props.name + \"LossPercentage\"}\n          >\n            {`${props.homeOrAway} losses - ${props.lossPercentage.toFixed(1)}%`}\n          </li>\n          <li key=\"PPG\" className=\"PPG\" data-cy={props.name + \"PPG\"}>\n            {`Season PPG - ${props.ppg}`}\n          </li>\n          <li\n            key=\"FormTrend10a\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 10 PPG: ${props.formTrend[0]}`}\n          </li>\n          <li\n            key=\"FormTrend10b\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 6 PPG: ${props.formTrend[1]}`}\n          </li>\n          <li\n            key=\"FormTrend10c\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 5 PPG: ${props.formTrend[2]}.`}\n          </li>\n          <li\n            key=\"CardsTotal\"\n            className=\"CardsTotal\"\n            data-cy={props.name + \"CardsTotal\"}\n          >\n            {`Cards total: ${props.CardsTotal}`}\n          </li>\n          <li\n            key=\"CornersAverage\"\n            className=\"CornersAverage\"\n            data-cy={props.name + \"CornersAverage\"}\n          >\n            {`Corners average: ${props.CornersAverage}`}\n          </li>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  } else {\n    return (\n      <Fragment>\n        <ul className={props.className} style={props.style}>\n          <li className=\"FormSummaryHome\">{props.FormTextString}</li>\n          <li className=\"FavouriteSummaryAway\">{props.FavouriteRecord}</li>\n          <li\n            key=\"TeamScored\"\n            className=\"TeamScored\"\n            data-cy={props.name + \"teamScored\"}\n          >\n            {`Avg goals scored - ${props.goals}`}\n          </li>\n          <li\n            key=\"TeamConceeded\"\n            className=\"TeamConceeded\"\n            data-cy={props.name + \"teamConceded\"}\n          >\n            {`Avg goals conceeded - ${props.conceeded}`}\n          </li>\n          <li\n            key=\"TeamPossession\"\n            className=\"TeamPossession\"\n            data-cy={props.name + \"teamPossession\"}\n          >\n            {`Avg possession - ${props.possession}%`}\n          </li>\n          <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name + \"teamXG\"}>\n            {`Avg XG - ${props.XG}`}\n          </li>\n          <li\n            key=\"TeamXGConceded\"\n            className=\"TeamXGConceded\"\n            data-cy={props.name + \"teamXGConceded\"}\n          >\n            {`Avg XG conceded - ${props.XGConceded}`}\n          </li>\n          <li\n            key=\"AverageSOT\"\n            className=\"AverageSOT\"\n            data-cy={props.name + \"averageSOT\"}\n          >\n            {`Avg shots on target - ${props.sot}`}\n          </li>\n          <li\n            key=\"DangerousAttacks\"\n            className=\"DangerousAttacks\"\n            data-cy={props.name + \"dangerousAttacks\"}\n          >\n            {`Avg dangerous attacks - ${props.dangerousAttacks}`}\n          </li>\n          <li\n            key=\"LeaguePosition\"\n            className=\"LeaguePosition\"\n            data-cy={props.name + \"leaguePosition\"}\n          >\n            {`League position - ${props.leaguePosition}`}\n          </li>\n\n          <li\n            key=\"LeaguePositionHomeOrAway\"\n            className=\"LeaguePositionHomeOrAway\"\n            data-cy={props.name + \"LeaguePositionHomeOrAway\"}\n          >\n            {`Position (${props.homeOrAway} only) - ${props.homeOrAwayLeaguePosition}`}\n          </li>\n          <li\n            key=\"WinPercentage\"\n            className=\"WinPercentage\"\n            data-cy={props.name + \"WinPercentage\"}\n          >\n            {`${props.homeOrAway} wins - ${props.winPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"DrawPercentage\"\n            className=\"DrawPercentage\"\n            data-cy={props.name + \"DrawPercentage\"}\n          >\n            {`${props.homeOrAway} draws - ${props.drawPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"LossPercentage\"\n            className=\"LossPercentage\"\n            data-cy={props.name + \"LossPercentage\"}\n          >\n            {`${props.homeOrAway} losses - ${props.lossPercentage.toFixed(1)}%`}\n          </li>\n          <li key=\"PPG\" className=\"PPG\" data-cy={props.name + \"PPG\"}>\n            {`Season PPG - ${props.ppg}`}\n          </li>\n          <li\n            key=\"FormTrend10a\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 10 PPG: ${props.formTrend[0]}`}\n          </li>\n          <li\n            key=\"FormTrend10b\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 6 PPG: ${props.formTrend[1]}`}\n          </li>\n          <li\n            key=\"FormTrend10c\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 5 PPG: ${props.formTrend[2]}.`}\n          </li>\n          <li\n            key=\"CardsTotal\"\n            className=\"CardsTotal\"\n            data-cy={props.name + \"CardsTotal\"}\n          >\n            {`Cards total: ${props.CardsTotal}`}\n          </li>\n          <li\n            key=\"CornersAverage\"\n            className=\"CornersAverage\"\n            data-cy={props.name + \"CornersAverage\"}\n          >\n            {`Corners average: ${props.CornersAverage}`}\n          </li>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Stats;\n","import React from \"react\";\n\nfunction Div(props) {\n  return (\n    <div id={props.id} onClick={props.onClick} style={props.style} className={props.className}>{props.text}</div>\n  );\n}\n\nexport default Div;\n","export async function getForm(match) {\n  const teams = [match.homeId, match.awayId];\n  const fixtureForm = [];\n\n  for (let i = 0; i < teams.length; i++) {\n    const team = teams[i];\n\n    let response = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}formTeam/${team}`\n    );\n    await response.json().then((formData) => {\n      formData.lastMatchTimestamp = formData.last_updated_match_timestamp\n      fixtureForm[i] = formData;\n    });\n  }\n  return fixtureForm;\n}\n","import React, { useState, useEffect } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport { selectedOdds } from \"../components/OddsRadio\";\nimport oddslib from \"oddslib\";\nexport let rangeValue = [1, 10];\n\nexport const Slide = (props) => {\n  const [range, setRange] = useState([1.1, 10]);\n  const [fractionalValue, setFractionalValue] = useState([\"1/9\", \"10/1\"]);\n\n  useEffect(() => {\n    if (selectedOdds === \"Fractional odds\") {\n      let roundedValueOne = (Math.round(range[0] * 5) / 5).toFixed(1);\n      let roundedValueTwo = (Math.round(range[1] * 5) / 5).toFixed(1);\n\n      try {\n        const fractionalOne = oddslib\n          .from(\"decimal\", roundedValueOne)\n          .to(\"fractional\", { precision: 1 });\n        const fractionalTwo = oddslib\n          .from(\"decimal\", roundedValueTwo)\n          .to(\"fractional\", { precision: 1 });\n          console.log(fractionalOne);\n          console.log(fractionalTwo);\n        setFractionalValue([fractionalOne, fractionalTwo]);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [range]);\n\n  const handleChange = (event, newValue) => {\n    setRange(newValue);\n    console.log(newValue);\n    rangeValue = newValue;\n  };\n\n  return (\n    <Slider\n      aria-label=\"Always visible\"\n      value={range}\n      sx={{\n        width: \"90%\",\n        color: \"#030061\",\n      }}\n      onChange={handleChange}\n      valueLabelDisplay=\"auto\"\n      step={0.1}\n      min={1.1}\n      max={10}\n      valueLabelFormat={(value, index) =>\n        selectedOdds === \"Fractional odds\" ? fractionalValue[index] : value\n      }\n    />\n  );\n};\n","import React from \"react\";\nimport Collapsible from \"react-collapsible\";\n\nconst Collapsable = (props) => {\n  return (\n    <Collapsible transitionTime={300} trigger={<button className={props.classNameButton}>{props.buttonText}</button>} className={props.className? props.className: \"Collapsable\"}>\n      <div className={props.classNameFlex? props.classNameFlex: \"\"}>\n      <span className={props.classNameTwo? props.classNameTwo: props.buttonText} style={props.style} key={`123${props.buttonText}`}>{props.element}</span>\n      <span className={props.classNameThree? props.classNameTwo: props.buttonText} key={`456${props.buttonText}`}>{props.elementTwo}</span>\n      </div>\n    </Collapsible>\n  );\n};\n\n\nexport default Collapsable;","import React, { Component, Fragment } from \"react\";\nimport { getNewTips } from \"../logic/getScorePredictions\"\nimport {allTips} from \"../logic/getScorePredictions\"\nexport var incrementValue = 3;\n\nexport var riskLevel = 10;\n\nclass Increment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      incrementValue,\n      riskLevel,\n      show: true,\n    };\n  }\n\n  IncrementItem = () => {\n    if(incrementValue > 1){\n    this.setState({ incrementValue: this.state.incrementValue - 1 });\n    this.setState({ riskLevel: this.state.riskLevel - 1 });\n    incrementValue = (this.state.incrementValue - 1);\n    riskLevel = this.state.riskLevel - 1;\n    }\n    getNewTips(allTips)\n  };\n  DecreaseItem = () => {\n    if(incrementValue > 0){\n      this.setState({ incrementValue: this.state.incrementValue + 1 });\n      this.setState({ riskLevel: this.state.riskLevel + 1 });\n      incrementValue = (this.state.incrementValue + 1);\n      riskLevel = this.state.riskLevel + 1;\n    }\n    getNewTips(allTips)\n  };\n\n  render() {\n    return (\n      <Fragment>\n          <button className=\"IncrementButton\" onClick={this.IncrementItem}>\n            -\n          </button>\n          <button className=\"DecrementButton\" onClick={this.DecreaseItem}>\n            +\n          </button>\n      </Fragment>\n\n    );\n  }\n}\n\nexport default Increment;\n","export async function getBTTSPotential(\n  match,\n  homeGoals,\n  awayGoals,\n  unroundedHomeGoals,\n  unroundedAwayGoals\n) {\n  const homeBTTS = match.bttsAllPercentageHome;\n  const homeOnlyBTTS = match.bttsPercentageHomeHome;\n  const awayOnlyBTTS = match.bttsPercentageAwayAway;\n  const awayBTTS = match.bttsAllPercentageAway;\n  const homeG = homeGoals;\n  const awayG = awayGoals;\n\n  match.combinedBTTS = (homeBTTS + awayBTTS) / 2;\n\n  if (\n    match.bttsFraction !== \"N/A\" &&\n    match.status !== \"suspended\" &&\n    match.status !== \"canceled\"\n  ) {\n    if (\n      homeBTTS > 55 &&\n      awayBTTS > 55 &&\n      homeOnlyBTTS > 55 &&\n      awayOnlyBTTS > 55 &&\n      match.awayOdds < 4 &&\n      match.awayOdds > 1.3 &&\n      homeG >= 1 &&\n      awayG >= 1 \n    ) {\n      match.btts = true;\n      match.bttsChosen = true;\n      match.totalGoals = match.rawFinalHomeGoals + match.rawFinalAwayGoals;\n    } else {\n      match.btts = false;\n      match.bttsChosen = false;\n    }\n  }\n  return match;\n}\n","import SwiperCore, { EffectCoverflow, Pagination } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/swiper-bundle.min.css\";\nimport \"swiper/swiper.min.css\";\n\nSwiperCore.use([EffectCoverflow, Pagination]);\n\nexport const Slider = (props) => {\n  return (\n    <Swiper\n      effect={\"coverflow\"}\n      autoHeight={true}\n      grabCursor={true}\n      centeredSlides={true}\n      slidesPerView={1}\n      coverflowEffect={{\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: false,\n      }}\n      pagination={{ clickable: true }}\n      className=\"mySwiper\"\n    >\n      <SwiperSlide>\n       {props.element}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element2}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element3}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element4}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element5}\n      </SwiperSlide>\n    </Swiper>\n  );\n};\n","import KofiButton from \"kofi-button\"\n\nexport const StyledKofiButton = (props) => {\n  return (\n    <KofiButton className=\"kofi-button\" color=\"#030061\" title={props.buttonText} kofiID=\"H2H0AX25Z\" />\n  )\n}","import React, { useState } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nexport let minimumXG = 0;\nexport let minimumGD = 0;\nexport let minimumGDHorA = 0;\nexport let minimumLast10 = 0;\n\nfunction SlideDiff(props) {\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n\n    switch (true) {\n      case props.useCase === \"xg\":\n        minimumXG = newValue;\n        break;\n      case props.useCase === \"gd\":\n        minimumGD = newValue;\n        break;\n      case props.useCase === \"gdHorA\":\n        minimumGDHorA = newValue;\n        break;\n      case props.useCase === \"last10\":\n        minimumLast10 = newValue;\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Slider\n      aria-label=\"Always visible\"\n      value={value}\n      sx={{\n        width: \"90%\",\n        color: \"#030061\",\n      }}\n      onChange={handleChange}\n      step={1}\n      marks={props.marks}\n      valueLabelDisplay=\"auto\"\n      min={parseFloat(props.lower)}\n      max={parseFloat(props.upper)}\n    />\n  );\n}\n\nexport default SlideDiff;\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { matches, diff } from \"./getFixtures\";\nimport { RenderAllFixtures } from \"../logic/getFixtures\";\nimport Div from \"../components/Div\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { allForm } from \"../logic/getFixtures\";\nimport Increment from \"../components/Increment\";\nimport { incrementValue } from \"../components/Increment\";\nimport { getBTTSPotential } from \"../logic/getBTTSPotential\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport { Slider } from \"../components/Carousel\";\nimport { StyledKofiButton } from \"../components/KofiButton\";\nimport {\n  calculateAttackingStrength,\n  calculateDefensiveStrength,\n  calculateMetricStrength,\n  getXGtoActualDifferentialStrength,\n} from \"./getStats\";\nimport { rangeValue } from \"../components/Slider\";\nimport {\n  minimumGD,\n  minimumXG,\n  minimumLast10,\n  minimumGDHorA,\n} from \"../components/SliderDiff\";\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nlet finalHomeGoals;\nlet finalAwayGoals;\nlet rawFinalHomeGoals;\nlet rawFinalAwayGoals;\nlet homeOdds;\nlet awayOdds;\nlet totalGoals = 0;\nlet totalGoals2 = 0;\nlet numberOfGames = 0;\nlet drawPredictions = 0;\nlet homePredictions = 0;\nlet awayPredictions = 0;\nlet allOutcomes = 0;\nlet homeOutcomes = 0;\nlet awayOutcomes = 0;\nlet winAmount = 0;\nlet lossAmount = 0;\nlet sumStatDAWin = 0;\nlet sumStatDALoss = 0;\nlet sumStatPossessionWin = 0;\nlet sumStatPossessionLoss = 0;\nlet sumStatSOTWin = 0;\nlet sumStatSOTLoss = 0;\nlet sumStatPPGLast10Win = 0;\nlet sumStatPPGLast10Loss = 0;\nlet sumOddsWin = 0;\nlet sumOddsLoss = 0;\nlet sumXGForWin = 0;\nlet sumXGForLoss = 0;\nlet sumXGAgainstWin = 0;\nlet sumXGAgainstLoss = 0;\nlet allWinOutcomes = 0;\nlet allLossOutcomes = 0;\nlet allDrawOutcomes = 0;\nlet totalROI = 0;\nlet totalInvestment = 0;\nlet totalProfit = 0;\nexport let formObjectHome;\nexport let formObjectAway;\nexport let clicked = false;\n\nexport var renderPredictions;\n\nasync function convertTimestamp(timestamp) {\n  let newDate = new Date(timestamp * 1000);\n  let [day, month, year] = newDate.toLocaleDateString(\"en-US\").split(\"/\");\n\n  let converted = `${year}-${day}-${month}`;\n\n  return converted;\n}\n\nexport function getPointsFromLastX(lastX) {\n  let points = 0;\n  let pointsAddition;\n\n  try {\n    lastX.forEach((game) => {\n      switch (true) {\n        case game === \"W\":\n          pointsAddition = 3;\n          break;\n        case game === \"D\":\n          pointsAddition = 1;\n          break;\n        case game === \"L\":\n          pointsAddition = 0;\n          break;\n        default:\n          break;\n      }\n\n      points = points + pointsAddition;\n    });\n    return points;\n  } catch (error) {\n    console.log(error);\n    return \"N/A\";\n  }\n}\n\nasync function getPastLeagueResults(team, game, hOrA, form) {\n  let date = game.date;\n  if (allLeagueResultsArrayOfObjects[game.leagueIndex].fixtures.length > 10) {\n    let teamsHomeResults = allLeagueResultsArrayOfObjects[\n      game.leagueIndex\n    ].fixtures.filter((fixture) => fixture.home_name === team);\n\n    teamsHomeResults = teamsHomeResults\n      .filter(function (item) {\n        return item.date_unix < date;\n      })\n      .sort((a, b) => a.date_unix - b.date_unix);\n\n    let teamsAwayResults = allLeagueResultsArrayOfObjects[\n      game.leagueIndex\n    ].fixtures.filter((fixture) => fixture.away_name === team);\n\n    teamsAwayResults = teamsAwayResults\n      .filter(function (item) {\n        return item.date_unix < date;\n      })\n      .sort((a, b) => a.date_unix - b.date_unix);\n\n    let homeResults = [];\n    let awayResults = [];\n    let oddsSumHome = 0;\n    let oddsSumAway = 0;\n    let favouriteCount = 0;\n    let underdogCount = 0;\n    let winningFavouriteCount = 0;\n    let drawingFavouriteCount = 0;\n    let beatenFavouriteCount = 0;\n    let winningUnderdogCount = 0;\n    let drawingUnderdogCount = 0;\n    let beatenUnderdogCount = 0;\n    for (let index = 0; index < teamsHomeResults.length; index++) {\n      const resultedGame = teamsHomeResults[index];\n\n      homeResults.push({\n        homeTeam: resultedGame.home_name,\n        homeGoals: resultedGame.homeGoalCount,\n        XG: resultedGame.team_a_xg,\n        awayTeam: resultedGame.away_name,\n        awayGoals: resultedGame.awayGoalCount,\n        XGAgainst: resultedGame.team_b_xg,\n        possession: resultedGame.team_a_possession,\n        scored: resultedGame.homeGoalCount,\n        conceeded: resultedGame.awayGoalCount,\n        shots: resultedGame.team_a_shots,\n        sot: resultedGame.team_a_shotsOnTarget,\n        sotAgainst: resultedGame.team_b_shotsOnTarget,\n        dangerousAttacks: resultedGame.team_a_dangerous_attacks,\n        corners: resultedGame.team_a_corners,\n        date: await convertTimestamp(resultedGame.date_unix),\n        dateRaw: resultedGame.date_unix,\n        oddsHome: resultedGame.odds_ft_1,\n        oddsAway: resultedGame.odds_ft_2,\n        btts:\n          resultedGame.homeGoalCount > 0 && resultedGame.awayGoalCount > 0\n            ? true\n            : false,\n        points:\n          resultedGame.homeGoalCount > resultedGame.awayGoalCount\n            ? 3\n            : resultedGame.homeGoalCount < resultedGame.awayGoalCount\n            ? 0\n            : 1,\n        result:\n          resultedGame.homeGoalCount > resultedGame.awayGoalCount\n            ? \"W\"\n            : resultedGame.homeGoalCount < resultedGame.awayGoalCount\n            ? \"L\"\n            : \"D\",\n      });\n      oddsSumHome = oddsSumHome + resultedGame.odds_ft_1;\n      favouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2\n          ? favouriteCount + 1\n          : favouriteCount + 0;\n      winningFavouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? winningFavouriteCount + 1\n          : winningFavouriteCount + 0;\n      drawingFavouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingFavouriteCount + 1\n          : drawingFavouriteCount + 0;\n      beatenFavouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? beatenFavouriteCount + 1\n          : beatenFavouriteCount + 0;\n\n      underdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2\n          ? underdogCount + 1\n          : underdogCount + 0;\n      winningUnderdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? winningUnderdogCount + 1\n          : winningUnderdogCount + 0;\n      drawingUnderdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingUnderdogCount + 1\n          : drawingUnderdogCount + 0;\n      beatenUnderdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? beatenUnderdogCount + 1\n          : beatenUnderdogCount + 0;\n    }\n    for (let index = 0; index < teamsAwayResults.length; index++) {\n      const resultedGame = teamsAwayResults[index];\n      awayResults.push({\n        homeTeam: resultedGame.home_name,\n        homeGoals: resultedGame.homeGoalCount,\n        XG: resultedGame.team_b_xg,\n        awayTeam: resultedGame.away_name,\n        awayGoals: resultedGame.awayGoalCount,\n        XGAgainst: resultedGame.team_a_xg,\n        possession: resultedGame.team_b_possession,\n        scored: resultedGame.awayGoalCount,\n        conceeded: resultedGame.homeGoalCount,\n        shots: resultedGame.team_b_shots,\n        sot: resultedGame.team_b_shotsOnTarget,\n        sotAgainst: resultedGame.team_a_shotsOnTarget,\n        dangerousAttacks: resultedGame.team_b_dangerous_attacks,\n        corners: resultedGame.team_b_corners,\n        date: await convertTimestamp(resultedGame.date_unix),\n        dateRaw: resultedGame.date_unix,\n        oddsHome: resultedGame.odds_ft_1,\n        oddsAway: resultedGame.odds_ft_2,\n        btts:\n          resultedGame.homeGoalCount > 0 && resultedGame.awayGoalCount > 0\n            ? true\n            : false,\n        points:\n          resultedGame.homeGoalCount > resultedGame.awayGoalCount\n            ? 0\n            : resultedGame.homeGoalCount < resultedGame.awayGoalCount\n            ? 3\n            : 1,\n        result:\n          resultedGame.homeGoalCount > resultedGame.awayGoalCount\n            ? \"L\"\n            : resultedGame.homeGoalCount < resultedGame.awayGoalCount\n            ? \"W\"\n            : \"D\",\n      });\n      oddsSumAway = oddsSumAway + resultedGame.odds_ft_2;\n      favouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2\n          ? favouriteCount + 1\n          : favouriteCount + 0;\n      winningFavouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? winningFavouriteCount + 1\n          : winningFavouriteCount + 0;\n      drawingFavouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingFavouriteCount + 1\n          : drawingFavouriteCount + 0;\n      beatenFavouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? beatenFavouriteCount + 1\n          : beatenFavouriteCount + 0;\n\n      underdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2\n          ? underdogCount + 1\n          : underdogCount + 0;\n      winningUnderdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? winningUnderdogCount + 1\n          : winningUnderdogCount + 0;\n      drawingUnderdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingUnderdogCount + 1\n          : drawingUnderdogCount + 0;\n      beatenUnderdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? beatenUnderdogCount + 1\n          : beatenUnderdogCount + 0;\n    }\n\n    let reversedResultsHome = homeResults;\n    let reversedResultsAway = awayResults;\n\n    console.log(game.homeTeam)\n    console.log(team)\n\n    if (game.homeTeam === team) {\n      let y = game.homeOdds;\n      //Clear fav\n      if (y <= 1.5) {\n        const allClearFavouriteResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 1.45\n        );\n        const allClearFavouriteResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 1.45\n        );\n\n        form.simlarGameResultsHome = allClearFavouriteResultsHome\n          .concat(allClearFavouriteResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //fav\n      else if (y <= 2.1) {\n        const allSlightFavouriteResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 2.1 && fixture.oddsHome > 1.45\n        );\n        const allSlightFavouriteResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 2.1 && fixture.oddsAway > 1.45\n        );\n        game.simlarGameResultsHome = allSlightFavouriteResultsHome\n          .concat(allSlightFavouriteResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //Tossup\n      else if (y <= 2.75) {\n        const allTossupResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 2.75 && fixture.oddsHome > 2.1\n        );\n        const allTossupResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 2.75 && fixture.oddsAway > 2.1\n        );\n        game.simlarGameResultsHome = allTossupResultsHome\n          .concat(allTossupResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //Underdog\n      else if (y <= 4) {\n        const allUnderdogResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 4 && fixture.oddsHome > 2.75\n        );\n        const allUnderdogResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 4 && fixture.oddsAway > 2.75\n        );\n        game.simlarGameResultsHome = allUnderdogResultsHome\n          .concat(allUnderdogResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //MassiveUnderdog\n      else if (y > 4) {\n        const allMassiveUnderdogResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome > 4\n        );\n        const allMassiveUnderdogResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway > 4\n        );\n        game.simlarGameResultsHome = allMassiveUnderdogResultsHome\n          .concat(allMassiveUnderdogResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n    } else if (game.awayTeam === team) {\n      let z = game.awayOdds;\n      //Clear fav\n      if (z <= 1.5) {\n        const allClearFavouriteResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 1.45\n        );\n        const allClearFavouriteResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 1.45\n        );\n\n        game.simlarGameResultsAway = allClearFavouriteResultsHome\n          .concat(allClearFavouriteResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //fav\n      else if (z <= 2.1) {\n        const allSlightFavouriteResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 2.1 && fixture.oddsHome > 1.45\n        );\n        const allSlightFavouriteResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 2.1 && fixture.oddsAway > 1.45\n        );\n        game.simlarGameResultsAway = allSlightFavouriteResultsHome\n          .concat(allSlightFavouriteResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //Tossup\n      else if (z <= 2.75) {\n        const allTossupResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 2.75 && fixture.oddsHome > 2.1\n        );\n        const allTossupResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 2.75 && fixture.oddsAway > 2.1\n        );\n        game.simlarGameResultsAway = allTossupResultsHome\n          .concat(allTossupResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //Underdog\n      else if (z <= 4) {\n        const allUnderdogResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 4 && fixture.oddsHome > 2.75\n        );\n        const allUnderdogResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 4 && fixture.oddsAway > 2.75\n        );\n        game.simlarGameResultsAway = allUnderdogResultsHome\n          .concat(allUnderdogResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //MassiveUnderdog\n      else if (z > 4) {\n        const allMassiveUnderdogResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome > 4.5\n        );\n        const allMassiveUnderdogResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway > 4.5\n        );\n        game.simlarGameResultsAway = allMassiveUnderdogResultsHome\n          .concat(allMassiveUnderdogResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n    }\n\n    const allTeamResults = reversedResultsHome\n      .concat(reversedResultsAway)\n      .sort((a, b) => a.dateRaw - b.dateRaw);\n\n    const allTeamResultsHome = reversedResultsHome.sort(\n      (a, b) => b.dateRaw - a.dateRaw\n    );\n    const allTeamResultsAway = reversedResultsAway.sort(\n      (a, b) => b.dateRaw - a.dateRaw\n    );\n\n    console.log(game.game);\n    console.log(allTeamResults);\n    console.log(allTeamResultsHome);\n\n    form.allTeamResults = allTeamResults.sort((b, a) => a.dateRaw - b.dateRaw);\n\n    const points6 = allTeamResults.map((res) => res.points).slice(0, 6);\n    const pointsSum6 = points6.reduce((a, b) => a + b, 0);\n    form.avPoints6 = pointsSum6 / points6.length;\n\n    const points5 = allTeamResults.map((res) => res.points).slice(0, 5);\n    const pointsSum5 = points5.reduce((a, b) => a + b, 0);\n    form.avPoints5 = pointsSum5 / points5.length;\n\n    const pointsAll = allTeamResults.map((res) => res.points);\n    const pointsSumAll = pointsAll.reduce((a, b) => a + b, 0);\n    form.avPointsAll = pointsSumAll / pointsAll.length;\n\n    const resultsAll = allTeamResults.map((res) => res.result);\n    const resultsHome = allTeamResultsHome.map((res) => res.result);\n    const resultsAway = allTeamResultsAway.map((res) => res.result);\n\n    form.resultsAll = resultsAll.slice(0, 6);\n    form.resultsHome = resultsHome.slice(0, 6);\n    form.resultsAway = resultsAway.slice(0, 6);\n\n    const avScoredLast5 = allTeamResults.map((res) => res.scored).slice(0, 5);\n    const avScoredLast5Sum = avScoredLast5.reduce((a, b) => a + b, 0);\n    form.avScoredLast5 = avScoredLast5Sum / avScoredLast5.length;\n    const avConceededLast5 = allTeamResults\n      .map((res) => res.conceeded)\n      .slice(0, 5);\n    const avConceededLast5Sum = avConceededLast5.reduce((a, b) => a + b, 0);\n    form.avConceededLast5 = avConceededLast5Sum / avConceededLast5.length;\n    const avDALast5 = allTeamResults\n      .map((res) => res.dangerousAttacks)\n      .slice(0, 5);\n    const avDALast5Sum = avDALast5.reduce((a, b) => a + b, 0);\n    form.avDALast5 = avDALast5Sum / avDALast5.length;\n    const avSOTLast5 = allTeamResults.map((res) => res.sot).slice(0, 5);\n    const avSOTLast5Sum = avSOTLast5.reduce((a, b) => a + b, 0);\n    form.avSOTLast5 = avSOTLast5Sum / avSOTLast5.length;\n    const avSOTAgainstLast5 = allTeamResults\n      .map((res) => res.sotAgainst)\n      .slice(0, 5);\n    const avSOTAgainstLast5Sum = avSOTAgainstLast5.reduce((a, b) => a + b, 0);\n    form.avSOTAgainstLast5 = avSOTAgainstLast5Sum / avSOTAgainstLast5.length;\n    const avShotsLast5 = allTeamResults.map((res) => res.shots).slice(0, 5);\n    const avShotsLast5Sum = avShotsLast5.reduce((a, b) => a + b, 0);\n    form.avShotsLast5 = avShotsLast5Sum / avShotsLast5.length;\n    const avCornersLast5 = allTeamResults.map((res) => res.corners).slice(0, 5);\n    const avCornersLast5Sum = avCornersLast5.reduce((a, b) => a + b, 0);\n    form.avCornersLast5 = avCornersLast5Sum / avCornersLast5.length;\n    const avPosessionLast5 = allTeamResults\n      .map((res) => res.possession)\n      .slice(0, 6);\n    const avPosessionLast5Sum = avPosessionLast5.reduce((a, b) => a + b, 0);\n    form.avPosessionLast5 = avPosessionLast5Sum / avPosessionLast5.length;\n    const avXGLast5 = allTeamResults.map((res) => res.XG).slice(0, 5);\n    const avXGLast5Sum = avXGLast5.reduce((a, b) => a + b, 0);\n    form.avXGLast5 = avXGLast5Sum / avXGLast5.length;\n    const avXGAgainstLast5 = allTeamResults\n      .map((res) => res.XGAgainst)\n      .slice(0, 5);\n\n    // console.log(form.teamName);\n\n    // console.log(\"avConceededLast5\")\n    // console.log(avConceededLast5)\n    // console.log(\"avSOTLast5\")\n    // console.log(avSOTLast5)\n\n    // console.log(\"avSOTAgainstLast5\")\n    // console.log(avSOTAgainstLast5)\n\n    // console.log(\"avShotsLast5\")\n    // console.log(avShotsLast5)\n\n    // console.log(\"avCornersLast5\")\n    // console.log(avCornersLast5)\n\n    // console.log(\"avPosessionLast5\")\n    // console.log(avPosessionLast5)\n\n    // console.log(\"avXGLast5\")\n    // console.log(avXGLast5)\n\n    // console.log(\"avXGAgainstLast5\")\n    // console.log(avXGAgainstLast5)\n\n    const avXGAgainstLast5Sum = avXGAgainstLast5.reduce((a, b) => a + b, 0);\n    form.avXGAgainstLast5 = avXGAgainstLast5Sum / avXGAgainstLast5.length;\n\n    const averageOddsHome = oddsSumHome / teamsHomeResults.length;\n    const averageOddsAway = oddsSumAway / teamsAwayResults.length;\n    form.favouriteCount = favouriteCount;\n    form.winningFavouriteCount = winningFavouriteCount;\n    form.drawingFavouriteCount = drawingFavouriteCount;\n    form.beatenFavouriteCount = beatenFavouriteCount;\n\n    form.underdogCount = underdogCount;\n    form.winningUnderdogCount = winningUnderdogCount;\n    form.drawingUnderdogCount = drawingUnderdogCount;\n    form.beatenUnderdogCount = beatenUnderdogCount;\n\n    form.oddsReliabilityWin =\n      favouriteCount > 0\n        ? (form.winningFavouriteCount / form.favouriteCount) * 100\n        : 0;\n    form.oddsReliabilityDraw =\n      favouriteCount > 0\n        ? (form.drawingFavouriteCount / form.favouriteCount) * 100\n        : 0;\n    form.oddsReliabilityLose =\n      favouriteCount > 0\n        ? (form.beatenFavouriteCount / form.favouriteCount) * 100\n        : 0;\n\n    form.oddsReliabilityWinAsUnderdog =\n      underdogCount > 0\n        ? (form.winningUnderdogCount / form.underdogCount) * 100\n        : 0;\n    form.oddsReliabilityDrawAsUnderdog =\n      underdogCount > 0\n        ? (form.drawingUnderdogCount / form.underdogCount) * 100\n        : 0;\n    form.oddsReliabilityLoseAsUnderdog =\n      underdogCount > 0\n        ? (form.beatenUnderdogCount / form.underdogCount) * 100\n        : 0;\n\n    form.reliableIndicator =\n      form.winningFavouriteCount + form.beatenUnderdogCount;\n    form.unreliableIndicator =\n      form.beatenFavouriteCount +\n      form.drawingFavouriteCount +\n      form.winningUnderdogCount +\n      form.drawingUnderdogCount;\n\n    form.predictabilityScore =\n      form.reliableIndicator / form.unreliableIndicator;\n\n    let reliabilityString;\n\n    switch (true) {\n      case form.predictabilityScore < 0.3:\n        reliabilityString =\n          \"Odds have been an extremely unreliable indicator of actual performance so far this season. Maybe best avoided?\";\n        break;\n      case form.predictabilityScore >= 0.3 && form.predictabilityScore < 0.8:\n        reliabilityString =\n          \"Odds have been an unreliable indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 0.8 && form.predictabilityScore < 1.2:\n        reliabilityString =\n          \"Odds have been a decent indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 1.2 && form.predictabilityScore < 1.7:\n        reliabilityString =\n          \"Odds have been a good indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 1.7 && form.predictabilityScore < 2.2:\n        reliabilityString =\n          \"Odds have been a very good indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 2.2:\n        reliabilityString =\n          \"Odds have been an excellent indicator of actual performance so far this season. One for the multi?\";\n        break;\n      default:\n        break;\n    }\n\n    form.reliabilityString = reliabilityString;\n\n    const teamGoalsHome = reversedResultsHome.map((res) => res.scored);\n\n    const teamGoalsAway = awayResults.map((res) => res.scored);\n    const teamGoalsAll = allTeamResults.map((res) => res.scored);\n    const teamGoalsAllRecentAtStart = teamGoalsAll.reverse();\n    const teamConceededHome = homeResults.map((res) => res.conceeded);\n    const teamConceededAway = awayResults.map((res) => res.conceeded);\n    const teamConceededAll = allTeamResults.map((res) => res.conceeded);\n    const teamConceededAllRecentAtStart = teamConceededAll.reverse();\n\n    const teamXGForAll = allTeamResults.map((res) => res.XG);\n    const teamXGAgainstAll = allTeamResults.map((res) => res.XGAgainst);\n    const teamXGForAllRecentAtStart = teamXGForAll.reverse();\n    const teamXGAgainstAllRecentAtStart = teamXGAgainstAll.reverse();\n\n    const teamXGForHome = homeResults.map((res) => res.XG);\n    const teamXGAgainstHome = homeResults.map((res) => res.XGAgainst);\n    const teamXGForAway = awayResults.map((res) => res.XG);\n    const teamXGAgainstAway = awayResults.map((res) => res.XGAgainst);\n\n    const XGSum = teamXGForAll.reduce((a, b) => a + b, 0);\n    const avgXGScored = XGSum / teamXGForAll.length || 0;\n    const XGAgainstSum = teamXGAgainstAll.reduce((a, b) => a + b, 0);\n    const avgXGConceeded = XGAgainstSum / teamXGAgainstAll.length || 0;\n\n    const possession = allTeamResults.map((res) => res.possession);\n    const possessionSum = possession.reduce((a, b) => a + b, 0);\n    const avgPossession = possessionSum / possession.length || 0;\n\n    const possessionHome = homeResults.map((res) => res.possession);\n    const possessionSumHome = possessionHome.reduce((a, b) => a + b, 0);\n    form.avgPossessionHome = possessionSumHome / possessionHome.length || 0;\n\n    const possessionAway = awayResults.map((res) => res.possession);\n    const possessionSumAway = possessionAway.reduce((a, b) => a + b, 0);\n    form.avgPossessionAway = possessionSumAway / possessionAway.length || 0;\n\n    const dangerousAttacks = allTeamResults.map((res) => res.dangerousAttacks);\n    const dangerousAttacksSum = dangerousAttacks.reduce((a, b) => a + b, 0);\n    const avgDangerousAttacks =\n      dangerousAttacksSum / dangerousAttacks.length || 0;\n\n    const dangerousAttacksHome = homeResults.map((res) => res.dangerousAttacks);\n    const dangerousAttacksSumHome = dangerousAttacksHome.reduce(\n      (a, b) => a + b,\n      0\n    );\n    form.avgDangerousAttacksHome =\n      dangerousAttacksSumHome / dangerousAttacksHome.length || 0;\n\n    const dangerousAttacksAway = awayResults.map((res) => res.dangerousAttacks);\n    const dangerousAttacksSumAway = dangerousAttacksAway.reduce(\n      (a, b) => a + b,\n      0\n    );\n    form.avgDangerousAttacksAway =\n      dangerousAttacksSumAway / dangerousAttacksAway.length || 0;\n\n    const shots = allTeamResults.map((res) => res.shots);\n    const shotsSum = shots.reduce((a, b) => a + b, 0);\n    const avgShots = shotsSum / shots.length || 0;\n    form.avgShots = avgShots;\n\n    const shotsHome = homeResults.map((res) => res.shots);\n    const shotsSumHome = shotsHome.reduce((a, b) => a + b, 0);\n    form.avgShotsHome = shotsSumHome / shotsHome.length || 0;\n\n    const shotsAway = awayResults.map((res) => res.shots);\n    const shotsSumAway = shotsAway.reduce((a, b) => a + b, 0);\n    form.avgShotsAway = shotsSumAway / shotsAway.length || 0;\n\n    const shotsOnTarget = allTeamResults.map((res) => res.sot);\n    const shotsOnTargetSum = shotsOnTarget.reduce((a, b) => a + b, 0);\n    const avgShotsOnTarget = shotsOnTargetSum / shotsOnTarget.length || 0;\n\n    const shotsOnTargetHome = homeResults.map((res) => res.sot);\n    const shotsOnTargetSumHome = shotsOnTargetHome.reduce((a, b) => a + b, 0);\n    form.avgShotsOnTargetHome =\n      shotsOnTargetSumHome / shotsOnTargetHome.length || 0;\n\n    const shotsOnTargetAway = awayResults.map((res) => res.sot);\n    const shotsOnTargetSumAway = shotsOnTargetAway.reduce((a, b) => a + b, 0);\n    form.avgShotsOnTargetAway =\n      shotsOnTargetSumAway / shotsOnTargetAway.length || 0;\n\n    const shotsOnTargetAgainst = allTeamResults.map((res) => res.sotAgainst);\n    const shotsOnTargetSumAgainst = shotsOnTargetAgainst.reduce(\n      (a, b) => a + b,\n      0\n    );\n    const avgShotsOnTargetAgainst =\n      shotsOnTargetSumAgainst / shotsOnTargetAgainst.length || 0;\n\n    const shotsOnTargetAgainstHome = homeResults.map((res) => res.sotAgainst);\n    const shotsOnTargetSumAgainstHome = shotsOnTargetAgainstHome.reduce(\n      (a, b) => a + b,\n      0\n    );\n    form.avgShotsOnTargetAgainstHome =\n      shotsOnTargetSumAgainstHome / shotsOnTargetAgainstHome.length || 0;\n\n    const shotsOnTargetAgainstAway = awayResults.map((res) => res.sotAgainst);\n    const shotsOnTargetSumAgainstAway = shotsOnTargetAgainstAway.reduce(\n      (a, b) => a + b,\n      0\n    );\n    form.avgShotsOnTargetAgainstAway =\n      shotsOnTargetSumAgainstAway / shotsOnTargetAgainstAway.length || 0;\n\n    const corners = allTeamResults.map((res) => res.corners);\n    const cornersSum = corners.reduce((a, b) => a + b, 0);\n    const cornersAv = cornersSum / corners.length || 0;\n\n    const cornersHome = homeResults.map((res) => res.corners);\n    const cornersSumHome = cornersHome.reduce((a, b) => a + b, 0);\n    form.cornersAvHome = cornersSumHome / cornersHome.length || 0;\n\n    const cornersAway = awayResults.map((res) => res.corners);\n    const cornersSumAway = cornersAway.reduce((a, b) => a + b, 0);\n    form.cornersAvAway = cornersSumAway / cornersAway.length || 0;\n\n    const last5XG = teamXGForAllRecentAtStart.slice(0, 5);\n    const last5XGSum = last5XG.reduce((a, b) => a + b, 0);\n    const last5XGAvgFor = last5XGSum / last5XG.length || 0;\n\n    const last5XGHome = teamXGForHome.slice(0, 5);\n    const last5XGSumHome = last5XGHome.reduce((a, b) => a + b, 0);\n    form.last5XGAvgForHome = last5XGSumHome / last5XGHome.length || 0;\n\n    const last5XGAway = teamXGForAway.slice(0, 5);\n    const last5XGSumAway = last5XGAway.reduce((a, b) => a + b, 0);\n    form.last5XGAvgForAway = last5XGSumAway / last5XGAway.length || 0;\n\n    const XGSumHome = teamXGForHome.reduce((a, b) => a + b, 0);\n    form.avgXGScoredHome = XGSumHome / teamXGForHome.length || 0;\n\n    const XGSumAway = teamXGForAway.reduce((a, b) => a + b, 0);\n    form.avgXGScoredAway = XGSumAway / teamXGForAway.length || 0;\n\n    const XGAgainstSumHome = teamXGAgainstHome.reduce((a, b) => a + b, 0);\n    form.avgXGConceededHome = XGAgainstSumHome / teamXGAgainstHome.length || 0;\n\n    const XGAgainstSumAway = teamXGAgainstAway.reduce((a, b) => a + b, 0);\n    form.avgXGConceededAway = XGAgainstSumAway / teamXGAgainstAway.length || 0;\n\n    const last5XGAgainst = teamXGAgainstAllRecentAtStart.slice(0, 5);\n    const last5XGAgainstSum = last5XGAgainst.reduce((a, b) => a + b, 0);\n    const last5XGAvgAgainst = last5XGAgainstSum / last5XGAgainst.length || 0;\n\n    const last5XGAgainstHome = teamXGForHome.slice(0, 5);\n    const last5XGAgainstSumHome = last5XGAgainstHome.reduce((a, b) => a + b, 0);\n    form.last5XGAvgAgainstHome =\n      last5XGAgainstSumHome / last5XGAgainstHome.length || 0;\n\n    const last5XGAgainstAway = teamXGForAway.slice(0, 5);\n    const last5XGAgainstSumAway = last5XGAgainstAway.reduce((a, b) => a + b, 0);\n    form.last5XGAvgAgainstAway =\n      last5XGAgainstSumAway / last5XGAgainstAway.length || 0;\n\n    form.XGDiffNonAverage = XGSum - XGAgainstSum;\n    form.XGDiffNonAverageLast5 = last5XGSum - last5XGAgainstSum;\n\n    form.XGOverall = parseFloat(avgXGScored.toFixed(2));\n    form.XGlast5 = parseFloat(last5XGAvgFor.toFixed(2));\n\n    form.XGAgainstAvgOverall = parseFloat(avgXGConceeded.toFixed(2));\n    form.XGAgainstlast5 = parseFloat(last5XGAvgAgainst.toFixed(2));\n\n    form.AveragePossessionOverall = parseFloat(avgPossession.toFixed(1));\n    form.AverageDangerousAttacksOverall = parseFloat(\n      avgDangerousAttacks.toFixed(1)\n    );\n    form[\"Average Shots\"] = parseFloat(avgShots.toFixed(1));\n    form.AverageCorners = parseFloat(cornersAv.toFixed(1));\n    form.AverageShotsOnTargetOverall = parseFloat(avgShotsOnTarget.toFixed(1));\n    form.AverageShotsOnTargetAgainstOverall = parseFloat(\n      avgShotsOnTargetAgainst.toFixed(1)\n    );\n    const alpha = 0.75;\n    const beta = 0.75;\n\n    let forAndAgainstRollingAv;\n    let forAndAgainstRollingAvHomeOrAway;\n    if (hOrA === \"home\") {\n      form.allGoalsArrayHomeRecent = teamGoalsAllRecentAtStart.slice(0, 20);\n      form.allConceededArrayHomeRecent = teamConceededAllRecentAtStart.slice(\n        0,\n        20\n      );\n      form.allGoalsArrayHome = teamGoalsAllRecentAtStart;\n      form.allConceededArrayHome = teamConceededAllRecentAtStart;\n      form.allGoalsArrayHomeOnly = teamGoalsHome;\n      form.allConceededArrayHomeOnly = teamConceededHome;\n      const sum = teamGoalsHome.reduce((a, b) => a + b, 0);\n      const sumTwo = teamConceededHome.reduce((a, b) => a + b, 0);\n      form.goalDifferenceHomeOrAway = sum - sumTwo;\n\n      forAndAgainstRollingAv = await predictGoalsWithExponentialSmoothing(\n        teamGoalsAll.reverse(),\n        teamConceededAll.reverse(),\n        alpha\n      );\n      forAndAgainstRollingAvHomeOrAway =\n        await predictGoalsWithExponentialSmoothing(\n          teamGoalsHome,\n          teamConceededHome,\n          beta\n        );\n    } else if (hOrA === \"away\") {\n      form.allGoalsArrayAwayRecent = teamGoalsAllRecentAtStart.slice(0, 20);\n      form.allConceededArrayAwayRecent = teamConceededAllRecentAtStart.slice(\n        0,\n        20\n      );\n      form.allGoalsArrayAway = teamGoalsAllRecentAtStart;\n      form.allConceededArrayAway = teamConceededAllRecentAtStart;\n      form.allGoalsArrayAwayOnly = teamGoalsAway;\n      form.allConceededArrayAwayOnly = teamConceededAway;\n      const sum = teamGoalsAway.reduce((a, b) => a + b, 0);\n      const sumTwo = teamConceededAway.reduce((a, b) => a + b, 0);\n      form.goalDifferenceHomeOrAway = sum - sumTwo;\n      forAndAgainstRollingAv = await predictGoalsWithExponentialSmoothing(\n        teamGoalsAll.reverse(),\n        teamConceededAll.reverse(),\n        alpha\n      );\n      forAndAgainstRollingAvHomeOrAway =\n        await predictGoalsWithExponentialSmoothing(\n          teamGoalsAway,\n          teamConceededAway,\n          beta\n        );\n    }\n\n    let bttsHome = homeResults.map((res) => res.btts);\n    if (bttsHome.length > 10) {\n      bttsHome = bttsHome.slice(-10);\n    }\n\n    let bttsAway = awayResults.map((res) => res.btts);\n    if (bttsAway.length > 10) {\n      bttsAway = bttsAway.slice(-10);\n    }\n\n    let bttsAll = allTeamResults.map((res) => res.btts);\n    if (bttsAll.length > 10) {\n      bttsAll = bttsAll.slice(-10);\n    }\n\n    const bttsHomeCount = bttsHome.filter((btts) => btts === true);\n    const bttsHomeString = `${bttsHomeCount.length}/${bttsHome.length}`;\n    const bttsHomePercentage = (\n      (bttsHomeCount.length / bttsHome.length) *\n      100\n    ).toFixed(0);\n\n    const bttsAwayCount = bttsAway.filter((btts) => btts === true);\n    const bttsAwayString = `${bttsAwayCount.length}/${bttsAway.length}`;\n    const bttsAwayPercentage = (\n      (bttsAwayCount.length / bttsAway.length) *\n      100\n    ).toFixed(0);\n    const bttsAllCount = bttsAll.filter((btts) => btts === true);\n    const bttsAllString = `${bttsAllCount.length}/${bttsAll.length}`;\n    const bttsAllPercentage = (\n      (bttsAllCount.length / bttsAll.length) *\n      100\n    ).toFixed(0);\n    form.bttsAllPercentage = bttsAllPercentage;\n    form.bttsHomePercentage = bttsHomePercentage;\n    form.bttsAwayPercentage = bttsAwayPercentage;\n\n    let r = 10;\n    let x = 10;\n\n    const teamGoalsHomeRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsHome,\n      teamGoalsHome.length < x ? teamGoalsHome.length : x\n    );\n\n    const teamGoalsAwayRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsAway,\n      teamGoalsAway.length < x ? teamGoalsAway.length : x\n    );\n\n    const RoundedXGFor = teamXGForAll.map((xg) => xg);\n    const RoundedXGAgainst = teamXGAgainstAll.map((xg) => xg);\n    const RoundedXGForHome = teamXGForHome.map((xg) => xg);\n    const RoundedXGAgainstHome = teamXGAgainstHome.map((xg) => xg);\n    const RoundedXGForAway = teamXGForAway.map((xg) => xg);\n    const RoundedXGAgainstAway = teamXGAgainstAway.map((xg) => xg);\n\n    form.XGPrediction = await predictGoalsWithExponentialSmoothing(\n      RoundedXGFor,\n      RoundedXGAgainst,\n      alpha\n    );\n\n    form.XGPredictionHome = await predictGoalsWithExponentialSmoothing(\n      RoundedXGForHome,\n      RoundedXGAgainstHome,\n      beta\n    );\n\n    form.XGPredictionAway = await predictGoalsWithExponentialSmoothing(\n      RoundedXGForAway,\n      RoundedXGAgainstAway,\n      beta\n    );\n\n    const teamConceededHomeRollingAverage =\n      await predictNextWeightedMovingAverage(\n        teamConceededHome,\n        teamConceededHome.length < x ? teamConceededHome.length : x\n      );\n\n    const teamConceededAwayRollingAverage =\n      await predictNextWeightedMovingAverage(\n        teamConceededAway,\n        teamConceededAway.length < x ? teamConceededAway.length : x\n      );\n\n    const sum = teamGoalsAll.reduce((a, b) => a + b, 0);\n    const avgScored = sum / teamGoalsAll.length || 0;\n    form.avgScored = avgScored.toFixed(2);\n\n    const sumHome = teamGoalsHome.reduce((a, b) => a + b, 0);\n    const avgScoredHome = sumHome / teamGoalsAll.length || 0;\n    form.avgScoredHome = avgScoredHome.toFixed(2);\n\n    const sumAway = teamGoalsAway.reduce((a, b) => a + b, 0);\n    const avgScoredAway = sumAway / teamGoalsAway.length || 0;\n    form.avgScoredAway = avgScoredAway.toFixed(2);\n\n    const last5 = teamGoalsAllRecentAtStart.slice(0, 5);\n    const last5Sum = last5.reduce((a, b) => a + b, 0);\n    const last5AvgScored = last5Sum / last5.length || 0;\n\n    const last5Home = teamGoalsHome.slice(0, 5);\n    const last5SumHome = last5Home.reduce((a, b) => a + b, 0);\n    form.last5AvgScoredHome = last5SumHome / last5Home.length || 0;\n\n    const last5Away = teamGoalsAway.slice(0, 5);\n    const last5SumAway = last5Away.reduce((a, b) => a + b, 0);\n    form.last5AvgScoredAway = last5SumAway / last5Away.length || 0;\n\n    const last5Conceeded = teamConceededAllRecentAtStart.slice(0, 5);\n    const last5ConceededSum = last5Conceeded.reduce((a, b) => a + b, 0);\n    const last5AvgConceeded = last5ConceededSum / last5Conceeded.length || 0;\n\n    const last5ConceededHome = teamConceededHome.slice(0, 5);\n    const last5ConceededSumHome = last5ConceededHome.reduce((a, b) => a + b, 0);\n    form.last5AvgConceededHome =\n      last5ConceededSumHome / last5ConceededHome.length || 0;\n\n    const last5ConceededAway = teamConceededAway.slice(0, 5);\n    const last5ConceededSumAway = last5ConceededAway.reduce((a, b) => a + b, 0);\n    form.last5AvgConceededAway =\n      last5ConceededSumAway / last5ConceededAway.length || 0;\n\n    const last10 = teamGoalsAllRecentAtStart.slice(0, 10);\n    const last10Sum = last10.reduce((a, b) => a + b, 0);\n    const last10AvgScored = last10Sum / last10.length || 0;\n\n    const last10Conceeded = teamConceededAllRecentAtStart.slice(0, 10);\n    const last10ConceededSum = last10Conceeded.reduce((a, b) => a + b, 0);\n    const last10AvgConceeded = last10ConceededSum / last10Conceeded.length || 0;\n\n    form.last5Goals = parseFloat(last5AvgScored.toFixed(2));\n    form.last5GoalsConceeded = parseFloat(last5AvgConceeded.toFixed(2));\n    form.last5GoalDiff = form.last5Goals - form.last5GoalsConceeded;\n    form.last10Goals = parseFloat(last10AvgScored.toFixed(2));\n    form.last10GoalsConceeded = parseFloat(last10AvgConceeded.toFixed(2));\n    form.last10GoalDiff = form.last10Goals - form.last10GoalsConceeded;\n\n    const teamGoalsAllRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsAll,\n      teamGoalsAll.length < r ? teamGoalsAll.length : r\n    );\n\n    const teamGoalsConceededAllRollingAverage =\n      await predictNextWeightedMovingAverage(\n        last10Conceeded,\n        last10Conceeded.length < r ? last10Conceeded.length : r\n      );\n\n    const sumTwo = teamConceededAll.reduce((a, b) => a + b, 0);\n    const avgConceeded = sumTwo / teamConceededAll.length || 0;\n    form.avgConceeded = avgConceeded.toFixed(2);\n\n    const teamConceededHomeOnlySum = teamConceededHome.reduce(\n      (a, b) => a + b,\n      0\n    );\n    const teamConceededAvgHomeOnly =\n      teamConceededHomeOnlySum / teamConceededHome.length || 0;\n    form.teamConceededAvgHomeOnly = teamConceededAvgHomeOnly;\n\n    const teamConceededAwayOnlySum = teamConceededAway.reduce(\n      (a, b) => a + b,\n      0\n    );\n    const teamConceededAvgAwayOnly =\n      teamConceededAwayOnlySum / teamConceededAway.length || 0;\n    form.teamConceededAvgAwayOnly = teamConceededAvgAwayOnly;\n\n    form.goalDifference = sum - sumTwo;\n\n    // console.log(teamGoalsHomeRollingAverage)\n    // console.log(teamGoalsAwayRollingAverage)\n    // console.log(teamGoalsAllRollingAverage)\n    // console.log(teamConceededHomeRollingAverage)\n    // console.log(teamConceededAwayRollingAverage)\n    // console.log(teamGoalsConceededAllRollingAverage)\n    // console.log(averageOddsHome)\n    // console.log(averageOddsAway)\n    // console.log(avgScored)\n    // console.log(avgConceeded)\n    // console.log(form.XGPrediction)\n    // console.log(forAndAgainstRollingAvHomeOrAway)\n    // console.log(forAndAgainstRollingAv)\n\n    return [\n      teamGoalsHomeRollingAverage,\n      teamGoalsAwayRollingAverage,\n      teamGoalsAllRollingAverage,\n      teamConceededHomeRollingAverage,\n      teamConceededAwayRollingAverage,\n      teamGoalsConceededAllRollingAverage,\n      averageOddsHome,\n      averageOddsAway,\n      avgScored,\n      avgConceeded,\n      bttsAllString,\n      bttsHomeString,\n      bttsAwayString,\n      bttsAllPercentage,\n      bttsHomePercentage,\n      bttsAwayPercentage,\n      forAndAgainstRollingAvHomeOrAway,\n      forAndAgainstRollingAv,\n    ];\n  } else {\n    return null;\n  }\n}\n\nasync function predictNextWeightedMovingAverage(numbers, windowSize) {\n  const startIndex = numbers.length - windowSize;\n  const window = numbers.slice(startIndex);\n  const weights = Array.from(\n    { length: windowSize },\n    (_, i) => (i + 1) / ((windowSize * (windowSize + 1)) / 2)\n  );\n  const sum = window.reduce((acc, num, i) => acc + num * weights[i], 0);\n  const movingAverage = sum / weights.reduce((acc, w) => acc + w, 0);\n  return parseFloat(movingAverage.toFixed(2));\n}\n\n// Function to calculate the weighted average using exponential smoothing\nasync function calculateWeightedAverage(arr, alpha) {\n  let weightedSum = 0;\n  let totalWeight = 0;\n\n  for (let i = arr.length - 1; i >= 0; i--) {\n    const weight = Math.pow(1 - alpha, arr.length - 1 - i);\n    weightedSum += arr[i] * weight;\n    totalWeight += weight;\n  }\n\n  return weightedSum / totalWeight;\n}\n\n// Function to predict goals scored and conceded for a team with exponential smoothing\nasync function predictGoalsWithExponentialSmoothing(\n  teamGoalsFor,\n  teamGoalsAgainst,\n  alpha\n) {\n  const lambdaFor = await calculateWeightedAverage(teamGoalsFor, alpha);\n  const lambdaAgainst = await calculateWeightedAverage(teamGoalsAgainst, alpha);\n\n  // You can fine-tune these values based on your model and data\n  const predictedGoalsFor = lambdaFor;\n  const predictedGoalsAgainst = lambdaAgainst;\n\n  return {\n    goalsFor: predictedGoalsFor,\n    goalsAgainst: predictedGoalsAgainst,\n  };\n}\n\nasync function calculateDifference(num1, num2) {\n  return num1 >= num2 ? num1 - num2 : -(num2 - num1);\n}\n\nexport async function comparison(metricOne, metricTwo) {\n  let stat1 = parseFloat(metricOne);\n  let stat2 = parseFloat(metricTwo);\n  let statDiff;\n\n  statDiff = await calculateDifference(stat1, stat2);\n\n  return parseFloat(statDiff);\n}\n\nexport async function compareStat(statOne, statTwo) {\n  let stat1 = parseFloat(statOne);\n  let stat2 = parseFloat(statTwo);\n  let statDiff;\n  // console.log( await normalizeValues(12, 2, 0, 1))\n  // console.log(await diff(1.8571428571428571, 1.14285714285714285))\n\n  if (stat1 === 0) {\n    stat1 = stat1 + 1;\n    stat2 = stat2 + 1;\n  }\n  if (stat2 === 0) {\n    stat2 = stat2 + 1;\n    stat2 = stat2 + 1;\n  }\n\n  const { normalizedValue1, normalizedValue2 } = await normalizeValues(\n    stat1,\n    stat2,\n    0,\n    1\n  );\n\n  const finalValue1 = normalizedValue1;\n  const finalValue2 = normalizedValue2;\n\n  statDiff = await diff(finalValue1, finalValue2);\n\n  // if (statDiff > 0.3 || statDiff < -0.3) {\n  //   // console.log(statDiff)\n  // } else {\n  //   statDiff = 0;\n  // }\n  return statDiff;\n}\n\nexport async function getClinicalRating(form) {\n  let rating;\n  let score;\n  switch (true) {\n    case form.dangerousAttackConversion <= 15:\n      rating = \"excellent\";\n      score = 0.8;\n      break;\n\n    case form.dangerousAttackConversion > 15 &&\n      form.dangerousAttackConversion <= 20:\n      rating = \"great\";\n      score = 0.9;\n      break;\n\n    case form.dangerousAttackConversion > 20 &&\n      form.dangerousAttackConversion <= 25:\n      rating = \"very good\";\n      score = 0.95;\n      break;\n\n    case form.dangerousAttackConversion > 25 &&\n      form.dangerousAttackConversion <= 32.5:\n      rating = \"good\";\n      score = 0.98;\n      break;\n\n    case form.dangerousAttackConversion > 30 &&\n      form.dangerousAttackConversion <= 35:\n      rating = \"above average\";\n      score = 0.99;\n      break;\n\n    case form.dangerousAttackConversion > 35 &&\n      form.dangerousAttackConversion <= 40:\n      rating = \"average\";\n      score = 1;\n      break;\n\n    case form.dangerousAttackConversion > 40 &&\n      form.dangerousAttackConversion <= 45:\n      rating = \"below average\";\n      score = 1.01;\n      break;\n\n    case form.dangerousAttackConversion > 45 &&\n      form.dangerousAttackConversion <= 50:\n      rating = \"poor\";\n      score = 1.05;\n      break;\n\n    case form.dangerousAttackConversion > 50 &&\n      form.dangerousAttackConversion <= 55:\n      rating = \"very poor\";\n      score = 1.1;\n      break;\n\n    case form.dangerousAttackConversion > 55 &&\n      form.dangerousAttackConversion <= 60:\n      rating = \"terrible\";\n      score = 1.2;\n      break;\n\n    case form.dangerousAttackConversion > 60:\n      rating = \"awful\";\n      score = 1.3;\n      break;\n\n    default:\n      break;\n  }\n\n  return [rating, score];\n}\n\nexport async function getPointsDifferential(pointsHomeAvg, pointsAwayAvg) {\n  const differential = await diff(pointsHomeAvg, pointsAwayAvg);\n  return parseFloat(differential);\n}\n\nexport async function getPointWeighting(pointsDiff) {\n  let pointsDiffWeightingHome;\n  let pointsDiffWeightingAway;\n\n  switch (true) {\n    case pointsDiff >= 2.5:\n      pointsDiffWeightingHome = 0.3;\n      pointsDiffWeightingAway = -0.3;\n      break;\n    case pointsDiff >= 2 && pointsDiff < 2.5:\n      pointsDiffWeightingHome = 0.2;\n      pointsDiffWeightingAway = -0.2;\n      break;\n    case pointsDiff >= 1.5 && pointsDiff < 2:\n      pointsDiffWeightingHome = 0.15;\n      pointsDiffWeightingAway = -0.15;\n      break;\n    case pointsDiff >= 1 && pointsDiff < 1.5:\n      pointsDiffWeightingHome = 0.1;\n      pointsDiffWeightingAway = -0.1;\n      break;\n    case pointsDiff >= 0.5 && pointsDiff < 1:\n      pointsDiffWeightingHome = 0.05;\n      pointsDiffWeightingAway = -0.05;\n      break;\n    case pointsDiff > -0.5 && pointsDiff < 0.5:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n      break;\n    case pointsDiff <= -0.5 && pointsDiff > -1:\n      pointsDiffWeightingHome = -0.05;\n      pointsDiffWeightingAway = 0.05;\n      break;\n    case pointsDiff <= -1 && pointsDiff > -1.5:\n      pointsDiffWeightingHome = -0.1;\n      pointsDiffWeightingAway = 0.1;\n      break;\n    case pointsDiff <= -1.5 && pointsDiff > -2:\n      pointsDiffWeightingHome = -0.15;\n      pointsDiffWeightingAway = 0.15;\n      break;\n    case pointsDiff <= -2 && pointsDiff > -2.5:\n      pointsDiffWeightingHome = -0.2;\n      pointsDiffWeightingAway = 0.2;\n      break;\n    case pointsDiff <= -2.5:\n      pointsDiffWeightingHome = -0.3;\n      pointsDiffWeightingAway = 0.3;\n      break;\n    default:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n  }\n  return [pointsDiffWeightingHome, pointsDiffWeightingAway];\n}\n\nexport async function compareFormTrend(recentForm, distantForm) {\n  let score;\n  let scoreTotal = 0;\n\n  for (let index = 0; index < recentForm.length; index++) {\n    const recent = recentForm[index];\n    const distant = distantForm[index];\n\n    if (recent > distant) {\n      score = 1.05;\n    } else if (recent === distant) {\n      score = 1;\n    } else if (recent < distant) {\n      score = 0.95;\n    }\n    scoreTotal = scoreTotal + score / recentForm.length;\n  }\n\n  return scoreTotal;\n}\n\nexport async function getPointAverage(pointTotal, games) {\n  return pointTotal / games;\n}\n\nasync function poissonDistribution(lambda, k) {\n  const numerator = Math.exp(-lambda) * Math.pow(lambda, k);\n  const denominator = factorial(k);\n  return numerator / denominator;\n}\n\nfunction factorial(n) {\n  if (n === 0 || n === 1) {\n    return 1;\n  }\n  let result = 1;\n  for (let i = 2; i <= n; i++) {\n    result *= i;\n  }\n  return result;\n}\n\nasync function calculateAverageGoals(goalsFor) {\n  const totalGoals = goalsFor.reduce((sum, goals) => sum + goals, 0);\n  return totalGoals / goalsFor.length;\n}\n\nasync function adjustGoalsAvg(goalsAvg, strengthRatio) {\n  return goalsAvg * strengthRatio;\n}\n\nasync function predictScore(\n  goalsForTeam1,\n  goalsAgainstTeam1,\n  goalsForTeam2,\n  goalsAgainstTeam2,\n  team1Metrics,\n  team2Metrics,\n  game\n) {\n  let team1AverageGoalsFor = await calculateAverageGoals(goalsForTeam1);\n  let team1AverageGoalsAgainst = await calculateAverageGoals(goalsAgainstTeam1);\n  let team2AverageGoalsFor = await calculateAverageGoals(goalsForTeam2);\n  let team2AverageGoalsAgainst = await calculateAverageGoals(goalsAgainstTeam2);\n\n  let team1StrengthRatio = 1;\n  let team2StrengthRatio = 1;\n\n  let adjustedTeam1AverageGoals = await adjustGoalsAvg(\n    team1AverageGoalsFor,\n    team1StrengthRatio\n  );\n  let adjustedTeam2AverageGoals = await adjustGoalsAvg(\n    team2AverageGoalsFor,\n    team2StrengthRatio\n  );\n\n  let adjustedTeam1AverageGoalsAgainst = await adjustGoalsAvg(\n    team1AverageGoalsAgainst,\n    team2StrengthRatio\n  );\n  let adjustedTeam2AverageGoalsAgainst = await adjustGoalsAvg(\n    team2AverageGoalsAgainst,\n    team1StrengthRatio\n  );\n\n  let maxGoals = 5; // Set the maximum number of goals to predict\n\n  const scores = [];\n\n  for (let i = 0; i <= maxGoals; i++) {\n    for (let j = 0; j <= maxGoals; j++) {\n      let team1GoalExpectation =\n        (adjustedTeam1AverageGoals + adjustedTeam2AverageGoalsAgainst) / 2;\n      // (adjustedTeam2AverageGoalsAgainst / adjustedTeam1AverageGoalsAgainst);\n      let team2GoalExpectation =\n        (adjustedTeam2AverageGoals + adjustedTeam1AverageGoalsAgainst) / 2;\n      // (adjustedTeam1AverageGoalsAgainst / adjustedTeam2AverageGoalsAgainst);\n\n      if (!isFinite(team1GoalExpectation)) {\n        team1GoalExpectation = 0;\n      }\n\n      if (!isFinite(team2GoalExpectation)) {\n        team2GoalExpectation = 0;\n      }\n\n      const probability =\n        (await poissonDistribution(team1GoalExpectation, i)) *\n        (await poissonDistribution(team2GoalExpectation, j));\n      scores.push({\n        team1Score: i,\n        team2Score: j,\n        probability,\n      });\n    }\n  }\n\n  scores.sort((a, b) => b.probability - a.probability); // Sort scores in descending order by probability\n  const top5Scores = scores.slice(0, 5); // Get the top 5 scores\n\n  // for (const score of top5Scores) {\n  //   console.log(\n  //     `Team 1: ${score.team1Score} - Team 2: ${score.team2Score} (${(\n  //       score.probability * 100\n  //     ).toFixed(2)}%)`\n  //   );\n  // }\n  return top5Scores;\n}\n\nasync function normalizeValues(value1, value2, minRange, maxRange) {\n  if (\n    typeof value1 !== \"number\" ||\n    typeof value2 !== \"number\" ||\n    typeof minRange !== \"number\" ||\n    typeof maxRange !== \"number\"\n  ) {\n    throw new Error(\"All arguments must be numbers.\");\n  }\n\n  // Calculate the absolute values of the inputs\n\n  const absValue1 = Math.abs(value1);\n  const absValue2 = Math.abs(value2);\n\n  // Calculate the total sum of the absolute values\n  const totalAbs = absValue1 + absValue2;\n\n  // Calculate the normalized values based on the ratio of absolute values\n  const normalizedAbsValue1 =\n    (absValue1 / totalAbs) * (maxRange - minRange) + minRange;\n  const normalizedAbsValue2 =\n    (absValue2 / totalAbs) * (maxRange - minRange) + minRange;\n\n  // Adjust the signs of the normalized values based on the original values\n  const normalizedValue1 =\n    value1 >= 0 ? normalizedAbsValue1 : -normalizedAbsValue1;\n  const normalizedValue2 =\n    value2 >= 0 ? normalizedAbsValue2 : -normalizedAbsValue2;\n\n  return { normalizedValue1, normalizedValue2 };\n}\n\nexport async function generateGoals(homeForm, awayForm, match) {\n  let homeGoals = 0;\n  let awayGoals = 0;\n\n  const homeAttackVsAwayDefenceComparison = await comparison(\n    homeForm.attackingStrength,\n    awayForm.defensiveStrengthScoreGeneration\n  );\n  const awayAttackVsHomeDefenceComparison = await comparison(\n    awayForm.attackingStrength,\n    homeForm.defensiveStrengthScoreGeneration\n  );\n\n  const homeOverallVsAwayOverallComparison = await comparison(\n    homeForm.attackingStrength + homeForm.defensiveStrength,\n    awayForm.attackingStrength + awayForm.defensiveStrength\n  );\n\n  const awayOverallVsHomeOverallComparison = await comparison(\n    awayForm.attackingStrength + awayForm.defensiveStrength,\n    homeForm.attackingStrength + homeForm.defensiveStrength\n  );\n\n  const homeAttackVsAwayDefenceComparisonLast5 = await comparison(\n    homeForm.attackingStrengthLast5,\n    awayForm.defensiveStrengthScoreGenerationLast5\n  );\n  const awayAttackVsHomeDefenceComparisonLast5 = await comparison(\n    awayForm.attackingStrengthLast5,\n    homeForm.defensiveStrengthScoreGenerationLast5\n  );\n\n  const homeAttackVsAwayDefenceComparisonHomeOnly = await comparison(\n    homeForm.attackingStrengthHomeOnly,\n    awayForm.defensiveStrengthScoreGenerationAwayOnly\n  );\n  const awayAttackVsHomeDefenceComparisonAwayOnly = await comparison(\n    awayForm.attackingStrengthAwayOnly,\n    homeForm.defensiveStrengthScoreGenerationHomeOnly\n  );\n\n  const pointsComparisonHome = await comparison(\n    homeForm.avPoints6,\n    awayForm.avPoints6\n  );\n\n  const pointsComparisonAway = await comparison(\n    awayForm.avPoints6,\n    homeForm.avPoints6\n  );\n\n  homeGoals =\n    1 +\n    homeAttackVsAwayDefenceComparison * 1.75 +\n    // (homeGoals + homeOverallVsAwayOverallComparison) * 0.25 +\n    homeAttackVsAwayDefenceComparisonLast5 * 1.75 +\n    homeAttackVsAwayDefenceComparisonHomeOnly * 1;\n  // pointsComparisonHome * 0.1;\n  awayGoals =\n    1 +\n    awayAttackVsHomeDefenceComparison * 1.75 +\n    // (awayGoals + awayOverallVsHomeOverallComparison) * 0.25 +\n    awayAttackVsHomeDefenceComparisonLast5 * 1.75 +\n    awayAttackVsHomeDefenceComparisonAwayOnly * 1;\n  // pointsComparisonAway * 0.1;\n\n  // if (homeForm.actualToXGDifference > 25) {\n  //   homeGoals = homeGoals + homeForm.actualToXGDifference / 50;\n  // } else if (homeForm.actualToXGDifference < -25) {\n  //   homeGoals = homeGoals + homeForm.actualToXGDifference / 50;\n  // }\n\n  // if (awayForm.actualToXGDifference > 25) {\n  //   awayGoals = awayGoals + awayForm.actualToXGDifference / 50;\n  // } else if (awayForm.actualToXGDifference < -25) {\n  //   awayGoals = awayGoals + awayForm.actualToXGDifference / 50;\n  // }\n\n  if (\n    homeForm.lastGame === \"L\" ||\n    homeForm.last2Points < 2 ||\n    awayForm.last2Points >= 5 ||\n    match.XGdifferentialValueRaw < 0\n  ) {\n    awayGoals = awayGoals + 0.3;\n  } else if (\n    awayForm.lastGame === \"L\" ||\n    awayForm.last2Points < 2 ||\n    homeForm.last2Points >= 5 ||\n    match.XGdifferentialValueRaw > 0\n  ) {\n    homeGoals = homeGoals + 0.3;\n  }\n\n  // if(homeForm.last5Points > homeForm.last10Points){\n  //   homeGoals = homeGoals + 0.1;\n  //   awayGoals = awayGoals - 0.1;\n\n  // } else if (awayForm.last5Points > awayForm.last10Points){\n  //   awayGoals = awayGoals + 0.1;\n  //   homeGoals = homeGoals - 0.1;\n  // }\n\n  // Cumalative ROI for all 2193 match outcomes: + 4.18%\n\n  if (homeGoals < 0 && awayGoals < 0) {\n    if (homeGoals < awayGoals) {\n      homeGoals = homeGoals + awayGoals / 5;\n      awayGoals = awayGoals - homeGoals / 5;\n    } else if (homeGoals > awayGoals) {\n      homeGoals = homeGoals - awayGoals / 5;\n      awayGoals = awayGoals + homeGoals / 5;\n    }\n  }\n\n  return [homeGoals, awayGoals];\n}\n\nexport async function compareTeams(homeForm, awayForm, match) {\n  // let homeAttackStrength = homeForm.attackingStrength;\n  // let homeDefenceStrength = homeForm.defensiveStrength;\n  // let homePossessionStrength = homeForm.possessionStrength;\n  // let awayAttackStrength = awayForm.attackingStrength;\n  // let awayDefenceStrength = awayForm.defensiveStrength;\n  // let awayPossessionStrength = awayForm.possessionStrength;\n  // let homeAttackStrengthLast5 = homeForm.attackingStrengthLast5;\n  // let homeDefenceStrengthLast5 = homeForm.defensiveStrengthLast5;\n  // let homePossessionStrengthLast5 = homeForm.possessionStrengthLast5;\n  // let awayAttackStrengthLast5 = awayForm.attackingStrengthLast5;\n  // let awayDefenceStrengthLast5 = awayForm.defensiveStrengthLast5;\n  // let awayPossessionStrengthLast5 = awayForm.possessionStrengthLast5;\n  // let homeAttackStrengthHome = homeForm.attackingStrengthHomeOnly;\n  // let homeDefenceStrengthHome = homeForm.defensiveStrengthHomeOnly;\n  // let homePossessionStrengthHome = homeForm.possessionStrengthHomeOnly;\n  // let awayAttackStrengthAway = awayForm.attackingStrengthAwayOnly;\n  // let awayDefenceStrengthAway = awayForm.defensiveStrengthAwayOnly;\n  // let awayPossessionStrengthAway = awayForm.possessionStrengthAwayOnly;\n  // const attackStrengthComparison = await compareStat(\n  //   homeAttackStrength,\n  //   awayAttackStrength\n  // );\n  // const attackStrengthHAComparison = await compareStat(\n  //   homeAttackStrengthHome,\n  //   awayAttackStrengthAway\n  // );\n  // const defenceStrengthComparison = await compareStat(\n  //   homeDefenceStrength,\n  //   awayDefenceStrength\n  // );\n  // const defenceStrengthHAComparison = await compareStat(\n  //   homeDefenceStrengthHome,\n  //   awayDefenceStrengthAway\n  // );\n  // const attackStrengthComparisonLast5 = await compareStat(\n  //   homeAttackStrengthLast5,\n  //   awayAttackStrengthLast5\n  // );\n  // const defenceStrengthComparisonLast5 = await compareStat(\n  //   homeDefenceStrengthLast5,\n  //   awayDefenceStrengthLast5\n  // );\n  // const possessiontrengthComparison = await compareStat(\n  //   homePossessionStrength,\n  //   awayPossessionStrength\n  // );\n  // const possessiontrengthComparisonLast5 = await compareStat(\n  //   homePossessionStrengthLast5,\n  //   awayPossessionStrengthLast5\n  // );\n  // const possessionHAStrengthComparison = await compareStat(\n  //   homePossessionStrengthHome,\n  //   awayPossessionStrengthAway\n  // );\n  // // const xgActualComparison = await compareStat(\n  // //   homeForm.actualToXGDifference,\n  // //   awayForm.actualToXGDifference\n  // // );\n  // // const XGComparison = await compareStat(\n  // //   homeForm.XGDiffNonAverage,\n  // //   awayForm.XGDiffNonAverage\n  // // );\n  // // const XGComparisonLast5 = await compareStat(\n  // //   homeForm.XGDiffNonAverageLast5,\n  // //   awayForm.XGDiffNonAverageLast5\n  // // )\n  // const homeAwayPointAverageComparison = await compareStat(\n  //   homeForm.homeOrAwayAverage,\n  //   awayForm.homeOrAwayAverage\n  // );\n  // // const fiveGameComparison = await compareStat(\n  // //   homeForm.last5Points,\n  // //   awayForm.last5Points\n  // // );\n  // // const last5GDComparison = await compareStat(\n  // //   homeForm.last5GoalDiff,\n  // //   awayForm.last5GoalDiff\n  // // )\n  // let oddsComparison = await compareStat(match.awayOdds, match.homeOdds);\n  // // const homeAdvantage = await compareStat(\n  // //   parseFloat(homeForm.homeAttackAdvantage) / 2,\n  // //   1\n  // // );\n  // // const dangerousAttacksWithConverstionComparison = await compareStat(\n  // //   homeForm.AverageDangerousAttacksOverall *\n  // //     homeForm.dangerousAttackConversion,\n  // //   awayForm.AverageDangerousAttacksOverall * awayForm.dangerousAttackConversion\n  // // );\n  // match.goalDiffHomeOrAwayComparison =\n  //   parseFloat(homeForm.goalDifferenceHomeOrAway) -\n  //   parseFloat(awayForm.goalDifferenceHomeOrAway);\n  // match.goalDifferenceComparison =\n  //   parseFloat(homeForm.goalDifference) - parseFloat(awayForm.goalDifference);\n  // const goalDiffHomeOrAwayComparison = await compareStat(\n  //   homeForm.goalDifferenceHomeOrAway,\n  //   awayForm.goalDifferenceHomeOrAway\n  // );\n  // const overallDirectnessComparison = await compareStat(\n  //   homeForm.directnessOverallStrength,\n  //   awayForm.directnessOverallStrength\n  // );\n  // // const hOrADirectnessComparison = await compareStat(\n  // //   homeForm.directnessHomeOnly,\n  // //   awayForm.directnessAwayOnly\n  // // );\n  // const accuracyComparison = await compareStat(\n  //   homeForm.accuracyOverallStrength,\n  //   awayForm.accuracyOverallStrength\n  // );\n  // const accuracyComparisonLast5 = await compareStat(\n  //   homeForm.accuracyOverallStrengthLast5,\n  //   awayForm.accuracyOverallStrengthLast5\n  // );\n  // // console.log(match.game)\n  // // console.log(attackStrengthComparison);\n  // // console.log(defenceStrengthComparison);\n  // // console.log(possessiontrengthComparison);\n  // // console.log(attackStrengthComparisonLast5);\n  // // console.log(defenceStrengthComparisonLast5);\n  // // console.log(attackStrengthHAComparison);\n  // // console.log(defenceStrengthHAComparison);\n  // // console.log(homeAwayPointAverageComparison);\n  // // console.log(goalDiffHomeOrAwayComparison);\n  // // // console.log(oddsComparison);\n  // // console.log(overallDirectnessComparison);\n  // // console.log(accuracyComparisonLast5);\n  // // console.log(accuracyComparison);\n  // // let calculation =\n  // //   attackStrengthComparison * 0 +\n  // //   attackStrengthComparisonLast5 * 0 +\n  // //   attackStrengthHAComparison * 1 +\n  // //   defenceStrengthComparison * 0 +\n  // //   defenceStrengthComparisonLast5 * 0 +\n  // //   defenceStrengthHAComparison * 1 +\n  // //   possessiontrengthComparison * 0 +\n  // //   possessionHAStrengthComparison * 0 +\n  // //   possessiontrengthComparisonLast5 * 1 +\n  // //   // xgToActualDiffComparison * 1 +\n  // //   // xgForStrengthRecentComparison * 1 +\n  // //   // xgAgainstStrengthRecentComparison * 1 +\n  // //   homeAwayPointAverageComparison * 5 +\n  // //   goalDiffHomeOrAwayComparison * 0 +\n  // //   // xgActualComparison * 0 +\n  // //   // xgForComparison * 1 +\n  // //   // xgAgainstComparison * 1 +\n  // //   // XGComparison * 0 +\n  // //   oddsComparison * 2 +\n  // //   // dangerousAttacksWithConverstionComparison * 0.05 +\n  // //   overallDirectnessComparison * 0 +\n  // //   // hOrADirectnessComparison * 0 +\n  // //   accuracyComparisonLast5 * 0 +\n  // //   accuracyComparison * 0;\n  // // // console.log(match.game)\n  // // // console.log(calculation)\n  // let calculation =\n  //   attackStrengthComparisonLast5 * 2 +\n  //   attackStrengthHAComparison * 1 +\n  //   defenceStrengthComparisonLast5 * 2 +\n  //   defenceStrengthHAComparison * 1 +\n  //   possessionHAStrengthComparison * 1 +\n  //   possessiontrengthComparisonLast5 * 1 +\n  //   possessiontrengthComparison * 1 +\n  //   // xgToActualDiffComparison * 1 +\n  //   // xgForStrengthRecentComparison * 1 +\n  //   // xgAgainstStrengthRecentComparison * 1 +\n  //   homeAwayPointAverageComparison * 2 +\n  //   goalDiffHomeOrAwayComparison * 0 +\n  //   // xgActualComparison * 1 +\n  //   // xgForComparison * 1 +\n  //   // xgAgainstComparison * 1 +\n  //   oddsComparison * 0 +\n  //   // dangerousAttacksWithConverstionComparison * 0.05 +\n  //   overallDirectnessComparison * 0 +\n  //   accuracyComparison * 1;\n  // let homeWinOutcomeProbability =\n  //   match.homeTeamWinPercentage + match.awayTeamLossPercentage;\n  // let awayWinOutcomeProbability =\n  //   match.homeTeamLossPercentage + match.awayTeamWinPercentage;\n  // let drawOutcomeProbability =\n  //   match.homeTeamDrawPercentage + match.awayTeamDrawPercentage;\n  // if (\n  //   drawOutcomeProbability > homeWinOutcomeProbability &&\n  //   drawOutcomeProbability > awayWinOutcomeProbability\n  // ) {\n  //   switch (true) {\n  //     case drawOutcomeProbability > 100:\n  //       calculation = calculation / 3;\n  //       break;\n  //     default:\n  //       calculation = calculation * 1;\n  //       break;\n  //   }\n  // } else {\n  //   calculation = calculation * 1;\n  // }\n  // if (calculation > 0) {\n  //   if (\n  //     homeForm.lastGame === \"L\" ||\n  //     homeForm.last2Points < 2 ||\n  //     awayForm.last2Points >= 5 ||\n  //     match.XGdifferentialValueRaw < 0\n  //   ) {\n  //     calculation = calculation / 2;\n  //   }\n  // } else if (calculation < 0) {\n  //   if (\n  //     awayForm.lastGame === \"L\" ||\n  //     awayForm.last2Points < 2 ||\n  //     homeForm.last2Points >= 5 ||\n  //     match.XGdifferentialValueRaw > 0\n  //   ) {\n  //     calculation = calculation / 2;\n  //   }\n  // }\n  // // if (homeForm.averageOddsHome !== null || awayForm.averageOddsAway !== null) {\n  // //   if (\n  // //     calculation > 0 &&\n  // //     homeForm.averageOddsHome < match.homeOdds &&\n  // //     awayForm.averageOddsAway > match.awayOdds\n  // //   ) {\n  // //     calculation = calculation / 2;\n  // //   } else if (\n  // //     calculation > 0 &&\n  // //     homeForm.averageOddsHome > match.homeOdds &&\n  // //     awayForm.averageOddsAway < match.awayOdds\n  // //   ) {\n  // //     calculation = calculation * 1.25;\n  // //   } else {\n  // //     calculation = calculation * 1;\n  // //   }\n  // //   if (\n  // //     calculation < 0 &&\n  // //     awayForm.averageOddsAway < match.awayOdds &&\n  // //     homeForm.averageOddsHome > match.homeOdds\n  // //   ) {\n  // //     calculation = calculation / 2;\n  // //   } else if (\n  // //     calculation < 0 &&\n  // //     awayForm.averageOddsAway > match.awayOdds &&\n  // //     homeForm.averageOddsHome < match.homeOdds\n  // //   ) {\n  // //     calculation = calculation * 1.25;\n  // //   } else {\n  // //     calculation = calculation * 1;\n  // //   }\n  // // }\n  // if (\n  //   calculation > 0 &&\n  //   homeForm.improving === true &&\n  //   awayForm.improving === false\n  // ) {\n  //   console.log(homeForm);\n  //   calculation = calculation * 1.5;\n  // } else if (\n  //   calculation < 0 &&\n  //   awayForm.improving === true &&\n  //   awayForm.improving === false\n  // ) {\n  //   calculation = calculation * 1.5;\n  // } else if (\n  //   calculation > 0 &&\n  //   homeForm.improving === false &&\n  //   awayForm.improving === true\n  // ) {\n  //   calculation = calculation / 2;\n  // } else if (\n  //   calculation < 0 &&\n  //   awayForm.improving === false &&\n  //   homeForm.improving === true\n  // ) {\n  //   calculation = calculation / 2;\n  // }\n  // // if (\n  // //   (calculation < 0 && homeForm.oddsReliabilityWin < 50) ||\n  // //   (calculation < 0 && awayForm.oddsReliabilityWinAsUnderdog > 45)\n  // // ) {\n  // //   calculation = calculation / 2;\n  // // } else if (\n  // //   (calculation > 0 && awayForm.oddsReliabilityWin < 50) ||\n  // //   (calculation > 0 && homeForm.oddsReliabilityWinAsUnderdog > 45)\n  // // ) {\n  // //   calculation = calculation / 2;\n  // // }\n  // // if (calculation < 0 && homeForm.predictabilityScore < 0.3) {\n  // //   calculation = calculation / 2;\n  // // } else if (calculation > 0 && awayForm.predictabilityScore < 0.3) {\n  // //   calculation = calculation / 2;\n  // // }\n  // return calculation;\n}\n\nexport async function roundCustom(num, form, otherForm) {\n  let wholeNumber = Math.floor(num);\n  let remainder = num - wholeNumber;\n  let goals;\n\n  switch (true) {\n    case remainder >= 0.9:\n      switch (true) {\n        default:\n          goals = Math.round(num);\n          break;\n      }\n      break;\n    case remainder >= 0.8 && remainder < 0.9:\n      switch (true) {\n        case form.actualToXGDifference >= 0:\n          goals = Math.ceil(num);\n          break;\n        case form.actualToXGDifference < 0:\n          goals = Math.floor(num);\n          break;\n        default:\n          goals = Math.round(num);\n          break;\n      }\n      break;\n    case remainder >= 0.6 && remainder < 0.8:\n      switch (true) {\n        case form.actualToXGDifference >= 10:\n          goals = Math.ceil(num);\n          break;\n        case form.actualToXGDifference < 10:\n          goals = Math.floor(num);\n          break;\n        default:\n          goals = Math.round(num);\n          break;\n      }\n      break;\n    case remainder >= 0.5 && remainder < 0.6:\n      switch (true) {\n        case form.actualToXGDifference >= 20:\n          goals = Math.ceil(num);\n          break;\n        case form.actualToXGDifference < 20:\n          goals = Math.floor(num);\n          break;\n        default:\n          goals = Math.round(num);\n          break;\n      }\n      break;\n    default:\n      goals = Math.floor(num);\n      break;\n  }\n\n  return goals;\n\n  // if (remainder > 0.5) {\n  //   return Math.ceil(num);\n  // } else {\n  //   return Math.floor(num);\n  // }\n}\n\n//Calculates scores based on prior XG figures, weighted by odds\nlet i = 0;\n\nexport async function calculateScore(match, index, divider, calculate) {\n  i++;\n\n  let teams;\n\n  if (\n    calculate === true &&\n    allForm.find(\n      (game) =>\n        game.home.teamName === match.homeTeam &&\n        game.away.teamName === match.awayTeam\n    )\n  ) {\n    teams = [\n      allForm.find((game) => game.home.teamName === match.homeTeam).home,\n      allForm.find((game) => game.away.teamName === match.awayTeam).away,\n    ];\n  } else {\n    calculate = false;\n  }\n\n  let formHome;\n  let formAway;\n\n  if (calculate) {\n    for (let i = 0; i < teams.length; i++) {\n      if (teams[0][index].PlayedHome <= 1 || teams[1][index].PlayedAway <= 1) {\n        index = 2;\n        divider = 10;\n      }\n\n      teams[i][index].lastGame = teams[i][index].LastFiveForm[4];\n      teams[i][index].previousToLastGame = teams[i][index].LastFiveForm[3];\n\n      let last2 = [\n        teams[i][index].lastGame,\n        teams[i][index].previousToLastGame,\n      ];\n\n      teams[i][index].last2Points = getPointsFromLastX(last2);\n\n      teams[i][index].twoGameAverage = await getPointAverage(\n        teams[i][index].last2Points,\n        2\n      );\n      teams[i][index].threeGameAverage = await getPointAverage(\n        teams[i][index].last3Points,\n        3\n      );\n      teams[i][index].fiveGameAverage = await getPointAverage(\n        teams[i][index].last5Points,\n        5\n      );\n      teams[i][index].sixGameAverage = await getPointAverage(\n        teams[i][index].last6Points,\n        6\n      );\n      teams[i][index].tenGameAverage = await getPointAverage(\n        teams[i][index].last10Points,\n        10\n      );\n\n      if (teams[i][index].formRun) {\n        teams[i][index].lastHomeOrAwayPoints = getPointsFromLastX(\n          teams[i][index].formRun\n        );\n\n        teams[i][index].homeOrAwayAverage = await getPointAverage(\n          teams[i][index].lastHomeOrAwayPoints,\n          teams[i][index].formRun.length\n        );\n      }\n\n      teams[i][0].ScoredAverage = teams[i][0].ScoredOverall / 5;\n      teams[i][1].ScoredAverage = teams[i][1].ScoredOverall / 6;\n      teams[i][2].ScoredAverage = teams[i][2].ScoredOverall / 10;\n\n      teams[i][0].ConcededAverage = teams[i][0].ConcededOverall / 5;\n      teams[i][1].ConcededAverage = teams[i][1].ConcededOverall / 6;\n      teams[i][2].ConcededAverage = teams[i][2].ConcededOverall / 10;\n\n      if (teams[i][1].ScoredAverage === 0) {\n        teams[i][1].ScoredAverage = teams[i][index].ScoredOverall / 10;\n        teams[i][1].ScoredOverall = teams[i][2].ScoredOverall / 2;\n      }\n\n      if (teams[i][1].ConcededAverage === 0) {\n        teams[i][1].ConcededAverage = teams[i][index].ConcededOverall / 10;\n        teams[i][1].ConcededOverall = teams[i][2].ConcededOverall / 2;\n      }\n\n      teams[i][index].ScoredAverageShortTerm = teams[i][0].ScoredOverall / 5;\n      teams[i][index].ConcededAverageShortTerm =\n        teams[i][0].ConcededOverall / 5;\n\n      teams[i][index].longTermAverageGoals = teams[i][2].ScoredOverall / 10;\n      teams[i][index].longTermAverageConceeded =\n        teams[i][2].ConcededOverall / 10;\n\n      let recentGoalDiff =\n        teams[i][index].ScoredAverageShortTerm -\n        teams[i][index].ConcededAverageShortTerm;\n      let distantGoalDiff =\n        teams[i][index].longTermAverageGoals -\n        teams[i][index].longTermAverageConceeded;\n\n      let recentDA = teams[i][0].AverageDangerousAttacksOverall;\n      let distantDA = teams[i][2].AverageDangerousAttacksOverall;\n\n      let recentPosession = teams[i][0].AveragePossessionOverall;\n      let distantPosession = teams[i][2].AveragePossessionOverall;\n\n      let recentCleanSheet = teams[i][0].CleanSheetPercentage;\n      let distantCleanSheet = teams[i][2].CleanSheetPercentage;\n\n      let recentFormArray = [\n        recentGoalDiff,\n        recentDA,\n        recentPosession,\n        recentCleanSheet,\n      ];\n      let distantFormArray = [\n        distantGoalDiff,\n        distantDA,\n        distantPosession,\n        distantCleanSheet,\n      ];\n\n      teams[i][index].formTrendScore = await compareFormTrend(\n        recentFormArray,\n        distantFormArray\n      );\n\n      teams[i][index].expectedGoals = parseFloat(teams[i][index].XG);\n\n      teams[i][index].ScoredAverageShortAndLongTerm =\n        (teams[i][index].ScoredOverall / 10 +\n          teams[i][index].ScoredAverageShortTerm) /\n        2;\n\n      teams[i][index].conceededAverageShortAndLongTerm =\n        (teams[i][index].ConcededOverall / 10 +\n          teams[i][index].ConcededAverageShortTerm) /\n        2;\n\n      teams[i][index].longTermGoalDifference =\n        teams[i][2].ScoredAverage - teams[i][2].ConcededAverage;\n\n      teams[i][index].shortTermGoalDifference =\n        teams[i][0].ScoredAverage - teams[i][0].ConcededAverage;\n\n      teams[i][index].XGdifferential = await diff(\n        teams[i][index].XGOverall,\n        teams[i][index].XGAgainstAvgOverall\n      );\n\n      teams[i][index].XGdifferentialRecent = await diff(\n        teams[i][0].XGOverall,\n        teams[i][0].XGAgainstAvgOverall\n      );\n\n      teams[i][index].actualToXGDifferenceRecent = await diff(\n        teams[i][index].shortTermGoalDifference,\n        teams[i][index].XGdifferentialRecent\n      );\n    }\n\n    homeOdds = match.homeOdds;\n    awayOdds = match.awayOdds;\n\n    formHome = teams[0][index];\n    formAway = teams[1][index];\n\n    // if (\n    //   (formHome.XGOverall - formHome.XGAgainstAvgOverall) < (formHome.last5XG - formHome.XGAgainstlast5)\n    // ) {\n    //   formHome.improving = true;\n    // } else {\n    //   formHome.improving = false;\n    // }\n\n    // if (\n    //   (formAway.XGOverall - formAway.XGAgainstAvgOverall) < (formAway.last5XG - formAway.XGAgainstlast5)\n    // ) {\n    //   formAway.improving = true;\n    // } else {\n    //   formAway.improving = false;\n    // }\n\n    let homeTenGameAvg = formHome.last10Points / 10;\n    let awayTenGameAvg = formAway.last10Points / 10;\n\n    let homeTwoGameAvg = formHome.last2Points / 2;\n    let awayTwoGameAvg = formAway.last2Points / 2;\n\n    let pointsDiff10 = await getPointsDifferential(\n      homeTenGameAvg,\n      awayTenGameAvg\n    );\n\n    let pointsDiff2 = await getPointsDifferential(\n      homeTwoGameAvg,\n      awayTwoGameAvg\n    );\n\n    let [last10WeightingHome, last10WeightingAway] = await getPointWeighting(\n      pointsDiff10\n    );\n\n    let [last2WeightingHome, last2WeightingAway] = await getPointWeighting(\n      pointsDiff2\n    );\n\n    formHome.dangerousAttackConversion =\n      (formHome.ScoredAverageShortAndLongTerm /\n        formHome.AverageDangerousAttacksOverall) *\n      100;\n    formAway.dangerousAttackConversion =\n      (formAway.ScoredAverageShortAndLongTerm /\n        formAway.AverageDangerousAttacksOverall) *\n      100;\n\n    [formHome.clinicalRating, formHome.clinicalScore] = await getClinicalRating(\n      formHome\n    );\n    [formAway.clinicalRating, formAway.clinicalScore] = await getClinicalRating(\n      formAway\n    );\n\n    let XGdifferential = await diff(\n      formHome.XGdifferential,\n      formAway.XGdifferential\n    );\n\n    formHome.teamName = match.homeTeam;\n    formAway.teamName = match.awayTeam;\n\n    match.XGdifferentialValue = Math.abs(XGdifferential);\n    match.XGdifferentialValueRaw = parseFloat(XGdifferential);\n    if (\n      allLeagueResultsArrayOfObjects[match.leagueIndex].fixtures.length > 10 &&\n      match.leagueID !== 7956\n    ) {\n      [\n        formHome.predictedGoalsBasedOnHomeAv,\n        formHome.predictedGoalsBasedOnAwayAv,\n        formHome.allTeamGoalsBasedOnAverages,\n        formHome.predictedGoalsConceededBasedOnHomeAv,\n        formHome.predictedGoalsConceededBasedOnAwayAv,\n        formHome.allTeamGoalsConceededBasedOnAverages,\n        formHome.averageOddsHome,\n        formHome.averageOddsAway,\n        formHome.averageScoredLeague,\n        formHome.averageConceededLeague,\n        formHome.last10btts,\n        formHome.last10bttsHome,\n        formHome.last10bttsAway,\n        match.bttsAllPercentageHome,\n        match.bttsPercentageHomeHome,\n        match.bttsPercentageHomeAway,\n        formHome.forAndAgainstRollingAvHomeOrAway,\n        formHome.forAndAgainstRollingAv,\n      ] = await getPastLeagueResults(match.homeTeam, match, \"home\", formHome);\n\n      [\n        formAway.predictedGoalsBasedOnHomeAv,\n        formAway.predictedGoalsBasedOnAwayAv,\n        formAway.allTeamGoalsBasedOnAverages,\n        formAway.predictedGoalsConceededBasedOnHomeAv,\n        formAway.predictedGoalsConceededBasedOnAwayAv,\n        formAway.allTeamGoalsConceededBasedOnAverages,\n        formAway.averageOddsHome,\n        formAway.averageOddsAway,\n        formAway.averageScoredLeague,\n        formAway.averageConceededLeague,\n        formAway.last10btts,\n        formAway.last10bttsHome,\n        formAway.last10bttsAway,\n        match.bttsAllPercentageAway,\n        match.bttsPercentageAwayHome,\n        match.bttsPercentageAwayAway,\n        formAway.forAndAgainstRollingAvHomeOrAway,\n        formAway.forAndAgainstRollingAv,\n      ] = await getPastLeagueResults(match.awayTeam, match, \"away\", formAway);\n    } else {\n      formHome.predictedGoalsBasedOnHomeAv = formHome.ScoredAverage;\n      formHome.predictedGoalsBasedOnAwayAv = formHome.ConcededAverage;\n      formHome.allTeamGoalsBasedOnAverages = formHome.ScoredAverage;\n      formHome.forAndAgainstRollingAv = {\n        goalsFor: formHome.ScoredAverage,\n        goalsAgainst: formHome.ConcededAverage,\n      };\n      formHome.forAndAgainstRollingAvHomeOrAway = {\n        goalsFor: formHome.ScoredAverage,\n        goalsAgainst: formHome.ConcededAverage,\n      };\n      formHome.predictedGoalsConceededBasedOnHomeAv = formHome.ConcededAverage;\n      formHome.predictedGoalsConceededBasedOnAwayAv = formHome.ConcededAverage;\n      formHome.allTeamGoalsConceededBasedOnAverages = formHome.ConcededAverage;\n      formHome.averageOddsHome = null;\n      formHome.averageOddsAway = null;\n      formHome.averageScoredLeague = null;\n      formHome.averageConceededLeague = null;\n      formHome.goalDifference =\n        formHome.ScoredOverall - formHome.ConcededOverall;\n      formHome.goalDifferenceHomeOrAway =\n        formHome.ScoredOverall - formHome.ConcededOverall;\n      formHome.last10btts = null;\n      formHome.last10bttsHome = null;\n      formHome.last10bttsAway = null;\n      formHome.allTeamResults = [];\n      match.bttsAllPercentageHome = \"\";\n      match.bttsPercentageHomeHome = \"\";\n      match.bttsPercentageHomeAway = \"\";\n      formAway.predictedGoalsBasedOnHomeAv = formAway.ScoredAverage;\n      formAway.predictedGoalsBasedOnAwayAv = formAway.ConcededAverage;\n      formAway.allTeamGoalsBasedOnAverages = formAway.ScoredAverage;\n      formAway.forAndAgainstRollingAv = {\n        goalsFor: formAway.ScoredAverage,\n        goalsAgainst: formAway.ConcededAverage,\n      };\n      formAway.forAndAgainstRollingAvHomeOrAway = {\n        goalsFor: formAway.ScoredAverage,\n        goalsAgainst: formAway.ConcededAverage,\n      };\n      formAway.predictedGoalsConceededBasedOnHomeAv = formAway.ConcededAverage;\n      formAway.predictedGoalsConceededBasedOnAwayAv = formAway.ConcededAverage;\n      formAway.allTeamGoalsConceededBasedOnAverages = formAway.ConcededAverage;\n      formAway.averageOddsHome = null;\n      formAway.averageOddsAway = null;\n      formAway.averageScoredLeague = null;\n      formAway.averageConceededLeague = null;\n      formAway.goalDifference =\n        formAway.ScoredOverall - formAway.ConcededOverall;\n      formAway.goalDifferenceHomeOrAway =\n        formAway.ScoredOverall - formAway.ConcededOverall;\n\n      formAway.last10btts = null;\n      formAway.last10bttsHome = null;\n      formAway.last10bttsAway = null;\n      formAway.allTeamResults = [];\n      match.bttsAllPercentageAway = \"\";\n      match.bttsPercentageAwayHome = \"\";\n      match.bttsPercentageAwayAway = \"\";\n    }\n\n    if (\n      typeof formHome.homeTeamHomePositionRaw === \"number\" &&\n      typeof formAway.awayTeamAwayPositionRaw === \"number\"\n    ) {\n      formHome.homePositionHomeOnly = parseFloat(\n        formHome.homeTeamHomePositionRaw\n      );\n      formAway.awayPositionAwayOnly = parseFloat(\n        formAway.awayTeamAwayPositionRaw\n      );\n      formHome.homePosition = parseFloat(formHome.homeRawPosition);\n      formAway.awayPosition = parseFloat(formAway.awayRawPosition);\n    } else {\n      formHome.homePositionHomeOnly = \"N/A\";\n      formAway.awayPositionAwayOnly = \"N/A\";\n      formHome.homePosition = \"N/A\";\n      formAway.awayPosition = \"N/A\";\n    }\n\n    if (formHome.last10Goals && formAway.last10Goals !== 0) {\n      if (\n        formHome.last5Goals - formHome.last5GoalsConceeded >\n        formHome.last10Goals - formHome.last10GoalsConceeded\n      ) {\n        formHome.improving = true;\n      } else {\n        formHome.improving = false;\n      }\n\n      if (\n        formAway.last5Goals - formAway.last5GoalsConceeded >\n        formAway.last10Goals - formAway.last10GoalsConceeded\n      ) {\n        formAway.improving = true;\n      } else {\n        formAway.improving = false;\n      }\n    }\n\n    formHome.AttackingPotency = (formHome.XG / formHome.AttacksHome) * 100;\n    formAway.AttackingPotency = (formAway.XG / formAway.AttacksAverage) * 100;\n\n    let teamComparisonScore;\n\n    const attackingMetricsHome = {\n      \"Average Dangerous Attacks\": formHome.AverageDangerousAttacksOverall,\n      \"Average Shots\": formHome.AverageShots,\n      \"Average Shots On Target\": formHome.AverageShotsOnTargetOverall,\n      \"Average Expected Goals\": formHome.XGOverall,\n      \"Recent XG\": formHome.XGlast5 ? formHome.XGlast5 : formHome.XGOverall,\n      \"Average Goals\": formHome.avgScored,\n      Corners: formHome.AverageCorners,\n    };\n\n    const attackingMetricsHomeLast5 = {\n      \"Average Dangerous Attacks\": formHome.avDALast5,\n      \"Average Shots\": formHome.avShotsLast5,\n      \"Average Shots On Target\": formHome.avSOTLast5,\n      \"Average Expected Goals\": formHome.XGlast5,\n      \"Recent XG\": formHome.XGlast5,\n      \"Average Goals\": formHome.avScoredLast5,\n      Corners: formHome.avCornersLast5,\n    };\n\n    const attackingMetricsHomeOnly = {\n      \"Average Dangerous Attacks\": formHome.avgDangerousAttacksHome,\n      \"Average Shots\": formHome.avgShotsHome,\n      \"Average Shots On Target\": formHome.avgShotsOnTargetHome,\n      \"Average Expected Goals\": formHome.avgXGScoredHome,\n      \"Recent XG\": formHome.last5XGAvgForHome,\n      \"Average Goals\": formHome.avgScoredHome,\n      Corners: formHome.cornersAvHome,\n    };\n\n    const attackingMetricsAwayOnly = {\n      \"Average Dangerous Attacks\": formAway.avgDangerousAttacksAway,\n      \"Average Shots\": formAway.avgShotsAway,\n      \"Average Shots On Target\": formAway.avgShotsOnTargetAway,\n      \"Average Expected Goals\": formAway.avgXGScoredAway,\n      \"Recent XG\": formAway.last5XGAvgForAway,\n      \"Average Goals\": formAway.avgScoredAway,\n      Corners: formAway.cornersAvAway,\n    };\n\n    const attackingMetricsAway = {\n      \"Average Dangerous Attacks\": formAway.AverageDangerousAttacksOverall,\n      \"Average Shots\": formAway.AverageShots,\n      \"Average Shots On Target\": formAway.AverageShotsOnTargetOverall,\n      \"Average Expected Goals\": formAway.XGOverall,\n      \"Recent XG\": formAway.XGlast5,\n      \"Average Goals\": formAway.avgScored,\n      Corners: formAway.AverageCorners,\n    };\n\n    const attackingMetricsAwayLast5 = {\n      \"Average Dangerous Attacks\": formAway.avDALast5,\n      \"Average Shots\": formAway.avShotsLast5,\n      \"Average Shots On Target\": formAway.avSOTLast5,\n      \"Average Expected Goals\": formAway.XGlast5,\n      \"Recent XG\": formAway.XGlast5,\n      \"Average Goals\": formAway.avScoredLast5,\n      Corners: formAway.avCornersLast5,\n    };\n\n    const defensiveMetricsHome = {\n      \"Average XG Against\": formHome.XGAgainstAvgOverall,\n      \"Recent XG Against\": formHome.XGAgainstlast5\n        ? formHome.XGAgainstlast5\n        : formHome.XGAgainstAvgOverall,\n      \"Average Goals Against\": formHome.avgConceeded,\n      \"Average SOT Against\": formHome.AverageShotsOnTargetAgainstOverall,\n    };\n\n    const defensiveMetricsHomeLast5 = {\n      \"Average XG Against\": formHome.XGAgainstlast5,\n      \"Recent XG Against\": formHome.avXGAgainstLast5,\n      \"Average Goals Against\": formHome.avConceededLast5,\n      \"Average SOT Against\": formHome.avSOTAgainstLast5,\n    };\n\n    const defensiveMetricsAway = {\n      \"Average XG Against\": formAway.XGAgainstAvgOverall,\n      \"Recent XG Against\": formAway.XGAgainstlast5\n        ? formAway.XGAgainstlast5\n        : formAway.XGAgainstAvgOverall,\n      \"Average Goals Against\": formAway.avgConceeded,\n      \"Average SOT Against\": formAway.AverageShotsOnTargetAgainstOverall,\n    };\n\n    const defensiveMetricsAwayLast5 = {\n      \"Average XG Against\": formAway.avXGAgainstLast5,\n      \"Recent XG Against\": formAway.XGAgainstlast5,\n      \"Average Goals Against\": formAway.avConceededLast5,\n      \"Average SOT Against\": formAway.avSOTAgainstLast5,\n    };\n\n    const defensiveMetricsHomeOnly = {\n      \"Average XG Against\": formHome.avgXGConceededHome,\n      \"Recent XG Against\": formHome.last5XGAvgAgainstHome,\n      \"Average Goals Against\": formHome.teamConceededAvgHomeOnly,\n      \"Average SOT Against\": formHome.avgShotsOnTargetAgainstHome,\n    };\n\n    const defensiveMetricsAwayOnly = {\n      \"Average XG Against\": formAway.avgXGConceededAway,\n      \"Recent XG Against\": formAway.last5XGAvgAgainstAway,\n      \"Average Goals Against\": formAway.teamConceededAvgAwayOnly,\n      \"Average SOT Against\": formAway.avgShotsOnTargetAgainstAway,\n    };\n\n    formHome.attackingMetrics = attackingMetricsHome;\n    formHome.defensiveMetrics = defensiveMetricsHome;\n    formAway.attackingMetrics = attackingMetricsAway;\n    formAway.defensiveMetrics = defensiveMetricsAway;\n\n    formHome.attackingStrength = await calculateAttackingStrength(\n      attackingMetricsHome\n    );\n\n    formHome.attackingStrengthScoreGeneration =\n      await calculateAttackingStrength(attackingMetricsHome);\n\n    formHome.attackingStrengthLast5 = await calculateAttackingStrength(\n      attackingMetricsHomeLast5\n    );\n\n    formHome.attackingStrengthHomeOnly = await calculateAttackingStrength(\n      attackingMetricsHomeOnly\n    );\n\n    formAway.attackingStrength = await calculateAttackingStrength(\n      attackingMetricsAway\n    );\n\n    formAway.attackingStrengthLast5 = await calculateAttackingStrength(\n      attackingMetricsAwayLast5\n    );\n\n    formAway.attackingStrengthAwayOnly = await calculateAttackingStrength(\n      attackingMetricsAwayOnly\n    );\n\n    formHome.defensiveStrength = await calculateDefensiveStrength(\n      defensiveMetricsHome\n    );\n\n    formHome.defensiveStrengthScoreGeneration =\n      await calculateDefensiveStrength(defensiveMetricsHome, 1);\n\n    formHome.defensiveStrengthLast5 = await calculateDefensiveStrength(\n      defensiveMetricsHomeLast5\n    );\n\n    formHome.defensiveStrengthScoreGenerationLast5 =\n      await calculateDefensiveStrength(defensiveMetricsHomeLast5, 1);\n\n    formHome.defensiveStrengthHomeOnly = await calculateDefensiveStrength(\n      defensiveMetricsHomeOnly\n    );\n\n    formHome.defensiveStrengthScoreGenerationHomeOnly =\n      await calculateDefensiveStrength(defensiveMetricsHomeOnly, 1);\n\n    formAway.defensiveStrength = await calculateDefensiveStrength(\n      defensiveMetricsAway\n    );\n\n    formAway.defensiveStrengthScoreGeneration =\n      await calculateDefensiveStrength(defensiveMetricsAway, 1);\n\n    formAway.defensiveStrengthLast5 = await calculateDefensiveStrength(\n      defensiveMetricsAwayLast5\n    );\n\n    formAway.defensiveStrengthScoreGenerationLast5 =\n      await calculateDefensiveStrength(defensiveMetricsAwayLast5, 1);\n\n    formAway.defensiveStrengthAwayOnly = await calculateDefensiveStrength(\n      defensiveMetricsAwayOnly\n    );\n\n    formAway.defensiveStrengthScoreGenerationAwayOnly =\n      await calculateDefensiveStrength(defensiveMetricsAwayOnly, 1);\n\n    formHome.possessionStrength = await calculateMetricStrength(\n      \"averagePossession\",\n      formHome.AveragePossessionOverall\n    );\n\n    formHome.possessionStrengthLast5 = await calculateMetricStrength(\n      \"averagePossession\",\n      formHome.avPosessionLast5\n    );\n\n    formAway.possessionStrengthLast5 = await calculateMetricStrength(\n      \"averagePossession\",\n      formAway.avPosessionLast5\n    );\n\n    formHome.possessionStrengthHomeOnly = await calculateMetricStrength(\n      \"averagePossession\",\n      formHome.avgPossessionHome\n    );\n\n    formHome.directnessOverall =\n      (formHome.AverageShots / formHome.AveragePossessionOverall) * 10;\n\n    formHome.directnessOverallLast5 =\n      (formHome.avShotsLast5 / formHome.avPosessionLast5) * 10;\n\n    formAway.directnessOverallLast5 =\n      (formAway.avShotsLast5 / formAway.avPosessionLast5) * 10;\n\n    formHome.directnessHomeOnly =\n      (formHome.avgShotsHome / formHome.avgPossessionHome) * 10;\n\n    formAway.directnessOverall =\n      (formAway.AverageShots / formAway.AveragePossessionOverall) * 10;\n\n    formAway.directnessAwayOnly =\n      (formAway.avgShotsAway / formAway.avgPossessionAway) * 10;\n\n    formHome.directnessOverallStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formHome.directnessOverall\n    );\n\n    formHome.directnessOverallStrengthLast5 = await calculateMetricStrength(\n      \"directnessOverall\",\n      formHome.directnessOverallLast5\n    );\n\n    formHome.directnessHomeStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formHome.directnessHomeOnly\n    );\n\n    formAway.directnessOverallStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formAway.directnessOverall\n    );\n\n    formAway.directnessOverallStrengthLast5 = await calculateMetricStrength(\n      \"directnessOverall\",\n      formAway.directnessOverallLast5\n    );\n\n    formAway.directnessAwayStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formAway.directnessAwayOnly\n    );\n\n    formHome.shootingAccuracy =\n      (formHome.AverageShotsOnTargetOverall / formHome.avgShots) *\n      formHome.AverageShotsOnTargetOverall;\n\n    formHome.shootingAccuracyLast5 =\n      (formHome.avSOTLast5 / formHome.avShotsLast5) * formHome.avSOTLast5;\n\n    formAway.shootingAccuracyLast5 =\n      (formAway.avSOTLast5 / formAway.avShotsLast5) * formAway.avSOTLast5;\n\n    formHome.shootingAccuracyHomeOnly =\n      (formHome.avgShotsOnTargetHome / formHome.avgShotsHome) *\n      formHome.avgShotsOnTargetHome;\n\n    formAway.shootingAccuracy =\n      (formAway.AverageShotsOnTargetOverall / formAway.avgShots) *\n      formAway.AverageShotsOnTargetOverall;\n\n    formAway.shootingAccuracyAwayOnly =\n      (formAway.avgShotsOnTargetAway / formAway.avgShotsAway) *\n      formAway.avgShotsOnTargetAway;\n\n    formHome.accuracyOverallStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formHome.shootingAccuracy\n    );\n\n    formHome.accuracyOverallStrengthLast5 = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formHome.shootingAccuracyLast5\n    );\n\n    formHome.accuracyHomeStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formHome.shootingAccuracyHomeOnly\n    );\n\n    formAway.accuracyOverallStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formAway.shootingAccuracy\n    );\n\n    formAway.accuracyOverallStrengthLast5 = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formAway.shootingAccuracyLast5\n    );\n\n    formAway.accuracyAwayStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formAway.shootingAccuracyAwayOnly\n    );\n\n    formHome.xgForStrength = await calculateMetricStrength(\n      \"xgFor\",\n      formHome.XGOverall\n    );\n\n    formHome.xgForStrengthLast5 = await calculateMetricStrength(\n      \"xgFor\",\n      formHome.XGlast5\n    );\n\n    formHome.xgForStrengthHomeOnly = await calculateMetricStrength(\n      \"xgFor\",\n      formHome.avgXGScoredHome\n    );\n\n    formHome.xgAgainstStrength = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formHome.XGAgainstAvgOverall\n    );\n\n    formHome.xgAgainstStrengthLast5 = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formHome.XGAgainstlast5\n    );\n\n    formHome.xgAgainstStrengthHomeOnly = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formHome.avgXGConceededHome\n    );\n\n    formAway.possessionStrength = await calculateMetricStrength(\n      \"averagePossession\",\n      formAway.AveragePossessionOverall\n    );\n\n    formAway.possessionStrengthAwayOnly = await calculateMetricStrength(\n      \"averagePossession\",\n      formAway.avgPossessionAway\n    );\n\n    formAway.xgForStrength = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.XGOverall\n    );\n\n    formAway.xgForStrengthLast5 = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.last5XGAvgFor\n    );\n\n    formAway.xgForStrengthLast5 = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.XGlast5\n    );\n\n    formAway.xgForStrengthAwayOnly = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.avgXGScoredAway\n    );\n\n    formAway.xgAgainstStrength = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formAway.XGAgainstAvgOverall\n    );\n\n    formAway.xgAgainstStrengthLast5 = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formAway.XGAgainstlast5\n    );\n\n    formAway.xgAgainstStrengthAwayOnly = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formAway.avgXGConceededAway\n    );\n\n    formHome.actualToXGDifference = parseInt(\n      await diff(formHome.XGDiffNonAverage, formHome.goalDifference)\n    );\n\n    formAway.actualToXGDifference = parseInt(\n      await diff(formAway.XGDiffNonAverage, formAway.goalDifference)\n    );\n\n    // teamComparisonScore = await compareTeams(formHome, formAway, match);\n\n    [formHome.teamGoalsCalc, formAway.teamGoalsCalc] = await generateGoals(\n      formHome,\n      formAway,\n      match\n    );\n\n    console.log(formHome.teamGoalsCalc);\n    console.log(formAway.teamGoalsCalc);\n\n    // teamComparisonScore = teamComparisonScore * 0.3;\n    // LEAVE\n\n    // if (teamComparisonScore > 0.45) {\n    //   teamComparisonScore = 0.45;\n    // } else if (teamComparisonScore < -0.45) {\n    //   teamComparisonScore = -0.45;\n    // }\n\n    // if (teamComparisonScore < 0) {\n    //   formHome.teamStrengthWeighting = 1 + teamComparisonScore / 1;\n    //   formAway.teamStrengthWeighting = 1 - teamComparisonScore / 1;\n    // } else if (teamComparisonScore >= 0) {\n    //   formHome.teamStrengthWeighting = 1 + teamComparisonScore / 1;\n    //   formAway.teamStrengthWeighting = 1 - teamComparisonScore / 1;\n    // }\n\n    // teamComparisonScore = 0;\n\n    // match.teamComparisonScore = teamComparisonScore.toFixed(2);\n    // match.goalWeighting = 1 + parseFloat(match.teamComparisonScore)\n\n    let team1Metrics = {\n      weighting: formHome.teamGoalsCalc,\n      // Add other relevant metrics here\n    };\n\n    let team2Metrics = {\n      weighting: formAway.teamGoalsCalc,\n      // Add other relevant metrics here\n    };\n\n    // pass arrays of league goals and conceeded\n    let scorePredictions;\n    let scorePredictionsHA;\n    let scorePredictionsRecent;\n\n    if (\n      formHome.allConceededArrayHome !== undefined &&\n      formAway.allConceededArrayAway !== undefined\n    ) {\n      scorePredictionsRecent = await predictScore(\n        formHome.allGoalsArrayHomeRecent,\n        formHome.allConceededArrayHomeRecent,\n        formAway.allGoalsArrayAwayRecent,\n        formAway.allConceededArrayAwayRecent,\n        team1Metrics,\n        team2Metrics,\n        match.game\n      );\n      scorePredictionsHA = await predictScore(\n        formHome.allGoalsArrayHomeOnly,\n        formHome.allConceededArrayHomeOnly,\n        formAway.allGoalsArrayAwayOnly,\n        formAway.allConceededArrayAwayOnly,\n        team1Metrics,\n        team2Metrics,\n        match.game\n      );\n      scorePredictions = await predictScore(\n        formHome.allGoalsArrayHome,\n        formHome.allConceededArrayHome,\n        formAway.allGoalsArrayAway,\n        formAway.allConceededArrayAway,\n        team1Metrics,\n        team2Metrics,\n        match.game\n      );\n    }\n\n    let finalHomeGoals;\n    let finalAwayGoals;\n\n    const homeGoalDiff =\n      formHome.ScoredAverageShortAndLongTerm -\n      formHome.conceededAverageShortAndLongTerm;\n    const awayGoalDiff =\n      formAway.ScoredAverageShortAndLongTerm -\n      formAway.conceededAverageShortAndLongTerm;\n\n    formHome.goalsDifferential =\n      parseFloat(await diff(homeGoalDiff, awayGoalDiff)) / 1;\n    formAway.goalsDifferential =\n      parseFloat(await diff(awayGoalDiff, homeGoalDiff)) / 1;\n\n    formHome.rollingAverageGoalsDifferential = parseFloat(\n      formHome.allTeamGoalsBasedOnAverages -\n        formHome.allTeamGoalsConceededBasedOnAverages\n    );\n    formAway.rollingAverageGoalsDifferential = parseFloat(\n      formAway.allTeamGoalsBasedOnAverages -\n        formAway.allTeamGoalsConceededBasedOnAverages\n    );\n\n    match.GoalsInGamesAverageHome =\n      formHome.avScoredLast5 + formHome.avConceededLast5;\n\n    match.GoalsInGamesAverageAway =\n      formAway.avScoredLast5 + formAway.avConceededLast5;\n\n    let factorOneHome;\n    let factorOneAway;\n\n    factorOneHome =\n      // homeLeagueOrAllFormAverageGoals * 1 +\n      // formHome.last5Goals * 0.5 +\n      // formAway.last5GoalsConceeded * 0.5 +\n      (formHome.forAndAgainstRollingAvHomeOrAway.goalsFor * 1 +\n        formAway.forAndAgainstRollingAvHomeOrAway.goalsAgainst * 1 +\n        formHome.forAndAgainstRollingAv.goalsFor * 1 +\n        formAway.forAndAgainstRollingAv.goalsAgainst * 1 +\n        formHome.allTeamGoalsBasedOnAverages * 0 +\n        formAway.allTeamGoalsConceededBasedOnAverages * 0 +\n        formHome.XGOverall * 1 +\n        formAway.XGAgainstAvgOverall * 1 +\n        last10WeightingHome * 0 +\n        last2WeightingHome * 0) /\n      6;\n\n    factorOneAway =\n      // awayLeagueOrAllFormAverageGoals * 1 +\n      // formAway.last5Goals * 0.5 +\n      // formHome.last5GoalsConceeded * 0.5 +\n      (formAway.forAndAgainstRollingAvHomeOrAway.goalsFor * 1 +\n        formHome.forAndAgainstRollingAvHomeOrAway.goalsAgainst * 1 +\n        formAway.forAndAgainstRollingAv.goalsFor * 1 +\n        formHome.forAndAgainstRollingAv.goalsAgainst * 1 +\n        formAway.allTeamGoalsBasedOnAverages * 0 +\n        formHome.allTeamGoalsConceededBasedOnAverages * 0 +\n        formAway.XGOverall * 1 +\n        formHome.XGAgainstAvgOverall * 1 +\n        last10WeightingAway * 0 +\n        last2WeightingAway * 0) /\n      6;\n\n    let factorTwoHome;\n    let factorTwoAway;\n\n    if (\n      scorePredictions !== undefined &&\n      scorePredictions[0].probability !== 1\n    ) {\n      factorTwoHome =\n        (scorePredictions[0].team1Score +\n          scorePredictionsRecent[0].team1Score +\n          scorePredictionsHA[0].team1Score * 0.5) /\n        2.5;\n      factorTwoAway =\n        (scorePredictions[0].team2Score +\n          scorePredictionsRecent[0].team2Score +\n          scorePredictionsHA[0].team2Score * 0.5) /\n        2.5;\n    } else {\n      factorTwoHome = factorOneHome;\n      factorTwoAway = factorOneAway;\n    }\n\n    let homeComparisonWeighting;\n    let awayComparisonWeighting;\n    match.scoreDiff = await diff(factorOneHome, factorOneAway);\n\n    if (teamComparisonScore > 0) {\n      homeComparisonWeighting = 1 + Math.abs(teamComparisonScore);\n      awayComparisonWeighting = 1 + -Math.abs(teamComparisonScore);\n    } else if (teamComparisonScore < 0) {\n      homeComparisonWeighting = 1 + -Math.abs(teamComparisonScore);\n      awayComparisonWeighting = 1 + Math.abs(teamComparisonScore);\n    } else {\n      homeComparisonWeighting = 1;\n      awayComparisonWeighting = 1;\n    }\n\n    console.log(match.game);\n    console.log(match.simlarGameResultsHome);\n    console.log(match.simlarGameResultsAway);\n\n    // let experimentalHomeGoals = factorOneHome + formHome.teamGoalsCalc;\n    let experimentalHomeGoals = factorTwoHome + formHome.teamGoalsCalc;\n\n    // (factorOneHome * homeComparisonWeighting +\n    //   (formHome.teamGoalsCalc * 2) +\n    //   factorTwoHome) /\n    // 4;\n    // (formHome.forAndAgainstRollingAvHomeOrAway.goalsFor + formAway.forAndAgainstRollingAvHomeOrAway.goalsAgainst) / 2\n\n    // let experimentalAwayGoals = factorOneAway + formAway.teamGoalsCalc;\n    let experimentalAwayGoals = factorTwoAway + formAway.teamGoalsCalc;\n\n    // (factorOneAway * awayComparisonWeighting +\n    //   (formAway.teamGoalsCalc * 2) +\n    //   factorTwoAway) /\n    // 4;\n    // (formAway.forAndAgainstRollingAvHomeOrAway.goalsFor + formHome.forAndAgainstRollingAvHomeOrAway.goalsAgainst) / 2\n\n    let rawFinalHomeGoals = experimentalHomeGoals;\n    let rawFinalAwayGoals = experimentalAwayGoals;\n\n    // if(rawFinalHomeGoals < 0){\n    //   rawFinalHomeGoals = 0\n    // }\n\n    // if(rawFinalAwayGoals < 0){\n    //   rawFinalAwayGoals = 0\n    // }\n\n    match.rawFinalHomeGoals = rawFinalHomeGoals;\n    match.rawFinalAwayGoals = rawFinalAwayGoals;\n\n    // if (rawFinalHomeGoals < 1 && rawFinalHomeGoals > 0 && rawFinalAwayGoals < 1 && rawFinalAwayGoals > 0) {\n    //   if (\n    //     formHome.CleanSheetPercentage < 45 &&\n    //     formAway.CleanSheetPercentage < 45\n    //   ) {\n    //     finalHomeGoals = Math.ceil(rawFinalHomeGoals);\n    //     finalAwayGoals = Math.ceil(rawFinalAwayGoals);\n    //   } else {\n    //     finalHomeGoals = Math.floor(rawFinalHomeGoals);\n    //     finalAwayGoals = Math.floor(rawFinalAwayGoals);\n    //   }\n    // }\n    // else if (rawFinalHomeGoals < 0 && rawFinalAwayGoals < 0) {\n    //   if (\n    //     formHome.CleanSheetPercentage < 45 &&\n    //     formAway.CleanSheetPercentage < 45\n    //   ) {\n    //     finalHomeGoals = 1;\n    //     finalAwayGoals = 1;\n    //   } else {\n    //     finalHomeGoals = Math.floor(rawFinalHomeGoals);\n    //     finalAwayGoals = Math.floor(rawFinalAwayGoals);\n    //   }\n    // }\n    // else {\n    //   finalHomeGoals = Math.floor(rawFinalHomeGoals);\n    //   finalAwayGoals = Math.floor(rawFinalAwayGoals);\n    // }\n\n    if (rawFinalHomeGoals < 0) {\n      rawFinalHomeGoals = 0;\n    }\n\n    if (rawFinalAwayGoals < 0) {\n      rawFinalAwayGoals = 0;\n    }\n\n    finalHomeGoals = Math.floor(rawFinalHomeGoals);\n    finalAwayGoals = Math.floor(rawFinalAwayGoals);\n\n    // if (finalHomeGoals > formHome.avgScored + 2) {\n    //   finalHomeGoals = Math.round((finalHomeGoals + formHome.avgScored) / 2);\n    // }\n\n    // if (finalAwayGoals > formAway.avgScored + 2) {\n    //   finalAwayGoals = Math.round((finalAwayGoals + formAway.avgScored) / 2);\n    // }\n\n    // if (finalAwayGoals < 0) {\n    //   let difference = Math.abs(\n    //     parseFloat((await diff(0, finalAwayGoals)) / 2)\n    //   );\n    //   rawFinalHomeGoals = rawFinalHomeGoals + difference;\n    //   finalAwayGoals = 0;\n    // }\n\n    // if (finalHomeGoals < 0) {\n    //   let difference = Math.abs(\n    //     parseFloat((await diff(0, finalHomeGoals)) / 2)\n    //   );\n    //   rawFinalAwayGoals = rawFinalAwayGoals + difference;\n    //   finalHomeGoals = 0;\n    // }\n\n    console.log(match.omit);\n\n    if (match.status !== \"suspended\") {\n      if (finalHomeGoals > finalAwayGoals) {\n        match.prediction = \"homeWin\";\n        homePredictions = homePredictions + 1;\n        if (\n          formHome.lastGame === \"L\" ||\n          formHome.last2Points < 3 ||\n          formAway.last2Points > 4 ||\n          formHome.oddsReliabilityWin < 50\n        ) {\n          match.includeInMultis = false;\n        } else {\n          match.includeInMultis = true;\n        }\n      } else if (finalAwayGoals > finalHomeGoals) {\n        match.prediction = \"awayWin\";\n        awayPredictions = awayPredictions + 1;\n        if (\n          formAway.lastGame === \"L\" ||\n          formAway.last2Points < 3 ||\n          formHome.last2Points > 4 ||\n          formAway.oddsReliabilityWin < 50\n        ) {\n          match.includeInMultis = false;\n        } else {\n          match.includeInMultis = true;\n        }\n      } else if (finalHomeGoals === finalAwayGoals) {\n        match.prediction = \"draw\";\n        drawPredictions = drawPredictions + 1;\n      }\n    }\n\n    console.log(match.game);\n    console.log(finalHomeGoals);\n    console.log(finalAwayGoals);\n    console.log(match.prediction);\n    console.log(match.outcome);\n\n    console.log(`drawPredictions: ${drawPredictions}`);\n\n    if (\n      (XGdifferential > 1 && match.prediction === \"homeWin\") ||\n      (XGdifferential < -1.6 && match.prediction === \"awayWin\")\n    ) {\n      match.XGdifferential = true;\n    } else {\n      match.XGdifferential = false;\n    }\n\n    if (\n      (pointsDiff10 > 1.2 && match.prediction === \"homeWin\") ||\n      (pointsDiff10 < -1.2 && match.prediction === \"awayWin\")\n    ) {\n      match.pointsDifferential = true;\n      match.pointsDifferentialValue = Math.abs(pointsDiff10);\n      match.pointsDifferentialValueRaw = parseFloat(pointsDiff10);\n    } else {\n      match.pointsDiff10 = false;\n      match.pointsDifferentialValue = Math.abs(pointsDiff10);\n      match.pointsDifferentialValueRaw = parseFloat(pointsDiff10);\n    }\n\n    let rollingGoalDiffDifferential = await diff(\n      formHome.rollingAverageGoalsDifferential,\n      formAway.rollingAverageGoalsDifferential\n    );\n\n    if (\n      (rollingGoalDiffDifferential > 1.5 && match.prediction === \"homeWin\") ||\n      (rollingGoalDiffDifferential < -1.5 && match.prediction === \"awayWin\")\n    ) {\n      match.rollingGoalDiff = true;\n      match.rollingGoalDiffValue = rollingGoalDiffDifferential;\n    } else {\n      match.rollingGoalDiff = false;\n      match.rollingGoalDiffValue = rollingGoalDiffDifferential;\n    }\n\n    let dangerousAttacksDifferential = await diff(\n      formHome.AverageDangerousAttacksOverall,\n      formAway.AverageDangerousAttacksOverall\n    );\n\n    if (\n      (dangerousAttacksDifferential > 20 && match.prediction === \"homeWin\") ||\n      (dangerousAttacksDifferential < -20 && match.prediction === \"awayWin\")\n    ) {\n      match.dangerousAttacksDiff = true;\n      match.dangerousAttacksDiffValue = dangerousAttacksDifferential;\n    } else {\n      match.dangerousAttacksDiff = false;\n      match.dangerousAttacksDiffValue = dangerousAttacksDifferential;\n    }\n\n    switch (true) {\n      case match.status !== \"complete\":\n        break;\n      case match.homeGoals > match.awayGoals:\n        match.winner = match.homeTeam;\n        match.outcome = \"homeWin\";\n        homeOutcomes = homeOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formHome.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formAway.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formHome.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formAway.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formHome.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formAway.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formHome.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formAway.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += homeOdds;\n        sumOddsLoss = sumOddsLoss += awayOdds;\n        sumXGForWin = sumXGForWin += formHome.XGOverall;\n        sumXGForLoss = sumXGForLoss += formAway.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formHome.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formAway.XGAgainstAvgOverall;\n        break;\n      case match.homeGoals === match.awayGoals:\n        match.winner = \"draw\";\n        match.outcome = \"draw\";\n        allOutcomes = allOutcomes + 1;\n        allDrawOutcomes = allDrawOutcomes + 1;\n        break;\n      case match.homeGoals < match.awayGoals:\n        match.winner = match.awayTeam;\n        match.outcome = \"awayWin\";\n        allOutcomes = allOutcomes + 1;\n        awayOutcomes = awayOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formAway.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formHome.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formAway.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formHome.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formAway.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formHome.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formAway.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formHome.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += awayOdds;\n        sumOddsLoss = sumOddsLoss += homeOdds;\n        sumXGForWin = sumXGForWin += formAway.XGOverall;\n        sumXGForLoss = sumXGForLoss += formHome.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formAway.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formHome.XGAgainstAvgOverall;\n        break;\n      default:\n        break;\n    }\n\n    console.log(`allDrawOutcomes: ${allDrawOutcomes}`);\n\n    if (match.status === \"complete\") {\n      if (match.prediction === match.outcome) {\n        match.predictionOutcome = \"Won\";\n        winAmount = winAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      } else if (match.prediction !== match.outcome) {\n        match.predictionOutcome = \"Lost\";\n        lossAmount = lossAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      }\n    }\n\n    if (match.status === \"complete\") {\n      if (match.homeGoals + match.awayGoals > 2) {\n        match.over25PredictionOutcome = \"Won\";\n      } else {\n        match.over25PredictionOutcome = \"Lost\";\n      }\n    }\n\n    if (\n      match.status === \"complete\" &&\n      match.homeGoals > 0 &&\n      match.awayGoals > 0\n    ) {\n      match.bttsOutcome = \"bttsWon\";\n    } else {\n      match.bttsOutcome = \"bttsLost\";\n    }\n\n    match.formHome = formHome;\n    match.formAway = formAway;\n\n    // formObjectHome = formHome;\n    // formObjectAway = formAway;\n\n    // console.log(formObjectHome)\n    // console.log(formObjectAway)\n\n    let total = parseInt(finalHomeGoals + finalAwayGoals);\n    totalGoals = totalGoals + total;\n\n    let total2 = parseInt(match.homeGoals + match.awayGoals);\n    totalGoals2 = totalGoals2 + total2;\n\n    numberOfGames = numberOfGames + 1;\n\n    if (finalHomeGoals < 0) {\n      finalHomeGoals = 0;\n    }\n\n    if (finalAwayGoals < 0) {\n      finalAwayGoals = 0;\n    }\n\n    if (match.status === \"suspended\") {\n      finalHomeGoals = \"P\";\n      finalAwayGoals = \"P\";\n    }\n\n    if (\n      finalHomeGoals > finalAwayGoals &&\n      (match.homeOdds < rangeValue[0] || match.homeOdds > rangeValue[1])\n    ) {\n      match.omit = true;\n    } else if (\n      finalAwayGoals > finalHomeGoals &&\n      (match.awayOdds < rangeValue[0] || match.awayOdds > rangeValue[1])\n    ) {\n      match.omit = true;\n    } else if (\n      finalHomeGoals === finalAwayGoals &&\n      (match.drawOdds < rangeValue[0] || match.drawOdds > rangeValue[1])\n    ) {\n      match.omit = true;\n    }\n\n    const last10PointDiffHomePerspective = Math.abs(\n      formHome.last10Points - formAway.last10Points\n    );\n\n    const last10PointDiffAwayPerspective = Math.abs(\n      formAway.last10Points - formHome.last10Points\n    );\n\n    const XGDiffBetweenTeamsHomePerspective = Math.abs(\n      formHome.XGDiffNonAverage - formAway.XGDiffNonAverage\n    );\n    const XGDiffBetweenTeamsAwayPerspective = Math.abs(\n      formAway.XGDiffNonAverage - formHome.XGDiffNonAverage\n    );\n\n    match.goalDiffHomeOrAwayComparison =\n      parseFloat(formHome.goalDifferenceHomeOrAway) -\n      parseFloat(formAway.goalDifferenceHomeOrAway);\n\n    match.goalDifferenceComparison =\n      parseFloat(formHome.goalDifference) - parseFloat(formAway.goalDifference);\n\n    switch (true) {\n      case finalHomeGoals > finalAwayGoals:\n        if (minimumXG !== 0 && XGDiffBetweenTeamsHomePerspective < minimumXG) {\n          match.omit = true;\n        }\n        if (\n          minimumLast10 !== 0 &&\n          last10PointDiffHomePerspective < minimumLast10\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGDHorA !== 0 &&\n          match.goalDiffHomeOrAwayComparison < minimumGDHorA\n        ) {\n          match.omit = true;\n        }\n        if (minimumGD !== 0 && match.goalDifferenceComparison < minimumGD) {\n          match.omit = true;\n        }\n        break;\n      case finalHomeGoals < finalAwayGoals:\n        if (minimumXG !== 0 && XGDiffBetweenTeamsAwayPerspective < minimumXG) {\n          match.omit = true;\n        }\n        if (\n          minimumLast10 !== 0 &&\n          last10PointDiffAwayPerspective < minimumLast10\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGDHorA !== 0 &&\n          Math.abs(match.goalDiffHomeOrAwayComparison) < minimumGDHorA\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGD !== 0 &&\n          Math.abs(match.goalDifferenceComparison) < minimumGD\n        ) {\n          match.omit = true;\n        }\n        break;\n      case finalHomeGoals === finalAwayGoals:\n        if (\n          minimumXG !== 0 &&\n          Math.abs(XGDiffBetweenTeamsHomePerspective) < minimumXG\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumLast10 !== 0 &&\n          last10PointDiffHomePerspective < minimumLast10\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGDHorA !== 0 &&\n          Math.abs(match.goalDiffHomeOrAwayComparison) < minimumGDHorA\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGD !== 0 &&\n          Math.abs(match.goalDifferenceComparison) < minimumGD\n        ) {\n          match.omit = true;\n        }\n        break;\n      default:\n        break;\n    }\n\n    if (\n      match.game_week < 5\n      // match.omit === true\n      // match.game_week < 3 &&\n    ) {\n      finalHomeGoals = \"-\";\n      finalAwayGoals = \"-\";\n      match.status = \"notEnoughData\";\n    }\n\n    return [\n      finalHomeGoals,\n      finalAwayGoals,\n      rawFinalHomeGoals,\n      rawFinalAwayGoals,\n    ];\n  } else {\n    finalHomeGoals = \"\";\n    finalAwayGoals = \"\";\n    rawFinalHomeGoals = \"\";\n    rawFinalAwayGoals = \"\";\n    match.status = \"notEnoughData\";\n    match.profit = 0;\n  }\n\n  return [finalHomeGoals, finalAwayGoals, rawFinalHomeGoals, rawFinalAwayGoals];\n}\n\nasync function getSuccessMeasure(fixtures) {\n  let sumProfit = 0;\n  let investment = 0;\n  let exactScores = 0;\n  let successCount = 0;\n  let profit = 0;\n  let netProfit = 0;\n\n  // await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}tips/${dateStamp}`, {\n  //   method: \"PUT\",\n  //   headers: {\n  //     Accept: \"application/json\",\n  //     \"Content-Type\": \"application/json\",\n  //   },\n  //   body: JSON.stringify(matches)\n  // })\n\n  for (let i = 0; i < fixtures.length; i++) {\n    if (\n      fixtures[i].status === \"complete\" &&\n      fixtures[i].hasOwnProperty(\"prediction\") &&\n      fixtures[i].omit !== true\n    ) {\n      sumProfit = sumProfit + fixtures[i].profit;\n      investment = investment + 1;\n      netProfit = (sumProfit - investment).toFixed(2);\n      profit = parseFloat(netProfit);\n      if (fixtures[i].exactScore === true) {\n        exactScores = exactScores + 1;\n      }\n      if (fixtures[i].predictionOutcome === \"Won\") {\n        successCount = successCount + 1;\n      }\n    }\n  }\n\n  totalInvestment = totalInvestment + investment;\n  totalProfit = totalProfit + profit;\n  let ROI = (profit / investment) * 100;\n  totalROI = (totalProfit / totalInvestment) * 100;\n  console.log(`Total Profit : ${totalProfit}`);\n  console.log(`Total Investment : ${totalInvestment}`);\n  console.log(`Total ROI : ${totalROI}`);\n  var operand = ROI >= 0 ? \"+\" : \"\";\n  var operandTwo = totalROI >= 0 ? \"+\" : \"\";\n  let exactScoreHitRate = ((exactScores / investment) * 100).toFixed(1);\n  let successRate = ((successCount / investment) * 100).toFixed(1);\n\n  if (investment > 0) {\n    ReactDOM.render(\n      <Fragment>\n        <Div\n          className={\"SuccessMeasure\"}\n          text={`ROI for \n            all ${investment} W/D/W \n            outcomes: ${operand} ${ROI.toFixed(2)}%`}\n        />\n        <p>{`Correct W/D/W predictions: ${successCount} (${successRate}%)`}</p>\n        <p>{`Exact scores predicted: ${exactScores} (${exactScoreHitRate}%)`}</p>\n        <Div\n          className={\"SuccessMeasure\"}\n          text={`Cumalative ROI for \n            all ${totalInvestment} match outcomes: ${operandTwo} ${totalROI.toFixed(\n            2\n          )}%`}\n        />\n      </Fragment>,\n      document.getElementById(\"successMeasure2\")\n    );\n  } else {\n    return;\n  }\n}\n\nexport var tips = [];\nexport var allTips = [];\nlet allTipsSorted = [];\nvar newArray = [];\nvar bestBets = [];\nvar price;\nvar Over25Tips = [];\nvar XGDiffTips = [];\nvar rollingDiffTips = [];\nvar dangerousAttacksDiffTips = [];\nvar pointsDiffTips = [];\nvar combinations;\nvar exoticArray = [];\nvar gamesInExotic;\nvar minimumExotic;\nvar exoticStake;\nvar exoticString;\nvar bttsArray = [];\nvar accumulatedOdds = 1;\nlet predictions = [];\n\nexport async function getNewTips(array) {\n  // allTips = [];\n  newArray = [];\n  accumulatedOdds = 1;\n\n  if (array.length > 1 && incrementValue > 0) {\n    array.forEach((tip) => {\n      if (\n        array.indexOf(tip) < incrementValue\n        // tip.goalDifferential >= incrementValue && tip.comparisonScore > 0\n      ) {\n        newArray.push(tip);\n        accumulatedOdds = parseFloat(accumulatedOdds) * parseFloat(tip.rawOdds);\n      }\n    });\n  }\n  await renderTips(newArray);\n}\n\nexport async function getScorePrediction(day, mocked) {\n  let mock = mocked;\n  clicked = true;\n  tips = [];\n  bestBets = [];\n  // price = 0\n  bttsArray = [];\n  Over25Tips = [];\n  XGDiffTips = [];\n  pointsDiffTips = [];\n  rollingDiffTips = [];\n  dangerousAttacksDiffTips = [];\n  allTips = [];\n\n  let index = 2;\n  let divider = 10;\n\n  ReactDOM.render(<div></div>, document.getElementById(\"GeneratePredictions\"));\n\n  await Promise.all(\n    matches.map(async (match) => {\n      // if there are no stored predictions, calculate them based on live data\n      if (match) {\n        switch (true) {\n          case match.status === \"canceled\":\n            match.goalsA = \"P\";\n            match.goalsB = \"P\";\n            await calculateScore(match, index, divider, false);\n            break;\n          case match.leagueID === 6935 ||\n            match.leagueID === 7061 ||\n            (match.game_week < 3 && match.game_week !== 0):\n            match.goalsA = \"x\";\n            match.goalsB = \"x\";\n            await calculateScore(match, index, divider, false);\n            break;\n          default:\n            [\n              match.goalsA,\n              match.goalsB,\n              match.unroundedGoalsA,\n              match.unroundedGoalsB,\n            ] = await calculateScore(match, index, divider, true);\n            break;\n        }\n      } else {\n        [\n          match.goalsA,\n          match.goalsB,\n          match.unroundedGoalsA,\n          match.unroundedGoalsB,\n        ] = await calculateScore(match, index, divider, true);\n      }\n\n      await getBTTSPotential(\n        match,\n        match.goalsA,\n        match.goalsB,\n        match.unroundedGoalsA,\n        match.unroundedGoalsB\n      );\n\n      let predictionObject;\n      let Over25PredictionObject;\n      let XGPredictionObject;\n      let pointsDiffObject;\n      let rollingDiffObject;\n      let dangerousAttacksDiffObject;\n\n      if (match.status === \"complete\" && match.prediction) {\n        match.outcomeSymbol =\n          match.predictionOutcome === \"Won\" ? \"\\u2714\" : \"\\u2718\";\n        match.over25PredictionOutcomeSymbol =\n          match.over25PredictionOutcome === \"Won\" ? \"\\u2714\" : \"\\u2718\";\n        match.bttsOutcomeSymbol =\n          match.bttsOutcome === \"bttsWon\" ? \"\\u2714\" : \"\\u2718\";\n      } else {\n        match.outcomeSymbol = \"\";\n        match.over25PredictionOutcomeSymbol = \"\";\n        match.bttsOutcomeSymbol = \"\";\n      }\n\n      if (\n        match.unroundedGoalsA - match.unroundedGoalsB > 0.65 &&\n        match.homeOdds !== 0 &&\n        match.fractionHome !== \"N/A\" &&\n        match.includeInMultis !== false &&\n        match.omit !== true\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.status !== \"notEnoughData\" &&\n          match.homeOdds < 3\n        ) {\n          predictionObject = {\n            team: `${match.homeTeam} to win`,\n            game:\n              match.status === \"complete\"\n                ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n                : match.game,\n            odds: match.fractionHome,\n            rawOdds: match.homeOdds,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            outcome: match.predictionOutcome,\n            outcomeSymbol: match.outcomeSymbol,\n            goalDifferential: parseFloat(\n              await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n            ),\n            experimentalCalc: (\n              (match.unroundedGoalsA - match.unroundedGoalsB) *\n              Math.abs(match.teamComparisonScore)\n            ).toFixed(2),\n            XGdifferentialValue: parseFloat(match.XGdifferentialValue),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formHome.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n\n            if (\n              match.unroundedGoalsA - match.unroundedGoalsB >\n              incrementValue\n            ) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      } else if (\n        match.unroundedGoalsB - match.unroundedGoalsA > 1.75 &&\n        match.awayOdds !== 0 &&\n        match.fractionAway !== \"N/A\" &&\n        match.includeInMultis !== false &&\n        match.omit !== true\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.status !== \"notEnoughData\" &&\n          match.awayOdds < 3.5\n        ) {\n          predictionObject = {\n            team: `${match.awayTeam} to win`,\n            game:\n              match.status === \"complete\"\n                ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n                : match.game,\n            rawOdds: match.awayOdds,\n            odds: match.fractionAway,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            outcome: match.predictionOutcome,\n            outcomeSymbol: match.outcomeSymbol,\n            goalDifferential:\n              parseFloat(\n                await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n              ) - 1,\n            experimentalCalc: (\n              (match.unroundedGoalsB - match.unroundedGoalsA) *\n              Math.abs(match.teamComparisonScore)\n            ).toFixed(2),\n            XGdifferentialValue: parseFloat(match.XGdifferentialValue),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formAway.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n            if (match.unroundedGoalsB - match.unroundedGoalsA > 2) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      }\n\n      if (\n        match.btts === true &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\" &&\n        match.status !== \"notEnoughData\"\n      ) {\n        bttsArray.push(match);\n      }\n      if (\n        match.unroundedGoalsA + match.unroundedGoalsB > 4 &&\n        match.goalsA + match.goalsB > 2 &&\n        match.GoalsInGamesAverageHome > 3 &&\n        match.GoalsInGamesAverageAway > 3\n      ) {\n        Over25PredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: match.homeTeam,\n          decimalOdds: match.homeDoubleChance,\n          rawOdds: match.over25Odds,\n          odds: match.over25Odds,\n          comparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.over25PredictionOutcomeSymbol,\n          doubleChanceOutcome: match.over25PredictionOutcome,\n          goalTotalUnrounded: match.unroundedGoalsA + match.unroundedGoalsB,\n        };\n        Over25Tips.push(Over25PredictionObject);\n      }\n\n      if (\n        match.XGdifferential === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        XGPredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          XGdifferentialValue: match.XGdifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        XGDiffTips.push(XGPredictionObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        XGPredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          XGdifferentialValue: match.XGdifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        XGDiffTips.push(XGPredictionObject);\n      }\n\n      if (\n        match.pointsDifferential === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        pointsDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          pointsDifferentialValue: match.pointsDifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        pointsDiffTips.push(pointsDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        pointsDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          pointsDifferentialValue: match.pointsDifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        pointsDiffTips.push(pointsDiffObject);\n      }\n\n      if (\n        match.rollingGoalDiff === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        rollingDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        rollingDiffTips.push(rollingDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        rollingDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        rollingDiffTips.push(rollingDiffObject);\n      }\n\n      if (\n        match.dangerousAttacksDiff === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        dangerousAttacksDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        dangerousAttacksDiffTips.push(dangerousAttacksDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        dangerousAttacksDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        dangerousAttacksDiffTips.push(dangerousAttacksDiffObject);\n      }\n\n      predictions.push(match);\n    })\n  );\n  ReactDOM.render(\n    <RenderAllFixtures matches={matches} result={true} bool={mock} />,\n    document.getElementById(\"FixtureContainer\")\n  );\n  await getSuccessMeasure(matches);\n  await getMultis();\n  await getNewTips(allTipsSorted);\n\n  // await renderTips();\n}\n\nasync function getMultis() {\n  allTipsSorted = allTips.sort(function (a, b) {\n    return b.goalDifferential - a.goalDifferential;\n  });\n\n  bestBets.sort(function (a, b) {\n    if (a.goalDifferential === b.goalDifferential) {\n      return b.comparisonScore - a.comparisonScore;\n    } else {\n      return b.goalDifferential > a.goalDifferential ? 1 : -1;\n    }\n  });\n\n  bttsArray.sort(function (a, b) {\n    return b.combinedBTTS - a.combinedBTTS;\n  });\n\n  Over25Tips.sort(function (a, b) {\n    return b.goalTotalUnrounded - a.goalTotalUnrounded;\n  });\n\n  XGDiffTips.sort(function (a, b) {\n    return Math.abs(b.XGdifferentialValue) - Math.abs(a.XGdifferentialValue);\n  });\n\n  pointsDiffTips.sort(function (a, b) {\n    return (\n      Math.abs(b.pointsDifferentialValue) - Math.abs(a.pointsDifferentialValue)\n    );\n  });\n\n  rollingDiffTips.sort(function (a, b) {\n    return Math.abs(b.rollingGoalDiffValue) - Math.abs(a.rollingGoalDiffValue);\n  });\n\n  dangerousAttacksDiffTips.sort(function (a, b) {\n    return (\n      Math.abs(b.dangerousAttacksDiffValue) -\n      Math.abs(a.dangerousAttacksDiffValue)\n    );\n  });\n\n  exoticArray = [];\n  gamesInExotic = 0;\n  exoticStake = 0;\n  exoticString = \"\";\n\n  switch (true) {\n    case allTips.length >= 10:\n      for (let i = 0; i < 10; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 10;\n      minimumExotic = 8;\n      exoticStake = 0.1;\n      exoticString = \"45 8-folds, 10 9-folds and 1 10-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 9:\n      for (let i = 0; i < 9; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 9;\n      minimumExotic = 7;\n      exoticStake = 0.1;\n      exoticString = \"36 7-folds, 9 8-folds and 1 9-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 8:\n      for (let i = 0; i < 8; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 8;\n      minimumExotic = 6;\n      exoticStake = 0.1;\n      exoticString = \"28 6-folds, 8 7-folds and 1 8-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 7:\n      for (let i = 0; i < 7; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 7;\n      minimumExotic = 6;\n      exoticStake = 1;\n      exoticString = \"7 6-folds and 1 7-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 6:\n      for (let i = 0; i < 6; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 6;\n      minimumExotic = 5;\n      exoticStake = 1;\n      exoticString = \"6 5-folds and 1 6-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 5:\n      for (let i = 0; i < 5; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 5;\n      minimumExotic = 4;\n      exoticStake = 1;\n      exoticString = \"5 4-folds and 1 5-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case Over25Tips.length >= 4:\n      for (let i = 0; i < 4; i++) {\n        let game = Over25Tips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 4;\n      minimumExotic = 3;\n      exoticStake = 1;\n      exoticString = \"4 3-folds and 1 4-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    default:\n      break;\n  }\n}\n\nexport function getAccumulatorPrice(priceArray) {\n  var result = 1;\n  for (var i = 0; i < priceArray.length; i++)\n    result = result * priceArray[i].rawOdds;\n\n  return result;\n}\n\nexport function getCoverBetMaxReturns(priceArray, minAccSize, stake) {\n  var total = 0;\n  combinations = 0;\n\n  for (var i = minAccSize; i <= priceArray.length; i++) {\n    var perms = getUniquePermutations(priceArray, i);\n    combinations = combinations + perms.length;\n\n    for (var j = 0; j < perms.length; j++)\n      total += getAccumulatorPrice(perms[j]) * stake;\n  }\n  return parseFloat(total.toFixed(2));\n}\n\nfunction getUniquePermutations(arr, permLength) {\n  if (arr.length <= permLength) return [arr];\n\n  var permutations = [];\n  var newArr = [];\n\n  newArr = arr.slice(0);\n\n  for (var i = 0; i < arr.length; i++) {\n    newArr = arr.slice(0);\n    newArr.splice(i, 1);\n    permutations = twoDimArrayUnion(\n      permutations,\n      getUniquePermutations(newArr, permLength)\n    );\n  }\n  return permutations;\n}\n\nfunction twoDimArrayUnion(arr1, arr2) {\n  for (var i = 0; i < arr2.length; i++) {\n    var duplicate = false;\n\n    for (var j = 0; j < arr1.length; j++)\n      if (arr1[j].length === arr2[i].length)\n        for (var k = 0; k < arr1[j].length; k++)\n          if (arr1[j][k] !== arr2[i][k]) break;\n          else if (k === arr1[j].length - 1) duplicate = true;\n\n    if (!duplicate) arr1.push(arr2[i]);\n  }\n\n  return arr1;\n}\n\nfunction NewlineText(props) {\n  const text = props.text;\n  const newText = text.split(\"\\n\").map((str) => <p>{str}</p>);\n\n  return newText;\n}\n\nasync function renderTips() {\n  if (newArray.length > 0) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <div className=\"BestPredictionsExplainer\">\n                  Add or remove a selection using the buttons below. Predictions\n                  are ordered by confidence in the outcome.\n                </div>\n                {newArray.map((tip) => (\n                  <li key={`${tip.game}acca`}>\n                    <div>\n                      {tip.team}: {tip.odds}{\" \"}\n                      <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                    </div>\n                    <div className=\"TipGame\">{tip.game}</div>\n                  </li>\n                ))}\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  No games fit the criteria\n                </h4>\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  }\n\n  if (exoticArray.length > 4) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Exotic of the day\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  <NewlineText\n                    text={`${gamesInExotic} games: ${exoticString}\\nStake per multi: ${exoticStake} units - ${combinations} combinations\\nTotal stake: ${(\n                      exoticStake * combinations\n                    ).toFixed(2)} unit(s)`}\n                  />\n                  {`Potential winnings: ${price.toFixed(2)} units`}\n                </h4>\n                {exoticArray.map((tip) => (\n                  <li key={tip.team}>\n                    {tip.team}: {tip.odds}{\" \"}\n                    <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                    <div>{tip.game}</div>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Exotic of the day\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  Not enough games for this feature\n                </h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  }\n\n  if (Over25Tips.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Over 2.5 goals tips\"}\n            element={\n              <ul className=\"LongshotPredictions\" id=\"LongshotPredictions\">\n                <h4>Over 2.5 goals</h4>\n                {Over25Tips.map((tip) => (\n                  <li key={tip.team}>\n                    {tip.game} - Odds: {tip.odds}{\" \"}\n                    <span className={`${tip.doubleChanceOutcome}`}>\n                      {tip.outcomeSymbol}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Over 2.5 goals tips\"}\n            element={\n              <ul className=\"LongshotPredictions\" id=\"LongshotPredictions\">\n                <h4>No games fit the criteria</h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  }\n\n  if (bttsArray.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"BTTS games\"}\n            element={\n              <ul className=\"BTTSGames\" id=\"BTTSGames\">\n                <h4>Games with highest chance of BTTS</h4>\n                {bttsArray.map((game) => (\n                  <li key={game.game}>\n                    {`${game.game} odds: ${game.bttsFraction}`}{\" \"}\n                    <span className={game.bttsOutcome}>\n                      {game.bttsOutcomeSymbol}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"BTTS games\"}\n            element={\n              <ul className=\"BTTSGames\" id=\"BTTSGames\">\n                <h4>No games fit the criteria</h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  }\n\n  ReactDOM.render(\n    <div>\n      <Collapsable\n        buttonText={\"XG tips\"}\n        element={\n          <Slider\n            element={\n              XGDiffTips.length > 0 ? (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>Games with greatest XG Differentials</h4>\n                  {XGDiffTips.map((tip) => (\n                    <li key={tip.game}>\n                      {tip.game} | {tip.prediction} {tip.odds}{\" \"}\n                      <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>Games with greatest XG Differentials</h4>\n                  <li key={\"noPPGDiff\"}>\n                    Sorry, no games fit this criteria today\n                  </li>\n                </ul>\n              )\n            }\n            element2={\n              pointsDiffTips.length > 0 ? (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest points per game differentials (last 10)\n                  </h4>\n                  {pointsDiffTips.map((game) => (\n                    <li key={game.game}>\n                      {game.game} | {game.prediction} {game.odds}{\" \"}\n                      <span className={game.outcome}>{game.outcomeSymbol}</span>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest points per game differentials (last 10)\n                  </h4>\n                  <li key={\"noPPGDiff\"}>\n                    Sorry, no games fit this criteria today\n                  </li>\n                </ul>\n              )\n            }\n            element3={\n              rollingDiffTips.length > 0 ? (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest rolling goal difference differentials\n                  </h4>\n                  {rollingDiffTips.map((game) => (\n                    <li key={game.game}>\n                      {game.game} | {game.prediction} {game.odds}{\" \"}\n                      <span className={game.outcome}>{game.outcomeSymbol}</span>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest rolling goal difference differentials\n                  </h4>\n                  <li key={\"noPPGDiff\"}>\n                    Sorry, no games fit this criteria today\n                  </li>\n                </ul>\n              )\n            }\n            element4={\n              dangerousAttacksDiffTips.length > 0 ? (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest average dangerous attacks differentials\n                  </h4>\n                  {dangerousAttacksDiffTips.map((game) => (\n                    <li key={game.game}>\n                      {game.game} | {game.prediction} {game.odds}{\" \"}\n                      <span className={game.outcome}>{game.outcomeSymbol}</span>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest average dangerous attacks differentials\n                  </h4>\n                  <li key={\"noPPGDiff\"}>\n                    Sorry, no games fit this criteria today\n                  </li>\n                </ul>\n              )\n            }\n            element5={\n              <div className=\"DonationButton\">\n                <h2>Help with running costs</h2>\n                <h4>\n                  Monthly costs are rising and each donation helps keep XG\n                  Tipping free to use\n                </h4>\n                <StyledKofiButton buttonText=\"No sign up donation\" />\n              </div>\n            }\n          ></Slider>\n        }\n      ></Collapsable>\n      <div className=\"FiltersSelected\">\n        <h4>Filters selected:</h4>\n        <ul className=\"FiltersSelectedList\">\n          <li>Minimum goal difference spread: {minimumGD}</li>\n          <li>\n            Minimum goal difference spread (home or away only): {minimumGDHorA}\n          </li>\n          <li>Minimum XG difference spread: {minimumXG}</li>\n          <li>Minimum PPG difference spread: {minimumLast10}</li>\n          <li>\n            Odds range: {rangeValue[0]} - {rangeValue[1]}\n          </li>\n        </ul>\n      </div>\n    </div>,\n    document.getElementById(\"insights\")\n  );\n}\n","import React, { useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Collapsable from \"../components/CollapsableElement\";\n// import TeamOfTheWeek from \"../components/TeamOfTheWeek\";\n// import TeamOfTheSeason from \"../components/TeamOfTheSeason\";\n\nexport var toggleState = false;\nexport var setIsOff = false;\n\nconst upArrow = \"\\u{25B2}\";\n\nconst StyledTableCell2 = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"rgba(226, 226, 226, 1)\",\n    color: \"white\",\n    padding: \"0.35em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    textAlign: \"left\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    fontSize: \"1.9em\",\n    textAlign: \"left\",\n    fontFamily: \"inherit\",\n    padding: \"0.5em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"#030061\",\n  },\n}))(TableCell);\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"white\",\n    color: \"#030061\",\n    padding: \"0.5em\",\n    paddingTop: \"1em\",\n    paddingBottom: \"1em\",\n    textAlign: \"center\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    // backgroundColor: \"#030061\",\n    fontSize: \"1.9em\",\n    textAlign: \"center\",\n    fontFamily: \"inherit\",\n    padding: \"0.35em\",\n    paddingTop: \"1em\",\n    paddingBottom: \"1em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"#030061\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#rgba(226, 226, 226, 0.424)\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#rgba(226, 226, 226, 1)\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\nfunction styleForm(formIndicator) {\n  let className;\n  if (formIndicator === \"W\") {\n    className = \"winLeague\";\n  } else if (formIndicator === \"D\") {\n    className = \"drawLeague\";\n  } else if (formIndicator === \"L\") {\n    className = \"lossLeague\";\n  }\n  return className;\n}\n\nexport default function LeagueTable(props) {\n  [toggleState, setIsOff] = useState(false);\n\n  let rows = props.Teams.map((team, i) => (\n    <StyledTableRow key={`${props.Key}row${i}`}>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${i + 1}`}\n      </StyledTableCell>\n      <StyledTableCell2 component=\"th\" scope=\"row\" style={{ width: \"15em\" }}>\n        {`${team.Name}`}\n      </StyledTableCell2>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Played}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Wins}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Draws}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Losses}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.For}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Against}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.GoalDifference}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Points}`}\n      </StyledTableCell>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ textAlign: \"center\" }}\n      >\n        <span className={styleForm(team.Form[0])}>\n          {team.Form[0] !== undefined ? team.Form[0] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[1])}>\n          {team.Form[1] !== undefined ? team.Form[1] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[2])}>\n          {team.Form[2] !== undefined ? team.Form[2] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[3])}>\n          {team.Form[3] !== undefined ? team.Form[3] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[4])}>\n          {team.Form[4] !== undefined ? team.Form[4] : \"\"}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  ));\n\n  const leagueResults = [];\n  let singleResult;\n  if (props.Results) {\n    props.Results.forEach((result) => {\n      singleResult = (\n        <div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_xg}</span>\n            <span className=\"column\">XG</span>\n            <span className=\"column\">{result.team_b_xg}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shots}</span>\n            <span className=\"column\">Shots</span>\n            <span className=\"column\">{result.team_b_shots}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shotsOnTarget}</span>\n            <span className=\"column\">SOT</span>\n            <span className=\"column\">{result.team_b_shotsOnTarget}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_dangerous_attacks}</span>\n            <span className=\"column\">Dangerous Attacks</span>\n            <span className=\"column\">{result.team_b_dangerous_attacks}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_possession}%</span>\n            <span className=\"column\">Possession</span>\n            <span className=\"column\">{result.team_b_possession}%</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_red_cards}</span>\n            <span className=\"column\">Red cards</span>\n            <span className=\"column\">{result.team_b_red_cards}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.odds_ft_1}</span>\n            <span className=\"column\">Odds (pre-match)</span>\n            <span className=\"column\">{result.odds_ft_2}</span>\n          </div>\n        </div>\n      );\n\n      leagueResults.push(\n        <Collapsable\n          classNameButton=\"ResultButton\"\n          buttonText={\n            <div className=\"ResultRowOverview\">\n              <div className=\"columnOverviewHome\">{result.home_name}</div>\n              <span className=\"columnOverviewScore\">\n                {result.homeGoalCount} : {result.awayGoalCount}\n              </span>\n              <div className=\"columnOverviewAway\">{result.away_name}</div>\n            </div>\n          }\n          element={singleResult}\n        />\n      );\n    });\n  }\n\n  const leagueResultsOlder = [];\n  if (props.LastWeeksResults) {\n    props.LastWeeksResults.forEach((result) => {\n      singleResult = (\n        <div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_xg}</span>\n            <span className=\"column\">XG</span>\n            <span className=\"column\">{result.team_b_xg}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shots}</span>\n            <span className=\"column\">Shots</span>\n            <span className=\"column\">{result.team_b_shots}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shotsOnTarget}</span>\n            <span className=\"column\">SOT</span>\n            <span className=\"column\">{result.team_b_shotsOnTarget}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_dangerous_attacks}</span>\n            <span className=\"column\">Dangerous Attacks</span>\n            <span className=\"column\">{result.team_b_dangerous_attacks}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_possession}</span>\n            <span className=\"column\">Possession</span>\n            <span className=\"column\">{result.team_b_possession}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_red_cards}</span>\n            <span className=\"column\">Red cards</span>\n            <span className=\"column\">{result.team_b_red_cards}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.odds_ft_1}</span>\n            <span className=\"column\">Odds (pre-match)</span>\n            <span className=\"column\">{result.odds_ft_2}</span>\n          </div>\n        </div>\n      );\n\n      leagueResultsOlder.push(\n        <Collapsable\n          classNameButton=\"ResultButton\"\n          buttonText={\n            <div className=\"ResultRowOverview\">\n              <div className=\"columnOverviewHome\">{result.home_name}</div>\n              <span className=\"columnOverviewScore\">\n                {result.homeGoalCount} : {result.awayGoalCount}\n              </span>\n              <div className=\"columnOverviewAway\">{result.away_name}</div>\n            </div>\n          }\n          element={singleResult}\n        />\n      );\n    });\n  }\n\n  function getTopScorersTeam(id) {\n    let found = props.Teams.find((team) => team.ID === id);\n    return found.Name;\n  }\n\n  async function sorted(league, value, order) {\n    let sortedByForm;\n    if (order === \"desc\") {\n      sortedByForm = league.sort((a, b) => b[value] - a[value]);\n    } else {\n      sortedByForm = league.sort((a, b) => a[value] - b[value]);\n    }\n    setIsOff(!toggleState);\n    return sortedByForm;\n  }\n\n  if (\n    props.GamesPlayed > 3 &&\n    props.Teams[0].LeagueID !== 7956 &&\n    props.Teams[0].LeagueID !== 6969 &&\n    props.Teams[0].LeagueID !== 7432\n  ) {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table\n            className=\"Table\"\n            aria-label=\"customized table\"\n            key={props.Key}\n            style={{ marginTop: \"2em\", marginBottom: \"1em\" }}\n          >\n            <TableHead>\n              <TableRow>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"Points\", \"desc\")}\n                  >\n                    Pts {upArrow}\n                  </button>\n                </td>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"LastXPoints\", \"desc\")}\n                  >\n                    Last 5 {upArrow}\n                  </button>\n                </td>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n          <h5>{`${props.mostRecentGameweek} results`}</h5>\n          <div className=\"ResultsList\" id=\"ResultsList\">\n            <ul>{leagueResults}</ul>\n          </div>\n          <div className=\"LeagueStatisticsHeader\">League Statistics</div>\n          {/* <TeamOfTheWeek></TeamOfTheWeek>\n          <TeamOfTheSeason></TeamOfTheSeason> */}\n          <div className=\"LeagueStatistics\">\n            <ul className=\"LeagueStatsColumn\">\n              <li>Average home goals: {props.Stats.seasonAVG_home}</li>\n              <li>Average away goals: {props.Stats.seasonAVG_away}</li>\n              <li>BTTS: {props.Stats.seasonBTTSPercentage}%</li>\n              <li>\n                Over 0.5 goals: {props.Stats.seasonOver05Percentage_overall}%\n              </li>\n              <li>\n                Over 1.5 goals: {props.Stats.seasonOver15Percentage_overall}%\n              </li>\n              <li>\n                Over 2.5 goals: {props.Stats.seasonOver25Percentage_overall}%\n              </li>\n              <li>\n                Over 3.5 goals: {props.Stats.seasonOver35Percentage_overall}%\n              </li>\n              <li>\n                Over 4.5 goals: {props.Stats.seasonOver45Percentage_overall}%\n              </li>\n            </ul>\n            <ul className=\"LeagueStatsColumn\">\n              <li>\n                Over 7.5 corners: {props.Stats.over75CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 8.5 corners: {props.Stats.over85CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 9.5 corners: {props.Stats.over95CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 10.5 corners:{\" \"}\n                {props.Stats.over105CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 11.5 corners:{\" \"}\n                {props.Stats.over115CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 12.5 corners:{\" \"}\n                {props.Stats.over125CornersPercentage_overall}%\n              </li>\n              <li>Corners average: {props.Stats.cornersAVG_overall}</li>\n              <li>Cards average: {props.Stats.cardsAVG_overall}</li>\n            </ul>\n            <ul className=\"TopScorersColumn\">\n              <h4>Top scorers</h4>\n              <li>\n                {props.Stats.top_scorers[0].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[0].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[0].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[1].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[1].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[1].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[2].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[2].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[2].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[3].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[3].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[3].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[4].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[4].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[4].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[5].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[5].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[5].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[6].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[6].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[6].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[7].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[7].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[7].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[8].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[8].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[8].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[9].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[9].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[9].goals_overall}\n              </li>\n            </ul>\n          </div>\n        </TableContainer>\n      );\n    }\n  } else if (props.Teams[0].LeagueID === 4340) {\n    return null;\n  } else {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table aria-label=\"customized table\" key={props.Key}>\n            <TableHead>\n              <TableRow>\n                <button\n                  className=\"SortedColumn\"\n                  style={{ textAlign: \"center\" }}\n                  onClick={() => sorted(props.Teams, \"Position\")}\n                >\n                  {upArrow}\n                </button>{\" \"}\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <StyledTableCell>Pts</StyledTableCell>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"LastXPoints\", \"desc\")}\n                  >\n                    Last 5 {upArrow}\n                  </button>\n                </td>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n        </TableContainer>\n      );\n    }\n  }\n}\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { orderedLeagues } from \"../App\";\nimport { getForm } from \"./getForm\";\nimport { Fixture } from \"../components/Fixture\";\nimport { Button } from \"../components/Button\";\nimport { Slide } from \"../components/Slider\";\nimport { getScorePrediction } from \"../logic/getScorePredictions\";\nimport { ThreeDots } from \"react-loading-icons\";\nimport { selectedOdds } from \"../components/OddsRadio\";\nimport LeagueTable from \"../components/LeagueTable\";\nimport { getPointsFromLastX } from \"../logic/getScorePredictions\";\nimport SlideDiff from \"../components/SliderDiff\";\nimport Collapsable from \"../components/CollapsableElement\";\n\nvar oddslib = require(\"oddslib\");\n\n// require(\"dotenv\").config();\n\nvar fixtureResponse;\nvar fixtureArray = [];\nexport var matches = [];\nexport var resultedMatches = [];\nexport let arrayOfGames = [];\n\nvar league;\nvar leagueID;\nvar leagueGames = [];\nexport var leagueArray = [];\nvar leagueIdArray = [];\nexport var leagueStatsArray = [];\nexport let leagueInstance;\nexport let groupInstance;\nexport let allLeagueResultsArrayOfObjects = [];\nvar lastThreeFormHome;\nvar lastThreeFormAway;\nvar lastFiveFormHome;\nvar lastFiveFormAway;\nvar lastSixFormHome;\nvar lastSixFormAway;\nvar lastTenFormHome;\nvar lastTenFormAway;\nvar leagueOrAll;\nvar formRunHome;\nvar formRunAway;\nlet WDLinLeagueHome;\nlet WDLinLeagueAway;\nlet HomeAverageGoals;\nlet homeAverageGoals;\nlet HomeAverageConceded;\nlet homeAverageConceded;\nlet AwayAverageGoals;\nlet awayAverageGoals;\nlet AwayAverageConceded;\nlet awayAverageConceded;\n\n// export var [currentDay, month, year] = new Date()\n//   .toLocaleDateString(\"en-US\", { timeZone: \"Europe/London\" })\n//   .split(\"/\");\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nexport let allForm = [];\nexport let tableArray = [];\nexport let worldCupArray = [];\ngroupInstance = [];\nleagueInstance = [];\n\nasync function convertTimestampForSofaScore(timestamp) {\n  let newDate = new Date(timestamp);\n\n  let year = newDate.getFullYear();\n  let month = String(newDate.getMonth() + 1).padStart(2, '0'); // Adding 1 to month because it is zero-based\n  let day = String(newDate.getDate()).padStart(2, '0');\n  \n  let converted = `${year}-${month}-${day}`;\n\n  return converted;\n}\n\nasync function convertTimestamp(timestamp) {\n  let newDate = new Date(timestamp);\n  let [day, month, year] = newDate.toLocaleDateString(\"en-US\").split(\"/\");\n\n  let converted = `${year}-${day}-${month}`;\n\n  return converted;\n}\n\n\nexport async function generateTables(a, leagueIdArray, allResults) {\n  // leagueIdArray = [];\n  tableArray = [];\n  worldCupArray = [];\n  let i = 0;\n  leagueArray.forEach(function (league) {\n    let currentLeagueId = leagueIdArray[i];\n    i++;\n    leagueInstance = [];\n    //Skip MLS which has a weird format\n    if (\n      !league.data.specific_tables[0].groups &&\n      currentLeagueId !== 6969 &&\n      league.data.specific_tables[0].table\n    ) {\n      for (\n        let index = 0;\n        index < league.data.specific_tables[0].table.length;\n        index++\n      ) {\n        let currentTeam = league.data.specific_tables[0].table[index];\n        let last5;\n        if (currentTeam.wdl_record.length < 5) {\n          last5 = currentTeam.wdl_record\n            .slice(`-${currentTeam.wdl_record.length}`)\n            .toUpperCase();\n        } else {\n          last5 = currentTeam.wdl_record.slice(-5).toUpperCase();\n        }\n\n        const team = {\n          LeagueID: currentLeagueId,\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          ID: currentTeam.id,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: last5,\n          LastXPoints: getPointsFromLastX(last5.split(\"\")),\n          Points: currentTeam.points,\n          wdl: currentTeam.wdl_record,\n          seasonGoals: currentTeam.seasonGoals,\n          seasonConceded: currentTeam.seasonConceded,\n        };\n        leagueInstance.push(team);\n      }\n      tableArray.push({ id: currentLeagueId, table: leagueInstance });\n    } else if (currentLeagueId === 7432) {\n      // for (let x = 0; x < league.data.specific_tables[0].groups.length; x++) {\n      // for (\n      //   let index = 0;\n      //   index < league.data.specific_tables[0].groups[x].table.length;\n      //   index++\n      // )\n      league.data.specific_tables[0].groups.forEach((group) => {\n        leagueInstance = [];\n        for (let index = 0; index < group.table.length; index++) {\n          let currentTeam = group.table[index];\n          let last5 = \"N/A\";\n          const team = {\n            LeagueID: currentLeagueId,\n            Position: index + 1,\n            Name: currentTeam.cleanName,\n            ID: currentTeam.id,\n            Played: currentTeam.matchesPlayed,\n            Wins: currentTeam.seasonWins_overall,\n            Draws: currentTeam.seasonDraws_overall,\n            Losses: currentTeam.seasonLosses_overall,\n            For: currentTeam.seasonGoals,\n            Against:\n              currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n            GoalDifference: currentTeam.seasonGoalDifference,\n            Form: last5,\n            LastXPoints: getPointsFromLastX(last5.split(\"\")),\n            Points: currentTeam.points,\n            wdl: currentTeam.wdl_record,\n            seasonGoals: currentTeam.seasonGoals,\n            seasonConceded: currentTeam.seasonConceded,\n          };\n          leagueInstance.push(team);\n        }\n        worldCupArray.push({\n          group: group.name,\n          table: leagueInstance,\n        });\n      });\n    } else if (league.data.league_table === null) {\n      for (\n        let index = 0;\n        index < league.data.all_matches_table_overall.length;\n        index++\n      ) {\n        let currentTeam = league.data.all_matches_table_overall[index];\n        let last5 = \"N/A\";\n        const team = {\n          LeagueID: currentLeagueId,\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          ID: currentTeam.id,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: last5,\n          LastXPoints: getPointsFromLastX(last5.split(\"\")),\n          Points: currentTeam.points,\n          wdl: currentTeam.wdl_record,\n          seasonGoals: currentTeam.seasonGoals,\n          seasonConceded: currentTeam.seasonConceded,\n        };\n        leagueInstance.push(team);\n      }\n\n      tableArray.push({ id: currentLeagueId, table: leagueInstance });\n    }\n  });\n}\n\nexport async function renderTable(index, results, id) {\n  let league;\n  //World cup table rendering\n\n  // let mostRecentGame = results.fixtures.pop();\n  let mostRecentGame = results.fixtures.pop();\n\n  let mostRecentGameweek = \"Latest\";\n\n  const gameweeksResults = results.fixtures.filter(\n    (games) => games.game_week === mostRecentGame.game_week\n  );\n\n  // const lastGameweeksResults = results.fixtures.filter(\n  //   (games) => games.game_week === mostRecentGameweek - 1\n  // );\n\n  const leagueTable = tableArray.filter((table) => table.id === id);\n\n  league = leagueTable[0].table;\n\n  let statistics;\n  let leagueStatistics = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}leagueStats/${id}`\n  );\n  await leagueStatistics.json().then((stats) => {\n    statistics = stats.data;\n  });\n\n  if (league !== undefined) {\n    ReactDOM.render(\n      <LeagueTable\n        Teams={league}\n        Stats={statistics}\n        Key={`League${index}`}\n        GamesPlayed={statistics.game_week}\n        Results={gameweeksResults}\n        mostRecentGameweek={mostRecentGameweek}\n      />,\n      document.getElementById(`leagueName${id}`)\n    );\n  }\n}\n\nasync function createFixture(match, result, mockBool) {\n  let roundedHomeOdds;\n  let roundedAwayOdds;\n  let roundedBTTSOdds;\n  let homeFraction;\n  let awayFraction;\n  let bttsFraction;\n\n  if (selectedOdds === \"Fractional odds\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      roundedHomeOdds = (Math.round(match.homeOdds * 5) / 5).toFixed(1);\n      roundedAwayOdds = (Math.round(match.awayOdds * 5) / 5).toFixed(1);\n\n      if (roundedHomeOdds < 1.1) {\n        roundedHomeOdds = 1.1;\n      }\n      if (roundedAwayOdds < 1.1) {\n        roundedAwayOdds = 1.1;\n      }\n\n      if (match.homeOdds === 0.1 && match.awayOdds === 0.1) {\n        match.homeOdds = 3;\n        roundedHomeOdds = 3;\n        match.awayOdds = 3;\n        roundedAwayOdds = 3;\n      }\n\n      try {\n        homeFraction = oddslib\n          .from(\"decimal\", roundedHomeOdds)\n          .to(\"fractional\", { precision: 1 });\n        awayFraction = oddslib\n          .from(\"decimal\", roundedAwayOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      roundedBTTSOdds = (Math.round(match.bttsOdds * 5) / 5).toFixed(1);\n\n      if (roundedBTTSOdds < 1.1) {\n        roundedBTTSOdds = 1.1;\n      }\n\n      try {\n        bttsFraction = oddslib\n          .from(\"decimal\", roundedBTTSOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  } else if (selectedOdds === \"Decimal odds\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      homeFraction = match.homeOdds;\n      awayFraction = match.awayOdds;\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      bttsFraction = match.bttsOdds;\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  }\n\n  match.omit = false;\n  match.homeTeamWinsPercentage = match.homeTeamWinPercentage;\n  match.homeTeamLossesPercentage = match.homeTeamLossPercentage;\n  match.homeTeamDrawsPercentage = match.homeTeamDrawPercentage;\n\n  match.awayTeamWinsPercentage = match.awayTeamWinPercentage;\n  match.awayTeamLossesPercentage = match.awayTeamLossPercentage;\n  match.awayTeamDrawsPercentage = match.awayTeamDrawPercentage;\n  match.fractionHome = homeFraction;\n  match.fractionAway = awayFraction;\n\n  match.bttsFraction = bttsFraction;\n\n  match.game = match.homeTeam + \" v \" + match.awayTeam;\n\n  // ReactDOM.render(\n  //   <Fixture\n  //     fixtures={matches}\n  //     result={result}\n  //     mock={mockBool}\n  //     className={\"individualFixture\"}\n  //   />,\n  //   document.getElementById(\"FixtureContainer\")\n  // );\n}\n\nexport function RenderAllFixtures(props) {\n  return (\n    <Fixture\n      fixtures={props.matches}\n      result={props.result}\n      mock={false}\n      className={\"individualFixture\"}\n    />\n  );\n}\n//     document.getElementById(\"FixtureContainer\")\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nlet isFunctionRunning = false;\n\nexport async function generateFixtures(\n  day,\n  date,\n  selectedOdds,\n  footyStatsFormattedDate,\n  current,\n  todaysDate,\n  dateSS\n) {\n  if (!isFunctionRunning) {\n    isFunctionRunning = true;\n    // const randomInt = Math.random() * 10\n\n    // if(randomInt >= 7){\n    //   alert(\"XGTipping is now serving over 2000 users a month,1 relying on donations to cover increasing running costs. If you can afford to do so and like what we do, please, help us stay subscription fee today by tapping to Donation button at the bottom of the page\")\n    // }\n\n    ReactDOM.render(\n      <div>\n        <div className=\"LoadingText\">\n          Loading all league, fixture & form data, please be patient...\n        </div>\n        <ThreeDots height=\"3em\" fill=\"#030061\" />\n      </div>,\n      document.getElementById(\"Loading\")\n    );\n\n    //cleanup if different day is selected\n    ReactDOM.render(\n      <div></div>,\n      document.getElementById(\"GeneratePredictions\")\n    );\n    ReactDOM.render(<div></div>, document.getElementById(\"successMeasure2\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"bestPredictions\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"exoticOfTheDay\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"insights\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"longShots\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"BTTS\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"draws\"));\n\n    const url = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${footyStatsFormattedDate}`;\n    const formUrl = `${process.env.REACT_APP_EXPRESS_SERVER}form/${date}`;\n\n    matches = [];\n    fixtureArray = [];\n\n    league = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${todaysDate}`\n    );\n\n    ReactDOM.render(<div></div>, document.getElementById(\"FixtureContainer\"));\n\n    fixtureResponse = await fetch(url);\n\n    await fixtureResponse.json().then((fixtures) => {\n      fixtureArray = Array.from(fixtures.data);\n    });\n\n    let form;\n    let formArray = [];\n    allForm = [];\n    var isFormStored;\n    var isStoredLocally;\n    var leaguesStored = false;\n    let storedForm = await fetch(formUrl);\n    if (storedForm.status === 201 || storedForm.status === 200) {\n      await storedForm.json().then((form) => {\n        formArray = Array.from(form.allForm);\n        isFormStored = true;\n        isStoredLocally = true;\n        allForm = formArray;\n      });\n    } else {\n      isFormStored = false;\n      isStoredLocally = false;\n    }\n\n    leagueIdArray = [];\n    for (let i = 0; i < orderedLeagues.length; i++) {\n      leagueID = orderedLeagues[i].element.id;\n      leagueIdArray.push(leagueID);\n    }\n\n    var leaguePositions = [];\n    leagueArray = [];\n\n    let allLeagueResults;\n\n    allLeagueResults = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}results`\n    );\n\n    if (league.status === 200 && allLeagueResults.status === 201) {\n      console.log(\"Not fetching leagues\");\n      await league.json().then((leagues) => {\n        leagueArray = Array.from(leagues.leagueArray);\n      });\n      updateResults(false);\n\n      await allLeagueResults.json().then((allGames) => {\n        allLeagueResultsArrayOfObjects = Array.from(allGames);\n      });\n\n      console.log(allLeagueResultsArrayOfObjects)\n      leaguesStored = true;\n      generateTables(\n        leagueArray,\n        leagueIdArray,\n        allLeagueResultsArrayOfObjects\n      );\n      arrayOfGames = []\n\n      const sofaScore = await fetch(`https://www.sofascore.com/api/v1/sport/football/scheduled-events/${dateSS}`)\n      await sofaScore.json().then((games) => {\n        games.events.forEach((game) => {\n          arrayOfGames.push({\n            homeTeam: game.homeTeam.name,\n            awayTeam: game.awayTeam.name,\n            id: game.id,\n            time: game.startTimestamp,\n            homeGoals: game.homeScore.display != undefined ? game.homeScore.display : \"-\",\n            awayGoals: game.awayScore.display != undefined ? game.awayScore.display : \"-\"\n          })\n        })\n      })\n\n      const sofaScoreLeagues = await fetch('')\n      console.log(arrayOfGames)\n    } else {\n      allLeagueResultsArrayOfObjects = [];\n      console.log(\"Fetching leagues\");\n      for (let i = 0; i < orderedLeagues.length; i++) {\n        league = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}tables/${orderedLeagues[i].element.id}/${todaysDate}`\n        );\n        // eslint-disable-next-line no-loop-func\n        await league.json().then((table) => {\n          leagueArray.push(table);\n        });\n        leaguesStored = false;\n      }\n\n      //set variable for date X amount of days in the past and use that to filter the results\n\n      let startDate = (new Date().getTime() / 1000).toFixed(0);\n      // deduct 3 months\n      let targetDate = startDate - 23778463;\n\n      for (const orderedLeague of orderedLeagues) {\n        let fixtures = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${orderedLeague.element.id}`\n        );\n\n        let games = await fixtures.json();\n        let gamesFiltered;\n        let gamesShortened;\n        if (games.pager.current_page < games.pager.max_page) {\n          const page2 = await fetch(\n            `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${orderedLeague.element.id}&page=2`\n          );\n          let page2Data = await page2.json();\n\n          const gamesConcat = games.data.concat(page2Data.data);\n          const gamesConcatFiltered = gamesConcat.filter((game) => game.status === \"complete\");\n\n          let mostRecentResults = gamesConcatFiltered.filter(\n            (game) => game.date_unix > targetDate\n          );\n          let sorted = mostRecentResults.sort((a, b) => a.date_unix - b.date_unix);\n          gamesShortened = sorted.slice(-600);\n          gamesFiltered = gamesShortened;\n        } else {\n\n          gamesFiltered = games.data.filter(\n            (game) => game.status === \"complete\"\n          );\n\n          if (current) {\n            let mostRecentResults = gamesFiltered.filter(\n              (game) => game.date_unix > targetDate\n            );\n            gamesFiltered = mostRecentResults.slice(-600);\n          }\n        }\n\n        // let mostRecentResults = gamesFiltered.filter(\n        //   (game) => game.date_unix > targetDate\n        // );\n\n        const shortenedResults = gamesFiltered.map(\n          ({\n            home_name,\n            away_name,\n            homeGoalCount,\n            awayGoalCount,\n            date_unix,\n            team_a_xg,\n            team_b_xg,\n            odds_ft_1,\n            odds_ft_2,\n            team_a_shots,\n            team_b_shots,\n            team_a_corners,\n            team_b_corners,\n            team_a_shotsOnTarget,\n            team_b_shotsOnTarget,\n            team_a_red_cards,\n            team_b_red_cards,\n            team_a_possession,\n            team_b_possession,\n            team_a_dangerous_attacks,\n            team_b_dangerous_attacks,\n            pre_match_teamA_overall_ppg,\n            pre_match_teamB_overall_ppg,\n            game_week,\n          }) => ({\n            home_name,\n            away_name,\n            homeGoalCount,\n            awayGoalCount,\n            date_unix,\n            team_a_xg,\n            team_b_xg,\n            odds_ft_1,\n            odds_ft_2,\n            team_a_shots,\n            team_b_shots,\n            team_a_corners,\n            team_b_corners,\n            team_a_shotsOnTarget,\n            team_b_shotsOnTarget,\n            team_a_red_cards,\n            team_b_red_cards,\n            team_a_possession,\n            team_b_possession,\n            team_a_dangerous_attacks,\n            team_b_dangerous_attacks,\n            pre_match_teamA_overall_ppg,\n            pre_match_teamB_overall_ppg,\n            game_week,\n          })\n        );\n\n        let leagueObj = {\n          // leagueObject[orderedLeague] = {\n          name: orderedLeague.name,\n          id: orderedLeague.element.id,\n          fixtures: shortenedResults,\n        };\n\n        allLeagueResultsArrayOfObjects.push(leagueObj);\n      }\n      updateResults(true);\n      generateTables(\n        leagueArray,\n        leagueIdArray,\n        allLeagueResultsArrayOfObjects\n      );\n    }\n\n    let teamPositionPrefix;\n\n    async function getPrefix(position) {\n      switch (position) {\n        case 1:\n        case 21:\n        case 31:\n        case 41:\n          teamPositionPrefix = \"st\";\n          break;\n        case 2:\n        case 22:\n        case 32:\n        case 42:\n          teamPositionPrefix = \"nd\";\n          break;\n        case 3:\n        case 23:\n        case 33:\n        case 43:\n          teamPositionPrefix = \"rd\";\n          break;\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18:\n        case 19:\n        case 20:\n        case 24:\n        case 25:\n        case 26:\n        case 27:\n        case 28:\n        case 29:\n        case 30:\n        case 34:\n        case 35:\n        case 36:\n        case 37:\n        case 38:\n        case 39:\n        case 40:\n        case 44:\n        case 45:\n        case 46:\n        case 47:\n        case 48:\n          teamPositionPrefix = \"th\";\n          break;\n        default:\n          break;\n      }\n      return teamPositionPrefix;\n    }\n\n    for (let i = 0; i < leagueArray.length; i++) {\n      let leagueInstance;\n      let homeLeague;\n      let awayLeague;\n\n      if (leagueArray[i].data.league_table !== null) {\n        leagueInstance = leagueArray[i].data.league_table;\n        homeLeague = leagueArray[i].data.all_matches_table_home;\n        awayLeague = leagueArray[i].data.all_matches_table_away;\n      } else {\n        leagueInstance = leagueArray[i].data.all_matches_table_overall;\n        homeLeague = leagueArray[i].data.all_matches_table_home;\n        awayLeague = leagueArray[i].data.all_matches_table_away;\n      }\n\n      for (let x = 0; x < leagueInstance.length; x++) {\n        let regularSeason = leagueArray[i].data.specific_tables.find(\n          (season) =>\n            season.round === \"Regular Season\" ||\n            season.round === \"2023\" ||\n            season.round === \"2023/2024\" ||\n            season.round === \"Apertura\" ||\n            season.round === \"1st Phase\"\n          // season.round === \"North\" ||\n          // season.round === \"South\"\n        );\n        let string;\n\n        if (regularSeason !== undefined && regularSeason.table) {\n          string = regularSeason.table[x];\n          homeLeague = leagueArray[i].data.all_matches_table_home;\n          awayLeague = leagueArray[i].data.all_matches_table_away;\n        } else {\n          string = leagueArray[i].data.all_matches_table_overall[x];\n          homeLeague = leagueArray[i].data.all_matches_table_home;\n          awayLeague = leagueArray[i].data.all_matches_table_away;\n        }\n\n        let stringHome = homeLeague[x];\n        let stringAway = awayLeague[x];\n\n        leaguePositions.push({\n          name: string.cleanName,\n          position: x + 1,\n          rawPosition: x + 1,\n          homeFormName: stringHome ? stringHome.cleanName : string.cleanName,\n          awayFormName: stringAway ? stringAway.cleanName : string.cleanName,\n          homeSeasonWinPercentage: stringHome\n            ? stringHome.seasonWins\n            : string.seasonWins,\n          awaySeasonWinPercentage: stringAway\n            ? stringAway.seasonWins\n            : string.seasonWins,\n          homeSeasonLossPercentage: stringHome\n            ? stringHome.seasonLosses_home\n            : string.seasonLosses_home,\n          awaySeasonLossPercentage: stringAway\n            ? stringAway.seasonLosses_away\n            : string.seasonLosses_away,\n          homeSeasonDrawPercentage: stringHome\n            ? stringHome.seasonDraws\n            : string.seasonDraws,\n          awaySeasonDrawPercentage: stringAway\n            ? stringAway.seasonDraws\n            : string.seasonDraws,\n          homeSeasonMatchesPlayed: stringHome\n            ? stringHome.matchesPlayed\n            : string.matchesPlayed,\n          awaySeasonMatchesPlayed: stringAway\n            ? stringAway.matchesPlayed\n            : string.matchesPlayed,\n          ppg: string.points / string.matchesPlayed,\n          wdl: string.wdl_record ? string.wdl_record : \"\",\n          played: string.matchesPlayed,\n          seasonGoals: string.seasonGoals,\n          seasonConceded: string.seasonConceded,\n        });\n      }\n    }\n\n    let previousLeagueName;\n\n    for (let i = 0; i < orderedLeagues.length; i++) {\n      leagueID = orderedLeagues[i].element.id;\n      leagueGames = fixtureArray.filter(\n        (game) => game.competition_id === orderedLeagues[i].element.id\n      );\n\n      for (const fixture of leagueGames) {\n        const unixTimestamp = fixture.date_unix;\n        const milliseconds = unixTimestamp * 1000;\n        const dateObject = new Date(milliseconds);\n\n        let match = {};\n        if (orderedLeagues[i].name !== previousLeagueName) {\n          match.leagueName = orderedLeagues[i].name;\n          match.leagueIndex = i;\n          match.leagueID = leagueID;\n        } else {\n          match.leagueName = null;\n          match.leagueIndex = i;\n          match.leagueID = leagueID;\n        }\n        match.id = fixture.id;\n        match.competition_id = fixture.competition_id;\n        match.date = fixture.date_unix;\n        match.time = dateObject.toLocaleString(\"en-GB\", {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n        });\n        match.homeTeam = fixture.home_name;\n        match.awayTeam = fixture.away_name;\n\n        match.homeOdds = +fixture.odds_ft_1.toFixed(2);\n        match.awayOdds = +fixture.odds_ft_2.toFixed(2);\n        match.drawOdds = +fixture.odds_ft_x.toFixed(2);\n        match.homeDoubleChance = fixture.odds_doublechance_1x;\n        match.awayDoubleChance = fixture.odds_doublechance_x2;\n        match.bttsOdds = fixture.odds_btts_yes;\n        match.homeId = fixture.homeID;\n        match.awayId = fixture.awayID;\n        match.form = [];\n        match.homeTeamInfo = [];\n        match.awayTeamInfo = [];\n        match.btts = false;\n\n        previousLeagueName = orderedLeagues[i].name;\n\n        let homeTeaminLeague;\n        let awayTeaminLeague;\n        let teamPositionHome;\n        let teamPositionHomeTable;\n        let teamPositionAwayTable;\n        let homeTeamWinPercentageHome;\n        let awayTeamWinPercentageAway;\n        let homeTeamLossPercentageHome;\n        let awayTeamLossPercentageAway;\n        let homeTeamDrawPercentageHome;\n        let awayTeamDrawPercentageAway;\n        let teamPositionAway;\n        let homePrefix;\n        let homePrefixHomeTable;\n        let awayPrefix;\n        let awayPrefixAwayTable;\n        let homeSeasonPPG;\n        let awaySeasonPPG;\n\n        try {\n          homeTeaminLeague = leaguePositions.find(\n            (team) => team.name === match.homeTeam\n          );\n\n          let homeTeaminHomeLeague = leaguePositions.find(\n            (team) => team.homeFormName === match.homeTeam\n          );\n          teamPositionHome = homeTeaminLeague.position;\n          teamPositionHomeTable = homeTeaminHomeLeague.position;\n\n          WDLinLeagueHome = Array.from(homeTeaminLeague.wdl.toUpperCase());\n          HomeAverageGoals =\n            homeTeaminLeague.seasonGoals / homeTeaminLeague.played;\n          HomeAverageConceded =\n            homeTeaminLeague.seasonConceded / homeTeaminLeague.played;\n\n          homeTeamWinPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonWinPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homeTeamLossPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonLossPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homeTeamDrawPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonDrawPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homePrefix = await getPrefix(teamPositionHome);\n          homePrefixHomeTable = await getPrefix(teamPositionHomeTable);\n\n          homeSeasonPPG = homeTeaminLeague.ppg.toFixed(2);\n        } catch (error) {\n          console.log(error);\n          teamPositionHome = \"N/A\";\n          homePrefix = \"\";\n          homePrefixHomeTable = \"\";\n          homeSeasonPPG = \"N/A\";\n          homeTeaminLeague = {\n            rawPosition: \"N/A\",\n          };\n          WDLinLeagueHome = \"N/A\";\n        }\n\n        try {\n          awayTeaminLeague = leaguePositions.find(\n            (team) => team.name === match.awayTeam\n          );\n\n          let awayTeaminAwayLeague = leaguePositions.find(\n            (team) => team.awayFormName === match.awayTeam\n          );\n\n          teamPositionAway = awayTeaminLeague.position;\n          teamPositionAwayTable = awayTeaminAwayLeague.position;\n\n          WDLinLeagueAway = Array.from(awayTeaminLeague.wdl.toUpperCase());\n          AwayAverageGoals =\n            awayTeaminLeague.seasonGoals / awayTeaminLeague.played;\n          AwayAverageConceded =\n            awayTeaminLeague.seasonConceded / awayTeaminLeague.played;\n\n          awayTeamWinPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonWinPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayTeamLossPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonLossPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayTeamDrawPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonDrawPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayPrefix = await getPrefix(teamPositionAway);\n          awayPrefixAwayTable = await getPrefix(teamPositionAwayTable);\n\n          awaySeasonPPG = awayTeaminLeague.ppg.toFixed(2);\n        } catch (error) {\n          console.log(error);\n          teamPositionAway = \"N/A\";\n          awayPrefix = \"\";\n          awaySeasonPPG = \"N/A\";\n          awayTeaminLeague = {\n            rawPosition: \"N/A\",\n          };\n          WDLinLeagueAway = \"N/A\";\n        }\n\n        if (!isFormStored) {\n          form = await getForm(match);\n\n          let homeFormString5 =\n            form[0].data[0].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString5 =\n            form[1].data[0].stats.additional_info.formRun_overall.toUpperCase();\n          let homeFormString6 =\n            form[0].data[1].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString6 =\n            form[1].data[1].stats.additional_info.formRun_overall.toUpperCase();\n          let homeFormString10 =\n            form[0].data[2].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString10 =\n            form[1].data[2].stats.additional_info.formRun_overall.toUpperCase();\n\n          let homeFormRun =\n            form[0].data[2].stats.additional_info.formRun_home.toUpperCase();\n          let awayFormRun =\n            form[1].data[2].stats.additional_info.formRun_away.toUpperCase();\n\n          if (WDLinLeagueHome.length >= 10) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = WDLinLeagueHome.slice(-6);\n            lastTenFormHome = WDLinLeagueHome.slice(-10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = WDLinLeagueAway.slice(-6);\n            lastTenFormAway = WDLinLeagueAway.slice(-10);\n            leagueOrAll = \"League\";\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else if (WDLinLeagueHome.length >= 6) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = WDLinLeagueHome.slice(-6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = WDLinLeagueAway.slice(-6);\n            lastTenFormAway = Array.from(awayFormString10);\n            leagueOrAll = \"League\";\n\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else if (WDLinLeagueHome.length >= 5) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = Array.from(homeFormString6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = Array.from(awayFormString6);\n            lastTenFormAway = Array.from(awayFormString10);\n            leagueOrAll = \"League\";\n\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else {\n            lastThreeFormHome = [\n              homeFormString5[2],\n              homeFormString5[3],\n              homeFormString5[4],\n            ];\n            lastFiveFormHome = Array.from(homeFormString5);\n            lastSixFormHome = Array.from(homeFormString6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = [\n              awayFormString5[2],\n              awayFormString5[3],\n              awayFormString5[4],\n            ];\n\n            lastFiveFormAway = Array.from(awayFormString5);\n            lastSixFormAway = Array.from(awayFormString6);\n            lastTenFormAway = Array.from(awayFormString10);\n\n            leagueOrAll = \"All\";\n\n            homeAverageGoals = undefined;\n            homeAverageConceded = undefined;\n            awayAverageGoals = undefined;\n            awayAverageConceded = undefined;\n          }\n\n          formRunHome = Array.from(homeFormRun);\n          formRunAway = Array.from(awayFormRun);\n\n          if (\n            teamPositionHome === 0 ||\n            form[0].data[0].season_format !== \"Domestic League\"\n          ) {\n            teamPositionHome = \"N/A\";\n            teamPositionHomeTable = \"N/A\";\n            homePrefix = \"\";\n            homePrefixHomeTable = \"\";\n          }\n\n          if (\n            teamPositionAway === 0 ||\n            form[0].data[0].season_format !== \"Domestic League\"\n          ) {\n            teamPositionAway = \"N/A\";\n            teamPositionAwayTable = \"N/A\";\n            awayPrefix = \"\";\n            awayPrefixAwayTable = \"\";\n          }\n\n          allForm.push({\n            id: match.id,\n            teamIDHome: match.homeId,\n            teamIDAway: match.awayId,\n            leagueId: leagueID,\n            home: {\n              teamName: match.homeTeam,\n              0: {\n                XGOverall: parseFloat(form[0].data[0].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[0].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[0].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[0].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[0].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[0].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[0].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[0].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[0].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[0].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[0].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[0].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[0].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[0].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[0].stats.shotsOnTargetAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[0].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[0].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[0].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[0].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[0].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[0].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[0].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[0].stats.seasonBTTSPercentage_home\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition: homeTeaminLeague.rawPosition\n                  ? homeTeaminLeague.rawPosition\n                  : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n              1: {\n                XGOverall: parseFloat(form[0].data[1].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[1].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[1].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[1].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[1].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[1].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[1].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[1].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[1].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[1].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[1].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[1].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[1].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[1].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[1].stats.shotsOnTargetAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[1].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[1].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[1].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[1].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[1].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[1].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[1].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[1].stats.seasonBTTSPercentage_home\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition: homeTeaminLeague.rawPosition\n                  ? homeTeaminLeague.rawPosition\n                  : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n              2: {\n                XGOverall: parseFloat(form[0].data[2].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[2].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[2].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[2].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[2].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[2].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[2].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[2].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[2].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[2].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[2].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[2].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[2].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[2].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[2].stats.shotsOnTargetAVG_home\n                ),\n                AverageShots: parseFloat(\n                  form[0].data[2].stats.shotsAVG_overall\n                ),\n                AverageShotsHomeOrAway: parseFloat(\n                  form[0].data[2].stats.shotsAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[2].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[2].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[2].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[2].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[2].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[2].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[2].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[2].stats.seasonBTTSPercentage_home\n                ),\n                lastThreeForm: lastThreeFormHome.reverse(),\n                LastFiveForm: lastFiveFormHome.reverse(),\n                LastSixForm: lastSixFormHome.reverse(),\n                LastTenForm: lastTenFormHome.reverse(),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition: homeTeaminLeague.rawPosition\n                  ? homeTeaminLeague.rawPosition\n                  : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                SeasonPPG: homeSeasonPPG,\n                WinPercentage: homeTeamWinPercentageHome,\n                LossPercentage: homeTeamLossPercentageHome,\n                DrawPercentage: homeTeamDrawPercentageHome,\n                formRun: formRunHome,\n                goalDifference:\n                  form[0].data[2].stats.seasonGoalDifference_overall,\n                goalDifferenceHomeOrAway:\n                  form[0].data[2].stats.seasonGoalDifference_home,\n                BttsPercentage:\n                  form[0].data[2].stats.seasonBTTSPercentage_overall,\n                BttsPercentageHomeOrAway:\n                  form[0].data[2].stats.seasonBTTSPercentage_home,\n                CardsTotal: form[0].data[2].stats.cardsTotal_overall,\n                CornersAverage: form[0].data[2].stats.cornersAVG_overall,\n                ScoredBothHalvesPercentage:\n                  form[0].data[2].stats.scoredBothHalvesPercentage_overall,\n                LastMatch: await convertTimestamp(\n                  form[0].data[0].last_updated_match_timestamp\n                ),\n                WDLRecord: WDLinLeagueHome,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n            },\n            away: {\n              teamName: match.awayTeam,\n              0: {\n                XGOverall: parseFloat(form[1].data[0].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[0].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[0].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[0].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[0].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[0].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[0].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[0].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[0].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[0].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[0].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[0].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[0].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[0].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[0].stats.shotsOnTargetAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[0].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[0].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[0].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[0].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[0].stats.seasonBTTSPercentage_away\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n              1: {\n                XGOverall: parseFloat(form[1].data[1].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[1].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[1].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[1].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[1].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[1].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[1].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[1].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[1].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[1].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[1].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[1].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[1].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[1].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[1].stats.shotsOnTargetAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[1].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[1].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[1].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[1].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[1].stats.seasonBTTSPercentage_away\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n              2: {\n                XGOverall: parseFloat(form[1].data[2].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[2].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[2].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[2].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[2].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[2].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[2].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[2].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[2].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[2].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[2].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[2].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[2].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[2].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[2].stats.shotsOnTargetAVG_away\n                ),\n                AverageShots: parseFloat(\n                  form[1].data[2].stats.shotsAVG_overall\n                ),\n                AverageShotsHomeOrAway: parseFloat(\n                  form[1].data[2].stats.shotsAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[2].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[2].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[2].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[2].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[2].stats.seasonBTTSPercentage_away\n                ),\n                lastThreeForm: lastThreeFormAway.reverse(),\n                LastFiveForm: lastFiveFormAway.reverse(),\n                LastSixForm: lastSixFormAway.reverse(),\n                LastTenForm: lastTenFormAway.reverse(),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                SeasonPPG: awaySeasonPPG,\n                WinPercentage: awayTeamWinPercentageAway,\n                LossPercentage: awayTeamLossPercentageAway,\n                DrawPercentage: awayTeamDrawPercentageAway,\n                formRun: formRunAway,\n                goalDifference:\n                  form[1].data[2].stats.seasonGoalDifference_overall,\n                goalDifferenceHomeOrAway:\n                  form[1].data[2].stats.seasonGoalDifference_away,\n                BttsPercentage:\n                  form[1].data[2].stats.seasonBTTSPercentage_overall,\n                BttsPercentageHomeOrAway:\n                  form[1].data[2].stats.seasonBTTSPercentage_away,\n                CardsTotal: form[1].data[2].stats.cardsTotal_overall,\n                CornersAverage: form[1].data[2].stats.cornersAVG_overall,\n                ScoredBothHalvesPercentage:\n                  form[1].data[2].stats.scoredBothHalvesPercentage_overall,\n                LastMatch: await convertTimestamp(\n                  form[1].data[0].last_updated_match_timestamp\n                ),\n                WDLRecord: WDLinLeagueAway,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n            },\n          });\n        }\n\n        match.homeBadge = fixture.home_image;\n        match.awayBadge = fixture.away_image;\n\n        match.homePpg = fixture.home_ppg.toFixed(2);\n        match.awayPpg = fixture.away_ppg.toFixed(2);\n\n        match.lastFiveFormHome = lastFiveFormHome;\n        match.lastFiveFormAway = lastFiveFormAway;\n\n        match.homeRawPosition = homeTeaminLeague.rawPosition;\n        match.awayRawPosition = awayTeaminLeague.rawPosition;\n\n        match.homeTeamHomePosition = `${teamPositionHomeTable}${homePrefixHomeTable}`;\n        match.awayTeamAwayPosition = `${teamPositionAwayTable}${awayPrefixAwayTable}`;\n\n        match.homeTeamHomePositionRaw = teamPositionHomeTable;\n        match.awayTeamAwayPositionRaw = teamPositionAwayTable;\n\n        match.homeTeamWinPercentage = homeTeamWinPercentageHome;\n        match.awayTeamWinPercentage = awayTeamWinPercentageAway;\n\n        match.homeTeamLossPercentage = homeTeamLossPercentageHome;\n        match.awayTeamLossPercentage = awayTeamLossPercentageAway;\n\n        match.homeTeamDrawPercentage = homeTeamDrawPercentageHome;\n        match.awayTeamDrawPercentage = awayTeamDrawPercentageAway;\n        match.status = fixture.status;\n        match.over25Odds = fixture.odds_ft_over25;\n        match.btts_potential = fixture.btts_potential;\n        match.game = match.homeTeam + \" v \" + match.awayTeam;\n        match.stadium = fixture.stadium_name;\n        match.homeGoals = fixture.homeGoalCount;\n        match.awayGoals = fixture.awayGoalCount;\n\n        match.expectedGoalsHomeToDate = fixture.team_a_xg_prematch;\n        match.expectedGoalsAwayToDate = fixture.team_b_xg_prematch;\n        match.game_week = fixture.game_week;\n\n        if (match.status !== \"canceled\" || match.status !== \"suspended\") {\n          matches.push(match);\n          await createFixture(match, false);\n        }\n      }\n\n      if (matches.length > 0) {\n        ReactDOM.render(\n          <Fragment>\n            <Button\n              text={\"Get Predictions & League stats\"}\n              onClickEvent={() => getScorePrediction(day)}\n              className={\"GeneratePredictions\"}\n            />\n            <div className=\"Version\">Prediction engine v4.2.1 (26/04/24)</div>\n            <Collapsable\n              buttonText={\"Filters\"}\n              element={\n                <div className=\"FilterContainer\">\n                  <h6>\n                    Use the below filters to remove predictions that don't meet\n                    the set criteria. These will be greyed out and not included\n                    in multi-builders and ROI stats\n                  </h6>\n                  <h6>Goals for/against differential filter (BETA)</h6>\n                  <div>\n                    I'm looking for tips where the goal differential between\n                    teams is at least...\n                  </div>\n                  <SlideDiff\n                    value=\"0\"\n                    text=\"all games\"\n                    useCase=\"gd\"\n                    lower=\"0\"\n                    upper=\"30\"\n                  ></SlideDiff>\n                  <h6>\n                    Goals for/against home or away differential filter (BETA)\n                  </h6>\n                  <div>\n                    I'm looking for tips where the goal differential (home or\n                    away only) between teams is at least...\n                  </div>\n                  <SlideDiff\n                    value=\"0\"\n                    text=\"all games\"\n                    useCase=\"gdHorA\"\n                    lower=\"0\"\n                    upper=\"30\"\n                  ></SlideDiff>\n                  <Fragment>\n                    <h6>XG for/against differential filter (BETA)</h6>\n                    <div>\n                      I'm looking for tips where the XG differential between\n                      teams is at least...\n                    </div>\n                    <SlideDiff\n                      value=\"0\"\n                      text=\"all games\"\n                      useCase=\"xg\"\n                      lower=\"0\"\n                      upper=\"30\"\n                    ></SlideDiff>\n                  </Fragment>\n                  <Fragment>\n                    <h6>Last 10 points differential filter (BETA)</h6>\n                    <div>\n                      I'm looking for tips where the points differential between\n                      teams is at least...\n                    </div>\n                    <SlideDiff\n                      value=\"0\"\n                      text=\"all games\"\n                      useCase=\"last10\"\n                      lower=\"0\"\n                      upper=\"30\"\n                    ></SlideDiff>\n                  </Fragment>\n                  <Fragment>\n                    <h6>Choose your risk profile</h6>\n                    <div>\n                      I'm looking for tips where the odds are between...\n                    </div>\n                    <Slide value=\"1\" text=\"all games\"></Slide>\n                  </Fragment>\n                </div>\n              }\n            />\n            ,\n          </Fragment>,\n          document.getElementById(\"GeneratePredictions\")\n        );\n      }\n\n      // }\n    }\n\n    ReactDOM.render(\n      <div>\n        <div className=\"LoadingText\"></div>\n      </div>,\n      document.getElementById(\"Loading\")\n    );\n\n    async function updateResults(bool) {\n      console.log(\"updating results\");\n      if (allLeagueResultsArrayOfObjects.length > 0 && bool === true) {\n        await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}results`, {\n          method: \"DELETE\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }).then(async () => {\n          await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}results`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(allLeagueResultsArrayOfObjects),\n          });\n        });\n      } else {\n        console.log(\"EMPTY RESULTS\");\n      }\n    }\n\n    if (!isStoredLocally) {\n      await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}allForm/${date}`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ allForm }),\n      });\n      await updateResults(true);\n    }\n    if (!leaguesStored) {\n      await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${todaysDate}`,\n        {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ leagueArray }),\n        }\n      );\n    }\n    // const allFixtures = await RenderAllFixtures(matches, false)\n    ReactDOM.render(\n      <RenderAllFixtures matches={matches} result={false} bool={false} />,\n      document.getElementById(\"FixtureContainer\")\n    );\n    // ReactDOM.render(<RenderAllFixtures matches={matches} bool={false}/>),document.getElementById(\"FixtureContainer\")\n    setTimeout(() => {\n      isFunctionRunning = false;\n    }, 3000);\n  }\n}\n","import React from \"react\";\n\nfunction HeadToHead(props) {\n  return (\n    <ul className={props.className} style={props.style}>\n      <li key=\"Stadium\" className=\"Stadium\" data-cy={props.name + \"Stadium\"}>\n        {`Venue - ${props.stadium}`}\n      </li>\n      <div className=\"KeyStatsOne\">\n      <li key=\"h2h\" className=\"h2h\" data-cy={props.name + \"h2h\"}>\n        {`Matches played: ${props.matches}`}\n      </li>\n      <li key=\"homeWins\" className=\"homeWins\" data-cy={props.name + \"homeWins\"}>\n        {`${props.homeTeam} wins: ${props.homeWins}`}\n      </li>\n      <li key=\"awayWins\" className=\"awayWins\" data-cy={props.name + \"awayWins\"}>\n        {`${props.awayTeam} wins: ${props.awayWins}`}\n      </li>\n      <li key=\"draws\" className=\"draws\" data-cy={props.name + \"draws\"}>\n        {`Draws: ${props.draws}`}\n      </li>\n      </div>\n      <div className=\"KeyStatsTwo\">\n      <li\n        key=\"averageGoals\"\n        className=\"averageGoals\"\n        data-cy={props.name + \"averageGoals\"}\n      >\n        {`Average goals in fixture: ${props.averageGoals}`}\n      </li>\n      <li\n        key=\"bestHomeOdds\"\n        className=\"bestHomeOdds\"\n        data-cy={props.name + \"bestHomeOdds\"}\n      >\n        {`Best oods for home win @: ${props.bestHomeOdds}`}\n      </li>\n      <li\n        key=\"bestAwayOdds\"\n        className=\"bestAwayOdds\"\n        data-cy={props.name + \"bestAwayOdds\"}\n      >\n        {`Best oods for away win @: ${props.bestAwayOdds}`}\n      </li>\n      </div>\n      <li\n        key=\"lastGameDetail\"\n        className=\"LastGameDetail\"\n        data-cy={props.name + \"Last\"}\n      >\n        {`Last meeting - ${props.lastGameStadiumName} ${props.lastGameDate}`}\n      </li>\n      <div className=\"LastGameOverview\">\n        <div\n          key=\"lastGame\"\n          className=\"LastGameHome\"\n          data-cy={props.name + \"LastGame\"}\n        >\n          {`${props.lastGameHomeTeam}`}\n        </div>\n        <span className=\"LastGameScore\">{`${props.lastGameHomeGoals}`}</span>\n        <span className=\"LastGameScore\">{`${props.lastGameAwayGoals}`}</span>\n        <div className=\"LastGameAway\">{`${props.lastGameAwayTeam}`}</div>\n      </div>\n\n      <li\n        key=\"secondToLastGameDetail\"\n        className=\"secondToLastGameDetail\"\n        data-cy={props.name + \"secondToLast\"}\n      >\n        {`Second to last meeting - ${props.secondToLastGameStadiumName} ${props.secondToLastGameDate}`}\n      </li>\n      <div className=\"LastGameOverview\">\n        <div\n          key=\"lastGame\"\n          className=\"LastGameHome\"\n          data-cy={props.name + \"LastGame\"}\n        >\n          {`${props.secondToLastGameHomeTeam}`}\n        </div>\n        <span className=\"LastGameScore\">{`${props.secondToLastGameHomeGoals}`}</span>\n        <span className=\"LastGameScore\">{`${props.secondToLastGameAwayGoals}`}</span>\n        <div className=\"LastGameAway\">\n          {`${props.secondToLastGameAwayTeam}`}\n        </div>\n      </div>\n    </ul>\n  );\n}\n\nexport default HeadToHead;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    // backgroundColor: \"#dedddd\",\n    padding: 10,\n    textAlign: \"center\",\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    // border: \"none\",\n    margin: \"none\",\n    color: 'white',\n    lineHeight: '2em',\n    backgroundColor: '#030061',\n  },\n  body: {\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    padding: 10,\n    color: 'white',\n    // border: \"none\",\n    margin: \"none\",\n    backgroundColor: '#030061',\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#030061\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#030052\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\n\nexport default function CustomizedTables(props) {\n\n\n  return (\n    <TableContainer className=\"StatsTable\">\n      <Table aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Stat</StyledTableCell>\n            <StyledTableCell>H2H history</StyledTableCell>\n            <StyledTableCell>XGTipping forecast</StyledTableCell>\n            <StyledTableCell>Odds (yes)</StyledTableCell>\n            <StyledTableCell>Odds (no)</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        <StyledTableRow key=\"O05\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 0.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o05Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o05Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u05Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O15\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 1.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o15Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o15Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u15Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O25\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 2.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o25Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o25Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u25Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O35\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 3.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o35Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o35Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u35Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"BTTS\" className=\"BTTSStats\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              BTTS %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.BTTSStat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSForecast}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSOdds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSOddsNo}</StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport HeadToHead from \"../components/HeadToHead\";\nimport { Fragment } from \"react\";\nimport CustomizedTables from \"../components/Table\";\n\nexport async function getTeamStats(\n  id,\n  home,\n  away,\n  homeBTTS,\n  homeOnlyBTTS,\n  awayBTTS,\n  awayOnlyBTTS\n) {\n  let identifier = id;\n  let bestHomeOdds;\n  let bestHomeOddsProvider;\n  let bestAwayOdds;\n  let bestAwayOddsProvider;\n\n  let match = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}match/${identifier}`\n  );\n  await match.json().then(async (match) => {\n    let matchArr = match.data.h2h.previous_matches_ids;\n    let previousMatchDetails;\n    let secondToPreviousMatchDetails;\n\n    let oddsComparisonHomeArray = [];\n    let oddsComparisonAwayArray = [];\n\n    if (match.data.odds_comparison) {\n      oddsComparisonHomeArray = match.data.odds_comparison[\"FT Result\"][1];\n      oddsComparisonAwayArray = match.data.odds_comparison[\"FT Result\"][2];\n\n      let sortedHomeOdds = Object.entries(oddsComparisonHomeArray).sort(\n        (a, b) => b[1] - a[1]\n      );\n      let sortedAwayOdds = Object.entries(oddsComparisonAwayArray).sort(\n        (a, b) => b[1] - a[1]\n      );\n\n      bestHomeOddsProvider = sortedHomeOdds[0][0];\n      bestHomeOdds = sortedHomeOdds[0][1];\n      bestAwayOddsProvider = sortedAwayOdds[0][0];\n      bestAwayOdds = sortedAwayOdds[0][1];\n    } else {\n      bestHomeOddsProvider = \"N/A\";\n      bestHomeOdds = \"N/A\";\n      bestAwayOddsProvider = \"N/A\";\n      bestAwayOdds = \"N/A\";\n    }\n\n    async function getBTTSPercentage(\n      homeToal,\n      home,\n      awayTotal,\n      away,\n      fixtureHistory\n    ) {\n      let total = homeToal + home + awayTotal + away + fixtureHistory;\n      return total / 5;\n    }\n\n    async function getFairOdds(impliedProbability) {\n      let impliedProbabilityDivided = impliedProbability / 100;\n      return (1 / impliedProbabilityDivided).toFixed(2);\n    }\n\n    if (match.data.h2h.previous_matches_results.totalMatches > 0) {\n      matchArr.sort((a, b) => b.date_unix - a.date_unix);\n      let lastMatch = matchArr[0].id;\n      let secondMatchExists = true;\n      let secondToLastMatch =\n        matchArr[1] !== undefined ? matchArr[1].id : false;\n\n      let previousMatch = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}match/${lastMatch}`\n      );\n      let dateObject;\n      let date;\n      let date2;\n      await previousMatch.json().then(async (game) => {\n        previousMatchDetails = game.data;\n        const unixTimestamp = previousMatchDetails.date_unix;\n        const milliseconds = unixTimestamp * 1000;\n        dateObject = new Date(milliseconds);\n        date = `${dateObject.getDate()}/${\n          dateObject.getMonth() + 1\n        }/${dateObject.getFullYear()}`;\n\n        let secondToPreviousMatch;\n        let dateObject2;\n\n        if (secondMatchExists !== false) {\n          secondToPreviousMatch = await fetch(\n            `${process.env.REACT_APP_EXPRESS_SERVER}match/${secondToLastMatch}`\n          );\n          await secondToPreviousMatch.json().then((game) => {\n            secondToPreviousMatchDetails = game.data;\n            const unixTimestamp = secondToPreviousMatchDetails.date_unix;\n            const milliseconds = unixTimestamp * 1000;\n            dateObject2 = new Date(milliseconds);\n            date2 = `${dateObject2.getDate()}/${\n              dateObject2.getMonth() + 1\n            }/${dateObject2.getFullYear()}`;\n          });\n        }\n      });\n\n      const BTTSForecast = await getBTTSPercentage(\n        homeBTTS,\n        homeOnlyBTTS,\n        awayBTTS,\n        awayOnlyBTTS,\n        match.data.h2h.betting_stats.bttsPercentage\n      );\n      const fairOddsBTTSYes = await getFairOdds(BTTSForecast);\n      const fairOddsBTTSNo = await getFairOdds(100 - BTTSForecast);\n\n      ReactDOM.render(\n        <Fragment>\n          <h3>Fixture history</h3>\n          <HeadToHead\n            className={\"PreviousMatchStats\"}\n            homeTeam={home}\n            awayTeam={away}\n            stadium={match.data.stadium_name}\n            matches={match.data.h2h.previous_matches_results.totalMatches}\n            homeWins={match.data.h2h.previous_matches_results.team_a_wins}\n            awayWins={match.data.h2h.previous_matches_results.team_b_wins}\n            draws={match.data.h2h.previous_matches_results.draw}\n            averageGoals={match.data.h2h.betting_stats.avg_goals}\n            bestHomeOdds={`${bestHomeOddsProvider} - ${bestHomeOdds}`}\n            bestAwayOdds={`${bestAwayOddsProvider} - ${bestAwayOdds}`}\n            lastGameStadiumName={\n              previousMatchDetails.stadium_name\n                ? previousMatchDetails.stadium_name\n                : \"-\"\n            }\n            lastGameHomeGoals={\n              previousMatchDetails.homeGoalCount !== undefined\n                ? previousMatchDetails.homeGoalCount\n                : \"-\"\n            }\n            lastGameAwayGoals={\n              previousMatchDetails.awayGoalCount !== undefined\n                ? previousMatchDetails.awayGoalCount\n                : \"-\"\n            }\n            lastGameHomeTeam={\n              previousMatchDetails.home_name\n                ? previousMatchDetails.home_name\n                : \"-\"\n            }\n            lastGameAwayTeam={\n              previousMatchDetails.away_name\n                ? previousMatchDetails.away_name\n                : \"-\"\n            }\n            lastGameDate={!isNaN(date) ? date : \"-\"}\n            secondToLastGameStadiumName={\n              secondToPreviousMatchDetails.stadium_name\n                ? secondToPreviousMatchDetails.stadium_name\n                : \"-\"\n            }\n            secondToLastGameHomeGoals={\n              secondToPreviousMatchDetails.homeGoalCount !== undefined\n                ? secondToPreviousMatchDetails.homeGoalCount\n                : \"-\"\n            }\n            secondToLastGameAwayGoals={\n              secondToPreviousMatchDetails.awayGoalCount !== undefined\n                ? secondToPreviousMatchDetails.awayGoalCount\n                : \"-\"\n            }\n            secondToLastGameHomeTeam={\n              secondToPreviousMatchDetails.home_name\n                ? secondToPreviousMatchDetails.home_name\n                : \"-\"\n            }\n            secondToLastGameAwayTeam={\n              secondToPreviousMatchDetails.away_name\n                ? secondToPreviousMatchDetails.away_name\n                : \"-\"\n            }\n            secondToLastGameDate={!isNaN(date2) ? date2 : \"-\"}\n          ></HeadToHead>\n          <CustomizedTables\n            o05Stat={match.data.h2h.betting_stats.over05Percentage}\n            o15Stat={match.data.h2h.betting_stats.over15Percentage}\n            o15Forecast={match.data.o15_potential}\n            o05Odds={match.data.odds_ft_over05}\n            u05Odds={match.data.odds_ft_under05}\n            o15Odds={match.data.odds_ft_over15}\n            u15Odds={match.data.odds_ft_under15}\n            o25Stat={match.data.h2h.betting_stats.over25Percentage}\n            o25Forecast={match.data.o25_potential}\n            o25Odds={match.data.odds_ft_over25}\n            u25Odds={match.data.odds_ft_under25}\n            o35Stat={match.data.h2h.betting_stats.over35Percentage}\n            o35Forecast={match.data.o35_potential}\n            o35Odds={match.data.odds_ft_over35}\n            u35Odds={match.data.odds_ft_under35}\n            BTTSStat={match.data.h2h.betting_stats.bttsPercentage}\n            BTTSForecast={`${BTTSForecast}%`}\n            BTTSOdds={`${match.data.odds_btts_yes}\\n Fair odds: ${fairOddsBTTSYes}`}\n            BTTSOddsNo={`${match.data.odds_btts_no}\\n Fair odds: ${fairOddsBTTSNo}`}\n            CornersStat={\"–\"}\n            CornersForecast={match.data.corners_potential}\n            CornersOdds={match.data.odds_corners_over_105}\n          />\n        </Fragment>,\n        document.getElementById(`H2HStats${identifier}`)\n      );\n    } else {\n      ReactDOM.render(\n        <div>No fixture history found</div>,\n        document.getElementById(`H2HStats${identifier}`)\n      );\n    }\n  });\n}\n","async function getOverOrUnderText(xgSum) {\n  let overUnderAchievingSum = xgSum;\n  let text;\n  switch (true) {\n    case overUnderAchievingSum > 1.5:\n      text =\n        \"Underachieving drastically against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > 1.25 && overUnderAchievingSum <= 1.5:\n      text =\n        \"Underachieving to a large degree against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > 1 && overUnderAchievingSum <= 1.25:\n      text = \"Underachieving against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > 0.75 && overUnderAchievingSum <= 1:\n      text =\n        \"Underachieving to a small degree against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > 0.4 && overUnderAchievingSum <= 0.75:\n      text =\n        \"Underachieving slighly against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > -0.4 && overUnderAchievingSum <= 0.4:\n      text =\n        \"Roughly tracking on par with their expected goal difference.\";\n      break;\n\n    case overUnderAchievingSum < -0.4 && overUnderAchievingSum >= -0.75:\n      text =\n        \"Overachieving slighly against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum < -0.75 && overUnderAchievingSum >= -1:\n      text =\n        \"Overachieving to a small degree against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum < -1 && overUnderAchievingSum >= -1.25:\n      text = \"Overachieving against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum < -1.25 && overUnderAchievingSum >= -1.5:\n      text =\n        \"Overachieving to a large degree against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum < -1.5:\n      text =\n        \"Overachieving drastically against their expected goal difference.\";\n      break;\n    default:\n      text = \"\";\n      break;\n  }\n  return text;\n}\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nasync function getXGDifferential(xgFor, xgAgainst, goalsFor, goalsAgainst) {\n  let xgDiff = xgFor - xgAgainst;\n  let goalDiff = goalsFor - goalsAgainst;\n  let compareXgAndGoalDiff = await diff(xgDiff, goalDiff);\n\n  return compareXgAndGoalDiff;\n}\n\nasync function getAttackingSummary(goalsRecent, goalsLongTerm) {\n\n  let text;\n  if (goalsRecent >= 3) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Free scoring and improving in front of goal recently.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Free scoring and consistent in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Free scoring but less so recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 3 && goalsRecent >= 2) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text =\n          \"Impressive scoring stats and improving in front of goal recently.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Impressive scoring stats and consistent in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Impressive scoring stats but less so recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 2 && goalsRecent >= 1) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Decent scoring stats and improving in front of goal recently.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Decent scoring stats and consistent in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Decent scoring stats but less so recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 1 && goalsRecent > 0) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Poor scoring stats but improving in front of goal recently.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Poor scoring stats and consistently poor in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Poor scoring stats showing no signs of improvement.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent === 0) {\n    switch (true) {\n      case goalsRecent === 0:\n        text = \"Woeful goal stats in recent games.\";\n        break;\n      default:\n        text = \"\";\n        break;\n    }\n  }\n  return text;\n}\n\nasync function getDefenceSummary(cleansheetStat) {\n  let text;\n  switch (true) {\n    case cleansheetStat > 80:\n      text = `Incredibly strong defensively, with ${cleansheetStat}% of their games ending in a cleansheet`;\n      break;\n    case cleansheetStat > 60 && cleansheetStat <= 80:\n      text = `Very strong defensively, with ${cleansheetStat}% of their games ending in a cleansheet`;\n      break;\n    case cleansheetStat > 40 && cleansheetStat <= 60:\n      text = `Defensively impressive, with ${cleansheetStat}% of their games ending in a cleansheet`;\n      break;\n    case cleansheetStat > 20 && cleansheetStat <= 40:\n      text = `Defensively, ${cleansheetStat}% of their games have ended in a cleansheet`;\n      break;\n    case cleansheetStat > 1 && cleansheetStat <= 20:\n      text = `Defensively frail, with only ${cleansheetStat}% of their games ending in a cleansheet`;\n      break;\n      case cleansheetStat === 0:\n        text = `Defensively weak, with ${cleansheetStat}% of their games ending in a cleansheet`;\n        break;\n    default:\n      break;\n  }\n  return text;\n}\n\nasync function GenerateFormSummary(form, lastx, recentForm) {\n  let text;\n  // let six = lastx[2];\n  let ten = lastx[1];\n  let five = lastx[0];\n\n  let xgSum = await getXGDifferential(\n    form.XGOverall,\n    form.XGAgainstAvgOverall,\n    form.ScoredOverall / 10,\n    form.ConcededOverall / 10\n  );\n  let xgText = await getOverOrUnderText(xgSum);\n  let attackString = await getAttackingSummary(\n    form.last5Goals,\n    form.last10Goals\n  );\n  let defenceString = await getDefenceSummary(form.CleanSheetPercentage);\n  let pointsAverageTotal =\n    (parseFloat(five) + parseFloat(ten)) / 2;\n\n  if (pointsAverageTotal >= 2.6) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Outstanding recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Outstanding recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Outstanding recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 2.3) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Excellent recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Excellent recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Excellent recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 2) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Very good recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Very good recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Very good recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 1.7) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Good recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Good recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Good recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 1.4) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Fairly good recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Fairly good recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Fairly good recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 1.1) {\n    console.log(2);\n    switch (true) {\n      case five > ten:\n        text =\n          \"Average recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Average recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Average recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 0.8) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Poor recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Poor recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Poor recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 0.5) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Very poor recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Very poor recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Very poor recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal < 0.5) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Terrible recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Terrible recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Terrible recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else {\n    console.log(pointsAverageTotal);\n  }\n  return text + ` ${xgText} ${attackString} ${defenceString}`;\n}\n\nexport default GenerateFormSummary;\n","// import { light } from \"@material-ui/core/styles/createPalette\";\n// import { toBePartiallyChecked } from \"@testing-library/jest-dom/dist/matchers\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  ArcElement,\n  LineElement,\n  Filler,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Line, Radar, Bar } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  ArcElement,\n  Filler,\n  BarElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport function Chart(props) {\n  let length;\n  let depth;\n\n  if (props.type === \"Points over time\") {\n    length = props.data1.length * 3;\n    depth = 0;\n  } else if (props.type === \"Rolling average points over last 10\") {\n    length = Math.abs(props.height);\n    depth = 0;\n  } else if (Math.abs(props.height) > Math.abs(props.depth)) {\n    length = Math.abs(props.height);\n    depth = -Math.abs(props.height);\n  } else if (Math.abs(props.height) < Math.abs(props.depth)) {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  } else {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  }\n\n  const options = {\n    color: \"black\",\n    responsive: true,\n    aspectRatio: 1.2,\n    maintainAspectRatio: true,\n    layout: {\n      padding: 3,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    scales: {\n      y: {\n        suggestedMin: depth,\n        suggestedMax: length,\n        // suggestedMax: Math.max(...props.data1) > 3 ? Math.max(...props.data1) : 3,\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          font: {\n            size: 12,\n          },\n        },\n      },\n      x: {\n        title: {\n          display: false,\n          text: \"Last X Games\",\n          font: {\n            size: 14,\n          },\n        },\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          display: false,\n          font: {\n            size: 14,\n          },\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 5,\n        },\n      },\n      title: {\n        display: true,\n        text: props.type,\n        font: {\n          size: 14,\n          color: \"black\",\n        },\n      },\n    },\n  };\n\n  const labels = Array.from(props.data1.keys());\n\n  let data = {\n    labels,\n    datasets: [\n      {\n        label: props.team1,\n        font: {\n          color: \"black\",\n        },\n        data: props.data1,\n        borderColor: \"#030061\",\n        borderWidth: 2,\n        backgroundColor: \"#030061\",\n        tension: props.tension,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        borderColor: \"#970d00\",\n        borderWidth: 2,\n        backgroundColor: \"#970d00\",\n        tension: props.tension,\n      },\n    ],\n  };\n\n  return <Line options={options} data={data} />;\n}\n\nexport function RadarChart(props) {\n  const options = {\n    color: \"black\",\n    scales: {\n      r: {\n        angleLines: {\n          display: false,\n        },\n        suggestedMin: 0,\n        suggestedMax: 1,\n        ticks: {\n          precision: 0,\n          display: false,\n        },\n        // grid: {\n        //     circular: true,\n        //   }\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 10,\n        },\n      },\n      title: {\n        display: true,\n        text: props.title,\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  let data = {\n    labels: [\"Attack rating\", \"Defence rating\", \"Ball retention\", \"XG For\", \"XG Against\", \"Directness\", \"Attacking precision\"],\n    datasets: [\n      {\n        label: props.team1,\n        data: props.data,\n        fill: true,\n        backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n        borderColor: \"#030061\",\n        pointBackgroundColor: \"#030061\",\n        pointBorderColor: \"#fff\",\n        pointHoverBackgroundColor: \"#fff\",\n        pointHoverBorderColor: \"rgb(255, 99, 132)\",\n        borderWidth: 2,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        fill: true,\n        backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n        borderColor: \"#970d00\",\n        pointBackgroundColor: \"#970d00\",\n        pointBorderColor: \"#fff\",\n        pointHoverBackgroundColor: \"#fff\",\n        pointHoverBorderColor: \"rgb(54, 162, 235)\",\n        borderWidth: 2,\n      },\n    ],\n  };\n\n  return <Radar options={options} data={data} />;\n}\n\nexport function BarChart(props) {\n  const datasetOne = props.data1;\n  const datasetTwo = props.data2;\n  const sum = datasetTwo.map(function (num, idx) {\n    return num - datasetOne[idx];\n  });\n\n  const max = Math.max(...sum);\n  const min = Math.min(...sum);\n\n  const largest = findLargestNum(max, min);\n\n  function findLargestNum(numOne, numTwo) {\n    const tempArr = [];\n    const firstNum = Math.abs(numOne);\n    const secondNum = Math.abs(numTwo);\n    tempArr.push(firstNum, secondNum);\n\n    return Math.max(...tempArr);\n  }\n\n  const options = {\n    indexAxis: \"y\",\n    // Elements options apply to all of the options unless overridden in a dataset\n    // In this case, we are setting the border of each horizontal bar to be 2px wide\n    aspectRatio: 1.3,\n    elements: {\n      bar: {\n        borderWidth: 2,\n      },\n    },\n    scales: {\n      x: {\n        min: -4,\n        max: 4,\n        ticks: {\n          display: false,\n        },\n      },\n      y: {\n        ticks: {\n          font: {\n            size: 10,\n          },\n        },\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: false,\n      },\n      title: {\n        display: true,\n        text: props.text,\n        size: 14\n      },\n    },\n  };\n\n  const labels = [\n    \"Highest Goals\",\n    \"Fewest Conceeded\",\n    \"PPG\",\n    \"Highest XG\",\n    \"Fewest XG Conceeded\",\n    \"Shots On Target\",\n    \"Dangerous Attacks\",\n    \"Av. Possession\",\n    \"Home/Away Goal Diff\",\n    \"Corners\",\n  ];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        // label: 'Dataset 1',\n        legend: {\n          display: false,\n        },\n        data: sum,\n        backgroundColor(context) {\n          const index = context.dataIndex;\n          const value = context.dataset.data[index];\n          return value < 0 ? \"#030061\" : \"#970d00\";\n        },\n      },\n    ],\n  };\n\n  return <Bar options={options} data={data} />;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SofaLineupsWidget = ({ id, team1, team2, time, homeGoals, awayGoals }) => {\n  const iframeSrc = `https://widgets.sofascore.com/embed/lineups?id=${id}&widgetBackground=Gray&v=2`;\n\n  let differenceInSeconds, minutes\n  const currentTime = new Date().getTime() / 1000;\n  // Calculate the difference in seconds\n    if(time > 0){\n        differenceInSeconds = time - currentTime;\n        minutes = Math.floor(differenceInSeconds / 60);\n    } else {\n        minutes = -99999999\n    }\n\n\n  console.log(team1);\n\n  if(team1 === \"N/A\") {\n    return <h6>No lineups available for this match yet</h6>\n  } else if (minutes > 60) {\n    return (\n      <div>\n        <h6>Predicted lineups</h6>\n        <iframe\n          id={`sofa-lineups-embed-${id}`}\n          src={iframeSrc}\n          style={{\n            height: \"721px\",\n            maxWidth: \"800px\",\n            width: \"100%\",\n            border: \"0\",\n          }}\n          scrolling=\"no\"\n          title=\"SofaScore Lineups\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n      </div>\n    );\n  } else if (minutes < 60 && minutes > 0) {\n    return (\n      <div>\n        <h6>Lineups</h6>\n        <iframe\n          id={`sofa-lineups-embed-${id}`}\n          src={iframeSrc}\n          style={{\n            height: \"721px\",\n            maxWidth: \"800px\",\n            width: \"100%\",\n            border: \"0\",\n          }}\n          scrolling=\"no\"\n          title=\"SofaScore Lineups\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n      </div>\n    );\n  } else if (minutes < 0) {\n    return (\n      <div>\n        <div className=\"CurrentScore\">Score: {`${team1}: ${homeGoals} - ${team2}: ${awayGoals}`}</div>\n        <span>Score not live updated</span>\n        <h6 className=\"AttackingMomentum\">Live attacking momentum and goals</h6>\n        <iframe\n          width=\"100%\"\n          height=\"194\"\n          src={`https://widgets.sofascore.com/embed/attackMomentum?id=${id}&widgetBackground=Gray&v=2`}\n          frameborder=\"0\"\n          scrolling=\"no\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n        <h6>Lineups and in-play ratings</h6>\n        <iframe\n          id={`sofa-lineups-embed-${id}`}\n          src={iframeSrc}\n          style={{\n            height: \"721px\",\n            maxWidth: \"800px\",\n            width: \"100%\",\n            border: \"0\",\n          }}\n          scrolling=\"no\"\n          title=\"SofaScore Lineups\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n      </div>\n    );\n  }\n  else {\n    return <h6>{`Lineups coming in approximately ${minutes - 60} minutes`}</h6>;\n  }\n};\n\n\nSofaLineupsWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  team1: PropTypes.string.isRequired,\n  team2: PropTypes.string.isRequired,\n};\n\nexport default SofaLineupsWidget;\n","import ReactDOM from \"react-dom\";\nimport { Button } from \"../components/Button\";\nimport Stats from \"../components/createStatsDiv\";\nimport Div from \"../components/Div\";\nimport { allForm } from \"../logic/getFixtures\";\nimport { getTeamStats } from \"../logic/getTeamStats\";\nimport { getPointsFromLastX } from \"../logic/getScorePredictions\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport GenerateFormSummary from \"../logic/compareFormTrend\";\nimport { Chart, RadarChart, BarChart } from \"../components/Chart\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { clicked } from \"../logic/getScorePredictions\";\nimport SofaLineupsWidget from \"../components/SofaScore\";\nimport { arrayOfGames } from \"../logic/getFixtures\";\n\nexport async function calculateAttackingStrength(stats) {\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    // averagePossession: 0.15,\n    \"Average Dangerous Attacks\": 0.1,\n    \"Average Shots\": 0.05,\n    \"Average Shots On Target\": 0.15,\n    \"Average Expected Goals\": 0.25,\n    \"Recent XG\": 0.15,\n    \"Average Goals\": 0.25,\n    Corners: 0.05,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    // averagePossession: { min: 25, max: 75 },\n    \"Average Dangerous Attacks\": { min: 25, max: 75 }, // Adjust the max value as needed\n    \"Average Shots\": { min: 4, max: 17 }, // Adjust the max value as needed\n    \"Average Shots On Target\": { min: 2, max: 10 }, // Adjust the max value as needed\n    \"Average Expected Goals\": { min: 0.25, max: 2.75 }, // Adjust the max value as needed\n    \"Recent XG\": { min: 0.25, max: 2.75 }, // Adjust the max value as needed\n    \"Average Goals\": { min: 0.25, max: 2.75 }, // Adjust the max value as needed\n    Corners: { min: 2, max: 9 },\n  };\n\n  // Normalize each metric value and calculate the weighted sum\n  let weightedSum = 0;\n  for (const metric in stats) {\n    if (\n      stats.hasOwnProperty(metric) &&\n      weights.hasOwnProperty(metric) &&\n      ranges.hasOwnProperty(metric)\n    ) {\n      const normalizedValue =\n        (stats[metric] - ranges[metric].min) /\n        (ranges[metric].max - ranges[metric].min);\n      weightedSum += normalizedValue * weights[metric];\n    } else {\n      console.log(metric);\n    }\n  }\n\n  return parseFloat(weightedSum.toFixed(2));\n}\n\nexport async function calculateDefensiveStrength(stats, normalizedValue = 1) {\n  let normValue = normalizedValue;\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    \"Average XG Against\": 0.3,\n    \"Recent XG Against\": 0.15,\n    \"Average Goals Against\": 0.3,\n    \"Average SOT Against\": 0.25,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    \"Average XG Against\": { min: 0.25, max: 2.75 }, // Adjust the max value as needed\n    \"Recent XG Against\": { min: 0.25, max: 2.75 },\n    \"Average Goals Against\": { min: 0.25, max: 2.75 }, // Adjust the max value as needed\n    \"Average SOT Against\": { min: 2, max: 10 },\n  };\n\n  // Normalize each metric value and calculate the weighted sum\n  let weightedSum = 0;\n  for (const metric in stats) {\n    if (\n      stats.hasOwnProperty(metric) &&\n      weights.hasOwnProperty(metric) &&\n      ranges.hasOwnProperty(metric)\n    ) {\n      let val =\n        normValue -\n        (stats[metric] - ranges[metric].min) /\n          (ranges[metric].max - ranges[metric].min);\n      weightedSum += val * weights[metric];\n    }\n  }\n\n  return parseFloat(weightedSum.toFixed(2));\n}\n\nexport async function calculateMetricStrength(metricName, metricValue) {\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    averagePossession: 1,\n    xgFor: 1,\n    xgAgainst: 1,\n    directnessOverall: 1,\n    accuracyOverall: 1,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    averagePossession: { min: 20, max: 80 },\n    xgFor: { min: 0.1, max: 3 },\n    xgAgainst: { min: 0.1, max: 3 },\n    directnessOverall: { min: 0.5, max: 5 },\n    accuracyOverall: { min: 0.5, max: 6.5 },\n  };\n\n  // Ensure the metric is valid and exists in the weights and ranges objects\n  if (\n    !weights.hasOwnProperty(metricName) ||\n    !ranges.hasOwnProperty(metricName)\n  ) {\n    throw new Error(\"Invalid metric name or missing normalization range.\");\n  }\n\n  // Normalize the metric value\n  const normalizedValue =\n    (metricValue - ranges[metricName].min) /\n    (ranges[metricName].max - ranges[metricName].min);\n\n  // Calculate the weighted score\n  const weightedScore = normalizedValue * weights[metricName];\n\n  return parseFloat(weightedScore.toFixed(2));\n}\n\n// export async function getDefenceStrength(goalsAgainst) {\n//   let strength;\n//   switch (true) {\n//     case goalsAgainst >= 2.8:\n//       strength = 1;\n//       break;\n//     case goalsAgainst >= 2.5 && goalsAgainst < 2.8:\n//       strength = 2;\n//       break;\n//     case goalsAgainst >= 2.2 && goalsAgainst < 2.5:\n//       strength = 3;\n//       break;\n//     case goalsAgainst >= 1.9 && goalsAgainst < 2.2:\n//       strength = 4;\n//       break;\n//     case goalsAgainst >= 1.6 && goalsAgainst < 1.9:\n//       strength = 5;\n//       break;\n//     case goalsAgainst >= 1.3 && goalsAgainst < 1.6:\n//       strength = 6;\n//       break;\n//     case goalsAgainst >= 1 && goalsAgainst < 1.3:\n//       strength = 7;\n//       break;\n//     case goalsAgainst >= 0.7 && goalsAgainst < 1:\n//       strength = 8;\n//       break;\n//     case goalsAgainst >= 0.4 && goalsAgainst < 0.7:\n//       strength = 9;\n//       break;\n//     case goalsAgainst < 0.4:\n//       strength = 10;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getPossessionStrength(possession) {\n//   let strength;\n//   switch (true) {\n//     case possession >= 68:\n//       strength = 10;\n//       break;\n//     case possession >= 64 && possession < 68:\n//       strength = 9;\n//       break;\n//     case possession >= 60 && possession < 64:\n//       strength = 8;\n//       break;\n//     case possession >= 56 && possession < 60:\n//       strength = 7;\n//       break;\n//     case possession >= 52 && possession < 56:\n//       strength = 6;\n//       break;\n//     case possession >= 48 && possession < 52:\n//       strength = 5;\n//       break;\n//     case possession >= 44 && possession < 48:\n//       strength = 4;\n//       break;\n//     case possession >= 40 && possession < 44:\n//       strength = 3;\n//       break;\n//     case possession >= 35 && possession < 40:\n//       strength = 2;\n//       break;\n//     case possession < 35:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getShotsStrength(Shots) {\n//   let strength;\n//   switch (true) {\n//     case Shots >= 15:\n//       strength = 10;\n//       break;\n//     case Shots >= 14.25 && Shots < 15:\n//       strength = 9;\n//       break;\n//     case Shots >= 13.5 && Shots < 14.25:\n//       strength = 8;\n//       break;\n//     case Shots >= 12.75 && Shots < 13.5:\n//       strength = 7;\n//       break;\n//     case Shots >= 12 && Shots < 12.75:\n//       strength = 6;\n//       break;\n//     case Shots >= 11.25 && Shots < 12:\n//       strength = 5;\n//       break;\n//     case Shots >= 10.5 && Shots < 11.25:\n//       strength = 4;\n//       break;\n//     case Shots >= 9.75 && Shots < 10.5:\n//       strength = 3;\n//       break;\n//     case Shots >= 9 && Shots < 9.75:\n//       strength = 2;\n//       break;\n//     case Shots < 9:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getShotsStrengthHorA(Shots) {\n//   let strength;\n//   switch (true) {\n//     case Shots >= 19.5:\n//       strength = 10;\n//       break;\n//     case Shots >= 18 && Shots < 19.5:\n//       strength = 9;\n//       break;\n//     case Shots >= 17 && Shots < 18:\n//       strength = 8;\n//       break;\n//     case Shots >= 15.5 && Shots < 17:\n//       strength = 7;\n//       break;\n//     case Shots >= 14 && Shots < 15.5:\n//       strength = 6;\n//       break;\n//     case Shots >= 12.5 && Shots < 14:\n//       strength = 5;\n//       break;\n//     case Shots >= 11 && Shots < 12.5:\n//       strength = 4;\n//       break;\n//     case Shots >= 9.5 && Shots < 11:\n//       strength = 3;\n//       break;\n//     case Shots >= 8 && Shots < 9.5:\n//       strength = 2;\n//       break;\n//     case Shots < 8:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGForStrength(XG) {\n//   let strength;\n//   switch (true) {\n//     case XG >= 2.9:\n//       strength = 10;\n//       break;\n//     case XG >= 2.6 && XG < 2.9:\n//       strength = 9;\n//       break;\n//     case XG >= 2.3 && XG < 2.6:\n//       strength = 8;\n//       break;\n//     case XG >= 2 && XG < 2.3:\n//       strength = 7;\n//       break;\n//     case XG >= 1.7 && XG < 2:\n//       strength = 6;\n//       break;\n//     case XG >= 1.4 && XG < 1.7:\n//       strength = 5;\n//       break;\n//     case XG >= 1.1 && XG < 1.4:\n//       strength = 4;\n//       break;\n//     case XG >= 0.8 && XG < 1.1:\n//       strength = 3;\n//       break;\n//     case XG >= 0.5 && XG < 0.8:\n//       strength = 2;\n//       break;\n//     case XG < 0.5:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGAgainstStrength(XGAgainst) {\n//   let strength;\n//   switch (true) {\n//     case XGAgainst >= 2.9:\n//       strength = 1;\n//       break;\n//     case XGAgainst >= 2.6 && XGAgainst < 2.9:\n//       strength = 2;\n//       break;\n//     case XGAgainst >= 2.3 && XGAgainst < 2.6:\n//       strength = 3;\n//       break;\n//     case XGAgainst >= 2 && XGAgainst < 2.3:\n//       strength = 4;\n//       break;\n//     case XGAgainst >= 1.7 && XGAgainst < 2:\n//       strength = 5;\n//       break;\n//     case XGAgainst >= 1.4 && XGAgainst < 1.7:\n//       strength = 6;\n//       break;\n//     case XGAgainst >= 1.1 && XGAgainst < 1.4:\n//       strength = 7;\n//       break;\n//     case XGAgainst >= 0.8 && XGAgainst < 1.1:\n//       strength = 8;\n//       break;\n//     case XGAgainst >= 0.5 && XGAgainst < 0.8:\n//       strength = 9;\n//       break;\n//     case XGAgainst < 0.5:\n//       strength = 10;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGDifferentialStrength(XGDiff) {\n//   let strength;\n//   switch (true) {\n//     case XGDiff >= 1.5:\n//       strength = 10;\n//       break;\n//     case XGDiff >= 1 && XGDiff < 1.5:\n//       strength = 9;\n//       break;\n//     case XGDiff >= 0.5 && XGDiff < 1:\n//       strength = 8;\n//       break;\n//     case XGDiff >= 0.25 && XGDiff < 0.5:\n//       strength = 7;\n//       break;\n//     case XGDiff > 0 && XGDiff < 0.25:\n//       strength = 6;\n//       break;\n//     case XGDiff <= 0 && XGDiff > -0.25:\n//       strength = 5;\n//       break;\n//     case XGDiff <= -0.25 && XGDiff > -0.5:\n//       strength = 4;\n//       break;\n//     case XGDiff <= -0.5 && XGDiff > -1:\n//       strength = 3;\n//       break;\n//     case XGDiff <= -1 && XGDiff > -1.5:\n//       strength = 2;\n//       break;\n//     case XGDiff <= -1.5:\n//       strength = 1;\n//       break;\n//     default:\n//       console.log(\"default clause triggered\");\n//       break;\n//   }\n//   return strength;\n// }\n\nexport async function getXGtoActualDifferentialStrength(XGDiff) {\n  let strength;\n  switch (true) {\n    case XGDiff >= 1.5:\n      strength = 10;\n      break;\n    case XGDiff >= 1 && XGDiff < 1.5:\n      strength = 9;\n      break;\n    case XGDiff >= 0.5 && XGDiff < 1:\n      strength = 8;\n      break;\n    case XGDiff >= 0.25 && XGDiff < 0.5:\n      strength = 7;\n      break;\n    case XGDiff > 0 && XGDiff < 0.25:\n      strength = 6;\n      break;\n    case XGDiff <= 0 && XGDiff > -0.25:\n      strength = 5;\n      break;\n    case XGDiff <= -0.25 && XGDiff > -0.5:\n      strength = 4;\n      break;\n    case XGDiff <= -0.5 && XGDiff > -1:\n      strength = 3;\n      break;\n    case XGDiff <= -1 && XGDiff > -1.5:\n      strength = 2;\n      break;\n    case XGDiff <= -1.5:\n      strength = 1;\n      break;\n    default:\n      strength = 1;\n      break;\n  }\n  return strength;\n}\n\nlet rollingGoalDiffTotalHome = [];\nlet rollingGoalDiffTotalAway = [];\n\nexport async function createStatsDiv(game, displayBool) {\n  console.log(displayBool);\n  if (game.status !== \"void\") {\n    // takes the displayBool boolean from the fixture onClick and sets the styling of the stats div from there\n    function styling(testBool) {\n      let bool = testBool;\n      if (bool === true && clicked === true) {\n        // set stats element to display flex\n        return { display: \"block\" };\n      } else {\n        // set stats element to display none\n        return { display: \"none\" };\n      }\n    }\n    let style = styling(displayBool);\n\n    if (clicked === false) {\n      alert(\"Tap Get Predictions to fetch all game stats first\");\n    } else {\n      let index = 2;\n      let divider = 10;\n\n      let gameStats = allForm.find((match) => match.id === game.id);\n      const gameArrayHome = [];\n      const gameArrayAway = [];\n      const gameArrayHomeTeamHomeGames = [];\n      const gameArrayAwayTeamAwayGames = [];\n      let goalDiffArrayHome;\n      let goalDiffArrayAway;\n      let goalDiffHomeMovingAv = [];\n      let goalDiffAwayMovingAv = [];\n      let latestHomeGoalDiff;\n      let latestAwayGoalDiff;\n\n      var getEMA = (a, r) =>\n        a.reduce(\n          (p, n, i) =>\n            i\n              ? p.concat(\n                  (2 * n) / (r + 1) + (p[p.length - 1] * (r - 1)) / (r + 1)\n                )\n              : p,\n          [a[0]]\n        );\n\n      const homeForm = gameStats.home[index];\n      const awayForm = gameStats.away[index];\n\n      if (displayBool === true) {\n        // let fixtures = await fetch(\n        //   `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${gameStats.leagueId}`\n        // );\n\n        console.log(gameStats);\n        const pos = allLeagueResultsArrayOfObjects\n          .map((i) => i.id)\n          .indexOf(gameStats.leagueId);\n        let matches = allLeagueResultsArrayOfObjects[pos];\n        // await fixtures.json().then((matches) => {\n        console.log(matches);\n        const resultHome = matches.fixtures.filter(\n          (game) =>\n            game.home_name === gameStats.home.teamName ||\n            game.away_name === gameStats.home.teamName\n        );\n\n        const resultHomeOnly = matches.fixtures.filter(\n          (game) => game.home_name === gameStats.home.teamName\n        );\n\n        resultHome.sort((a, b) => b.date_unix - a.date_unix);\n        resultHomeOnly.sort((a, b) => b.date_unix - a.date_unix);\n\n        for (let i = 0; i < resultHome.length; i++) {\n          let unixTimestamp = resultHome[i].date_unix;\n          let milliseconds = unixTimestamp * 1000;\n          let dateObject = new Date(milliseconds).toLocaleString(\"en-GB\", {\n            timeZone: \"UTC\",\n          });\n\n          let won;\n          let goalsScored;\n          let goalsConceeded;\n\n          switch (true) {\n            case resultHome[i].home_name === gameStats.home.teamName:\n              switch (true) {\n                case resultHome[i].homeGoalCount > resultHome[i].awayGoalCount:\n                  won = \"W\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                case resultHome[i].homeGoalCount ===\n                  resultHome[i].awayGoalCount:\n                  won = \"D\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                case resultHome[i].homeGoalCount < resultHome[i].awayGoalCount:\n                  won = \"L\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                default:\n                  break;\n              }\n              break;\n            case resultHome[i].away_name === gameStats.home.teamName:\n              switch (true) {\n                case resultHome[i].homeGoalCount > resultHome[i].awayGoalCount:\n                  won = \"L\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                case resultHome[i].homeGoalCount ===\n                  resultHome[i].awayGoalCount:\n                  won = \"D\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                case resultHome[i].homeGoalCount < resultHome[i].awayGoalCount:\n                  won = \"W\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                default:\n                  break;\n              }\n              break;\n            default:\n              break;\n          }\n\n          gameArrayHome.push({\n            id: resultHome[i].id,\n            date: dateObject,\n            homeTeam: resultHome[i].home_name,\n            homeGoals: resultHome[i].homeGoalCount,\n            homeXG: resultHome[i].team_a_xg,\n            homeOdds: resultHome[i].odds_ft_1,\n            awayTeam: resultHome[i].away_name,\n            awayGoals: resultHome[i].awayGoalCount,\n            awayXG: resultHome[i].team_b_xg,\n            awayOdds: resultHome[i].odds_ft_2,\n            won: won,\n            homeShots: resultHome[i].team_a_shots,\n            awayShots: resultHome[i].team_b_shots,\n            homeSot: resultHome[i].team_a_shotsOnTarget,\n            awaySot: resultHome[i].team_b_shotsOnTarget,\n            homeRed: resultHome[i].team_a_red_cards,\n            awayRed: resultHome[i].team_b_red_cards,\n            homePossession: resultHome[i].team_a_possession,\n            awayPossession: resultHome[i].team_b_possession,\n            homeDangerousAttacks: resultHome[i].team_a_dangerous_attacks,\n            awayDangerousAttacks: resultHome[i].team_b_dangerous_attacks,\n            homePPG: resultHome[i].pre_match_teamA_overall_ppg,\n            awayPPG: resultHome[i].pre_match_teamB_overall_ppg,\n            unixTimestamp: resultHome[i].date_unix,\n            goalsFor: goalsScored,\n            goalsAgainst: goalsConceeded,\n            btts:\n              resultHome[i].homeGoalCount > 0 && resultHome[i].awayGoalCount > 0\n                ? \"\\u2714\"\n                : \"\\u2718\",\n          });\n        }\n\n        for (let i = 0; i < resultHomeOnly.length; i++) {\n          let wonHomeOrAwayOnly;\n\n          switch (true) {\n            case resultHomeOnly[i].home_name === gameStats.home.teamName:\n              switch (true) {\n                case resultHomeOnly[i].homeGoalCount >\n                  resultHomeOnly[i].awayGoalCount:\n                  wonHomeOrAwayOnly = \"W\";\n                  gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n                  break;\n                case resultHomeOnly[i].homeGoalCount ===\n                  resultHomeOnly[i].awayGoalCount:\n                  wonHomeOrAwayOnly = \"D\";\n                  gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n                  break;\n                case resultHomeOnly[i].homeGoalCount <\n                  resultHomeOnly[i].awayGoalCount:\n                  wonHomeOrAwayOnly = \"L\";\n                  gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n                  break;\n                default:\n                  break;\n              }\n              break;\n\n            default:\n              break;\n          }\n        }\n\n        goalDiffArrayHome = homeForm.allTeamResults.map(\n          (a) => a.scored - a.conceeded\n        );\n\n        // goalDiffArrayHome = gameArrayHome.map(\n        //   (a) => a.goalsFor - a.goalsAgainst\n        // );\n\n        let r = 5;\n        goalDiffHomeMovingAv = getEMA(\n          goalDiffArrayHome.reverse(),\n          goalDiffArrayHome.length < 5 ? goalDiffArrayHome.length : r\n        );\n\n        const cumulativeSumHome = (\n          (sum) => (value) =>\n            (sum += value)\n        )(0);\n\n        gameArrayHome.sort((a, b) => b.unixTimestamp - a.unixTimestamp);\n\n        rollingGoalDiffTotalHome = goalDiffArrayHome.map(cumulativeSumHome);\n\n        const resultAway = matches.fixtures.filter(\n          (game) =>\n            game.away_name === gameStats.away.teamName ||\n            game.home_name === gameStats.away.teamName\n        );\n\n        const resultAwayOnly = matches.fixtures.filter(\n          (game) => game.away_name === gameStats.away.teamName\n        );\n\n        resultAway.sort((a, b) => b.date_unix - a.date_unix);\n        resultAwayOnly.sort((a, b) => b.date_unix - a.date_unix);\n\n        for (let i = 0; i < resultAway.length; i++) {\n          let unixTimestamp = resultAway[i].date_unix;\n          let milliseconds = unixTimestamp * 1000;\n          let dateObject = new Date(milliseconds).toLocaleString(\"en-GB\", {\n            timeZone: \"UTC\",\n          });\n\n          let won;\n          let goalsScored;\n          let goalsConceeded;\n\n          switch (true) {\n            case resultAway[i].home_name === gameStats.away.teamName:\n              switch (true) {\n                case resultAway[i].homeGoalCount > resultAway[i].awayGoalCount:\n                  won = \"W\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                case resultAway[i].awayGoalCount ===\n                  resultAway[i].homeGoalCount:\n                  won = \"D\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                case resultAway[i].homeGoalCount < resultAway[i].awayGoalCount:\n                  won = \"L\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                default:\n                  break;\n              }\n              break;\n\n            case resultAway[i].away_name === gameStats.away.teamName:\n              switch (true) {\n                case resultAway[i].homeGoalCount > resultAway[i].awayGoalCount:\n                  won = \"L\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                case resultAway[i].homeGoalCount ===\n                  resultAway[i].awayGoalCount:\n                  won = \"D\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                case resultAway[i].homeGoalCount < resultAway[i].awayGoalCount:\n                  won = \"W\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                default:\n                  break;\n              }\n              break;\n            default:\n              break;\n          }\n\n          gameArrayAway.push({\n            id: resultAway[i].id,\n            date: dateObject,\n            homeTeam: resultAway[i].home_name,\n            homeGoals: resultAway[i].homeGoalCount,\n            homeXG: resultAway[i].team_a_xg,\n            homeOdds: resultAway[i].odds_ft_1,\n            awayTeam: resultAway[i].away_name,\n            awayGoals: resultAway[i].awayGoalCount,\n            awayXG: resultAway[i].team_b_xg,\n            awayOdds: resultAway[i].odds_ft_2,\n            won: won,\n            homeShots: resultAway[i].team_a_shots,\n            awayShots: resultAway[i].team_b_shots,\n            homeSot: resultAway[i].team_a_shotsOnTarget,\n            awaySot: resultAway[i].team_b_shotsOnTarget,\n            homeRed: resultAway[i].team_a_red_cards,\n            awayRed: resultAway[i].team_b_red_cards,\n            homePossession: resultAway[i].team_a_possession,\n            awayPossession: resultAway[i].team_b_possession,\n            homeDangerousAttacks: resultAway[i].team_a_dangerous_attacks,\n            awayDangerousAttacks: resultAway[i].team_b_dangerous_attacks,\n            homePPG: resultAway[i].pre_match_teamA_overall_ppg,\n            awayPPG: resultAway[i].pre_match_teamB_overall_ppg,\n            unixTimestamp: resultAway[i].date_unix,\n            goalsFor: goalsScored,\n            goalsAgainst: goalsConceeded,\n            btts:\n              resultAway[i].homeGoalCount > 0 && resultAway[i].awayGoalCount > 0\n                ? \"\\u2714\"\n                : \"\\u2718\",\n          });\n        }\n\n        for (let i = 0; i < resultAwayOnly.length; i++) {\n          let wonAwayOrAwayOnly;\n\n          switch (true) {\n            case resultAwayOnly[i].away_name === gameStats.away.teamName:\n              switch (true) {\n                case resultAwayOnly[i].awayGoalCount >\n                  resultAwayOnly[i].homeGoalCount:\n                  wonAwayOrAwayOnly = \"W\";\n                  gameArrayAwayTeamAwayGames.push(wonAwayOrAwayOnly);\n                  break;\n                case resultAwayOnly[i].awayGoalCount ===\n                  resultAwayOnly[i].homeGoalCount:\n                  wonAwayOrAwayOnly = \"D\";\n                  gameArrayAwayTeamAwayGames.push(wonAwayOrAwayOnly);\n                  break;\n                case resultAwayOnly[i].awayGoalCount <\n                  resultAwayOnly[i].homeGoalCount:\n                  wonAwayOrAwayOnly = \"L\";\n                  gameArrayAwayTeamAwayGames.push(wonAwayOrAwayOnly);\n                  break;\n                default:\n                  break;\n              }\n              break;\n\n            default:\n              break;\n          }\n        }\n\n        goalDiffArrayAway = awayForm.allTeamResults.map(\n          (a) => a.scored - a.conceeded\n        );\n\n        goalDiffAwayMovingAv = getEMA(\n          goalDiffArrayAway.reverse(),\n          goalDiffArrayAway.length < 5 ? goalDiffArrayAway.length : r\n        );\n\n        const cumulativeSumAway = (\n          (sum) => (value) =>\n            (sum += value)\n        )(0);\n\n        gameArrayAway.sort((a, b) => b.unixTimestamp - a.unixTimestamp);\n\n        rollingGoalDiffTotalAway = goalDiffArrayAway.map(cumulativeSumAway);\n\n        latestHomeGoalDiff =\n          goalDiffHomeMovingAv[goalDiffHomeMovingAv.length - 1];\n        latestAwayGoalDiff =\n          goalDiffAwayMovingAv[goalDiffAwayMovingAv.length - 1];\n        // });\n      }\n\n      const bttsArrayHome = Array.from(gameArrayHome, (x) => x.btts);\n      const bttsArrayAway = Array.from(gameArrayAway, (x) => x.btts);\n      const resultsArrayHome = Array.from(gameArrayHome, (x) => x.won);\n      const resultsArrayAway = Array.from(gameArrayAway, (x) => x.won);\n\n      let homeTeam = gameStats.home.teamName;\n      let awayTeam = gameStats.away.teamName;\n\n      let time = game.time;\n\n      if (homeForm.last3Points === undefined) {\n        homeForm.last3Points = getPointsFromLastX(homeForm.lastThreeForm);\n\n        homeForm.last5Points = getPointsFromLastX(homeForm.LastFiveForm);\n\n        homeForm.last6Points = getPointsFromLastX(homeForm.LastSixForm);\n\n        homeForm.last10Points = getPointsFromLastX(homeForm.LastTenForm);\n\n        awayForm.last3Points = getPointsFromLastX(awayForm.lastThreeForm);\n\n        awayForm.last5Points = getPointsFromLastX(awayForm.LastFiveForm);\n\n        awayForm.last6Points = getPointsFromLastX(awayForm.LastSixForm);\n\n        awayForm.last10Points = getPointsFromLastX(awayForm.LastTenForm);\n      }\n\n      async function getPointAverage(pointTotal, games) {\n        return pointTotal / games;\n      }\n\n      // let homeThreeGameAverage = await getPointAverage(\n      //   homeForm.last3Points,\n      //   3\n      // );\n\n      let homeFiveGameAverage = await getPointAverage(homeForm.last5Points, 5);\n\n      let homeSixGameAverage = await getPointAverage(homeForm.last6Points, 6);\n\n      let homeTenGameAverage = await getPointAverage(homeForm.last10Points, 10);\n\n      // let awayThreeGameAverage = await getPointAverage(\n      //   awayForm.last3Points,\n      //   3\n      // );\n\n      let awayFiveGameAverage = await getPointAverage(awayForm.last5Points, 5);\n\n      let awaySixGameAverage = await getPointAverage(awayForm.last6Points, 6);\n\n      let awayTenGameAverage = await getPointAverage(awayForm.last10Points, 10);\n\n      async function getPointsFromGames(formArr) {\n        const pairings = {\n          W: 3,\n          D: 1,\n          L: 0,\n        };\n        let newArr = [];\n        let arrayOfIndividualPoints = [];\n        let sum = 0;\n\n        for (let i = 0; i < formArr.length; i++) {\n          sum = sum + pairings[formArr[i]];\n          newArr.push(sum);\n          arrayOfIndividualPoints.push(pairings[formArr[i]]);\n        }\n        return [newArr, arrayOfIndividualPoints];\n      }\n\n      async function getLastGameResult(lastGame) {\n        let text;\n        switch (true) {\n          case lastGame === \"L\":\n            text = \"Lost\";\n            break;\n          case lastGame === \"D\":\n            text = \"Drew\";\n            break;\n          case lastGame === \"W\":\n            text = \"Won\";\n            break;\n          default:\n            break;\n        }\n        return text;\n      }\n\n      let homeFormTrend = [\n        homeFiveGameAverage.toFixed(2),\n        homeTenGameAverage.toFixed(2),\n      ];\n\n      let awayFormTrend = [\n        awayFiveGameAverage.toFixed(2),\n        awayTenGameAverage.toFixed(2),\n      ];\n\n      let formTextStringHome;\n      let formTextStringAway;\n\n      if (displayBool === true && gameStats.home[2].LeagueOrAll === \"League\") {\n        formTextStringHome = await GenerateFormSummary(\n          gameStats.home[2],\n          homeFormTrend,\n          gameStats.home[0]\n        );\n        formTextStringAway = await GenerateFormSummary(\n          gameStats.away[2],\n          awayFormTrend,\n          gameStats.away[0]\n        );\n      } else {\n        formTextStringHome = \"\";\n        formTextStringAway = \"\";\n      }\n\n      const favouriteRecordHome =\n        game.homeOdds < game.awayOdds || game.homeOdds === game.awayOdds\n          ? `${homeForm.teamName} have been favourites ${\n              homeForm.favouriteCount\n            } times. Of these games, they have Won: ${homeForm.oddsReliabilityWin.toFixed(\n              0\n            )}%, Drawn:  ${homeForm.oddsReliabilityDraw.toFixed(\n              0\n            )}%, Lost:  ${homeForm.oddsReliabilityLose.toFixed(0)}%`\n          : `${homeForm.teamName} have been underdogs ${\n              homeForm.underdogCount\n            } times. Of these games, they have Won: ${homeForm.oddsReliabilityWinAsUnderdog.toFixed(\n              0\n            )}%, Drawn:  ${homeForm.oddsReliabilityDrawAsUnderdog.toFixed(\n              0\n            )}%, Lost:  ${homeForm.oddsReliabilityLoseAsUnderdog.toFixed(0)}%`;\n      const favouriteRecordAway =\n        game.homeOdds > game.awayOdds || game.homeOdds === game.awayOdds\n          ? `${awayForm.teamName} have been favourites ${\n              awayForm.favouriteCount\n            } times. Of these games, they have Won: ${awayForm.oddsReliabilityWin.toFixed(\n              0\n            )}%, Drawn:  ${awayForm.oddsReliabilityDraw.toFixed(\n              0\n            )}%, Lost:  ${awayForm.oddsReliabilityLose.toFixed(0)}%`\n          : `${awayForm.teamName} have been underdogs ${\n              awayForm.underdogCount\n            } times. Of these games, they have Won: ${awayForm.oddsReliabilityWinAsUnderdog.toFixed(\n              0\n            )}%, Drawn:  ${awayForm.oddsReliabilityDrawAsUnderdog.toFixed(\n              0\n            )}%, Lost:  ${awayForm.oddsReliabilityLoseAsUnderdog.toFixed(0)}%`;\n\n      let homeLastGame = await getLastGameResult(homeForm.LastFiveForm[4]);\n      let awayLastGame = await getLastGameResult(awayForm.LastFiveForm[4]);\n\n      // let homeAttackStrength = await getAttackStrength(\n      //   homeForm.ScoredOverall / 10\n      // );\n\n      const attackingMetricsHome = {\n        // averagePossession: homeForm.AveragePossessionOverall,\n        \"Average Dangerous Attacks\": homeForm.AverageDangerousAttacksOverall,\n        \"Average Shots\": homeForm.AverageShots,\n        \"Average Shots On Target\": homeForm.AverageShotsOnTargetOverall,\n        \"Average Expected Goals\": homeForm.XGOverall,\n        \"Recent XG\": homeForm.XGlast5 ? homeForm.XGlast5 : homeForm.XGOverall,\n        \"Average Goals\":\n          homeForm.averageScoredLeague !== undefined &&\n          homeForm.averageScoredLeague !== null\n            ? homeForm.averageScoredLeague\n            : homeForm.ScoredOverall / 10,\n      };\n      const attackingMetricsAway = {\n        // averagePossession: awayForm.AveragePossessionOverall,\n        \"Average Dangerous Attacks\": awayForm.AverageDangerousAttacksOverall,\n        \"Average Shots\": awayForm.AverageShots,\n        \"Average Shots On Target\": awayForm.AverageShotsOnTargetOverall,\n        \"Average Expected Goals\": awayForm.XGOverall,\n        \"Recent XG\": awayForm.XGlast5 ? awayForm.XGlast5 : awayForm.XGOverall,\n        \"Average Goals\":\n          awayForm.averageScoredLeague !== undefined &&\n          awayForm.averageScoredLeague !== null\n            ? awayForm.averageScoredLeague\n            : awayForm.ScoredOverall / 10,\n      };\n\n      const defensiveMetricsHome = {\n        \"Clean Sheet Percentage\": 100 - homeForm.CleanSheetPercentage,\n        \"Average XG Against\": homeForm.XGAgainstAvgOverall,\n        \"Recent XG Against\": homeForm.XGAgainstlast5\n          ? homeForm.XGAgainstlast5\n          : homeForm.XGAgainstAvgOverall,\n        \"Average Goals Against\":\n          homeForm.averageConceededLeague !== undefined &&\n          homeForm.averageConceededLeague !== null\n            ? homeForm.averageConceededLeague\n            : homeForm.ConcededOverall / 10,\n      };\n\n      const defensiveMetricsAway = {\n        \"Clean Sheet Percentage\": 100 - awayForm.CleanSheetPercentage,\n        \"Average XG Against\": awayForm.XGAgainstAvgOverall,\n        \"Recent XG Against\": awayForm.XGAgainstlast5\n          ? awayForm.XGAgainstlast5\n          : awayForm.XGAgainstAvgOverall,\n        \"Average Goals Against\":\n          awayForm.averageConceededLeague !== undefined &&\n          awayForm.averageConceededLeague !== null\n            ? awayForm.averageConceededLeague\n            : awayForm.ConcededOverall / 10,\n      };\n\n      let homeAttackStrength;\n      let homeAttackStrengthLast5;\n      let homeOnlyAttackStrength;\n      let homeDefenceStrength;\n      let homeDefenceStrengthLast5;\n      let homeOnlyDefenceStrength;\n      let homePossessionStrength;\n      let homePossessionStrengthLast5;\n      let homeOnlyPossessionStrength;\n      let homeXGForStrength;\n      let homeXGForStrengthLast5;\n      let homeOnlyXGForStrength;\n      let homeXGAgainstStrength;\n      let homeXGAgainstStrengthLast5;\n      let homeOnlyXGAgainstStrength;\n      let awayAttackStrength;\n      let awayAttackStrengthLast5;\n      let awayOnlyAttackStrength;\n      let awayDefenceStrength;\n      let awayDefenceStrengthLast5;\n      let awayOnlyDefenceStrength;\n      let awayPossessionStrength;\n      let awayPossessionStrengthLast5;\n      let awayOnlyPossessionStrength;\n      let awayXGForStrength;\n      let awayXGForStrengthLast5;\n      let awayOnlyXGForStrength;\n      let awayXGAgainstStrength;\n      let awayXGAgainstStrengthLast5;\n      let awayOnlyXGAgainstStrength;\n      let homeDirectnessStrength;\n      let homeDirectnessStrengthLast5;\n      let homeOnlyDirectnessStrength;\n      let awayDirectnessStrength;\n      let awayDirectnessStrengthLast5;\n      let awayOnlyDirectnessStrength;\n      let homeAccuracyOverallStrength;\n      let homeAccuracyOverallStrengthLast5;\n      let homeOnlyAccuracyOverallStrength;\n      let awayAccuracyOverallStrength;\n      let awayAccuracyOverallStrengthLast5;\n      let awayOnlyAccuracyOverallStrength;\n\n      if (homeForm.xgForStrength) {\n        console.log(\"not calculating\");\n        homeAttackStrength = homeForm.attackingStrength;\n        homeAttackStrengthLast5 = homeForm.attackingStrengthLast5;\n        homeOnlyAttackStrength = homeForm.attackingStrengthHomeOnly;\n        homeDefenceStrength = homeForm.defensiveStrength;\n        homeDefenceStrengthLast5 = homeForm.defensiveStrengthLast5;\n        homeOnlyDefenceStrength = homeForm.defensiveStrengthHomeOnly;\n        homePossessionStrength = homeForm.possessionStrength;\n        homePossessionStrengthLast5 = homeForm.possessionStrengthLast5;\n        homeOnlyPossessionStrength = homeForm.possessionStrengthHomeOnly;\n        homeXGForStrength = homeForm.xgForStrength;\n        homeXGForStrengthLast5 = homeForm.xgForStrengthLast5;\n        homeOnlyXGForStrength = homeForm.xgForStrengthHomeOnly;\n        homeXGAgainstStrength = homeForm.xgAgainstStrength;\n        homeXGAgainstStrengthLast5 = homeForm.xgAgainstStrengthLast5;\n        homeOnlyXGAgainstStrength = homeForm.xgAgainstStrengthHomeOnly;\n        homeDirectnessStrength = homeForm.directnessOverallStrength;\n        homeDirectnessStrengthLast5 = homeForm.directnessOverallStrengthLast5;\n        homeOnlyDirectnessStrength = homeForm.directnessHomeStrength;\n        homeAccuracyOverallStrength = homeForm.accuracyOverallStrength;\n        homeAccuracyOverallStrengthLast5 =\n          homeForm.accuracyOverallStrengthLast5;\n        homeOnlyAccuracyOverallStrength = homeForm.accuracyHomeStrength;\n        awayAttackStrength = awayForm.attackingStrength;\n        awayAttackStrengthLast5 = awayForm.attackingStrengthLast5;\n        awayOnlyAttackStrength = awayForm.attackingStrengthAwayOnly;\n        awayDefenceStrength = awayForm.defensiveStrength;\n        awayDefenceStrengthLast5 = awayForm.defensiveStrengthLast5;\n        awayOnlyDefenceStrength = awayForm.defensiveStrengthAwayOnly;\n        awayPossessionStrength = awayForm.possessionStrength;\n        awayPossessionStrengthLast5 = awayForm.possessionStrengthLast5;\n        awayOnlyPossessionStrength = awayForm.possessionStrengthAwayOnly;\n        awayXGForStrength = awayForm.xgForStrength;\n        awayXGForStrengthLast5 = awayForm.xgForStrengthLast5;\n        awayOnlyXGForStrength = awayForm.xgForStrengthAwayOnly;\n        awayXGAgainstStrength = awayForm.xgAgainstStrength;\n        awayXGAgainstStrengthLast5 = awayForm.xgAgainstStrengthLast5;\n        awayOnlyXGAgainstStrength = awayForm.xgAgainstStrengthAwayOnly;\n        awayDirectnessStrength = awayForm.directnessOverallStrength;\n        awayDirectnessStrengthLast5 = awayForm.directnessOverallStrengthLast5;\n        awayOnlyDirectnessStrength = awayForm.directnessAwayStrength;\n        awayAccuracyOverallStrength = awayForm.accuracyOverallStrength;\n        awayAccuracyOverallStrengthLast5 =\n          awayForm.accuracyOverallStrengthLast5;\n        awayOnlyAccuracyOverallStrength = awayForm.accuracyAwayStrength;\n      } else {\n        homeAttackStrength = await calculateAttackingStrength(\n          attackingMetricsHome\n        );\n\n        homeDefenceStrength = await calculateDefensiveStrength(\n          defensiveMetricsHome\n        );\n\n        homePossessionStrength = await calculateMetricStrength(\n          \"averagePossession\",\n          homeForm.AveragePossessionOverall\n        );\n\n        homeXGForStrength = await calculateMetricStrength(\n          \"xgFor\",\n          gameStats.home[2].XGOverall\n        );\n\n        homeXGAgainstStrength = await calculateMetricStrength(\n          \"xgAgainst\",\n          3 - gameStats.home[2].XGAgainstAvgOverall\n        );\n        homeDirectnessStrength = await calculateMetricStrength(\n          \"directnessOverall\",\n          homeForm.directnessOverall\n        );\n        homeAccuracyOverallStrength = await calculateMetricStrength(\n          \"accuracyOverall\",\n          homeForm.shootingAccuracy\n        );\n\n        awayAttackStrength = await calculateAttackingStrength(\n          attackingMetricsAway\n        );\n        awayDefenceStrength = await calculateDefensiveStrength(\n          defensiveMetricsAway\n        );\n        awayPossessionStrength = await calculateMetricStrength(\n          \"averagePossession\",\n          awayForm.AveragePossessionOverall\n        );\n        awayXGForStrength = await calculateMetricStrength(\n          \"xgFor\",\n          gameStats.away[2].XGOverall\n        );\n\n        awayXGAgainstStrength = await calculateMetricStrength(\n          \"xgAgainst\",\n          3 - gameStats.away[2].XGAgainstAvgOverall\n        );\n        awayDirectnessStrength = await calculateMetricStrength(\n          \"directnessOverall\",\n          awayForm.directnessOverall\n        );\n        awayAccuracyOverallStrength = await calculateMetricStrength(\n          \"accuracyOverall\",\n          awayForm.shootingAccuracy\n        );\n      }\n\n      let [formPointsHome, testArrayHome] = await getPointsFromGames(\n        gameStats.home[2].WDLRecord\n      );\n      let [formPointsAway, testArrayAway] = await getPointsFromGames(\n        gameStats.away[2].WDLRecord\n      );\n\n      let rollingGoalDiffHome = [\n        (gameStats.home[0].ScoredOverall - gameStats.home[0].ConcededOverall) /\n          10,\n        (gameStats.home[1].ScoredOverall - gameStats.home[1].ConcededOverall) /\n          6,\n        (gameStats.home[2].ScoredOverall - gameStats.home[2].ConcededOverall) /\n          5,\n      ];\n\n      let rollingGoalDiffAway = [\n        (gameStats.away[0].ScoredOverall - gameStats.away[0].ConcededOverall) /\n          10,\n        (gameStats.away[1].ScoredOverall - gameStats.away[1].ConcededOverall) /\n          6,\n        (gameStats.away[2].ScoredOverall - gameStats.away[2].ConcededOverall) /\n          5,\n      ];\n\n      const formDataMatch = [];\n\n      formDataMatch.push({\n        btts: game.btts_potential,\n      });\n\n      const formDataHome = [];\n      console.log(gameStats.home[2].LastFiveForm);\n\n      formDataHome.push({\n        name: game.homeTeam,\n        Last5: gameStats.home[2].LastFiveForm,\n        LeagueOrAll: gameStats.home[2].LeagueOrAll,\n        AverageGoals: homeForm.ScoredOverall / 10,\n        AverageConceeded: homeForm.ConcededOverall / 10,\n        AverageXG: homeForm.XGOverall,\n        AverageXGConceded: homeForm.XGAgainstAvgOverall,\n        AveragePossession: homeForm.AveragePossessionOverall,\n        AverageShotsOnTarget: homeForm.AverageShotsOnTargetOverall,\n        AverageDangerousAttacks: homeForm.AverageDangerousAttacksOverall,\n        homeOrAway: \"Home\",\n        leaguePosition: homeForm.LeaguePosition,\n        Last5PPG: homeForm.PPG,\n        SeasonPPG: homeForm.SeasonPPG,\n        lastGame: homeLastGame,\n        formRun: homeForm.formRun,\n        goalDifference: homeForm.goalDifference,\n        goalDifferenceHomeOrAway: homeForm.goalDifferenceHomeOrAway,\n        // BttsPercentage: homeForm.BttsPercentage || \"-\",\n        // BttsPercentageHomeOrAway: homeForm.BttsPercentageHomeOrAway || \"-\",\n        CardsTotal: homeForm.CardsTotal || \"-\",\n        CornersAverage: homeForm.AverageCorners || \"-\",\n        FormTextStringHome: formTextStringHome,\n        FavouriteRecord:\n          favouriteRecordHome + `. ${homeForm.reliabilityString}`,\n        BTTSArray: bttsArrayHome,\n        Results: homeForm.resultsAll,\n        ResultsHorA: homeForm.resultsHome.reverse(),\n        // BTTSAll: homeForm.last10btts,\n        // BTTSHorA: homeForm.last10bttsHome,\n      });\n\n      const formDataAway = [];\n\n      formDataAway.push({\n        name: game.awayTeam,\n        Last5: gameStats.away[2].LastFiveForm,\n        LeagueOrAll: gameStats.away[2].LeagueOrAll,\n        AverageGoals: awayForm.ScoredOverall / 10,\n        AverageConceeded: awayForm.ConcededOverall / 10,\n        AverageXG: awayForm.XGOverall,\n        AverageXGConceded: awayForm.XGAgainstAvgOverall,\n        AveragePossession: awayForm.AveragePossessionOverall,\n        AverageShotsOnTarget: awayForm.AverageShotsOnTargetOverall,\n        AverageDangerousAttacks: awayForm.AverageDangerousAttacksOverall,\n        homeOrAway: \"Away\",\n        leaguePosition: awayForm.LeaguePosition,\n        Last5PPG: awayForm.PPG,\n        SeasonPPG: awayForm.SeasonPPG,\n        lastGame: awayLastGame,\n        formRun: awayForm.formRun,\n        goalDifference: awayForm.goalDifference,\n        goalDifferenceHomeOrAway: awayForm.goalDifferenceHomeOrAway,\n        // BttsPercentage: awayForm.BttsPercentage || \"-\",\n        // BttsPercentageHomeOrAway: awayForm.BttsPercentageHomeOrAway || \"-\",\n        CardsTotal: awayForm.CardsTotal || \"-\",\n        CornersAverage: awayForm.AverageCorners || \"-\",\n        FormTextStringAway: formTextStringAway,\n        FavouriteRecord:\n          favouriteRecordAway + `. ${awayForm.reliabilityString}`,\n        BTTSArray: bttsArrayAway,\n        Results: awayForm.resultsAll,\n        ResultsHorA: awayForm.resultsAway.reverse(),\n        // BTTSAll: awayForm.last10btts,\n        // BTTSHorA: awayForm.last10bttsAway,\n      });\n\n      let formArrayHome;\n      let formArrayAway;\n      let chartType;\n\n      if (formPointsHome.length > 1) {\n        formArrayHome = formPointsHome;\n        formArrayAway = formPointsAway;\n        chartType = \"Points over time\";\n      } else {\n        formArrayHome = [\n          homeTenGameAverage,\n          homeSixGameAverage,\n          homeFiveGameAverage,\n        ];\n        formArrayAway = [\n          awayTenGameAverage,\n          awaySixGameAverage,\n          awayFiveGameAverage,\n        ];\n        chartType = \"Rolling average points over last 10\";\n      }\n\n      ReactDOM.render(\n        <div style={style}>\n          <div className=\"H2HStats\" id={`H2HStats${game.id}`}></div>\n          <div className=\"TrendsHome\" id={`TrendsHome${game.id}`}></div>\n          <div className=\"TrendsAway\" id={`TrendsAway${game.id}`}></div>\n        </div>,\n        document.getElementById(\"history\" + homeTeam)\n      );\n\n      //This tournament does not have league positions\n      if (game.leagueName === \"Europe UEFA Women's Euro\") {\n        game.homeTeamHomePosition = \"N/A\";\n        game.awayTeamAwayPosition = \"N/A\";\n      }\n\n      function singleResult(game) {\n        return (\n          <div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeXG}</span>\n              <span className=\"column\">XG</span>\n              <span className=\"column\">{game.awayXG}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeShots}</span>\n              <span className=\"column\">Shots</span>\n              <span className=\"column\">{game.awayShots}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeSot}</span>\n              <span className=\"column\">SOT</span>\n              <span className=\"column\">{game.awaySot}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeDangerousAttacks}</span>\n              <span className=\"column\">Dangerous Attacks</span>\n              <span className=\"column\">{game.awayDangerousAttacks}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homePossession}%</span>\n              <span className=\"column\">Possession</span>\n              <span className=\"column\">{game.awayPossession}%</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeRed}</span>\n              <span className=\"column\">Red cards</span>\n              <span className=\"column\">{game.awayRed}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homePPG}</span>\n              <span className=\"column\">PPG (pre-match)</span>\n              <span className=\"column\">{game.awayPPG}</span>\n            </div>\n          </div>\n        );\n      }\n\n      function singleSimilarResult(game) {\n        return (\n          <div>\n            <div className=\"ResultRowSmallDate\">\n              <span>{game.date}</span>\n            </div>\n            {/* <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.XG}</span>\n              <span className=\"column\">XG</span>\n              <span className=\"column\">{game.XGAgainst}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.sot}</span>\n              <span className=\"column\">SOT</span>\n              <span className=\"column\">{game.sotAgainst}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.possession}%</span>\n              <span className=\"column\">Possession</span>\n              <span className=\"column\">{100 - game.possession}%</span>\n            </div> */}\n          </div>\n        );\n      }\n\n      const overviewHome = gameArrayHome.slice(0, 10).map((game) => (\n        <div>\n          <Collapsable\n            classNameButton=\"ResultButton\"\n            buttonText={\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {game.homeGoals} : {game.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n              </div>\n            }\n            element={singleResult(game)}\n          />\n        </div>\n      ));\n\n      const overviewAway = gameArrayAway.slice(0, 10).map((game) => (\n        <div>\n          <Collapsable\n            classNameButton=\"ResultButton\"\n            buttonText={\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {game.homeGoals} : {game.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n              </div>\n            }\n            element={singleResult(game)}\n          />\n        </div>\n      ));\n\n      let similarGamesHome;\n\n      if (game.simlarGameResultsHome) {\n        similarGamesHome = game.simlarGameResultsHome.reverse().map((game) => (\n          <div>\n            <Collapsable\n              classNameButton=\"ResultButton\"\n              buttonText={\n                <div className={`ResultRowOverviewSmall${game.result}`}>\n                  <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                  <span className=\"columnOverviewScoreSmall\">\n                    {game.homeGoals} : {game.awayGoals}\n                  </span>\n                  <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n                </div>\n              }\n              element={singleSimilarResult(game)}\n            />\n          </div>\n        ));\n      } else {\n        similarGamesHome = (\n          <h4 className=\"NoGames\">No previous games fit this profile</h4>\n        );\n      }\n\n      let similarGamesAway;\n      if (game.simlarGameResultsAway) {\n        similarGamesAway = game.simlarGameResultsAway.reverse().map((game) => (\n          <div>\n            <Collapsable\n              classNameButton=\"ResultButton\"\n              buttonText={\n                <div className={`ResultRowOverviewSmall${game.result}`}>\n                  <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                  <span className=\"columnOverviewScoreSmall\">\n                    {game.homeGoals} : {game.awayGoals}\n                  </span>\n                  <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n                </div>\n              }\n              element={singleSimilarResult(game)}\n            />\n          </div>\n        ));\n      } else {\n        similarGamesAway = <h4>No previous games fit this profile</h4>;\n      }\n\n      console.log(formDataHome[0].Results);\n\n      function StatsHome() {\n        return (\n          <div className=\"flex-childOne\">\n            <ul style={style}>\n              <Stats\n                style={style}\n                homeOrAway=\"Home\"\n                gameCount={divider}\n                key={formDataHome[0].name}\n                last5={formDataHome[0].Last5}\n                homeOrAwayResults={gameArrayHomeTeamHomeGames}\n                LeagueOrAll={formDataHome[0].LeagueOrAll}\n                className={\"KeyStatsHome\"}\n                name={formDataHome[0].name}\n                goals={homeForm.avgScored}\n                conceeded={homeForm.avgConceeded}\n                XG={homeForm.XGOverall.toFixed(2)}\n                XGConceded={homeForm.XGAgainstAvgOverall.toFixed(2)}\n                possession={homeForm.AveragePossessionOverall.toFixed(2)}\n                sot={homeForm.AverageShotsOnTargetOverall.toFixed(2)}\n                dangerousAttacks={\n                  homeForm.AverageDangerousAttacksOverall !== 0\n                    ? homeForm.AverageDangerousAttacksOverall.toFixed(2)\n                    : homeForm.AverageDangerousAttacks\n                }\n                leaguePosition={\n                  formDataHome[0].leaguePosition\n                    ? formDataHome[0].leaguePosition\n                    : 0\n                }\n                rawPosition={game.homeRawPosition ? game.homeRawPosition : 0}\n                homeOrAwayLeaguePosition={\n                  game.homeTeamHomePosition ? game.homeTeamHomePosition : 0\n                }\n                winPercentage={\n                  game.homeTeamWinPercentage ? game.homeTeamWinPercentage : 0\n                }\n                lossPercentage={\n                  game.homeTeamLossPercentage ? game.homeTeamLossPercentage : 0\n                }\n                drawPercentage={\n                  game.homeTeamDrawPercentage ? game.homeTeamDrawPercentage : 0\n                }\n                ppg={formDataHome[0].SeasonPPG}\n                formTrend={[\n                  homeTenGameAverage.toFixed(2),\n                  homeSixGameAverage.toFixed(2),\n                  homeFiveGameAverage.toFixed(2),\n                ]}\n                lastGame={homeLastGame}\n                formRun={homeForm.resultsAll.reverse()}\n                goalDifference={formDataHome[0].goalDifference}\n                goalDifferenceHomeOrAway={\n                  formDataHome[0].goalDifferenceHomeOrAway\n                }\n                BttsPercentage={formDataHome[0].BttsPercentage}\n                BttsPercentageHomeOrAway={\n                  formDataHome[0].BttsPercentageHomeOrAway\n                }\n                // BTTSAll={\n                //   formDataHome[0].BTTSAll\n                //     ? formDataHome[0].BTTSAll\n                //     : '\"Get Predictions\" first'\n                // }\n                // BTTSHorA={\n                //   formDataHome[0].BTTSHorA\n                //     ? formDataHome[0].BTTSHorA\n                //     : '\"Get Predictions\" first'\n                // }\n                BTTSArray={formDataHome[0].BTTSArray}\n                Results={formDataHome[0].Results}\n                ResultsHorA={formDataHome[0].ResultsHorA}\n                CardsTotal={formDataHome[0].CardsTotal}\n                CornersAverage={homeForm.AverageCorners}\n                ScoredBothHalvesPercentage={\n                  formDataHome[0].ScoredBothHalvesPercentage\n                }\n                FormTextString={formDataHome[0].FormTextStringHome}\n                FavouriteRecord={formDataHome[0].FavouriteRecord}\n              />\n            </ul>\n          </div>\n        );\n      }\n\n      function StatsAway() {\n        return (\n          <div className=\"flex-childTwo\">\n            <ul style={style}>\n              <Stats\n                style={style}\n                homeOrAway=\"Away\"\n                gameCount={divider}\n                key={formDataAway[0].name}\n                last5={formDataAway[0].Last5}\n                homeOrAwayResults={gameArrayAwayTeamAwayGames}\n                LeagueOrAll={formDataAway[0].LeagueOrAll}\n                className={\"KeyStatsAway\"}\n                name={formDataAway[0].name}\n                goals={awayForm.avgScored}\n                conceeded={awayForm.avgConceeded}\n                XG={awayForm.XGOverall.toFixed(2)}\n                XGConceded={awayForm.XGAgainstAvgOverall.toFixed(2)}\n                //todo add goal diff and btts percentages\n                possession={awayForm.AveragePossessionOverall.toFixed(2)}\n                rawPosition={game.awayRawPosition ? game.awayRawPosition : 0}\n                sot={awayForm.AverageShotsOnTargetOverall.toFixed(2)}\n                dangerousAttacks={\n                  awayForm.AverageDangerousAttacksOverall !== 0\n                    ? awayForm.AverageDangerousAttacksOverall.toFixed(2)\n                    : awayForm.AverageDangerousAttacks\n                }\n                leaguePosition={\n                  formDataAway[0].leaguePosition\n                    ? formDataAway[0].leaguePosition\n                    : 0\n                }\n                homeOrAwayLeaguePosition={\n                  game.awayTeamAwayPosition ? game.awayTeamAwayPosition : 0\n                }\n                winPercentage={\n                  game.awayTeamWinPercentage ? game.awayTeamWinPercentage : 0\n                }\n                lossPercentage={\n                  game.awayTeamLossPercentage ? game.awayTeamLossPercentage : 0\n                }\n                drawPercentage={\n                  game.awayTeamDrawPercentage ? game.awayTeamDrawPercentage : 0\n                }\n                ppg={formDataAway[0].SeasonPPG}\n                formTrend={[\n                  awayTenGameAverage.toFixed(2),\n                  awaySixGameAverage.toFixed(2),\n                  awayFiveGameAverage.toFixed(2),\n                ]}\n                lastGame={awayLastGame}\n                formRun={awayForm.resultsAll.reverse()}\n                goalDifference={formDataAway[0].goalDifference}\n                goalDifferenceHomeOrAway={\n                  formDataAway[0].goalDifferenceHomeOrAway\n                }\n                BttsPercentage={formDataAway[0].BttsPercentage}\n                BttsPercentageHomeOrAway={\n                  formDataAway[0].BttsPercentageHomeOrAway\n                }\n                // BTTSAll={\n                //   formDataAway[0].BTTSAll\n                //     ? formDataAway[0].BTTSAll\n                //     : '\"Get Predictions\" first'\n                // }\n                // BTTSHorA={\n                //   formDataAway[0].BTTSHorA\n                //     ? formDataAway[0].BTTSHorA\n                //     : '\"Get Predictions\" first'\n                // }\n                BTTSArray={formDataAway[0].BTTSArray}\n                Results={formDataAway[0].Results}\n                ResultsHorA={formDataAway[0].ResultsHorA}\n                CardsTotal={formDataAway[0].CardsTotal}\n                CornersAverage={awayForm.AverageCorners}\n                ScoredBothHalvesPercentage={\n                  formDataAway[0].ScoredBothHalvesPercentage\n                }\n                FormTextString={formDataAway[0].FormTextStringAway}\n                FavouriteRecord={formDataAway[0].FavouriteRecord}\n              />\n            </ul>\n          </div>\n        );\n      }\n\n      // const allHomeGames = homeForm.WDLRecord.reverse();\n      // const allAwayGames = awayForm.WDLRecord.reverse();\n\n      // // const pointsHome = getPointsFromLastX(formDataHome[0].Last5);\n      // const pointsHome = getPointsFromLastX(allHomeGames);\n      // const pointsHomeAv = await getPointAverage(\n      //   pointsHome,\n      //   allHomeGames.length\n      // );\n      // const pointsHomeLast5 = getPointsFromLastX(allHomeGames.slice(0, 5));\n      // const pointsHomeAvLast5 = await getPointAverage(pointsHomeLast5, 5);\n      // const pointsAway = getPointsFromLastX(allAwayGames);\n      // const pointsAwayAv = await getPointAverage(\n      //   pointsAway,\n      //   allAwayGames.length\n      // );\n      // const pointsAwayLast5 = getPointsFromLastX(allAwayGames.slice(0, 5));\n      // const pointsAwayAvLast5 = await getPointAverage(pointsAwayLast5, 5);\n\n      // console.log(homeForm.WDLRecord.length);\n      // console.log(pointsHomeAvLast5);\n      // console.log(pointsAwayAvLast5);\n\n      let id, team1, team2, timestamp, homeGoals, awayGoals;\n\n\n      async function getGameIdByHomeTeam(games, homeTeamName) {\n        const matchingGames = games.filter((game) =>\n          game.homeTeam.includes(homeTeamName)\n        );\n        if (matchingGames.length > 0) {\n          return matchingGames[0];\n        } else {\n          return null; // or any other value you prefer to return if no match is found\n        }\n      }\n\n      const matchingGame = await getGameIdByHomeTeam(\n        arrayOfGames,\n        game.homeTeam\n      );\n\n      console.log(matchingGame)\n      if (matchingGame) {\n        id = matchingGame.id.toString();\n        team1 = matchingGame.homeTeam;\n        team2 = matchingGame.awayTeam;\n        timestamp = matchingGame.time;\n        homeGoals = matchingGame.homeGoals;\n        awayGoals = matchingGame.awayGoals;\n      } else {\n        id = \"0\";\n        team1 = \"N/A\";\n        team2 = \"N/A\";\n        timestamp = 1;\n        homeGoals = \"-\";\n        awayGoals = \"-\";\n      }\n\n      ReactDOM.render(\n        <>\n          <div style={style}>\n          <Collapsable\n            buttonText={\"Lineups & match action\"}\n            classNameButton=\"Lineups\"\n            element={\n              <>\n                <SofaLineupsWidget\n                  id={id}\n                  team1={team1}\n                  team2={team2}\n                  time={timestamp}\n                  homeGoals={homeGoals}\n                  awayGoals={awayGoals}\n                ></SofaLineupsWidget>\n              </>\n            }\n          />\n            <div className=\"Chart\" id={`Chart${game.id}`} style={style}>\n              <RadarChart\n                title=\"XG Tipping Strength Ratings - All Games\"\n                data={[\n                  homeAttackStrength,\n                  homeDefenceStrength,\n                  homePossessionStrength,\n                  homeXGForStrength,\n                  homeXGAgainstStrength,\n                  homeDirectnessStrength,\n                  homeAccuracyOverallStrength,\n                ]}\n                data2={[\n                  awayAttackStrength,\n                  awayDefenceStrength,\n                  awayPossessionStrength,\n                  awayXGForStrength,\n                  awayXGAgainstStrength,\n                  awayDirectnessStrength,\n                  awayAccuracyOverallStrength,\n                ]}\n                team1={game.homeTeam}\n                team2={game.awayTeam}\n              ></RadarChart>\n              <RadarChart\n                title=\"XG Tipping Strength Ratings - Last 5 games\"\n                data={[\n                  homeAttackStrengthLast5,\n                  homeDefenceStrengthLast5,\n                  homePossessionStrengthLast5,\n                  homeXGForStrengthLast5,\n                  homeXGAgainstStrengthLast5,\n                  homeDirectnessStrengthLast5,\n                  homeAccuracyOverallStrengthLast5,\n                ]}\n                data2={[\n                  awayAttackStrengthLast5,\n                  awayDefenceStrengthLast5,\n                  awayPossessionStrengthLast5,\n                  awayXGForStrengthLast5,\n                  awayXGAgainstStrengthLast5,\n                  awayDirectnessStrengthLast5,\n                  awayAccuracyOverallStrengthLast5,\n                ]}\n                team1={game.homeTeam}\n                team2={game.awayTeam}\n              ></RadarChart>\n              <RadarChart\n                title=\"XG Tipping Strength Ratings - Home/Away Games Only\"\n                data={[\n                  homeOnlyAttackStrength,\n                  homeOnlyDefenceStrength,\n                  homeOnlyPossessionStrength,\n                  homeOnlyXGForStrength,\n                  homeOnlyXGAgainstStrength,\n                  homeOnlyDirectnessStrength,\n                  homeOnlyAccuracyOverallStrength,\n                ]}\n                data2={[\n                  awayOnlyAttackStrength,\n                  awayOnlyDefenceStrength,\n                  awayOnlyPossessionStrength,\n                  awayOnlyXGForStrength,\n                  awayOnlyXGAgainstStrength,\n                  awayOnlyDirectnessStrength,\n                  awayOnlyAccuracyOverallStrength,\n                ]}\n                team1={game.homeTeam}\n                team2={game.awayTeam}\n              ></RadarChart>\n              <BarChart\n                text=\"H2H - Home Team | Away Team\"\n                data1={[\n                  homeForm.avgScored * 2,\n                  awayForm.avgConceeded * 2,\n                  homeForm.avPointsAll * 3,\n                  homeForm.XGOverall * 2,\n                  awayForm.XGAgainstAvgOverall * 2,\n                  homeForm.AverageShotsOnTargetOverall,\n                  homeForm.AverageDangerousAttacksOverall !== 0\n                    ? homeForm.AverageDangerousAttacksOverall / 7.5\n                    : homeForm.AverageDangerousAttacks / 7.5,\n                  homeForm.AveragePossessionOverall / 7.5,\n                  homeForm.goalDifferenceHomeOrAway / 10,\n                  homeForm.AverageCorners,\n                ]}\n                data2={[\n                  awayForm.avgScored * 2,\n                  homeForm.avgConceeded * 2,\n                  awayForm.avPointsAll * 3,\n                  awayForm.XGOverall * 2,\n                  homeForm.XGAgainstAvgOverall * 2,\n                  awayForm.AverageShotsOnTargetOverall,\n                  awayForm.AverageDangerousAttacksOverall !== 0\n                    ? awayForm.AverageDangerousAttacksOverall / 7.5\n                    : awayForm.AverageDangerousAttacks / 7.5,\n                  awayForm.AveragePossessionOverall / 7.5,\n                  awayForm.goalDifferenceHomeOrAway / 10,\n                  awayForm.AverageCorners,\n                ]}\n              ></BarChart>\n              <Chart\n                height={3}\n                depth={0}\n                data1={formArrayHome}\n                data2={formArrayAway}\n                team1={game.homeTeam}\n                team2={game.awayTeam}\n                type={chartType}\n                tension={0}\n              ></Chart>\n              <Chart\n                height={\n                  Math.max(\n                    rollingGoalDiffTotalHome[\n                      rollingGoalDiffTotalHome.length - 1\n                    ],\n                    rollingGoalDiffTotalAway[\n                      rollingGoalDiffTotalAway.length - 1\n                    ]\n                  ) > 2\n                    ? Math.max(\n                        rollingGoalDiffTotalHome[\n                          rollingGoalDiffTotalHome.length - 1\n                        ],\n                        rollingGoalDiffTotalAway[\n                          rollingGoalDiffTotalAway.length - 1\n                        ]\n                      )\n                    : 2\n                }\n                depth={\n                  Math.min(\n                    rollingGoalDiffTotalHome[\n                      rollingGoalDiffTotalHome.length - 1\n                    ],\n                    rollingGoalDiffTotalAway[\n                      rollingGoalDiffTotalAway.length - 1\n                    ]\n                  ) < -2\n                    ? Math.min(\n                        rollingGoalDiffTotalHome[\n                          rollingGoalDiffTotalHome.length - 1\n                        ],\n                        rollingGoalDiffTotalAway[\n                          rollingGoalDiffTotalAway.length - 1\n                        ]\n                      )\n                    : -2\n                }\n                data1={rollingGoalDiffTotalHome}\n                data2={rollingGoalDiffTotalAway}\n                team1={game.homeTeam}\n                team2={game.awayTeam}\n                type={\"Goal difference over time\"}\n                tension={0.3}\n              ></Chart>\n            </div>\n            <div style={style}>\n              <Div className=\"MatchTime\" text={`Kick off: ${time} GMT`}></Div>\n              <Div\n                text={`Last league games (most recent first)`}\n                className={\"LastGameHeader\"}\n              ></Div>\n            </div>\n            <div className=\"flex-container\">\n              <div className=\"flex-childOneOverviewSmall\">{overviewHome}</div>\n              <div className=\"flex-childTwoOverviewSmall\">{overviewAway}</div>\n            </div>\n            {/* <Collapsable\n      className={\"Detail\"}\n      classNameTwo={\"flex-childOneOverview\"}\n      classNameThree={\"flex-childTwoOverview\"}\n      classNameFlex={\"flex-element\"}\n      classNameButton={\"DetailedFixtures\"}\n      buttonText={\"Detailed results\"}\n      newText={\"Detailed results\"}\n      element={contentHome}\n      elementTwo={contentAway}\n      // style={style}\n    /> */}\n            <div className=\"flex-container\">\n              <StatsHome />\n              <StatsAway />\n            </div>\n            <h2>Results from similar profile games</h2>\n            <span>(Games where each team had similar odds)</span>\n            <h3>Most recent first</h3>\n            <div className=\"flex-container-similar\">\n              <div className=\"flex-childOneOverviewSmall\">\n                {similarGamesHome}\n              </div>\n              <div className=\"flex-childTwoOverviewSmall\">\n                {similarGamesAway}\n              </div>\n            </div>\n            <input type=\"hidden\" name=\"IL_IN_ARTICLE\" />\n            <Button\n              className=\"MoreStats\"\n              onClickEvent={() =>\n                getTeamStats(\n                  game.id,\n                  game.homeTeam,\n                  game.awayTeam,\n                  formDataHome[0].BttsPercentage,\n                  formDataHome[0].BttsPercentageHomeOrAway,\n                  formDataAway[0].BttsPercentage,\n                  formDataAway[0].BttsPercentageHomeOrAway\n                )\n              }\n              text={\"Fixture trends\"}\n            ></Button>\n          </div>\n        </>,\n        document.getElementById(\"stats\" + homeTeam)\n      );\n    }\n\n    // ReactDOM.render(\n    //   <Button\n    //     className=\"MoreStats\"\n    //     style={style}\n    //     onClickEvent={() =>\n    //       getTeamStats(\n    //         game.id,\n    //         game.homeTeam,\n    //         game.awayTeam,\n    //         formDataHome[0].BttsPercentage,\n    //         formDataHome[0].BttsPercentageHomeOrAway,\n    //         formDataAway[0].BttsPercentage,\n    //         formDataAway[0].BttsPercentageHomeOrAway\n    //       )\n    //     }\n    //     text={\"Fixture trends\"}\n    //   ></Button>,\n    //   document.getElementById(`H2HStats${game.id}`)\n    // );\n  }\n}\n","import React, { Fragment, useState } from \"react\";\nimport { CreateBadge } from \"./createBadge\";\nimport { createStatsDiv } from \"../logic/getStats\";\nimport { renderTable } from \"../logic/getFixtures\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport { useDispatch } from \"react-redux\";\nimport { setData } from \"../logic/dataSlice\";\nimport { Provider } from \"react-redux\";\nimport store from \"../logic/store\"; // Import your Redux store\nimport { formObjectHome } from \"../logic/getScorePredictions\";\nimport { clicked } from \"../logic/getScorePredictions\";\n\nlet resultValue;\nvar count;\nlet mockValue;\nvar setCount;\n\nfunction toggle(bool) {\n  count = !bool;\n  return count;\n}\n\nfunction GetDivider(fixture, mock) {\n  const matchStatus = fixture.status;\n  let isPrediction = resultValue;\n\n  if (fixture.fixture.omit === true && matchStatus !== \"complete\") {\n    isPrediction = true;\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"Omitted\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (mockValue === true && matchStatus === \"complete\") {\n    isPrediction = false;\n    return (\n      <Fragment>\n        <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n        <div\n          className=\"CorrectScore\"\n          key={fixture.fixture.homeTeam}\n          data-cy={\"score-\" + fixture.fixture.id}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (mockValue === true && matchStatus !== \"complete\") {\n    isPrediction = true;\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (isPrediction === false && matchStatus !== \"complete\") {\n    return (\n      <div className=\"divider\" data-cy={\"divider-\" + fixture.fixture.id}>\n        {\"V\"}\n      </div>\n    );\n  } else if (isPrediction === false && matchStatus === \"complete\") {\n    return (\n      <div\n        className=\"Result\"\n        data-cy={\"result-\" + fixture.fixture.id}\n      >{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n    );\n  } else if (isPrediction === true && matchStatus === \"complete\") {\n    let outcome;\n    let prediction;\n\n    switch (true) {\n      case fixture.fixture.homeGoals > fixture.fixture.awayGoals:\n        outcome = 0;\n        fixture.fixture.winner = fixture.fixture.homeTeam;\n        fixture.fixture.outcome = \"homeWin\";\n        break;\n      case fixture.fixture.homeGoals === fixture.fixture.awayGoals:\n        outcome = 1;\n        fixture.fixture.winner = \"draw\";\n        fixture.fixture.outcome = \"draw\";\n\n        break;\n      case fixture.fixture.homeGoals < fixture.fixture.awayGoals:\n        outcome = 2;\n        fixture.fixture.winner = fixture.fixture.awayTeam;\n        fixture.fixture.outcome = \"awayWin\";\n\n        break;\n      default:\n        break;\n    }\n\n    switch (true) {\n      case fixture.fixture.goalsA > fixture.fixture.goalsB:\n        prediction = 0;\n        break;\n      case fixture.fixture.goalsA === fixture.fixture.goalsB:\n        prediction = 1;\n        break;\n      case fixture.fixture.goalsA < fixture.fixture.goalsB:\n        prediction = 2;\n        break;\n      default:\n        break;\n    }\n\n    if (fixture.fixture.omit === true) {\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"Omitted\"\n            key={fixture.fixture.homeTeam}\n            data-cy={\"score-\" + fixture.fixture.id}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    } else if (outcome === prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        switch (true) {\n          case outcome === 0:\n            fixture.fixture.profit = fixture.fixture.homeOdds;\n            break;\n          case outcome === 1:\n            fixture.fixture.profit = fixture.fixture.drawOdds;\n            break;\n          case outcome === 2:\n            fixture.fixture.profit = fixture.fixture.awayOdds;\n            break;\n          default:\n            break;\n        }\n      } else fixture.fixture.profit = 1;\n\n      if (\n        fixture.fixture.goalsA === fixture.fixture.homeGoals &&\n        fixture.fixture.goalsB === fixture.fixture.awayGoals\n      ) {\n        fixture.fixture.exactScore = true;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"ExactScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      } else {\n        fixture.fixture.exactScore = false;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"CorrectScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      }\n    } else if (outcome !== prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        fixture.fixture.profit = 0;\n      } else {\n        fixture.fixture.profit = 1;\n      }\n      fixture.fixture.exactScore = false;\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"IncorrectScore\"\n            key={fixture.fixture.awayTeam}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    }\n  } else {\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  }\n}\n\nfunction renderLeagueName(fixture, mock) {\n  mockValue = mock;\n\n  let name = fixture.leagueName;\n  let id =\n    allLeagueResultsArrayOfObjects.length > 0\n      ? allLeagueResultsArrayOfObjects[fixture.leagueIndex].id\n      : null;\n  if (name === null || mock === true) {\n    return <div></div>;\n  } else {\n    return (\n      <div>\n        <div\n          className=\"leagueName\"\n          id={`league${id}`}\n          key={`leagueName${id}div`}\n          onClick={() =>\n            renderTable(\n              fixture.leagueIndex,\n              allLeagueResultsArrayOfObjects[fixture.leagueIndex],\n              id\n            )\n          }\n        >\n          {fixture.leagueName} &#9776;\n        </div>\n        <div\n          className=\"LeagueTable\"\n          key={`leagueName${id}`}\n          id={`leagueName${id}`}\n        ></div>\n      </div>\n    );\n  }\n}\n\nconst downArrow = \"\\u{2195}\";\nconst rightArrow = \"\\u{29C9}\";\n\nexport let testing;\n\nfunction SingleFixture({ fixture, count, mock }) {\n  const dispatch = useDispatch();\n  function StoreData() {\n    const fixtureDetails = {\n      id: fixture.id,\n      homeTeamName: fixture.homeTeam,\n      homeId: fixture.homeId,\n      homeTeamBadge: fixture.homeBadge,\n      awayTeamName: fixture.awayTeam,\n      awayId: fixture.awayId,\n      awayTeamBadge: fixture.awayBadge,\n      stadium: fixture.stadium,\n      time: fixture.time,\n      homeGoals: fixture.goalsA,\n      awayGoals: fixture.goalsB,\n    };\n\n    const homeDetails = {\n      \"Attacking Strength\": fixture.formHome.attackingStrength,\n      \"Defensive Strength\": fixture.formHome.defensiveStrength,\n    };\n\n    const awayDetails = {\n      \"Attacking Strength\": fixture.formAway.attackingStrength,\n      \"Defensive Strength\": fixture.formAway.defensiveStrength,\n    };\n\n    const dataToSend = {\n      key1: \"value1\",\n      key2: \"value2\",\n    };\n    fixture.formHome.defensiveMetrics[\"Clean Sheet Percentage\"] =\n      fixture.formHome.CleanSheetPercentage;\n    fixture.formAway.defensiveMetrics[\"Clean Sheet Percentage\"] =\n      fixture.formAway.CleanSheetPercentage;\n\n    localStorage.setItem(\n      \"homeForm\",\n      JSON.stringify(fixture.formHome.attackingMetrics)\n    );\n    localStorage.setItem(\n      \"homeFormDef\",\n      JSON.stringify(fixture.formHome.defensiveMetrics)\n    );\n    localStorage.setItem(\n      \"allTeamResultsHome\",\n      JSON.stringify(fixture.formHome.allTeamResults)\n    );\n    localStorage.setItem(\"homeDetails\", JSON.stringify(homeDetails));\n\n    localStorage.setItem(\n      \"awayForm\",\n      JSON.stringify(fixture.formAway.attackingMetrics)\n    );\n    localStorage.setItem(\n      \"awayFormDef\",\n      JSON.stringify(fixture.formAway.defensiveMetrics)\n    );\n    localStorage.setItem(\n      \"allTeamResultsAway\",\n      JSON.stringify(fixture.formAway.allTeamResults)\n    );\n    localStorage.setItem(\"awayDetails\", JSON.stringify(awayDetails));\n\n    localStorage.setItem(\"fixtureDetails\", JSON.stringify(fixtureDetails));\n\n    dispatch(setData(dataToSend));\n  }\n\n  async function handleButtonClick(game) {\n    if (clicked === true) {\n      StoreData(formObjectHome);\n      window.open(\"/#/fixture\");\n    } else return;\n  }\n  return (\n    <div key={fixture.game}>\n      {renderLeagueName(fixture, mock)}\n      <div className={`individualFixtureContainer${fixture.omit}`}>\n        <li\n          className={`individualFixture${fixture.omit}`}\n          key={fixture.id}\n          data-cy={fixture.id}\n        >\n          <div className=\"HomeOdds\">{fixture.fractionHome}</div>\n          <div className=\"homeTeam\">{fixture.homeTeam}</div>\n          <GetDivider\n            result={resultValue}\n            status={fixture.status}\n            fixture={fixture}\n          />\n          {/* <div className=\"divider\">{\"V\"}</div> */}\n          <div className=\"awayTeam\">{fixture.awayTeam}</div>\n          <CreateBadge\n            image={fixture.homeBadge}\n            ClassName=\"HomeBadge\"\n            alt=\"Home team badge\"\n            flexShrink={5}\n          />\n          <CreateBadge\n            image={fixture.awayBadge}\n            ClassName=\"AwayBadge\"\n            alt=\"Away team badge\"\n          />\n          <div className=\"AwayOdds\">{fixture.fractionAway}</div>\n        </li>\n        <button\n          className=\"GameStats\"\n          onClick={() =>\n            mock === false ? createStatsDiv(fixture, count) : null\n          }\n          onMouseDown={() => (count = toggle(count))}\n        >\n          Game overview {downArrow}\n        </button>\n        <button\n          className=\"GameStatsTwo\"\n          onClick={() => handleButtonClick(fixture)}\n        >\n          More detail {rightArrow}\n        </button>\n        {/* <Checkbox/> */}\n      </div>\n      <div id={\"stats\" + fixture.homeTeam} />\n      <div className=\"MatchHistory\" id={\"history\" + fixture.homeTeam} />\n    </div>\n  );\n}\n\nconst List = ({ fixtures, mock }) => (\n  <div>\n    <div id=\"Headers\"></div>\n    <ul className=\"FixtureList\" id=\"FixtureList\">\n      {fixtures.map((fixture, i) => (\n        <SingleFixture\n          fixture={fixture}\n          key={fixture.game}\n          count={count}\n          mock={mock}\n        />\n      ))}\n    </ul>\n  </div>\n);\n\nexport function Fixture(props) {\n  [count, setCount] = useState(false);\n  resultValue = props.result;\n  return (\n    <Provider store={store}>\n      <List\n        fixtures={props.fixtures}\n        result={resultValue}\n        count={count}\n        mock={props.mock}\n      />\n    </Provider>\n  );\n}\n","// src/dataSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\n\n// src/dataSlice.js\nconst initialState = {\n  dataHome: localStorage.getItem('homeForm'),\n  dataAway: localStorage.getItem('awayForm'),\n  dataHomeDef: localStorage.getItem('homeFormDef'),\n  dataAwayDef: localStorage.getItem('awayFormDef'),\n  allTeamResultsHome: localStorage.getItem('allTeamResultsHome'),\n  allTeamResultsAway: localStorage.getItem('allTeamResultsAway'),\n  homeDetails:localStorage.getItem('homeDetails'),\n  awayDetails:localStorage.getItem('awayDetails'),\n  fixtureDetails: localStorage.getItem('fixtureDetails')\n};\n\nconst dataSlice = createSlice({\n  name: 'data',\n  initialState,\n  reducers: {\n    setData: (state, action) => {\n      state.data = action.payload;\n    },\n  },\n});\n\nexport const { setData } = dataSlice.actions;\n\nexport default dataSlice.reducer;\n","// src/store.js\nimport { configureStore } from '@reduxjs/toolkit';\nimport dataReducer from './dataSlice'; // Your data reducer\n\nconst store = configureStore({\n  reducer: {\n    data: dataReducer, // Ensure this key matches the key in your initialState\n  },\n});\n\nexport default store;\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./components/Header\";\nimport { Button } from \"./components/Button\";\nimport OddsRadio from \"./components/OddsRadio\";\nimport { Fixture } from \"./components/Fixture\";\nimport mockedFixtures from \"./data/mockedFixtures.json\";\nimport { selectedOdds } from \"./components/OddsRadio\";\nimport Collapsable from \"./components/CollapsableElement\";\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  RedditShareButton,\n  RedditIcon,\n  TelegramShareButton,\n  TelegramIcon,\n  TwitterShareButton,\n  TwitterIcon,\n  WhatsappShareButton,\n  WhatsappIcon,\n} from \"react-share\";\nimport { generateFixtures } from \"./logic/getFixtures\";\nimport { ThreeDots } from \"react-loading-icons\";\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\nimport reactDom from \"react-dom\";\n// require(\"dotenv\").config();\n\nexport const proxyurl = \"https://safe-caverns-99679.herokuapp.com/\";\nexport var fixtureList = [];\nexport let allLeagueData = [];\n\nexport const availableLeagues = [];\nexport var orderedLeagues = [];\n\nconst leagueOrder = [\n  7432, //World Cup 22\n  9660, //premier league 22/23\n  9663, //championship 22/23\n  9582, //league 1 22/23\n  9581, //league 2 22/23\n  9700, //National league 22/23\n  9665, //La Liga 22/23\n  9636, //Scottish Prem 22/23\n  9655, //Bundesliga 22/23\n  9697, //Serie A 22/23\n  9674, //French Prem 22/23\n  9984, //Portagul Prem 22/23\n  9653, //Dutch Prem 22/23\n  9577, //Belgian Pro League 22/23\n  10969, //sweden 23\n  9545, //Danish Prem 22/23\n  10976, //Norway Prem 23\n  9954, //Austrian Prem 22/23\n  9889, //Greek Prem 22/23\n  9553, //Polish prem 22/23\n  9580, //Swiss prem 22/23\n  10946, //Irish Prem 23\n  9675, //Spanish secunda 22/23\n  9808, //Italy serie B 22/23\n  9656, //Bundesliga 2 22/23\n  9741, //German 3rd tier 22/23\n  9621, //French League 2 22/23\n  9637, //Scottish Championship 22/23\n  9639, //Scottish league 1 22/23\n  9638, //Scottish league 2 22/23\n  9890, //Women's prem 23/24\n  10977, //MLS 23\n  11321, //Brazil prem 24\n  11212, //Argentina prem 23\n  10994, //Japan 22\n  9525, //Mexico prem 23/24\n  9972, //National league North and South 22/23\n  10505, //Australian A league 23/24\n  11102, //S Korea 23\n];\n\nlet today;\nlet todayFootyStats;\nlet todaySS\nlet tomorrow;\nlet tomorrowFootyStats;\nlet tomorrowSS;\nlet date;\nlet dateSS;\nlet dateFootyStats;\nlet yesterday;\nlet yesterdayFootyStats;\nlet yesterdaySS\nlet lastSaturday;\nlet lastSaturdayFootyStats;\nlet lastSaturdaySS;\nlet historic;\nlet historicFootyStats;\nlet historicSS;\nlet tomorrowsDate;\nlet yesterdaysDate;\nlet saturdayDate;\nlet historicDate;\nlet string;\nlet dateString;\n\n(async function fetchLeagueData() {\n  let leagueList;\n\n  leagueList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}leagueList`);\n\n  let leagueArray;\n  await leagueList.json().then((leagues) => {\n    leagueArray = Array.from(leagues.data);\n  });\n\n  for (let i = 0; i < leagueArray.length; i++) {\n    const league = leagueArray[i];\n    const name = leagueArray[i].name;\n\n    for (let x = 0; x < league.season.length; x++) {\n      const element = league.season[x];\n\n      if (element.year === 2024 || element.year === 20232024) {\n        if (element.id !== 4340 && element.id !== 6935 && element.id !== 7061) {\n          availableLeagues.push({ name: name, element });\n        }\n      }\n    }\n\n    async function mapOrder(array, order, key) {\n      array.sort(function (a, b) {\n        var A = a.element[key],\n          B = b.element[key];\n\n        if (order.indexOf(A) > order.indexOf(B)) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n      return array;\n    }\n    //leagues ordered by id\n    orderedLeagues = await mapOrder(availableLeagues, leagueOrder, \"id\");\n  }\n  return orderedLeagues;\n})();\n\nexport async function getLeagueList() {\n  let i = 0;\n  date = new Date();\n  string = \"Today\";\n\n  async function incrementDate(num, date) {\n    i = i + num;\n    date.setDate(date.getDate() + num);\n    dateSS = await convertTimestampForSofaScore(date);\n\n    [date, dateFootyStats] = await calculateDate(date);\n    string = dateFootyStats;\n    await renderButtons();\n  }\n\n  async function decrementDate(num, date) {\n    i = i - num;\n    console.log(i);\n    if (i > -120) {\n      date.setDate(date.getDate() - num);\n      dateSS = await convertTimestampForSofaScore(date);\n      [date, dateFootyStats] = await calculateDate(date);\n      string = dateFootyStats;\n      dateString = date;\n      await renderButtons();\n    }\n  }\n\n  async function calculateDate(dateString) {\n    const day = dateString.getDate();\n    const month = dateString.getMonth() + 1;\n    const year = dateString.getFullYear();\n    return [`${month}${day}${year}`, `${year}-${month}-${day}`];\n  }\n\n  [today, todayFootyStats] = await calculateDate(new Date());\n\n  tomorrowsDate = new Date();\n  tomorrowsDate.setDate(tomorrowsDate.getDate() + 1);\n  [tomorrow, tomorrowFootyStats] = await calculateDate(tomorrowsDate);\n\n  yesterdaysDate = new Date();\n  yesterdaysDate.setDate(yesterdaysDate.getDate() - 1);\n  [yesterday, yesterdayFootyStats] = await calculateDate(yesterdaysDate);\n\n  saturdayDate = new Date();\n  saturdayDate.setDate(\n    saturdayDate.getDate() - ((saturdayDate.getDay() + 6) % 7)\n  );\n  saturdayDate.setDate(saturdayDate.getDate() - 2);\n  [lastSaturday, lastSaturdayFootyStats] = await calculateDate(saturdayDate);\n\n  historicDate = new Date();\n  historicDate.setDate(\n    historicDate.getDate() - ((historicDate.getDay() + 6) % 7)\n  );\n  historicDate.setDate(historicDate.getDate() - 9);\n  [historic, historicFootyStats] = await calculateDate(historicDate);\n\n\n  async function convertTimestampForSofaScore(timestamp) {\n    let newDate = new Date(timestamp);\n  \n    let year = newDate.getFullYear();\n    let month = String(newDate.getMonth() + 1).padStart(2, '0'); // Adding 1 to month because it is zero-based\n    let day = String(newDate.getDate()).padStart(2, '0');\n    \n    let converted = `${year}-${month}-${day}`;\n  \n    return converted;\n  }\n\n  todaySS = await convertTimestampForSofaScore(new Date());\n  tomorrowSS = await convertTimestampForSofaScore(tomorrowsDate);\n  yesterdaySS = await convertTimestampForSofaScore(yesterdaysDate);\n  lastSaturdaySS = await convertTimestampForSofaScore(saturdayDate);\n  historicSS = await convertTimestampForSofaScore(historicDate);\n\n  const text =\n    \"Select a day you would like to retrieve fixtures for from the options above\\n A list of games will be returned once the data has loaded\\n Once all fixtures have loaded, click on “Get Predictions” to see XGTipping's forecasted outcomes for every game\\n If a game has completed, the predictions is displayed on the right and the actual result on the left\\n Each individual fixture is tappable/clickable. By doing so, you can access a range of detailed stats, from comparative charts, granular performance measures to previous meetings.\\n All games are subject to the same automated prediction algorithm with the outcome being a score prediction. Factors that determine the tip include the following, amongst others:\\n - Goal differentials\\n - Expected goal differentials \\n - Attack/Defence performance\\n - Form trends over time\\n - Home/Away records\\n - WDL records\\n - Points per game \\n - A range of other comparative factors\\n  –\\n\";\n\n  const text2 =\n    \"A range of tools are available should you wish to use them\\n Build a multi - Use the '+' or '-' buttons to add or remove a game deemed to be one of XGTIpping's highest confidence tips from the day\\n Exotic of the day: A pre-built exotic multi comprising of XGTipping's highest confidence tips\\n BTTS games: Games where both teams to score is deemed a likely outcome\\n Over 2.5 goals tips: Games where over 2.5 goals are most likely to be scored\\n XG tips: Comprises only games where the expected goal differentials between each team are at their greatest. We believe this shows a true disparity in the form of the two opposing teams\\n Tap the 'How to use' option to hide this text\";\n\n  let textJoined = text.concat(text2);\n\n  let newText = textJoined.split(\"\\n\").map((i) => {\n    return <p>{i}</p>;\n  });\n\n  async function renderButtons() {\n    ReactDOM.render(\n      <div className=\"FixtureButtons\">\n        <div className=\"historicResults\">\n          <Button\n            text={\"Last Saturday\"}\n            className=\"HistoricFixturesButton\"\n            onClickEvent={async () =>\n              fixtureList.push(\n                await generateFixtures(\n                  \"lastSaturday\",\n                  lastSaturday,\n                  selectedOdds,\n                  lastSaturdayFootyStats,\n                  false,\n                  today,\n                  lastSaturdaySS\n                )\n              )\n            }\n          />\n        </div>\n        <Button\n          text={`<`}\n          className=\"FixturesButton\"\n          onClickEvent={async () => await decrementDate(1, date)}\n        />\n        <Button\n          text={dateFootyStats !== undefined ? dateFootyStats : date}\n          className=\"FixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"todaysFixtures\",\n                dateString,\n                selectedOdds,\n                dateFootyStats,\n                false,\n                today,\n                dateSS\n              )\n            )\n          }\n        />\n        <Button\n          text={`Today`}\n          className=\"FixturesButtonToday\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"todaysFixtures\",\n                today,\n                selectedOdds,\n                todayFootyStats,\n                true,\n                today,\n                todaySS\n              )\n            )\n          }\n        />\n        <Button\n          text={\"Tomorrow\"}\n          className=\"FixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"tomorrowsFixtures\",\n                tomorrow,\n                selectedOdds,\n                tomorrowFootyStats,\n                true,\n                today,\n                tomorrowSS\n              )\n            )\n          }\n        />\n      </div>,\n      document.getElementById(\"Buttons\")\n    );\n  }\n\n  ReactDOM.render(\n    <div className=\"FixtureButtons\">\n      <div className=\"historicResults\">\n        <Button\n          text={\"Last Saturday\"}\n          className=\"HistoricFixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"lastSaturday\",\n                lastSaturday,\n                selectedOdds,\n                lastSaturdayFootyStats,\n                false,\n                today,\n                lastSaturdaySS\n              )\n            )\n          }\n        />\n        {/* <Button\n          text={\"Historic predictions\"}\n          className=\"HistoricFixturesButtonRight\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"historic\",\n                historic,\n                selectedOdds,\n                historicFootyStats\n              )\n            )\n          }\n        /> */}\n      </div>\n      <Button\n        text={`<`}\n        className=\"FixturesButton\"\n        onClickEvent={async () => await decrementDate(1, date)}\n      />\n      <Button\n        text={`${string}`}\n        className=\"FixturesButtonToday\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"todaysFixtures\",\n              today,\n              selectedOdds,\n              todayFootyStats,\n              true,\n              today,\n              todaySS\n            )\n          )\n        }\n      />\n      <Button\n        text={\"Tomorrow\"}\n        className=\"FixturesButton\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"tomorrowsFixtures\",\n              tomorrow,\n              selectedOdds,\n              tomorrowFootyStats,\n              true,\n              today,\n              tomorrowSS\n            )\n          )\n        }\n      />\n      <span>\n        *Not enough data to predict games in the first few gameweeks -\n        predictions displayed as 'x - x'\n      </span>\n    </div>,\n    document.getElementById(\"Buttons\")\n  );\n  ReactDOM.render(\n    <div className=\"OddsRadios\">\n      <OddsRadio value=\"Fractional odds\"></OddsRadio>\n      <OddsRadio value=\"Decimal odds\"></OddsRadio>\n    </div>,\n    document.getElementById(\"Checkbox\")\n  );\n  ReactDOM.render(\n    <Fragment>\n      <Collapsable\n        // className={\"HowToUse\"}\n        buttonText={\"How to use\"}\n        element={newText}\n      />\n    </Fragment>,\n    document.getElementById(\"XGDiff\")\n  );\n\n  // ReactDOM.render(\n  //   <Button\n  //     text={\"Lowest scoring leagues\"}\n  //     className={\"Under25TeamsButton\"}\n  //     onClickEvent={async () => {\n  //       let leagues = await getLowestScoringLeagues();\n  //       const leagueList = [];\n\n  //       leagues.forEach(async (league) =>\n  //         leagueList.push(\n  //           <ul className=\"GlobalStat\">\n  //             <p className=\"TeamName\">\n  //               {league.league} ({league.leagueCountry})\n  //             </p>\n  //             <li>Average goals: {league.averageGoals}</li>\n  //             <li>Under 2.5 goals %: {league.under25Percentage}%</li>\n  //           </ul>\n  //         )\n  //       );\n\n  //       reactDom.render(\n  //         <div>\n  //           <h3>Leagues with the lowest scoring games</h3>\n  //           <ul>{leagueList}</ul>\n  //         </div>,\n  //         document.getElementById(\"Under25Games\")\n  //       );\n  //     }}\n  //   ></Button>,\n  //   document.getElementById(\"Under25Games\")\n  // );\n\n  // ReactDOM.render(\n  //   <Button\n  //     text={\"Highest scoring leagues\"}\n  //     className={\"Over25TeamsButton\"}\n  //     onClickEvent={async () => {\n  //       let leagues = await getHighestScoringLeagues();\n  //       const leagueList = [];\n\n  //       leagues.forEach(async (league) =>\n  //         leagueList.push(\n  //           <ul className=\"GlobalStat\">\n  //             <p className=\"TeamName\">\n  //               {league.league} ({league.leagueCountry})\n  //             </p>\n  //             <li>Average goals: {league.averageGoals}</li>\n  //             <li>Over 2.5 goals %: {league.over25Percentage}%</li>\n  //           </ul>\n  //         )\n  //       );\n\n  //       reactDom.render(\n  //         <div>\n  //           <h3>Leagues with the highest scoring games</h3>\n  //           <ul>{leagueList}</ul>\n  //         </div>,\n  //         document.getElementById(\"Over25Games\")\n  //       );\n  //     }}\n  //   ></Button>,\n  //   document.getElementById(\"Over25Games\")\n  // );\n}\n\nasync function getHighestScoringLeagues() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}over25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    for (let index = 0; index < 215; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        over25Percentage:\n          leagues.data.top_leagues.data[index].seasonOver25Percentage_overall,\n        division: leagues.data.top_leagues.data[index].division,\n        leagueId: leagues.data.top_leagues.data[index].id,\n      };\n      arr.push(league);\n    }\n  });\n\n  const finalArray = arr.filter(\n    (league) =>\n      leagueOrder.find((element) => element === league.leagueId) &&\n      league.averageGoals >= 2.5\n  );\n\n  let sortedArray = finalArray.sort((a, b) => b.averageGoals - a.averageGoals);\n\n  return sortedArray;\n}\n\nasync function getLowestScoringLeagues() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}under25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    for (let index = 0; index < 215; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        under25Percentage:\n          leagues.data.top_leagues.data[index].seasonUnder25Percentage_overall,\n        leagueId: leagues.data.top_leagues.data[index].id,\n      };\n      arr.push(league);\n    }\n  });\n\n  const finalArray = arr.filter(\n    (league) =>\n      leagueOrder.find((element) => element === league.leagueId) &&\n      league.averageGoals < 2.5\n  );\n\n  let sortedArray = finalArray.sort((a, b) => a.averageGoals - b.averageGoals);\n\n  return sortedArray;\n}\n\nconst welcomeTextUnsplitOne = `Welcome to XGTipping. Your go-to resource for all things football, from predictions, comprehensive head to head stats, results, xg scores, odds, league tables, form, and bespoke multi-builders underpinned by expected goal (XG) data.\\n `;\nlet welcomeTextOne = welcomeTextUnsplitOne.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nconst welcomeTextUnsplitTwo = `XGTipping is completely independent and free to use, relying on a donation model to support running costs. For feedback or feature ideas, get in touch at @TippingXg.`;\nlet welcomeTextTwo = welcomeTextUnsplitTwo.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nfunction App() {\n  getLeagueList();\n  return (\n    <>\n      <div className=\"App\">\n        <Header />\n        <a\n          className=\"SocialLink\"\n          href=\"https://www.reddit.com/r/xgtipping/\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          r/xgtipping\n        </a>\n        <div id=\"LoadingContainer\" className=\"LoadingContainer\" />\n        <div id=\"RadioContainer\" className=\"RadioContainer\">\n          <div id=\"RadioText\" />\n          <div id=\"RadioButtons\" />\n        </div>\n        <div id=\"Day\" />\n        <div id=\"Checkbox\" />\n        <div id=\"ExplainerText\" />\n        <div id=\"Loading\" className=\"Loading\"></div>\n        <div id=\"Buttons\" className=\"Buttons\">\n          <ThreeDots className=\"MainLoading\" fill=\"#030061\" />\n          <div>Loading all fixture and form data...</div>\n        </div>\n        <div id=\"GeneratePredictions\" className=\"GeneratePredictions\" />\n        <div id=\"bestPredictions\" className=\"bestPredictions\" />\n        <div id=\"exoticOfTheDay\" className=\"exoticOfTheDay\" />\n        <div id=\"successMeasure2\" />\n        <div id=\"RowOneContainer\" className=\"RowOneContainer\">\n          <div id=\"BTTS\" className=\"RowOne\" />\n          <div id=\"longShots\" className=\"RowOne\" />\n          <div id=\"draws\" className=\"RowOne\" />\n        </div>\n        <div id=\"insights\" />\n        <div id=\"risk\" />\n        <div id=\"successMeasure\" />\n        <div id=\"tables\" />\n        <div id=\"homeBadge\" />\n        <div id=\"FixtureContainerHeaders\"></div>\n        {/* <StyledKofiButton buttonText=\"Donations\"></StyledKofiButton> */}\n        <div id=\"XGDiff\" />\n        <div id=\"FixtureContainer\">\n          <h6 className=\"WelcomeText\">{welcomeTextOne}</h6>\n          <h6 className=\"GetMatchStatText\">\n            Below is an example of our tips/results overview for you to\n            familiarise yourself with. Get real fixtures using the date buttons,\n            above. When loaded, tap on one to see full match stats\n          </h6>\n          <div className=\"ExplainerContainer\">\n            <span className=\"oddsHomeExplainer\">Home odds</span>\n            <span className=\"emptyHomeTeam\"></span>\n            <span className=\"scoreExplainer\">Result / KO Time</span>\n            <span className=\"predictionExplainer\">Our Prediction</span>\n            <span className=\"emptyAwayTeam\"></span>\n            <span className=\"oddsAwayExplainer\">Away odds</span>\n          </div>\n          <Fixture\n            fixtures={mockedFixtures.matches}\n            // result={false}\n            mock={true}\n            className={\"individualFixture\"}\n          />\n          <div>\n            <h6 className=\"WelcomeText\">{welcomeTextTwo}</h6>\n            <h6 className=\"WelcomeText\">\n              We cover a range of leagues, including\n              <ul className=\"AllLeagues\">\n                <li className=\"League\">Premier League</li>\n                <li className=\"League\">English Football League</li>\n                <li className=\"League\">La Liga</li>\n                <li className=\"League\">Serie A</li>\n                <li className=\"League\">Bundesliga</li>\n                <li className=\"League\">Ligue 1</li>\n                <li className=\"League\">MLS</li>\n                <li className=\"League\">Primeira Liga</li>\n                <li className=\"League\">Loads more...</li>\n              </ul>\n            </h6>\n          </div>\n          <div>\n            <div className=\"DataText\">Raw data from</div>\n            <a\n              className=\"DataLink\"\n              href=\"https://www.footystats.org\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              footystats.org\n            </a>\n          </div>\n          <div className=\"bitcoin\" id=\"bitcoin\">\n            We aim to remain free to use, contributions are always appreciated\n            though:\n            <a\n              href=\"https://www.ko-fi.com/xgtipping\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Donations\n            </a>\n            <span className=\"bitcoinSymbol\">&#x20bf;itcoin address</span>\n            <span className=\"bitcoinAddress\">\n              bc1q7j62txkvhfu0dt3l0s07saze6pjnyzs26wfgp0\n            </span>\n          </div>\n        </div>\n        <div>\n    </div>\n        <div className=\"Social\">\n          <TwitterShareButton\n            url={\"www.xgtipping.com\"}\n            title={\"#XGTipping\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <TwitterIcon size={\"3em\"} round={true} />\n          </TwitterShareButton>\n          <RedditShareButton\n            url={\"www.xgtipping.com\"}\n            title={\"XGTipping\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <RedditIcon size={\"3em\"} round={true} />\n          </RedditShareButton>\n          <FacebookShareButton\n            url={\"www.xgtipping.com\"}\n            quote={\"XGTipping - data-driven football predictions\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <FacebookIcon size={\"3em\"} round={true} />\n          </FacebookShareButton>\n          <WhatsappShareButton\n            url={\"www.xgtipping.com\"}\n            title={\"XGTipping\"}\n            separator=\": \"\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <WhatsappIcon size={\"3em\"} round={true} />\n          </WhatsappShareButton>\n          <TelegramShareButton\n            url={\"XGTipping\"}\n            title={\"XGTipping\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <TelegramIcon size={\"3em\"} round={true} />\n          </TelegramShareButton>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n// import React from \"react\";\n// import { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\n// import HomePage from \"./components/HomePage\";\n// import TeamPage from \"./components/Team\";\n\n// const App = () => {\n//   return (\n//     <Router>\n//       <Routes>\n//       <Route path=\"/team\" element={<TeamPage />} />\n//         <Route path=\"/\" element={<HomePage />} />\n//         {/* Add more routes */}\n//       </Routes>\n//     </Router>\n//   );\n// };\n\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CreateBadge } from \"./createBadge\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction TeamPage() {\n  const [dataState, setData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const responseHome = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}team/${storedFixtureDetailsJson.homeId}`\n      );\n      const resultHome = await responseHome.json();\n\n      const responseAway = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}team/${storedFixtureDetailsJson.awayId}`\n      );\n      const resultAway = await responseAway.json();\n      // setData(result.data.stadium_name);\n\n      let indexHome = resultHome.data.findIndex(\n        (x) => x.season_format === \"Domestic League\"\n      );\n      let indexAway = resultAway.data.findIndex(\n        (x) => x.season_format === \"Domestic League\"\n      );\n\n      setData((test) => ({\n        ...test,\n        scoredOverallHome:\n          resultHome.data[indexHome].stats.seasonScoredNum_overall,\n        playedHomeOnly:\n          resultHome.data[indexHome].stats.seasonMatchesPlayed_home,\n        scoredOverallHomeOnly:\n          resultHome.data[indexHome].stats.seasonScoredNum_home,\n        conceededOverallHome:\n          resultHome.data[indexHome].stats.seasonConcededNum_overall,\n        conceededOverallHomeOnly:\n          resultHome.data[indexHome].stats.seasonConcededNum_home,\n\n        PPGOverallHome: resultHome.data[indexHome].stats.seasonPPG_overall,\n        PPGOverallHomeOnly: resultHome.data[indexHome].stats.seasonPPG_home,\n        leaguePosition_overallHome:\n          resultHome.data[indexHome].stats.leaguePosition_overall,\n        leaguePosition_HomeOnly:\n          resultHome.data[indexHome].stats.leaguePosition_home,\n        averageAttendance:\n          resultHome.data[indexHome].stats.average_attendance_home,\n        BTTSPercentage_overallHome:\n          resultHome.data[indexHome].stats.seasonBTTSPercentage_overall,\n        BTTSAndWinPercentage_Home:\n          resultHome.data[indexHome].stats.BTTS_and_win_percentage_overall,\n        BTTSAndLosePercentage_Home:\n          resultHome.data[indexHome].stats.BTTS_and_lose_percentage_overall,\n        BTTSBothHalvesHome:\n          resultHome.data[indexHome].stats.BTTS_both_halves_percentage_overall,\n        GoalDifferenceHT_overall_Home:\n          resultHome.data[indexHome].stats.GoalDifferenceHT_overall,\n        GD_2hg_overall_Home: resultHome.data[indexHome].stats.gd_2hg_overall,\n        leadingAtHTPercentage_overallHome:\n          resultHome.data[indexHome].stats.leadingAtHTPercentage_overall,\n        seasonOver15Percentage_overallHome:\n          resultHome.data[indexHome].stats.seasonOver15Percentage_overall,\n        seasonOver25Percentage_overallHome:\n          resultHome.data[indexHome].stats.seasonOver25Percentage_overall,\n        seasonOver35Percentage_overallHome:\n          resultHome.data[indexHome].stats.seasonOver35Percentage_overall,\n        seasonOver45Percentage_overallHome:\n          resultHome.data[indexHome].stats.seasonOver45Percentage_overall,\n        scoredBothHalvesPercentage_overallHome:\n          resultHome.data[indexHome].stats.scoredBothHalvesPercentage_overall,\n        shots_on_target_per_goals_scored_overallHome:\n          resultHome.data[indexHome].stats.additional_info\n            .shots_on_target_per_goals_scored_overall,\n        cornersTotalAVG_overallHome:\n          resultHome.data[indexHome].stats.cornersTotalAVG_overall,\n        cardsAVG_overallHome: resultHome.data[indexHome].stats.cardsAVG_overall,\n        foulsAVG_overallHome: resultHome.data[indexHome].stats.foulsAVG_overall,\n        penalties_won_per_match_overallHome:\n          resultHome.data[indexHome].stats.additional_info\n            .penalties_won_per_match_overall,\n        penalty_in_a_match_percentage_overallHome:\n          resultHome.data[indexHome].stats.additional_info\n            .penalty_in_a_match_percentage_overall,\n\n        scoredOverallAway:\n          resultAway.data[indexAway].stats.seasonScoredNum_overall,\n        playedAwayOnly:\n          resultAway.data[indexAway].stats.seasonMatchesPlayed_away,\n        scoredOverallAwayOnly:\n          resultAway.data[indexAway].stats.seasonScoredNum_away,\n        conceededOverallAway:\n          resultAway.data[indexAway].stats.seasonConcededNum_overall,\n        conceededOverallAwayOnly:\n          resultAway.data[indexAway].stats.seasonConcededNum_away,\n\n        PPGOverallAway: resultAway.data[indexAway].stats.seasonPPG_overall,\n        PPGOverallAwayOnly: resultAway.data[indexAway].stats.seasonPPG_away,\n        leaguePosition_overallAway:\n          resultAway.data[indexAway].stats.leaguePosition_overall,\n        leaguePosition_AwayOnly:\n          resultAway.data[indexAway].stats.leaguePosition_away,\n        BTTSPercentage_overallAway:\n          resultAway.data[indexAway].stats.seasonBTTSPercentage_overall,\n        BTTSAndWinPercentage_Away:\n          resultAway.data[indexAway].stats.BTTS_and_win_percentage_overall,\n        BTTSAndLosePercentage_Away:\n          resultAway.data[indexAway].stats.BTTS_and_lose_percentage_overall,\n        BTTSBothHalvesAway:\n          resultAway.data[indexAway].stats.BTTS_both_halves_percentage_overall,\n        GoalDifferenceHT_overall_Away:\n          resultAway.data[indexAway].stats.GoalDifferenceHT_overall,\n        GD_2hg_overall_Away: resultAway.data[indexAway].stats.gd_2hg_overall,\n        leadingAtHTPercentage_overallAway:\n          resultAway.data[indexAway].stats.leadingAtHTPercentage_overall,\n        seasonOver15Percentage_overallAway:\n          resultAway.data[indexAway].stats.seasonOver15Percentage_overall,\n        seasonOver25Percentage_overallAway:\n          resultAway.data[indexAway].stats.seasonOver25Percentage_overall,\n        seasonOver35Percentage_overallAway:\n          resultAway.data[indexAway].stats.seasonOver35Percentage_overall,\n        seasonOver45Percentage_overallAway:\n          resultAway.data[indexAway].stats.seasonOver45Percentage_overall,\n        scoredBothHalvesPercentage_overallAway:\n          resultAway.data[indexAway].stats.scoredBothHalvesPercentage_overall,\n        shots_on_target_per_goals_scored_overallAway:\n          resultAway.data[indexAway].stats.additional_info\n            .shots_on_target_per_goals_scored_overall,\n\n        cornersTotalAVG_overallAway:\n          resultAway.data[indexAway].stats.cornersTotalAVG_overall,\n        cardsAVG_overallAway: resultAway.data[indexAway].stats.cardsAVG_overall,\n        foulsAVG_overallAway: resultAway.data[indexAway].stats.foulsAVG_overall,\n        penalties_won_per_match_overallAway:\n          resultAway.data[indexAway].stats.additional_info\n            .penalties_won_per_match_overall,\n        penalty_in_a_match_percentage_overallAway:\n          resultAway.data[indexAway].stats.additional_info\n            .penalty_in_a_match_percentage_overall,\n      }));\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  const storedDataHome = useSelector((state) => state.data.dataHome);\n  const jsonDataHome = JSON.parse(storedDataHome);\n  const propertyNamesHome = Object.entries(jsonDataHome);\n\n  const storedDataHomeDef = useSelector((state) => state.data.dataHomeDef);\n  const jsonDataHomeDef = JSON.parse(storedDataHomeDef);\n  const propertyNamesHomeDef = Object.entries(jsonDataHomeDef);\n\n  const storedDataallTeamResultsHome = useSelector(\n    (state) => state.data.allTeamResultsHome\n  );\n  const jsonDataallTeamResultsHome = JSON.parse(storedDataallTeamResultsHome);\n  const propertyNamesallTeamResultsHome = Object.values(\n    jsonDataallTeamResultsHome\n  );\n\n  const homeDetails = useSelector((state) => state.data.homeDetails);\n  const jsonHomeDetails = JSON.parse(homeDetails);\n\n  const storedDataAway = useSelector((state) => state.data.dataAway);\n  const jsonDataAway = JSON.parse(storedDataAway);\n  const propertyNamesAway = Object.entries(jsonDataAway);\n\n  const storedDataAwayDef = useSelector((state) => state.data.dataAwayDef);\n  const jsonDataAwayDef = JSON.parse(storedDataAwayDef);\n  const propertyNamesAwayDef = Object.entries(jsonDataAwayDef);\n\n  const storedDataallTeamResultsAway = useSelector(\n    (state) => state.data.allTeamResultsAway\n  );\n  const jsonDataallTeamResultsAway = JSON.parse(storedDataallTeamResultsAway);\n  const propertyNamesallTeamResultsAway = Object.values(\n    jsonDataallTeamResultsAway\n  );\n\n  const awayDetails = useSelector((state) => state.data.awayDetails);\n  const jsonAwayDetails = JSON.parse(awayDetails);\n\n  const storedFixtureDetails = useSelector(\n    (state) => state.data.fixtureDetails\n  );\n  const storedFixtureDetailsJson = JSON.parse(storedFixtureDetails);\n\n  const options = {\n    plugins: {\n      title: {\n        display: true,\n        text: \"Team comparison\",\n      },\n    },\n    aspectRatio: 0.5,\n    maintainAspectRatio: true,\n    responsive: true,\n    scales: {\n      x: {\n        stacked: true,\n      },\n      y: {\n        stacked: true,\n        display: false,\n      },\n    },\n  };\n  const labels = [\n    storedFixtureDetailsJson.homeTeamName,\n    storedFixtureDetailsJson.awayTeamName,\n  ];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        data: [\n          jsonHomeDetails[\"Attacking Strength\"],\n          [jsonAwayDetails[\"Attacking Strength\"]],\n        ],\n        label: \"Attacking Strength\",\n        backgroundColor: \"#030061\",\n      },\n      {\n        data: [\n          jsonHomeDetails[\"Defensive Strength\"],\n          [jsonAwayDetails[\"Defensive Strength\"]],\n        ],\n        label: \"Defensive Strength\",\n        backgroundColor: \"#CC3314\",\n      },\n    ],\n  };\n\n  return (\n    <div className=\"TeamStatsContainer\">\n      <div className=\"FixtureHeadingContiner\">\n        <CreateBadge\n          image={storedFixtureDetailsJson.homeTeamBadge}\n          ClassName=\"HomeTeamBadge\"\n          alt=\"Home team badge\"\n        ></CreateBadge>\n        {`${storedFixtureDetailsJson.homeTeamName} v ${storedFixtureDetailsJson.awayTeamName}`}\n        <CreateBadge\n          image={storedFixtureDetailsJson.awayTeamBadge}\n          ClassName=\"AwayTeamBadge\"\n          alt=\"Away team badge\"\n        ></CreateBadge>\n      </div>\n      <h3>\n        {storedFixtureDetailsJson.stadium} KO: {storedFixtureDetailsJson.time} |\n        Average Attendance: {dataState.averageAttendance}\n      </h3>\n      <h3>\n        XGTipping Prediction: {storedFixtureDetailsJson.homeGoals} -{\" \"}\n        {storedFixtureDetailsJson.awayGoals}\n      </h3>\n      <div className=\"TeamStats\">\n        <ul className=\"HomeTeamStats\">\n          <h3>{storedFixtureDetailsJson.homeTeamName}</h3>\n          {propertyNamesHome.map(([key, value], index) => (\n            <li key={index}>\n              <strong>{key}:</strong>{\" \"}\n              {typeof value === \"object\" ? JSON.stringify(value) : value}\n            </li>\n          ))}\n          <ul className=\"HomeTeamStats\">\n            {propertyNamesHomeDef.map(([key, value], index) => (\n              <li key={index}>\n                <strong>{key}:</strong>{\" \"}\n                {typeof value === \"object\" ? JSON.stringify(value) : value}\n              </li>\n            ))}\n          </ul>\n          <li>Scored overall: {dataState.scoredOverallHome}</li>\n          <li>Conceeded overall: {dataState.conceededOverallHome}</li>\n          <li>\n            Average scored home only:{\" \"}\n            {(\n              dataState.scoredOverallHomeOnly / dataState.playedHomeOnly\n            ).toFixed(2)}\n          </li>\n          <li>\n            Average conceeded home only:{\" \"}\n            {(\n              dataState.conceededOverallHomeOnly / dataState.playedHomeOnly\n            ).toFixed(2)}\n          </li>\n          <li>PPG overall: {dataState.PPGOverallHome}</li>\n          <li>PPG home only: {dataState.PPGOverallHomeOnly}</li>\n          <li>League position: {dataState.leaguePosition_overallHome}</li>\n          <li>\n            League position home only: {dataState.leaguePosition_HomeOnly}\n          </li>\n          <li>BTTS {dataState.BTTSPercentage_overallHome}%</li>\n          <li>BTTS and win: {dataState.BTTSAndWinPercentage_Home}%</li>\n          <li>BTTS and lose: {dataState.BTTSAndLosePercentage_Home}%</li>\n          <li>BTTS both halves: {dataState.BTTSBothHalvesHome}%</li>\n          <li>\n            Goal diff 1st half only: {dataState.GoalDifferenceHT_overall_Home}\n          </li>\n          <li>Goal diff 2nd half only: {dataState.GD_2hg_overall_Home}</li>\n          <li>\n            Leading at half time: {dataState.leadingAtHTPercentage_overallHome}%\n          </li>\n          <li>\n            Over 1.5 goals in games:{\" \"}\n            {dataState.seasonOver15Percentage_overallHome}%\n          </li>\n          <li>\n            Over 2.5 goals in games:{\" \"}\n            {dataState.seasonOver25Percentage_overallHome}%\n          </li>\n          <li>\n            Over 3.5 goals in games:{\" \"}\n            {dataState.seasonOver35Percentage_overallHome}%\n          </li>\n          <li>\n            Over 4.5 goals in games:{\" \"}\n            {dataState.seasonOver45Percentage_overallHome}%\n          </li>\n          <li>\n            Scored both halves:{\" \"}\n            {dataState.scoredBothHalvesPercentage_overallHome}%\n          </li>\n          <li>\n            SOTs per goal:{\" \"}\n            {dataState.shots_on_target_per_goals_scored_overallHome}\n          </li>\n          <li>Corners in game avg: {dataState.cornersTotalAVG_overallHome}</li>\n          <li>Cards avg: {dataState.cardsAVG_overallHome}</li>\n          <li>Fouls against avg: {dataState.foulsAVG_overallHome}</li>\n          <li>\n            Penalties won avg: {dataState.penalties_won_per_match_overallHome}\n          </li>\n          <li>\n            Penalties in match:{\" \"}\n            {dataState.penalty_in_a_match_percentage_overallHome}%\n          </li>\n        </ul>\n        <ul className=\"AwayTeamStats\">\n          <h3>{storedFixtureDetailsJson.awayTeamName}</h3>\n          {propertyNamesAway.map(([key, value], index) => (\n            <li key={index}>\n              <strong>{key}:</strong>{\" \"}\n              {typeof value === \"object\" ? JSON.stringify(value) : value}\n            </li>\n          ))}\n          <ul className=\"AwayTeamStats\">\n            {propertyNamesAwayDef.map(([key, value], index) => (\n              <li key={index}>\n                <strong>{key}:</strong>{\" \"}\n                {typeof value === \"object\" ? JSON.stringify(value) : value}\n              </li>\n            ))}\n          </ul>\n          <li>Scored overall: {dataState.scoredOverallAway}</li>\n          <li>Conceeded overall: {dataState.conceededOverallAway}</li>\n          <li>\n            Average scored away only:{\" \"}\n            {(\n              dataState.scoredOverallAwayOnly / dataState.playedAwayOnly\n            ).toFixed(2)}\n          </li>\n          <li>\n            Average conceeded away only:{\" \"}\n            {(\n              dataState.conceededOverallAwayOnly / dataState.playedAwayOnly\n            ).toFixed(2)}\n          </li>\n          <li>PPG overall: {dataState.PPGOverallAway}</li>\n          <li>PPG away only: {dataState.PPGOverallAwayOnly}</li>\n          <li>League position: {dataState.leaguePosition_overallAway}</li>\n          <li>\n            League position away only: {dataState.leaguePosition_AwayOnly}\n          </li>\n          <li>BTTS: {dataState.BTTSPercentage_overallAway}%</li>\n          <li>BTTS and win: {dataState.BTTSAndWinPercentage_Away}%</li>\n          <li>BTTS and lose: {dataState.BTTSAndLosePercentage_Away}%</li>\n          <li>BTTS both halves: {dataState.BTTSBothHalvesAway}%</li>\n          <li>\n            Goal diff 1st half only: {dataState.GoalDifferenceHT_overall_Away}\n          </li>\n          <li>Goal diff 2nd half only: {dataState.GD_2hg_overall_Away}</li>\n          <li>\n            Leading at half time: {dataState.leadingAtHTPercentage_overallAway}%\n          </li>\n          <li>\n            Over 1.5 goals in games:{\" \"}\n            {dataState.seasonOver15Percentage_overallAway}%\n          </li>\n          <li>\n            Over 2.5 goals in games:{\" \"}\n            {dataState.seasonOver25Percentage_overallAway}%\n          </li>\n          <li>\n            Over 3.5 goals in games:{\" \"}\n            {dataState.seasonOver35Percentage_overallAway}%\n          </li>\n          <li>\n            Over 4.5 goals in games:{\" \"}\n            {dataState.seasonOver45Percentage_overallAway}%\n          </li>\n          <li>\n            Scored both halves:{\" \"}\n            {dataState.scoredBothHalvesPercentage_overallAway}%\n          </li>\n          <li>\n            SOTs per goal:{\" \"}\n            {dataState.shots_on_target_per_goals_scored_overallAway}\n          </li>\n          <li>Corners in game avg: {dataState.cornersTotalAVG_overallAway}</li>\n          <li>Cards avg: {dataState.cardsAVG_overallAway}</li>\n          <li>Fouls against avg: {dataState.foulsAVG_overallAway}</li>\n          <li>\n            Penalties won avg: {dataState.penalties_won_per_match_overallAway}\n          </li>\n          <li>\n            Penalties in match:{\" \"}\n            {dataState.penalty_in_a_match_percentage_overallAway}%\n          </li>\n        </ul>\n        <div className=\"ChartContainer\">\n          <span className=\"Spacer\"></span>\n          <Bar options={options} data={data} className=\"ComparisonBar\" />\n          <span className=\"Spacer\"></span>\n        </div>\n        <ul className=\"HomeTeamResults\">\n          {propertyNamesallTeamResultsHome.map((match, index) => (\n            <>\n              <div className=\"MatchDate\">{match.date}</div>\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{match.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {match.homeGoals} : {match.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{match.awayTeam}</div>\n              </div>\n            </>\n          ))}\n        </ul>\n        <ul className=\"AwayTeamResults\">\n          {propertyNamesallTeamResultsAway.map((match, index) => (\n            <>\n              <div className=\"MatchDate\">{match.date}</div>\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{match.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {match.homeGoals} : {match.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{match.awayTeam}</div>\n              </div>\n            </>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default TeamPage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router, Route, Routes, HashRouter } from \"react-router-dom\";\nimport TeamPage from \"./components/Team\";\nimport { Provider } from \"react-redux\";\nimport store from \"./logic/store\"; // Import your Redux store\nimport {Fixture} from \"./components/Fixture\"\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n    <HashRouter>\n        <Routes>\n          <Route path=\"/fixture\" element={<TeamPage />} />\n          <Route path=\"/\" exact element={<App />} />\n          {/* <Route path=\"/\" element={<Fixture />} /> */}\n        </Routes>\n        </HashRouter>\n    </Provider>\n    ,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}