{"version":3,"sources":["components/Header.js","components/radio.js","components/Button.js","logic/getForm.js","components/createBadge.js","components/CollapsableElement.js","components/createStatsDiv.js","components/Div.js","components/Fixture.js","logic/getStats.js","components/Increment.js","logic/getScorePredictions.js","logic/getBTTSPotential.js","logic/getFixtures.js","components/TextSection.js","components/Checkbox.js","App.js","reportWebVitals.js","index.js"],"names":["Header","selectedOption","Radio","props","handleOptionChange","setState","value","state","className","this","type","name","checked","onChange","data-cy","Component","Button","id","text","variant","onClick","onClickEvent","applyColour","a","colour","getForm","match","teams","homeId","awayId","fixtureForm","i","team","fetch","proxyurl","process","response","json","then","formData","length","CreateBadge","src","image","ClassName","alt","flex-shrink","flexShrink","Collapsable","isOpen","handleOnClick","prevState","style","buttonText","Stats","styleForm","formIndicator","last5","goals","conceeded","possession","XG","sot","dangerousAttacks","leaguePosition","ppg","Div","resultValue","testBool","game","toggle","console","log","display","radioSelected","parseInt","leagueArray","index","divider","gameStats","allForm","find","homeTeam","home","teamName","awayTeam","away","time","push","btts","btts_potential","formDataHome","Last5","LastFiveForm","AverageGoals","ScoredOverall","toFixed","AverageConceeded","ConcededOverall","AverageXG","AveragePossession","AverageShotsOnTarget","AverageDangerousAttacks","homeOrAway","LeaguePosition","SeasonPPG","formDataAway","ReactDOM","render","document","getElementById","GetDivider","fixture","outcome","prediction","matchStatus","status","isPrediction","homeGoals","awayGoals","goalsA","goalsB","winner","bttsOutcome","profit","homeOdds","drawOdds","awayOdds","SingleFixture","bool","createStatsDiv","fractionHome","result","homeBadge","awayBadge","fractionAway","newText","split","map","List","fixtures","Fixture","finalHomeGoals","finalAwayGoals","rawFinalHomeGoals","rawFinalAwayGoals","incrementValue","riskLevel","Increment","IncrementItem","getScorePrediction","DecreaseItem","show","getBTTSPotential","findIndex","item","homeBTTS","BTTSPercentage","awayBTTS","homeAverageConceded","concededAverage","scoredAverage","dangerousAttacksAway","DangerousAttacksAway","combinedBTTS","PPG","Headers","append","calculateScore","roundCustom","calculate","gameTotalWeighting","num","form","wholeNumber","Math","floor","remainder","finalFinishingScore","ceil","round","lastGame","previousToLastGame","generalOffensiveRating","homeOffensiveRating","ScoredHome","PlayedHome","XGHome","DangerousAttacksHome","awayOffensiveRating","ScoredAway","PlayedAway","XGAway","generalDefensiveRating","XGAgainstAvg","homeDefensiveRating","ConcededHome","XGAgainstHome","awayDefensiveRating","ConcededAway","XGAgainstAway","recentGeneralOffensiveRating","recentHomeOffensiveRating","recentAwayOffensiveRating","recentGeneralDefensiveRating","recentHomeDefensiveRating","recentAwayDefensiveRating","parseFloat","finishingScore","goalieRating","defenceScore","CleanSheetPercentage","defenceRating","homeAttackAdvantageWeighted","homeAttackAdvantage","homeDefenceAdvantageWeighted","homeDefenceAdvantage","XGConcededAdjustment","forecastedXG","forecastedXGConceded","goalsBasedOnAverages","homeRaw","awayRaw","formHome","formAway","averageGoalDifferential","averageConcededDifferential","oddsWeightingHome","oddsWeightingAway","diff","weighting","weightingSplitHome","abs","weightingSplitAway","awayWeighting","homeCalculation","awayCalculation","homeGoalWeighting","HomeDefenceWeighting","homeGoalsUnweighted","awayGoalsUnweighted","homeGoalsWithOddsWeighting","awayGoalsWithOddsWeighting","homeGoalsWithAwayDefenceWeighting","awayGoalsWithHomeDefenceWeighting","homeAdvantageAttackAdjustment","homeAdvantageDefenceAdjustment","homeGoalswithHomeWeighting","awayGoalswithAwayWeighting","XGAgainstAdjustedHomeGoals","XGAgainstAdjustedAwayGoals","XGAdjustedHomeGoals","XGAdjustedAwayGoals","gameHomeAttackAdvantage","gameHomeDefenceAdvantage","goalsDifferential","generalformHomeGoals","generalformAwayGoals","calculatedDifferential","differentialWeighting","homeGoalDifferentialWeighting","awayGoalDifferentialWeighting","experimentalHomeGoals","experimentalAwayGoals","difference","predictionOutcome","total","getSuccessMeasure","sum","gameCount","tips","longShotTips","bttsArray","accumulatedOdds","predictions","day","Promise","all","matches","unroundedGoalsA","unroundedGoalsB","predictionObject","odds","goalDifferential","sort","b","longShotPredictionObject","renderTips","tip","fixtureResponse","fixtureArray","oddslib","require","config","league","lastFiveFormHome","lastFiveFormAway","leagueGames","Date","toLocaleDateString","currentDay","month","year","tomorrowsDate","setDate","getDate","tomorrowDay","tomorrowMonth","tomorrowYear","yesterdaysDate","yesterdayDay","yesterdayMonth","yesterdayYear","yesterday","today","tomorrow","createFixture","roundedHomeOdds","roundedAwayOdds","homeFraction","from","to","precision","awayFraction","error","generateFixtures","radioState","url","Array","data","method","headers","Accept","storedForm","formArray","isFormStored","isStoredLocally","leaguePositions","leagues","orderedLeagues","element","table","x","all_matches_table_overall","string","cleanName","position","ppg_overall","filter","competition_id","getPrefix","teamPositionPrefix","unixTimestamp","date_unix","dateObject","toLocaleString","hour","home_name","away_name","odds_ft_1","odds_ft_2","odds_ft_x","homeID","awayID","homeTeamInfo","awayTeamInfo","homeTeaminLeague","awayTeaminLeague","teamPositionHome","teamPositionAway","homePrefix","awayPrefix","homeSeasonPPG","awaySeasonPPG","homeExtract","stats","additional_info","replace","slug","pop","toUpperCase","substring","awayExtract","slugAway","0","xg_for_avg_overall","xg_for_avg_home","xg_for_avg_away","seasonScoredNum_overall","seasonScoredNum_home","seasonScoredNum_away","seasonMatchesPlayed_home","seasonMatchesPlayed_away","seasonConcededNum_overall","seasonConcededNum_home","seasonConcededNum_away","xg_against_avg_overall","xg_against_avg_home","xg_against_avg_away","seasonCSPercentage_overall","possessionAVG_overall","shotsOnTargetAVG_overall","dangerous_attacks_avg_overall","seasonPPG_overall","AttacksHome","attacks_avg_home","AttacksAway","attacks_avg_away","dangerous_attacks_avg_home","dangerous_attacks_avg_away","seasonBTTSPercentage_overall","1","2","home_image","away_image","homePpg","home_ppg","homeFormColour","awayPpg","away_ppg","awayFormColour","homeGoalCount","awayGoalCount","body","JSON","stringify","TextBlock","React","fixtureList","availableLeagues","mapOrder","leagueList","array","order","key","A","B","indexOf","season","label","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.98f6cd09.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <div>\n      <h1>Predictor</h1>\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nexport var selectedOption = \"5\";\n\nexport var fixtureList = [];\n\nexport class Radio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOption: this.props.value,\n    };\n  }\n\n  handleOptionChange = () => {\n    this.setState({\n      selectedOption: this.props.value,\n    });\n    selectedOption = this.state.selectedOption;\n  };\n\n  render() {\n    return (\n      <section className=\"dark\">\n        <div className={this.props.className}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"lastGames\"\n              checked={this.state.checked}\n              onChange={this.handleOptionChange}\n              data-cy={this.props.value}\n            />\n            <span className=\"design\"></span>\n            <span className=\"text\">Last {this.props.value} games</span>\n          </label>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Radio;\n","import React from \"react\";\n\nexport function Button(props) {\n  return (\n    <div id=\"Button\">\n      <button data-cy={props.text} variant=\"primary\" type=\"button\" onClick={props.onClickEvent}>\n        {props.text}\n      </button>\n    </div>\n  );\n}\n","import { proxyurl } from \"../App\";\n\nconst allTeamForm = []\n\nexport async function applyColour(value) {\n  let colour;\n  switch (true) {\n    case value < 0.49:\n      colour = \"#CD5C5C\";\n      break;\n    case value >= 0.5 && value <= 1:\n      colour = \"#F08080\";\n      break;\n    case value >= 1.01 && value <= 1.25:\n      colour = \"#FFA07A\";\n      break;\n    case value >= 1.26 && value <= 1.5:\n      colour = \"#FFFFE0\";\n      break;\n    case value >= 1.51 && value <= 2:\n      colour = \"#CFDBC5\";\n      break;\n    case value >= 2.01 && value <= 2.5:\n      colour = \"#8AA37B\";\n      break;\n    case value >= 2.51 && value <= 3:\n      colour = \"#3F6826\";\n      break;\n    default:\n      colour = \"white\";\n      break;\n  }\n  return colour;\n}\n\nexport async function getForm(match) {\n  const teams = [match.homeId, match.awayId];\n  const fixtureForm = [];\n\n  for (let i = 0; i < teams.length; i++) {\n    const team = teams[i];\n    let response = await fetch(\n      proxyurl +\n        `https://api.footystats.org/lastx?key=${process.env.REACT_APP_API_KEY}&team_id=` +\n        team\n    );\n    await response.json().then((formData) => {\n      fixtureForm[i] = formData;\n    });\n  }\n  return fixtureForm;\n}\n\n\n\n","import React from \"react\";\n\nexport function CreateBadge(props) {\n  return (\n    <img\n      src={`https://cdn.footystats.org/img/${props.image}`}\n      className={props.ClassName}\n      alt={props.alt}\n      flex-shrink={props.flexShrink}\n    />\n  );\n}\n","import React, { Component } from \"react\";\nimport EscapeOutside from \"react-escape-outside\";\n\nclass Collapsable extends Component {\n  state = { isOpen: false };\n\n  handleOnClick = () => {\n    this.setState((prevState) => ({\n      isOpen: !prevState.isOpen,\n    }));\n  };\n\n  render() {\n    return (\n      <div style={this.props.style}>\n        <button className={this.props.className} onClick={this.handleOnClick}>{this.props.buttonText}</button>\n        {this.state.isOpen && (\n          <EscapeOutside className=\"Collapsable\">\n            {this.props.text}\n          </EscapeOutside>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Collapsable;\n","import React, { Fragment } from \"react\";\n\nfunction Stats(props) {\n  function styleForm(formIndicator) {\n    let className;\n    if (formIndicator === \"W\") {\n      className = \"win\";\n    } else if (formIndicator === \"D\") {\n      className = \"draw\";\n    } else if (formIndicator === \"L\") {\n      className = \"loss\";\n    }\n    return className\n  }\n\n  return (\n    <ul className={props.className} style={props.style}>\n      <li key={props.name}>{`Team name - ${props.name}`}</li>\n      <li key=\"last5\">\n        <span\n          className={\n            styleForm(props.last5[0])\n          }\n        >\n          {props.last5[0]}\n        </span>\n        <span className={\n            styleForm(props.last5[1])\n          }>{props.last5[1]}</span>\n        <span className={\n            styleForm(props.last5[2])\n          }>{props.last5[2]}</span>\n        <span className={\n            styleForm(props.last5[3])\n          }>{props.last5[3]}</span>\n        <span className={\n            styleForm(props.last5[4])\n          }>{props.last5[4]}</span>\n      </li>\n\n      <li key=\"TeamScored\" className=\"TeamScored\" data-cy={props.name + \"teamScored\"}>\n        {`Avggoals scored - ${props.goals}`}\n      </li>\n      <li key=\"TeamConceeded\" className=\"TeamConceeded\" data-cy={props.name + \"teamConceded\"}>\n        {`Avg goals conceeded - ${props.conceeded}`}\n      </li>\n      <li key=\"TeamPossession\" className=\"TeamPossession\" data-cy={props.name + \"teamPossession\"}>\n        {`Avg possession - ${props.possession}%`}\n      </li>\n      <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name + \"teamXG\"}>\n        {`Avg XG - ${props.XG}`}\n      </li>\n      <li key=\"AverageSOT\" className=\"AverageSOT\" data-cy={props.name + \"averageSOT\"}>\n        {`Avg shots on target - ${props.sot}`}\n      </li>\n      <li key=\"DangerousAttacks\" className=\"DangerousAttacks\" data-cy={props.name + \"dangerousAttacks\"}>\n        {`Avg dangerous attacks - ${props.dangerousAttacks}`}\n      </li>\n      <li key=\"LeaguePosition\" className=\"LeaguePosition\" data-cy={props.name + \"leaguePosition\"}>\n        {`League position - ${props.leaguePosition}`}\n      </li>\n      <li key=\"PPG\" className=\"PPG\" data-cy={props.name + \"PPG\"}>\n        {`Season PPG - ${props.ppg}`}\n      </li>\n    </ul>\n  );\n}\n\nexport default Stats;\n","import React from \"react\";\n\nfunction Div(props) {\n  return (\n    <div id={props.id} style={props.style} className={props.className}>{props.text}</div>\n  );\n}\n\nexport default Div;\n","import React, { Fragment } from \"react\";\nimport { CreateBadge } from \"./createBadge\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { createStatsDiv } from \"../logic/getStats\";\n\nlet resultValue;\nconst text =\n  \"Next to each badge is each team’s points per game picked up at home or away.\\n Once the fixtures have loaded, click on “Get Predictions” to get predictions based on form data.\\n Click on an individual fixture for detailed stats for both teams.\\n If you change your form selection, re-tapping the fixture will fetch new form data.\\n You can also fetch fresh predictions based on the newly selected option by re-tapping on “Get Predictions” at any time.\\n If a match is resulted, tapping “Get Predictions” will show how accurate the prediction was.\\n If no form radio button is chosen, the last 5 games will be used by default\";\n\nfunction GetDivider(fixture) {\n  const matchStatus = fixture.status;\n  const isPrediction = resultValue;\n\n  if (isPrediction === false && matchStatus !== \"complete\") {\n    return (\n      <div className=\"divider\" data-cy={\"divider-\" + fixture.fixture.id}>\n        {\"V\"}\n      </div>\n    );\n  } else if (isPrediction === false && matchStatus === \"complete\") {\n    return (\n      <div\n        className=\"Result\"\n        data-cy={\"result-\" + fixture.fixture.id}\n      >{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n    );\n  } else if (isPrediction === true && matchStatus === \"complete\") {\n    let outcome;\n    let prediction;\n\n    switch (true) {\n      case fixture.fixture.homeGoals > fixture.fixture.awayGoals:\n        outcome = 0;\n        fixture.fixture.winner = fixture.fixture.homeTeam;\n        fixture.fixture.outcome = \"homeWin\";\n        break;\n      case fixture.fixture.homeGoals === fixture.fixture.awayGoals:\n        outcome = 1;\n        fixture.fixture.winner = \"draw\";\n        fixture.fixture.outcome = \"draw\";\n\n        break;\n      case fixture.fixture.homeGoals < fixture.fixture.awayGoals:\n        outcome = 2;\n        fixture.fixture.winner = fixture.fixture.awayTeam;\n        fixture.fixture.outcome = \"awayWin\";\n\n        break;\n      default:\n        break;\n    }\n\n    // console.log(`match.status ${fixture.fixture.status} match.prediction ${fixture.fixture.prediction} match.outcome ${fixture.fixture.outcome}`)\n\n\n    switch (true) {\n      case fixture.fixture.goalsA > fixture.fixture.goalsB:\n        prediction = 0;\n        break;\n      case fixture.fixture.goalsA === fixture.fixture.goalsB:\n        prediction = 1;\n        break;\n      case fixture.fixture.goalsA < fixture.fixture.goalsB:\n        prediction = 2;\n        break;\n      default:\n        break;\n    }\n\n    if (fixture.fixture.homeGoals > 0 && fixture.fixture.awayGoals > 0) {\n      fixture.fixture.bttsOutcome = \"bttsWon\";\n    } else {\n      fixture.fixture.bttsOutcome = \"bttsLost\";\n    }\n\n    if (outcome === prediction) {\n      switch (true) {\n        case outcome === 0:\n          fixture.fixture.profit = fixture.fixture.homeOdds - 1;\n          break;\n        case outcome === 1:\n          fixture.fixture.profit = fixture.fixture.drawOdds - 1;\n          break;\n        case outcome === 2:\n          fixture.fixture.profit = fixture.fixture.awayOdds - 1;\n          break;\n        default:\n          break;\n      }\n\n      return (\n        <Fragment>\n          <div className=\"CorrectResult\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"score\"\n            key={fixture.fixture.homeTeam}\n            data-cy={\"score-\" + fixture.fixture.id}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    } else if (outcome !== prediction) {\n      fixture.fixture.profit = -1;\n\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"score\"\n            key={fixture.fixture.awayTeam}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    }\n  } else {\n    return (\n      <div\n        className=\"score\"\n        key={fixture.fixture.id}\n      >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n    );\n  }\n}\n\nfunction getStyle(bool) {\n  if (bool === true) {\n    return \"BTTSFixture\";\n  } else {\n    return \"individualFixture\";\n  }\n}\n\nconst SingleFixture = ({ fixture }) => (\n  <div>\n    <li\n      className={getStyle(fixture.btts)}\n      key={fixture.id}\n      onClick={() => createStatsDiv(fixture)}\n      data-cy={fixture.id}\n    >\n      <div className=\"HomeOdds\">{fixture.fractionHome}</div>\n      <div className=\"homeTeam\">{fixture.homeTeam}</div>\n      <GetDivider\n        result={resultValue}\n        status={fixture.status}\n        fixture={fixture}\n      />\n      {/* <div className=\"divider\">{\"V\"}</div> */}\n      <div className=\"awayTeam\">{fixture.awayTeam}</div>\n      <CreateBadge\n        image={fixture.homeBadge}\n        ClassName=\"HomeBadge\"\n        alt=\"Home team badge\"\n        flexShrink={5}\n      />\n      <CreateBadge\n        image={fixture.awayBadge}\n        ClassName=\"AwayBadge\"\n        alt=\"Away team badge\"\n      />\n      <div className=\"AwayOdds\">{fixture.fractionAway}</div>\n    </li>\n    <div>\n      <div id={\"stats\" + fixture.homeTeam}></div>\n      <Fragment>\n        <div id={\"BTTSPotential\" + fixture.id}></div>\n        <div\n          className=\"StatsContainer\"\n          data-cy={\"StatsContainer-\" + fixture.id}\n        >\n          <div className=\"HomeStats\" id={\"home\" + fixture.homeTeam}></div>\n          <div className=\"AwayStats\" id={\"away\" + fixture.awayTeam}></div>\n        </div>\n      </Fragment>\n    </div>\n  </div>\n);\n\nlet newText = text.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nconst List = ({ fixtures }) => (\n  <div>\n    <Fragment>\n      <Collapsable className={\"HowToUse\"} buttonText={\"?\"} text={newText} />\n    </Fragment>\n    <ul>\n      {fixtures.map((fixture, i) => (\n        <SingleFixture fixture={fixture} />\n      ))}\n    </ul>\n  </div>\n);\n\nexport function Fixture(props) {\n  resultValue = props.result;\n  return <List fixtures={props.fixtures} result={resultValue} />;\n}\n","import ReactDOM from \"react-dom\";\nimport Stats from \"../components/createStatsDiv\";\nimport Div from \"../components/Div\";\nimport { selectedOption } from \"../components/radio\";\nimport { allForm, leagueArray } from \"../logic/getFixtures\";\n\nlet testBool = false;\n\nexport async function createStatsDiv(game) {\n  let radioSelected = parseInt(selectedOption);\n\n  console.log(`state of testBool ${testBool}`)\n  console.log(\"League date called from stats div\")\n  console.log(leagueArray)\n\n  function toggle() {\n    testBool = testBool ? false : true;\n    console.log(\"Toggled bool is\", testBool);\n    if (testBool === true) {\n      // set stats element to display flex\n      return { display: 'block' };\n    } else {\n      // set stats element to display none\n      return { display: 'none' };\n    }\n  }\n\n  let style = toggle();\n\n  let index;\n  let divider;\n  if (radioSelected === 5) {\n    index = 0;\n    divider = 5;\n  } else if (radioSelected === 6) {\n    index = 1;\n    divider = 6;\n  } else if (radioSelected === 10) {\n    index = 2;\n    divider = 10;\n  }\n\n  let gameStats = allForm.find((match) => match.id === game.id);\n\n  console.log(gameStats);\n\n  let homeTeam = gameStats.home.teamName;\n  let awayTeam = gameStats.away.teamName;\n\n  let time = game.time;\n\n  const formDataMatch = [];\n\n  formDataMatch.push({\n    btts: game.btts_potential,\n  });\n\n  const formDataHome = [];\n\n  formDataHome.push({\n    name: game.homeTeam,\n    Last5: gameStats.home[index].LastFiveForm,\n    AverageGoals: (gameStats.home[index].ScoredOverall / divider).toFixed(2),\n    AverageConceeded: (gameStats.home[index].ConcededOverall / divider).toFixed(\n      2\n    ),\n    AverageXG: gameStats.home[index].XG,\n    AveragePossession: gameStats.home[index].AveragePossession,\n    AverageShotsOnTarget: gameStats.home[index].AverageShotsOnTarget,\n    AverageDangerousAttacks: gameStats.home[index].AverageDangerousAttacks,\n    homeOrAway: \"Home\",\n    leaguePosition: gameStats.home[index].LeaguePosition,\n    SeasonPPG: gameStats.home[index].SeasonPPG\n  });\n\n  const formDataAway = [];\n\n  formDataAway.push({\n    name: game.awayTeam,\n    Last5: gameStats.away[index].LastFiveForm,\n    AverageGoals: (gameStats.away[index].ScoredOverall / divider).toFixed(2),\n    AverageConceeded: (gameStats.away[index].ConcededOverall / divider).toFixed(\n      2\n    ),\n    AverageXG: gameStats.away[index].XG,\n    AveragePossession: gameStats.away[index].AveragePossession,\n    AverageShotsOnTarget: gameStats.away[index].AverageShotsOnTarget,\n    AverageDangerousAttacks: gameStats.away[index].AverageDangerousAttacks,\n    homeOrAway: \"Away\",\n    leaguePosition: gameStats.away[index].LeaguePosition,\n    SeasonPPG: gameStats.away[index].SeasonPPG\n  });\n\n  ReactDOM.render(\n    <Div style={style} className=\"MatchTime\" text={\"Kick off: \" + time}></Div>,\n    document.getElementById(\"stats\" + homeTeam)\n  );\n\n  ReactDOM.render(\n    <Div\n      style={style}\n      className=\"BTTSPotential\"\n      text={\"BTTS Potential: \" + game.btts_potential + \"%\"}\n    ></Div>,\n    document.getElementById(\"BTTSPotential\" + game.id)\n  );\n\n  ReactDOM.render(\n    <Stats\n      style={style}\n      key={formDataHome[0].name}\n      last5={formDataHome[0].Last5}\n      className={formDataHome[0].homeOrAway}\n      name={formDataHome[0].name}\n      goals={formDataHome[0].AverageGoals}\n      conceeded={formDataHome[0].AverageConceeded}\n      XG={formDataHome[0].AverageXG}\n      possession={formDataHome[0].AveragePossession}\n      sot={formDataHome[0].AverageShotsOnTarget}\n      dangerousAttacks={formDataHome[0].AverageDangerousAttacks}\n      leaguePosition={formDataHome[0].leaguePosition}\n      ppg={formDataHome[0].SeasonPPG}\n    />,\n    document.getElementById(\"home\" + homeTeam)\n  );\n\n  ReactDOM.render(\n    <Stats\n      style={style}\n      key={formDataAway[0].name}\n      last5={formDataAway[0].Last5}\n      className={formDataAway[0].homeOrAway}\n      name={formDataAway[0].name}\n      goals={formDataAway[0].AverageGoals}\n      conceeded={formDataAway[0].AverageConceeded}\n      XG={formDataAway[0].AverageXG}\n      possession={formDataAway[0].AveragePossession}\n      sot={formDataAway[0].AverageShotsOnTarget}\n      dangerousAttacks={formDataAway[0].AverageDangerousAttacks}\n      leaguePosition={formDataAway[0].leaguePosition}\n      ppg={formDataAway[0].SeasonPPG}\n    />,\n    document.getElementById(\"away\" + awayTeam)\n  );\n}\n","import React, { Component, Fragment } from \"react\";\nimport { getScorePrediction } from \"../logic/getScorePredictions\"\nexport var incrementValue = 1;\nexport var riskLevel = 10;\n\nclass Increment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      incrementValue,\n      riskLevel,\n      show: true,\n    };\n  }\n\n  IncrementItem = () => {\n    this.setState({ incrementValue: this.state.incrementValue + 0.1 });\n    this.setState({ riskLevel: this.state.riskLevel - 1 });\n    incrementValue = (this.state.incrementValue + 0.1).toFixed(1);\n    riskLevel = this.state.riskLevel - 1;\n    getScorePrediction(\"default\", false);\n  };\n  DecreaseItem = () => {\n    this.setState({ incrementValue: this.state.incrementValue - 0.1 });\n    this.setState({ riskLevel: this.state.riskLevel + 1 });\n\n    incrementValue = (this.state.incrementValue - 0.1).toFixed(1);\n    riskLevel = this.state.riskLevel + 1;\n    getScorePrediction(\"default\", false);\n  };\n\n  render() {\n    return (\n      <Fragment>\n          <button className=\"IncrementButton\" onClick={this.IncrementItem}>\n            -\n          </button>\n          <button className=\"DecrementButton\" onClick={this.DecreaseItem}>\n            +\n          </button>\n      </Fragment>\n\n    );\n  }\n}\n\nexport default Increment;\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { matches, diff } from \"./getFixtures\";\nimport { Fixture } from \"../components/Fixture\";\nimport { selectedOption } from \"../components/radio\";\nimport Div from \"../components/Div\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { allForm } from \"../logic/getFixtures\";\nimport Increment from \"../components/Increment\";\nimport { incrementValue } from \"../components/Increment\";\nimport { getBTTSPotential } from \"../logic/getBTTSPotential\";\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\n// var requestOptions = {\n//   method: \"GET\",\n//   headers: myHeaders,\n//   redirect: \"follow\",\n// };\n\nlet finalHomeGoals;\nlet finalAwayGoals;\nlet rawFinalHomeGoals;\nlet rawFinalAwayGoals;\nlet totalGoals = 0;\nlet numberOfGames = 0;\nexport var renderPredictions;\n// let averageGoals = totalGoals / numberOfGames;\n\n//Calculates scores based on prior XG figures, weighted by odds\nexport async function calculateScore(match, index, divider, id) {\n  let homeRaw;\n  let awayRaw;\n\n  let teams;\n  let calculate = true;\n\n  let gameTotalWeighting;\n\n  switch (true) {\n    case divider === 5:\n      gameTotalWeighting = 5;\n      break;\n    case divider === 6:\n      gameTotalWeighting = 5;\n      break;\n    case divider === 10:\n      gameTotalWeighting = 5;\n      break;\n    default:\n      break;\n  }\n\n  if (\n    allForm.find(\n      (game) =>\n        game.home.teamName === match.homeTeam &&\n        game.away.teamName === match.awayTeam\n    )\n  ) {\n    teams = [\n      allForm.find((game) => game.home.teamName === match.homeTeam).home,\n      allForm.find((game) => game.home.teamName === match.homeTeam).away,\n    ];\n  } else {\n    calculate = false;\n  }\n\n  if (calculate) {\n    for (let i = 0; i < teams.length; i++) {\n      teams[i][index].lastGame = teams[i][index].LastFiveForm[4];\n      teams[i][index].previousToLastGame = teams[i][index].LastFiveForm[3];\n\n      teams[i][index].generalOffensiveRating =\n        (teams[i][2].ScoredOverall / 10 +\n          teams[i][2].XG +\n          teams[i][2].AverageShotsOnTarget / 4) /\n        3;\n      teams[i][index].homeOffensiveRating =\n        (teams[i][2].ScoredHome / teams[i][2].PlayedHome +\n          teams[i][2].XGHome +\n          teams[i][2].DangerousAttacksHome / 45) /\n        3;\n      teams[i][index].awayOffensiveRating =\n        (teams[i][2].ScoredAway / teams[i][2].PlayedAway +\n          teams[i][2].XGAway +\n          teams[i][2].DangerousAttacksAway / 45) /\n        3;\n\n      teams[i][index].generalDefensiveRating =\n        (teams[i][2].ConcededOverall / 10 + teams[i][2].XGAgainstAvg) / 2;\n\n      teams[i][index].homeDefensiveRating =\n        (teams[i][2].ConcededHome / teams[i][2].PlayedHome +\n          teams[i][2].XGAgainstHome) /\n        2;\n      teams[i][index].awayDefensiveRating =\n        (teams[i][2].ConcededAway / teams[i][2].PlayedAway +\n          teams[i][2].XGAgainstAway) /\n        2;\n\n      teams[i][index].recentGeneralOffensiveRating =\n        (teams[i][index].ScoredOverall / divider +\n          teams[i][index].XG +\n          teams[i][index].AverageShotsOnTarget / 4) /\n        3;\n      teams[i][index].recentHomeOffensiveRating =\n        (teams[i][index].ScoredHome / teams[i][index].PlayedHome +\n          teams[i][index].XGHome +\n          teams[i][index].DangerousAttacksHome / 45) /\n        3;\n      teams[i][index].recentAwayOffensiveRating =\n        (teams[i][index].ScoredAway / teams[i][index].PlayedAway +\n          teams[i][index].XGAway +\n          teams[i][index].DangerousAttacksAway / 45) /\n        3;\n\n      teams[i][index].recentGeneralDefensiveRating =\n        (teams[i][index].ConcededOverall / divider +\n          teams[i][index].XGAgainstAvg) /\n        2;\n\n      teams[i][index].recentHomeDefensiveRating =\n        (teams[i][index].ConcededHome / teams[i][index].PlayedHome +\n          teams[i][index].XGAgainstHome) /\n        2;\n      teams[i][index].recentAwayDefensiveRating =\n        (teams[i][index].ConcededAway / teams[i][index].PlayedAway +\n          teams[i][index].XGAgainstAway) /\n        2;\n\n      if (parseFloat(teams[i][2].ScoredOverall) > 0) {\n        teams[i][index].finishingScore = parseFloat(\n          (teams[i][2].XG / (teams[i][2].ScoredOverall / 10)).toFixed(2) - 1\n        );\n      } else {\n        teams[i][index].finishingScore = 0.0;\n      }\n\n      if (teams[i][2].ConcededOverall > 0) {\n        teams[i][index].goalieRating = parseFloat(\n          (\n            teams[i][2].XGAgainstAvg /\n            (teams[i][2].ConcededOverall / 10)\n          ).toFixed(2) - 1\n        );\n      } else {\n        teams[i][index].goalieRating = 0.0;\n      }\n\n      teams[i][index].defenceScore = parseInt(\n        teams[i][index].CleanSheetPercentage\n      );\n\n      let defenceScore;\n      defenceScore = teams[i][index].defenceScore;\n\n      teams[i][index].scoredAverage = teams[i][index].ScoredOverall / divider;\n      teams[i][index].concededAverage =\n        teams[i][index].ConcededOverall / divider;\n\n      switch (true) {\n        case defenceScore === 0:\n          teams[i][index].defenceRating = 1.7;\n          break;\n        case defenceScore > 0 && defenceScore < 20:\n          teams[i][index].defenceRating = 1.35;\n          break;\n        case defenceScore >= 20 && defenceScore < 30:\n          teams[i][index].defenceRating = 1.2;\n          break;\n        case defenceScore >= 30 && defenceScore < 40:\n          teams[i][index].defenceRating = 1.1;\n          break;\n        case defenceScore >= 40 && defenceScore < 50:\n          teams[i][index].defenceRating = 1;\n          break;\n        case defenceScore >= 50 && defenceScore < 60:\n          teams[i][index].defenceRating = 0.9;\n          break;\n        case defenceScore >= 60 && defenceScore < 70:\n          teams[i][index].defenceRating = 0.7;\n          break;\n        case defenceScore >= 70 && defenceScore < 80:\n          teams[i][index].defenceRating = 0.6;\n          break;\n        case defenceScore >= 80:\n          teams[i][index].defenceRating = 0.4;\n          break;\n        default:\n          break;\n      }\n\n      teams[0][index].homeAttackAdvantageWeighted = parseFloat(\n        teams[0][index].homeAttackAdvantage / 2\n      );\n      teams[0][index].homeDefenceAdvantageWeighted = parseFloat(\n        teams[0][index].homeDefenceAdvantage / 2\n      );\n\n      teams[i][index].finalFinishingScore = parseFloat(\n        teams[i][index].finishingScore / gameTotalWeighting + 1\n      );\n\n      teams[i][index].XGConcededAdjustment = parseFloat(\n        teams[i][index].goalieRating / gameTotalWeighting + 1\n      );\n\n      teams[i][index].forecastedXG = parseFloat(teams[i][index].scoredAverage);\n\n      teams[i][index].forecastedXGConceded = parseFloat(\n        teams[i][index].concededAverage\n      );\n\n      teams[0][index].goalsBasedOnAverages = Math.round(\n        parseFloat(\n          (teams[0][index].forecastedXG +\n            teams[1][index].forecastedXGConceded) /\n            2\n        )\n      );\n\n      teams[1][index].goalsBasedOnAverages = Math.round(\n        parseFloat(\n          (teams[1][index].forecastedXG +\n            teams[0][index].forecastedXGConceded) /\n            2\n        )\n      );\n    }\n\n    if (match.homeOdds === 0 && match.awayOdds === 0) {\n      homeRaw = 0.0;\n      awayRaw = 0.0;\n    } else {\n      homeRaw = (1 / match.homeOdds).toFixed(2);\n      awayRaw = (1 / match.awayOdds).toFixed(2);\n    }\n\n    let formHome = teams[0][index];\n    let formAway = teams[1][index];\n\n    // formHome.averageGoalDifferential =\n    //   formHome.generalOffensiveRating - formAway.generalOffensiveRating;\n    formHome.averageGoalDifferential =\n      ((formHome.homeOffensiveRating - formAway.awayOffensiveRating) * 3 +\n        (formHome.recentHomeOffensiveRating -\n          formAway.recentHomeOffensiveRating)) /\n      4;\n    formHome.averageConcededDifferential =\n      ((formHome.homeDefensiveRating - formAway.awayDefensiveRating) * 3 +\n        (formHome.recentHomeDefensiveRating -\n          formAway.recentAwayDefensiveRating)) /\n      4;\n\n    formAway.averageGoalDifferential =\n      ((formAway.awayOffensiveRating - formHome.homeOffensiveRating) * 3 +\n        (formAway.recentAwayOffensiveRating -\n          formHome.recentHomeOffensiveRating)) /\n      4;\n    formAway.averageConcededDifferential =\n      ((formAway.awayDefensiveRating - formHome.homeDefensiveRating) * 3 +\n        (formAway.recentAwayDefensiveRating -\n          formHome.recentHomeDefensiveRating)) /\n      4;\n\n    let oddsWeightingHome;\n    let oddsWeightingAway;\n    let homeWeighting;\n    let awayWeighting;\n\n    let weightingSplitHome;\n    let weightingSplitAway;\n    let weighting;\n\n    if (homeRaw > 0) {\n      oddsWeightingHome = awayRaw - homeRaw;\n      oddsWeightingAway = homeRaw - awayRaw;\n\n      weighting = await diff(oddsWeightingAway, oddsWeightingHome);\n\n      if (weighting >= 0) {\n        weightingSplitHome = Math.abs(weighting) / 2;\n        weightingSplitAway = -Math.abs(weighting) / 2;\n      } else if (weighting < 0) {\n        weightingSplitHome = -Math.abs(weighting) / 2;\n        weightingSplitAway = Math.abs(weighting) / 2;\n      } else {\n        weightingSplitHome = 0;\n        weightingSplitAway = 0;\n      }\n    } else {\n      weightingSplitHome = 0;\n      weightingSplitAway = 0;\n    }\n\n    homeWeighting = weightingSplitHome * 1.5;\n    awayWeighting = weightingSplitAway * 1.5;\n\n    let homeCalculation;\n    let awayCalculation;\n\n    homeCalculation = parseFloat(homeWeighting);\n    awayCalculation = parseFloat(awayWeighting);\n\n    // let leagueName = allLeagueData.find(\n    //   ({ competitionId }) => competitionId === match.competition_id\n    // ).name;\n\n    const homeGoalWeighting = formHome.homeAttackAdvantageWeighted / 100;\n    const HomeDefenceWeighting = formHome.homeDefenceAdvantageWeighted / 100;\n\n    const homeGoalsUnweighted = parseFloat(\n      (formHome.XG + formHome.scoredAverage) / 2\n    );\n\n    const awayGoalsUnweighted = parseFloat(\n      (formAway.XG + formAway.scoredAverage) / 2\n    );\n\n    const homeGoalsWithOddsWeighting = parseFloat(\n      homeGoalsUnweighted + homeCalculation\n    );\n\n    const awayGoalsWithOddsWeighting = parseFloat(\n      awayGoalsUnweighted + awayCalculation\n    );\n\n    const homeGoalsWithAwayDefenceWeighting = parseFloat(\n      homeGoalsWithOddsWeighting * formAway.defenceRating\n    );\n\n    const awayGoalsWithHomeDefenceWeighting = parseFloat(\n      awayGoalsWithOddsWeighting * formHome.defenceRating\n    );\n\n    let homeAdvantageAttackAdjustment = 1 + homeGoalWeighting / 4;\n    let homeAdvantageDefenceAdjustment;\n\n    if (HomeDefenceWeighting >= 0) {\n      homeAdvantageDefenceAdjustment = 1 - HomeDefenceWeighting / 4;\n    } else if (HomeDefenceWeighting < 0) {\n      homeAdvantageDefenceAdjustment = 1 + HomeDefenceWeighting / 4;\n    }\n\n    let homeGoalswithHomeWeighting;\n    let awayGoalswithAwayWeighting;\n\n    homeGoalswithHomeWeighting = parseFloat(homeGoalsWithAwayDefenceWeighting);\n\n    awayGoalswithAwayWeighting = parseFloat(awayGoalsWithHomeDefenceWeighting);\n\n    if (homeGoalswithHomeWeighting < 0) {\n      homeGoalswithHomeWeighting = 0;\n    }\n\n    if (awayGoalswithAwayWeighting < 0) {\n      awayGoalswithAwayWeighting = 0;\n    }\n\n    let finalHomeGoals;\n    let finalAwayGoals;\n\n    async function roundCustom(num, form) {\n      let wholeNumber = Math.floor(num);\n      let remainder = num - wholeNumber;\n      // if(form.lastGame === \"W\"){\n      //   return Math.ceil(num)\n      // } else if (form.lastGame === \"L\"){\n      //   return Math.floor(num)\n      // } else {\n      //   return Math.round(num)\n      // }\n      if (form.finalFinishingScore <= 0.95) {\n        return Math.ceil(num);\n      } else if (\n        form.finalFinishingScore >= 1.01 &&\n        form.finalFinishingScore < 1.3\n      ) {\n        return Math.round(num);\n      } else if (form.finalFinishingScore >= 1.3) {\n        return Math.floor(num);\n      } else if (remainder < 0.85) {\n        return Math.floor(num);\n      } else if (remainder >= 0.85) {\n        return Math.ceil(num);\n      }\n    }\n\n    const XGAgainstAdjustedHomeGoals =\n      homeGoalswithHomeWeighting * formAway.XGConcededAdjustment;\n    const XGAgainstAdjustedAwayGoals =\n      awayGoalswithAwayWeighting * formHome.XGConcededAdjustment;\n\n    const XGAdjustedHomeGoals =\n      (homeGoalswithHomeWeighting + XGAgainstAdjustedHomeGoals) / 2;\n    const XGAdjustedAwayGoals =\n      (awayGoalswithAwayWeighting + XGAgainstAdjustedAwayGoals) / 2;\n\n    let gameHomeAttackAdvantage =\n      (formHome.averageGoalDifferential - formAway.averageGoalDifferential) / 2;\n\n    let gameHomeDefenceAdvantage =\n      (formAway.averageConcededDifferential -\n        formHome.averageConcededDifferential) /\n      2;\n\n    let goalsDifferential = gameHomeAttackAdvantage + gameHomeDefenceAdvantage;\n\n    let homeAttackDiff = parseFloat(await diff(gameHomeAttackAdvantage, 0));\n    let homeDefenceDiff = parseFloat(await diff(gameHomeDefenceAdvantage, 0));\n\n    const generalformHomeGoals =\n      (formHome.generalOffensiveRating +\n        homeCalculation +\n        formAway.defenceRating * formAway.generalDefensiveRating +\n        1 +\n        homeGoalWeighting) /\n      2;\n\n    const generalformAwayGoals =\n      (formAway.generalOffensiveRating +\n        awayCalculation +\n        formHome.defenceRating * formHome.generalDefensiveRating +\n        1 -\n        HomeDefenceWeighting) /\n      2;\n\n    let calculatedDifferential = generalformHomeGoals - generalformAwayGoals;\n\n    let differentialWeighting =\n      (await diff(goalsDifferential, calculatedDifferential)) / 4;\n\n    let homeGoalDifferentialWeighting;\n    let awayGoalDifferentialWeighting;\n\n    if (differentialWeighting >= 0) {\n      homeGoalDifferentialWeighting = differentialWeighting / 1;\n      awayGoalDifferentialWeighting = -Math.abs(differentialWeighting) / 1;\n    } else if (differentialWeighting < 0) {\n      homeGoalDifferentialWeighting = -Math.abs(differentialWeighting) / 1;\n      awayGoalDifferentialWeighting = Math.abs(differentialWeighting) / 1;\n    }\n\n    let experimentalHomeGoals =\n      (formHome.scoredAverage + formHome.XG) / 2 +\n      homeGoalDifferentialWeighting;\n    let experimentalAwayGoals =\n      (formAway.scoredAverage + formAway.XG) / 2 +\n      awayGoalDifferentialWeighting;\n\n    let rawFinalHomeGoals = parseFloat(\n      ((experimentalHomeGoals * 25 +\n        homeGoalsWithAwayDefenceWeighting * 10 +\n        formHome.goalsBasedOnAverages * 10 +\n        XGAdjustedHomeGoals * 0) /\n        45) *\n        homeAdvantageAttackAdjustment\n    );\n\n    let rawFinalAwayGoals = parseFloat(\n      ((experimentalAwayGoals * 25 +\n        awayGoalsWithHomeDefenceWeighting * 10 +\n        formAway.goalsBasedOnAverages * 10 +\n        XGAdjustedAwayGoals * 0) /\n        45) *\n        homeAdvantageDefenceAdjustment\n    );\n\n    console.log(`${match.homeTeam} raw ${rawFinalHomeGoals}`);\n    console.log(`${match.awayTeam} raw ${rawFinalAwayGoals}`);\n\n    if (rawFinalAwayGoals < 0) {\n      console.log(`${match.homeTeam} before ${rawFinalHomeGoals}`);\n      let difference = parseFloat(await diff(0, rawFinalAwayGoals));\n      rawFinalHomeGoals = rawFinalHomeGoals + difference;\n      console.log(`${match.homeTeam} after ${rawFinalHomeGoals}`);\n    }\n\n    if (rawFinalHomeGoals < 0) {\n      console.log(`${match.awayTeam} before ${rawFinalAwayGoals}`);\n      let difference = parseFloat(await diff(0, rawFinalHomeGoals));\n      rawFinalAwayGoals = rawFinalAwayGoals + difference;\n      console.log(`${match.awayTeam} after ${rawFinalAwayGoals}`);\n    }\n\n    finalHomeGoals = await roundCustom(rawFinalHomeGoals, formHome);\n    // finalHomeGoals = Math.floor(rawFinalHomeGoals)\n\n    finalAwayGoals = await roundCustom(rawFinalAwayGoals, formAway);\n    // finalAwayGoals = Math.floor(rawFinalAwayGoals)\n\n    if (finalHomeGoals > finalAwayGoals) {\n      match.prediction = \"homeWin\";\n    } else if (finalAwayGoals > finalHomeGoals) {\n      match.prediction = \"awayWin\";\n    } else if (finalHomeGoals === finalAwayGoals) {\n      match.prediction = \"draw\";\n    }\n\n    switch (true) {\n      case match.homeGoals > match.awayGoals:\n        match.winner = match.homeTeam;\n        match.outcome = \"homeWin\";\n        break;\n      case match.homeGoals === match.awayGoals:\n        match.winner = \"draw\";\n        match.outcome = \"draw\";\n\n        break;\n      case match.homeGoals < match.awayGoals:\n        match.winner = match.awayTeam;\n        match.outcome = \"awayWin\";\n        break;\n      default:\n        break;\n    }\n\n    if (match.status === \"complete\") {\n      if (match.prediction === match.outcome) {\n        match.predictionOutcome = \"Won\";\n      } else if (match.prediction !== match.outcome) {\n        match.predictionOutcome = \"Lost\";\n      }\n    }\n\n    let total = parseInt(finalHomeGoals + finalAwayGoals);\n    totalGoals = totalGoals + total;\n\n    numberOfGames = numberOfGames + 1;\n\n    if (finalHomeGoals < 0) {\n      finalHomeGoals = 0;\n    }\n\n    if (finalAwayGoals < 0) {\n      finalAwayGoals = 0;\n    }\n\n    if (match.status === \"suspended\") {\n      finalHomeGoals = \"P\";\n      finalAwayGoals = \"P\";\n    }\n    return [\n      finalHomeGoals,\n      finalAwayGoals,\n      rawFinalHomeGoals,\n      rawFinalAwayGoals,\n    ];\n  } else {\n    finalHomeGoals = \"-\";\n    finalAwayGoals = \"-\";\n    rawFinalHomeGoals = \"-\";\n    rawFinalAwayGoals = \"-\";\n  }\n\n  return [finalHomeGoals, finalAwayGoals, rawFinalHomeGoals, rawFinalAwayGoals];\n}\n\nasync function getSuccessMeasure(fixtures) {\n  let sum = 0;\n  let gameCount = 0;\n  let profit;\n\n  for (let i = 0; i < fixtures.length; i++) {\n    if (fixtures[i].status === \"complete\") {\n      if (fixtures[i].predictionOutcome === \"Won\") {\n        sum = sum + fixtures[i].profit;\n\n        profit = sum.toFixed(2);\n\n        gameCount = gameCount + 1;\n      } else if (fixtures[i].predictionOutcome === \"Lost\") {\n        sum = sum - 1;\n        profit = sum.toFixed(2);\n        gameCount = gameCount + 1;\n      } else {\n        sum = sum + 0;\n        profit = sum.toFixed(2);\n        gameCount = gameCount + 0;\n      }\n    }\n  }\n\n  if (gameCount > 0) {\n    ReactDOM.render(\n      <Fragment>\n        <Div\n          className={\"SuccessMeasure\"}\n          text={`accumulated profit/loss if £1 was staked on each of the  ${gameCount} games: £${profit}`}\n        />\n      </Fragment>,\n      document.getElementById(\"successMeasure\")\n    );\n  } else {\n    return;\n  }\n}\n\nvar tips = [];\nvar longShotTips = [];\nvar bttsArray = [];\nvar accumulatedOdds = 1;\nlet predictions = [];\n\nexport async function getScorePrediction(day) {\n  let radioSelected = parseInt(selectedOption);\n  tips = [];\n  bttsArray = [];\n  longShotTips = [];\n  accumulatedOdds = 1;\n\n  let index;\n  let divider;\n  if (radioSelected === 5) {\n    index = 0;\n    divider = 5;\n  } else if (radioSelected === 6) {\n    index = 1;\n    divider = 6;\n  } else if (radioSelected === 10) {\n    index = 2;\n    divider = 10;\n  }\n\n  await Promise.all(\n    matches.map(async (match) => {\n      // if there are no stored predictions, calculate them based on live data\n      if (match) {\n        switch (true) {\n          case match.status === \"!suspended\":\n            [\n              match.goalsA,\n              match.goalsB,\n              match.unroundedGoalsA,\n              match.unroundedGoalsB,\n            ] = await calculateScore(match, index, divider, match.id);\n\n            break;\n          case match.status === \"suspended\" || match.status === \"canceled\":\n            match.goalsA = \"P\";\n            match.goalsB = \"P\";\n            break;\n          default:\n            [\n              match.goalsA,\n              match.goalsB,\n              match.unroundedGoalsA,\n              match.unroundedGoalsB,\n            ] = await calculateScore(match, index, divider, match.id);\n            break;\n        }\n      } else {\n        [\n          match.goalsA,\n          match.goalsB,\n          match.unroundedGoalsA,\n          match.unroundedGoalsB,\n        ] = await calculateScore(match, index, divider, match.id);\n      }\n\n      let predictionObject;\n      let longShotPredictionObject;\n\n      if (\n        match.unroundedGoalsA - incrementValue > match.unroundedGoalsB &&\n        match.homeOdds !== 0 &&\n        match.fractionHome !== \"N/A\"\n      ) {\n\n        console.log(\"accumulatedOdds\")\n        console.log(accumulatedOdds)\n\n\n        if (match.prediction !== \"draw\" && match.status !== \"suspended\" && match.status !== \"canceled\") {\n          console.log(match)\n\n          accumulatedOdds =\n          parseFloat(accumulatedOdds) * parseFloat(match.homeOdds);\n\n          predictionObject = {\n            team: match.homeTeam,\n            odds: match.fractionHome,\n            outcome: match.predictionOutcome,\n            goalDifferential: parseFloat(\n              await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n            ),\n          };\n          tips.push(predictionObject);\n        }\n      } else if (\n        match.unroundedGoalsB - incrementValue > match.unroundedGoalsA &&\n        match.awayOdds !== 0 &&\n        match.fractionAway !== \"N/A\"\n      ) {\n\n        console.log(\"accumulatedOdds\")\n        console.log(accumulatedOdds)\n\n\n\n        if (match.prediction !== \"draw\" && match.status !== \"suspended\" && match.status !== \"canceled\") {\n          console.log(match)\n\n          accumulatedOdds =\n          parseFloat(accumulatedOdds) * parseFloat(match.awayOdds);\n\n          predictionObject = {\n            team: match.awayTeam,\n            odds: match.fractionAway,\n            outcome: match.predictionOutcome,\n            goalDifferential: parseFloat(\n              await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n            ),\n          };\n          tips.push(predictionObject);\n        }\n        console.log(\"tips\")\n        console.log(tips)\n\n      }\n\n      tips.sort(function (a, b) {\n        return b.goalDifferential - a.goalDifferential;\n      });\n\n      await getBTTSPotential(allForm, match, index);\n      if (\n        match.btts === true &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        bttsArray.push(match);\n      }\n\n      if (\n        match.unroundedGoalsA - 0.75 > match.unroundedGoalsB &&\n        match.homeOdds >= 2.5\n      ) {\n        longShotPredictionObject = {\n          team: match.homeTeam,\n          odds: match.fractionHome,\n          outcome: match.predictionOutcome,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        if (match.prediction !== \"draw\") {\n          longShotTips.push(longShotPredictionObject);\n        }\n      } else if (\n        match.unroundedGoalsA < match.unroundedGoalsB - 0.75 &&\n        match.awayOdds >= 2.5\n      ) {\n        longShotPredictionObject = {\n          team: match.awayTeam,\n          odds: match.fractionAway,\n          outcome: match.predictionOutcome,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        if (match.prediction !== \"draw\") {\n          longShotTips.push(longShotPredictionObject);\n        }\n      }\n\n      longShotTips.sort(function (a, b) {\n        return b.goalDifferential - a.goalDifferential;\n      });\n\n      ReactDOM.render(\n        <Fixture\n          fixtures={matches}\n          result={true}\n          className={\"individualFixture\"}\n        />,\n        document.getElementById(\"FixtureContainer\")\n      );\n\n      predictions.push(match);\n    })\n  );\n  await getSuccessMeasure(matches);\n\n  await renderTips();\n}\n\nasync function renderTips() {\n  ReactDOM.render(\n    <div className=\"PredictionContainer\">\n      <Fragment>\n        <Increment />\n        <Collapsable\n          buttonText={\"Build a multi\"}\n          className={\"PredictionsOfTheDay\"}\n          text={\n            <ul className=\"BestPredictions\">\n              <div className=\"BestPredictionsExplainer\">\n                Change the size of the accumulator with the + and - buttons.\n                Games with smaller predicted winning margins will be added or\n                taken away with each tap. Multis are based on the form option\n                selected, above\n              </div>\n              {tips.map((tip) => (\n                <li className={tip.outcome} key={tip.team}>\n                  {tip.team} odds: {tip.odds}\n                </li>\n              ))}\n              <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                Math.round(accumulatedOdds) - 1\n              }/1`}</div>\n            </ul>\n          }\n        />\n      </Fragment>\n    </div>,\n    document.getElementById(\"bestPredictions\")\n  );\n\n  ReactDOM.render(\n    <div>\n      <Fragment>\n        <Collapsable\n          buttonText={\"Longshot predictions\"}\n          text={\n            <ul className=\"LongshotPredictions\">\n              <lh>To win</lh>\n              {longShotTips.map((tip) => (\n                <li className={tip.outcome} key={tip.team}>\n                  {tip.team} odds: {tip.odds}\n                </li>\n              ))}\n            </ul>\n          }\n        />\n      </Fragment>\n    </div>,\n    document.getElementById(\"longShots\")\n  );\n\n  ReactDOM.render(\n    <div>\n      <Fragment>\n        <Collapsable\n          className={\"BTTSGames\"}\n          buttonText={\"BTTS games\"}\n          text={\n            <ul className=\"BTTSGames\">\n              <lh>Games with highest chance of BTTS</lh>\n              {bttsArray.map((game) => (\n                <li className={game.bttsOutcome} key={game.game}>\n                  {game.game}\n                </li>\n              ))}\n            </ul>\n          }\n        />\n      </Fragment>\n    </div>,\n    document.getElementById(\"BTTS\")\n  );\n}\n","export async function getBTTSPotential(allForm, match, index) {\n\n  let homeTeam = match.homeTeam;\n  let awayTeam = match.awayTeam;\n\n\n  let home = allForm.findIndex(function (item, i) {\n    return item.home.teamName === homeTeam;\n  });\n\n  let away = allForm.findIndex(function (item, i) {\n    return item.away.teamName === awayTeam;\n  });\n\n  let homeBTTS = allForm[home].home[index].BTTSPercentage;\n  let awayBTTS = allForm[away].away[index].BTTSPercentage;\n\n  let homeAverageConceded = allForm[home].home[index].concededAverage;\n  let awayAverageConceded = allForm[away].away[index].concededAverage;\n\n  let homeAverageScored = allForm[home].home[index].scoredAverage;\n  let awayAverageScored = allForm[away].away[index].scoredAverage;\n\n  let homeOdds = match.homeOdds;\n  let awayOdds = match.awayOdds;\n\n  let dangerousAttacksAway = allForm[away].away[index].DangerousAttacksAway;\n\n  match.combinedBTTS = (homeBTTS + awayBTTS) / 2;\n\n\n  if (\n    allForm[away].away[index].PPG >= 1 &&\n    match.combinedBTTS >= 60 &&\n    dangerousAttacksAway > 40 &&\n    homeAverageConceded > 1.3 &&\n    awayOdds < 3\n  ) {\n    match.btts = true;\n  } else {\n    match.btts = false;\n  }\n\n  return match;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { orderedLeagues, proxyurl } from \"../App\";\nimport { getForm, applyColour } from \"./getForm\";\nimport { Fixture } from \"../components/Fixture\";\nimport { Button } from \"../components/Button\";\nimport { getScorePrediction } from \"../logic/getScorePredictions\";\nvar oddslib = require(\"oddslib\");\n\nrequire(\"dotenv\").config();\n\nvar fixtureResponse;\nvar fixtureArray;\nexport const matches = [];\nexport const resultedMatches = [];\nvar league;\nvar leagueGames = [];\nexport var leagueArray = [];\nvar lastFiveFormHome;\nvar lastFiveFormAway;\n\nexport const [currentDay, month, year] = new Date()\n  .toLocaleDateString(\"en-US\")\n  .split(\"/\");\nlet tomorrowsDate = new Date();\ntomorrowsDate.setDate(new Date().getDate() + 1);\nlet [\n  tomorrowDay,\n  tomorrowMonth,\n  tomorrowYear,\n] = tomorrowsDate.toLocaleDateString(\"en-US\").split(\"/\");\n\nlet yesterdaysDate = new Date();\nyesterdaysDate.setDate(new Date().getDate() - 1);\nlet [\n  yesterdayDay,\n  yesterdayMonth,\n  yesterdayYear,\n] = yesterdaysDate.toLocaleDateString(\"en-US\").split(\"/\");\n\nexport const yesterday = `https://api.footystats.org/todays-matches?key=${process.env.REACT_APP_API_KEY}&date=${yesterdayYear}-${yesterdayDay}-${yesterdayMonth}`;\nexport const today = `https://api.footystats.org/todays-matches?key=${process.env.REACT_APP_API_KEY}&date=${year}-${currentDay}-${month}`;\nexport const tomorrow = `https://api.footystats.org/todays-matches?key=${process.env.REACT_APP_API_KEY}&date=${tomorrowYear}-${tomorrowDay}-${tomorrowMonth}`;\n\nexport function getRadioState(state) {\n  let radioState = state;\n  return radioState;\n}\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nexport let allForm = [];\n\nasync function createFixture(match, result) {\n  let roundedHomeOdds;\n  let roundedAwayOdds;\n  let homeFraction;\n  let awayFraction;\n\n  if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n    roundedHomeOdds = (Math.round(match.homeOdds * 5) / 5).toFixed(1);\n    roundedAwayOdds = (Math.round(match.awayOdds * 5) / 5).toFixed(1);\n\n    if (roundedHomeOdds < 1.1) {\n      roundedHomeOdds = 1.1;\n    }\n    if (roundedAwayOdds < 1.1) {\n      roundedAwayOdds = 1.1;\n    }\n\n    try {\n      homeFraction = oddslib\n        .from(\"decimal\", roundedHomeOdds)\n        .to(\"fractional\", { precision: 1 });\n      awayFraction = oddslib\n        .from(\"decimal\", roundedAwayOdds)\n        .to(\"fractional\", { precision: 1 });\n    } catch (error) {\n      console.log(error);\n    }\n  } else {\n    homeFraction = \"N/A\";\n    awayFraction = \"N/A\";\n  }\n\n  match.fractionHome = homeFraction;\n  match.fractionAway = awayFraction;\n\n  match.game = match.homeTeam + \" v \" + match.awayTeam;\n\n  ReactDOM.render(\n    <Fixture\n      fixtures={matches}\n      result={result}\n      className={\"individualFixture\"}\n    />,\n    document.getElementById(\"FixtureContainer\")\n  );\n}\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nexport async function generateFixtures(day, radioState) {\n  let url;\n  switch (day) {\n    case \"yesterdaysFixtures\":\n      url = yesterday;\n      break;\n    case \"todaysFixtures\":\n      url = today;\n      break;\n    case \"tomorrowsFixtures\":\n      url = tomorrow;\n      break;\n    default:\n      break;\n  }\n\n  fixtureResponse = await fetch(proxyurl + url);\n\n  await fixtureResponse.json().then((fixtures) => {\n    fixtureArray = Array.from(fixtures.data);\n  });\n\n  ReactDOM.render(\n    <Button\n      text={\"Get Predictions\"}\n      onClickEvent={() => getScorePrediction(day)}\n    />,\n    document.getElementById(\"Buttons\")\n  );\n  let form;\n  let formArray;\n  var isFormStored;\n  var isStoredLocally;\n  let storedForm = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}form${day}`,\n    {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n      },\n    }\n  );\n  if (storedForm.status === 201) {\n    await storedForm.json().then((form) => {\n      formArray = Array.from(form.allForm);\n      isFormStored = true;\n      isStoredLocally = false;\n      allForm = formArray;\n    });\n  } else if (storedForm.status === 200) {\n    await storedForm.json().then((form) => {\n      formArray = Array.from(form.allForm);\n      isFormStored = true;\n      isStoredLocally = false;\n      allForm = formArray;\n    });\n  } else {\n    isFormStored = false;\n    isStoredLocally = false;\n  }\n\n  league = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${currentDay}${month}${year}`\n  );\n\n\n  var leaguePositions = [];\n\n  if (league.status === 200) {\n    await league.json().then((leagues) => {\n      leagueArray = Array.from(leagues.leagueArray);\n    });\n  } else {\n    for (let i = 0; i < orderedLeagues.length; i++) {\n      league = await fetch(\n        `${proxyurl}https://api.footystats.org/league-tables?key=b9c4c927b39f4c66a3e3c4e4fbfeff999c911069d1df704de1221230800cd79b&season_id=${orderedLeagues[i].element.id}`\n      );\n      // eslint-disable-next-line no-loop-func\n      await league.json().then((table) => {\n        leagueArray.push(table);\n      });\n    }\n  }\n\n  for (let i = 0; i < 20; i++) {\n    for (\n      let x = 0;\n      x < leagueArray[i].data.all_matches_table_overall.length;\n      x++\n    ) {\n      let string = leagueArray[i].data.all_matches_table_overall[x];\n      leaguePositions.push({\n        name: string.cleanName,\n        position: string.position,\n        ppg: string.ppg_overall,\n      });\n    }\n  }\n\n\n  for (let i = 0; i < orderedLeagues.length; i++) {\n    leagueGames = fixtureArray.filter(\n      (game) => game.competition_id === orderedLeagues[i].element.id\n    );\n\n    for (const fixture of leagueGames) {\n      const unixTimestamp = fixture.date_unix;\n      const milliseconds = unixTimestamp * 1000;\n      const dateObject = new Date(milliseconds);\n\n      let match = {};\n      match.id = fixture.id;\n      match.competition_id = fixture.competition_id;\n      match.time = dateObject.toLocaleString(\"en-US\", { hour: \"numeric\" });\n      match.homeTeam = fixture.home_name;\n      match.awayTeam = fixture.away_name;\n      match.homeOdds = fixture.odds_ft_1;\n      match.awayOdds = fixture.odds_ft_2;\n      match.drawOdds = fixture.odds_ft_x;\n      match.homeId = fixture.homeID;\n      match.awayId = fixture.awayID;\n      match.form = [];\n      match.homeTeamInfo = [];\n      match.awayTeamInfo = [];\n      match.btts = false;\n\n      let homeTeaminLeague;\n      let awayTeaminLeague;\n      let teamPositionHome;\n      let teamPositionAway;\n      let teamPositionPrefix;\n      let homePrefix;\n      let awayPrefix;\n      let homeSeasonPPG;\n      let awaySeasonPPG;\n\n      async function getPrefix(position) {\n        switch (position) {\n          case 1:\n          case 21:\n            teamPositionPrefix = \"st\";\n            break;\n          case 2:\n          case 22:\n            teamPositionPrefix = \"nd\";\n            break;\n          case 3:\n          case 23:\n            teamPositionPrefix = \"rd\";\n            break;\n          case 4:\n          case 5:\n          case 6:\n          case 7:\n          case 8:\n          case 9:\n          case 10:\n          case 11:\n          case 12:\n          case 13:\n          case 14:\n          case 15:\n          case 16:\n          case 17:\n          case 18:\n          case 19:\n          case 20:\n          case 24:\n            teamPositionPrefix = \"th\";\n            break;\n          default:\n            break;\n        }\n        return teamPositionPrefix;\n      }\n\n      try {\n        homeTeaminLeague = leaguePositions.find(\n          (team) => team.name === match.homeTeam\n        );\n        teamPositionHome = homeTeaminLeague.position;\n        homePrefix = await getPrefix(teamPositionHome);\n        homeSeasonPPG = homeTeaminLeague.ppg.toFixed(2);\n      } catch (error) {\n        console.log(error);\n        teamPositionHome = \"N/A\";\n        homePrefix = \"\";\n        homeSeasonPPG = \"N/A\";\n      }\n\n      try {\n        awayTeaminLeague = leaguePositions.find(\n          (team) => team.name === match.awayTeam\n        );\n        teamPositionAway = awayTeaminLeague.position;\n        awayPrefix = await getPrefix(teamPositionAway);\n        awaySeasonPPG = awayTeaminLeague.ppg.toFixed(2);\n      } catch (error) {\n        console.log(error);\n        teamPositionAway = \"N/A\";\n        awayPrefix = \"\";\n        awaySeasonPPG = \"N/A\";\n      }\n\n      if (!isFormStored) {\n        form = await getForm(match);\n\n        var homeExtract = form[0].data[0].stats.additional_info.replace(\n          /[\"']/g,\n          \"\"\n        );\n\n        var slug = homeExtract.split(\",53:\").pop().toUpperCase();\n        lastFiveFormHome = [...slug.substring(0, 5)];\n\n        var awayExtract = form[1].data[0].stats.additional_info.replace(\n          /[\"']/g,\n          \"\"\n        );\n\n        var slugAway = awayExtract.split(\",53:\").pop().toUpperCase();\n        lastFiveFormAway = [...slugAway.substring(0, 5)];\n\n        allForm.push({\n          id: match.id,\n          home: {\n            teamName: match.homeTeam,\n            0: {\n              XG: parseFloat(form[0].data[0].stats.xg_for_avg_overall),\n              XGHome: parseFloat(form[0].data[0].stats.xg_for_avg_home),\n              XGAway: parseFloat(form[0].data[0].stats.xg_for_avg_away),\n              ScoredOverall: parseFloat(\n                form[0].data[0].stats.seasonScoredNum_overall\n              ),\n              ScoredHome: parseFloat(\n                form[0].data[0].stats.seasonScoredNum_home\n              ),\n              ScoredAway: parseFloat(\n                form[0].data[0].stats.seasonScoredNum_away\n              ),\n              PlayedHome: parseFloat(\n                form[0].data[0].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[0].data[0].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[0].data[0].stats.seasonConcededNum_overall\n              ),\n              ConcededHome: parseFloat(\n                form[0].data[0].stats.seasonConcededNum_home\n              ),\n              ConcededAway: parseFloat(\n                form[0].data[0].stats.seasonConcededNum_away\n              ),\n              XGAgainstAvg: parseFloat(\n                form[0].data[0].stats.xg_against_avg_overall\n              ),\n              XGAgainstHome: parseFloat(\n                form[0].data[0].stats.xg_against_avg_home\n              ),\n              XGAgainstAway: parseFloat(\n                form[0].data[0].stats.xg_against_avg_away\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[0].data[0].stats.seasonCSPercentage_overall\n              ),\n              AveragePossession: parseFloat(\n                form[0].data[0].stats.possessionAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[0].data[0].stats.shotsOnTargetAVG_overall\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[0].data[0].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[0].data[0].stats.seasonPPG_overall),\n              AttacksHome: parseFloat(form[0].data[0].stats.attacks_avg_home),\n              AttacksAway: parseFloat(form[0].data[0].stats.attacks_avg_away),\n              DangerousAttacksHome: parseFloat(\n                form[0].data[0].stats.dangerous_attacks_avg_home\n              ),\n              DangerousAttacksAway: parseFloat(\n                form[0].data[0].stats.dangerous_attacks_avg_away\n              ),\n              homeAttackAdvantage: parseFloat(\n                form[0].data[0].stats.homeAttackAdvantage\n              ),\n              homeDefenceAdvantage: parseFloat(\n                form[0].data[0].stats.homeDefenceAdvantage\n              ),\n              BTTSPercentage: parseInt(\n                form[0].data[0].stats.seasonBTTSPercentage_overall\n              ),\n              LastFiveForm: lastFiveFormHome,\n              LeaguePosition: `${teamPositionHome}${homePrefix}`,\n              SeasonPPG: homeSeasonPPG,\n            },\n            1: {\n              XG: parseFloat(form[0].data[1].stats.xg_for_avg_overall),\n              XGHome: parseFloat(form[0].data[1].stats.xg_for_avg_home),\n              XGAway: parseFloat(form[0].data[1].stats.xg_for_avg_away),\n              ScoredOverall: parseFloat(\n                form[0].data[1].stats.seasonScoredNum_overall\n              ),\n              ScoredHome: parseFloat(\n                form[0].data[1].stats.seasonScoredNum_home\n              ),\n              ScoredAway: parseFloat(\n                form[0].data[1].stats.seasonScoredNum_away\n              ),\n              PlayedHome: parseFloat(\n                form[0].data[1].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[0].data[1].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[0].data[1].stats.seasonConcededNum_overall\n              ),\n              ConcededHome: parseFloat(\n                form[0].data[1].stats.seasonConcededNum_home\n              ),\n              ConcededAway: parseFloat(\n                form[0].data[1].stats.seasonConcededNum_away\n              ),\n              XGAgainstAvg: parseFloat(\n                form[0].data[1].stats.xg_against_avg_overall\n              ),\n              XGAgainstHome: parseFloat(\n                form[0].data[1].stats.xg_against_avg_home\n              ),\n              XGAgainstAway: parseFloat(\n                form[0].data[1].stats.xg_against_avg_away\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[0].data[1].stats.seasonCSPercentage_overall\n              ),\n              AveragePossession: parseFloat(\n                form[0].data[1].stats.possessionAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[0].data[1].stats.shotsOnTargetAVG_overall\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[0].data[1].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[0].data[1].stats.seasonPPG_overall),\n              AttacksHome: parseFloat(form[0].data[1].stats.attacks_avg_home),\n              AttacksAway: parseFloat(form[0].data[1].stats.attacks_avg_away),\n              DangerousAttacksHome: parseFloat(\n                form[0].data[1].stats.dangerous_attacks_avg_home\n              ),\n              DangerousAttacksAway: parseFloat(\n                form[0].data[1].stats.dangerous_attacks_avg_away\n              ),\n              homeAttackAdvantage: parseFloat(\n                form[0].data[1].stats.homeAttackAdvantage\n              ),\n              homeDefenceAdvantage: parseFloat(\n                form[0].data[1].stats.homeDefenceAdvantage\n              ),\n              BTTSPercentage: parseInt(\n                form[0].data[1].stats.seasonBTTSPercentage_overall\n              ),\n              LastFiveForm: lastFiveFormHome,\n              LeaguePosition: `${teamPositionHome}${homePrefix}`,\n              SeasonPPG: homeSeasonPPG,\n            },\n            2: {\n              XG: parseFloat(form[0].data[2].stats.xg_for_avg_overall),\n              XGHome: parseFloat(form[0].data[2].stats.xg_for_avg_home),\n              XGAway: parseFloat(form[0].data[2].stats.xg_for_avg_away),\n              ScoredOverall: parseFloat(\n                form[0].data[2].stats.seasonScoredNum_overall\n              ),\n              ScoredHome: parseFloat(\n                form[0].data[2].stats.seasonScoredNum_home\n              ),\n              ScoredAway: parseFloat(\n                form[0].data[2].stats.seasonScoredNum_away\n              ),\n              PlayedHome: parseFloat(\n                form[0].data[2].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[0].data[2].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[0].data[2].stats.seasonConcededNum_overall\n              ),\n              ConcededHome: parseFloat(\n                form[0].data[2].stats.seasonConcededNum_home\n              ),\n              ConcededAway: parseFloat(\n                form[0].data[2].stats.seasonConcededNum_away\n              ),\n              XGAgainstAvg: parseFloat(\n                form[0].data[2].stats.xg_against_avg_overall\n              ),\n              XGAgainstHome: parseFloat(\n                form[0].data[2].stats.xg_against_avg_home\n              ),\n              XGAgainstAway: parseFloat(\n                form[0].data[2].stats.xg_against_avg_away\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[0].data[2].stats.seasonCSPercentage_overall\n              ),\n              AveragePossession: parseFloat(\n                form[0].data[2].stats.possessionAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[0].data[2].stats.shotsOnTargetAVG_overall\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[0].data[2].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[0].data[2].stats.seasonPPG_overall),\n              AttacksHome: parseFloat(form[0].data[2].stats.attacks_avg_home),\n              AttacksAway: parseFloat(form[0].data[2].stats.attacks_avg_away),\n              DangerousAttacksHome: parseFloat(\n                form[0].data[2].stats.dangerous_attacks_avg_home\n              ),\n              DangerousAttacksAway: parseFloat(\n                form[0].data[2].stats.dangerous_attacks_avg_away\n              ),\n              homeAttackAdvantage: parseFloat(\n                form[0].data[2].stats.homeAttackAdvantage\n              ),\n              homeDefenceAdvantage: parseFloat(\n                form[0].data[2].stats.homeDefenceAdvantage\n              ),\n              BTTSPercentage: parseInt(\n                form[0].data[2].stats.seasonBTTSPercentage_overall\n              ),\n              LastFiveForm: lastFiveFormHome,\n              LeaguePosition: `${teamPositionHome}${homePrefix}`,\n              SeasonPPG: homeSeasonPPG,\n            },\n          },\n          away: {\n            teamName: match.awayTeam,\n            0: {\n              XG: parseFloat(form[1].data[0].stats.xg_for_avg_overall),\n              XGHome: parseFloat(form[1].data[0].stats.xg_for_avg_home),\n              XGAway: parseFloat(form[1].data[0].stats.xg_for_avg_away),\n              ScoredOverall: parseFloat(\n                form[1].data[0].stats.seasonScoredNum_overall\n              ),\n              ScoredHome: parseFloat(\n                form[1].data[0].stats.seasonScoredNum_home\n              ),\n              ScoredAway: parseFloat(\n                form[1].data[0].stats.seasonScoredNum_away\n              ),\n              PlayedHome: parseFloat(\n                form[1].data[0].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[1].data[0].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[1].data[0].stats.seasonConcededNum_overall\n              ),\n              ConcededHome: parseFloat(\n                form[1].data[0].stats.seasonConcededNum_home\n              ),\n              ConcededAway: parseFloat(\n                form[1].data[0].stats.seasonConcededNum_away\n              ),\n              XGAgainstAvg: parseFloat(\n                form[1].data[0].stats.xg_against_avg_overall\n              ),\n              XGAgainstHome: parseFloat(\n                form[1].data[0].stats.xg_against_avg_home\n              ),\n              XGAgainstAway: parseFloat(\n                form[1].data[0].stats.xg_against_avg_away\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[1].data[0].stats.seasonCSPercentage_overall\n              ),\n              AveragePossession: parseFloat(\n                form[1].data[0].stats.possessionAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[1].data[0].stats.shotsOnTargetAVG_overall\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[1].data[0].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[1].data[0].stats.seasonPPG_overall),\n              AttacksHome: parseFloat(form[1].data[0].stats.attacks_avg_home),\n              AttacksAway: parseFloat(form[1].data[0].stats.attacks_avg_away),\n              DangerousAttacksHome: parseFloat(\n                form[1].data[0].stats.dangerous_attacks_avg_home\n              ),\n              DangerousAttacksAway: parseFloat(\n                form[1].data[0].stats.dangerous_attacks_avg_away\n              ),\n              homeAttackAdvantage: parseFloat(\n                form[1].data[0].stats.homeAttackAdvantage\n              ),\n              homeDefenceAdvantage: parseFloat(\n                form[1].data[0].stats.homeDefenceAdvantage\n              ),\n              BTTSPercentage: parseInt(\n                form[1].data[0].stats.seasonBTTSPercentage_overall\n              ),\n              LastFiveForm: lastFiveFormAway,\n              LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n              SeasonPPG: awaySeasonPPG,\n            },\n            1: {\n              XG: parseFloat(form[1].data[1].stats.xg_for_avg_overall),\n              XGHome: parseFloat(form[1].data[1].stats.xg_for_avg_home),\n              XGAway: parseFloat(form[1].data[1].stats.xg_for_avg_away),\n              ScoredOverall: parseFloat(\n                form[1].data[1].stats.seasonScoredNum_overall\n              ),\n              ScoredHome: parseFloat(\n                form[1].data[1].stats.seasonScoredNum_home\n              ),\n              ScoredAway: parseFloat(\n                form[1].data[1].stats.seasonScoredNum_away\n              ),\n              PlayedHome: parseFloat(\n                form[1].data[1].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[1].data[1].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[1].data[1].stats.seasonConcededNum_overall\n              ),\n              ConcededHome: parseFloat(\n                form[1].data[1].stats.seasonConcededNum_home\n              ),\n              ConcededAway: parseFloat(\n                form[1].data[1].stats.seasonConcededNum_away\n              ),\n              XGAgainstAvg: parseFloat(\n                form[1].data[1].stats.xg_against_avg_overall\n              ),\n              XGAgainstHome: parseFloat(\n                form[1].data[1].stats.xg_against_avg_home\n              ),\n              XGAgainstAway: parseFloat(\n                form[1].data[1].stats.xg_against_avg_away\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[1].data[1].stats.seasonCSPercentage_overall\n              ),\n              AveragePossession: parseFloat(\n                form[1].data[1].stats.possessionAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[1].data[1].stats.shotsOnTargetAVG_overall\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[1].data[1].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[1].data[1].stats.seasonPPG_overall),\n              AttacksHome: parseFloat(form[1].data[1].stats.attacks_avg_home),\n              AttacksAway: parseFloat(form[1].data[1].stats.attacks_avg_away),\n              DangerousAttacksHome: parseFloat(\n                form[1].data[1].stats.dangerous_attacks_avg_home\n              ),\n              DangerousAttacksAway: parseFloat(\n                form[1].data[1].stats.dangerous_attacks_avg_away\n              ),\n              homeAttackAdvantage: parseFloat(\n                form[1].data[1].stats.homeAttackAdvantage\n              ),\n              homeDefenceAdvantage: parseFloat(\n                form[1].data[1].stats.homeDefenceAdvantage\n              ),\n              BTTSPercentage: parseInt(\n                form[1].data[1].stats.seasonBTTSPercentage_overall\n              ),\n              LastFiveForm: lastFiveFormAway,\n              LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n              SeasonPPG: awaySeasonPPG,\n            },\n            2: {\n              XG: parseFloat(form[1].data[2].stats.xg_for_avg_overall),\n              XGHome: parseFloat(form[1].data[2].stats.xg_for_avg_home),\n              XGAway: parseFloat(form[1].data[2].stats.xg_for_avg_away),\n              ScoredOverall: parseFloat(\n                form[1].data[2].stats.seasonScoredNum_overall\n              ),\n              ScoredHome: parseFloat(\n                form[1].data[2].stats.seasonScoredNum_home\n              ),\n              ScoredAway: parseFloat(\n                form[1].data[2].stats.seasonScoredNum_away\n              ),\n              PlayedHome: parseFloat(\n                form[1].data[2].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[1].data[2].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[1].data[2].stats.seasonConcededNum_overall\n              ),\n              ConcededHome: parseFloat(\n                form[1].data[2].stats.seasonConcededNum_home\n              ),\n              ConcededAway: parseFloat(\n                form[1].data[2].stats.seasonConcededNum_away\n              ),\n              XGAgainstAvg: parseFloat(\n                form[1].data[2].stats.xg_against_avg_overall\n              ),\n              XGAgainstHome: parseFloat(\n                form[1].data[2].stats.xg_against_avg_home\n              ),\n              XGAgainstAway: parseFloat(\n                form[1].data[2].stats.xg_against_avg_away\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[1].data[2].stats.seasonCSPercentage_overall\n              ),\n              AveragePossession: parseFloat(\n                form[1].data[2].stats.possessionAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[1].data[2].stats.shotsOnTargetAVG_overall\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[1].data[2].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[1].data[2].stats.seasonPPG_overall),\n              AttacksHome: parseFloat(form[1].data[2].stats.attacks_avg_home),\n              AttacksAway: parseFloat(form[1].data[2].stats.attacks_avg_away),\n              DangerousAttacksHome: parseFloat(\n                form[1].data[2].stats.dangerous_attacks_avg_home\n              ),\n              DangerousAttacksAway: parseFloat(\n                form[1].data[2].stats.dangerous_attacks_avg_away\n              ),\n              homeAttackAdvantage: parseFloat(\n                form[1].data[2].stats.homeAttackAdvantage\n              ),\n              homeDefenceAdvantage: parseFloat(\n                form[1].data[2].stats.homeDefenceAdvantage\n              ),\n              BTTSPercentage: parseInt(\n                form[0].data[2].stats.seasonBTTSPercentage_overall\n              ),\n              LastFiveForm: lastFiveFormAway,\n              LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n              SeasonPPG: awaySeasonPPG,\n            },\n          },\n        });\n      }\n\n      match.homeBadge = fixture.home_image;\n      match.awayBadge = fixture.away_image;\n\n      match.homePpg = fixture.home_ppg.toFixed(2);\n      match.homeFormColour = await applyColour(match.homePpg);\n\n      match.awayPpg = fixture.away_ppg.toFixed(2);\n      match.awayFormColour = await applyColour(match.awayPpg);\n\n      match.lastFiveFormHome = lastFiveFormHome;\n      match.lastFiveFormAway = lastFiveFormAway;\n\n      match.status = fixture.status;\n\n      match.btts_potential = fixture.btts_potential;\n      match.game = match.homeTeam + \" v \" + match.awayTeam;\n\n      match.homeGoals = fixture.homeGoalCount;\n      match.awayGoals = fixture.awayGoalCount;\n\n      matches.push(match);\n\n      // console.log(allForm)\n\n      await createFixture(match, false);\n    }\n  }\n  if (!isStoredLocally) {\n    await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}allForm${day}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ allForm }),\n    });\n  }\n  await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${currentDay}${month}${year}`,\n    {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ leagueArray }),\n    }\n  );\n}\n","import React from \"react\";\n\nfunction TextBlock(props) {\n  return (\n    <div className={props.className}>\n      <div>{props.text}</div>\n    </div>\n  );\n}\n\nexport default TextBlock;\n","import React, { useState } from \"react\";\nimport { Checkbox } from \"@material-ui/core\";\nimport { orderedLeagues } from \"../App\";\n\n\nclass CheckBox extends React.Component {\n  state = { isChecked: true };\n\n  toggle = () => {\n    this.setState((prevState) => ({ isChecked: !prevState.isChecked }));\n  };\n\n  render() {\n    const items = [];\n\n    for (let i = 0; i < orderedLeagues.length; i++) {\n        const element = orderedLeagues[i];\n        console.log(element)\n        items.push(\n            <div className=\"Checkbox\">\n              <Checkbox className=\"LeagueCheckboxes\" checked={this.state.isChecked} onChange={this.toggle} />\n              <label className=\"LeagueOption\" onClick={this.toggle}>\n                {element.name}\n              </label>\n            </div>\n          );\n    }\n    return (\n    <div>{items}</div>\n    )\n}\n}\nexport default CheckBox","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./components/Header\";\nimport Radio from \"./components/radio\";\nimport { Button } from \"./components/Button\";\nimport {\n  today,\n  generateFixtures,\n  generatePriorFixtures,\n  tomorrow,\n  yesterday,\n} from \"./logic/getFixtures\";\nimport { selectedOption } from \"./components/radio\";\nimport TextBlock from \"./components/TextSection\";\nimport Collapsable from \"./components/CollapsableElement\";\nimport CheckBox from \"./components/Checkbox\";\nrequire(\"dotenv\").config();\n\nexport const proxyurl = \"https://safe-caverns-99679.herokuapp.com/\";\nexport var fixtureList = [];\nexport let allLeagueData = [];\nlet leagueObject;\n\n// var slider = document.getElementById(\"myRange\");\n\n// var output = document.getElementById(\"weight\");\n// output.innerHTML = slider.value;\n\n// slider.oninput = function () {\n//   output.innerHTML = this.value;\n//   weighting = this.value / 100;\n// };\n\n// (async function populateContent() {\n//   // spinner.showSpinner();\n\n//   // spinner.hideSpinner();\n// })();\n\nexport const availableLeagues = [];\nexport var orderedLeagues = [];\n\n(async function getLeagueList() {\n  let leagueList = await fetch(\n    proxyurl +\n      `https://api.footystats.org/league-list?key=${process.env.REACT_APP_API_KEY}&chosen_leagues_only=true`\n  );\n  let leagueArray;\n  await leagueList.json().then((leagues) => {\n    leagueArray = Array.from(leagues.data);\n  });\n\n  console.log(leagueArray)\n  for (let i = 0; i < leagueArray.length; i++) {\n    const league = leagueArray[i];\n    const name = leagueArray[i].name;\n\n    for (let x = 0; x < league.season.length; x++) {\n      const element = league.season[x];\n\n      if (element.year === 20202021) {\n        availableLeagues.push({ name: name, element });\n      }\n    }\n\n\n    function mapOrder(array, order, key) {\n      array.sort(function (a, b) {\n        var A = a.element[key],\n          B = b.element[key];\n\n        if (order.indexOf(A) > order.indexOf(B)) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n\n      return array;\n    }\n\n    //leagues ordered by id\n    var leagueOrder = [\n      4759,\n      4912,\n      4845,\n      4844,\n      5018,\n      4944,\n      4478,\n      4673,\n      4889,\n      4889,\n      4746,\n      4567,\n      4505,\n      4842,\n      4972,\n      4676,\n      4645,\n      4547,\n      4902,\n      4903,\n      4803,\n      5151,\n      4930,\n      4655,\n      4930,\n      4693,\n    ];\n\n    orderedLeagues = mapOrder(availableLeagues, leagueOrder, \"id\");\n  }\n  console.log(process.env.REACT_APP_EXPRESS_SERVER);\n\n  let response;\n  let responseBody;\n\n  ReactDOM.render(\n    <div className=\"LoadingText\">\n      Loading form data. This might take a while if you're the first user\n      today...\n    </div>,\n    document.getElementById(\"RadioButtons\")\n  );\n\n  // let leagueData = await fetch(\n  //   `${process.env.REACT_APP_EXPRESS_SERVER}leagueData`\n  // );\n\n  // if (leagueData.status === 200) {\n  //   allLeagueData = await leagueData.json();\n    \n  //   await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}leagueData`, {\n  //     method: \"POST\",\n  //     headers: {\n  //       Accept: \"application/json\",\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify( allLeagueData ),\n  //   });\n  // } else {\n  //   for (let x = 0; x < orderedLeagues.length; x++) {\n  //     response = await fetch(\n  //       `${proxyurl}https://api.footystats.org/league-season?key=${process.env.REACT_APP_API_KEY}&season_id=${orderedLeagues[x].element.id}`\n  //     );\n  //     responseBody = await response.json();\n\n  //     leagueObject = {\n  //       name: responseBody.data.english_name,\n  //       competitionId: responseBody.data.id,\n  //       homeWinPercentage: responseBody.data.homeWinPercentage,\n  //       awayWinPercentage: responseBody.data.awayWinPercentage,\n  //       drawPercentage: responseBody.data.drawPercentage,\n  //       image: responseBody.data.image,\n  //       averageGoals: responseBody.data.seasonAVG_overall,\n  //       homeAttackAdvantagePercentage:\n  //         responseBody.data.homeAttackAdvantagePercentage,\n  //       homeDefenceAdvantagePercentage:\n  //         responseBody.data.homeDefenceAdvantagePercentage,\n  //     };\n  //     allLeagueData.push(leagueObject);\n  //     JSON.stringify(allLeagueData);\n  //   }\n  //   await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}leagueData`, {\n  //     method: \"POST\",\n  //     headers: {\n  //       Accept: \"application/json\",\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify( allLeagueData ),\n  //   });\n  // }\n\n  ReactDOM.render(\n    <div className=\"LastXGames\">\n      <Radio\n        value=\"5\"\n        label=\"form based on last 5 games\"\n        className=\"FormRadio\"\n      />\n      <Radio\n        value=\"6\"\n        label=\"form based on last 6 games\"\n        className=\"FormRadio\"\n      />\n      <Radio\n        value=\"10\"\n        label=\"form based on last 10 games\"\n        className=\"FormRadio\"\n      />\n    </div>,\n    document.getElementById(\"RadioButtons\")\n  );\n\n  ReactDOM.render(\n    <TextBlock\n      text=\"Select how many games you would like to fetch form data for\"\n      className=\"RadioText\"\n    />,\n    document.getElementById(\"RadioText\")\n  );\n\n  ReactDOM.render(\n    <div className=\"FixtureButtons\">\n      <Button\n        text={\"Get Yesterday's Fixtures\"}\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\"yesterdaysFixtures\", selectedOption)\n          )\n        }\n      />\n      <Button\n        text={\"Get Today's Fixtures\"}\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\"todaysFixtures\", selectedOption)\n          )\n        }\n      />\n      <Button\n        text={\"Get Tomorrow's Fixtures\"}\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\"tomorrowsFixtures\", selectedOption)\n          )\n        }\n      />\n    </div>,\n    document.getElementById(\"Buttons\")\n  );\n})();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div id=\"LoadingContainer\" className=\"LoadingContainer\" />\n      <div id=\"RadioContainer\" className=\"RadioContainer\">\n        <div id=\"RadioText\" />\n        <div id=\"RadioButtons\" />\n      </div>\n      <div id=\"Day\" />\n      <div id=\"Buttons\" />\n      <div id=\"successMeasure\" />\n      <div id=\"bestPredictions\" />\n      <div id=\"BTTS\" />\n      <div id=\"longShots\" />\n      <div id=\"homeBadge\" />\n      <div id=\"FixtureContainer\"></div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}