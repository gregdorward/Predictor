{"version":3,"sources":["components/Header.js","components/radio.js","components/Button.js","logic/getForm.js","components/createBadge.js","components/CollapsableElement.js","components/createStatsDiv.js","components/Div.js","components/Fixture.js","logic/getStats.js","logic/getScorePredictions.js","logic/getFixtures.js","components/TextSection.js","components/Checkbox.js","App.js","reportWebVitals.js","index.js"],"names":["Header","selectedOption","Radio","props","handleOptionChange","setState","value","state","className","this","type","name","checked","onChange","Component","Button","id","variant","onClick","onClickEvent","text","applyColour","a","colour","getForm","match","teams","homeId","awayId","fixtureForm","i","team","fetch","proxyurl","process","response","json","then","formData","length","CreateBadge","src","image","ClassName","alt","flex-shrink","flexShrink","Collapsable","isOpen","handleOnClick","prevState","style","fontFamily","buttonText","Stats","goals","conceeded","possession","XG","sot","dangerousAttacks","Div","resultValue","game","radioSelected","parseInt","index","divider","gameStats","allForm","find","homeTeam","home","teamName","awayTeam","away","time","push","btts","btts_potential","formDataHome","AverageGoals","ScoredOverall","toFixed","AverageConceeded","ConcededOverall","AverageXG","AveragePossession","AverageShotsOnTarget","AverageDangerousAttacks","homeOrAway","formDataAway","ReactDOM","render","document","getElementById","GetDivider","fixture","outcome","prediction","matchStatus","status","isPrediction","homeGoals","awayGoals","goalsA","goalsB","winner","profit","homeOdds","drawOdds","awayOdds","SingleFixture","createStatsDiv","backgroundColor","homeFormColour","homePpg","result","awayFormColour","awayPpg","homeBadge","awayBadge","newText","split","map","List","fixtures","Fixture","myHeaders","Headers","append","calculateScore","console","log","parseFloat","finishingScore","goalieRating","XGAgainstAvg","defenceScore","CleanSheetPercentage","defenceRating","diff","finalFinishingScore","finalGoalieRating","forecastedXG","homeRaw","awayRaw","formHome","formAway","goalieHome","defenceScoreHome","goalieAway","defenceScoreAway","oddsWeightingHome","oddsWeightingAway","homeWeighting","awayWeighting","homeXGConceded","awayXGConceded","homeCalculation","awayCalculation","Math","round","finalHomeGoals","finalAwayGoals","homePrediction","awayPrediction","getSuccessMeasure","sum","roundedFigure","gameCount","fixtureResponse","fixtureArray","tips","longShotTips","accumulatedOdds","predictions","getScorePrediction","day","Promise","all","matches","predictionOutcome","predictionObject","odds","longShotPredictionObject","tip","require","config","leagueGames","Date","toLocaleDateString","month","year","tomorrowsDate","setDate","getDate","tomorrowDay","tomorrowMonth","tomorrowYear","yesterdaysDate","yesterdayDay","yesterdayMonth","yesterdayYear","yesterday","today","tomorrow","b","createFixture","generateFixtures","radioState","radioValue","url","Array","from","data","method","headers","Accept","storedForm","form","formArray","isFormStored","filter","competition_id","orderedLeagues","element","unixTimestamp","date_unix","dateObject","toLocaleString","hour","home_name","away_name","odds_ft_1","odds_ft_2","odds_ft_x","homeID","awayID","homeTeamInfo","awayTeamInfo","0","stats","xg_for_avg_overall","seasonScoredNum_overall","seasonConcededNum_overall","xg_against_avg_overall","seasonCSPercentage_overall","possessionAVG_overall","shotsOnTargetAVG_overall","dangerous_attacks_avg_overall","1","2","home_image","away_image","home_ppg","away_ppg","homeGoalCount","awayGoalCount","body","JSON","stringify","TextBlock","React","fixtureList","availableLeagues","mapOrder","leagueList","leagues","leagueArray","array","order","key","sort","A","B","indexOf","league","x","season","label","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.744b4389.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <div>\n      <h1>Predictor</h1>\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nexport var selectedOption = \"5\";\n\nexport var fixtureList = [];\n\nexport class Radio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOption: this.props.value,\n    };\n  }\n\n  handleOptionChange = () => {\n    this.setState({\n      selectedOption: this.props.value,\n    });\n    selectedOption = this.state.selectedOption;\n  };\n\n  render() {\n    return (\n      <section className=\"dark\">\n        <div className={this.props.className}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"lastGames\"\n              checked={this.state.checked}\n              onChange={this.handleOptionChange}\n            />\n            <span className=\"design\"></span>\n            <span className=\"text\">Last {this.props.value} games</span>\n          </label>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Radio;\n","import React from \"react\";\n\nexport function Button(props) {\n  return (\n    <div id=\"Button\">\n      <button variant=\"primary\" type=\"button\" onClick={props.onClickEvent}>\n        {props.text}\n      </button>\n    </div>\n  );\n}\n","import { proxyurl } from \"../App\";\n\nconst allTeamForm = []\n\nexport async function applyColour(value) {\n  let colour;\n  switch (true) {\n    case value < 0.49:\n      colour = \"#CD5C5C\";\n      break;\n    case value >= 0.5 && value <= 1:\n      colour = \"#F08080\";\n      break;\n    case value >= 1.01 && value <= 1.25:\n      colour = \"#FFA07A\";\n      break;\n    case value >= 1.26 && value <= 1.5:\n      colour = \"#FFFFE0\";\n      break;\n    case value >= 1.51 && value <= 2:\n      colour = \"#CFDBC5\";\n      break;\n    case value >= 2.01 && value <= 2.5:\n      colour = \"#8AA37B\";\n      break;\n    case value >= 2.51 && value <= 3:\n      colour = \"#3F6826\";\n      break;\n    default:\n      colour = \"white\";\n      break;\n  }\n  return colour;\n}\n\nexport async function getForm(match) {\n  const teams = [match.homeId, match.awayId];\n  const fixtureForm = [];\n\n  for (let i = 0; i < teams.length; i++) {\n    const team = teams[i];\n    let response = await fetch(\n      proxyurl +\n        `https://api.footystats.org/lastx?key=${process.env.REACT_APP_API_KEY}&team_id=` +\n        team\n    );\n    await response.json().then((formData) => {\n      fixtureForm[i] = formData;\n    });\n  }\n  return fixtureForm;\n}\n\n\n\n","import React from \"react\";\n\nexport function CreateBadge(props) {\n  return (\n    <img\n      src={`https://cdn.footystats.org/img/${props.image}`}\n      className={props.ClassName}\n      alt={props.alt}\n      flex-shrink={props.flexShrink}\n    />\n  );\n}\n","import React, { Component } from \"react\";\nimport EscapeOutside from \"react-escape-outside\";\n\nclass Collapsable extends Component {\n  state = { isOpen: false };\n\n  handleOnClick = () => {\n    this.setState((prevState) => ({\n      isOpen: !prevState.isOpen,\n    }));\n  };\n\n  render() {\n    return (\n      <div style={{ fontFamily: \"sans-serif\" }}>\n        <button onClick={this.handleOnClick}>{this.props.buttonText}</button>\n        {this.state.isOpen && (\n          <EscapeOutside className=\"Collapsable\">\n            {this.props.text}\n          </EscapeOutside>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Collapsable;\n","import React, { Fragment } from \"react\";\n\nfunction Stats(props) {\n  return (\n        <ul className={props.className}>\n          <li key={props.name}>{`Team name - ${props.name}`}</li>\n          <li key=\"TeamScored\" className=\"TeamScored\">\n            {`Average goals scored - ${props.goals}`}\n          </li>\n          <li key=\"TeamConceeded\" className=\"TeamConceeded\">\n            {`Average goals conceeded - ${props.conceeded}`}\n          </li>\n          <li key=\"TeamPossession\" className=\"TeamPossession\">\n            {`Average possession - ${props.possession}%`}\n          </li>\n          <li key=\"TeamXG\" className=\"TeamXG\">\n            {`Average XG - ${props.XG}`}\n          </li>\n          <li key=\"AverageSOT\" className=\"AverageSOT\">\n            {`Average shots on target - ${props.sot}`}\n          </li>\n          <li key=\"DangerousAttacks\" className=\"DangerousAttacks\">\n            {`Average dangerous attacks - ${props.dangerousAttacks}`}\n          </li>\n        </ul>\n  );\n}\n\nexport default Stats;\n","import React from \"react\";\n\nfunction Div(props) {\n  return (\n    <div className={props.className}>{props.text}</div>\n  );\n}\n\nexport default Div;\n","import React, { Fragment } from \"react\";\nimport { CreateBadge } from \"./createBadge\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { createStatsDiv } from \"../logic/getStats\";\n\nlet resultValue;\nconst text =\n  \"Next to each badge is each team’s points per game picked up at home or away.\\n Once the fixtures have loaded, click on “Get Predictions” to get predictions based on form data.\\n Click on an individual fixture for detailed stats for both teams.\\n If you change your form selection, re-tapping the fixture will fetch new form data.\\n You can also fetch fresh predictions based on the newly selected option by re-tapping on “Get Predictions” at any time.\\n If a match is resulted, tapping “Get Predictions” will show how accurate the prediction was.\\n If no form radio button is chosen, the last 5 games will be used by default\";\n\n\nfunction GetDivider(fixture) {\n  const matchStatus = fixture.status;\n  const isPrediction = resultValue;\n\n  if (isPrediction === false && matchStatus !== \"complete\") {\n    return <div className=\"divider\">{\"V\"}</div>;\n  } else if (isPrediction === false && matchStatus === \"complete\") {\n    return (\n      <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n    );\n  } else if (isPrediction === true && matchStatus === \"complete\") {\n    let outcome;\n    let prediction;\n\n    switch (true) {\n      case fixture.fixture.homeGoals > fixture.fixture.awayGoals:\n        outcome = 0;\n        fixture.fixture.winner=fixture.fixture.homeTeam\n        break;\n      case fixture.fixture.homeGoals === fixture.fixture.awayGoals:\n        outcome = 1;\n        fixture.fixture.winner=\"draw\"\n        break;\n      case fixture.fixture.homeGoals < fixture.fixture.awayGoals:\n        outcome = 2;\n        fixture.fixture.winner=fixture.fixture.awayTeam\n        break;\n      default:\n        break;\n    }\n\n    switch (true) {\n      case fixture.fixture.goalsA > fixture.fixture.goalsB:\n        prediction = 0;\n        break;\n      case fixture.fixture.goalsA === fixture.fixture.goalsB:\n        prediction = 1;\n        break;\n      case fixture.fixture.goalsA < fixture.fixture.goalsB:\n        prediction = 2;\n        break;\n      default:\n        break;\n    }\n\n    if (outcome === prediction) {\n      switch (true) {\n        case outcome === 0:\n          fixture.fixture.profit = fixture.fixture.homeOdds\n          break;\n        case outcome === 1:\n          fixture.fixture.profit = fixture.fixture.drawOdds\n          break;\n        case outcome === 2:\n          fixture.fixture.profit = fixture.fixture.awayOdds\n          break;\n        default:\n          break;\n      }\n\n\n      return (\n        <Fragment>\n          <div className=\"CorrectResult\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div className=\"score\" key={fixture.fixture.homeTeam}>{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    } else if (outcome !== prediction) {\n      fixture.fixture.profit = -1\n\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div className=\"score\" key={fixture.fixture.awayTeam}>{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    }\n  } else {\n    return (\n      <div className=\"score\" key={fixture.fixture.id}>{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n    );\n  }\n}\n\nconst SingleFixture = ({ fixture }) => (\n  <div>\n    <li\n      className=\"individualFixture\"\n      key={fixture.id}\n      onClick={() => createStatsDiv(fixture)}\n    >\n      <div\n        className=\"homeForm\"\n        style={{\n          backgroundColor: fixture.homeFormColour,\n        }}\n      >\n        {fixture.homePpg}\n      </div>\n      <div className=\"homeTeam\">{fixture.homeTeam}</div>\n      <GetDivider\n        result={resultValue}\n        status={fixture.status}\n        fixture={fixture}\n      />\n      {/* <div className=\"divider\">{\"V\"}</div> */}\n      <div className=\"awayTeam\">{fixture.awayTeam}</div>\n      <div\n        className=\"awayForm\"\n        style={{\n          backgroundColor: fixture.awayFormColour,\n        }}\n      >\n        {fixture.awayPpg}\n      </div>\n      <CreateBadge\n        image={fixture.homeBadge}\n        ClassName=\"HomeBadge\"\n        alt=\"Home team badge\"\n        flexShrink={5}\n      />\n      <CreateBadge\n        image={fixture.awayBadge}\n        ClassName=\"AwayBadge\"\n        alt=\"Away team badge\"\n      />\n    </li>\n    <div>\n      <div id={\"stats\" + fixture.homeTeam}></div>\n      <Fragment>\n        <div id={\"BTTSPotential\" + fixture.id}></div>\n        <div className=\"StatsContainer\">\n          <div className=\"HomeStats\" id={\"home\" + fixture.homeTeam}></div>\n          <div className=\"AwayStats\" id={\"away\" + fixture.awayTeam}></div>\n        </div>\n      </Fragment>\n    </div>\n  </div>\n);\n\nlet newText = text.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nconst List = ({ fixtures }) => (\n  <div>\n    <Fragment>\n      <Collapsable buttonText={\"How do I use this?\"} text={newText} />\n    </Fragment>\n    <ul>\n      {fixtures.map((fixture, i) => (\n        <SingleFixture fixture={fixture} />\n      ))}\n    </ul>\n  </div>\n);\n\nexport function Fixture(props) {\n  resultValue = props.result;\n  return <List fixtures={props.fixtures} result={resultValue} />;\n}\n","import ReactDOM from \"react-dom\";\nimport Stats from \"../components/createStatsDiv\";\nimport Div from \"../components/Div\";\nimport { selectedOption } from \"../components/radio\";\nimport { allForm } from \"../logic/getFixtures\";\n\nexport async function createStatsDiv(game) {\n  let radioSelected = parseInt(selectedOption);\n\n  let index;\n  let divider;\n  if (radioSelected === 5) {\n    index = 0;\n    divider = 5;\n  } else if (radioSelected === 6) {\n    index = 1;\n    divider = 6;\n  } else if (radioSelected === 10) {\n    index = 2;\n    divider = 10;\n  }\n\n  let gameStats = allForm.find((match) => match.id === game.id)\n\n\n  let homeTeam = gameStats.home.teamName;\n  let awayTeam = gameStats.away.teamName;\n\n\n  let time = game.time;\n\n  const formDataMatch = [];\n\n  formDataMatch.push({\n    btts: game.btts_potential,\n  });\n\n  const formDataHome = [];\n\n  formDataHome.push({\n    name: game.homeTeam,\n    AverageGoals: (gameStats.home[index].ScoredOverall / divider).toFixed(2),\n    AverageConceeded: (gameStats.home[index].ConcededOverall / divider).toFixed(\n      2\n    ),\n    AverageXG: gameStats.home[index].XG,\n    AveragePossession: gameStats.home[index].AveragePossession,\n    AverageShotsOnTarget: gameStats.home[index].AverageShotsOnTarget,\n    AverageDangerousAttacks: gameStats.home[index].AverageDangerousAttacks,\n    homeOrAway: \"Home\",\n  });\n\n  const formDataAway = [];\n\n  formDataAway.push({\n    name: game.awayTeam,\n    AverageGoals: (gameStats.away[index].ScoredOverall / divider).toFixed(2),\n    AverageConceeded: (gameStats.away[index].ConcededOverall / divider).toFixed(\n      2\n    ),\n    AverageXG: gameStats.away[index].XG,\n    AveragePossession: gameStats.away[index].AveragePossession,\n    AverageShotsOnTarget: gameStats.away[index].AverageShotsOnTarget,\n    AverageDangerousAttacks: gameStats.away[index].AverageDangerousAttacks,\n    homeOrAway: \"Away\",\n  });\n\n  ReactDOM.render(\n    <Div className=\"MatchTime\" text={\"Kick off: \" + time}></Div>,\n    document.getElementById(\"stats\" + homeTeam)\n  );\n\n  ReactDOM.render(\n    <Div\n      className=\"BTTSPotential\"\n      text={\"BTTS Potential: \" + game.btts_potential + \"%\"}\n    ></Div>,\n    document.getElementById(\"BTTSPotential\" + game.id)\n  );\n\n  ReactDOM.render(\n    <Stats\n      key={formDataHome[0].name}\n      className={formDataHome[0].homeOrAway}\n      name={formDataHome[0].name}\n      goals={formDataHome[0].AverageGoals}\n      conceeded={formDataHome[0].AverageConceeded}\n      XG={formDataHome[0].AverageXG}\n      possession={formDataHome[0].AveragePossession}\n      sot={formDataHome[0].AverageShotsOnTarget}\n      dangerousAttacks={formDataHome[0].AverageDangerousAttacks}\n    />,\n    document.getElementById(\"home\" + homeTeam)\n  );\n\n  ReactDOM.render(\n    <Stats\n      key={formDataAway[0].name}\n      className={formDataAway[0].homeOrAway}\n      name={formDataAway[0].name}\n      goals={formDataAway[0].AverageGoals}\n      conceeded={formDataAway[0].AverageConceeded}\n      XG={formDataAway[0].AverageXG}\n      possession={formDataAway[0].AveragePossession}\n      sot={formDataAway[0].AverageShotsOnTarget}\n      dangerousAttacks={formDataAway[0].AverageDangerousAttacks}\n    />,\n    document.getElementById(\"away\" + awayTeam)\n  );\n}\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { matches, diff } from \"./getFixtures\";\nimport { Fixture } from \"../components/Fixture\";\nimport { selectedOption } from \"../components/radio\";\nimport Div from \"../components/Div\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { allForm } from \"../logic/getFixtures\";\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nvar requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\",\n};\n\n//Calculates scores based on prior XG figures, weighted by odds\nexport async function calculateScore(match, index, divider, id) {\n  let homeRaw;\n  let awayRaw;\n  console.log(\"allForm\");\n  console.log(typeof allForm);\n  console.log(allForm);\n\n  console.log(allForm.find((game) => game.id === id).home);\n\n  let teams = [\n    allForm.find((game) => game.id === id).home,\n    allForm.find((game) => game.id === id).away,\n  ];\n  for (let i = 0; i < teams.length; i++) {\n    if (parseFloat(teams[i][index].ScoredOverall) !== 0) {\n      teams[i][index].finishingScore = parseFloat(\n        (teams[i][index].ScoredOverall / divider / teams[i][index].XG).toFixed(\n          2\n        )\n      );\n    } else {\n      teams[i][index].finishingScore = 0.0;\n    }\n\n    if (parseFloat(teams[i][index].ConcededOverall) !== 0) {\n      teams[i][index].goalieRating = parseFloat(\n        (\n          teams[i][index].XGAgainstAvg /\n          (teams[i][index].ConcededOverall / divider)\n        ).toFixed(2)\n      );\n    } else {\n      teams[i].goalieRating = 0;\n    }\n\n    teams[i][index].defenceScore = parseInt(\n      teams[i][index].CleanSheetPercentage\n    );\n\n    let defenceScore;\n    defenceScore = teams[i][index].defenceScore;\n\n    switch (true) {\n      case defenceScore < 20:\n        teams[i][index].defenceRating = 0;\n        break;\n      case defenceScore >= 20 && defenceScore < 40:\n        teams[i][index].defenceRating = 0.3;\n        break;\n      case defenceScore >= 40 && defenceScore < 60:\n        teams[i][index].defenceRating = 0.7;\n        break;\n      case defenceScore >= 60 && defenceScore < 80:\n        teams[i][index].defenceRating = 1.1;\n        break;\n      case defenceScore >= 80:\n        teams[i][index].defenceRating = 1.5;\n        break;\n      default:\n        break;\n    }\n\n    teams[i][index].finalFinishingScore = parseFloat(\n      await diff(teams[i][index].finishingScore, 1)\n    );\n\n    teams[i][index].finalGoalieRating = parseFloat(\n      await diff(teams[i][index].goalieRating, 1)\n    );\n\n    teams[i][index].forecastedXG = parseFloat(\n      teams[i][index].XG + parseFloat(teams[i][index].finalFinishingScore)\n    );\n  }\n\n  if (match.homeOdds.toFixed(1) === 0.0 && match.awayOdds.toFixed(1) === 0.0) {\n    homeRaw = 0.0;\n    awayRaw = 0.0;\n  } else {\n    homeRaw = (1 / match.homeOdds).toFixed(2);\n    awayRaw = (1 / match.awayOdds).toFixed(2);\n  }\n\n  let formHome = teams[0][index];\n  let formAway = teams[1][index];\n\n  // let defenceHome = parseFloat(formHome.defenceRating);\n  let goalieHome = formHome.finalGoalieRating;\n\n  let defenceScoreHome = (formHome.defenceScore + goalieHome) / 2;\n\n  // let defenceAway = parseFloat(formAway.defenceRating);\n  let goalieAway = formAway.finalGoalieRating;\n\n  let defenceScoreAway = (formAway.defenceScore + goalieAway) / 2;\n  let oddsWeightingHome;\n  let oddsWeightingAway;\n  if(homeRaw !== 0) {\n    oddsWeightingHome = 0\n    oddsWeightingAway = 0\n  } else {\n    oddsWeightingHome = parseFloat(homeRaw);\n    oddsWeightingAway = parseFloat(awayRaw);\n  }\n\n\n  let homeWeighting = (\n    (await diff(oddsWeightingHome, oddsWeightingAway)) * 2\n  ).toFixed(2);\n  let awayWeighting = (\n    (await diff(oddsWeightingAway, oddsWeightingHome)) * 2\n  ).toFixed(2);\n\n  let homeXGConceded = parseFloat(formHome.XGAgainstAvg);\n  let awayXGConceded = parseFloat(formAway.XGAgainstAvg);\n\n  let homeCalculation;\n  let awayCalculation;\n  if (defenceScoreAway > 0) {\n    homeCalculation =\n      parseFloat(homeWeighting - defenceScoreAway / 10 + 0.5) + awayXGConceded;\n  } else {\n    homeCalculation =\n      parseFloat(homeWeighting + defenceScoreAway / 10 + 0.5) + awayXGConceded;\n  }\n  if (defenceScoreHome > 0) {\n    awayCalculation =\n      parseFloat(awayWeighting - defenceScoreHome / 10 + 0.5) + homeXGConceded;\n  } else {\n    awayCalculation =\n      parseFloat(awayWeighting + defenceScoreHome / 10 + 0.5) + homeXGConceded;\n  }\n\n  //TODO try form.home.XG in place of this\n  let homeGoals = Math.round(parseFloat(formHome.XG) + homeCalculation);\n  let awayGoals = Math.round(parseFloat(formAway.XG) + awayCalculation);\n\n  if (homeGoals < 0) {\n    homeGoals = 0;\n  }\n\n  if (awayGoals < 0) {\n    awayGoals = 0;\n  }\n\n  let finalHomeGoals;\n  let finalAwayGoals;\n\n  finalHomeGoals = Math.round(\n    parseFloat(\n      homeGoals * 3 +\n        formHome.ScoredOverall / divider +\n        formHome.forecastedXG +\n        formAway.ConcededOverall / divider\n    ) / 6\n  );\n\n  finalAwayGoals = Math.round(\n    parseFloat(\n      awayGoals * 3 +\n        formAway.ScoredOverall / divider +\n        formAway.forecastedXG +\n        formHome.ConcededOverall / divider\n    ) / 6\n  );\n\n  // console.log(\"DIVIDER\");\n  // console.log(divider);\n\n  // console.log(match.homeTeam);\n  // console.log(\"homeOdds\");\n  // console.log(match.homeOdds);\n\n  // console.log(\"homeGoals\");\n  // console.log(homeGoals);\n  // console.log(\"seasonScoredNum_overall\");\n  // console.log(formHome.ScoredOverall);\n  // console.log(\"forecastedXG\");\n  // console.log(formHome.forecastedXG);\n  // console.log(\"seasonConcededNum_overall\");\n  // console.log(formAway.ConcededOverall);\n  // console.log(\"homeCalculation\");\n  // console.log(homeCalculation);\n  // console.log(\"defenceScoreHome\");\n  // console.log(defenceScoreHome);\n  // console.log(\"homeWeighting\");\n  // console.log(homeWeighting);\n\n  // console.log(match.awayTeam);\n  // console.log(\"awayOdds\");\n  // console.log(match.awayOdds);\n  // console.log(\"awayGoals\");\n  // console.log(awayGoals);\n  // console.log(\"seasonScoredNum_overall\");\n  // console.log(formAway.ScoredOverall);\n  // console.log(\"forecastedXG\");\n  // console.log(formAway.forecastedXG);\n  // console.log(\"seasonConcededNum_overall\");\n  // console.log(formHome.ConcededOverall);\n  // console.log(\"awayCalculation\");\n  // console.log(awayCalculation);\n  // console.log(\"defenceScoreAway\");\n  // console.log(defenceScoreAway);\n  // console.log(\"awayWeighting\");\n  // console.log(awayWeighting);\n\n  // console.log(\"FINAL HOME GOALS\");\n  // console.log(finalHomeGoals);\n\n  // console.log(\"FINAL AWAY GOALS\");\n  // console.log(finalAwayGoals);\n  match.homePrediction = finalHomeGoals;\n  match.awayPrediction = finalAwayGoals;\n  if (match.status === \"suspended\") {\n    finalHomeGoals = \"P\";\n    finalAwayGoals = \"P\";\n  }\n\n  return [finalHomeGoals, finalAwayGoals];\n}\n\nfunction getSuccessMeasure(fixtures) {\n  let sum = -1;\n  let roundedFigure = -1;\n  let gameCount = 0;\n  for (let i = 0; i < fixtures.length; i++) {\n    if (fixtures[i].profit) {\n      const profit = parseFloat(fixtures[i].profit);\n      sum = parseFloat(sum + profit);\n      roundedFigure = sum.toFixed(2);\n      gameCount = gameCount + 1;\n    } else {\n      sum = parseFloat(sum + 0);\n      roundedFigure = sum.toFixed(2);\n    }\n  }\n\n  if (gameCount > 0) {\n    ReactDOM.render(\n      <Fragment>\n        <Div\n          className={\"SuccessMeasure\"}\n          text={`accumulated profit/loss if £1 was staked on each of the  ${gameCount} games: £${roundedFigure}`}\n        />\n      </Fragment>,\n      document.getElementById(\"successMeasure\")\n    );\n  } else {\n    return;\n  }\n}\n\nvar tips = [];\nvar longShotTips = [];\nvar accumulatedOdds = 1;\nlet predictions = [];\n\nexport async function getScorePrediction(day) {\n  let radioSelected = parseInt(selectedOption);\n  tips = [];\n  longShotTips = [];\n  accumulatedOdds = 1;\n\n  let index;\n  let divider;\n  if (radioSelected === 5) {\n    index = 0;\n    divider = 5;\n  } else if (radioSelected === 6) {\n    index = 1;\n    divider = 6;\n  } else if (radioSelected === 10) {\n    index = 2;\n    divider = 10;\n  }\n  // let predictionArray = [];\n  // let storedPredictions = await fetch(\n  //   `${process.env.REACT_APP_EXPRESS_SERVER}${day}Predictions${divider}`,\n  //   {\n  //     method: \"GET\",\n  //     headers: {\n  //       Accept: \"application/json\",\n  //     },\n  //   }\n  // );\n\n  // predictions = [];\n\n  // if (storedPredictions.status === 200) {\n  //   await storedPredictions.json().then((predictions) => {\n  //     console.log(\"these are the predictions\");\n  //     console.log(predictions);\n  //     predictionArray = predictions.predictions;\n  //   });\n  // }\n  // let i = 0;\n  let makePostRequest = false;\n\n  await Promise.all(\n    matches.map(async (match) => {\n      // if there are no stored predictions, calculate them based on live data\n\n      if (match) {\n        switch (true) {\n          case match.status === \"!suspended\":\n            [match.goalsA, match.goalsB] = await calculateScore(\n              match,\n              index,\n              divider,\n              match.id\n            );\n            makePostRequest = true;\n            console.log(match.game);\n            console.log(\"fetching prediction\");\n            break;\n          case match.status === \"suspended\":\n            match.goalsA = \"P\";\n            match.goalsB = \"P\";\n            console.log(match.game);\n            console.log(\"game postponed\");\n            break;\n          default:\n            [match.goalsA, match.goalsB] = await calculateScore(\n              match,\n              index,\n              divider,\n              match.id\n            );\n            makePostRequest = true;\n            console.log(match.game);\n            console.log(\"default - fetching stored prediction\");\n            break;\n        }\n      } else {\n        [match.goalsA, match.goalsB] = await calculateScore(\n          match,\n          index,\n          divider,\n          match.id\n        );\n        console.log(match.game);\n        console.log(\"else clause triggered\");\n      }\n\n      match.predictionOutcome = \"unknown\";\n      let predictionObject;\n      let longShotPredictionObject;\n\n      if (match.goalsA - 1 > match.goalsB && match.homeOdds !== 0) {\n        if (match.status === \"complete\" && match.homeTeam === match.winner) {\n          match.predictionOutcome = \"Won\";\n        } else if (\n          match.status === \"complete\" &&\n          match.homeTeam !== match.winner\n        ) {\n          match.predictionOutcome = \"Lost\";\n        }\n        accumulatedOdds =\n          parseFloat(accumulatedOdds) * parseFloat(match.homeOdds);\n        predictionObject = {\n          team: match.homeTeam,\n          odds: match.homeOdds,\n          outcome: match.predictionOutcome,\n        };\n        tips.push(predictionObject);\n      } else if (match.goalsB - 1 > match.goalsA && match.awayOdds !== 0) {\n        if (match.status === \"complete\" && match.awayTeam === match.winner) {\n          match.predictionOutcome = \"Won\";\n        } else if (\n          match.status === \"complete\" &&\n          match.awayTeam !== match.winner\n        ) {\n          match.predictionOutcome = \"Lost\";\n        }\n        accumulatedOdds =\n          parseFloat(accumulatedOdds) * parseFloat(match.awayOdds);\n        predictionObject = {\n          team: match.awayTeam,\n          odds: match.awayOdds,\n          outcome: match.predictionOutcome,\n        };\n        tips.push(predictionObject);\n      }\n\n      if (match.goalsA > match.goalsB && match.homeOdds >= 2.5) {\n        longShotPredictionObject = {\n          team: match.homeTeam,\n          odds: match.homeOdds,\n          outcome: match.predictionOutcome,\n        };\n        longShotTips.push(longShotPredictionObject);\n      } else if (match.goalsA < match.goalsB && match.awayOdds >= 2.5) {\n        console.log(\"printing game going into long shot predictions\")\n        console.log(match)\n        longShotPredictionObject = {\n          team: match.awayTeam,\n          odds: match.awayOdds,\n          outcome: match.predictionOutcome,\n        };\n        longShotTips.push(longShotPredictionObject);\n      }\n\n      ReactDOM.render(\n        <Fixture\n          fixtures={matches}\n          result={true}\n          className={\"individualFixture\"}\n        />,\n        document.getElementById(\"FixtureContainer\")\n      );\n\n      if (tips.length > 0) {\n        ReactDOM.render(\n          <div>\n            <Fragment>\n              <Collapsable\n                buttonText={\"Predictions of the day\"}\n                text={\n                  <ul className=\"BestPredictions\">\n                    <lh>To win</lh>\n                    {tips.map((tip) => (\n                      <li className={tip.outcome} key={tip.team}>\n                        {tip.team} odds: {tip.odds}\n                      </li>\n                    ))}\n                    <div className=\"AccumulatedOdds\">{`Accumulator odds: ${accumulatedOdds.toFixed(\n                      2\n                    )} / 1`}</div>\n                  </ul>\n                }\n              />\n            </Fragment>\n          </div>,\n          document.getElementById(\"bestPredictions\")\n        );\n      }\n\n      if (longShotTips.length > 0) {\n        ReactDOM.render(\n          <div>\n            <Fragment>\n              <Collapsable\n                buttonText={\"Longshot predictions\"}\n                text={\n                  <ul className=\"LongshotPredictions\">\n                    <lh>To win</lh>\n                    {longShotTips.map((tip) => (\n                      <li className={tip.outcome} key={tip.team}>\n                        {tip.team} odds: {tip.odds}\n                      </li>\n                    ))}\n                  </ul>\n                }\n              />\n            </Fragment>\n          </div>,\n          document.getElementById(\"longShots\")\n        );\n      }\n      console.log(match);\n      predictions.push(match);\n    })\n  );\n  console.log(\"Node env\");\n  console.log(process.env.NODE_ENV);\n\n  await getSuccessMeasure(matches);\n}\n\n// async function postFixedPredictions(predictions, divider, day) {\n//   await fetch(\n//     `${process.env.REACT_APP_EXPRESS_SERVER}postPredictions${divider}${day}`, {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ predictions }),\n//     });\n// }\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { orderedLeagues, proxyurl } from \"../App\";\nimport { getForm, applyColour } from \"./getForm\";\nimport { Fixture } from \"../components/Fixture\";\nimport { Button } from \"../components/Button\";\nimport { getScorePrediction } from \"../logic/getScorePredictions\";\nrequire(\"dotenv\").config();\n\nconsole.log(process.env.REACT_APP_EXPRESS_SERVER);\n\nvar fixtureResponse;\nvar fixtureArray;\nexport const matches = [];\nexport const resultedMatches = [];\nvar leagueGames = [];\n\nexport const [day, month, year] = new Date()\n  .toLocaleDateString(\"en-US\")\n  .split(\"/\");\nlet tomorrowsDate = new Date();\ntomorrowsDate.setDate(new Date().getDate() + 1);\nlet [\n  tomorrowDay,\n  tomorrowMonth,\n  tomorrowYear,\n] = tomorrowsDate.toLocaleDateString(\"en-US\").split(\"/\");\n\nlet yesterdaysDate = new Date();\nyesterdaysDate.setDate(new Date().getDate() - 1);\nlet [\n  yesterdayDay,\n  yesterdayMonth,\n  yesterdayYear,\n] = yesterdaysDate.toLocaleDateString(\"en-US\").split(\"/\");\n\nexport const yesterday = `https://api.footystats.org/todays-matches?key=${process.env.REACT_APP_API_KEY}&date=${yesterdayYear}-${yesterdayDay}-${yesterdayMonth}`;\nexport const today = `https://api.footystats.org/todays-matches?key=${process.env.REACT_APP_API_KEY}&date=${year}-${day}-${month}`;\nexport const tomorrow = `https://api.footystats.org/todays-matches?key=${process.env.REACT_APP_API_KEY}&date=${tomorrowYear}-${tomorrowDay}-${tomorrowMonth}`;\n\nexport function getRadioState(state) {\n  let radioState = state;\n  return radioState;\n}\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nexport let allForm = [];\n\n\nasync function createFixture(match, result) {\n  match.game = match.homeTeam + \" v \" + match.awayTeam;\n\n  ReactDOM.render(\n    <Fixture\n      fixtures={matches}\n      result={result}\n      className={\"individualFixture\"}\n    />,\n    document.getElementById(\"FixtureContainer\")\n  );\n}\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nvar requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\",\n};\n\nexport async function generateFixtures(day, radioState) {\n  let radioValue = parseInt(radioState);\n\n  let index;\n  if (radioValue === 5) {\n    index = 0;\n  } else if (radioValue === 6) {\n    index = 1;\n  } else if (radioValue === 10) {\n    index = 2;\n  }\n\n  let url;\n  switch (day) {\n    case \"yesterdaysFixtures\":\n      url = yesterday;\n      break;\n    case \"todaysFixtures\":\n      url = today;\n      break;\n    case \"tomorrowsFixtures\":\n      url = tomorrow;\n      break;\n    default:\n      break;\n  }\n\n\n\n\n\n  fixtureResponse = await fetch(proxyurl + url);\n\n  await fixtureResponse.json().then((fixtures) => {\n    fixtureArray = Array.from(fixtures.data);\n  });\n\n  ReactDOM.render(\n    <Button\n      text={\"Get Predictions\"}\n      onClickEvent={() => getScorePrediction(day)}\n    />,\n    document.getElementById(\"Buttons\")\n  );\n  let form;\n  let formArray;\n  var isFormStored;\n  let storedForm = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}form${day}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n      },\n    });\n  if (storedForm.status === 200) {\n    await storedForm.json().then((form) => {\n      formArray = Array.from(form.allForm);\n      isFormStored = true;\n      allForm = formArray;\n    });\n  } else {\n    console.log(\"Stored form not fetched\");\n    isFormStored = false;\n  }\n\n  for (let i = 0; i < orderedLeagues.length; i++) {\n    leagueGames = fixtureArray.filter(\n      (game) => game.competition_id === orderedLeagues[i].element.id\n    );\n\n    for (const fixture of leagueGames) {\n      const unixTimestamp = fixture.date_unix;\n      const milliseconds = unixTimestamp * 1000;\n      const dateObject = new Date(milliseconds);\n\n      let match = {};\n      match.id = fixture.id;\n      match.competition_id = fixture.competition_id;\n      match.time = dateObject.toLocaleString(\"en-US\", { hour: \"numeric\" });\n      match.homeTeam = fixture.home_name;\n      match.awayTeam = fixture.away_name;\n      match.homeOdds = fixture.odds_ft_1;\n      match.awayOdds = fixture.odds_ft_2;\n      match.drawOdds = fixture.odds_ft_x;\n      match.homeId = fixture.homeID;\n      match.awayId = fixture.awayID;\n      match.form = [];\n      match.homeTeamInfo = [];\n      match.awayTeamInfo = [];\n\n      if (!isFormStored) {\n        form = await getForm(match);\n        console.log(\"Pusing match to form object\");\n\n        allForm.push({\n          id: match.id,\n          home: {\n            teamName: match.homeTeam,\n            0: {\n              XG: parseFloat(form[0].data[0].stats.xg_for_avg_overall),\n              ScoredOverall: parseFloat(\n                form[0].data[0].stats.seasonScoredNum_overall\n              ),\n              ConcededOverall: parseFloat(\n                form[0].data[0].stats.seasonConcededNum_overall\n              ),\n              XGAgainstAvg: parseFloat(\n                form[0].data[0].stats.xg_against_avg_overall\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[0].data[0].stats.seasonCSPercentage_overall\n              ),\n              AveragePossession: parseFloat(\n                form[0].data[0].stats.possessionAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[0].data[0].stats.shotsOnTargetAVG_overall\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[0].data[0].stats.dangerous_attacks_avg_overall\n              ),\n            },\n            1: {\n              XG: parseFloat(form[0].data[1].stats.xg_for_avg_overall),\n              ScoredOverall: parseFloat(\n                form[0].data[1].stats.seasonScoredNum_overall\n              ),\n              ConcededOverall: parseFloat(\n                form[0].data[1].stats.seasonConcededNum_overall\n              ),\n              XGAgainstAvg: parseFloat(\n                form[0].data[1].stats.xg_against_avg_overall\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[0].data[1].stats.seasonCSPercentage_overall\n              ),\n              AveragePossession: parseFloat(\n                form[0].data[1].stats.possessionAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[0].data[1].stats.shotsOnTargetAVG_overall\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[0].data[1].stats.dangerous_attacks_avg_overall\n              ),\n            },\n            2: {\n              XG: parseFloat(form[0].data[2].stats.xg_for_avg_overall),\n              ScoredOverall: parseFloat(\n                form[0].data[2].stats.seasonScoredNum_overall\n              ),\n              ConcededOverall: parseFloat(\n                form[0].data[2].stats.seasonConcededNum_overall\n              ),\n              XGAgainstAvg: parseFloat(\n                form[0].data[2].stats.xg_against_avg_overall\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[0].data[2].stats.seasonCSPercentage_overall\n              ),\n              AveragePossession: parseFloat(\n                form[0].data[2].stats.possessionAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[0].data[2].stats.shotsOnTargetAVG_overall\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[0].data[2].stats.dangerous_attacks_avg_overall\n              ),\n            },\n          },\n          away: {\n            teamName: match.awayTeam,\n            0: {\n              XG: parseFloat(form[1].data[0].stats.xg_for_avg_overall),\n              ScoredOverall: parseFloat(\n                form[1].data[0].stats.seasonScoredNum_overall\n              ),\n              ConcededOverall: parseFloat(\n                form[1].data[0].stats.seasonConcededNum_overall\n              ),\n              XGAgainstAvg: parseFloat(\n                form[1].data[0].stats.xg_against_avg_overall\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[1].data[0].stats.seasonCSPercentage_overall\n              ),\n              AveragePossession: parseFloat(\n                form[1].data[0].stats.possessionAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[1].data[0].stats.shotsOnTargetAVG_overall\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[1].data[0].stats.dangerous_attacks_avg_overall\n              ),\n            },\n            1: {\n              XG: parseFloat(form[1].data[1].stats.xg_for_avg_overall),\n              ScoredOverall: parseFloat(\n                form[1].data[1].stats.seasonScoredNum_overall\n              ),\n              ConcededOverall: parseFloat(\n                form[1].data[1].stats.seasonConcededNum_overall\n              ),\n              XGAgainstAvg: parseFloat(\n                form[1].data[1].stats.xg_against_avg_overall\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[1].data[1].stats.seasonCSPercentage_overall\n              ),\n              AveragePossession: parseFloat(\n                form[1].data[1].stats.possessionAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[1].data[1].stats.shotsOnTargetAVG_overall\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[1].data[1].stats.dangerous_attacks_avg_overall\n              ),\n            },\n            2: {\n              XG: parseFloat(form[1].data[2].stats.xg_for_avg_overall),\n              ScoredOverall: parseFloat(\n                form[1].data[2].stats.seasonScoredNum_overall\n              ),\n              ConcededOverall: parseFloat(\n                form[1].data[2].stats.seasonConcededNum_overall\n              ),\n              XGAgainstAvg: parseFloat(\n                form[1].data[2].stats.xg_against_avg_overall\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[1].data[2].stats.seasonCSPercentage_overall\n              ),\n              AveragePossession: parseFloat(\n                form[1].data[2].stats.possessionAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[1].data[2].stats.shotsOnTargetAVG_overall\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[1].data[2].stats.dangerous_attacks_avg_overall\n              ),\n            },\n          },\n        });\n      }\n\n      // match.form.allHomeForm = form[0].data;\n      // match.form.allAwayForm = form[1].data;\n\n      // match.form.homeTeam = form[0].data[index].stats;\n      // match.form.awayTeam = form[1].data[index].stats;\n\n      match.homeBadge = fixture.home_image;\n      match.awayBadge = fixture.away_image;\n\n      match.homePpg = fixture.home_ppg.toFixed(2);\n      match.homeFormColour = await applyColour(match.homePpg);\n\n      match.awayPpg = fixture.away_ppg.toFixed(2);\n      match.awayFormColour = await applyColour(match.awayPpg);\n\n      match.status = fixture.status;\n\n      match.btts_potential = fixture.btts_potential;\n      match.game = match.homeTeam + \" v \" + match.awayTeam;\n\n      match.homeGoals = fixture.homeGoalCount;\n      match.awayGoals = fixture.awayGoalCount;\n\n      matches.push(match);\n\n      await createFixture(match, false);\n    }\n  }\n  if (!isFormStored) {\n    await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}allForm${day}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ allForm }),\n    });\n  }\n}\n","import React from \"react\";\n\nfunction TextBlock(props) {\n  return (\n    <div className={props.className}>\n      <div>{props.text}</div>\n    </div>\n  );\n}\n\nexport default TextBlock;\n","import React, { useState } from \"react\";\nimport { Checkbox } from \"@material-ui/core\";\nimport { orderedLeagues } from \"../App\";\n\n\nclass CheckBox extends React.Component {\n  state = { isChecked: true };\n\n  toggle = () => {\n    this.setState((prevState) => ({ isChecked: !prevState.isChecked }));\n  };\n\n  render() {\n    const items = [];\n\n    for (let i = 0; i < orderedLeagues.length; i++) {\n        const element = orderedLeagues[i];\n        console.log(element)\n        items.push(\n            <div className=\"Checkbox\">\n              <Checkbox className=\"LeagueCheckboxes\" checked={this.state.isChecked} onChange={this.toggle} />\n              <label className=\"LeagueOption\" onClick={this.toggle}>\n                {element.name}\n              </label>\n            </div>\n          );\n    }\n    return (\n    <div>{items}</div>\n    )\n}\n}\nexport default CheckBox","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./components/Header\";\nimport Radio from \"./components/radio\";\nimport { Button } from \"./components/Button\";\nimport {\n  today,\n  generateFixtures,\n  generatePriorFixtures,\n  tomorrow,\n  yesterday,\n} from \"./logic/getFixtures\";\nimport { selectedOption } from \"./components/radio\";\nimport TextBlock from \"./components/TextSection\";\nimport Collapsable from \"./components/CollapsableElement\";\nimport CheckBox from \"./components/Checkbox\";\nrequire(\"dotenv\").config();\n\nexport const proxyurl = \"https://safe-caverns-99679.herokuapp.com/\";\nexport var fixtureList = [];\n\n// var slider = document.getElementById(\"myRange\");\n\n// var output = document.getElementById(\"weight\");\n// output.innerHTML = slider.value;\n\n// slider.oninput = function () {\n//   output.innerHTML = this.value;\n//   weighting = this.value / 100;\n// };\n\n// (async function populateContent() {\n//   // spinner.showSpinner();\n\n//   // spinner.hideSpinner();\n// })();\n\n\n\nconst availableLeagues = [];\nexport var orderedLeagues = [];\n\n(async function getLeagueList() {\n  let leagueList = await fetch(\n    proxyurl +\n      `https://api.footystats.org/league-list?key=${process.env.REACT_APP_API_KEY}&chosen_leagues_only=true`\n  );\n  let leagueArray;\n  await leagueList.json().then((leagues) => {\n    leagueArray = Array.from(leagues.data);\n  });\n\n  for (let i = 0; i < leagueArray.length; i++) {\n    const league = leagueArray[i];\n    const name = leagueArray[i].name;\n\n    for (let x = 0; x < league.season.length; x++) {\n      const element = league.season[x];\n\n      if (element.year === 20202021) {\n        availableLeagues.push({ name: name, element });\n      }\n    }\n\n    function mapOrder(array, order, key) {\n      array.sort(function (a, b) {\n        var A = a.element[key],\n          B = b.element[key];\n\n        if (order.indexOf(A) > order.indexOf(B)) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n\n      return array;\n    }\n\n    //leagues ordered by id\n    var leagueOrder = [\n      4759,\n      4912,\n      4845,\n      4844,\n      5018,\n      4944,\n      4478,\n      4673,\n      4889,\n      4889,\n      4746,\n      4567,\n      4505,\n      4842,\n      4972,\n      4676,\n      4645,\n      4547,\n      4902,\n      4903,\n      4803,\n      5151,\n      4930,\n      4655,\n      4930,\n      4693,\n    ];\n\n    orderedLeagues = mapOrder(availableLeagues, leagueOrder, \"id\");\n  }\n\n  ReactDOM.render(\n    <div className=\"LastXGames\">\n      <Radio\n        value=\"5\"\n        label=\"form based on last 5 games\"\n        className=\"FormRadio\"\n      />\n      <Radio\n        value=\"6\"\n        label=\"form based on last 6 games\"\n        className=\"FormRadio\"\n      />\n      <Radio\n        value=\"10\"\n        label=\"form based on last 10 games\"\n        className=\"FormRadio\"\n      />\n    </div>,\n    document.getElementById(\"RadioButtons\")\n  );\n\n  ReactDOM.render(\n    <TextBlock\n      text=\"Select how many games you would like to fetch form data for\"\n      className=\"RadioText\"\n    />,\n    document.getElementById(\"RadioText\")\n  );\n\n  ReactDOM.render(\n    <div className=\"FixtureButtons\">\n      <Button\n        text={\"Get Yesterday's Fixtures\"}\n        onClickEvent={async () =>\n          fixtureList.push(await generateFixtures(\"yesterdaysFixtures\", selectedOption))\n        }\n      />\n      <Button\n        text={\"Get Today's Fixtures\"}\n        onClickEvent={async () =>\n          fixtureList.push(await generateFixtures(\"todaysFixtures\", selectedOption))\n        }\n      />\n      <Button\n        text={\"Get Tomorrow's Fixtures\"}\n        onClickEvent={async () =>\n          fixtureList.push(await generateFixtures(\"tomorrowsFixtures\", selectedOption))\n        }\n      />\n    </div>,\n    document.getElementById(\"Buttons\")\n  );\n})();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div id=\"RadioContainer\" className=\"RadioContainer\">\n        <div id=\"RadioText\" />\n        <div id=\"RadioButtons\" />\n      </div>\n      <div id=\"Day\" />\n      <div id=\"Buttons\" />\n      <div id=\"successMeasure\" />\n      <div id=\"bestPredictions\" />\n      <div id=\"longShots\"/>\n      <div id=\"homeBadge\" />\n      <div id=\"FixtureContainer\"></div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}