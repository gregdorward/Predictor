{"version":3,"sources":["components/Header.js","components/Button.js","components/OddsRadio.js","components/createBadge.js","components/CollapsableElement.js","components/createStatsDiv.js","components/Div.js","logic/getForm.js","components/Increment.js","logic/getBTTSPotential.js","components/Carousel.js","logic/getScorePredictions.js","components/KofiButton.js","components/LeagueTable.js","logic/getFixtures.js","components/HeadToHead.js","components/Table.js","logic/getTeamStats.js","logic/compareFormTrend.js","components/Chart.js","logic/getStats.js","components/Fixture.js","logic/dataSlice.js","logic/store.js","components/DateForm.js","components/Team.js","App.js","components/radio.js","reportWebVitals.js","index.js"],"names":["Header","className","Button","props","id","text","variant","type","onClick","onClickEvent","style","selectedOdds","OddsRadio","handleOptionChange","setState","value","state","this","name","checked","onChange","Component","CreateBadge","image","ClassName","src","alt","flexShrink","Collapsable","transitionTime","trigger","classNameButton","buttonText","classNameFlex","classNameTwo","element","classNameThree","elementTwo","Stats","styleForm","formIndicator","styleBTTS","BTTSBoolean","clicked","formRun","FormTextString","Results","homeOrAway","homeOrAwayResults","BTTSArray","goals","conceeded","possession","XG","XGConceded","goalDifference","goalDifferenceHomeOrAway","sot","dangerousAttacks","leaguePosition","homeOrAwayLeaguePosition","winPercentage","toFixed","drawPercentage","lossPercentage","ppg","formTrend","BttsPercentage","BttsPercentageHomeOrAway","CardsTotal","CornersAverage","Div","getForm","match","teams","homeId","awayId","fixtureForm","i","team","fetch","process","response","json","then","formData","lastMatchTimestamp","last_updated_match_timestamp","length","incrementValue","riskLevel","Increment","IncrementItem","getNewTips","allTips","DecreaseItem","show","getBTTSPotential","homeGoals","awayGoals","unroundedHomeGoals","unroundedAwayGoals","homeBTTS","bttsAllPercentageHome","homeOnlyBTTS","bttsPercentageHomeHome","awayOnlyBTTS","bttsPercentageAwayAway","awayBTTS","bttsAllPercentageAway","homeG","awayG","combinedBTTS","bttsFraction","status","awayOdds","btts","bttsChosen","totalGoals","rawFinalHomeGoals","rawFinalAwayGoals","SwiperCore","use","EffectCoverflow","Pagination","finalHomeGoals","finalAwayGoals","homeOdds","Slider","effect","autoHeight","grabCursor","centeredSlides","slidesPerView","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","pagination","clickable","element2","element3","element4","element5","StyledKofiButton","color","title","kofiID","Headers","append","drawPredictions","sumStatDAWin","sumStatDALoss","sumStatPossessionWin","sumStatPossessionLoss","sumStatSOTWin","sumStatSOTLoss","sumStatPPGLast10Win","sumStatPPGLast10Loss","sumOddsWin","sumOddsLoss","sumXGForWin","sumXGForLoss","sumXGAgainstWin","sumXGAgainstLoss","allDrawOutcomes","totalROI","totalInvestment","totalProfit","convertTimestamp","timestamp","newDate","Date","toLocaleDateString","split","day","month","year","converted","getPointsFromLastX","lastX","pointsAddition","points","forEach","game","error","console","log","getPastLeagueResults","hOrA","form","date","allLeagueResultsArrayOfObjects","leagueIndex","fixtures","teamsHomeResults","filter","fixture","home_name","item","date_unix","sort","a","b","teamsAwayResults","away_name","homeResults","awayResults","oddsSumHome","oddsSumAway","index","resultedGame","homeGoalCount","team_a_xg","awayGoalCount","team_b_xg","team_a_possession","team_a_shots","team_a_shotsOnTarget","team_a_dangerous_attacks","team_a_corners","odds_ft_1","odds_ft_2","homeTeam","awayTeam","XGAgainst","scored","shots","corners","dateRaw","oddsHome","oddsAway","push","team_b_possession","team_b_shots","team_b_shotsOnTarget","team_b_dangerous_attacks","team_b_corners","reversedResultsAway","allTeamResults","reversedResultsHome","concat","averageOddsHome","averageOddsAway","teamGoalsHome","map","res","teamGoalsAway","teamGoalsAll","teamConceededHome","teamConceededAway","teamConceededAll","teamXGForAll","teamXGAgainstAll","XGSum","reduce","avgXGScored","XGAgainstSum","avgXGConceeded","possessionSum","avgPossession","dangerousAttacksSum","avgDangerousAttacks","shotsSum","avgShots","shotsOnTarget","shotsOnTargetSum","avgShotsOnTarget","cornersSum","cornersAv","last5XG","slice","last5XGSum","last5XGAvgFor","last5XGAgainst","last5XGAgainstSum","last5XGAvgAgainst","XGOverall","parseFloat","XGlast5","XGAgainstAvgOverall","XGAgainstlast5","AveragePossessionOverall","AverageDangerousAttacksOverall","AverageCorners","AverageShotsOnTargetOverall","alpha","beta","allGoalsArrayHome","allConceededArrayHome","sum","sumTwo","predictGoalsWithExponentialSmoothing","forAndAgainstRollingAv","forAndAgainstRollingAvHomeOrAway","allGoalsArrayAway","allConceededArrayAway","bttsHome","bttsAway","bttsAll","bttsHomeCount","bttsHomeString","bttsHomePercentage","bttsAwayCount","bttsAwayString","bttsAwayPercentage","bttsAllCount","bttsAllString","bttsAllPercentage","r","x","predictNextWeightedMovingAverage","teamGoalsHomeRollingAverage","teamGoalsAwayRollingAverage","teamGoalsAllRollingAverage","teamConceededHomeRollingAverage","teamConceededAwayRollingAverage","teamGoalsConceededAllRollingAverage","avgScored","last5","last5Sum","last5AvgScored","last10","last10Sum","last10AvgScored","last5Goals","last10Goals","avgConceeded","numbers","windowSize","startIndex","window","weights","Array","from","_","acc","num","movingAverage","w","calculateWeightedAverage","arr","weightedSum","totalWeight","weight","Math","pow","teamGoalsFor","teamGoalsAgainst","lambdaFor","lambdaAgainst","predictedGoalsFor","predictedGoalsAgainst","goalsFor","goalsAgainst","compareStat","statOne","statTwo","stat1","stat2","normalizeValues","normalizedValue1","normalizedValue2","finalValue1","finalValue2","diff","statDiff","getClinicalRating","dangerousAttackConversion","rating","score","getPointsDifferential","pointsHomeAvg","pointsAwayAvg","differential","getPointWeighting","pointsDiff","pointsDiffWeightingHome","pointsDiffWeightingAway","compareFormTrend","recentForm","distantForm","scoreTotal","recent","distant","getPointAverage","pointTotal","games","poissonDistribution","lambda","k","numerator","exp","denominator","factorial","n","result","calculateAverageGoals","adjustGoalsAvg","goalsAvg","strengthRatio","predictScore","goalsForTeam1","goalsAgainstTeam1","goalsForTeam2","goalsAgainstTeam2","team1Metrics","team2Metrics","team1AverageGoalsFor","team1AverageGoalsAgainst","team2AverageGoalsFor","team2AverageGoalsAgainst","team1StrengthRatio","weighting","team2StrengthRatio","adjustedTeam1AverageGoals","adjustedTeam2AverageGoals","adjustedTeam1AverageGoalsAgainst","adjustedTeam2AverageGoalsAgainst","maxGoals","scores","j","team1GoalExpectation","team2GoalExpectation","isFinite","probability","team1Score","team2Score","top5Scores","value1","value2","minRange","maxRange","Error","absValue1","abs","absValue2","normalizedAbsValue1","totalAbs","normalizedAbsValue2","compareTeams","homeForm","awayForm","homeAttackStrength","attackingStrength","homeDefenceStrength","defensiveStrength","homePossessionStrength","possessionStrength","awayAttackStrength","awayDefenceStrength","awayPossessionStrength","getXGtoActualDifferentialStrength","actualToXGDifference","homeXGtoActualDiffStrength","awayXGtoActualDiffStrength","attackStrengthComparison","defenceStrengthComparison","possessiontrengthComparison","xgActualComparison","xgForStrength","xgForComparison","xgAgainstStrength","xgAgainstComparison","homeOrAwayAverage","homeAwayPointAverageComparison","last5Points","fiveGameComparison","oddsComparison","homeAttackAdvantage","homeAdvantage","dangerousAttacksWithConverstionComparison","goalDiffHomeOrAwayComparison","directnessOverallStrength","overallDirectnessComparison","directnessHome","directnessAway","hOrADirectnessComparison","accuracyOverallStrength","accuracyComparison","oddsWeighting","game_week","calculation","homeWinOutcomeProbability","homeTeamWinPercentage","awayTeamLossPercentage","awayWinOutcomeProbability","homeTeamLossPercentage","awayTeamWinPercentage","drawOutcomeProbability","homeTeamDrawPercentage","awayTeamDrawPercentage","lastGame","last2Points","XGdifferentialValueRaw","improving","calculateScore","divider","calculate","allForm","find","home","teamName","away","PlayedHome","PlayedAway","LastFiveForm","previousToLastGame","last2","last6Points","LastSixForm","last10Points","LastTenForm","twoGameAverage","last3Points","threeGameAverage","fiveGameAverage","sixGameAverage","tenGameAverage","lastHomeOrAwayPoints","ScoredAverage","ScoredOverall","ConcededAverage","ConcededOverall","ScoredAverageShortTerm","ConcededAverageShortTerm","longTermAverageGoals","longTermAverageConceeded","GoalsInGamesAverageHome","GoalsInGamesAverageAway","recentGoalDiff","distantGoalDiff","recentDA","distantDA","recentPosession","distantPosession","recentCleanSheet","CleanSheetPercentage","distantCleanSheet","recentFormArray","distantFormArray","formTrendScore","expectedGoals","ScoredAverageShortAndLongTerm","conceededAverageShortAndLongTerm","longTermGoalDifference","shortTermGoalDifference","XGdifferential","XGdifferentialRecent","actualToXGDifferenceRecent","formHome","formAway","homeTenGameAvg","awayTenGameAvg","homeTwoGameAvg","awayTwoGameAvg","pointsDiff10","pointsDiff2","last10WeightingHome","last10WeightingAway","last2WeightingHome","last2WeightingAway","clinicalRating","clinicalScore","XGdifferentialValue","leagueID","predictedGoalsBasedOnHomeAv","predictedGoalsBasedOnAwayAv","allTeamGoalsBasedOnAverages","predictedGoalsConceededBasedOnHomeAv","predictedGoalsConceededBasedOnAwayAv","allTeamGoalsConceededBasedOnAverages","averageScoredLeague","averageConceededLeague","last10btts","last10bttsHome","last10bttsAway","bttsPercentageHomeAway","bttsPercentageAwayHome","homeTeamHomePositionRaw","awayTeamAwayPositionRaw","homePositionHomeOnly","awayPositionAwayOnly","homePosition","homeRawPosition","awayPosition","awayRawPosition","AttackingPotency","AttacksHome","AttacksAverage","attackingMetricsHome","AverageShots","undefined","attackingMetricsAway","defensiveMetricsHome","defensiveMetricsAway","attackingMetrics","defensiveMetrics","calculateAttackingStrength","calculateDefensiveStrength","calculateMetricStrength","directnessOverall","AverageShotsHomeOrAway","AveragePossession","shootingAccuracy","teamComparisonScore","teamStrengthWeighting","scorePredictions","homeGoalDiff","awayGoalDiff","goalsDifferential","rollingAverageGoalsDifferential","goalCalcHomeShortTerm","goalCalcAwayShortTerm","homeLeagueOrAllFormAverageGoals","LeagueAverageGoals","LeagueAverageConceded","awayLeagueOrAllFormAverageGoals","factorOneHome","factorOneAway","factorTwoHome","factorTwoAway","scoreDiff","homeComparisonWeighting","awayComparisonWeighting","ceil","floor","round","difference","prediction","includeInMultis","pointsDifferential","pointsDifferentialValue","pointsDifferentialValueRaw","rollingGoalDiffDifferential","rollingGoalDiff","rollingGoalDiffValue","dangerousAttacksDifferential","dangerousAttacksDiff","dangerousAttacksDiffValue","winner","outcome","predictionOutcome","over25PredictionOutcome","bttsOutcome","total","parseInt","total2","profit","getSuccessMeasure","sumProfit","investment","exactScores","successCount","netProfit","hasOwnProperty","exactScore","ROI","operand","operandTwo","exactScoreHitRate","successRate","ReactDOM","render","document","getElementById","price","combinations","gamesInExotic","exoticStake","exoticString","allTipsSorted","newArray","bestBets","Over25Tips","XGDiffTips","rollingDiffTips","dangerousAttacksDiffTips","pointsDiffTips","exoticArray","bttsArray","accumulatedOdds","predictions","array","tip","indexOf","rawOdds","renderTips","getScorePrediction","mocked","mock","Promise","all","matches","goalsA","goalsB","unroundedGoalsA","unroundedGoalsB","outcomeSymbol","over25PredictionOutcomeSymbol","bttsOutcomeSymbol","fractionHome","predictionObject","odds","comparisonScore","rawComparisonScore","goalDifferential","experimentalCalc","fractionAway","Over25PredictionObject","decimalOdds","homeDoubleChance","over25Odds","doubleChanceOutcome","goalTotalUnrounded","XGPredictionObject","otherTeam","pointsDiffObject","rollingDiffObject","dangerousAttacksDiffObject","RenderAllFixtures","bool","getMultis","getCoverBetMaxReturns","getAccumulatorPrice","priceArray","minAccSize","stake","perms","getUniquePermutations","permLength","permutations","newArr","splice","twoDimArrayUnion","arr1","arr2","duplicate","NewlineText","str","toggleState","setIsOff","upArrow","StyledTableCell2","withStyles","theme","head","backgroundColor","padding","paddingTop","paddingBottom","textAlign","fontSize","fontFamily","margin","body","TableCell","StyledTableCell","StyledTableRow","root","TableRow","LeagueTable","useState","singleResult","rows","Teams","component","scope","width","Name","Played","Wins","Draws","Losses","For","Against","GoalDifference","Points","Form","Key","leagueResults","team_a_red_cards","team_b_red_cards","leagueResultsOlder","getTopScorersTeam","ID","sorted","league","order","sortedByForm","LastWeeksResults","GamesPlayed","LeagueID","TableContainer","Paper","Table","marginTop","marginBottom","TableHead","TableBody","mostRecentGameweek","seasonAVG_home","seasonAVG_away","seasonBTTSPercentage","seasonOver05Percentage_overall","seasonOver15Percentage_overall","seasonOver25Percentage_overall","seasonOver35Percentage_overall","seasonOver45Percentage_overall","over75CornersPercentage_overall","over85CornersPercentage_overall","over95CornersPercentage_overall","over105CornersPercentage_overall","over115CornersPercentage_overall","over125CornersPercentage_overall","cornersAVG_overall","cardsAVG_overall","top_scorers","known_as","club_team_id","goals_overall","fixtureResponse","leagueInstance","lastThreeFormHome","lastThreeFormAway","lastFiveFormHome","lastFiveFormAway","lastSixFormHome","lastSixFormAway","lastTenFormHome","lastTenFormAway","leagueOrAll","formRunHome","formRunAway","WDLinLeagueHome","WDLinLeagueAway","HomeAverageGoals","homeAverageGoals","HomeAverageConceded","homeAverageConceded","AwayAverageGoals","awayAverageGoals","AwayAverageConceded","awayAverageConceded","oddslib","require","fixtureArray","leagueGames","leagueArray","leagueIdArray","tableArray","worldCupArray","generateTables","allResults","currentLeagueId","data","specific_tables","groups","table","currentTeam","wdl_record","toUpperCase","Position","cleanName","matchesPlayed","seasonWins_overall","seasonDraws_overall","seasonLosses_overall","seasonGoals","seasonConceded_home","seasonConceded_away","seasonGoalDifference","LastXPoints","wdl","seasonConceded","group","league_table","all_matches_table_overall","results","mostRecentGame","pop","gameweeksResults","leagueTable","leagueStatistics","stats","statistics","createFixture","mockBool","roundedHomeOdds","roundedAwayOdds","homeFraction","to","precision","awayFraction","bttsOdds","roundedBTTSOdds","homeTeamWinsPercentage","homeTeamLossesPercentage","homeTeamDrawsPercentage","awayTeamWinsPercentage","awayTeamLossesPercentage","awayTeamDrawsPercentage","Fixture","isFunctionRunning","generateFixtures","footyStatsFormattedDate","current","todaysDate","getPrefix","position","teamPositionPrefix","updateResults","method","headers","Accept","JSON","stringify","random","alert","height","fill","url","formUrl","formArray","leaguesStored","storedForm","isFormStored","isStoredLocally","orderedLeagues","leaguePositions","leagues","allLeagueResults","allGames","startDate","getTime","targetDate","orderedLeague","gamesFiltered","mostRecentResults","shortenedResults","pre_match_teamA_overall_ppg","pre_match_teamB_overall_ppg","leagueObj","homeLeague","awayLeague","all_matches_table_home","all_matches_table_away","regularSeason","season","string","stringHome","stringAway","rawPosition","homeFormName","awayFormName","homeSeasonWinPercentage","seasonWins","awaySeasonWinPercentage","homeSeasonLossPercentage","seasonLosses_home","awaySeasonLossPercentage","seasonLosses_away","homeSeasonDrawPercentage","seasonDraws","awaySeasonDrawPercentage","homeSeasonMatchesPlayed","awaySeasonMatchesPlayed","played","o","competition_id","unixTimestamp","dateObject","previousLeagueName","leagueName","time","toLocaleString","hour","minute","drawOdds","odds_ft_x","odds_doublechance_1x","awayDoubleChance","odds_doublechance_x2","odds_btts_yes","homeID","awayID","homeTeamInfo","awayTeamInfo","homeTeaminLeague","awayTeaminLeague","teamPositionHome","teamPositionHomeTable","teamPositionAwayTable","homeTeamWinPercentageHome","awayTeamWinPercentageAway","homeTeamLossPercentageHome","awayTeamLossPercentageAway","homeTeamDrawPercentageHome","awayTeamDrawPercentageAway","teamPositionAway","homePrefix","homePrefixHomeTable","awayPrefix","awayPrefixAwayTable","homeSeasonPPG","awaySeasonPPG","homeTeaminHomeLeague","awayTeaminAwayLeague","homeFormString5","additional_info","formRun_overall","awayFormString5","homeFormString6","awayFormString6","homeFormString10","awayFormString10","homeFormRun","formRun_home","awayFormRun","formRun_away","season_format","xg_for_avg_overall","xg_for_avg_home","seasonScoredNum_overall","seasonScoredAVG_home","seasonMatchesPlayed_home","seasonMatchesPlayed_away","seasonConcededNum_overall","seasonConcededAVG_home","xg_against_avg_overall","XGAgainstAverage","xg_against_avg_home","seasonCSPercentage_overall","possessionAVG_overall","possessionAVG_home","shotsOnTargetAVG_overall","AverageShotsOnTarget","shotsOnTargetAVG_home","dangerous_attacks_avg_overall","PPG","seasonPPG_overall","attacks_avg_home","AttacksAway","attacks_avg_away","AverageDangerousAttacks","dangerous_attacks_avg_home","homeDefenceAdvantage","BTTSPercentage","seasonBTTSPercentage_home","LeagueOrAll","LeaguePosition","shotsAVG_overall","shotsAVG_home","seasonGoalDifference_overall","seasonGoalDifference_home","seasonBTTSPercentage_overall","cardsTotal_overall","scoredBothHalvesPercentage_overall","lastThreeForm","SeasonPPG","WinPercentage","LossPercentage","DrawPercentage","ScoredBothHalvesPercentage","LastMatch","WDLRecord","xg_for_avg_away","seasonScoredAVG_away","seasonConcededAVG_away","xg_against_avg_away","possessionAVG_away","shotsOnTargetAVG_away","dangerous_attacks_avg_away","seasonBTTSPercentage_away","shotsAVG_away","seasonGoalDifference_away","teamIDHome","teamIDAway","leagueId","homeBadge","home_image","awayBadge","away_image","homePpg","home_ppg","awayPpg","away_ppg","homeTeamHomePosition","awayTeamAwayPosition","odds_ft_over25","btts_potential","stadium","stadium_name","expectedGoalsHomeToDate","team_a_xg_prematch","expectedGoalsAwayToDate","team_b_xg_prematch","setTimeout","HeadToHead","homeWins","awayWins","draws","averageGoals","bestHomeOdds","bestAwayOdds","lastGameStadiumName","lastGameDate","lastGameHomeTeam","lastGameHomeGoals","lastGameAwayGoals","lastGameAwayTeam","secondToLastGameStadiumName","secondToLastGameDate","secondToLastGameHomeTeam","secondToLastGameHomeGoals","secondToLastGameAwayGoals","secondToLastGameAwayTeam","lineHeight","CustomizedTables","align","o05Stat","o05Odds","u05Odds","o15Stat","o15Odds","u15Odds","o25Stat","o25Odds","u25Odds","o35Stat","o35Odds","u35Odds","BTTSStat","BTTSForecast","BTTSOdds","BTTSOddsNo","getTeamStats","identifier","getBTTSPercentage","getFairOdds","impliedProbability","impliedProbabilityDivided","homeToal","awayTotal","fixtureHistory","matchArr","h2h","previous_matches_ids","oddsComparisonHomeArray","oddsComparisonAwayArray","odds_comparison","sortedHomeOdds","Object","entries","sortedAwayOdds","bestHomeOddsProvider","bestAwayOddsProvider","previous_matches_results","totalMatches","lastMatch","secondMatchExists","secondToLastMatch","previousMatch","previousMatchDetails","getDate","getMonth","getFullYear","secondToPreviousMatch","secondToPreviousMatchDetails","dateObject2","date2","betting_stats","bttsPercentage","fairOddsBTTSYes","fairOddsBTTSNo","team_a_wins","team_b_wins","draw","avg_goals","isNaN","over05Percentage","over15Percentage","o15Forecast","o15_potential","odds_ft_over05","odds_ft_under05","odds_ft_over15","odds_ft_under15","over25Percentage","o25Forecast","o25_potential","odds_ft_under25","over35Percentage","o35Forecast","o35_potential","odds_ft_over35","odds_ft_under35","odds_btts_no","CornersStat","CornersForecast","corners_potential","CornersOdds","odds_corners_over_105","getOverOrUnderText","xgSum","overUnderAchievingSum","getXGDifferential","xgFor","xgAgainst","xgDiff","goalDiff","compareXgAndGoalDiff","getAttackingSummary","goalsRecent","goalsLongTerm","getDefenceSummary","cleansheetStat","lastx","ten","five","xgText","attackString","defenceString","pointsAverageTotal","GenerateFormSummary","Chart","data1","options","responsive","aspectRatio","maintainAspectRatio","layout","elements","point","radius","scales","y","suggestedMin","suggestedMax","grid","borderWidth","borderColor","ticks","font","size","display","plugins","legend","labels","boxHeight","keys","datasets","label","team1","tension","team2","data2","RadarChart","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","angleLines","BarChart","datasetOne","idx","numOne","numTwo","tempArr","firstNum","secondNum","max","findLargestNum","min","context","dataIndex","dataset","indexAxis","bar","tooltip","enabled","metric","ranges","normalizedValue","metricName","metricValue","averagePossession","accuracyOverall","weightedScore","XGDiff","strength","ChartJS","register","CategoryScale","LinearScale","RadialLinearScale","PointElement","ArcElement","Filler","BarElement","LineElement","Title","Tooltip","Legend","rollingGoalDiffTotalHome","rollingGoalDiffTotalAway","displayBool","testBool","styling","getPointsFromGames","formArr","pairings","W","D","L","arrayOfIndividualPoints","getLastGameResult","homeXG","awayXG","homeShots","awayShots","homeSot","awaySot","homeDangerousAttacks","awayDangerousAttacks","homePossession","awayPossession","homeRed","awayRed","homePPG","awayPPG","StatsHome","gameCount","formDataHome","Last5","gameArrayHomeTeamHomeGames","AverageGoals","AverageConceeded","AverageXG","AverageXGConceded","homeTenGameAverage","homeSixGameAverage","homeFiveGameAverage","homeLastGame","ResultsHomeOrAway","wonHomeOrAwayOnly","FormTextStringHome","StatsAway","formDataAway","gameArrayAwayTeamAwayGames","awayTenGameAverage","awaySixGameAverage","awayFiveGameAverage","awayLastGame","FormTextStringAway","gameStats","gameArrayHome","gameArrayAway","goalDiffHomeMovingAv","goalDiffAwayMovingAv","getEMA","p","resultHome","resultHomeOnly","timeZone","won","goalsScored","goalsConceeded","winningTeam","goalDiffArrayHome","cumulativeSumHome","resultAway","resultAwayOnly","goalDiffArrayAway","cumulativeSumAway","bttsArrayHome","bttsArrayAway","resultsArrayHome","resultsArrayAway","homeFormTrend","awayFormTrend","formTextStringHome","formTextStringAway","homeXGForStrength","homeXGAgainstStrength","homeDirectnessStrength","homeAccuracyOverallStrength","awayXGForStrength","awayXGAgainstStrength","awayDirectnessStrength","awayAccuracyOverallStrength","formPointsHome","formPointsAway","Last5PPG","formArrayHome","formArrayAway","chartType","overviewHome","overviewAway","resultValue","count","mockValue","initialState","dataHome","localStorage","getItem","dataAway","dataHomeDef","dataAwayDef","allTeamResultsHome","allTeamResultsAway","homeDetails","awayDetails","fixtureDetails","dataSlice","createSlice","reducers","setData","action","payload","actions","store","configureStore","reducer","dataReducer","GetDivider","matchStatus","isPrediction","renderLeagueName","renderTable","SingleFixture","dispatch","useDispatch","StoreData","homeTeamName","homeTeamBadge","awayTeamName","awayTeamBadge","setItem","key1","key2","open","handleButtonClick","createStatsDiv","onMouseDown","List","DateField","today","todayFootyStats","tomorrow","tomorrowFootyStats","dateFootyStats","lastSaturday","lastSaturdayFootyStats","tomorrowsDate","yesterdaysDate","saturdayDate","historicDate","dateString","TeamPage","storedDataHome","useSelector","jsonDataHome","parse","propertyNamesHome","storedDataHomeDef","jsonDataHomeDef","propertyNamesHomeDef","storedDataallTeamResultsHome","jsonDataallTeamResultsHome","propertyNamesallTeamResultsHome","values","jsonHomeDetails","storedDataAway","jsonDataAway","propertyNamesAway","storedDataAwayDef","jsonDataAwayDef","propertyNamesAwayDef","storedDataallTeamResultsAway","jsonDataallTeamResultsAway","propertyNamesallTeamResultsAway","jsonAwayDetails","storedFixtureDetails","storedFixtureDetailsJson","key","stacked","fixtureList","availableLeagues","leagueOrder","decrementDate","calculateDate","renderButtons","setDate","getDay","textJoined","newText","leagueList","mapOrder","A","B","welcomeTextOne","welcomeTextTwo","App","getLeagueList","href","target","rel","mockedFixtures","TwitterShareButton","boxShadow","TwitterIcon","RedditShareButton","RedditIcon","FacebookShareButton","quote","FacebookIcon","WhatsappShareButton","separator","WhatsappIcon","TelegramShareButton","TelegramIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode","path","Team","exact"],"mappings":"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","file":"static/js/main.d73c2985.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n      <h1 className=\"HeaderContainer\">XG Tipping</h1>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nexport function Button(props) {\n  return (\n    <div id=\"Button\">\n      <button data-cy={props.text} variant=\"primary\" type=\"button\" onClick={props.onClickEvent} className={props.className} style={props.style}>\n        {props.text}\n      </button>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nexport var selectedOdds = \"Fractional odds\";\n\nexport class OddsRadio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOdds: this.props.value,\n    };\n  }\n\n  handleOptionChange = () => {\n    this.setState({\n      selectedOdds: this.props.value,\n    });\n    selectedOdds = this.state.selectedOdds;\n  };\n\n  render() {\n    return (\n      <section className=\"dark2\">\n        <div className={this.props.className}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"odds\"\n              checked={this.state.checked}\n              onChange={this.handleOptionChange}\n              data-cy={this.props.value}\n            />\n            <span className=\"design\"></span>\n            <span className=\"text\">{this.props.value}</span>\n          </label>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default OddsRadio;\n","import React from \"react\";\n\nexport function CreateBadge(props) {\n\n  if(props.image === \"-\"){\n    return (\n      <div className={props.ClassName} />\n    );\n  } else {\n    return (\n      <img\n        src={`https://cdn.footystats.org/img/${props.image}`}\n        className={props.ClassName}\n        alt={props.alt}\n        flex-shrink={props.flexShrink}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Collapsible from \"react-collapsible\";\n\nconst Collapsable = (props) => {\n  return (\n    <Collapsible transitionTime={300} trigger={<button className={props.classNameButton}>{props.buttonText}</button>} className={props.className? props.className: \"Collapsable\"}>\n      <div className={props.classNameFlex? props.classNameFlex: \"\"}>\n      <span className={props.classNameTwo? props.classNameTwo: props.buttonText} style={props.style} key={`123${props.buttonText}`}>{props.element}</span>\n      <span className={props.classNameThree? props.classNameTwo: props.buttonText} key={`456${props.buttonText}`}>{props.elementTwo}</span>\n      </div>\n    </Collapsible>\n  );\n};\n\n\nexport default Collapsable;","import React, { Fragment } from \"react\";\n\nfunction Stats(props) {\n  let shouldOpen = props.clicked\n  function styleForm(formIndicator) {\n    let className;\n    if (formIndicator === \"W\") {\n      className = \"win\";\n    } else if (formIndicator === \"D\") {\n      className = \"draw\";\n    } else if (formIndicator === \"L\") {\n      className = \"loss\";\n    }\n    return className;\n  }\n\n  function styleBTTS(BTTSBoolean) {\n    let className;\n    if (BTTSBoolean === \"\\u2714\") {\n      className = \"BTTSTrue\";\n    } else if (BTTSBoolean === \"\\u2718\") {\n      className = \"BTTSFalse\";\n    }\n    return className;\n  }\n\n  if (props.formRun) {\n    return (\n      <Fragment>\n        <ul className={props.className} style={props.style}>\n          <li className=\"FormSummaryHome\">{props.FormTextString}</li>\n          <li className=\"FormHeader\">\n            League results (most recent on right)\n          </li>\n          <li key={`last5League`} className=\"last5League\">\n          <span className={styleForm(props.Results[5])}>\n              {props.Results[5]}\n            </span>\n            <span className={styleForm(props.Results[4])}>\n              {props.Results[4]}\n            </span>\n            <span className={styleForm(props.Results[3])}>\n              {props.Results[3]}\n            </span>\n            <span className={styleForm(props.Results[2])}>\n              {props.Results[2]}\n            </span>\n            <span className={styleForm(props.Results[1])}>\n              {props.Results[1]}\n            </span>\n            <span className={styleForm(props.Results[0])}>\n              {props.Results[0]}\n            </span>\n          </li>\n          <li className=\"FormHeader\">\n            {props.homeOrAway} form (most recent on right)\n          </li>\n          <li key={`last5${props.homeOrAwayResults}`} className=\"FormHomeOrAway\">\n          <span className={styleForm(props.homeOrAwayResults[5])}>\n              {props.homeOrAwayResults[5]}\n            </span>\n            <span className={styleForm(props.homeOrAwayResults[4])}>\n              {props.homeOrAwayResults[4]}\n            </span>\n            <span className={styleForm(props.homeOrAwayResults[3])}>\n              {props.homeOrAwayResults[3]}\n            </span>\n            <span className={styleForm(props.homeOrAwayResults[2])}>\n              {props.homeOrAwayResults[2]}\n            </span>\n            <span className={styleForm(props.homeOrAwayResults[1])}>\n              {props.homeOrAwayResults[1]}\n            </span>\n            <span className={styleForm(props.homeOrAwayResults[0])}>\n              {props.homeOrAwayResults[0]}\n            </span>\n          </li>\n          <li\n            key=\"BTTSArrayHomeOrAway\"\n            className=\"BTTSArrayHomeOrAway\"\n            data-cy={props.name + \"BTTSArrayHomeOrAway\"}\n          >\n            <div className=\"BTTSResults\">BTTS</div>\n            <span className={styleBTTS(props.BTTSArray[5])}>{props.BTTSArray[5]}</span>\n            <span className={styleBTTS(props.BTTSArray[4])}>{props.BTTSArray[4]}</span>\n            <span className={styleBTTS(props.BTTSArray[3])}>{props.BTTSArray[3]}</span>\n            <span className={styleBTTS(props.BTTSArray[2])}>{props.BTTSArray[2]}</span>\n            <span className={styleBTTS(props.BTTSArray[1])}>{props.BTTSArray[1]}</span>\n            <span className={styleBTTS(props.BTTSArray[0])}>{props.BTTSArray[0]}</span>\n          </li>\n          <li\n            key=\"TeamScored\"\n            className=\"TeamScored\"\n            data-cy={props.name + \"teamScored\"}\n          >\n            {`Avg goals scored - ${props.goals}`}\n          </li>\n          <li\n            key=\"TeamConceeded\"\n            className=\"TeamConceeded\"\n            data-cy={props.name + \"teamConceded\"}\n          >\n            {`Avg goals conceeded - ${props.conceeded}`}\n          </li>\n          <li\n            key=\"TeamPossession\"\n            className=\"TeamPossession\"\n            data-cy={props.name + \"teamPossession\"}\n          >\n            {`Avg possession - ${props.possession}%`}\n          </li>\n          <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name + \"teamXG\"}>\n            {`Avg XG - ${props.XG}`}\n          </li>\n          <li\n            key=\"TeamXGConceded\"\n            className=\"TeamXGConceded\"\n            data-cy={props.name + \"teamXGConceded\"}\n          >\n            {`Avg XG conceded - ${props.XGConceded}`}\n          </li>\n          <li\n            key=\"goalDifference\"\n            className=\"goalDifference\"\n            data-cy={props.name + \"goalDifference\"}\n          >\n            {`Goal difference : `}\n            <span>{props.goalDifference}</span>\n          </li>\n          <li\n            key=\"goalDifferenceHorA\"\n            className=\"goalDifferenceHorA\"\n            data-cy={props.name + \"goalDifference\"}\n          >\n            {`Goal difference ${props.homeOrAway} : ${props.goalDifferenceHomeOrAway}`}\n          </li>\n          <li\n            key=\"AverageSOT\"\n            className=\"AverageSOT\"\n            data-cy={props.name + \"averageSOT\"}\n          >\n            {`Avg shots on target - ${props.sot}`}\n          </li>\n          <li\n            key=\"DangerousAttacks\"\n            className=\"DangerousAttacks\"\n            data-cy={props.name + \"dangerousAttacks\"}\n          >\n            {`Avg dangerous attacks - ${props.dangerousAttacks}`}\n          </li>\n          <li\n            key=\"LeaguePosition\"\n            className=\"LeaguePosition\"\n            data-cy={props.name + \"leaguePosition\"}\n          >\n            {`League position - ${props.leaguePosition}`}\n          </li>\n\n          <li\n            key=\"LeaguePositionHomeOrAway\"\n            className=\"LeaguePositionHomeOrAway\"\n            data-cy={props.name + \"LeaguePositionHomeOrAway\"}\n          >\n            {`Position (${props.homeOrAway} only) - ${props.homeOrAwayLeaguePosition}`}\n          </li>\n          <li\n            key=\"WinPercentage\"\n            className=\"WinPercentage\"\n            data-cy={props.name + \"WinPercentage\"}\n          >\n            {`${props.homeOrAway} wins - ${props.winPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"DrawPercentage\"\n            className=\"DrawPercentage\"\n            data-cy={props.name + \"DrawPercentage\"}\n          >\n            {`${props.homeOrAway} draws - ${props.drawPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"LossPercentage\"\n            className=\"LossPercentage\"\n            data-cy={props.name + \"LossPercentage\"}\n          >\n            {`${props.homeOrAway} losses - ${props.lossPercentage.toFixed(1)}%`}\n          </li>\n          <li key=\"PPG\" className=\"PPG\" data-cy={props.name + \"PPG\"}>\n            {`Season PPG - ${props.ppg}`}\n          </li>\n          <li\n            key=\"FormTrend10a\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 10 PPG: ${props.formTrend[0]}`}\n          </li>\n          <li\n            key=\"FormTrend10b\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 6 PPG: ${props.formTrend[1]}`}\n          </li>\n          <li\n            key=\"FormTrend10c\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 5 PPG: ${props.formTrend[2]}.`}\n          </li>\n          <li\n            key=\"BttsPercentage\"\n            className=\"BttsPercentage\"\n            data-cy={props.name + \"BttsPercentage\"}\n          >\n            {`BTTS: ${props.BttsPercentage}%`}\n          </li>\n          <li\n            key=\"BttsPercentageHomeOrAway\"\n            className=\"BttsPercentageHomeOrAway\"\n            data-cy={props.name + \"BttsPercentageHomeOrAway\"}\n          >\n            {`BTTS ${props.homeOrAway}: ${props.BttsPercentageHomeOrAway}%`}\n          </li>\n          <li\n            key=\"CardsTotal\"\n            className=\"CardsTotal\"\n            data-cy={props.name + \"CardsTotal\"}\n          >\n            {`Cards total: ${props.CardsTotal}`}\n          </li>\n          <li\n            key=\"CornersAverage\"\n            className=\"CornersAverage\"\n            data-cy={props.name + \"CornersAverage\"}\n          >\n            {`Corners average: ${props.CornersAverage}`}\n          </li>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  } else {\n    return (\n      <Fragment>\n        <ul className={props.className} style={props.style}>\n          <li className=\"FormSummaryHome\">{props.FormTextString}</li>\n          <li\n            key=\"TeamScored\"\n            className=\"TeamScored\"\n            data-cy={props.name + \"teamScored\"}\n          >\n            {`Avg goals scored - ${props.goals}`}\n          </li>\n          <li\n            key=\"TeamConceeded\"\n            className=\"TeamConceeded\"\n            data-cy={props.name + \"teamConceded\"}\n          >\n            {`Avg goals conceeded - ${props.conceeded}`}\n          </li>\n          <li\n            key=\"TeamPossession\"\n            className=\"TeamPossession\"\n            data-cy={props.name + \"teamPossession\"}\n          >\n            {`Avg possession - ${props.possession}%`}\n          </li>\n          <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name + \"teamXG\"}>\n            {`Avg XG - ${props.XG}`}\n          </li>\n          <li\n            key=\"TeamXGConceded\"\n            className=\"TeamXGConceded\"\n            data-cy={props.name + \"teamXGConceded\"}\n          >\n            {`Avg XG conceded - ${props.XGConceded}`}\n          </li>\n          <li\n            key=\"AverageSOT\"\n            className=\"AverageSOT\"\n            data-cy={props.name + \"averageSOT\"}\n          >\n            {`Avg shots on target - ${props.sot}`}\n          </li>\n          <li\n            key=\"DangerousAttacks\"\n            className=\"DangerousAttacks\"\n            data-cy={props.name + \"dangerousAttacks\"}\n          >\n            {`Avg dangerous attacks - ${props.dangerousAttacks}`}\n          </li>\n          <li\n            key=\"LeaguePosition\"\n            className=\"LeaguePosition\"\n            data-cy={props.name + \"leaguePosition\"}\n          >\n            {`League position - ${props.leaguePosition}`}\n          </li>\n\n          <li\n            key=\"LeaguePositionHomeOrAway\"\n            className=\"LeaguePositionHomeOrAway\"\n            data-cy={props.name + \"LeaguePositionHomeOrAway\"}\n          >\n            {`Position (${props.homeOrAway} only) - ${props.homeOrAwayLeaguePosition}`}\n          </li>\n          <li\n            key=\"WinPercentage\"\n            className=\"WinPercentage\"\n            data-cy={props.name + \"WinPercentage\"}\n          >\n            {`${props.homeOrAway} wins - ${props.winPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"DrawPercentage\"\n            className=\"DrawPercentage\"\n            data-cy={props.name + \"DrawPercentage\"}\n          >\n            {`${props.homeOrAway} draws - ${props.drawPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"LossPercentage\"\n            className=\"LossPercentage\"\n            data-cy={props.name + \"LossPercentage\"}\n          >\n            {`${props.homeOrAway} losses - ${props.lossPercentage.toFixed(1)}%`}\n          </li>\n          <li key=\"PPG\" className=\"PPG\" data-cy={props.name + \"PPG\"}>\n            {`Season PPG - ${props.ppg}`}\n          </li>\n          <li\n            key=\"FormTrend10a\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 10 PPG: ${props.formTrend[0]}`}\n          </li>\n          <li\n            key=\"FormTrend10b\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 6 PPG: ${props.formTrend[1]}`}\n          </li>\n          <li\n            key=\"FormTrend10c\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 5 PPG: ${props.formTrend[2]}.`}\n          </li>\n          <li\n            key=\"CardsTotal\"\n            className=\"CardsTotal\"\n            data-cy={props.name + \"CardsTotal\"}\n          >\n            {`Cards total: ${props.CardsTotal}`}\n          </li>\n          <li\n            key=\"CornersAverage\"\n            className=\"CornersAverage\"\n            data-cy={props.name + \"CornersAverage\"}\n          >\n            {`Corners average: ${props.CornersAverage}`}\n          </li>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Stats;\n","import React from \"react\";\n\nfunction Div(props) {\n  return (\n    <div id={props.id} onClick={props.onClick} style={props.style} className={props.className}>{props.text}</div>\n  );\n}\n\nexport default Div;\n","export async function getForm(match) {\n  const teams = [match.homeId, match.awayId];\n  const fixtureForm = [];\n\n  for (let i = 0; i < teams.length; i++) {\n    const team = teams[i];\n\n    let response = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}formTeam/${team}`\n    );\n    await response.json().then((formData) => {\n      formData.lastMatchTimestamp = formData.last_updated_match_timestamp\n      fixtureForm[i] = formData;\n    });\n  }\n  return fixtureForm;\n}\n","import React, { Component, Fragment } from \"react\";\nimport { getNewTips } from \"../logic/getScorePredictions\"\nimport {allTips} from \"../logic/getScorePredictions\"\nexport var incrementValue = 3;\n\nexport var riskLevel = 10;\n\nclass Increment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      incrementValue,\n      riskLevel,\n      show: true,\n    };\n  }\n\n  IncrementItem = () => {\n    if(incrementValue > 1){\n    this.setState({ incrementValue: this.state.incrementValue - 1 });\n    this.setState({ riskLevel: this.state.riskLevel - 1 });\n    incrementValue = (this.state.incrementValue - 1);\n    riskLevel = this.state.riskLevel - 1;\n    }\n    getNewTips(allTips)\n  };\n  DecreaseItem = () => {\n    if(incrementValue > 0){\n      this.setState({ incrementValue: this.state.incrementValue + 1 });\n      this.setState({ riskLevel: this.state.riskLevel + 1 });\n      incrementValue = (this.state.incrementValue + 1);\n      riskLevel = this.state.riskLevel + 1;\n    }\n    getNewTips(allTips)\n  };\n\n  render() {\n    return (\n      <Fragment>\n          <button className=\"IncrementButton\" onClick={this.IncrementItem}>\n            -\n          </button>\n          <button className=\"DecrementButton\" onClick={this.DecreaseItem}>\n            +\n          </button>\n      </Fragment>\n\n    );\n  }\n}\n\nexport default Increment;\n","export async function getBTTSPotential(\n  match,\n  homeGoals,\n  awayGoals,\n  unroundedHomeGoals,\n  unroundedAwayGoals\n) {\n  const homeBTTS = match.bttsAllPercentageHome;\n  const homeOnlyBTTS = match.bttsPercentageHomeHome;\n  const awayOnlyBTTS = match.bttsPercentageAwayAway;\n  const awayBTTS = match.bttsAllPercentageAway;\n  const homeG = homeGoals;\n  const awayG = awayGoals;\n\n  match.combinedBTTS = (homeBTTS + awayBTTS) / 2;\n\n  if (\n    match.bttsFraction !== \"N/A\" &&\n    match.status !== \"suspended\" &&\n    match.status !== \"canceled\"\n  ) {\n    if (\n      match.combinedBTTS > 60 &&\n      homeBTTS > 45 &&\n      awayBTTS > 45 &&\n      homeOnlyBTTS > 40 &&\n      awayOnlyBTTS > 40 &&\n      match.awayOdds < 4 &&\n      match.awayOdds > 1.3 &&\n      homeG >= 1 &&\n      awayG >= 1 \n    ) {\n      match.btts = true;\n      match.bttsChosen = true;\n      match.totalGoals = match.rawFinalHomeGoals + match.rawFinalAwayGoals;\n    } else {\n      match.btts = false;\n      match.bttsChosen = false;\n    }\n  }\n  return match;\n}\n","import { getThemeProps } from \"@material-ui/styles\";\nimport SwiperCore, { EffectCoverflow, Pagination } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/swiper-bundle.min.css\";\nimport \"swiper/swiper.min.css\";\n\nSwiperCore.use([EffectCoverflow, Pagination]);\n\nexport const Slider = (props) => {\n  return (\n    <Swiper\n      effect={\"coverflow\"}\n      autoHeight={true}\n      grabCursor={true}\n      centeredSlides={true}\n      slidesPerView={1}\n      coverflowEffect={{\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: false,\n      }}\n      pagination={{ clickable: true }}\n      className=\"mySwiper\"\n    >\n      <SwiperSlide>\n       {props.element}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element2}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element3}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element4}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element5}\n      </SwiperSlide>\n    </Swiper>\n  );\n};\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { matches, diff } from \"./getFixtures\";\nimport { Fixture } from \"../components/Fixture\";\nimport { RenderAllFixtures } from \"../logic/getFixtures\";\nimport Div from \"../components/Div\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { allForm, dateStamp } from \"../logic/getFixtures\";\nimport Increment from \"../components/Increment\";\nimport { incrementValue } from \"../components/Increment\";\nimport { getBTTSPotential } from \"../logic/getBTTSPotential\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport { Slider } from \"../components/Carousel\";\nimport { StyledKofiButton } from \"../components/KofiButton\";\nimport {\n  calculateAttackingStrength,\n  calculateDefensiveStrength,\n  calculateMetricStrength,\n  getXGtoActualDifferentialStrength,\n} from \"./getStats\";\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nlet finalHomeGoals;\nlet finalAwayGoals;\nlet rawFinalHomeGoals;\nlet rawFinalAwayGoals;\nlet homeOdds;\nlet awayOdds;\nlet totalGoals = 0;\nlet totalGoals2 = 0;\nlet numberOfGames = 0;\nlet drawPredictions = 0;\nlet homePredictions = 0;\nlet awayPredictions = 0;\nlet allOutcomes = 0;\nlet homeOutcomes = 0;\nlet awayOutcomes = 0;\nlet winAmount = 0;\nlet lossAmount = 0;\nlet sumStatDAWin = 0;\nlet sumStatDALoss = 0;\nlet sumStatPossessionWin = 0;\nlet sumStatPossessionLoss = 0;\nlet sumStatSOTWin = 0;\nlet sumStatSOTLoss = 0;\nlet sumStatPPGLast10Win = 0;\nlet sumStatPPGLast10Loss = 0;\nlet sumOddsWin = 0;\nlet sumOddsLoss = 0;\nlet sumXGForWin = 0;\nlet sumXGForLoss = 0;\nlet sumXGAgainstWin = 0;\nlet sumXGAgainstLoss = 0;\nlet allWinOutcomes = 0;\nlet allLossOutcomes = 0;\nlet allDrawOutcomes = 0;\nlet totalROI = 0;\nlet totalInvestment = 0;\nlet totalProfit = 0;\nlet userTips = [];\nexport let formObjectHome;\nexport let formObjectAway;\nexport let clicked = false;\n\nexport var renderPredictions;\n\nasync function convertTimestamp(timestamp) {\n  let newDate = new Date(timestamp * 1000);\n  let [day, month, year] = newDate.toLocaleDateString(\"en-US\").split(\"/\");\n\n  let converted = `${year}-${day}-${month}`;\n\n  return converted;\n}\n\nexport function getPointsFromLastX(lastX) {\n  let points = 0;\n  let pointsAddition;\n\n  try {\n    lastX.forEach((game) => {\n      switch (true) {\n        case game === \"W\":\n          pointsAddition = 3;\n          break;\n        case game === \"D\":\n          pointsAddition = 1;\n          break;\n        case game === \"L\":\n          pointsAddition = 0;\n          break;\n        default:\n          break;\n      }\n\n      points = points + pointsAddition;\n    });\n    return points;\n  } catch (error) {\n    console.log(error);\n    return \"N/A\";\n  }\n}\n\nasync function getPastLeagueResults(team, game, hOrA, form) {\n  let date = game.date;\n  if (allLeagueResultsArrayOfObjects[game.leagueIndex].fixtures.length > 35) {\n    let teamsHomeResults = allLeagueResultsArrayOfObjects[\n      game.leagueIndex\n    ].fixtures.filter((fixture) => fixture.home_name === team);\n\n    teamsHomeResults = teamsHomeResults\n      .filter(function (item) {\n        return item.date_unix < date;\n      })\n      .sort((a, b) => a.date_unix - b.date_unix);\n\n    let teamsAwayResults = allLeagueResultsArrayOfObjects[\n      game.leagueIndex\n    ].fixtures.filter((fixture) => fixture.away_name === team);\n\n    teamsAwayResults = teamsAwayResults\n      .filter(function (item) {\n        return item.date_unix < date;\n      })\n      .sort((a, b) => a.date_unix - b.date_unix);\n\n    let homeResults = [];\n    let awayResults = [];\n    let oddsSumHome = 0;\n    let oddsSumAway = 0;\n    for (let index = 0; index < teamsHomeResults.length; index++) {\n      const resultedGame = teamsHomeResults[index];\n\n      homeResults.push({\n        homeTeam: resultedGame.home_name,\n        homeGoals: resultedGame.homeGoalCount,\n        XG: resultedGame.team_a_xg,\n        awayTeam: resultedGame.away_name,\n        awayGoals: resultedGame.awayGoalCount,\n        XGAgainst: resultedGame.team_b_xg,\n        possession: resultedGame.team_a_possession,\n        scored: resultedGame.homeGoalCount,\n        conceeded: resultedGame.awayGoalCount,\n        shots: resultedGame.team_a_shots,\n        sot: resultedGame.team_a_shotsOnTarget,\n        dangerousAttacks: resultedGame.team_a_dangerous_attacks,\n        corners: resultedGame.team_a_corners,\n        date: await convertTimestamp(resultedGame.date_unix),\n        dateRaw: resultedGame.date_unix,\n        oddsHome: resultedGame.odds_ft_1,\n        oddsAway: resultedGame.odds_ft_2,\n        btts:\n          resultedGame.homeGoalCount > 0 && resultedGame.awayGoalCount > 0\n            ? true\n            : false,\n      });\n      oddsSumHome = oddsSumHome + resultedGame.odds_ft_1;\n    }\n    for (let index = 0; index < teamsAwayResults.length; index++) {\n      const resultedGame = teamsAwayResults[index];\n      awayResults.push({\n        homeTeam: resultedGame.home_name,\n        homeGoals: resultedGame.homeGoalCount,\n        XG: resultedGame.team_b_xg,\n        awayTeam: resultedGame.away_name,\n        awayGoals: resultedGame.awayGoalCount,\n        XGAgainst: resultedGame.team_a_xg,\n        possession: resultedGame.team_b_possession,\n        scored: resultedGame.awayGoalCount,\n        conceeded: resultedGame.homeGoalCount,\n        shots: resultedGame.team_b_shots,\n        sot: resultedGame.team_b_shotsOnTarget,\n        dangerousAttacks: resultedGame.team_b_dangerous_attacks,\n        corners: resultedGame.team_b_corners,\n        date: await convertTimestamp(resultedGame.date_unix),\n        dateRaw: resultedGame.date_unix,\n        oddsHome: resultedGame.odds_ft_1,\n        oddsAway: resultedGame.odds_ft_2,\n        btts:\n          resultedGame.homeGoalCount > 0 && resultedGame.awayGoalCount > 0\n            ? true\n            : false,\n      });\n      oddsSumAway = oddsSumAway + resultedGame.odds_ft_2;\n    }\n\n    let reversedResultsHome = homeResults;\n    let reversedResultsAway = awayResults;\n\n    const allTeamResults = reversedResultsHome\n      .concat(reversedResultsAway)\n      .sort((a, b) => a.dateRaw - b.dateRaw);\n\n    form.allTeamResults = allTeamResults.sort((b, a) => a.dateRaw - b.dateRaw);\n\n    const averageOddsHome = oddsSumHome / teamsHomeResults.length;\n    const averageOddsAway = oddsSumAway / teamsAwayResults.length;\n\n    const teamGoalsHome = reversedResultsHome.map((res) => res.scored);\n\n    const teamGoalsAway = reversedResultsAway.map((res) => res.scored);\n    const teamGoalsAll = allTeamResults.map((res) => res.scored);\n\n    const teamConceededHome = reversedResultsHome.map((res) => res.conceeded);\n    const teamConceededAway = reversedResultsAway.map((res) => res.conceeded);\n    const teamConceededAll = allTeamResults.map((res) => res.conceeded);\n\n    const teamXGForAll = allTeamResults.map((res) => res.XG);\n    const teamXGAgainstAll = allTeamResults.map((res) => res.XGAgainst);\n    const XGSum = teamXGForAll.reduce((a, b) => a + b, 0);\n    const avgXGScored = XGSum / teamXGForAll.length || 0;\n    const XGAgainstSum = teamXGAgainstAll.reduce((a, b) => a + b, 0);\n    const avgXGConceeded = XGAgainstSum / teamXGAgainstAll.length || 0;\n\n    const possession = allTeamResults.map((res) => res.possession);\n    const possessionSum = possession.reduce((a, b) => a + b, 0);\n    const avgPossession = possessionSum / possession.length || 0;\n\n    const dangerousAttacks = allTeamResults.map((res) => res.dangerousAttacks);\n    const dangerousAttacksSum = dangerousAttacks.reduce((a, b) => a + b, 0);\n    const avgDangerousAttacks =\n      dangerousAttacksSum / dangerousAttacks.length || 0;\n\n    const shots = allTeamResults.map((res) => res.shots);\n    const shotsSum = shots.reduce((a, b) => a + b, 0);\n    const avgShots = shotsSum / shots.length || 0;\n\n    const shotsOnTarget = allTeamResults.map((res) => res.sot);\n    const shotsOnTargetSum = shotsOnTarget.reduce((a, b) => a + b, 0);\n    const avgShotsOnTarget = shotsOnTargetSum / shotsOnTarget.length || 0;\n\n    const corners = allTeamResults.map((res) => res.corners);\n    const cornersSum = corners.reduce((a, b) => a + b, 0);\n    const cornersAv = cornersSum / corners.length || 0;\n\n    const last5XG = teamXGForAll.slice(4);\n    const last5XGSum = last5XG.reduce((a, b) => a + b, 0);\n    const last5XGAvgFor = last5XGSum / last5XG.length || 0;\n\n    const last5XGAgainst = teamXGAgainstAll.slice(4);\n    const last5XGAgainstSum = last5XGAgainst.reduce((a, b) => a + b, 0);\n    const last5XGAvgAgainst = last5XGAgainstSum / last5XGAgainst.length || 0;\n\n    form.XGOverall = parseFloat(avgXGScored.toFixed(2));\n    form.XGlast5 = parseFloat(last5XGAvgFor.toFixed(2));\n\n    form.XGAgainstAvgOverall = parseFloat(avgXGConceeded.toFixed(2));\n    form.XGAgainstlast5 = parseFloat(last5XGAvgAgainst.toFixed(2));\n\n    form.AveragePossessionOverall = parseFloat(avgPossession.toFixed(1));\n    form.AverageDangerousAttacksOverall = parseFloat(\n      avgDangerousAttacks.toFixed(1)\n    );\n    form[\"Average Shots\"] = parseFloat(avgShots.toFixed(1));\n    form.AverageCorners = parseFloat(cornersAv.toFixed(1));\n    form.AverageShotsOnTargetOverall = parseFloat(avgShotsOnTarget.toFixed(1));\n    const alpha = 0.5;\n    const beta = 0.25;\n\n    let forAndAgainstRollingAv;\n    let forAndAgainstRollingAvHomeOrAway;\n    if (hOrA === \"home\") {\n      form.allGoalsArrayHome = teamGoalsAll;\n      form.allConceededArrayHome = teamConceededAll;\n      const sum = teamGoalsHome.reduce((a, b) => a + b, 0);\n      const sumTwo = teamConceededHome.reduce((a, b) => a + b, 0);\n      form.goalDifferenceHomeOrAway = sum - sumTwo;\n      forAndAgainstRollingAv = await predictGoalsWithExponentialSmoothing(\n        teamGoalsAll,\n        teamConceededAll,\n        alpha\n      );\n      forAndAgainstRollingAvHomeOrAway =\n        await predictGoalsWithExponentialSmoothing(\n          teamGoalsHome,\n          teamConceededHome,\n          beta\n        );\n    } else if (hOrA === \"away\") {\n      form.allGoalsArrayAway = teamGoalsAll;\n      form.allConceededArrayAway = teamConceededAll;\n      const sum = teamGoalsAway.reduce((a, b) => a + b, 0);\n      const sumTwo = teamConceededAway.reduce((a, b) => a + b, 0);\n      form.goalDifferenceHomeOrAway = sum - sumTwo;\n      forAndAgainstRollingAv = await predictGoalsWithExponentialSmoothing(\n        teamGoalsAll,\n        teamConceededAll,\n        alpha\n      );\n      forAndAgainstRollingAvHomeOrAway =\n        await predictGoalsWithExponentialSmoothing(\n          teamGoalsAway,\n          teamConceededAway,\n          beta\n        );\n    }\n\n    let bttsHome = reversedResultsHome.map((res) => res.btts);\n    if (bttsHome.length > 10) {\n      bttsHome = bttsHome.slice(-10);\n    }\n\n    let bttsAway = reversedResultsAway.map((res) => res.btts);\n    if (bttsAway.length > 10) {\n      bttsAway = bttsAway.slice(-10);\n    }\n\n    let bttsAll = allTeamResults.map((res) => res.btts);\n    if (bttsAll.length > 10) {\n      bttsAll = bttsAll.slice(-10);\n    }\n\n    const bttsHomeCount = bttsHome.filter((btts) => btts === true);\n    const bttsHomeString = `${bttsHomeCount.length}/${bttsHome.length}`;\n    const bttsHomePercentage = (\n      (bttsHomeCount.length / bttsHome.length) *\n      100\n    ).toFixed(0);\n    const bttsAwayCount = bttsAway.filter((btts) => btts === true);\n    const bttsAwayString = `${bttsAwayCount.length}/${bttsAway.length}`;\n    const bttsAwayPercentage = (\n      (bttsAwayCount.length / bttsAway.length) *\n      100\n    ).toFixed(0);\n    const bttsAllCount = bttsAll.filter((btts) => btts === true);\n    const bttsAllString = `${bttsAllCount.length}/${bttsAll.length}`;\n    const bttsAllPercentage = (\n      (bttsAllCount.length / bttsAll.length) *\n      100\n    ).toFixed(0);\n\n    let r = 6;\n    let x = 4;\n\n    const teamGoalsHomeRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsHome,\n      teamGoalsHome.length < x ? teamGoalsHome.length : x\n    );\n\n    const teamGoalsAwayRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsAway,\n      teamGoalsAway.length < x ? teamGoalsAway.length : x\n    );\n\n    const teamGoalsAllRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsAll,\n      teamGoalsAll.length < r ? teamGoalsAll.length : r\n    );\n\n    const teamConceededHomeRollingAverage =\n      await predictNextWeightedMovingAverage(\n        teamConceededHome,\n        teamConceededHome.length < x ? teamConceededHome.length : x\n      );\n\n    const teamConceededAwayRollingAverage =\n      await predictNextWeightedMovingAverage(\n        teamConceededAway,\n        teamConceededAway.length < x ? teamConceededAway.length : x\n      );\n\n    const teamGoalsConceededAllRollingAverage =\n      await predictNextWeightedMovingAverage(\n        teamConceededAll,\n        teamConceededAll.length < r ? teamConceededAll.length : r\n      );\n\n    const sum = teamGoalsAll.reduce((a, b) => a + b, 0);\n    const avgScored = sum / teamGoalsAll.length || 0;\n\n    const last5 = teamGoalsAll.slice(4);\n    const last5Sum = last5.reduce((a, b) => a + b, 0);\n    const last5AvgScored = last5Sum / last5.length || 0;\n    const last10 = teamGoalsAll.slice(9);\n    const last10Sum = last10.reduce((a, b) => a + b, 0);\n    const last10AvgScored = last10Sum / last10.length || 0;\n    form.last5Goals = parseFloat(last5AvgScored.toFixed(2));\n    form.last10Goals = parseFloat(last10AvgScored.toFixed(2));\n\n    const sumTwo = teamConceededAll.reduce((a, b) => a + b, 0);\n    const avgConceeded = sumTwo / teamConceededAll.length || 0;\n\n    form.goalDifference = sum - sumTwo;\n\n    // console.log(teamGoalsHomeRollingAverage)\n    // console.log(teamGoalsAwayRollingAverage)\n    // console.log(teamGoalsAllRollingAverage)\n    // console.log(teamConceededHomeRollingAverage)\n    // console.log(teamConceededAwayRollingAverage)\n    // console.log(teamGoalsConceededAllRollingAverage)\n    // console.log(averageOddsHome)\n    // console.log(averageOddsAway)\n    // console.log(avgScored)\n    // console.log(avgConceeded)\n    // console.log(bttsAllString)\n    // console.log(bttsHomeString)\n    // console.log(bttsAwayString)\n    // console.log(bttsAllPercentage)\n    // console.log(bttsHomePercentage)\n    // console.log(bttsAwayPercentage)\n    // console.log(forAndAgainstRollingAvHomeOrAway)\n    // console.log(forAndAgainstRollingAv)\n\n    return [\n      teamGoalsHomeRollingAverage,\n      teamGoalsAwayRollingAverage,\n      teamGoalsAllRollingAverage,\n      teamConceededHomeRollingAverage,\n      teamConceededAwayRollingAverage,\n      teamGoalsConceededAllRollingAverage,\n      averageOddsHome,\n      averageOddsAway,\n      avgScored,\n      avgConceeded,\n      bttsAllString,\n      bttsHomeString,\n      bttsAwayString,\n      bttsAllPercentage,\n      bttsHomePercentage,\n      bttsAwayPercentage,\n      forAndAgainstRollingAvHomeOrAway,\n      forAndAgainstRollingAv,\n    ];\n  } else {\n    return null;\n  }\n}\n\nvar getEMA = (a, r) =>\n  a.reduce(\n    (p, n, i) =>\n      i\n        ? p.concat((2 * n) / (r + 1) + (p[p.length - 1] * (r - 1)) / (r + 1))\n        : p,\n    [a[0]]\n  );\n\nasync function predictNextWeightedMovingAverage(numbers, windowSize) {\n  const startIndex = numbers.length - windowSize;\n  const window = numbers.slice(startIndex);\n  const weights = Array.from(\n    { length: windowSize },\n    (_, i) => (i + 1) / ((windowSize * (windowSize + 1)) / 2)\n  );\n  const sum = window.reduce((acc, num, i) => acc + num * weights[i], 0);\n  const movingAverage = sum / weights.reduce((acc, w) => acc + w, 0);\n  return parseFloat(movingAverage.toFixed(2));\n}\n\n// Function to calculate the weighted average using exponential smoothing\nasync function calculateWeightedAverage(arr, alpha) {\n  let weightedSum = 0;\n  let totalWeight = 0;\n\n  for (let i = arr.length - 1; i >= 0; i--) {\n    const weight = Math.pow(1 - alpha, arr.length - 1 - i);\n    weightedSum += arr[i] * weight;\n    totalWeight += weight;\n  }\n\n  return weightedSum / totalWeight;\n}\n\n// Function to predict goals scored and conceded for a team with exponential smoothing\nasync function predictGoalsWithExponentialSmoothing(\n  teamGoalsFor,\n  teamGoalsAgainst,\n  alpha\n) {\n  const lambdaFor = await calculateWeightedAverage(teamGoalsFor, alpha);\n  const lambdaAgainst = await calculateWeightedAverage(teamGoalsAgainst, alpha);\n\n  // You can fine-tune these values based on your model and data\n  const predictedGoalsFor = lambdaFor;\n  const predictedGoalsAgainst = lambdaAgainst;\n\n  return {\n    goalsFor: predictedGoalsFor,\n    goalsAgainst: predictedGoalsAgainst,\n  };\n}\n\nexport async function compareStat(statOne, statTwo) {\n  let stat1 = parseFloat(statOne);\n  let stat2 = parseFloat(statTwo);\n  let statDiff;\n  // console.log( await normalizeValues(12, 2, 0, 1))\n  // console.log(await diff(1.8571428571428571, 1.14285714285714285))\n\n  if (statOne !== 0 && statTwo !== 0) {\n    const { normalizedValue1, normalizedValue2 } = await normalizeValues(\n      stat1,\n      stat2,\n      0,\n      1\n    );\n\n    const finalValue1 = normalizedValue1 + 1;\n    const finalValue2 = normalizedValue2 + 1;\n\n    statDiff = await diff(finalValue1, finalValue2);\n  } else {\n    statDiff = 0;\n  }\n\n  return statDiff;\n}\n\nexport async function getClinicalRating(form) {\n  let rating;\n  let score;\n  switch (true) {\n    case form.dangerousAttackConversion <= 15:\n      rating = \"excellent\";\n      score = 0.8;\n      break;\n\n    case form.dangerousAttackConversion > 15 &&\n      form.dangerousAttackConversion <= 20:\n      rating = \"great\";\n      score = 0.9;\n      break;\n\n    case form.dangerousAttackConversion > 20 &&\n      form.dangerousAttackConversion <= 25:\n      rating = \"very good\";\n      score = 0.95;\n      break;\n\n    case form.dangerousAttackConversion > 25 &&\n      form.dangerousAttackConversion <= 32.5:\n      rating = \"good\";\n      score = 0.98;\n      break;\n\n    case form.dangerousAttackConversion > 30 &&\n      form.dangerousAttackConversion <= 35:\n      rating = \"above average\";\n      score = 0.99;\n      break;\n\n    case form.dangerousAttackConversion > 35 &&\n      form.dangerousAttackConversion <= 40:\n      rating = \"average\";\n      score = 1;\n      break;\n\n    case form.dangerousAttackConversion > 40 &&\n      form.dangerousAttackConversion <= 45:\n      rating = \"below average\";\n      score = 1.01;\n      break;\n\n    case form.dangerousAttackConversion > 45 &&\n      form.dangerousAttackConversion <= 50:\n      rating = \"poor\";\n      score = 1.05;\n      break;\n\n    case form.dangerousAttackConversion > 50 &&\n      form.dangerousAttackConversion <= 55:\n      rating = \"very poor\";\n      score = 1.1;\n      break;\n\n    case form.dangerousAttackConversion > 55 &&\n      form.dangerousAttackConversion <= 60:\n      rating = \"terrible\";\n      score = 1.2;\n      break;\n\n    case form.dangerousAttackConversion > 60:\n      rating = \"awful\";\n      score = 1.3;\n      break;\n\n    default:\n      break;\n  }\n\n  return [rating, score];\n}\n\nexport async function getPointsDifferential(pointsHomeAvg, pointsAwayAvg) {\n  const differential = await diff(pointsHomeAvg, pointsAwayAvg);\n  return parseFloat(differential);\n}\n\nexport async function getPointWeighting(pointsDiff) {\n  let pointsDiffWeightingHome;\n  let pointsDiffWeightingAway;\n\n  switch (true) {\n    case pointsDiff >= 2.5:\n      pointsDiffWeightingHome = 0.3;\n      pointsDiffWeightingAway = -0.3;\n      break;\n    case pointsDiff >= 2 && pointsDiff < 2.5:\n      pointsDiffWeightingHome = 0.2;\n      pointsDiffWeightingAway = -0.2;\n      break;\n    case pointsDiff >= 1.5 && pointsDiff < 2:\n      pointsDiffWeightingHome = 0.15;\n      pointsDiffWeightingAway = -0.15;\n      break;\n    case pointsDiff >= 1 && pointsDiff < 1.5:\n      pointsDiffWeightingHome = 0.1;\n      pointsDiffWeightingAway = -0.1;\n      break;\n    case pointsDiff >= 0.5 && pointsDiff < 1:\n      pointsDiffWeightingHome = 0.05;\n      pointsDiffWeightingAway = -0.05;\n      break;\n    case pointsDiff > -0.5 && pointsDiff < 0.5:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n      break;\n    case pointsDiff <= -0.5 && pointsDiff > -1:\n      pointsDiffWeightingHome = -0.05;\n      pointsDiffWeightingAway = 0.05;\n      break;\n    case pointsDiff <= -1 && pointsDiff > -1.5:\n      pointsDiffWeightingHome = -0.1;\n      pointsDiffWeightingAway = 0.1;\n      break;\n    case pointsDiff <= -1.5 && pointsDiff > -2:\n      pointsDiffWeightingHome = -0.15;\n      pointsDiffWeightingAway = 0.15;\n      break;\n    case pointsDiff <= -2 && pointsDiff > -2.5:\n      pointsDiffWeightingHome = -0.2;\n      pointsDiffWeightingAway = 0.2;\n      break;\n    case pointsDiff <= -2.5:\n      pointsDiffWeightingHome = -0.3;\n      pointsDiffWeightingAway = 0.3;\n      break;\n    default:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n  }\n  return [pointsDiffWeightingHome, pointsDiffWeightingAway];\n}\n\nexport async function compareFormTrend(recentForm, distantForm) {\n  let score;\n  let scoreTotal = 0;\n\n  for (let index = 0; index < recentForm.length; index++) {\n    const recent = recentForm[index];\n    const distant = distantForm[index];\n\n    if (recent > distant) {\n      score = 1.05;\n    } else if (recent === distant) {\n      score = 1;\n    } else if (recent < distant) {\n      score = 0.95;\n    }\n    scoreTotal = scoreTotal + score / recentForm.length;\n  }\n\n  return scoreTotal;\n}\n\nexport async function getPointAverage(pointTotal, games) {\n  return pointTotal / games;\n}\n\nasync function getOddsMultiplier(odds, team) {\n  let multiplier;\n  switch (true) {\n    case odds <= 1.2:\n      multiplier = 1.4;\n      break;\n    case odds <= 1.4:\n      multiplier = 1.3;\n      break;\n    case odds <= 1.6:\n      multiplier = 1.2;\n      break;\n    case odds <= 1.8:\n      multiplier = 1.1;\n      break;\n    case odds < 2:\n      multiplier = 1.05;\n      break;\n\n    // case odds <= 3.5 && odds > 3:\n    //   multiplier = 0.975;\n    //   break;\n    // case odds > 3.5 && odds <= 4:\n    //   multiplier = 0.95;\n    //   break;\n    // case odds > 4 && odds <= 4.5:\n    //   multiplier = 0.9;\n    //   break;\n    // case odds > 4.5 && odds <= 5:\n    //   multiplier = 0.8;\n    //   break;\n    //   case odds > 5:\n    //     multiplier = 0.7;\n    //     break;\n    default:\n      multiplier = 1;\n      break;\n  }\n\n  return multiplier;\n}\n\nasync function poissonDistribution(lambda, k) {\n  const numerator = Math.exp(-lambda) * Math.pow(lambda, k);\n  const denominator = factorial(k);\n  return numerator / denominator;\n}\n\nfunction factorial(n) {\n  if (n === 0 || n === 1) {\n    return 1;\n  }\n  let result = 1;\n  for (let i = 2; i <= n; i++) {\n    result *= i;\n  }\n  return result;\n}\n\nasync function calculateAverageGoals(goalsFor) {\n  console.log(goalsFor);\n  const totalGoals = goalsFor.reduce((sum, goals) => sum + goals, 0);\n  console.log(totalGoals);\n  return totalGoals / goalsFor.length;\n}\n\nasync function adjustGoalsAvg(goalsAvg, strengthRatio) {\n  console.log(strengthRatio)\n  return goalsAvg\n   * strengthRatio;\n}\n\nasync function predictScore(\n  goalsForTeam1,\n  goalsAgainstTeam1,\n  goalsForTeam2,\n  goalsAgainstTeam2,\n  team1Metrics,\n  team2Metrics,\n  game\n) {\n  let team1AverageGoalsFor = await calculateAverageGoals(goalsForTeam1);\n  let team1AverageGoalsAgainst = await calculateAverageGoals(goalsAgainstTeam1);\n  let team2AverageGoalsFor = await calculateAverageGoals(goalsForTeam2);\n  let team2AverageGoalsAgainst = await calculateAverageGoals(goalsAgainstTeam2);\n\n  let team1StrengthRatio = team1Metrics.weighting / 1.75;\n  let team2StrengthRatio = team2Metrics.weighting / 1.75;\n\n  let adjustedTeam1AverageGoals = await adjustGoalsAvg(\n    team1AverageGoalsFor,\n    team1StrengthRatio\n  );\n  let adjustedTeam2AverageGoals = await adjustGoalsAvg(\n    team2AverageGoalsFor,\n    team2StrengthRatio\n  );\n\n  let adjustedTeam1AverageGoalsAgainst = await adjustGoalsAvg(\n    team1AverageGoalsAgainst,\n    team2StrengthRatio\n  );\n  let adjustedTeam2AverageGoalsAgainst = await adjustGoalsAvg(\n    team2AverageGoalsAgainst,\n    team1StrengthRatio\n  );\n\n  let maxGoals = 5; // Set the maximum number of goals to predict\n\n  const scores = [];\n\n  for (let i = 0; i <= maxGoals; i++) {\n    for (let j = 0; j <= maxGoals; j++) {\n      let team1GoalExpectation =\n        (adjustedTeam1AverageGoals + adjustedTeam2AverageGoalsAgainst) / 2;\n      // (adjustedTeam2AverageGoalsAgainst / adjustedTeam1AverageGoalsAgainst);\n      let team2GoalExpectation =\n        (adjustedTeam2AverageGoals + adjustedTeam1AverageGoalsAgainst) / 2;\n      // (adjustedTeam1AverageGoalsAgainst / adjustedTeam2AverageGoalsAgainst);\n\n      if (!isFinite(team1GoalExpectation)) {\n        team1GoalExpectation = 0;\n      }\n\n      if (!isFinite(team2GoalExpectation)) {\n        team2GoalExpectation = 0;\n      }\n\n      const probability =\n        (await poissonDistribution(team1GoalExpectation, i)) *\n        (await poissonDistribution(team2GoalExpectation, j));\n      scores.push({\n        team1Score: i,\n        team2Score: j,\n        probability,\n      });\n    }\n  }\n\n  scores.sort((a, b) => b.probability - a.probability); // Sort scores in descending order by probability\n  const top5Scores = scores.slice(0, 5); // Get the top 5 scores\n\n  for (const score of top5Scores) {\n    console.log(\n      `Team 1: ${score.team1Score} - Team 2: ${score.team2Score} (${(\n        score.probability * 100\n      ).toFixed(2)}%)`\n    );\n  }\n  return top5Scores;\n}\n\nasync function normalizeValues(value1, value2, minRange, maxRange) {\n  if (\n    typeof value1 !== \"number\" ||\n    typeof value2 !== \"number\" ||\n    typeof minRange !== \"number\" ||\n    typeof maxRange !== \"number\"\n  ) {\n    throw new Error(\"All arguments must be numbers.\");\n  }\n\n  // Calculate the absolute values of the inputs\n\n  const absValue1 = Math.abs(value1);\n  const absValue2 = Math.abs(value2);\n\n  // Calculate the total sum of the absolute values\n  const totalAbs = absValue1 + absValue2;\n\n  // Calculate the normalized values based on the ratio of absolute values\n  const normalizedAbsValue1 =\n    (absValue1 / totalAbs) * (maxRange - minRange) + minRange;\n  const normalizedAbsValue2 =\n    (absValue2 / totalAbs) * (maxRange - minRange) + minRange;\n\n  // Adjust the signs of the normalized values based on the original values\n  const normalizedValue1 =\n    value1 >= 0 ? normalizedAbsValue1 : -normalizedAbsValue1;\n  const normalizedValue2 =\n    value2 >= 0 ? normalizedAbsValue2 : -normalizedAbsValue2;\n\n  return { normalizedValue1, normalizedValue2 };\n}\n\nexport async function compareTeams(homeForm, awayForm, match) {\n  let homeAttackStrength = homeForm.attackingStrength;\n  let homeDefenceStrength = homeForm.defensiveStrength;\n  let homePossessionStrength = homeForm.possessionStrength;\n  let awayAttackStrength = awayForm.attackingStrength;\n  let awayDefenceStrength = awayForm.defensiveStrength;\n  let awayPossessionStrength = awayForm.possessionStrength;\n\n  let homeXGtoActualDiffStrength = await getXGtoActualDifferentialStrength(\n    parseFloat(homeForm.actualToXGDifference)\n  );\n\n  let awayXGtoActualDiffStrength = await getXGtoActualDifferentialStrength(\n    parseFloat(awayForm.actualToXGDifference)\n  );\n\n  const attackStrengthComparison = await compareStat(\n    homeAttackStrength,\n    awayAttackStrength\n  );\n\n  const defenceStrengthComparison = await compareStat(\n    homeDefenceStrength,\n    awayDefenceStrength\n  );\n\n  const possessiontrengthComparison = await compareStat(\n    homePossessionStrength,\n    awayPossessionStrength\n  );\n\n  const xgActualComparison = await compareStat(\n    homeXGtoActualDiffStrength,\n    awayXGtoActualDiffStrength\n  );\n\n  const xgForComparison = await compareStat(\n    homeForm.xgForStrength,\n    awayForm.xgForStrength\n  );\n\n  const xgAgainstComparison = await compareStat(\n    homeForm.xgAgainstStrength,\n    awayForm.xgAgainstStrength\n  );\n\n  const homeAwayPointAverageComparison = await compareStat(\n    homeForm.homeOrAwayAverage,\n    awayForm.homeOrAwayAverage\n  );\n\n  const fiveGameComparison = await compareStat(\n    homeForm.last5Points,\n    awayForm.last5Points\n  );\n\n  const oddsComparison = await compareStat(match.awayOdds, match.homeOdds);\n\n  const homeAdvantage = await compareStat(\n    parseFloat(homeForm.homeAttackAdvantage) / 2,\n    1\n  );\n\n  const dangerousAttacksWithConverstionComparison = await compareStat(\n    homeForm.AverageDangerousAttacksOverall *\n      homeForm.dangerousAttackConversion,\n    awayForm.AverageDangerousAttacksOverall * awayForm.dangerousAttackConversion\n  );\n\n  const goalDiffHomeOrAwayComparison = await compareStat(\n    homeForm.goalDifferenceHomeOrAway,\n    awayForm.goalDifferenceHomeOrAway\n  );\n\n  const overallDirectnessComparison = await compareStat(\n    homeForm.directnessOverallStrength,\n    awayForm.directnessOverallStrength\n  );\n\n  const hOrADirectnessComparison = await compareStat(\n    homeForm.directnessHome,\n    awayForm.directnessAway\n  );\n\n  const accuracyComparison = await compareStat(\n    homeForm.accuracyOverallStrength,\n    awayForm.accuracyOverallStrength\n  );\n\n  let oddsWeighting;\n\n  if (match.game_week > 0 && match.game_week < 4) {\n    oddsWeighting = 1;\n  } else {\n    oddsWeighting = 1;\n  }\n\n  let calculation =\n    attackStrengthComparison * 1 +\n    defenceStrengthComparison * 1 +\n    possessiontrengthComparison * 1 +\n    // xgToActualDiffComparison * 1 +\n    // xgForStrengthRecentComparison * 1 +\n    // xgAgainstStrengthRecentComparison * 1 +\n    homeAwayPointAverageComparison * 1 +\n    goalDiffHomeOrAwayComparison * 2 +\n    xgActualComparison * 1 +\n    xgForComparison * 1 +\n    xgAgainstComparison * 1 +\n    oddsComparison * oddsWeighting +\n    dangerousAttacksWithConverstionComparison * 0.1 +\n    homeAdvantage * 0 +\n    fiveGameComparison * 1 +\n    overallDirectnessComparison * 1 +\n    hOrADirectnessComparison * 1 +\n    accuracyComparison * 1;\n\n  let homeWinOutcomeProbability =\n    match.homeTeamWinPercentage + match.awayTeamLossPercentage;\n  let awayWinOutcomeProbability =\n    match.homeTeamLossPercentage + match.awayTeamWinPercentage;\n  let drawOutcomeProbability =\n    match.homeTeamDrawPercentage + match.awayTeamDrawPercentage;\n\n  if (\n    drawOutcomeProbability > homeWinOutcomeProbability &&\n    drawOutcomeProbability > awayWinOutcomeProbability\n  ) {\n    switch (true) {\n      case drawOutcomeProbability > 100:\n        calculation = calculation / 1.5;\n        break;\n      default:\n        calculation = calculation * 1;\n        break;\n    }\n  } else {\n    calculation = calculation * 1;\n  }\n\n  if (calculation > 0) {\n    if (\n      homeForm.lastGame === \"L\" ||\n      homeForm.last2Points < 2 ||\n      awayForm.last2Points >= 5 ||\n      match.XGdifferentialValueRaw < 0\n    ) {\n      calculation = calculation / 4;\n    }\n  } else if (calculation < 0) {\n    if (\n      awayForm.lastGame === \"L\" ||\n      awayForm.last2Points < 2 ||\n      homeForm.last2Points >= 5 ||\n      match.XGdifferentialValueRaw > 0\n    ) {\n      calculation = calculation / 4;\n    }\n  }\n\n  if (homeForm.averageOddsHome !== null || awayForm.averageOddsAway !== null) {\n    if (calculation > 0 && homeForm.averageOddsHome < match.homeOdds && awayForm.averageOddsAway > match.awayOdds) {\n      calculation = calculation / 1.25;\n    } else if (\n      calculation > 0 &&\n      homeForm.averageOddsHome > match.homeOdds && awayForm.averageOddsAway < match.awayOdds\n    ) {\n      calculation = calculation * 1.25;\n    } else {\n      calculation = calculation * 1;\n    }\n\n    if (calculation < 0 && awayForm.averageOddsAway < match.awayOdds && homeForm.averageOddsHome > match.homeOdds) {\n      calculation = calculation / 1.25;\n    } else if (\n      calculation < 0 &&\n      awayForm.averageOddsAway > match.awayOdds && homeForm.averageOddsHome < match.homeOdds\n    ) {\n      calculation = calculation * 1.25;\n    } else {\n      calculation = calculation * 1;\n    }\n  }\n\n  if(calculation > 0 && homeForm.improving === true){\n    calculation = calculation * 2\n  } else if (calculation < 0 && awayForm.improving === true){\n    calculation = calculation * 2\n  } else if (calculation > 0 && homeForm.improving === true && awayForm.improving === true){\n    calculation = calculation / 2\n  } else if (calculation < 0 && awayForm.improving === false && homeForm.improving === true){\n    calculation = calculation / 2\n  }\n\n  return calculation;\n}\n\nexport async function roundCustom(num, form, otherForm) {\n  let wholeNumber = Math.floor(num);\n  let remainder = num - wholeNumber;\n  const DAConversion =\n    form.AverageDangerousAttacksOverall * form.dangerousAttackConversion;\n\n  if (DAConversion >= 200) {\n    return Math.ceil(num);\n  } else {\n    return Math.floor(num);\n  }\n\n  // if (remainder > 0.9 && form.clinicalScore < 0.95) {\n  //   return Math.ceil(num);\n  // } else {\n  // }\n\n  // if (remainder > 0.5) {\n  //   return Math.ceil(num);\n  // } else {\n  //   return Math.floor(num);\n  // }\n}\n\n//Calculates scores based on prior XG figures, weighted by odds\nlet i = 0;\n\nexport async function calculateScore(match, index, divider, calculate) {\n  i++;\n\n  let teams;\n\n  if (\n    calculate === true &&\n    allForm.find(\n      (game) =>\n        game.home.teamName === match.homeTeam &&\n        game.away.teamName === match.awayTeam\n    )\n  ) {\n    teams = [\n      allForm.find((game) => game.home.teamName === match.homeTeam).home,\n      allForm.find((game) => game.away.teamName === match.awayTeam).away,\n    ];\n  } else {\n    calculate = false;\n  }\n\n  let formHome;\n  let formAway;\n\n  if (calculate) {\n    for (let i = 0; i < teams.length; i++) {\n      if (teams[0][index].PlayedHome <= 1 || teams[1][index].PlayedAway <= 1) {\n        index = 2;\n        divider = 10;\n      }\n\n      teams[i][index].lastGame = teams[i][index].LastFiveForm[4];\n      teams[i][index].previousToLastGame = teams[i][index].LastFiveForm[3];\n\n      let last2 = [\n        teams[i][index].lastGame,\n        teams[i][index].previousToLastGame,\n      ];\n\n      teams[i][index].last5Points = getPointsFromLastX(\n        teams[i][index].LastFiveForm\n      );\n\n      teams[i][index].last6Points = getPointsFromLastX(\n        teams[i][index].LastSixForm\n      );\n\n      teams[i][index].last10Points = getPointsFromLastX(\n        teams[i][index].LastTenForm\n      );\n\n      teams[i][index].last2Points = getPointsFromLastX(last2);\n\n      teams[i][index].twoGameAverage = await getPointAverage(\n        teams[i][index].last2Points,\n        2\n      );\n      teams[i][index].threeGameAverage = await getPointAverage(\n        teams[i][index].last3Points,\n        3\n      );\n      teams[i][index].fiveGameAverage = await getPointAverage(\n        teams[i][index].last5Points,\n        5\n      );\n      teams[i][index].sixGameAverage = await getPointAverage(\n        teams[i][index].last6Points,\n        6\n      );\n      teams[i][index].tenGameAverage = await getPointAverage(\n        teams[i][index].last10Points,\n        10\n      );\n\n      if (teams[i][index].formRun) {\n        teams[i][index].lastHomeOrAwayPoints = getPointsFromLastX(\n          teams[i][index].formRun\n        );\n\n        teams[i][index].homeOrAwayAverage = await getPointAverage(\n          teams[i][index].lastHomeOrAwayPoints,\n          teams[i][index].formRun.length\n        );\n      }\n\n      teams[i][0].ScoredAverage = teams[i][0].ScoredOverall / 5;\n      teams[i][1].ScoredAverage = teams[i][1].ScoredOverall / 6;\n      teams[i][2].ScoredAverage = teams[i][2].ScoredOverall / 10;\n\n      teams[i][0].ConcededAverage = teams[i][0].ConcededOverall / 5;\n      teams[i][1].ConcededAverage = teams[i][1].ConcededOverall / 6;\n      teams[i][2].ConcededAverage = teams[i][2].ConcededOverall / 10;\n\n      if (teams[i][1].ScoredAverage === 0) {\n        teams[i][1].ScoredAverage = teams[i][index].ScoredOverall / 10;\n        teams[i][1].ScoredOverall = teams[i][2].ScoredOverall / 2;\n      }\n\n      if (teams[i][1].ConcededAverage === 0) {\n        teams[i][1].ConcededAverage = teams[i][index].ConcededOverall / 10;\n        teams[i][1].ConcededOverall = teams[i][2].ConcededOverall / 2;\n      }\n\n      teams[i][index].ScoredAverageShortTerm = teams[i][0].ScoredOverall / 5;\n      teams[i][index].ConcededAverageShortTerm =\n        teams[i][0].ConcededOverall / 5;\n\n      teams[i][index].longTermAverageGoals = teams[i][2].ScoredOverall / 10;\n      teams[i][index].longTermAverageConceeded =\n        teams[i][2].ConcededOverall / 10;\n\n      match.GoalsInGamesAverageHome =\n        teams[0][0].ScoredAverage + teams[0][0].ConcededAverage;\n\n      match.GoalsInGamesAverageAway =\n        teams[1][0].ScoredAverage + teams[1][0].ConcededAverage;\n\n      let recentGoalDiff =\n        teams[i][index].ScoredAverageShortTerm -\n        teams[i][index].ConcededAverageShortTerm;\n      let distantGoalDiff =\n        teams[i][index].longTermAverageGoals -\n        teams[i][index].longTermAverageConceeded;\n\n      let recentDA = teams[i][0].AverageDangerousAttacksOverall;\n      let distantDA = teams[i][2].AverageDangerousAttacksOverall;\n\n      let recentPosession = teams[i][0].AveragePossessionOverall;\n      let distantPosession = teams[i][2].AveragePossessionOverall;\n\n      let recentCleanSheet = teams[i][0].CleanSheetPercentage;\n      let distantCleanSheet = teams[i][2].CleanSheetPercentage;\n\n      let recentFormArray = [\n        recentGoalDiff,\n        recentDA,\n        recentPosession,\n        recentCleanSheet,\n      ];\n      let distantFormArray = [\n        distantGoalDiff,\n        distantDA,\n        distantPosession,\n        distantCleanSheet,\n      ];\n\n      teams[i][index].formTrendScore = await compareFormTrend(\n        recentFormArray,\n        distantFormArray\n      );\n\n      teams[i][index].expectedGoals = parseFloat(teams[i][index].XG);\n\n      teams[i][index].ScoredAverageShortAndLongTerm =\n        (teams[i][index].ScoredOverall / 10 +\n          teams[i][index].ScoredAverageShortTerm) /\n        2;\n\n      teams[i][index].conceededAverageShortAndLongTerm =\n        (teams[i][index].ConcededOverall / 10 +\n          teams[i][index].ConcededAverageShortTerm) /\n        2;\n\n      teams[i][index].longTermGoalDifference =\n        teams[i][2].ScoredAverage - teams[i][2].ConcededAverage;\n\n      teams[i][index].shortTermGoalDifference =\n        teams[i][0].ScoredAverage - teams[i][0].ConcededAverage;\n\n      teams[i][index].XGdifferential = await diff(\n        teams[i][index].XGOverall,\n        teams[i][index].XGAgainstAvgOverall\n      );\n\n      teams[i][index].XGdifferentialRecent = await diff(\n        teams[i][0].XGOverall,\n        teams[i][0].XGAgainstAvgOverall\n      );\n\n      teams[i][index].actualToXGDifference = await diff(\n        teams[i][index].XGdifferential,\n        teams[i][index].goalDifference\n      );\n\n      teams[i][index].actualToXGDifferenceRecent = await diff(\n        teams[i][index].shortTermGoalDifference,\n        teams[i][index].XGdifferentialRecent\n      );\n    }\n\n    homeOdds = match.homeOdds;\n    awayOdds = match.awayOdds;\n\n    formHome = teams[0][index];\n    formAway = teams[1][index];\n\n\n\n    if (\n      (formHome.XGOverall - formHome.XGAgainstAvgOverall) < (formHome.last5XG - formHome.XGAgainstlast5)\n    ) {\n      formHome.improving = true;\n    } else {\n      formHome.improving = false;\n    }\n\n    if (\n      (formAway.XGOverall - formAway.XGAgainstAvgOverall) < (formAway.last5XG - formAway.XGAgainstlast5)\n    ) {\n      formAway.improving = true;\n    } else {\n      formAway.improving = false;\n    }\n\n    let homeTenGameAvg = formHome.last10Points / 10;\n    let awayTenGameAvg = formAway.last10Points / 10;\n\n    let homeTwoGameAvg = formHome.last2Points / 2;\n    let awayTwoGameAvg = formAway.last2Points / 2;\n\n    let pointsDiff10 = await getPointsDifferential(\n      homeTenGameAvg,\n      awayTenGameAvg\n    );\n\n    let pointsDiff2 = await getPointsDifferential(\n      homeTwoGameAvg,\n      awayTwoGameAvg\n    );\n\n    let [last10WeightingHome, last10WeightingAway] = await getPointWeighting(\n      pointsDiff10\n    );\n\n    let [last2WeightingHome, last2WeightingAway] = await getPointWeighting(\n      pointsDiff2\n    );\n\n    formHome.dangerousAttackConversion =\n      (formHome.ScoredAverageShortAndLongTerm /\n        formHome.AverageDangerousAttacksOverall) *\n      100;\n    formAway.dangerousAttackConversion =\n      (formAway.ScoredAverageShortAndLongTerm /\n        formAway.AverageDangerousAttacksOverall) *\n      100;\n\n    [formHome.clinicalRating, formHome.clinicalScore] = await getClinicalRating(\n      formHome\n    );\n    [formAway.clinicalRating, formAway.clinicalScore] = await getClinicalRating(\n      formAway\n    );\n\n    let XGdifferential = await diff(\n      formHome.XGdifferential,\n      formAway.XGdifferential\n    );\n\n    match.XGdifferentialValue = Math.abs(XGdifferential);\n    match.XGdifferentialValueRaw = parseFloat(XGdifferential);\n    if (\n      allLeagueResultsArrayOfObjects[match.leagueIndex].fixtures.length > 35 &&\n      match.leagueID !== 7956\n    ) {\n      [\n        formHome.predictedGoalsBasedOnHomeAv,\n        formHome.predictedGoalsBasedOnAwayAv,\n        formHome.allTeamGoalsBasedOnAverages,\n        formHome.predictedGoalsConceededBasedOnHomeAv,\n        formHome.predictedGoalsConceededBasedOnAwayAv,\n        formHome.allTeamGoalsConceededBasedOnAverages,\n        formHome.averageOddsHome,\n        formHome.averageOddsAway,\n        formHome.averageScoredLeague,\n        formHome.averageConceededLeague,\n        formHome.last10btts,\n        formHome.last10bttsHome,\n        formHome.last10bttsAway,\n        match.bttsAllPercentageHome,\n        match.bttsPercentageHomeHome,\n        match.bttsPercentageHomeAway,\n        formHome.forAndAgainstRollingAv,\n        formHome.forAndAgainstRollingAvHomeOrAway,\n      ] = await getPastLeagueResults(match.homeTeam, match, \"home\", formHome);\n\n      [\n        formAway.predictedGoalsBasedOnHomeAv,\n        formAway.predictedGoalsBasedOnAwayAv,\n        formAway.allTeamGoalsBasedOnAverages,\n        formAway.predictedGoalsConceededBasedOnHomeAv,\n        formAway.predictedGoalsConceededBasedOnAwayAv,\n        formAway.allTeamGoalsConceededBasedOnAverages,\n        formAway.averageOddsHome,\n        formAway.averageOddsAway,\n        formAway.averageScoredLeague,\n        formAway.averageConceededLeague,\n        formAway.last10btts,\n        formAway.last10bttsHome,\n        formAway.last10bttsAway,\n        match.bttsAllPercentageAway,\n        match.bttsPercentageAwayHome,\n        match.bttsPercentageAwayAway,\n        formAway.forAndAgainstRollingAv,\n        formAway.forAndAgainstRollingAvHomeOrAway,\n      ] = await getPastLeagueResults(match.awayTeam, match, \"away\", formAway);\n    } else {\n      formHome.predictedGoalsBasedOnHomeAv = formHome.ScoredAverage;\n      formHome.predictedGoalsBasedOnAwayAv = formHome.ConcededAverage;\n      formHome.allTeamGoalsBasedOnAverages = formHome.ScoredAverage;\n      formHome.forAndAgainstRollingAv = {\n        goalsFor: formHome.ScoredAverage,\n        goalsAgainst: formHome.ConcededAverage,\n      };\n      formHome.forAndAgainstRollingAvHomeOrAway = {\n        goalsFor: formHome.ScoredAverage,\n        goalsAgainst: formHome.ConcededAverage,\n      };\n      formHome.predictedGoalsConceededBasedOnHomeAv = formHome.ConcededAverage;\n      formHome.predictedGoalsConceededBasedOnAwayAv = formHome.ConcededAverage;\n      formHome.allTeamGoalsConceededBasedOnAverages = formHome.ConcededAverage;\n      formHome.averageOddsHome = null;\n      formHome.averageOddsAway = null;\n      formHome.averageScoredLeague = null;\n      formHome.averageConceededLeague = null;\n      formHome.goalDifference =\n        formHome.ScoredOverall - formHome.ConcededOverall;\n      formHome.goalDifferenceHomeOrAway =\n        formHome.ScoredOverall - formHome.ConcededOverall;\n      formHome.last10btts = null;\n      formHome.last10bttsHome = null;\n      formHome.last10bttsAway = null;\n      formHome.allTeamResults = [];\n      match.bttsAllPercentageHome = \"\";\n      match.bttsPercentageHomeHome = \"\";\n      match.bttsPercentageHomeAway = \"\";\n      formAway.predictedGoalsBasedOnHomeAv = formAway.ScoredAverage;\n      formAway.predictedGoalsBasedOnAwayAv = formAway.ConcededAverage;\n      formAway.allTeamGoalsBasedOnAverages = formAway.ScoredAverage;\n      formAway.forAndAgainstRollingAv = {\n        goalsFor: formAway.ScoredAverage,\n        goalsAgainst: formAway.ConcededAverage,\n      };\n      formAway.forAndAgainstRollingAvHomeOrAway = {\n        goalsFor: formAway.ScoredAverage,\n        goalsAgainst: formAway.ConcededAverage,\n      };\n      formAway.predictedGoalsConceededBasedOnHomeAv = formAway.ConcededAverage;\n      formAway.predictedGoalsConceededBasedOnAwayAv = formAway.ConcededAverage;\n      formAway.allTeamGoalsConceededBasedOnAverages = formAway.ConcededAverage;\n      formAway.averageOddsHome = null;\n      formAway.averageOddsAway = null;\n      formAway.averageScoredLeague = null;\n      formAway.averageConceededLeague = null;\n      formAway.goalDifference =\n        formAway.ScoredOverall - formAway.ConcededOverall;\n      formAway.goalDifferenceHomeOrAway =\n        formAway.ScoredOverall - formAway.ConcededOverall;\n\n      formAway.last10btts = null;\n      formAway.last10bttsHome = null;\n      formAway.last10bttsAway = null;\n      formAway.allTeamResults = [];\n      match.bttsAllPercentageAway = \"\";\n      match.bttsPercentageAwayHome = \"\";\n      match.bttsPercentageAwayAway = \"\";\n    }\n\n    if (\n      typeof formHome.homeTeamHomePositionRaw === \"number\" &&\n      typeof formAway.awayTeamAwayPositionRaw === \"number\"\n    ) {\n      formHome.homePositionHomeOnly = parseFloat(\n        formHome.homeTeamHomePositionRaw\n      );\n      formAway.awayPositionAwayOnly = parseFloat(\n        formAway.awayTeamAwayPositionRaw\n      );\n      formHome.homePosition = parseFloat(formHome.homeRawPosition);\n      formAway.awayPosition = parseFloat(formAway.awayRawPosition);\n    } else {\n      formHome.homePositionHomeOnly = \"N/A\";\n      formAway.awayPositionAwayOnly = \"N/A\";\n      formHome.homePosition = \"N/A\";\n      formAway.awayPosition = \"N/A\";\n    }\n\n    formHome.AttackingPotency = (formHome.XG / formHome.AttacksHome) * 100;\n    formAway.AttackingPotency = (formAway.XG / formAway.AttacksAverage) * 100;\n\n    let teamComparisonScore;\n\n    const attackingMetricsHome = {\n      \"Average Dangerous Attacks\": formHome.AverageDangerousAttacksOverall,\n      \"Average Shots\": formHome.AverageShots,\n      \"Average Shots On Target\": formHome.AverageShotsOnTargetOverall,\n      \"Average Expected Goals\": formHome.XGOverall,\n      \"Recent XG\": formHome.XGlast5 ? formHome.XGlast5 : formHome.XGOverall,\n      \"Average Goals\":\n        formHome.averageScoredLeague !== undefined &&\n        formHome.averageScoredLeague !== null\n          ? formHome.averageScoredLeague.toFixed(2)\n          : (formHome.ScoredOverall / 10).toFixed(2),\n    };\n    const attackingMetricsAway = {\n      \"Average Dangerous Attacks\": formAway.AverageDangerousAttacksOverall,\n      \"Average Shots\": formAway.AverageShots,\n      \"Average Shots On Target\": formAway.AverageShotsOnTargetOverall,\n      \"Average Expected Goals\": formAway.XGOverall,\n      \"Recent XG\": formAway.XGlast5 ? formAway.XGlast5 : formAway.XGOverall,\n      \"Average Goals\":\n        formAway.averageScoredLeague !== undefined &&\n        formAway.averageScoredLeague !== null\n          ? formAway.averageScoredLeague.toFixed(2)\n          : (formAway.ScoredOverall / 10).toFixed(2),\n    };\n\n    const defensiveMetricsHome = {\n      \"Clean Sheet Percentage\": 100 - formHome.CleanSheetPercentage,\n      \"Average XG Against\": formHome.XGAgainstAvgOverall,\n      \"Recent XG Against\": formHome.XGAgainstlast5\n        ? formHome.XGAgainstlast5\n        : formHome.XGAgainstAvgOverall,\n      \"Average Goals Against\":\n        formHome.averageConceededLeague !== null\n          ? formHome.averageConceededLeague.toFixed(2)\n          : formHome.ConcededAverage.toFixed(2),\n    };\n\n    const defensiveMetricsAway = {\n      \"Clean Sheet Percentage\": 100 - formAway.CleanSheetPercentage,\n      \"Average XG Against\": formAway.XGAgainstAvgOverall,\n      \"Recent XG Against\": formAway.XGAgainstlast5\n        ? formAway.XGAgainstlast5\n        : formAway.XGAgainstAvgOverall,\n      \"Average Goals Against\":\n        formAway.averageConceededLeague !== null\n          ? formAway.averageConceededLeague.toFixed(2)\n          : formAway.ConcededAverage.toFixed(2),\n    };\n\n    formHome.attackingMetrics = attackingMetricsHome;\n    formHome.defensiveMetrics = defensiveMetricsHome;\n    formAway.attackingMetrics = attackingMetricsAway;\n    formAway.defensiveMetrics = defensiveMetricsAway;\n\n    formHome.attackingStrength = await calculateAttackingStrength(\n      attackingMetricsHome\n    );\n    formAway.attackingStrength = await calculateAttackingStrength(\n      attackingMetricsAway\n    );\n    formHome.defensiveStrength = await calculateDefensiveStrength(\n      defensiveMetricsHome\n    );\n    formAway.defensiveStrength = await calculateDefensiveStrength(\n      defensiveMetricsAway\n    );\n\n    formHome.possessionStrength = await calculateMetricStrength(\n      \"averagePossession\",\n      formHome.AveragePossessionOverall\n    );\n\n    formHome.directnessOverall =\n      (formHome.AverageShots / formHome.AveragePossessionOverall) * 10;\n    formAway.directnessOverall =\n      (formAway.AverageShots / formAway.AveragePossessionOverall) * 10;\n\n    formHome.directnessOverallStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formHome.directnessOverall\n    );\n    formAway.directnessOverallStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formAway.directnessOverall\n    );\n\n    formHome.directnessHome =\n      (formHome.AverageShotsHomeOrAway / formHome.AveragePossession) * 10;\n    formAway.directnessAway =\n      (formAway.AverageShotsHomeOrAway / formAway.AveragePossession) * 10;\n\n    formHome.shootingAccuracy =\n      (formHome.AverageShotsOnTargetOverall / formHome.AverageShots) *\n      formHome.AverageShots;\n    formAway.shootingAccuracy =\n      (formAway.AverageShotsOnTargetOverall / formAway.AverageShots) *\n      formAway.AverageShots;\n\n    formHome.accuracyOverallStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formHome.shootingAccuracy\n    );\n    formAway.accuracyOverallStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formAway.shootingAccuracy\n    );\n\n    formHome.xgForStrength = await calculateMetricStrength(\n      \"xgFor\",\n      formHome.XGOverall\n    );\n    formHome.xgAgainstStrength = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formHome.XGAgainstAvgOverall\n    );\n\n    formAway.possessionStrength = await calculateMetricStrength(\n      \"averagePossession\",\n      formAway.AveragePossessionOverall\n    );\n    formAway.xgForStrength = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.XGOverall\n    );\n    formAway.xgAgainstStrength = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formAway.XGAgainstAvgOverall\n    );\n\n    teamComparisonScore = await compareTeams(formHome, formAway, match);\n    teamComparisonScore = teamComparisonScore * 0.5;\n\n    if (teamComparisonScore > 0.65) {\n      teamComparisonScore = 0.65;\n    } else if (teamComparisonScore < -0.65) {\n      teamComparisonScore = -0.65;\n    }\n\n    if (teamComparisonScore < 0) {\n      formHome.teamStrengthWeighting = 1 + teamComparisonScore / 1;\n      formAway.teamStrengthWeighting = 1 - teamComparisonScore / 1;\n    } else if (teamComparisonScore >= 0) {\n      formHome.teamStrengthWeighting = 1 + teamComparisonScore / 1;\n      formAway.teamStrengthWeighting = 1 - teamComparisonScore / 1;\n    }\n\n    console.log(teamComparisonScore)\n    console.log(formHome.teamStrengthWeighting)\n    console.log(formAway.teamStrengthWeighting)\n\n    // teamComparisonScore = 0;\n\n\n    match.teamComparisonScore = teamComparisonScore.toFixed(2);\n    // match.goalWeighting = 1 + parseFloat(match.teamComparisonScore)\n\n    let team1Metrics = {\n      weighting: formHome.teamStrengthWeighting,\n      // Add other relevant metrics here\n    };\n\n    let team2Metrics = {\n      weighting: formAway.teamStrengthWeighting,\n      // Add other relevant metrics here\n    };\n\n    // pass arrays of league goals and conceeded\n    let scorePredictions;\n    if (\n      formHome.allConceededArrayHome !== undefined &&\n      formAway.allConceededArrayAway !== undefined\n    ) {\n      scorePredictions = await predictScore(\n        formHome.allGoalsArrayHome,\n        formHome.allConceededArrayHome,\n        formAway.allGoalsArrayAway,\n        formAway.allConceededArrayAway,\n        team1Metrics,\n        team2Metrics,\n        match.game\n      );\n    }\n\n    let finalHomeGoals;\n    let finalAwayGoals;\n\n    const homeGoalDiff =\n      formHome.ScoredAverageShortAndLongTerm -\n      formHome.conceededAverageShortAndLongTerm;\n    const awayGoalDiff =\n      formAway.ScoredAverageShortAndLongTerm -\n      formAway.conceededAverageShortAndLongTerm;\n\n    formHome.goalsDifferential =\n      parseFloat(await diff(homeGoalDiff, awayGoalDiff)) / 1;\n    formAway.goalsDifferential =\n      parseFloat(await diff(awayGoalDiff, homeGoalDiff)) / 1;\n\n    formHome.rollingAverageGoalsDifferential = parseFloat(\n      formHome.allTeamGoalsBasedOnAverages -\n        formHome.allTeamGoalsConceededBasedOnAverages\n    );\n    formAway.rollingAverageGoalsDifferential = parseFloat(\n      formAway.allTeamGoalsBasedOnAverages -\n        formAway.allTeamGoalsConceededBasedOnAverages\n    );\n\n    let goalCalcHomeShortTerm =\n      (formHome.ScoredAverageShortTerm + formAway.ConcededAverageShortTerm) / 2;\n    let goalCalcAwayShortTerm =\n      (formAway.ScoredAverageShortTerm + formHome.ConcededAverageShortTerm) / 2;\n\n    let homeLeagueOrAllFormAverageGoals =\n      formHome.LeagueAverageGoals !== undefined\n        ? (formHome.LeagueAverageGoals + formAway.LeagueAverageConceded) / 2\n        : goalCalcHomeShortTerm;\n    let awayLeagueOrAllFormAverageGoals =\n      formAway.LeagueAverageGoals !== undefined\n        ? (formAway.LeagueAverageGoals + formHome.LeagueAverageConceded) / 2\n        : goalCalcAwayShortTerm;\n\n    let factorOneHome;\n    let factorOneAway;\n\n    factorOneHome =\n      (homeLeagueOrAllFormAverageGoals * 1 +\n        formHome.forAndAgainstRollingAvHomeOrAway.goalsFor * 1 +\n        formAway.forAndAgainstRollingAvHomeOrAway.goalsAgainst * 1 +\n        formHome.forAndAgainstRollingAv.goalsFor * 1 +\n        formAway.forAndAgainstRollingAv.goalsAgainst * 1 +\n        formHome.allTeamGoalsBasedOnAverages * 1 +\n        formAway.allTeamGoalsConceededBasedOnAverages * 1 +\n        formHome.XGOverall * 0.25 +\n        formAway.XGAgainstAvgOverall * 0.25 +\n        last10WeightingHome * 1 +\n        last2WeightingHome * 1) /\n      7.5;\n\n    factorOneAway =\n      (awayLeagueOrAllFormAverageGoals * 1 +\n        formAway.forAndAgainstRollingAvHomeOrAway.goalsFor * 1 +\n        formHome.forAndAgainstRollingAvHomeOrAway.goalsAgainst * 1 +\n        formAway.forAndAgainstRollingAv.goalsFor * 1 +\n        formHome.forAndAgainstRollingAv.goalsAgainst * 1 +\n        formAway.allTeamGoalsBasedOnAverages * 1 +\n        formHome.allTeamGoalsConceededBasedOnAverages * 1 +\n        formAway.XGOverall * 0.25 +\n        formHome.XGAgainstAvgOverall * 0.25 +\n        last10WeightingAway * 1 +\n        last2WeightingAway * 1) /\n      7.5;\n\n    let factorTwoHome;\n    let factorTwoAway;\n\n    if (\n      scorePredictions !== undefined &&\n      scorePredictions[0].probability !== 1\n    ) {\n      factorTwoHome = scorePredictions[0].team1Score;\n      factorTwoAway = scorePredictions[0].team2Score;\n    } else {\n      factorTwoHome = factorOneHome;\n      factorTwoAway = factorOneAway;\n    }\n\n    let homeComparisonWeighting;\n    let awayComparisonWeighting;\n    match.scoreDiff = await diff(factorOneHome, factorOneAway);\n\n    if (teamComparisonScore > 0) {\n      homeComparisonWeighting = 1 + Math.abs(teamComparisonScore);\n      awayComparisonWeighting = 1 + -Math.abs(teamComparisonScore);\n    } else if (teamComparisonScore < 0) {\n      homeComparisonWeighting = 1 + -Math.abs(teamComparisonScore);\n      awayComparisonWeighting = 1 + Math.abs(teamComparisonScore);\n    } else {\n      homeComparisonWeighting = 1;\n      awayComparisonWeighting = 1;\n    }\n\n    let experimentalHomeGoals =\n      ((factorOneHome * 1.1 + factorTwoHome * 1) * homeComparisonWeighting /\n        2.1) *\n      1;\n    // (formHome.forAndAgainstRollingAvHomeOrAway.goalsFor + formAway.forAndAgainstRollingAvHomeOrAway.goalsAgainst) / 2\n\n    let experimentalAwayGoals =\n      ((factorOneAway * 1.1 + factorTwoAway * 1) * awayComparisonWeighting /\n        2.1) *\n      1;\n    // (formAway.forAndAgainstRollingAvHomeOrAway.goalsFor + formHome.forAndAgainstRollingAvHomeOrAway.goalsAgainst) / 2\n\n    let rawFinalHomeGoals = experimentalHomeGoals;\n    let rawFinalAwayGoals = experimentalAwayGoals;\n\n    match.rawFinalHomeGoals = rawFinalHomeGoals;\n    match.rawFinalAwayGoals = rawFinalAwayGoals;\n\n    // if (\n    //   formHome.CleanSheetPercentage > 50 &&\n    //   formAway.CleanSheetPercentage > 50\n    // ) {\n    //   rawFinalHomeGoals = rawFinalHomeGoals - 0.5;\n    //   rawFinalAwayGoals = rawFinalAwayGoals - 0.5;\n    // }\n\n    if (\n      formHome.CleanSheetPercentage < 35 &&\n      formAway.CleanSheetPercentage < 35\n    ) {\n      finalHomeGoals = Math.ceil(rawFinalHomeGoals);\n      finalAwayGoals = Math.ceil(rawFinalAwayGoals);\n    } else if (\n      formHome.CleanSheetPercentage < 40 &&\n      formAway.CleanSheetPercentage < 40 &&\n      rawFinalHomeGoals < 1 &&\n      rawFinalAwayGoals < 1\n    ) {\n      finalHomeGoals = Math.ceil(rawFinalHomeGoals);\n      finalAwayGoals = Math.ceil(rawFinalAwayGoals);\n    } else {\n      finalHomeGoals = Math.floor(rawFinalHomeGoals);\n      finalAwayGoals = Math.floor(rawFinalAwayGoals);\n    }\n\n    // finalHomeGoals = await roundCustom(rawFinalHomeGoals, formHome)\n    // finalAwayGoals = await roundCustom(rawFinalAwayGoals, formAway)\n\n    if (finalHomeGoals > formHome.averageScoredLeague + 2) {\n      finalHomeGoals = Math.round(\n        (finalHomeGoals + formHome.averageScoredLeague) / 2\n      );\n    }\n\n    if (finalAwayGoals > formAway.averageScoredLeague + 2) {\n      finalAwayGoals = Math.round(\n        (finalAwayGoals + formAway.averageScoredLeague) / 2\n      );\n    }\n\n    if (finalAwayGoals < 0) {\n      let difference = Math.abs(\n        parseFloat((await diff(0, finalAwayGoals)) / 2)\n      );\n      rawFinalHomeGoals = rawFinalHomeGoals + difference;\n      finalAwayGoals = 0;\n    }\n\n    if (finalHomeGoals < 0) {\n      let difference = Math.abs(\n        parseFloat((await diff(0, finalHomeGoals)) / 2)\n      );\n      rawFinalAwayGoals = rawFinalAwayGoals + difference;\n      finalHomeGoals = 0;\n    }\n\n    if (match.status !== \"suspended\") {\n      if (finalHomeGoals > finalAwayGoals) {\n        match.prediction = \"homeWin\";\n        homePredictions = homePredictions + 1;\n        if (\n          formHome.lastGame === \"L\" ||\n          formHome.last2Points < 3 ||\n          formAway.last2Points > 3\n        ) {\n          match.includeInMultis = false;\n        } else {\n          match.includeInMultis = true;\n        }\n      } else if (finalAwayGoals > finalHomeGoals) {\n        match.prediction = \"awayWin\";\n        awayPredictions = awayPredictions + 1;\n        if (\n          formAway.lastGame === \"L\" ||\n          formAway.last2Points < 3 ||\n          formHome.last2Points > 3\n        ) {\n          match.includeInMultis = false;\n        } else {\n          match.includeInMultis = true;\n        }\n      } else if (finalHomeGoals === finalAwayGoals) {\n        match.prediction = \"draw\";\n        drawPredictions = drawPredictions + 1;\n      }\n    }\n\n    console.log(`drawPredictions: ${drawPredictions}`);\n\n    if (\n      (XGdifferential > 1 && match.prediction === \"homeWin\") ||\n      (XGdifferential < -1.6 && match.prediction === \"awayWin\")\n    ) {\n      match.XGdifferential = true;\n    } else {\n      match.XGdifferential = false;\n    }\n\n    if (\n      (pointsDiff10 > 1.2 && match.prediction === \"homeWin\") ||\n      (pointsDiff10 < -1.2 && match.prediction === \"awayWin\")\n    ) {\n      match.pointsDifferential = true;\n      match.pointsDifferentialValue = Math.abs(pointsDiff10);\n      match.pointsDifferentialValueRaw = parseFloat(pointsDiff10);\n    } else {\n      match.pointsDiff10 = false;\n      match.pointsDifferentialValue = Math.abs(pointsDiff10);\n      match.pointsDifferentialValueRaw = parseFloat(pointsDiff10);\n    }\n\n    let rollingGoalDiffDifferential = await diff(\n      formHome.rollingAverageGoalsDifferential,\n      formAway.rollingAverageGoalsDifferential\n    );\n\n    if (\n      (rollingGoalDiffDifferential > 1.5 && match.prediction === \"homeWin\") ||\n      (rollingGoalDiffDifferential < -1.5 && match.prediction === \"awayWin\")\n    ) {\n      match.rollingGoalDiff = true;\n      match.rollingGoalDiffValue = rollingGoalDiffDifferential;\n    } else {\n      match.rollingGoalDiff = false;\n      match.rollingGoalDiffValue = rollingGoalDiffDifferential;\n    }\n\n    let dangerousAttacksDifferential = await diff(\n      formHome.AverageDangerousAttacksOverall,\n      formAway.AverageDangerousAttacksOverall\n    );\n\n    if (\n      (dangerousAttacksDifferential > 20 && match.prediction === \"homeWin\") ||\n      (dangerousAttacksDifferential < -20 && match.prediction === \"awayWin\")\n    ) {\n      match.dangerousAttacksDiff = true;\n      match.dangerousAttacksDiffValue = dangerousAttacksDifferential;\n    } else {\n      match.dangerousAttacksDiff = false;\n      match.dangerousAttacksDiffValue = dangerousAttacksDifferential;\n    }\n\n    switch (true) {\n      case match.status !== \"complete\":\n        break;\n      case match.homeGoals > match.awayGoals:\n        match.winner = match.homeTeam;\n        match.outcome = \"homeWin\";\n        homeOutcomes = homeOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formHome.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formAway.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formHome.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formAway.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formHome.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formAway.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formHome.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formAway.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += homeOdds;\n        sumOddsLoss = sumOddsLoss += awayOdds;\n        sumXGForWin = sumXGForWin += formHome.XGOverall;\n        sumXGForLoss = sumXGForLoss += formAway.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formHome.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formAway.XGAgainstAvgOverall;\n        break;\n      case match.homeGoals === match.awayGoals:\n        match.winner = \"draw\";\n        match.outcome = \"draw\";\n        allOutcomes = allOutcomes + 1;\n        allDrawOutcomes = allDrawOutcomes + 1;\n        break;\n      case match.homeGoals < match.awayGoals:\n        match.winner = match.awayTeam;\n        match.outcome = \"awayWin\";\n        allOutcomes = allOutcomes + 1;\n        awayOutcomes = awayOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formAway.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formHome.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formAway.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formHome.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formAway.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formHome.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formAway.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formHome.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += awayOdds;\n        sumOddsLoss = sumOddsLoss += homeOdds;\n        sumXGForWin = sumXGForWin += formAway.XGOverall;\n        sumXGForLoss = sumXGForLoss += formHome.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formAway.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formHome.XGAgainstAvgOverall;\n        break;\n      default:\n        break;\n    }\n\n    console.log(`allDrawOutcomes: ${allDrawOutcomes}`);\n\n    if (match.status === \"complete\") {\n      if (match.prediction === match.outcome) {\n        match.predictionOutcome = \"Won\";\n        winAmount = winAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      } else if (match.prediction !== match.outcome) {\n        match.predictionOutcome = \"Lost\";\n        lossAmount = lossAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      }\n    }\n\n    if (match.status === \"complete\") {\n      if (match.homeGoals + match.awayGoals > 2) {\n        match.over25PredictionOutcome = \"Won\";\n      } else {\n        match.over25PredictionOutcome = \"Lost\";\n      }\n    }\n\n    if (\n      match.status === \"complete\" &&\n      match.homeGoals > 0 &&\n      match.awayGoals > 0\n    ) {\n      match.bttsOutcome = \"bttsWon\";\n    } else {\n      match.bttsOutcome = \"bttsLost\";\n    }\n\n    match.formHome = formHome;\n    match.formAway = formAway;\n    formHome.teamName = match.homeTeam;\n\n    // formObjectHome = formHome;\n    // formObjectAway = formAway;\n\n    // console.log(formObjectHome)\n    // console.log(formObjectAway)\n\n    let total = parseInt(finalHomeGoals + finalAwayGoals);\n    totalGoals = totalGoals + total;\n\n    let total2 = parseInt(match.homeGoals + match.awayGoals);\n    totalGoals2 = totalGoals2 + total2;\n\n    numberOfGames = numberOfGames + 1;\n\n    if (finalHomeGoals < 0) {\n      finalHomeGoals = 0;\n    }\n\n    if (finalAwayGoals < 0) {\n      finalAwayGoals = 0;\n    }\n\n    if (match.status === \"suspended\") {\n      finalHomeGoals = \"P\";\n      finalAwayGoals = \"P\";\n    }\n\n    if (\n      match.game_week < 0\n      // match.game_week < 3 &&\n    ) {\n      finalHomeGoals = \"-\";\n      finalAwayGoals = \"-\";\n      match.status = \"notEnoughData\";\n    }\n\n    return [\n      finalHomeGoals,\n      finalAwayGoals,\n      rawFinalHomeGoals,\n      rawFinalAwayGoals,\n    ];\n  } else {\n    finalHomeGoals = \"\";\n    finalAwayGoals = \"\";\n    rawFinalHomeGoals = \"\";\n    rawFinalAwayGoals = \"\";\n    match.status = \"notEnoughData\";\n    match.profit = 0;\n  }\n\n  return [finalHomeGoals, finalAwayGoals, rawFinalHomeGoals, rawFinalAwayGoals];\n}\n\nasync function getSuccessMeasure(fixtures) {\n  let sumProfit = 0;\n  let investment = 0;\n  let exactScores = 0;\n  let successCount = 0;\n  let profit = 0;\n  let netProfit = 0;\n\n\n  // await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}tips/${dateStamp}`, {\n  //   method: \"PUT\",\n  //   headers: {\n  //     Accept: \"application/json\",\n  //     \"Content-Type\": \"application/json\",\n  //   },\n  //   body: JSON.stringify(matches)\n  // })\n\n  for (let i = 0; i < fixtures.length; i++) {\n    if (\n      fixtures[i].status === \"complete\" &&\n      fixtures[i].hasOwnProperty(\"prediction\")\n    ) {\n      sumProfit = sumProfit + fixtures[i].profit;\n      investment = investment + 1;\n      netProfit = (sumProfit - investment).toFixed(2);\n      profit = parseFloat(netProfit);\n      if (fixtures[i].exactScore === true) {\n        exactScores = exactScores + 1;\n      }\n      if (fixtures[i].predictionOutcome === \"Won\") {\n        successCount = successCount + 1;\n      }\n    }\n  }\n\n  totalInvestment = totalInvestment + investment;\n  totalProfit = totalProfit + profit;\n  let ROI = (profit / investment) * 100;\n  totalROI = (totalProfit / totalInvestment) * 100;\n  console.log(`Total Profit : ${totalProfit}`);\n  console.log(`Total Investment : ${totalInvestment}`);\n  console.log(`Total ROI : ${totalROI}`);\n  var operand = ROI >= 0 ? \"+\" : \"\";\n  var operandTwo = totalROI >= 0 ? \"+\" : \"\";\n  let exactScoreHitRate = ((exactScores / investment) * 100).toFixed(1);\n  let successRate = ((successCount / investment) * 100).toFixed(1);\n\n  if (investment > 0) {\n    ReactDOM.render(\n      <Fragment>\n        <Div\n          className={\"SuccessMeasure\"}\n          text={`ROI for \n            all ${investment} W/D/W \n            outcomes: ${operand} ${ROI.toFixed(2)}%`}\n        />\n        <p>{`Correct W/D/W predictions: ${successCount} (${successRate}%)`}</p>\n        <p>{`Exact scores predicted: ${exactScores} (${exactScoreHitRate}%)`}</p>\n        <Div\n          className={\"SuccessMeasure\"}\n          text={`Cumalative ROI for \n            all ${totalInvestment} match outcomes: ${operandTwo} ${totalROI.toFixed(\n            2\n          )}%`}\n        />\n      </Fragment>,\n      document.getElementById(\"successMeasure2\")\n    );\n  } else {\n    return;\n  }\n}\n\nexport var tips = [];\nexport var allTips = [];\nlet allTipsSorted = [];\nvar newArray = [];\nvar bestBets = [];\nvar price;\nvar Over25Tips = [];\nvar XGDiffTips = [];\nvar rollingDiffTips = [];\nvar dangerousAttacksDiffTips = [];\nvar pointsDiffTips = [];\nvar combinations;\nvar exoticArray = [];\nvar gamesInExotic;\nvar minimumExotic;\nvar exoticStake;\nvar exoticString;\nvar bttsArray = [];\nvar accumulatedOdds = 1;\nlet predictions = [];\n\nexport async function getNewTips(array) {\n  // allTips = [];\n  newArray = [];\n  accumulatedOdds = 1;\n\n  if (array.length > 1 && incrementValue > 0) {\n    array.forEach((tip) => {\n      if (\n        array.indexOf(tip) < incrementValue\n        // tip.goalDifferential >= incrementValue && tip.comparisonScore > 0\n      ) {\n        newArray.push(tip);\n        accumulatedOdds = parseFloat(accumulatedOdds) * parseFloat(tip.rawOdds);\n      }\n    });\n  }\n  await renderTips(newArray);\n}\n\nexport async function getScorePrediction(day, mocked) {\n  let mock = mocked;\n  clicked = true;\n  tips = [];\n  bestBets = [];\n  // price = 0\n  bttsArray = [];\n  Over25Tips = [];\n  XGDiffTips = [];\n  pointsDiffTips = [];\n  rollingDiffTips = [];\n  dangerousAttacksDiffTips = [];\n  allTips = [];\n\n  let index = 2;\n  let divider = 10;\n\n  ReactDOM.render(<div></div>, document.getElementById(\"GeneratePredictions\"));\n\n  await Promise.all(\n    matches.map(async (match) => {\n      // if there are no stored predictions, calculate them based on live data\n      if (match) {\n        switch (true) {\n          case match.status === \"canceled\":\n            match.goalsA = \"P\";\n            match.goalsB = \"P\";\n            await calculateScore(match, index, divider, false);\n            break;\n          case match.leagueID === 6935 ||\n            match.leagueID === 7061 ||\n            (match.game_week < 3 && match.game_week !== 0):\n            match.goalsA = \"x\";\n            match.goalsB = \"x\";\n            await calculateScore(match, index, divider, false);\n            break;\n          default:\n            [\n              match.goalsA,\n              match.goalsB,\n              match.unroundedGoalsA,\n              match.unroundedGoalsB,\n            ] = await calculateScore(match, index, divider, true);\n            break;\n        }\n      } else {\n        [\n          match.goalsA,\n          match.goalsB,\n          match.unroundedGoalsA,\n          match.unroundedGoalsB,\n        ] = await calculateScore(match, index, divider, true);\n      }\n\n      await getBTTSPotential(\n        match,\n        match.goalsA,\n        match.goalsB,\n        match.unroundedGoalsA,\n        match.unroundedGoalsB\n      );\n\n      let predictionObject;\n      let Over25PredictionObject;\n      let XGPredictionObject;\n      let pointsDiffObject;\n      let rollingDiffObject;\n      let dangerousAttacksDiffObject;\n\n      if (match.status === \"complete\" && match.prediction) {\n        match.outcomeSymbol =\n          match.predictionOutcome === \"Won\" ? \"\\u2714\" : \"\\u2718\";\n        match.over25PredictionOutcomeSymbol =\n          match.over25PredictionOutcome === \"Won\" ? \"\\u2714\" : \"\\u2718\";\n        match.bttsOutcomeSymbol =\n          match.bttsOutcome === \"bttsWon\" ? \"\\u2714\" : \"\\u2718\";\n      } else {\n        match.outcomeSymbol = \"\";\n        match.over25PredictionOutcomeSymbol = \"\";\n        match.bttsOutcomeSymbol = \"\";\n      }\n\n      if (\n        match.unroundedGoalsA - match.unroundedGoalsB > 0.75 &&\n        match.homeOdds !== 0 &&\n        match.fractionHome !== \"N/A\" &&\n        match.includeInMultis !== false\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.status !== \"notEnoughData\" &&\n          match.homeOdds < 3\n        ) {\n          predictionObject = {\n            team: `${match.homeTeam} to win`,\n            game:\n              match.status === \"complete\"\n                ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n                : match.game,\n            odds: match.fractionHome,\n            rawOdds: match.homeOdds,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            outcome: match.predictionOutcome,\n            outcomeSymbol: match.outcomeSymbol,\n            goalDifferential: parseFloat(\n              await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n            ),\n            experimentalCalc: (\n              (match.unroundedGoalsA - match.unroundedGoalsB) *\n              Math.abs(match.teamComparisonScore)\n            ).toFixed(2),\n            XGdifferentialValue: parseFloat(match.XGdifferentialValue),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formHome.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n\n            if (\n              match.unroundedGoalsA - match.unroundedGoalsB >\n              incrementValue\n            ) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      } else if (\n        match.unroundedGoalsB - match.unroundedGoalsA > 2 &&\n        match.awayOdds !== 0 &&\n        match.fractionAway !== \"N/A\" &&\n        match.includeInMultis !== false\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.status !== \"notEnoughData\" &&\n          match.awayOdds < 3.5\n        ) {\n          predictionObject = {\n            team: `${match.awayTeam} to win`,\n            game:\n              match.status === \"complete\"\n                ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n                : match.game,\n            rawOdds: match.awayOdds,\n            odds: match.fractionAway,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            outcome: match.predictionOutcome,\n            outcomeSymbol: match.outcomeSymbol,\n            goalDifferential:\n              parseFloat(\n                await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n              ) - 1,\n            experimentalCalc: (\n              (match.unroundedGoalsB - match.unroundedGoalsA) *\n              Math.abs(match.teamComparisonScore)\n            ).toFixed(2),\n            XGdifferentialValue: parseFloat(match.XGdifferentialValue),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formAway.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n            if (match.unroundedGoalsB - match.unroundedGoalsA > 2) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      }\n\n      if (\n        match.btts === true &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\" &&\n        match.status !== \"notEnoughData\"\n      ) {\n        bttsArray.push(match);\n      }\n      if (\n        match.unroundedGoalsA + match.unroundedGoalsB > 2.5 &&\n        match.goalsA + match.goalsB > 2 &&\n        match.GoalsInGamesAverageHome > 2.5 &&\n        match.GoalsInGamesAverageAway > 2.5\n      ) {\n        Over25PredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: match.homeTeam,\n          decimalOdds: match.homeDoubleChance,\n          rawOdds: match.over25Odds,\n          odds: match.over25Odds,\n          comparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.over25PredictionOutcomeSymbol,\n          doubleChanceOutcome: match.over25PredictionOutcome,\n          goalTotalUnrounded: match.unroundedGoalsA + match.unroundedGoalsB,\n        };\n        Over25Tips.push(Over25PredictionObject);\n      }\n\n      if (\n        match.XGdifferential === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        XGPredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          XGdifferentialValue: match.XGdifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        XGDiffTips.push(XGPredictionObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        XGPredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          XGdifferentialValue: match.XGdifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        XGDiffTips.push(XGPredictionObject);\n      }\n\n      if (\n        match.pointsDifferential === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        pointsDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          pointsDifferentialValue: match.pointsDifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        pointsDiffTips.push(pointsDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        pointsDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          pointsDifferentialValue: match.pointsDifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        pointsDiffTips.push(pointsDiffObject);\n      }\n\n      if (\n        match.rollingGoalDiff === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        rollingDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        rollingDiffTips.push(rollingDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        rollingDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        rollingDiffTips.push(rollingDiffObject);\n      }\n\n      if (\n        match.dangerousAttacksDiff === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        dangerousAttacksDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        dangerousAttacksDiffTips.push(dangerousAttacksDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        dangerousAttacksDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        dangerousAttacksDiffTips.push(dangerousAttacksDiffObject);\n      }\n\n      predictions.push(match);\n    })\n  );\n  ReactDOM.render(\n    <RenderAllFixtures matches={matches} result={true} bool={mock} />,\n    document.getElementById(\"FixtureContainer\")\n  );\n  await getSuccessMeasure(matches);\n  await getMultis();\n  await getNewTips(allTipsSorted);\n\n  // await renderTips();\n}\n\nasync function getMultis() {\n  allTipsSorted = allTips.sort(function (a, b) {\n    return b.goalDifferential - a.goalDifferential;\n  });\n\n  bestBets.sort(function (a, b) {\n    if (a.goalDifferential === b.goalDifferential) {\n      return b.comparisonScore - a.comparisonScore;\n    } else {\n      return b.goalDifferential > a.goalDifferential ? 1 : -1;\n    }\n  });\n\n  bttsArray.sort(function (a, b) {\n    return b.combinedBTTS - a.combinedBTTS;\n  });\n\n  Over25Tips.sort(function (a, b) {\n    return b.goalTotalUnrounded - a.goalTotalUnrounded;\n  });\n\n  XGDiffTips.sort(function (a, b) {\n    return Math.abs(b.XGdifferentialValue) - Math.abs(a.XGdifferentialValue);\n  });\n\n  pointsDiffTips.sort(function (a, b) {\n    return (\n      Math.abs(b.pointsDifferentialValue) - Math.abs(a.pointsDifferentialValue)\n    );\n  });\n\n  rollingDiffTips.sort(function (a, b) {\n    return Math.abs(b.rollingGoalDiffValue) - Math.abs(a.rollingGoalDiffValue);\n  });\n\n  dangerousAttacksDiffTips.sort(function (a, b) {\n    return (\n      Math.abs(b.dangerousAttacksDiffValue) -\n      Math.abs(a.dangerousAttacksDiffValue)\n    );\n  });\n\n  exoticArray = [];\n  gamesInExotic = 0;\n  exoticStake = 0;\n  exoticString = \"\";\n\n  switch (true) {\n    case allTips.length >= 10:\n      for (let i = 0; i < 10; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 10;\n      minimumExotic = 8;\n      exoticStake = 0.1;\n      exoticString = \"45 8-folds, 10 9-folds and 1 10-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 9:\n      for (let i = 0; i < 9; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 9;\n      minimumExotic = 7;\n      exoticStake = 0.1;\n      exoticString = \"36 7-folds, 9 8-folds and 1 9-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 8:\n      for (let i = 0; i < 8; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 8;\n      minimumExotic = 6;\n      exoticStake = 0.1;\n      exoticString = \"28 6-folds, 8 7-folds and 1 8-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 7:\n      for (let i = 0; i < 7; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 7;\n      minimumExotic = 6;\n      exoticStake = 1;\n      exoticString = \"7 6-folds and 1 7-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 6:\n      for (let i = 0; i < 6; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 6;\n      minimumExotic = 5;\n      exoticStake = 1;\n      exoticString = \"6 5-folds and 1 6-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 5:\n      for (let i = 0; i < 5; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 5;\n      minimumExotic = 4;\n      exoticStake = 1;\n      exoticString = \"5 4-folds and 1 5-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case Over25Tips.length >= 4:\n      for (let i = 0; i < 4; i++) {\n        let game = Over25Tips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 4;\n      minimumExotic = 3;\n      exoticStake = 1;\n      exoticString = \"4 3-folds and 1 4-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    default:\n      break;\n  }\n}\n\nexport function getAccumulatorPrice(priceArray) {\n  var result = 1;\n  for (var i = 0; i < priceArray.length; i++)\n    result = result * priceArray[i].rawOdds;\n\n  return result;\n}\n\nexport function getCoverBetMaxReturns(priceArray, minAccSize, stake) {\n  var total = 0;\n  combinations = 0;\n\n  for (var i = minAccSize; i <= priceArray.length; i++) {\n    var perms = getUniquePermutations(priceArray, i);\n    combinations = combinations + perms.length;\n\n    for (var j = 0; j < perms.length; j++)\n      total += getAccumulatorPrice(perms[j]) * stake;\n  }\n  return parseFloat(total.toFixed(2));\n}\n\nfunction getUniquePermutations(arr, permLength) {\n  if (arr.length <= permLength) return [arr];\n\n  var permutations = [];\n  var newArr = [];\n\n  newArr = arr.slice(0);\n\n  for (var i = 0; i < arr.length; i++) {\n    newArr = arr.slice(0);\n    newArr.splice(i, 1);\n    permutations = twoDimArrayUnion(\n      permutations,\n      getUniquePermutations(newArr, permLength)\n    );\n  }\n  return permutations;\n}\n\nfunction twoDimArrayUnion(arr1, arr2) {\n  for (var i = 0; i < arr2.length; i++) {\n    var duplicate = false;\n\n    for (var j = 0; j < arr1.length; j++)\n      if (arr1[j].length === arr2[i].length)\n        for (var k = 0; k < arr1[j].length; k++)\n          if (arr1[j][k] !== arr2[i][k]) break;\n          else if (k === arr1[j].length - 1) duplicate = true;\n\n    if (!duplicate) arr1.push(arr2[i]);\n  }\n\n  return arr1;\n}\n\nfunction NewlineText(props) {\n  const text = props.text;\n  const newText = text.split(\"\\n\").map((str) => <p>{str}</p>);\n\n  return newText;\n}\n\nasync function renderTips() {\n  if (newArray.length > 0) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <div className=\"BestPredictionsExplainer\">\n                  Add or remove a selection using the buttons below. Predictions\n                  are ordered by confidence in the outcome.\n                </div>\n                {newArray.map((tip) => (\n                  <li key={`${tip.game}acca`}>\n                    <div>\n                      {tip.team}: {tip.odds}{\" \"}\n                      <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                    </div>\n                    <div className=\"TipGame\">{tip.game}</div>\n                  </li>\n                ))}\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  No games fit the criteria\n                </h4>\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  }\n\n  if (exoticArray.length > 4) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Exotic of the day\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  <NewlineText\n                    text={`${gamesInExotic} games: ${exoticString}\\nStake per multi: ${exoticStake} units - ${combinations} combinations\\nTotal stake: ${(\n                      exoticStake * combinations\n                    ).toFixed(2)} unit(s)`}\n                  />\n                  {`Potential winnings: ${price.toFixed(2)} units`}\n                </h4>\n                {exoticArray.map((tip) => (\n                  <li key={tip.team}>\n                    {tip.team}: {tip.odds}{\" \"}\n                    <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                    <div>{tip.game}</div>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Exotic of the day\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  Not enough games for this feature\n                </h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  }\n\n  if (Over25Tips.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Over 2.5 goals tips\"}\n            element={\n              <ul className=\"LongshotPredictions\" id=\"LongshotPredictions\">\n                <h4>Over 2.5 goals</h4>\n                {Over25Tips.map((tip) => (\n                  <li key={tip.team}>\n                    {tip.game} - Odds: {tip.odds}{\" \"}\n                    <span className={`${tip.doubleChanceOutcome}`}>\n                      {tip.outcomeSymbol}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Over 2.5 goals tips\"}\n            element={\n              <ul className=\"LongshotPredictions\" id=\"LongshotPredictions\">\n                <h4>No games fit the criteria</h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  }\n\n  if (bttsArray.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"BTTS games\"}\n            element={\n              <ul className=\"BTTSGames\" id=\"BTTSGames\">\n                <h4>Games with highest chance of BTTS</h4>\n                {bttsArray.map((game) => (\n                  <li key={game.game}>\n                    {`${game.game} odds: ${game.bttsFraction}`}{\" \"}\n                    <span className={game.bttsOutcome}>\n                      {game.bttsOutcomeSymbol}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"BTTS games\"}\n            element={\n              <ul className=\"BTTSGames\" id=\"BTTSGames\">\n                <h4>No games fit the criteria</h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  }\n\n  ReactDOM.render(\n    <Collapsable\n      buttonText={\"XG tips\"}\n      element={\n        <Slider\n          element={\n            XGDiffTips.length > 0 ? (\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>Games with greatest XG Differentials</h4>\n                {XGDiffTips.map((tip) => (\n                  <li key={tip.game}>\n                    {tip.game} | {tip.prediction} {tip.odds}{\" \"}\n                    <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                  </li>\n                ))}\n              </ul>\n            ) : (\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>Games with greatest XG Differentials</h4>\n                <li key={\"noPPGDiff\"}>\n                  Sorry, no games fit this criteria today\n                </li>\n              </ul>\n            )\n          }\n          element2={\n            pointsDiffTips.length > 0 ? (\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>\n                  Games with greatest points per game differentials (last 10)\n                </h4>\n                {pointsDiffTips.map((game) => (\n                  <li key={game.game}>\n                    {game.game} | {game.prediction} {game.odds}{\" \"}\n                    <span className={game.outcome}>{game.outcomeSymbol}</span>\n                  </li>\n                ))}\n              </ul>\n            ) : (\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>\n                  Games with greatest points per game differentials (last 10)\n                </h4>\n                <li key={\"noPPGDiff\"}>\n                  Sorry, no games fit this criteria today\n                </li>\n              </ul>\n            )\n          }\n          element3={\n            rollingDiffTips.length > 0 ? (\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>\n                  Games with greatest rolling goal difference differentials\n                </h4>\n                {rollingDiffTips.map((game) => (\n                  <li key={game.game}>\n                    {game.game} | {game.prediction} {game.odds}{\" \"}\n                    <span className={game.outcome}>{game.outcomeSymbol}</span>\n                  </li>\n                ))}\n              </ul>\n            ) : (\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>\n                  Games with greatest rolling goal difference differentials\n                </h4>\n                <li key={\"noPPGDiff\"}>\n                  Sorry, no games fit this criteria today\n                </li>\n              </ul>\n            )\n          }\n          element4={\n            dangerousAttacksDiffTips.length > 0 ? (\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>\n                  Games with greatest average dangerous attacks differentials\n                </h4>\n                {dangerousAttacksDiffTips.map((game) => (\n                  <li key={game.game}>\n                    {game.game} | {game.prediction} {game.odds}{\" \"}\n                    <span className={game.outcome}>{game.outcomeSymbol}</span>\n                  </li>\n                ))}\n              </ul>\n            ) : (\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>\n                  Games with greatest average dangerous attacks differentials\n                </h4>\n                <li key={\"noPPGDiff\"}>\n                  Sorry, no games fit this criteria today\n                </li>\n              </ul>\n            )\n          }\n          element5={\n            <div className=\"DonationButton\">\n              <h2>Help with running costs</h2>\n              <h4>\n                Monthly costs are rising and each donation helps keep XG Tipping\n                free to use\n              </h4>\n              <StyledKofiButton buttonText=\"No sign up donation\" />\n            </div>\n          }\n        ></Slider>\n      }\n    ></Collapsable>,\n    document.getElementById(\"insights\")\n  );\n}\n","import KofiButton from \"kofi-button\"\n\nexport const StyledKofiButton = (props) => {\n  return (\n    <KofiButton className=\"kofi-button\" color=\"#030061\" title={props.buttonText} kofiID=\"H2H0AX25Z\" />\n  )\n}","import React, { useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { CreateBadge } from \"./createBadge\";\nimport { Button } from \"./Button\";\nexport var toggleState = false;\nexport var setIsOff = false;\n\nconst upArrow = \"\\u{25B2}\";\n\nconst StyledTableCell2 = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"rgba(226, 226, 226, 1)\",\n    color: \"white\",\n    padding: \"0.35em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    textAlign: \"left\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    fontSize: \"1.9em\",\n    textAlign: \"left\",\n    fontFamily: \"inherit\",\n    padding: \"0.5em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"#030061\",\n  },\n}))(TableCell);\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"white\",\n    color: \"#030061\",\n    padding: \"0.5em\",\n    paddingTop: \"1em\",\n    paddingBottom: \"1em\",\n    textAlign: \"center\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    // backgroundColor: \"#030061\",\n    fontSize: \"1.9em\",\n    textAlign: \"center\",\n    fontFamily: \"inherit\",\n    padding: \"0.35em\",\n    paddingTop: \"1em\",\n    paddingBottom: \"1em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"#030061\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#rgba(226, 226, 226, 0.424)\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#rgba(226, 226, 226, 1)\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\nfunction styleForm(formIndicator) {\n  let className;\n  if (formIndicator === \"W\") {\n    className = \"winLeague\";\n  } else if (formIndicator === \"D\") {\n    className = \"drawLeague\";\n  } else if (formIndicator === \"L\") {\n    className = \"lossLeague\";\n  }\n  return className;\n}\n\nexport default function LeagueTable(props) {\n  [toggleState, setIsOff] = useState(false);\n\n  let rows = props.Teams.map((team, i) => (\n    <StyledTableRow key={`${props.Key}row${i}`}>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${i + 1}`}\n      </StyledTableCell>\n      <StyledTableCell2 component=\"th\" scope=\"row\" style={{ width: \"15em\" }}>\n        {`${team.Name}`}\n      </StyledTableCell2>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Played}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Wins}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Draws}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Losses}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.For}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Against}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.GoalDifference}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Points}`}\n      </StyledTableCell>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ textAlign: \"center\" }}\n      >\n        <span className={styleForm(team.Form[0])}>\n          {team.Form[0] !== undefined ? team.Form[0] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[1])}>\n          {team.Form[1] !== undefined ? team.Form[1] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[2])}>\n          {team.Form[2] !== undefined ? team.Form[2] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[3])}>\n          {team.Form[3] !== undefined ? team.Form[3] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[4])}>\n          {team.Form[4] !== undefined ? team.Form[4] : \"\"}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  ));\n\n  const leagueResults = [];\n  let singleResult;\n  if (props.Results) {\n    props.Results.forEach((result) => {\n      singleResult = (\n        <div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_xg}</span>\n            <span className=\"column\">XG</span>\n            <span className=\"column\">{result.team_b_xg}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shots}</span>\n            <span className=\"column\">Shots</span>\n            <span className=\"column\">{result.team_b_shots}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shotsOnTarget}</span>\n            <span className=\"column\">SOT</span>\n            <span className=\"column\">{result.team_b_shotsOnTarget}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_dangerous_attacks}</span>\n            <span className=\"column\">Dangerous Attacks</span>\n            <span className=\"column\">{result.team_b_dangerous_attacks}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_possession}%</span>\n            <span className=\"column\">Possession</span>\n            <span className=\"column\">{result.team_b_possession}%</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_red_cards}</span>\n            <span className=\"column\">Red cards</span>\n            <span className=\"column\">{result.team_b_red_cards}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.odds_ft_1}</span>\n            <span className=\"column\">Odds (pre-match)</span>\n            <span className=\"column\">{result.odds_ft_2}</span>\n          </div>\n        </div>\n      );\n\n      leagueResults.push(\n        <Collapsable\n          classNameButton=\"ResultButton\"\n          buttonText={\n            <div className=\"ResultRowOverview\">\n              <div className=\"columnOverviewHome\">{result.home_name}</div>\n              <span className=\"columnOverviewScore\">\n                {result.homeGoalCount} : {result.awayGoalCount}\n              </span>\n              <div className=\"columnOverviewAway\">{result.away_name}</div>\n            </div>\n          }\n          element={singleResult}\n        />\n      );\n    });\n  }\n\n  const leagueResultsOlder = [];\n  if (props.LastWeeksResults) {\n    props.LastWeeksResults.forEach((result) => {\n      singleResult = (\n        <div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_xg}</span>\n            <span className=\"column\">XG</span>\n            <span className=\"column\">{result.team_b_xg}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shots}</span>\n            <span className=\"column\">Shots</span>\n            <span className=\"column\">{result.team_b_shots}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shotsOnTarget}</span>\n            <span className=\"column\">SOT</span>\n            <span className=\"column\">{result.team_b_shotsOnTarget}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_dangerous_attacks}</span>\n            <span className=\"column\">Dangerous Attacks</span>\n            <span className=\"column\">{result.team_b_dangerous_attacks}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_possession}</span>\n            <span className=\"column\">Possession</span>\n            <span className=\"column\">{result.team_b_possession}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_red_cards}</span>\n            <span className=\"column\">Red cards</span>\n            <span className=\"column\">{result.team_b_red_cards}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.odds_ft_1}</span>\n            <span className=\"column\">Odds (pre-match)</span>\n            <span className=\"column\">{result.odds_ft_2}</span>\n          </div>\n        </div>\n      );\n\n      leagueResultsOlder.push(\n        <Collapsable\n          classNameButton=\"ResultButton\"\n          buttonText={\n            <div className=\"ResultRowOverview\">\n              <div className=\"columnOverviewHome\">{result.home_name}</div>\n              <span className=\"columnOverviewScore\">\n                {result.homeGoalCount} : {result.awayGoalCount}\n              </span>\n              <div className=\"columnOverviewAway\">{result.away_name}</div>\n            </div>\n          }\n          element={singleResult}\n        />\n      );\n    });\n  }\n\n  function getTopScorersTeam(id) {\n    let found = props.Teams.find((team) => team.ID === id);\n    return found.Name;\n  }\n\n  async function sorted(league, value, order) {\n    let sortedByForm;\n    if (order === \"desc\") {\n      sortedByForm = league.sort((a, b) => b[value] - a[value]);\n    } else {\n      sortedByForm = league.sort((a, b) => a[value] - b[value]);\n    }\n    setIsOff(!toggleState);\n    return sortedByForm;\n  }\n\n  if (\n    props.GamesPlayed > 3 &&\n    props.Teams[0].LeagueID !== 7956 &&\n    props.Teams[0].LeagueID !== 6969 &&\n    props.Teams[0].LeagueID !== 7432\n  ) {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table\n            className=\"Table\"\n            aria-label=\"customized table\"\n            key={props.Key}\n            style={{ marginTop: \"2em\", marginBottom: \"1em\" }}\n          >\n            <TableHead>\n              <TableRow>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"Points\", \"desc\")}\n                  >\n                    Pts {upArrow}\n                  </button>\n                </td>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"LastXPoints\", \"desc\")}\n                  >\n                    Last 5 {upArrow}\n                  </button>\n                </td>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n          <h5>{`${props.mostRecentGameweek} results`}</h5>\n          <div className=\"ResultsList\" id=\"ResultsList\">\n            <ul>{leagueResults}</ul>\n          </div>\n          <div className=\"LeagueStatisticsHeader\">League Statistics</div>\n          <div className=\"LeagueStatistics\">\n            <ul className=\"LeagueStatsColumn\">\n              <li>Average home goals: {props.Stats.seasonAVG_home}</li>\n              <li>Average away goals: {props.Stats.seasonAVG_away}</li>\n              <li>BTTS: {props.Stats.seasonBTTSPercentage}%</li>\n              <li>\n                Over 0.5 goals: {props.Stats.seasonOver05Percentage_overall}%\n              </li>\n              <li>\n                Over 1.5 goals: {props.Stats.seasonOver15Percentage_overall}%\n              </li>\n              <li>\n                Over 2.5 goals: {props.Stats.seasonOver25Percentage_overall}%\n              </li>\n              <li>\n                Over 3.5 goals: {props.Stats.seasonOver35Percentage_overall}%\n              </li>\n              <li>\n                Over 4.5 goals: {props.Stats.seasonOver45Percentage_overall}%\n              </li>\n            </ul>\n            <ul className=\"LeagueStatsColumn\">\n              <li>\n                Over 7.5 corners: {props.Stats.over75CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 8.5 corners: {props.Stats.over85CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 9.5 corners: {props.Stats.over95CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 10.5 corners:{\" \"}\n                {props.Stats.over105CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 11.5 corners:{\" \"}\n                {props.Stats.over115CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 12.5 corners:{\" \"}\n                {props.Stats.over125CornersPercentage_overall}%\n              </li>\n              <li>Corners average: {props.Stats.cornersAVG_overall}</li>\n              <li>Cards average: {props.Stats.cardsAVG_overall}</li>\n            </ul>\n            <ul className=\"TopScorersColumn\">\n              <h4>Top scorers</h4>\n              <li>\n                {props.Stats.top_scorers[0].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[0].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[0].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[1].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[1].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[1].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[2].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[2].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[2].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[3].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[3].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[3].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[4].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[4].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[4].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[5].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[5].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[5].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[6].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[6].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[6].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[7].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[7].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[7].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[8].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[8].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[8].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[9].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[9].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[9].goals_overall}\n              </li>\n            </ul>\n          </div>\n        </TableContainer>\n      );\n    }\n  } else if (props.Teams[0].LeagueID === 4340) {\n    return null;\n  } else {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table aria-label=\"customized table\" key={props.Key}>\n            <TableHead>\n              <TableRow>\n                <button\n                  className=\"SortedColumn\"\n                  style={{ textAlign: \"center\" }}\n                  onClick={() => sorted(props.Teams, \"Position\")}\n                >\n                  {upArrow}\n                </button>{\" \"}\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <StyledTableCell>Pts</StyledTableCell>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"LastXPoints\", \"desc\")}\n                  >\n                    Last 5 {upArrow}\n                  </button>\n                </td>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n        </TableContainer>\n      );\n    }\n  }\n}\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { orderedLeagues } from \"../App\";\nimport { getForm } from \"./getForm\";\nimport { Fixture } from \"../components/Fixture\";\nimport { Button } from \"../components/Button\";\nimport { getScorePrediction } from \"../logic/getScorePredictions\";\nimport { ThreeDots } from \"react-loading-icons\";\nimport { selectedOdds } from \"../components/OddsRadio\";\nimport LeagueTable from \"../components/LeagueTable\";\nimport { getPointsFromLastX } from \"../logic/getScorePredictions\";\n\nvar oddslib = require(\"oddslib\");\n\n// require(\"dotenv\").config();\n\nvar fixtureResponse;\nvar fixtureArray = [];\nexport var matches = [];\nexport var resultedMatches = [];\nvar league;\nvar leagueID;\nvar leagueGames = [];\nexport var leagueArray = [];\nvar leagueIdArray = [];\nexport var leagueStatsArray = [];\nexport let leagueInstance;\nexport let groupInstance;\nexport let allLeagueResultsArrayOfObjects = [];\nvar lastThreeFormHome;\nvar lastThreeFormAway;\nvar lastFiveFormHome;\nvar lastFiveFormAway;\nvar lastSixFormHome;\nvar lastSixFormAway;\nvar lastTenFormHome;\nvar lastTenFormAway;\nvar leagueOrAll;\nvar formRunHome;\nvar formRunAway;\nlet WDLinLeagueHome;\nlet WDLinLeagueAway;\nlet HomeAverageGoals;\nlet homeAverageGoals;\nlet HomeAverageConceded;\nlet homeAverageConceded;\nlet AwayAverageGoals;\nlet awayAverageGoals;\nlet AwayAverageConceded;\nlet awayAverageConceded;\n\n// export var [currentDay, month, year] = new Date()\n//   .toLocaleDateString(\"en-US\", { timeZone: \"Europe/London\" })\n//   .split(\"/\");\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nexport let allForm = [];\nexport let tableArray = [];\nexport let worldCupArray = [];\ngroupInstance = [];\nleagueInstance = [];\n\nasync function convertTimestamp(timestamp) {\n  let newDate = new Date(timestamp * 1000);\n  let [day, month, year] = newDate.toLocaleDateString(\"en-US\").split(\"/\");\n\n  let converted = `${year}-${day}-${month}`;\n\n  return converted;\n}\n\nexport async function generateTables(a, leagueIdArray, allResults) {\n  // leagueIdArray = [];\n  tableArray = [];\n  worldCupArray = [];\n  let i = 0;\n  leagueArray.forEach(function (league) {\n    let currentLeagueId = leagueIdArray[i];\n    i++;\n    leagueInstance = [];\n    //Skip MLS which has a weird format\n    if (\n      !league.data.specific_tables[0].groups &&\n      currentLeagueId !== 6969 &&\n      league.data.specific_tables[0].table\n    ) {\n      for (\n        let index = 0;\n        index < league.data.specific_tables[0].table.length;\n        index++\n      ) {\n        let currentTeam = league.data.specific_tables[0].table[index];\n        let last5;\n        if (currentTeam.wdl_record.length < 5) {\n          last5 = currentTeam.wdl_record\n            .slice(`-${currentTeam.wdl_record.length}`)\n            .toUpperCase();\n        } else {\n          last5 = currentTeam.wdl_record.slice(-5).toUpperCase();\n        }\n\n        const team = {\n          LeagueID: currentLeagueId,\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          ID: currentTeam.id,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: last5,\n          LastXPoints: getPointsFromLastX(last5.split(\"\")),\n          Points: currentTeam.points,\n          wdl: currentTeam.wdl_record,\n          seasonGoals: currentTeam.seasonGoals,\n          seasonConceded: currentTeam.seasonConceded,\n        };\n        leagueInstance.push(team);\n      }\n      tableArray.push({ id: currentLeagueId, table: leagueInstance });\n    } else if (currentLeagueId === 7432) {\n      // for (let x = 0; x < league.data.specific_tables[0].groups.length; x++) {\n      // for (\n      //   let index = 0;\n      //   index < league.data.specific_tables[0].groups[x].table.length;\n      //   index++\n      // )\n      league.data.specific_tables[0].groups.forEach((group) => {\n        leagueInstance = [];\n        for (let index = 0; index < group.table.length; index++) {\n          let currentTeam = group.table[index];\n          let last5 = \"N/A\";\n          const team = {\n            LeagueID: currentLeagueId,\n            Position: index + 1,\n            Name: currentTeam.cleanName,\n            ID: currentTeam.id,\n            Played: currentTeam.matchesPlayed,\n            Wins: currentTeam.seasonWins_overall,\n            Draws: currentTeam.seasonDraws_overall,\n            Losses: currentTeam.seasonLosses_overall,\n            For: currentTeam.seasonGoals,\n            Against:\n              currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n            GoalDifference: currentTeam.seasonGoalDifference,\n            Form: last5,\n            LastXPoints: getPointsFromLastX(last5.split(\"\")),\n            Points: currentTeam.points,\n            wdl: currentTeam.wdl_record,\n            seasonGoals: currentTeam.seasonGoals,\n            seasonConceded: currentTeam.seasonConceded,\n          };\n          leagueInstance.push(team);\n        }\n        worldCupArray.push({\n          group: group.name,\n          table: leagueInstance,\n        });\n      });\n    } else if (league.data.league_table === null) {\n      for (\n        let index = 0;\n        index < league.data.all_matches_table_overall.length;\n        index++\n      ) {\n        let currentTeam = league.data.all_matches_table_overall[index];\n        let last5 = \"N/A\";\n        const team = {\n          LeagueID: currentLeagueId,\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          ID: currentTeam.id,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: last5,\n          LastXPoints: getPointsFromLastX(last5.split(\"\")),\n          Points: currentTeam.points,\n          wdl: currentTeam.wdl_record,\n          seasonGoals: currentTeam.seasonGoals,\n          seasonConceded: currentTeam.seasonConceded,\n        };\n        leagueInstance.push(team);\n      }\n\n      tableArray.push({ id: currentLeagueId, table: leagueInstance });\n    }\n  });\n}\n\nasync function getTableLayout(arr, statistics) {\n  let tableArray = [];\n  for (let i = 0; i < arr.length; i++) {\n    tableArray.push(\n      <LeagueTable\n        Teams={arr[i].table}\n        Key={`Group${arr[i].group}`}\n        Stats={statistics}\n        GamesPlayed={statistics.game_week}\n      />\n    );\n  }\n  return tableArray;\n}\n\nasync function sorted(league) {\n  const sortedByForm = league.sort((a, b) => b.LastXPoints - a.LastXPoints);\n  return sortedByForm;\n}\n\nexport async function renderTable(index, results, id) {\n  let league;\n  //World cup table rendering\n\n  // let mostRecentGame = results.fixtures.pop();\n  let mostRecentGame = results.fixtures.pop();\n\n  let mostRecentGameweek = \"Latest\";\n\n  const gameweeksResults = results.fixtures.filter(\n    (games) => games.game_week === mostRecentGame.game_week\n  );\n\n  // const lastGameweeksResults = results.fixtures.filter(\n  //   (games) => games.game_week === mostRecentGameweek - 1\n  // );\n\n  const leagueTable = tableArray.filter((table) => table.id === id);\n\n  league = leagueTable[0].table;\n\n  let statistics;\n  let leagueStatistics = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}leagueStats/${id}`\n  );\n  await leagueStatistics.json().then((stats) => {\n    statistics = stats.data;\n  });\n\n  if (league !== undefined) {\n    ReactDOM.render(\n      <LeagueTable\n        Teams={league}\n        Stats={statistics}\n        Key={`League${index}`}\n        GamesPlayed={statistics.game_week}\n        Results={gameweeksResults}\n        mostRecentGameweek={mostRecentGameweek}\n      />,\n      document.getElementById(`leagueName${id}`)\n    );\n  }\n}\n\nasync function createFixture(match, result, mockBool) {\n  let roundedHomeOdds;\n  let roundedAwayOdds;\n  let roundedBTTSOdds;\n  let homeFraction;\n  let awayFraction;\n  let bttsFraction;\n\n  if (selectedOdds === \"Fractional odds\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      roundedHomeOdds = (Math.round(match.homeOdds * 5) / 5).toFixed(1);\n      roundedAwayOdds = (Math.round(match.awayOdds * 5) / 5).toFixed(1);\n\n      if (roundedHomeOdds < 1.1) {\n        roundedHomeOdds = 1.1;\n      }\n      if (roundedAwayOdds < 1.1) {\n        roundedAwayOdds = 1.1;\n      }\n\n      if (match.homeOdds === 0.1 && match.awayOdds === 0.1) {\n        match.homeOdds = 3;\n        roundedHomeOdds = 3;\n        match.awayOdds = 3;\n        roundedAwayOdds = 3;\n      }\n\n      try {\n        homeFraction = oddslib\n          .from(\"decimal\", roundedHomeOdds)\n          .to(\"fractional\", { precision: 1 });\n        awayFraction = oddslib\n          .from(\"decimal\", roundedAwayOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      roundedBTTSOdds = (Math.round(match.bttsOdds * 5) / 5).toFixed(1);\n\n      if (roundedBTTSOdds < 1.1) {\n        roundedBTTSOdds = 1.1;\n      }\n\n      try {\n        bttsFraction = oddslib\n          .from(\"decimal\", roundedBTTSOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  } else if (selectedOdds === \"Decimal odds\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      homeFraction = match.homeOdds;\n      awayFraction = match.awayOdds;\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      bttsFraction = match.bttsOdds;\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  }\n\n  match.homeTeamWinsPercentage = match.homeTeamWinPercentage;\n  match.homeTeamLossesPercentage = match.homeTeamLossPercentage;\n  match.homeTeamDrawsPercentage = match.homeTeamDrawPercentage;\n\n  match.awayTeamWinsPercentage = match.awayTeamWinPercentage;\n  match.awayTeamLossesPercentage = match.awayTeamLossPercentage;\n  match.awayTeamDrawsPercentage = match.awayTeamDrawPercentage;\n  match.fractionHome = homeFraction;\n  match.fractionAway = awayFraction;\n\n  match.bttsFraction = bttsFraction;\n\n  match.game = match.homeTeam + \" v \" + match.awayTeam;\n\n  // ReactDOM.render(\n  //   <Fixture\n  //     fixtures={matches}\n  //     result={result}\n  //     mock={mockBool}\n  //     className={\"individualFixture\"}\n  //   />,\n  //   document.getElementById(\"FixtureContainer\")\n  // );\n}\n\nexport function RenderAllFixtures(props) {\n  return (\n    <Fixture\n      fixtures={props.matches}\n      result={props.result}\n      mock={false}\n      className={\"individualFixture\"}\n    />\n  );\n}\n//     document.getElementById(\"FixtureContainer\")\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nlet isFunctionRunning = false;\n\nexport async function generateFixtures(\n  day,\n  date,\n  selectedOdds,\n  footyStatsFormattedDate,\n  current,\n  todaysDate\n) {\n  if (!isFunctionRunning) {\n    isFunctionRunning = true;\n\n    const randomInt = Math.random() * 10\n\n    if(randomInt >= 7){\n      alert(\"XGTipping is now serving over 2000 users a month, relying on donations to cover increasing running costs. If you can afford to do so and like what we do, please, help us stay subscription fee today by tapping to Donation button at the bottom of the page\")\n    }\n\n    ReactDOM.render(\n      <div>\n        <div className=\"LoadingText\">\n          Loading all league, fixture & form data, please be patient...\n        </div>\n        <ThreeDots height=\"3em\" fill=\"#030061\" />\n      </div>,\n      document.getElementById(\"Loading\")\n    );\n\n    //cleanup if different day is selected\n    ReactDOM.render(\n      <div></div>,\n      document.getElementById(\"GeneratePredictions\")\n    );\n    ReactDOM.render(<div></div>, document.getElementById(\"successMeasure2\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"bestPredictions\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"exoticOfTheDay\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"insights\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"longShots\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"BTTS\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"draws\"));\n\n    const url = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${footyStatsFormattedDate}`;\n    const formUrl = `${process.env.REACT_APP_EXPRESS_SERVER}form/${date}`;\n\n    matches = [];\n    fixtureArray = [];\n\n    league = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${todaysDate}`\n    );\n\n    ReactDOM.render(<div></div>, document.getElementById(\"FixtureContainer\"));\n\n    fixtureResponse = await fetch(url);\n\n    await fixtureResponse.json().then((fixtures) => {\n      fixtureArray = Array.from(fixtures.data);\n    });\n\n    let form;\n    let formArray = [];\n    allForm = [];\n    var isFormStored;\n    var isStoredLocally;\n    var leaguesStored = false;\n    let storedForm = await fetch(formUrl);\n    if (storedForm.status === 201 || storedForm.status === 200) {\n      await storedForm.json().then((form) => {\n        formArray = Array.from(form.allForm);\n        isFormStored = true;\n        isStoredLocally = true;\n        allForm = formArray;\n      });\n    } else {\n      isFormStored = false;\n      isStoredLocally = false;\n    }\n\n    leagueIdArray = [];\n    for (let i = 0; i < orderedLeagues.length; i++) {\n      leagueID = orderedLeagues[i].element.id;\n      leagueIdArray.push(leagueID);\n    }\n\n    var leaguePositions = [];\n    leagueArray = [];\n\n    if (league.status === 200) {\n      console.log(\"Not fetching leagues\");\n      await league.json().then((leagues) => {\n        leagueArray = Array.from(leagues.leagueArray);\n      });\n      let allLeagueResults;\n      updateResults(false);\n\n      allLeagueResults = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}results`\n      );\n\n      await allLeagueResults.json().then((allGames) => {\n        allLeagueResultsArrayOfObjects = Array.from(allGames);\n      });\n\n      leaguesStored = true;\n      generateTables(\n        leagueArray,\n        leagueIdArray,\n        allLeagueResultsArrayOfObjects\n      );\n    } else {\n      allLeagueResultsArrayOfObjects = [];\n      console.log(\"Fetching leagues\");\n      for (let i = 0; i < orderedLeagues.length; i++) {\n        league = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}tables/${orderedLeagues[i].element.id}/${date}`\n        );\n        // eslint-disable-next-line no-loop-func\n        await league.json().then((table) => {\n          leagueArray.push(table);\n        });\n        leaguesStored = false;\n      }\n\n      //set variable for date X amount of days in the past and use that to filter the results\n\n      let startDate = (new Date().getTime() / 1000).toFixed(0);\n      // deduct 3 months\n      let targetDate = startDate - 15778463;\n\n      for (const orderedLeague of orderedLeagues) {\n        let fixtures = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${orderedLeague.element.id}`\n        );\n\n        let games = await fixtures.json();\n        let gamesFiltered = games.data.filter(\n          (game) => game.status === \"complete\"\n        );\n\n        if (current) {\n          let mostRecentResults = gamesFiltered.filter(\n            (game) => game.date_unix > targetDate\n          );\n          gamesFiltered = mostRecentResults;\n        }\n\n        // let mostRecentResults = gamesFiltered.filter(\n        //   (game) => game.date_unix > targetDate\n        // );\n\n        const shortenedResults = gamesFiltered.map(\n          ({\n            home_name,\n            away_name,\n            homeGoalCount,\n            awayGoalCount,\n            date_unix,\n            team_a_xg,\n            team_b_xg,\n            odds_ft_1,\n            odds_ft_2,\n            team_a_shots,\n            team_b_shots,\n            team_a_corners,\n            team_b_corners,\n            team_a_shotsOnTarget,\n            team_b_shotsOnTarget,\n            team_a_red_cards,\n            team_b_red_cards,\n            team_a_possession,\n            team_b_possession,\n            team_a_dangerous_attacks,\n            team_b_dangerous_attacks,\n            pre_match_teamA_overall_ppg,\n            pre_match_teamB_overall_ppg,\n            game_week,\n          }) => ({\n            home_name,\n            away_name,\n            homeGoalCount,\n            awayGoalCount,\n            date_unix,\n            team_a_xg,\n            team_b_xg,\n            odds_ft_1,\n            odds_ft_2,\n            team_a_shots,\n            team_b_shots,\n            team_a_corners,\n            team_b_corners,\n            team_a_shotsOnTarget,\n            team_b_shotsOnTarget,\n            team_a_red_cards,\n            team_b_red_cards,\n            team_a_possession,\n            team_b_possession,\n            team_a_dangerous_attacks,\n            team_b_dangerous_attacks,\n            pre_match_teamA_overall_ppg,\n            pre_match_teamB_overall_ppg,\n            game_week,\n          })\n        );        \n\n        let leagueObj = {\n          // leagueObject[orderedLeague] = {\n          name: orderedLeague.name,\n          id: orderedLeague.element.id,\n          fixtures: shortenedResults,\n        };\n\n        allLeagueResultsArrayOfObjects.push(leagueObj);\n      }\n      updateResults(true);\n      generateTables(\n        leagueArray,\n        leagueIdArray,\n        allLeagueResultsArrayOfObjects\n      );\n    }\n\n    let teamPositionPrefix;\n\n    async function getPrefix(position) {\n      switch (position) {\n        case 1:\n        case 21:\n        case 31:\n        case 41:\n          teamPositionPrefix = \"st\";\n          break;\n        case 2:\n        case 22:\n        case 32:\n        case 42:\n          teamPositionPrefix = \"nd\";\n          break;\n        case 3:\n        case 23:\n        case 33:\n        case 43:\n          teamPositionPrefix = \"rd\";\n          break;\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18:\n        case 19:\n        case 20:\n        case 24:\n        case 25:\n        case 26:\n        case 27:\n        case 28:\n        case 29:\n        case 30:\n        case 34:\n        case 35:\n        case 36:\n        case 37:\n        case 38:\n        case 39:\n        case 40:\n        case 44:\n        case 45:\n        case 46:\n        case 47:\n        case 48:\n          teamPositionPrefix = \"th\";\n          break;\n        default:\n          break;\n      }\n      return teamPositionPrefix;\n    }\n\n    for (let i = 0; i < leagueArray.length; i++) {\n      let leagueInstance;\n      let homeLeague;\n      let awayLeague;\n\n      if (leagueArray[i].data.league_table !== null) {\n        leagueInstance = leagueArray[i].data.league_table;\n        homeLeague = leagueArray[i].data.all_matches_table_home;\n        awayLeague = leagueArray[i].data.all_matches_table_away;\n      } else {\n        leagueInstance = leagueArray[i].data.all_matches_table_overall;\n        homeLeague = leagueArray[i].data.all_matches_table_home;\n        awayLeague = leagueArray[i].data.all_matches_table_away;\n      }\n\n      for (let x = 0; x < leagueInstance.length; x++) {\n        let regularSeason = leagueArray[i].data.specific_tables.find(\n          (season) =>\n            season.round === \"Regular Season\" ||\n            season.round === \"2023\" ||\n            season.round === \"2023/2024\" ||\n            season.round === \"Apertura\" ||\n            season.round === \"1st Phase\"\n          // season.round === \"North\" ||\n          // season.round === \"South\"\n        );\n        let string;\n\n        if (regularSeason !== undefined && regularSeason.table) {\n          string = regularSeason.table[x];\n          homeLeague = leagueArray[i].data.all_matches_table_home;\n          awayLeague = leagueArray[i].data.all_matches_table_away;\n        } else {\n          string = leagueArray[i].data.all_matches_table_overall[x];\n          homeLeague = leagueArray[i].data.all_matches_table_home;\n          awayLeague = leagueArray[i].data.all_matches_table_away;\n        }\n\n        let stringHome = homeLeague[x];\n        let stringAway = awayLeague[x];\n\n        leaguePositions.push({\n          name: string.cleanName,\n          position: x + 1,\n          rawPosition: x + 1,\n          homeFormName: stringHome ? stringHome.cleanName : string.cleanName,\n          awayFormName: stringAway ? stringAway.cleanName : string.cleanName,\n          homeSeasonWinPercentage: stringHome\n            ? stringHome.seasonWins\n            : string.seasonWins,\n          awaySeasonWinPercentage: stringAway\n            ? stringAway.seasonWins\n            : string.seasonWins,\n          homeSeasonLossPercentage: stringHome\n            ? stringHome.seasonLosses_home\n            : string.seasonLosses_home,\n          awaySeasonLossPercentage: stringAway\n            ? stringAway.seasonLosses_away\n            : string.seasonLosses_away,\n          homeSeasonDrawPercentage: stringHome\n            ? stringHome.seasonDraws\n            : string.seasonDraws,\n          awaySeasonDrawPercentage: stringAway\n            ? stringAway.seasonDraws\n            : string.seasonDraws,\n          homeSeasonMatchesPlayed: stringHome\n            ? stringHome.matchesPlayed\n            : string.matchesPlayed,\n          awaySeasonMatchesPlayed: stringAway\n            ? stringAway.matchesPlayed\n            : string.matchesPlayed,\n          ppg: string.points / string.matchesPlayed,\n          wdl: string.wdl_record ? string.wdl_record : \"\",\n          played: string.matchesPlayed,\n          seasonGoals: string.seasonGoals,\n          seasonConceded: string.seasonConceded,\n        });\n      }\n    }\n\n    let previousLeagueName;\n    const val = \"prediction\";\n    const exists =\n      matches.filter(function (o) {\n        return o.hasOwnProperty(val);\n      }).length > 0;\n\n    for (let i = 0; i < orderedLeagues.length; i++) {\n      leagueID = orderedLeagues[i].element.id;\n      leagueGames = fixtureArray.filter(\n        (game) => game.competition_id === orderedLeagues[i].element.id\n      );\n\n      for (const fixture of leagueGames) {\n        const unixTimestamp = fixture.date_unix;\n        const milliseconds = unixTimestamp * 1000;\n        const dateObject = new Date(milliseconds);\n\n        let match = {};\n        if (orderedLeagues[i].name !== previousLeagueName) {\n          match.leagueName = orderedLeagues[i].name;\n          match.leagueIndex = i;\n          match.leagueID = leagueID;\n        } else {\n          match.leagueName = null;\n          match.leagueIndex = i;\n          match.leagueID = leagueID;\n        }\n        match.id = fixture.id;\n        match.competition_id = fixture.competition_id;\n        match.date = fixture.date_unix;\n        match.time = dateObject.toLocaleString(\"en-GB\", {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n        });\n        match.homeTeam = fixture.home_name;\n        match.awayTeam = fixture.away_name;\n        match.homeOdds = +(fixture.odds_ft_1 + 0.1).toFixed(2);\n        match.awayOdds = +(fixture.odds_ft_2 + 0.1).toFixed(2);\n        match.drawOdds = +(fixture.odds_ft_x + 0.1).toFixed(2);\n        match.homeDoubleChance = fixture.odds_doublechance_1x;\n        match.awayDoubleChance = fixture.odds_doublechance_x2;\n        match.bttsOdds = fixture.odds_btts_yes;\n        match.homeId = fixture.homeID;\n        match.awayId = fixture.awayID;\n        match.form = [];\n        match.homeTeamInfo = [];\n        match.awayTeamInfo = [];\n        match.btts = false;\n\n        previousLeagueName = orderedLeagues[i].name;\n\n        let homeTeaminLeague;\n        let awayTeaminLeague;\n        let teamPositionHome;\n        let teamPositionHomeTable;\n        let teamPositionAwayTable;\n        let homeTeamWinPercentageHome;\n        let awayTeamWinPercentageAway;\n        let homeTeamLossPercentageHome;\n        let awayTeamLossPercentageAway;\n        let homeTeamDrawPercentageHome;\n        let awayTeamDrawPercentageAway;\n        let teamPositionAway;\n        let homePrefix;\n        let homePrefixHomeTable;\n        let awayPrefix;\n        let awayPrefixAwayTable;\n        let homeSeasonPPG;\n        let awaySeasonPPG;\n\n        try {\n          homeTeaminLeague = leaguePositions.find(\n            (team) => team.name === match.homeTeam\n          );\n\n          let homeTeaminHomeLeague = leaguePositions.find(\n            (team) => team.homeFormName === match.homeTeam\n          );\n          teamPositionHome = homeTeaminLeague.position;\n          teamPositionHomeTable = homeTeaminHomeLeague.position;\n\n          WDLinLeagueHome = Array.from(homeTeaminLeague.wdl.toUpperCase());\n          HomeAverageGoals =\n            homeTeaminLeague.seasonGoals / homeTeaminLeague.played;\n          HomeAverageConceded =\n            homeTeaminLeague.seasonConceded / homeTeaminLeague.played;\n\n          homeTeamWinPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonWinPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homeTeamLossPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonLossPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homeTeamDrawPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonDrawPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homePrefix = await getPrefix(teamPositionHome);\n          homePrefixHomeTable = await getPrefix(teamPositionHomeTable);\n\n          homeSeasonPPG = homeTeaminLeague.ppg.toFixed(2);\n        } catch (error) {\n          console.log(error);\n          teamPositionHome = \"N/A\";\n          homePrefix = \"\";\n          homePrefixHomeTable = \"\";\n          homeSeasonPPG = \"N/A\";\n          homeTeaminLeague = {\n            rawPosition: \"N/A\",\n          };\n          WDLinLeagueHome = \"N/A\";\n        }\n\n        try {\n          awayTeaminLeague = leaguePositions.find(\n            (team) => team.name === match.awayTeam\n          );\n\n          let awayTeaminAwayLeague = leaguePositions.find(\n            (team) => team.awayFormName === match.awayTeam\n          );\n\n          teamPositionAway = awayTeaminLeague.position;\n          teamPositionAwayTable = awayTeaminAwayLeague.position;\n\n          WDLinLeagueAway = Array.from(awayTeaminLeague.wdl.toUpperCase());\n          AwayAverageGoals =\n            awayTeaminLeague.seasonGoals / awayTeaminLeague.played;\n          AwayAverageConceded =\n            awayTeaminLeague.seasonConceded / awayTeaminLeague.played;\n\n          awayTeamWinPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonWinPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayTeamLossPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonLossPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayTeamDrawPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonDrawPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayPrefix = await getPrefix(teamPositionAway);\n          awayPrefixAwayTable = await getPrefix(teamPositionAwayTable);\n\n          awaySeasonPPG = awayTeaminLeague.ppg.toFixed(2);\n        } catch (error) {\n          console.log(error);\n          teamPositionAway = \"N/A\";\n          awayPrefix = \"\";\n          awaySeasonPPG = \"N/A\";\n          awayTeaminLeague = {\n            rawPosition: \"N/A\",\n          };\n          WDLinLeagueAway = \"N/A\";\n        }\n\n        if (!isFormStored) {\n          form = await getForm(match);\n\n          let homeFormString5 =\n            form[0].data[0].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString5 =\n            form[1].data[0].stats.additional_info.formRun_overall.toUpperCase();\n          let homeFormString6 =\n            form[0].data[1].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString6 =\n            form[1].data[1].stats.additional_info.formRun_overall.toUpperCase();\n          let homeFormString10 =\n            form[0].data[2].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString10 =\n            form[1].data[2].stats.additional_info.formRun_overall.toUpperCase();\n\n          let homeFormRun =\n            form[0].data[2].stats.additional_info.formRun_home.toUpperCase();\n          let awayFormRun =\n            form[1].data[2].stats.additional_info.formRun_away.toUpperCase();\n\n          if (WDLinLeagueHome.length >= 10) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = WDLinLeagueHome.slice(-6);\n            lastTenFormHome = WDLinLeagueHome.slice(-10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = WDLinLeagueAway.slice(-6);\n            lastTenFormAway = WDLinLeagueAway.slice(-10);\n            leagueOrAll = \"League\";\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else if (WDLinLeagueHome.length >= 6) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = WDLinLeagueHome.slice(-6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = WDLinLeagueAway.slice(-6);\n            lastTenFormAway = Array.from(awayFormString10);\n            leagueOrAll = \"League\";\n\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else if (WDLinLeagueHome.length >= 5) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = Array.from(homeFormString6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = Array.from(awayFormString6);\n            lastTenFormAway = Array.from(awayFormString10);\n            leagueOrAll = \"League\";\n\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else {\n            lastThreeFormHome = [\n              homeFormString5[2],\n              homeFormString5[3],\n              homeFormString5[4],\n            ];\n            lastFiveFormHome = Array.from(homeFormString5);\n            lastSixFormHome = Array.from(homeFormString6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = [\n              awayFormString5[2],\n              awayFormString5[3],\n              awayFormString5[4],\n            ];\n\n            lastFiveFormAway = Array.from(awayFormString5);\n            lastSixFormAway = Array.from(awayFormString6);\n            lastTenFormAway = Array.from(awayFormString10);\n\n            leagueOrAll = \"All\";\n\n            homeAverageGoals = undefined;\n            homeAverageConceded = undefined;\n            awayAverageGoals = undefined;\n            awayAverageConceded = undefined;\n          }\n\n          formRunHome = Array.from(homeFormRun);\n          formRunAway = Array.from(awayFormRun);\n\n          if (\n            teamPositionHome === 0 ||\n            form[0].data[0].season_format !== \"Domestic League\"\n          ) {\n            teamPositionHome = \"N/A\";\n            teamPositionHomeTable = \"N/A\";\n            homePrefix = \"\";\n            homePrefixHomeTable = \"\";\n          }\n\n          if (\n            teamPositionAway === 0 ||\n            form[0].data[0].season_format !== \"Domestic League\"\n          ) {\n            teamPositionAway = \"N/A\";\n            teamPositionAwayTable = \"N/A\";\n            awayPrefix = \"\";\n            awayPrefixAwayTable = \"\";\n          }\n\n          allForm.push({\n            id: match.id,\n            teamIDHome: match.homeId,\n            teamIDAway: match.awayId,\n            leagueId: leagueID,\n            home: {\n              teamName: match.homeTeam,\n              0: {\n                XGOverall: parseFloat(form[0].data[0].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[0].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[0].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[0].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[0].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[0].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[0].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[0].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[0].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[0].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[0].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[0].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[0].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[0].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[0].stats.shotsOnTargetAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[0].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[0].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[0].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[0].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[0].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[0].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[0].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[0].stats.seasonBTTSPercentage_home\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition: homeTeaminLeague.rawPosition\n                  ? homeTeaminLeague.rawPosition\n                  : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n              1: {\n                XGOverall: parseFloat(form[0].data[1].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[1].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[1].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[1].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[1].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[1].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[1].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[1].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[1].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[1].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[1].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[1].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[1].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[1].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[1].stats.shotsOnTargetAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[1].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[1].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[1].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[1].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[1].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[1].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[1].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[1].stats.seasonBTTSPercentage_home\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition: homeTeaminLeague.rawPosition\n                  ? homeTeaminLeague.rawPosition\n                  : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n              2: {\n                XGOverall: parseFloat(form[0].data[2].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[2].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[2].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[2].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[2].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[2].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[2].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[2].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[2].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[2].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[2].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[2].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[2].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[2].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[2].stats.shotsOnTargetAVG_home\n                ),\n                AverageShots: parseFloat(\n                  form[0].data[2].stats.shotsAVG_overall\n                ),\n                AverageShotsHomeOrAway: parseFloat(\n                  form[0].data[2].stats.shotsAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[2].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[2].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[2].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[2].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[2].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[2].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[2].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[2].stats.seasonBTTSPercentage_home\n                ),\n                lastThreeForm: lastThreeFormHome,\n                LastFiveForm: lastFiveFormHome,\n                LastSixForm: lastSixFormHome,\n                LastTenForm: lastTenFormHome,\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition: homeTeaminLeague.rawPosition\n                  ? homeTeaminLeague.rawPosition\n                  : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                SeasonPPG: homeSeasonPPG,\n                WinPercentage: homeTeamWinPercentageHome,\n                LossPercentage: homeTeamLossPercentageHome,\n                DrawPercentage: homeTeamDrawPercentageHome,\n                formRun: formRunHome,\n                goalDifference:\n                  form[0].data[2].stats.seasonGoalDifference_overall,\n                goalDifferenceHomeOrAway:\n                  form[0].data[2].stats.seasonGoalDifference_home,\n                BttsPercentage:\n                  form[0].data[2].stats.seasonBTTSPercentage_overall,\n                BttsPercentageHomeOrAway:\n                  form[0].data[2].stats.seasonBTTSPercentage_home,\n                CardsTotal: form[0].data[2].stats.cardsTotal_overall,\n                CornersAverage: form[0].data[2].stats.cornersAVG_overall,\n                ScoredBothHalvesPercentage:\n                  form[0].data[2].stats.scoredBothHalvesPercentage_overall,\n                LastMatch: await convertTimestamp(\n                  form[0].data[0].last_updated_match_timestamp\n                ),\n                WDLRecord: WDLinLeagueHome,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n            },\n            away: {\n              teamName: match.awayTeam,\n              0: {\n                XGOverall: parseFloat(form[1].data[0].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[0].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[0].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[0].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[0].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[0].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[0].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[0].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[0].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[0].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[0].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[0].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[0].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[0].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[0].stats.shotsOnTargetAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[0].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[0].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[0].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[0].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[0].stats.seasonBTTSPercentage_away\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n              1: {\n                XGOverall: parseFloat(form[1].data[1].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[1].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[1].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[1].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[1].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[1].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[1].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[1].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[1].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[1].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[1].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[1].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[1].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[1].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[1].stats.shotsOnTargetAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[1].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[1].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[1].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[1].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[1].stats.seasonBTTSPercentage_away\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n              2: {\n                XGOverall: parseFloat(form[1].data[2].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[2].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[2].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[2].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[2].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[2].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[2].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[2].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[2].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[2].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[2].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[2].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[2].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[2].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[2].stats.shotsOnTargetAVG_away\n                ),\n                AverageShots: parseFloat(\n                  form[1].data[2].stats.shotsAVG_overall\n                ),\n                AverageShotsHomeOrAway: parseFloat(\n                  form[1].data[2].stats.shotsAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[2].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[2].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[2].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[2].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[2].stats.seasonBTTSPercentage_away\n                ),\n                lastThreeForm: lastThreeFormAway,\n                LastFiveForm: lastFiveFormAway,\n                LastSixForm: lastSixFormAway,\n                LastTenForm: lastTenFormAway,\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                SeasonPPG: awaySeasonPPG,\n                WinPercentage: awayTeamWinPercentageAway,\n                LossPercentage: awayTeamLossPercentageAway,\n                DrawPercentage: awayTeamDrawPercentageAway,\n                formRun: formRunAway,\n                goalDifference:\n                  form[1].data[2].stats.seasonGoalDifference_overall,\n                goalDifferenceHomeOrAway:\n                  form[1].data[2].stats.seasonGoalDifference_away,\n                BttsPercentage:\n                  form[1].data[2].stats.seasonBTTSPercentage_overall,\n                BttsPercentageHomeOrAway:\n                  form[1].data[2].stats.seasonBTTSPercentage_away,\n                CardsTotal: form[1].data[2].stats.cardsTotal_overall,\n                CornersAverage: form[1].data[2].stats.cornersAVG_overall,\n                ScoredBothHalvesPercentage:\n                  form[1].data[2].stats.scoredBothHalvesPercentage_overall,\n                LastMatch: await convertTimestamp(\n                  form[1].data[0].last_updated_match_timestamp\n                ),\n                WDLRecord: WDLinLeagueAway,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n            },\n          });\n        }\n\n        match.homeBadge = fixture.home_image;\n        match.awayBadge = fixture.away_image;\n\n        match.homePpg = fixture.home_ppg.toFixed(2);\n        match.awayPpg = fixture.away_ppg.toFixed(2);\n\n        match.lastFiveFormHome = lastFiveFormHome;\n        match.lastFiveFormAway = lastFiveFormAway;\n\n        match.homeRawPosition = homeTeaminLeague.rawPosition;\n        match.awayRawPosition = awayTeaminLeague.rawPosition;\n\n        match.homeTeamHomePosition = `${teamPositionHomeTable}${homePrefixHomeTable}`;\n        match.awayTeamAwayPosition = `${teamPositionAwayTable}${awayPrefixAwayTable}`;\n\n        match.homeTeamHomePositionRaw = teamPositionHomeTable;\n        match.awayTeamAwayPositionRaw = teamPositionAwayTable;\n\n        match.homeTeamWinPercentage = homeTeamWinPercentageHome;\n        match.awayTeamWinPercentage = awayTeamWinPercentageAway;\n\n        match.homeTeamLossPercentage = homeTeamLossPercentageHome;\n        match.awayTeamLossPercentage = awayTeamLossPercentageAway;\n\n        match.homeTeamDrawPercentage = homeTeamDrawPercentageHome;\n        match.awayTeamDrawPercentage = awayTeamDrawPercentageAway;\n        match.status = fixture.status;\n        match.over25Odds = fixture.odds_ft_over25;\n        match.btts_potential = fixture.btts_potential;\n        match.game = match.homeTeam + \" v \" + match.awayTeam;\n        match.stadium = fixture.stadium_name;\n        match.homeGoals = fixture.homeGoalCount;\n        match.awayGoals = fixture.awayGoalCount;\n\n        match.expectedGoalsHomeToDate = fixture.team_a_xg_prematch;\n        match.expectedGoalsAwayToDate = fixture.team_b_xg_prematch;\n        match.game_week = fixture.game_week;\n\n        if (match.status !== \"canceled\" || match.status !== \"suspended\") {\n          matches.push(match);\n          await createFixture(match, false);\n        }\n      }\n\n      if (matches.length > 0) {\n        ReactDOM.render(\n          <Fragment>\n            <Button\n              text={\"Get Predictions & League stats\"}\n              onClickEvent={() => getScorePrediction(day)}\n              className={\"GeneratePredictions\"}\n            />\n            <div className=\"Version\">Prediction engine v3.0.11 (21/10/23)</div>\n          </Fragment>,\n          document.getElementById(\"GeneratePredictions\")\n        );\n      }\n\n      // }\n    }\n\n    ReactDOM.render(\n      <div>\n        <div className=\"LoadingText\"></div>\n      </div>,\n      document.getElementById(\"Loading\")\n    );\n\n    async function updateResults(bool) {\n      console.log(\"updating results\");\n      if (allLeagueResultsArrayOfObjects.length > 0 && bool === true) {\n        await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}results`, {\n          method: \"DELETE\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }).then(async () => {\n          await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}results`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(allLeagueResultsArrayOfObjects),\n          });\n        });\n      }\n      else {\n        console.log(\"EMPTY RESULTS\");\n        console.log(allLeagueResultsArrayOfObjects)\n      }\n    }\n\n    if (!isStoredLocally) {\n      await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}allForm/${date}`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ allForm }),\n      });\n      await updateResults(true);\n    }\n    console.log(leaguesStored);\n    console.log(leagueArray)\n    if (!leaguesStored) {\n      await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${todaysDate}`,\n        {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ leagueArray }),\n        }\n      );\n    }\n    // const allFixtures = await RenderAllFixtures(matches, false)\n    ReactDOM.render(\n      <RenderAllFixtures matches={matches} result={false} bool={false} />,\n      document.getElementById(\"FixtureContainer\")\n    );\n    // ReactDOM.render(<RenderAllFixtures matches={matches} bool={false}/>),document.getElementById(\"FixtureContainer\")\n    setTimeout(() => {\n      isFunctionRunning = false;\n    }, 3000);\n  }\n}\n","import React from \"react\";\n\nfunction HeadToHead(props) {\n  return (\n    <ul className={props.className} style={props.style}>\n      <li key=\"Stadium\" className=\"Stadium\" data-cy={props.name + \"Stadium\"}>\n        {`Venue - ${props.stadium}`}\n      </li>\n      <div className=\"KeyStatsOne\">\n      <li key=\"h2h\" className=\"h2h\" data-cy={props.name + \"h2h\"}>\n        {`Matches played: ${props.matches}`}\n      </li>\n      <li key=\"homeWins\" className=\"homeWins\" data-cy={props.name + \"homeWins\"}>\n        {`${props.homeTeam} wins: ${props.homeWins}`}\n      </li>\n      <li key=\"awayWins\" className=\"awayWins\" data-cy={props.name + \"awayWins\"}>\n        {`${props.awayTeam} wins: ${props.awayWins}`}\n      </li>\n      <li key=\"draws\" className=\"draws\" data-cy={props.name + \"draws\"}>\n        {`Draws: ${props.draws}`}\n      </li>\n      </div>\n      <div className=\"KeyStatsTwo\">\n      <li\n        key=\"averageGoals\"\n        className=\"averageGoals\"\n        data-cy={props.name + \"averageGoals\"}\n      >\n        {`Average goals in fixture: ${props.averageGoals}`}\n      </li>\n      <li\n        key=\"bestHomeOdds\"\n        className=\"bestHomeOdds\"\n        data-cy={props.name + \"bestHomeOdds\"}\n      >\n        {`Best oods for home win @: ${props.bestHomeOdds}`}\n      </li>\n      <li\n        key=\"bestAwayOdds\"\n        className=\"bestAwayOdds\"\n        data-cy={props.name + \"bestAwayOdds\"}\n      >\n        {`Best oods for away win @: ${props.bestAwayOdds}`}\n      </li>\n      </div>\n      <li\n        key=\"lastGameDetail\"\n        className=\"LastGameDetail\"\n        data-cy={props.name + \"Last\"}\n      >\n        {`Last meeting - ${props.lastGameStadiumName} ${props.lastGameDate}`}\n      </li>\n      <div className=\"LastGameOverview\">\n        <div\n          key=\"lastGame\"\n          className=\"LastGameHome\"\n          data-cy={props.name + \"LastGame\"}\n        >\n          {`${props.lastGameHomeTeam}`}\n        </div>\n        <span className=\"LastGameScore\">{`${props.lastGameHomeGoals}`}</span>\n        <span className=\"LastGameScore\">{`${props.lastGameAwayGoals}`}</span>\n        <div className=\"LastGameAway\">{`${props.lastGameAwayTeam}`}</div>\n      </div>\n\n      <li\n        key=\"secondToLastGameDetail\"\n        className=\"secondToLastGameDetail\"\n        data-cy={props.name + \"secondToLast\"}\n      >\n        {`Second to last meeting - ${props.secondToLastGameStadiumName} ${props.secondToLastGameDate}`}\n      </li>\n      <div className=\"LastGameOverview\">\n        <div\n          key=\"lastGame\"\n          className=\"LastGameHome\"\n          data-cy={props.name + \"LastGame\"}\n        >\n          {`${props.secondToLastGameHomeTeam}`}\n        </div>\n        <span className=\"LastGameScore\">{`${props.secondToLastGameHomeGoals}`}</span>\n        <span className=\"LastGameScore\">{`${props.secondToLastGameAwayGoals}`}</span>\n        <div className=\"LastGameAway\">\n          {`${props.secondToLastGameAwayTeam}`}\n        </div>\n      </div>\n    </ul>\n  );\n}\n\nexport default HeadToHead;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    // backgroundColor: \"#dedddd\",\n    padding: 10,\n    textAlign: \"center\",\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    // border: \"none\",\n    margin: \"none\",\n    color: 'white',\n    lineHeight: '2em',\n    backgroundColor: '#030061',\n  },\n  body: {\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    padding: 10,\n    color: 'white',\n    // border: \"none\",\n    margin: \"none\",\n    backgroundColor: '#030061',\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#030061\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#030052\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\n\nexport default function CustomizedTables(props) {\n\n\n  return (\n    <TableContainer className=\"StatsTable\">\n      <Table aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Stat</StyledTableCell>\n            <StyledTableCell>H2H history</StyledTableCell>\n            <StyledTableCell>XGTipping forecast</StyledTableCell>\n            <StyledTableCell>Odds (yes)</StyledTableCell>\n            <StyledTableCell>Odds (no)</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        <StyledTableRow key=\"O05\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 0.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o05Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o05Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u05Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O15\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 1.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o15Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o15Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u15Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O25\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 2.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o25Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o25Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u25Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O35\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 3.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o35Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o35Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u35Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"BTTS\" className=\"BTTSStats\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              BTTS %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.BTTSStat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSForecast}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSOdds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSOddsNo}</StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport HeadToHead from \"../components/HeadToHead\";\nimport { Fragment } from \"react\";\nimport CustomizedTables from \"../components/Table\";\n\nexport async function getTeamStats(\n  id,\n  home,\n  away,\n  homeBTTS,\n  homeOnlyBTTS,\n  awayBTTS,\n  awayOnlyBTTS\n) {\n  let identifier = id;\n  let bestHomeOdds;\n  let bestHomeOddsProvider;\n  let bestAwayOdds;\n  let bestAwayOddsProvider;\n\n  let match = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}match/${identifier}`\n  );\n  await match.json().then(async (match) => {\n    let matchArr = match.data.h2h.previous_matches_ids;\n    let previousMatchDetails;\n    let secondToPreviousMatchDetails;\n\n    let oddsComparisonHomeArray = [];\n    let oddsComparisonAwayArray = [];\n\n    if (match.data.odds_comparison) {\n      oddsComparisonHomeArray = match.data.odds_comparison[\"FT Result\"][1];\n      oddsComparisonAwayArray = match.data.odds_comparison[\"FT Result\"][2];\n\n      let sortedHomeOdds = Object.entries(oddsComparisonHomeArray).sort(\n        (a, b) => b[1] - a[1]\n      );\n      let sortedAwayOdds = Object.entries(oddsComparisonAwayArray).sort(\n        (a, b) => b[1] - a[1]\n      );\n\n      bestHomeOddsProvider = sortedHomeOdds[0][0];\n      bestHomeOdds = sortedHomeOdds[0][1];\n      bestAwayOddsProvider = sortedAwayOdds[0][0];\n      bestAwayOdds = sortedAwayOdds[0][1];\n    } else {\n      bestHomeOddsProvider = \"N/A\";\n      bestHomeOdds = \"N/A\";\n      bestAwayOddsProvider = \"N/A\";\n      bestAwayOdds = \"N/A\";\n    }\n\n    async function getBTTSPercentage(\n      homeToal,\n      home,\n      awayTotal,\n      away,\n      fixtureHistory\n    ) {\n      let total = homeToal + home + awayTotal + away + fixtureHistory;\n      return total / 5;\n    }\n\n    async function getFairOdds(impliedProbability) {\n      let impliedProbabilityDivided = impliedProbability / 100;\n      return (1 / impliedProbabilityDivided).toFixed(2);\n    }\n\n    if (match.data.h2h.previous_matches_results.totalMatches > 0) {\n      matchArr.sort((a, b) => b.date_unix - a.date_unix);\n      let lastMatch = matchArr[0].id;\n      let secondMatchExists = true;\n      let secondToLastMatch =\n        matchArr[1] !== undefined ? matchArr[1].id : false;\n\n      let previousMatch = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}match/${lastMatch}`\n      );\n      let dateObject;\n      let date;\n      let date2;\n      await previousMatch.json().then(async (game) => {\n        previousMatchDetails = game.data;\n        const unixTimestamp = previousMatchDetails.date_unix;\n        const milliseconds = unixTimestamp * 1000;\n        dateObject = new Date(milliseconds);\n        date = `${dateObject.getDate()}/${\n          dateObject.getMonth() + 1\n        }/${dateObject.getFullYear()}`;\n\n        let secondToPreviousMatch;\n        let dateObject2;\n\n        if (secondMatchExists !== false) {\n          secondToPreviousMatch = await fetch(\n            `${process.env.REACT_APP_EXPRESS_SERVER}match/${secondToLastMatch}`\n          );\n          await secondToPreviousMatch.json().then((game) => {\n            secondToPreviousMatchDetails = game.data;\n            const unixTimestamp = secondToPreviousMatchDetails.date_unix;\n            const milliseconds = unixTimestamp * 1000;\n            dateObject2 = new Date(milliseconds);\n            date2 = `${dateObject2.getDate()}/${\n              dateObject2.getMonth() + 1\n            }/${dateObject2.getFullYear()}`;\n          });\n        }\n      });\n\n      const BTTSForecast = await getBTTSPercentage(\n        homeBTTS,\n        homeOnlyBTTS,\n        awayBTTS,\n        awayOnlyBTTS,\n        match.data.h2h.betting_stats.bttsPercentage\n      );\n      const fairOddsBTTSYes = await getFairOdds(BTTSForecast);\n      const fairOddsBTTSNo = await getFairOdds(100 - BTTSForecast);\n\n      ReactDOM.render(\n        <Fragment>\n          <h3>Fixture history</h3>\n          <HeadToHead\n            className={\"PreviousMatchStats\"}\n            homeTeam={home}\n            awayTeam={away}\n            stadium={match.data.stadium_name}\n            matches={match.data.h2h.previous_matches_results.totalMatches}\n            homeWins={match.data.h2h.previous_matches_results.team_a_wins}\n            awayWins={match.data.h2h.previous_matches_results.team_b_wins}\n            draws={match.data.h2h.previous_matches_results.draw}\n            averageGoals={match.data.h2h.betting_stats.avg_goals}\n            bestHomeOdds={`${bestHomeOddsProvider} - ${bestHomeOdds}`}\n            bestAwayOdds={`${bestAwayOddsProvider} - ${bestAwayOdds}`}\n            lastGameStadiumName={\n              previousMatchDetails.stadium_name\n                ? previousMatchDetails.stadium_name\n                : \"-\"\n            }\n            lastGameHomeGoals={\n              previousMatchDetails.homeGoalCount !== undefined\n                ? previousMatchDetails.homeGoalCount\n                : \"-\"\n            }\n            lastGameAwayGoals={\n              previousMatchDetails.awayGoalCount !== undefined\n                ? previousMatchDetails.awayGoalCount\n                : \"-\"\n            }\n            lastGameHomeTeam={\n              previousMatchDetails.home_name\n                ? previousMatchDetails.home_name\n                : \"-\"\n            }\n            lastGameAwayTeam={\n              previousMatchDetails.away_name\n                ? previousMatchDetails.away_name\n                : \"-\"\n            }\n            lastGameDate={!isNaN(date) ? date : \"-\"}\n            secondToLastGameStadiumName={\n              secondToPreviousMatchDetails.stadium_name\n                ? secondToPreviousMatchDetails.stadium_name\n                : \"-\"\n            }\n            secondToLastGameHomeGoals={\n              secondToPreviousMatchDetails.homeGoalCount !== undefined\n                ? secondToPreviousMatchDetails.homeGoalCount\n                : \"-\"\n            }\n            secondToLastGameAwayGoals={\n              secondToPreviousMatchDetails.awayGoalCount !== undefined\n                ? secondToPreviousMatchDetails.awayGoalCount\n                : \"-\"\n            }\n            secondToLastGameHomeTeam={\n              secondToPreviousMatchDetails.home_name\n                ? secondToPreviousMatchDetails.home_name\n                : \"-\"\n            }\n            secondToLastGameAwayTeam={\n              secondToPreviousMatchDetails.away_name\n                ? secondToPreviousMatchDetails.away_name\n                : \"-\"\n            }\n            secondToLastGameDate={!isNaN(date2) ? date2 : \"-\"}\n          ></HeadToHead>\n          <CustomizedTables\n            o05Stat={match.data.h2h.betting_stats.over05Percentage}\n            o15Stat={match.data.h2h.betting_stats.over15Percentage}\n            o15Forecast={match.data.o15_potential}\n            o05Odds={match.data.odds_ft_over05}\n            u05Odds={match.data.odds_ft_under05}\n            o15Odds={match.data.odds_ft_over15}\n            u15Odds={match.data.odds_ft_under15}\n            o25Stat={match.data.h2h.betting_stats.over25Percentage}\n            o25Forecast={match.data.o25_potential}\n            o25Odds={match.data.odds_ft_over25}\n            u25Odds={match.data.odds_ft_under25}\n            o35Stat={match.data.h2h.betting_stats.over35Percentage}\n            o35Forecast={match.data.o35_potential}\n            o35Odds={match.data.odds_ft_over35}\n            u35Odds={match.data.odds_ft_under35}\n            BTTSStat={match.data.h2h.betting_stats.bttsPercentage}\n            BTTSForecast={`${BTTSForecast}%`}\n            BTTSOdds={`${match.data.odds_btts_yes}\\n Fair odds: ${fairOddsBTTSYes}`}\n            BTTSOddsNo={`${match.data.odds_btts_no}\\n Fair odds: ${fairOddsBTTSNo}`}\n            CornersStat={\"–\"}\n            CornersForecast={match.data.corners_potential}\n            CornersOdds={match.data.odds_corners_over_105}\n          />\n        </Fragment>,\n        document.getElementById(`H2HStats${identifier}`)\n      );\n    } else {\n      ReactDOM.render(\n        <div>No fixture history found</div>,\n        document.getElementById(`H2HStats${identifier}`)\n      );\n    }\n  });\n}\n","import { parse } from \"dotenv\";\n\nasync function getOverOrUnderText(xgSum) {\n  let overUnderAchievingSum = xgSum;\n  let text;\n  switch (true) {\n    case overUnderAchievingSum > 1.5:\n      text =\n        \"Underachieving drastically against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > 1.25 && overUnderAchievingSum <= 1.5:\n      text =\n        \"Underachieving to a large degree against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > 1 && overUnderAchievingSum <= 1.25:\n      text = \"Underachieving against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > 0.75 && overUnderAchievingSum <= 1:\n      text =\n        \"Underachieving to a small degree against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > 0.4 && overUnderAchievingSum <= 0.75:\n      text =\n        \"Underachieving slighly against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > -0.4 && overUnderAchievingSum <= 0.4:\n      text =\n        \"Roughly tracking on par with their expected goal difference.\";\n      break;\n\n    case overUnderAchievingSum < -0.4 && overUnderAchievingSum >= -0.75:\n      text =\n        \"Overachieving slighly against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum < -0.75 && overUnderAchievingSum >= -1:\n      text =\n        \"Overachieving to a small degree against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum < -1 && overUnderAchievingSum >= -1.25:\n      text = \"Overachieving against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum < -1.25 && overUnderAchievingSum >= -1.5:\n      text =\n        \"Overachieving to a large degree against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum < -1.5:\n      text =\n        \"Overachieving drastically against their expected goal difference.\";\n      break;\n    default:\n      text = \"\";\n      break;\n  }\n  return text;\n}\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nasync function getXGDifferential(xgFor, xgAgainst, goalsFor, goalsAgainst) {\n  let xgDiff = xgFor - xgAgainst;\n  let goalDiff = goalsFor - goalsAgainst;\n  let compareXgAndGoalDiff = await diff(xgDiff, goalDiff);\n\n  return compareXgAndGoalDiff;\n}\n\nasync function getAttackingSummary(goalsRecent, goalsLongTerm) {\n\n  let text;\n  if (goalsRecent >= 3) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Free scoring and improving in front of goal recently.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Free scoring and consistent in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Free scoring but less so recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 3 && goalsRecent >= 2) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text =\n          \"Impressive scoring stats and improving in front of goal recently.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Impressive scoring stats and consistent in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        console.log(goalsRecent)\n        console.log(goalsLongTerm)\n        text = \"Impressive scoring stats but less so recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 2 && goalsRecent >= 1) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Decent scoring stats and improving in front of goal recently.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Decent scoring stats and consistent in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Decent scoring stats but less so recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 1 && goalsRecent > 0) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Poor scoring stats but improving in front of goal recently.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Poor scoring stats and consistently poor in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Poor scoring stats showing no signs of improvement.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent === 0) {\n    switch (true) {\n      case goalsRecent === 0:\n        text = \"Woeful goal stats in recent games.\";\n        break;\n      default:\n        text = \"\";\n        break;\n    }\n  }\n  return text;\n}\n\nasync function getDefenceSummary(cleansheetStat) {\n  let text;\n  switch (true) {\n    case cleansheetStat > 80:\n      text = `Incredibly strong defensively, with ${cleansheetStat}% of their games ending in a cleansheet`;\n      break;\n    case cleansheetStat > 60 && cleansheetStat <= 80:\n      text = `Very strong defensively, with ${cleansheetStat}% of their games ending in a cleansheet`;\n      break;\n    case cleansheetStat > 40 && cleansheetStat <= 60:\n      text = `Defensively impressive, with ${cleansheetStat}% of their games ending in a cleansheet`;\n      break;\n    case cleansheetStat > 20 && cleansheetStat <= 40:\n      text = `Defensively, ${cleansheetStat}% of their games have ended in a cleansheet`;\n      break;\n    case cleansheetStat > 1 && cleansheetStat <= 20:\n      text = `Defensively frail, with only ${cleansheetStat}% of their games ending in a cleansheet`;\n      break;\n      case cleansheetStat === 0:\n        text = `Defensively weak, with ${cleansheetStat}% of their games ending in a cleansheet`;\n        break;\n    default:\n      break;\n  }\n  return text;\n}\n\nasync function GenerateFormSummary(form, lastx, recentForm) {\n  let text;\n  // let six = lastx[2];\n  let ten = lastx[1];\n  let five = lastx[0];\n\n  let xgSum = await getXGDifferential(\n    form.XGOverall,\n    form.XGAgainstAvgOverall,\n    form.ScoredOverall / 10,\n    form.ConcededOverall / 10\n  );\n  let xgText = await getOverOrUnderText(xgSum);\n  let attackString = await getAttackingSummary(\n    form.last5Goals,\n    form.last10Goals\n  );\n  let defenceString = await getDefenceSummary(form.CleanSheetPercentage);\n  let pointsAverageTotal =\n    (parseFloat(five) + parseFloat(ten)) / 2;\n\n  if (pointsAverageTotal >= 2.6) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Outstanding recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Outstanding recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Outstanding recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 2.3) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Excellent recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Excellent recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Excellent recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 2) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Very good recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Very good recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Very good recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 1.7) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Good recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Good recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Good recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 1.4) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Fairly good recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Fairly good recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Fairly good recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 1.1) {\n    console.log(2);\n    switch (true) {\n      case five > ten:\n        text =\n          \"Average recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Average recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Average recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 0.8) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Poor recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Poor recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Poor recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 0.5) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Very poor recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Very poor recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Very poor recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal < 0.5) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Terrible recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Terrible recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Terrible recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else {\n    console.log(pointsAverageTotal);\n  }\n  return text + ` ${xgText} ${attackString} ${defenceString}`;\n}\n\nexport default GenerateFormSummary;\n","// import { light } from \"@material-ui/core/styles/createPalette\";\n// import { toBePartiallyChecked } from \"@testing-library/jest-dom/dist/matchers\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  ArcElement,\n  LineElement,\n  Filler,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Line, Radar, Bar } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  ArcElement,\n  Filler,\n  BarElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport function Chart(props) {\n  let length;\n  let depth;\n\n  if (props.type === \"Points over time\") {\n    length = props.data1.length * 3;\n    depth = 0;\n  } else if (props.type === \"Rolling average points over last 10\") {\n    length = Math.abs(props.height);\n    depth = 0;\n  } else if (Math.abs(props.height) > Math.abs(props.depth)) {\n    length = Math.abs(props.height);\n    depth = -Math.abs(props.height);\n  } else if (Math.abs(props.height) < Math.abs(props.depth)) {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  } else {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  }\n\n  const options = {\n    color: \"black\",\n    responsive: true,\n    aspectRatio: 1.2,\n    maintainAspectRatio: true,\n    layout: {\n      padding: 3,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    scales: {\n      y: {\n        suggestedMin: depth,\n        suggestedMax: length,\n        // suggestedMax: Math.max(...props.data1) > 3 ? Math.max(...props.data1) : 3,\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          font: {\n            size: 12,\n          },\n        },\n      },\n      x: {\n        title: {\n          display: false,\n          text: \"Last X Games\",\n          font: {\n            size: 10,\n          },\n        },\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          display: false,\n          font: {\n            size: 12,\n          },\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 5,\n        },\n      },\n      title: {\n        display: true,\n        text: props.type,\n        font: {\n          size: 14,\n          color: \"black\",\n        },\n      },\n    },\n  };\n\n  const labels = Array.from(props.data1.keys());\n\n  let data = {\n    labels,\n    datasets: [\n      {\n        label: props.team1,\n        font: {\n          color: \"black\",\n        },\n        data: props.data1,\n        borderColor: \"#030061\",\n        borderWidth: 2,\n        backgroundColor: \"#030061\",\n        tension: props.tension,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        borderColor: \"#970d00\",\n        borderWidth: 2,\n        backgroundColor: \"#970d00\",\n        tension: props.tension,\n      },\n    ],\n  };\n\n  return <Line options={options} data={data} />;\n}\n\nexport function RadarChart(props) {\n  const options = {\n    color: \"black\",\n    scales: {\n      r: {\n        angleLines: {\n          display: false,\n        },\n        suggestedMin: 0,\n        suggestedMax: 1,\n        ticks: {\n          precision: 0,\n          display: false,\n        },\n        // grid: {\n        //     circular: true,\n        //   }\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 10,\n        },\n      },\n      title: {\n        display: true,\n        text: \"XG Tipping Strength Ratings\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  let data = {\n    labels: [\"Attack rating\", \"Defence rating\", \"Ball retention\", \"XG For\", \"XG Against\", \"Directness\", \"Attacking precision\"],\n    datasets: [\n      {\n        label: props.team1,\n        data: props.data,\n        fill: true,\n        backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n        borderColor: \"#030061\",\n        pointBackgroundColor: \"#030061\",\n        pointBorderColor: \"#fff\",\n        pointHoverBackgroundColor: \"#fff\",\n        pointHoverBorderColor: \"rgb(255, 99, 132)\",\n        borderWidth: 2,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        fill: true,\n        backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n        borderColor: \"#970d00\",\n        pointBackgroundColor: \"#970d00\",\n        pointBorderColor: \"#fff\",\n        pointHoverBackgroundColor: \"#fff\",\n        pointHoverBorderColor: \"rgb(54, 162, 235)\",\n        borderWidth: 2,\n      },\n    ],\n  };\n\n  return <Radar options={options} data={data} />;\n}\n\nexport function BarChart(props) {\n  const datasetOne = props.data1;\n  const datasetTwo = props.data2;\n  const sum = datasetTwo.map(function (num, idx) {\n    return num - datasetOne[idx];\n  });\n\n  const max = Math.max(...sum);\n  const min = Math.min(...sum);\n\n  const largest = findLargestNum(max, min);\n\n  function findLargestNum(numOne, numTwo) {\n    const tempArr = [];\n    const firstNum = Math.abs(numOne);\n    const secondNum = Math.abs(numTwo);\n    tempArr.push(firstNum, secondNum);\n\n    return Math.max(...tempArr);\n  }\n\n  const options = {\n    indexAxis: \"y\",\n    // Elements options apply to all of the options unless overridden in a dataset\n    // In this case, we are setting the border of each horizontal bar to be 2px wide\n    aspectRatio: 1.3,\n    elements: {\n      bar: {\n        borderWidth: 2,\n      },\n    },\n    scales: {\n      x: {\n        min: -4,\n        max: 4,\n        ticks: {\n          display: false,\n        },\n      },\n      y: {\n        ticks: {\n          font: {\n            size: 10,\n          },\n        },\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: false,\n      },\n      title: {\n        display: true,\n        text: \"Comparison - Home Team | Away Team \",\n      },\n    },\n  };\n\n  const labels = [\n    \"Highest Goals\",\n    \"Fewest Conceeded\",\n    \"Last 5 PPG\",\n    \"Highest XG\",\n    \"Fewest XG Conceeded\",\n    \"Shots On Target\",\n    \"Dangerous Attacks\",\n    \"Av. Possession\",\n    \"Home/Away Goal Diff\",\n    \"Corners\",\n  ];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        // label: 'Dataset 1',\n        legend: {\n          display: false,\n        },\n        data: sum,\n        backgroundColor(context) {\n          const index = context.dataIndex;\n          const value = context.dataset.data[index];\n          return value < 0 ? \"#030061\" : \"#970d00\";\n        },\n      },\n    ],\n  };\n\n  return <Bar options={options} data={data} />;\n}\n","import ReactDOM from \"react-dom\";\nimport { Button } from \"../components/Button\";\nimport Stats from \"../components/createStatsDiv\";\nimport Div from \"../components/Div\";\nimport { allForm, allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport { getTeamStats } from \"../logic/getTeamStats\";\nimport { getPointsFromLastX } from \"../logic/getScorePredictions\";\nimport { CreateBadge } from \"../components/createBadge\";\nimport { Fragment } from \"react\";\nimport GenerateFormSummary from \"../logic/compareFormTrend\";\nimport { Chart, RadarChart, BarChart } from \"../components/Chart\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { clicked } from \"../logic/getScorePredictions\";\n\nexport async function calculateAttackingStrength(stats) {\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    // averagePossession: 0.15,\n    \"Average Dangerous Attacks\": 0.15,\n    \"Average Shots\": 0.1,\n    \"Average Shots On Target\": 0.15,\n    \"Average Expected Goals\": 0.15,\n    \"Recent XG\": 0.15,\n    \"Average Goals\": 0.3,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    // averagePossession: { min: 25, max: 75 },\n    \"Average Dangerous Attacks\": { min: 30, max: 75 }, // Adjust the max value as needed\n    \"Average Shots\": { min: 5, max: 17 }, // Adjust the max value as needed\n    \"Average Shots On Target\": { min: 2, max: 9 }, // Adjust the max value as needed\n    \"Average Expected Goals\": { min: 0, max: 3 }, // Adjust the max value as needed\n    \"Recent XG\": { min: 0, max: 3 }, // Adjust the max value as needed\n    \"Average Goals\": { min: 0, max: 3 }, // Adjust the max value as needed\n  };\n\n  // Normalize each metric value and calculate the weighted sum\n  let weightedSum = 0;\n  for (const metric in stats) {\n    if (\n      stats.hasOwnProperty(metric) &&\n      weights.hasOwnProperty(metric) &&\n      ranges.hasOwnProperty(metric)\n    ) {\n      const normalizedValue =\n        (stats[metric] - ranges[metric].min) /\n        (ranges[metric].max - ranges[metric].min);\n      weightedSum += normalizedValue * weights[metric];\n    } else {\n      console.log(metric);\n    }\n  }\n\n  return parseFloat(weightedSum.toFixed(2));\n}\n\nexport async function calculateDefensiveStrength(stats) {\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    \"Clean Sheet Percentage\": 0.3,\n    \"Average XG Against\": 0.2,\n    \"Recent XG Against\": 0.2,\n    \"Average Goals Against\": 0.3,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    \"Clean Sheet Percentage\": { min: 0, max: 100 },\n    \"Average XG Against\": { min: 0, max: 3 }, // Adjust the max value as needed\n    \"Recent XG Against\": { min: 0, max: 3 },\n    \"Average Goals Against\": { min: 0, max: 3 }, // Adjust the max value as needed\n  };\n\n  // Normalize each metric value and calculate the weighted sum\n  let weightedSum = 0;\n  for (const metric in stats) {\n    if (\n      stats.hasOwnProperty(metric) &&\n      weights.hasOwnProperty(metric) &&\n      ranges.hasOwnProperty(metric)\n    ) {\n      const normalizedValue =\n        1 -\n        (stats[metric] - ranges[metric].min) /\n          (ranges[metric].max - ranges[metric].min);\n      weightedSum += normalizedValue * weights[metric];\n    }\n  }\n\n  return parseFloat(weightedSum.toFixed(2));\n}\n\nexport async function calculateMetricStrength(metricName, metricValue) {\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    averagePossession: 1,\n    xgFor: 1,\n    xgAgainst: 1,\n    directnessOverall: 1,\n    accuracyOverall: 1,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    averagePossession: { min: 20, max: 80 },\n    xgFor: { min: 0.1, max: 3 },\n    xgAgainst: { min: 0.1, max: 3 },\n    directnessOverall: { min: 0.5, max: 4 },\n    accuracyOverall: {min: 2, max: 10},\n  };\n\n  console.log(metricName);\n  console.log(metricValue)\n  console.log(weights);\n  console.log(ranges);\n\n  // Ensure the metric is valid and exists in the weights and ranges objects\n  if (\n    !weights.hasOwnProperty(metricName) ||\n    !ranges.hasOwnProperty(metricName)\n  ) {\n    throw new Error(\"Invalid metric name or missing normalization range.\");\n  }\n\n  // Normalize the metric value\n  const normalizedValue =\n    (metricValue - ranges[metricName].min) /\n    (ranges[metricName].max - ranges[metricName].min);\n\n  // Calculate the weighted score\n  const weightedScore = normalizedValue * weights[metricName];\n\n  return parseFloat(weightedScore.toFixed(2));\n}\n\n// export async function getDefenceStrength(goalsAgainst) {\n//   let strength;\n//   switch (true) {\n//     case goalsAgainst >= 2.8:\n//       strength = 1;\n//       break;\n//     case goalsAgainst >= 2.5 && goalsAgainst < 2.8:\n//       strength = 2;\n//       break;\n//     case goalsAgainst >= 2.2 && goalsAgainst < 2.5:\n//       strength = 3;\n//       break;\n//     case goalsAgainst >= 1.9 && goalsAgainst < 2.2:\n//       strength = 4;\n//       break;\n//     case goalsAgainst >= 1.6 && goalsAgainst < 1.9:\n//       strength = 5;\n//       break;\n//     case goalsAgainst >= 1.3 && goalsAgainst < 1.6:\n//       strength = 6;\n//       break;\n//     case goalsAgainst >= 1 && goalsAgainst < 1.3:\n//       strength = 7;\n//       break;\n//     case goalsAgainst >= 0.7 && goalsAgainst < 1:\n//       strength = 8;\n//       break;\n//     case goalsAgainst >= 0.4 && goalsAgainst < 0.7:\n//       strength = 9;\n//       break;\n//     case goalsAgainst < 0.4:\n//       strength = 10;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getPossessionStrength(possession) {\n//   let strength;\n//   switch (true) {\n//     case possession >= 68:\n//       strength = 10;\n//       break;\n//     case possession >= 64 && possession < 68:\n//       strength = 9;\n//       break;\n//     case possession >= 60 && possession < 64:\n//       strength = 8;\n//       break;\n//     case possession >= 56 && possession < 60:\n//       strength = 7;\n//       break;\n//     case possession >= 52 && possession < 56:\n//       strength = 6;\n//       break;\n//     case possession >= 48 && possession < 52:\n//       strength = 5;\n//       break;\n//     case possession >= 44 && possession < 48:\n//       strength = 4;\n//       break;\n//     case possession >= 40 && possession < 44:\n//       strength = 3;\n//       break;\n//     case possession >= 35 && possession < 40:\n//       strength = 2;\n//       break;\n//     case possession < 35:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getShotsStrength(Shots) {\n//   let strength;\n//   switch (true) {\n//     case Shots >= 15:\n//       strength = 10;\n//       break;\n//     case Shots >= 14.25 && Shots < 15:\n//       strength = 9;\n//       break;\n//     case Shots >= 13.5 && Shots < 14.25:\n//       strength = 8;\n//       break;\n//     case Shots >= 12.75 && Shots < 13.5:\n//       strength = 7;\n//       break;\n//     case Shots >= 12 && Shots < 12.75:\n//       strength = 6;\n//       break;\n//     case Shots >= 11.25 && Shots < 12:\n//       strength = 5;\n//       break;\n//     case Shots >= 10.5 && Shots < 11.25:\n//       strength = 4;\n//       break;\n//     case Shots >= 9.75 && Shots < 10.5:\n//       strength = 3;\n//       break;\n//     case Shots >= 9 && Shots < 9.75:\n//       strength = 2;\n//       break;\n//     case Shots < 9:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getShotsStrengthHorA(Shots) {\n//   let strength;\n//   switch (true) {\n//     case Shots >= 19.5:\n//       strength = 10;\n//       break;\n//     case Shots >= 18 && Shots < 19.5:\n//       strength = 9;\n//       break;\n//     case Shots >= 17 && Shots < 18:\n//       strength = 8;\n//       break;\n//     case Shots >= 15.5 && Shots < 17:\n//       strength = 7;\n//       break;\n//     case Shots >= 14 && Shots < 15.5:\n//       strength = 6;\n//       break;\n//     case Shots >= 12.5 && Shots < 14:\n//       strength = 5;\n//       break;\n//     case Shots >= 11 && Shots < 12.5:\n//       strength = 4;\n//       break;\n//     case Shots >= 9.5 && Shots < 11:\n//       strength = 3;\n//       break;\n//     case Shots >= 8 && Shots < 9.5:\n//       strength = 2;\n//       break;\n//     case Shots < 8:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGForStrength(XG) {\n//   let strength;\n//   switch (true) {\n//     case XG >= 2.9:\n//       strength = 10;\n//       break;\n//     case XG >= 2.6 && XG < 2.9:\n//       strength = 9;\n//       break;\n//     case XG >= 2.3 && XG < 2.6:\n//       strength = 8;\n//       break;\n//     case XG >= 2 && XG < 2.3:\n//       strength = 7;\n//       break;\n//     case XG >= 1.7 && XG < 2:\n//       strength = 6;\n//       break;\n//     case XG >= 1.4 && XG < 1.7:\n//       strength = 5;\n//       break;\n//     case XG >= 1.1 && XG < 1.4:\n//       strength = 4;\n//       break;\n//     case XG >= 0.8 && XG < 1.1:\n//       strength = 3;\n//       break;\n//     case XG >= 0.5 && XG < 0.8:\n//       strength = 2;\n//       break;\n//     case XG < 0.5:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGAgainstStrength(XGAgainst) {\n//   let strength;\n//   switch (true) {\n//     case XGAgainst >= 2.9:\n//       strength = 1;\n//       break;\n//     case XGAgainst >= 2.6 && XGAgainst < 2.9:\n//       strength = 2;\n//       break;\n//     case XGAgainst >= 2.3 && XGAgainst < 2.6:\n//       strength = 3;\n//       break;\n//     case XGAgainst >= 2 && XGAgainst < 2.3:\n//       strength = 4;\n//       break;\n//     case XGAgainst >= 1.7 && XGAgainst < 2:\n//       strength = 5;\n//       break;\n//     case XGAgainst >= 1.4 && XGAgainst < 1.7:\n//       strength = 6;\n//       break;\n//     case XGAgainst >= 1.1 && XGAgainst < 1.4:\n//       strength = 7;\n//       break;\n//     case XGAgainst >= 0.8 && XGAgainst < 1.1:\n//       strength = 8;\n//       break;\n//     case XGAgainst >= 0.5 && XGAgainst < 0.8:\n//       strength = 9;\n//       break;\n//     case XGAgainst < 0.5:\n//       strength = 10;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGDifferentialStrength(XGDiff) {\n//   let strength;\n//   switch (true) {\n//     case XGDiff >= 1.5:\n//       strength = 10;\n//       break;\n//     case XGDiff >= 1 && XGDiff < 1.5:\n//       strength = 9;\n//       break;\n//     case XGDiff >= 0.5 && XGDiff < 1:\n//       strength = 8;\n//       break;\n//     case XGDiff >= 0.25 && XGDiff < 0.5:\n//       strength = 7;\n//       break;\n//     case XGDiff > 0 && XGDiff < 0.25:\n//       strength = 6;\n//       break;\n//     case XGDiff <= 0 && XGDiff > -0.25:\n//       strength = 5;\n//       break;\n//     case XGDiff <= -0.25 && XGDiff > -0.5:\n//       strength = 4;\n//       break;\n//     case XGDiff <= -0.5 && XGDiff > -1:\n//       strength = 3;\n//       break;\n//     case XGDiff <= -1 && XGDiff > -1.5:\n//       strength = 2;\n//       break;\n//     case XGDiff <= -1.5:\n//       strength = 1;\n//       break;\n//     default:\n//       console.log(\"default clause triggered\");\n//       break;\n//   }\n//   return strength;\n// }\n\nexport async function getXGtoActualDifferentialStrength(XGDiff) {\n  let strength;\n  switch (true) {\n    case XGDiff >= 1.5:\n      strength = 1;\n      break;\n    case XGDiff >= 1 && XGDiff < 1.5:\n      strength = 2;\n      break;\n    case XGDiff >= 0.5 && XGDiff < 1:\n      strength = 3;\n      break;\n    case XGDiff >= 0.25 && XGDiff < 0.5:\n      strength = 4;\n      break;\n    case XGDiff > 0 && XGDiff < 0.25:\n      strength = 5;\n      break;\n    case XGDiff <= 0 && XGDiff > -0.25:\n      strength = 6;\n      break;\n    case XGDiff <= -0.25 && XGDiff > -0.5:\n      strength = 7;\n      break;\n    case XGDiff <= -0.5 && XGDiff > -1:\n      strength = 8;\n      break;\n    case XGDiff <= -1 && XGDiff > -1.5:\n      strength = 9;\n      break;\n    case XGDiff <= -1.5:\n      strength = 10;\n      break;\n    default:\n      console.log(\"default clause triggered\");\n      break;\n  }\n  return strength;\n}\n\nasync function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nlet rollingGoalDiffTotalHome = [];\nlet rollingGoalDiffTotalAway = [];\n\nexport async function createStatsDiv(game, displayBool) {\n  console.log(displayBool);\n  if (game.status !== \"void\") {\n    // takes the displayBool boolean from the fixture onClick and sets the styling of the stats div from there\n    function styling(testBool) {\n      let bool = testBool;\n      if (bool === true && clicked === true) {\n        // set stats element to display flex\n        return { display: \"block\" };\n      } else {\n        // set stats element to display none\n        return { display: \"none\" };\n      }\n    }\n    let style = styling(displayBool);\n\n    if (clicked === false) {\n      alert(\"Tap Get Predictions to fetch all game stats first\");\n    } else {\n      let index = 2;\n      let divider = 10;\n\n      let gameStats = allForm.find((match) => match.id === game.id);\n      const gameArrayHome = [];\n      const gameArrayAway = [];\n      const gameArrayHomeTeamHomeGames = [];\n      const gameArrayAwayTeamAwayGames = [];\n      let goalDiffArrayHome;\n      let goalDiffArrayAway;\n      let goalDiffHomeMovingAv = [];\n      let goalDiffAwayMovingAv = [];\n      let latestHomeGoalDiff;\n      let latestAwayGoalDiff;\n\n      var getEMA = (a, r) =>\n        a.reduce(\n          (p, n, i) =>\n            i\n              ? p.concat(\n                  (2 * n) / (r + 1) + (p[p.length - 1] * (r - 1)) / (r + 1)\n                )\n              : p,\n          [a[0]]\n        );\n\n      if (displayBool === true) {\n        let fixtures = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${gameStats.leagueId}`\n        );\n\n        await fixtures.json().then((matches) => {\n          const resultHome = matches.data.filter(\n            (game) =>\n              (game.homeID === gameStats.teamIDHome ||\n                game.awayID === gameStats.teamIDHome) &&\n              game.status === \"complete\"\n          );\n\n          const resultHomeOnly = matches.data.filter(\n            (game) =>\n              game.homeID === gameStats.teamIDHome && game.status === \"complete\"\n          );\n\n          resultHomeOnly.sort((a, b) => b.date_unix - a.date_unix);\n\n          for (let i = 0; i < resultHome.length; i++) {\n            let unixTimestamp = resultHome[i].date_unix;\n            let milliseconds = unixTimestamp * 1000;\n            let dateObject = new Date(milliseconds).toLocaleString(\"en-GB\", {\n              timeZone: \"UTC\",\n            });\n\n            let won;\n            let goalsScored;\n            let goalsConceeded;\n\n            if (resultHome[i].winningTeam === gameStats.teamIDHome) {\n              won = \"W\";\n              if (resultHome[i].homeGoalCount > resultHome[i].awayGoalCount) {\n                goalsScored = resultHome[i].homeGoalCount;\n                goalsConceeded = resultHome[i].awayGoalCount;\n              } else {\n                goalsScored = resultHome[i].awayGoalCount;\n                goalsConceeded = resultHome[i].homeGoalCount;\n              }\n            } else if (resultHome[i].winningTeam === -1) {\n              won = \"D\";\n              goalsScored = resultHome[i].awayGoalCount;\n              goalsConceeded = resultHome[i].awayGoalCount;\n            } else {\n              won = \"L\";\n              if (resultHome[i].homeGoalCount > resultHome[i].awayGoalCount) {\n                goalsScored = resultHome[i].awayGoalCount;\n                goalsConceeded = resultHome[i].homeGoalCount;\n              } else {\n                goalsScored = resultHome[i].homeGoalCount;\n                goalsConceeded = resultHome[i].awayGoalCount;\n              }\n            }\n\n            gameArrayHome.push({\n              id: resultHome[i].id,\n              date: dateObject,\n              homeTeam: resultHome[i].home_name,\n              homeGoals: resultHome[i].homeGoalCount,\n              homeXG: resultHome[i].team_a_xg,\n              homeOdds: resultHome[i].odds_ft_1,\n              awayTeam: resultHome[i].away_name,\n              awayGoals: resultHome[i].awayGoalCount,\n              awayXG: resultHome[i].team_b_xg,\n              awayOdds: resultHome[i].odds_ft_2,\n              won: won,\n              homeShots: resultHome[i].team_a_shots,\n              awayShots: resultHome[i].team_b_shots,\n              homeSot: resultHome[i].team_a_shotsOnTarget,\n              awaySot: resultHome[i].team_b_shotsOnTarget,\n              homeRed: resultHome[i].team_a_red_cards,\n              awayRed: resultHome[i].team_b_red_cards,\n              homePossession: resultHome[i].team_a_possession,\n              awayPossession: resultHome[i].team_b_possession,\n              homeDangerousAttacks: resultHome[i].team_a_dangerous_attacks,\n              awayDangerousAttacks: resultHome[i].team_b_dangerous_attacks,\n              homePPG: resultHome[i].pre_match_teamA_overall_ppg,\n              awayPPG: resultHome[i].pre_match_teamB_overall_ppg,\n              unixTimestamp: resultHome[i].date_unix,\n              goalsFor: goalsScored,\n              goalsAgainst: goalsConceeded,\n              btts: resultHome[i].btts === true ? \"\\u2714\" : \"\\u2718\",\n            });\n          }\n\n          for (let i = 0; i < resultHomeOnly.length; i++) {\n            let wonHomeOrAwayOnly;\n\n            if (resultHomeOnly[i].winningTeam === gameStats.teamIDHome) {\n              wonHomeOrAwayOnly = \"W\";\n              gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n            } else if (resultHomeOnly[i].winningTeam === -1) {\n              wonHomeOrAwayOnly = \"D\";\n              gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n            } else {\n              wonHomeOrAwayOnly = \"L\";\n              gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n            }\n          }\n\n          goalDiffArrayHome = gameArrayHome.map(\n            (a) => a.goalsFor - a.goalsAgainst\n          );\n\n          let r = 5;\n\n          goalDiffHomeMovingAv = getEMA(\n            goalDiffArrayHome,\n            goalDiffArrayHome.length < 5 ? goalDiffArrayHome.length : r\n          );\n\n          const cumulativeSumHome = (\n            (sum) => (value) =>\n              (sum += value)\n          )(0);\n\n          gameArrayHome.sort((a, b) => b.unixTimestamp - a.unixTimestamp);\n\n          rollingGoalDiffTotalHome = goalDiffArrayHome.map(cumulativeSumHome);\n\n          const resultAway = matches.data.filter(\n            (game) =>\n              (game.homeID === gameStats.teamIDAway ||\n                game.awayID === gameStats.teamIDAway) &&\n              game.status === \"complete\"\n          );\n\n          const resultAwayOnly = matches.data.filter(\n            (game) =>\n              game.awayID === gameStats.teamIDAway && game.status === \"complete\"\n          );\n\n          resultAwayOnly.sort((a, b) => b.date_unix - a.date_unix);\n\n          for (let i = 0; i < resultAway.length; i++) {\n            let unixTimestamp = resultAway[i].date_unix;\n            let milliseconds = unixTimestamp * 1000;\n            let dateObject = new Date(milliseconds).toLocaleString(\"en-GB\", {\n              timeZone: \"UTC\",\n            });\n\n            let won;\n            let goalsScored;\n            let goalsConceeded;\n            let wonHomeOrAwayOnly;\n            let goalsScoredHomeOrAwayOnly;\n            let goalsConceededHomeOrAwayOnly;\n\n            if (resultAway[i].winningTeam === gameStats.teamIDAway) {\n              won = \"W\";\n              if (resultAway[i].homeGoalCount > resultAway[i].awayGoalCount) {\n                goalsScored = resultAway[i].homeGoalCount;\n                goalsConceeded = resultAway[i].awayGoalCount;\n              } else {\n                goalsScored = resultAway[i].awayGoalCount;\n                goalsConceeded = resultAway[i].homeGoalCount;\n              }\n            } else if (resultAway[i].winningTeam === -1) {\n              won = \"D\";\n              goalsScored = resultAway[i].awayGoalCount;\n              goalsConceeded = resultAway[i].awayGoalCount;\n            } else {\n              won = \"L\";\n              if (resultAway[i].homeGoalCount > resultAway[i].awayGoalCount) {\n                goalsScored = resultAway[i].awayGoalCount;\n                goalsConceeded = resultAway[i].homeGoalCount;\n              } else {\n                goalsScored = resultAway[i].homeGoalCount;\n                goalsConceeded = resultAway[i].awayGoalCount;\n              }\n            }\n\n            gameArrayAway.push({\n              id: resultAway[i].id,\n              date: dateObject,\n              homeTeam: resultAway[i].home_name,\n              homeGoals: resultAway[i].homeGoalCount,\n              homeXG: resultAway[i].team_a_xg,\n              homeOdds: resultAway[i].odds_ft_1,\n              awayTeam: resultAway[i].away_name,\n              awayGoals: resultAway[i].awayGoalCount,\n              awayXG: resultAway[i].team_b_xg,\n              awayOdds: resultAway[i].odds_ft_2,\n              won: won,\n              homeShots: resultAway[i].team_a_shots,\n              awayShots: resultAway[i].team_b_shots,\n              homeSot: resultAway[i].team_a_shotsOnTarget,\n              awaySot: resultAway[i].team_b_shotsOnTarget,\n              homeRed: resultAway[i].team_a_red_cards,\n              awayRed: resultAway[i].team_b_red_cards,\n              homePossession: resultAway[i].team_a_possession,\n              awayPossession: resultAway[i].team_b_possession,\n              homeDangerousAttacks: resultAway[i].team_a_dangerous_attacks,\n              awayDangerousAttacks: resultAway[i].team_b_dangerous_attacks,\n              homePPG: resultAway[i].pre_match_teamA_overall_ppg,\n              awayPPG: resultAway[i].pre_match_teamB_overall_ppg,\n              unixTimestamp: resultAway[i].date_unix,\n              goalsFor: goalsScored,\n              goalsAgainst: goalsConceeded,\n              btts: resultAway[i].btts === true ? \"\\u2714\" : \"\\u2718\",\n            });\n          }\n\n          for (let i = 0; i < resultAwayOnly.length; i++) {\n            let wonHomeOrAwayOnly;\n\n            if (resultAwayOnly[i].winningTeam === gameStats.teamIDAway) {\n              wonHomeOrAwayOnly = \"W\";\n              gameArrayAwayTeamAwayGames.push(wonHomeOrAwayOnly);\n            } else if (resultAwayOnly[i].winningTeam === -1) {\n              wonHomeOrAwayOnly = \"D\";\n              gameArrayAwayTeamAwayGames.push(wonHomeOrAwayOnly);\n            } else {\n              wonHomeOrAwayOnly = \"L\";\n              gameArrayAwayTeamAwayGames.push(wonHomeOrAwayOnly);\n            }\n          }\n\n          goalDiffArrayAway = gameArrayAway.map(\n            (a) => a.goalsFor - a.goalsAgainst\n          );\n\n          goalDiffAwayMovingAv = getEMA(\n            goalDiffArrayAway,\n            goalDiffArrayAway.length < 5 ? goalDiffArrayAway.length : r\n          );\n\n          const cumulativeSumAway = (\n            (sum) => (value) =>\n              (sum += value)\n          )(0);\n\n          gameArrayAway.sort((a, b) => b.unixTimestamp - a.unixTimestamp);\n\n          rollingGoalDiffTotalAway = goalDiffArrayAway.map(cumulativeSumAway);\n\n          latestHomeGoalDiff =\n            goalDiffHomeMovingAv[goalDiffHomeMovingAv.length - 1];\n          latestAwayGoalDiff =\n            goalDiffAwayMovingAv[goalDiffAwayMovingAv.length - 1];\n        });\n      }\n\n      const bttsArrayHome = Array.from(gameArrayHome, (x) => x.btts);\n      const bttsArrayAway = Array.from(gameArrayAway, (x) => x.btts);\n      const resultsArrayHome = Array.from(gameArrayHome, (x) => x.won);\n      const resultsArrayAway = Array.from(gameArrayAway, (x) => x.won);\n\n      let homeTeam = gameStats.home.teamName;\n      let awayTeam = gameStats.away.teamName;\n\n      let time = game.time;\n\n      const homeForm = gameStats.home[index];\n      const awayForm = gameStats.away[index];\n\n      if (homeForm.last3Points === undefined) {\n        homeForm.last3Points = getPointsFromLastX(homeForm.lastThreeForm);\n\n        homeForm.last5Points = getPointsFromLastX(homeForm.LastFiveForm);\n\n        homeForm.last6Points = getPointsFromLastX(homeForm.LastSixForm);\n\n        homeForm.last10Points = getPointsFromLastX(homeForm.LastTenForm);\n\n        awayForm.last3Points = getPointsFromLastX(awayForm.lastThreeForm);\n\n        awayForm.last5Points = getPointsFromLastX(awayForm.LastFiveForm);\n\n        awayForm.last6Points = getPointsFromLastX(awayForm.LastSixForm);\n\n        awayForm.last10Points = getPointsFromLastX(awayForm.LastTenForm);\n      }\n\n      async function getPointAverage(pointTotal, games) {\n        return pointTotal / games;\n      }\n\n      // let homeThreeGameAverage = await getPointAverage(\n      //   homeForm.last3Points,\n      //   3\n      // );\n\n      let homeFiveGameAverage = await getPointAverage(homeForm.last5Points, 5);\n\n      let homeSixGameAverage = await getPointAverage(homeForm.last6Points, 6);\n\n      let homeTenGameAverage = await getPointAverage(homeForm.last10Points, 10);\n\n      // let awayThreeGameAverage = await getPointAverage(\n      //   awayForm.last3Points,\n      //   3\n      // );\n\n      let awayFiveGameAverage = await getPointAverage(awayForm.last5Points, 5);\n\n      let awaySixGameAverage = await getPointAverage(awayForm.last6Points, 6);\n\n      let awayTenGameAverage = await getPointAverage(awayForm.last10Points, 10);\n\n      async function getPointsFromGames(formArr) {\n        const pairings = {\n          W: 3,\n          D: 1,\n          L: 0,\n        };\n        let newArr = [];\n        let arrayOfIndividualPoints = [];\n        let sum = 0;\n\n        for (let i = 0; i < formArr.length; i++) {\n          sum = sum + pairings[formArr[i]];\n          newArr.push(sum);\n          arrayOfIndividualPoints.push(pairings[formArr[i]]);\n        }\n        return [newArr, arrayOfIndividualPoints];\n      }\n\n      async function getLastGameResult(lastGame) {\n        let text;\n        switch (true) {\n          case lastGame === \"L\":\n            text = \"Lost\";\n            break;\n          case lastGame === \"D\":\n            text = \"Drew\";\n            break;\n          case lastGame === \"W\":\n            text = \"Won\";\n            break;\n          default:\n            break;\n        }\n        return text;\n      }\n\n      let homeFormTrend = [\n        homeFiveGameAverage.toFixed(2),\n        homeTenGameAverage.toFixed(2),\n      ];\n\n      let awayFormTrend = [\n        awayFiveGameAverage.toFixed(2),\n        awayTenGameAverage.toFixed(2),\n      ];\n\n      let formTextStringHome;\n      let formTextStringAway;\n\n      if (displayBool === true && gameStats.home[2].LeagueOrAll === \"League\") {\n        formTextStringHome = await GenerateFormSummary(\n          gameStats.home[2],\n          homeFormTrend,\n          gameStats.home[0]\n        );\n        formTextStringAway = await GenerateFormSummary(\n          gameStats.away[2],\n          awayFormTrend,\n          gameStats.away[0]\n        );\n      } else {\n        formTextStringHome = \"\";\n        formTextStringAway = \"\";\n      }\n\n      let homeLastGame = await getLastGameResult(homeForm.LastFiveForm[4]);\n      let awayLastGame = await getLastGameResult(awayForm.LastFiveForm[4]);\n\n      // let homeAttackStrength = await getAttackStrength(\n      //   homeForm.ScoredOverall / 10\n      // );\n\n      const attackingMetricsHome = {\n        // averagePossession: homeForm.AveragePossessionOverall,\n        \"Average Dangerous Attacks\": homeForm.AverageDangerousAttacksOverall,\n        \"Average Shots\": homeForm.AverageShots,\n        \"Average Shots On Target\": homeForm.AverageShotsOnTargetOverall,\n        \"Average Expected Goals\": homeForm.XGOverall,\n        \"Recent XG\": homeForm.XGlast5 ? homeForm.XGlast5 : homeForm.XGOverall,\n        \"Average Goals\":\n          homeForm.averageScoredLeague !== undefined &&\n          homeForm.averageScoredLeague !== null\n            ? homeForm.averageScoredLeague\n            : homeForm.ScoredOverall / 10,\n      };\n      const attackingMetricsAway = {\n        // averagePossession: awayForm.AveragePossessionOverall,\n        \"Average Dangerous Attacks\": awayForm.AverageDangerousAttacksOverall,\n        \"Average Shots\": awayForm.AverageShots,\n        \"Average Shots On Target\": awayForm.AverageShotsOnTargetOverall,\n        \"Average Expected Goals\": awayForm.XGOverall,\n        \"Recent XG\": awayForm.XGlast5 ? awayForm.XGlast5 : awayForm.XGOverall,\n        \"Average Goals\":\n          awayForm.averageScoredLeague !== undefined &&\n          awayForm.averageScoredLeague !== null\n            ? awayForm.averageScoredLeague\n            : awayForm.ScoredOverall / 10,\n      };\n\n      const defensiveMetricsHome = {\n        \"Clean Sheet Percentage\": 100 - homeForm.CleanSheetPercentage,\n        \"Average XG Against\": homeForm.XGAgainstAvgOverall,\n        \"Recent XG Against\": homeForm.XGAgainstlast5\n          ? homeForm.XGAgainstlast5\n          : homeForm.XGAgainstAvgOverall,\n        \"Average Goals Against\":\n          homeForm.averageConceededLeague !== undefined &&\n          homeForm.averageConceededLeague !== null\n            ? homeForm.averageConceededLeague\n            : homeForm.ConcededOverall / 10,\n      };\n\n      const defensiveMetricsAway = {\n        \"Clean Sheet Percentage\": 100 - awayForm.CleanSheetPercentage,\n        \"Average XG Against\": awayForm.XGAgainstAvgOverall,\n        \"Recent XG Against\": awayForm.XGAgainstlast5\n          ? awayForm.XGAgainstlast5\n          : awayForm.XGAgainstAvgOverall,\n        \"Average Goals Against\":\n          awayForm.averageConceededLeague !== undefined &&\n          awayForm.averageConceededLeague !== null\n            ? awayForm.averageConceededLeague\n            : awayForm.ConcededOverall / 10,\n      };\n\n      let homeAttackStrength;\n      let homeDefenceStrength;\n      let homePossessionStrength;\n      let homeXGForStrength;\n      let homeXGAgainstStrength;\n      let awayAttackStrength;\n      let awayDefenceStrength;\n      let awayPossessionStrength;\n      let awayXGForStrength;\n      let awayXGAgainstStrength;\n      let homeDirectnessStrength;\n      let awayDirectnessStrength;\n      let homeAccuracyOverallStrength;\n      let awayAccuracyOverallStrength;\n\n      if (homeForm.xgForStrength) {\n        console.log(\"not calculating\");\n        homeAttackStrength = homeForm.attackingStrength;\n        homeDefenceStrength = homeForm.defensiveStrength;\n        homePossessionStrength = homeForm.possessionStrength;\n        homeXGForStrength = homeForm.xgForStrength;\n        homeXGAgainstStrength = homeForm.xgAgainstStrength;\n        homeDirectnessStrength = homeForm.directnessOverallStrength;\n        homeAccuracyOverallStrength = homeForm.accuracyOverallStrength;\n\n        awayAttackStrength = awayForm.attackingStrength;\n        awayDefenceStrength = awayForm.defensiveStrength;\n        awayPossessionStrength = awayForm.possessionStrength;\n        awayXGForStrength = awayForm.xgForStrength;\n        awayXGAgainstStrength = awayForm.xgAgainstStrength;\n        awayDirectnessStrength = awayForm.directnessOverallStrength;\n        awayAccuracyOverallStrength = awayForm.accuracyOverallStrength;\n      } else {\n        homeAttackStrength = await calculateAttackingStrength(\n          attackingMetricsHome\n        );\n\n        homeDefenceStrength = await calculateDefensiveStrength(\n          defensiveMetricsHome\n        );\n\n        homePossessionStrength = await calculateMetricStrength(\n          \"averagePossession\",\n          homeForm.AveragePossessionOverall\n        );\n\n        homeXGForStrength = await calculateMetricStrength(\n          \"xgFor\",\n          gameStats.home[2].XGOverall\n        );\n\n        homeXGAgainstStrength = await calculateMetricStrength(\n          \"xgAgainst\",\n          3 - gameStats.home[2].XGAgainstAvgOverall\n        );\n        console.log(homeForm)\n        homeDirectnessStrength = await calculateMetricStrength(\n          \"directnessOverall\",\n          homeForm.directnessOverall\n        );\n        homeAccuracyOverallStrength = await calculateMetricStrength(\n          \"accuracyOverall\",\n          homeForm.shootingAccuracy\n        );\n\n        awayAttackStrength = await calculateAttackingStrength(\n          attackingMetricsAway\n        );\n        awayDefenceStrength = await calculateDefensiveStrength(\n          defensiveMetricsAway\n        );\n        awayPossessionStrength = await calculateMetricStrength(\n          \"averagePossession\",\n          awayForm.AveragePossessionOverall\n        );\n        awayXGForStrength = await calculateMetricStrength(\n          \"xgFor\",\n          gameStats.away[2].XGOverall\n        );\n\n        awayXGAgainstStrength = await calculateMetricStrength(\n          \"xgAgainst\",\n          3 - gameStats.away[2].XGAgainstAvgOverall\n        );\n        awayDirectnessStrength = await calculateMetricStrength(\n          \"directnessOverall\",\n          awayForm.directnessOverall\n        );\n        awayAccuracyOverallStrength = await calculateMetricStrength(\n          \"accuracyOverall\",\n          awayForm.shootingAccuracy\n        );\n      }\n\n      let [formPointsHome, testArrayHome] = await getPointsFromGames(\n        gameStats.home[2].WDLRecord\n      );\n      let [formPointsAway, testArrayAway] = await getPointsFromGames(\n        gameStats.away[2].WDLRecord\n      );\n\n      let rollingGoalDiffHome = [\n        (gameStats.home[0].ScoredOverall - gameStats.home[0].ConcededOverall) /\n          10,\n        (gameStats.home[1].ScoredOverall - gameStats.home[1].ConcededOverall) /\n          6,\n        (gameStats.home[2].ScoredOverall - gameStats.home[2].ConcededOverall) /\n          5,\n      ];\n\n      let rollingGoalDiffAway = [\n        (gameStats.away[0].ScoredOverall - gameStats.away[0].ConcededOverall) /\n          10,\n        (gameStats.away[1].ScoredOverall - gameStats.away[1].ConcededOverall) /\n          6,\n        (gameStats.away[2].ScoredOverall - gameStats.away[2].ConcededOverall) /\n          5,\n      ];\n\n      const formDataMatch = [];\n\n      formDataMatch.push({\n        btts: game.btts_potential,\n      });\n\n      const formDataHome = [];\n\n      formDataHome.push({\n        name: game.homeTeam,\n        Last5: gameStats.home[2].LastFiveForm,\n        LeagueOrAll: gameStats.home[2].LeagueOrAll,\n        AverageGoals: homeForm.ScoredOverall / 10,\n        AverageConceeded: homeForm.ConcededOverall / 10,\n        AverageXG: homeForm.XGOverall,\n        AverageXGConceded: homeForm.XGAgainstAvgOverall,\n        AveragePossession: homeForm.AveragePossessionOverall,\n        AverageShotsOnTarget: homeForm.AverageShotsOnTargetOverall,\n        AverageDangerousAttacks: homeForm.AverageDangerousAttacksOverall,\n        homeOrAway: \"Home\",\n        leaguePosition: homeForm.LeaguePosition,\n        Last5PPG: homeForm.PPG,\n        SeasonPPG: homeForm.SeasonPPG,\n        lastGame: homeLastGame,\n        formRun: homeForm.formRun,\n        goalDifference: homeForm.goalDifference,\n        goalDifferenceHomeOrAway: homeForm.goalDifferenceHomeOrAway,\n        BttsPercentage: game.bttsAllPercentageHome || \"-\",\n        BttsPercentageHomeOrAway: game.bttsPercentageHomeHome || \"-\",\n        CardsTotal: homeForm.CardsTotal || \"-\",\n        CornersAverage: homeForm.AverageCorners || \"-\",\n        FormTextStringHome: formTextStringHome,\n        BTTSArray: bttsArrayHome,\n        Results: resultsArrayHome,\n        // BTTSAll: homeForm.last10btts,\n        // BTTSHorA: homeForm.last10bttsHome,\n      });\n\n      const formDataAway = [];\n\n      formDataAway.push({\n        name: game.awayTeam,\n        Last5: gameStats.away[2].LastFiveForm,\n        LeagueOrAll: gameStats.away[2].LeagueOrAll,\n        AverageGoals: awayForm.ScoredOverall / 10,\n        AverageConceeded: awayForm.ConcededOverall / 10,\n        AverageXG: awayForm.XGOverall,\n        AverageXGConceded: awayForm.XGAgainstAvgOverall,\n        AveragePossession: awayForm.AveragePossessionOverall,\n        AverageShotsOnTarget: awayForm.AverageShotsOnTargetOverall,\n        AverageDangerousAttacks: awayForm.AverageDangerousAttacksOverall,\n        homeOrAway: \"Away\",\n        leaguePosition: awayForm.LeaguePosition,\n        Last5PPG: awayForm.PPG,\n        SeasonPPG: awayForm.SeasonPPG,\n        lastGame: awayLastGame,\n        formRun: awayForm.formRun,\n        goalDifference: awayForm.goalDifference,\n        goalDifferenceHomeOrAway: awayForm.goalDifferenceHomeOrAway,\n        BttsPercentage: game.bttsAllPercentageAway || \"-\",\n        BttsPercentageHomeOrAway: game.bttsPercentageAwayAway || \"-\",\n        CardsTotal: awayForm.CardsTotal || \"-\",\n        CornersAverage: awayForm.AverageCorners || \"-\",\n        FormTextStringAway: formTextStringAway,\n        BTTSArray: bttsArrayAway,\n        Results: resultsArrayAway,\n        ResultsHomeOrAway: resultsArrayAway,\n        // BTTSAll: awayForm.last10btts,\n        // BTTSHorA: awayForm.last10bttsAway,\n      });\n\n      let formArrayHome;\n      let formArrayAway;\n      let chartType;\n\n      if (formPointsHome.length > 1) {\n        formArrayHome = formPointsHome;\n        formArrayAway = formPointsAway;\n        chartType = \"Points over time\";\n      } else {\n        formArrayHome = [\n          homeTenGameAverage,\n          homeSixGameAverage,\n          homeFiveGameAverage,\n        ];\n        formArrayAway = [\n          awayTenGameAverage,\n          awaySixGameAverage,\n          awayFiveGameAverage,\n        ];\n        chartType = \"Rolling average points over last 10\";\n      }\n\n      ReactDOM.render(\n        <div style={style}>\n          <div className=\"H2HStats\" id={`H2HStats${game.id}`}></div>\n          <div className=\"TrendsHome\" id={`TrendsHome${game.id}`}></div>\n          <div className=\"TrendsAway\" id={`TrendsAway${game.id}`}></div>\n        </div>,\n        document.getElementById(\"history\" + homeTeam)\n      );\n\n      //This tournament does not have league positions\n      if (game.leagueName === \"Europe UEFA Women's Euro\") {\n        game.homeTeamHomePosition = \"N/A\";\n        game.awayTeamAwayPosition = \"N/A\";\n      }\n\n      function singleResult(game) {\n        return (\n          <div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeXG}</span>\n              <span className=\"column\">XG</span>\n              <span className=\"column\">{game.awayXG}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeShots}</span>\n              <span className=\"column\">Shots</span>\n              <span className=\"column\">{game.awayShots}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeSot}</span>\n              <span className=\"column\">SOT</span>\n              <span className=\"column\">{game.awaySot}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeDangerousAttacks}</span>\n              <span className=\"column\">Dangerous Attacks</span>\n              <span className=\"column\">{game.awayDangerousAttacks}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homePossession}%</span>\n              <span className=\"column\">Possession</span>\n              <span className=\"column\">{game.awayPossession}%</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeRed}</span>\n              <span className=\"column\">Red cards</span>\n              <span className=\"column\">{game.awayRed}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homePPG}</span>\n              <span className=\"column\">PPG (pre-match)</span>\n              <span className=\"column\">{game.awayPPG}</span>\n            </div>\n          </div>\n        );\n      }\n\n      const overviewHome = gameArrayHome.slice(0, 10).map((game) => (\n        <div>\n          <Collapsable\n            classNameButton=\"ResultButton\"\n            buttonText={\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {game.homeGoals} : {game.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n              </div>\n            }\n            element={singleResult(game)}\n          />\n        </div>\n      ));\n\n      const overviewAway = gameArrayAway.slice(0, 10).map((game) => (\n        <div>\n          <Collapsable\n            classNameButton=\"ResultButton\"\n            buttonText={\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {game.homeGoals} : {game.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n              </div>\n            }\n            element={singleResult(game)}\n          />\n        </div>\n      ));\n\n      function StatsHome() {\n        return (\n          <div className=\"flex-childOne\">\n            <ul style={style}>\n              <Stats\n                style={style}\n                homeOrAway=\"Home\"\n                gameCount={divider}\n                key={formDataHome[0].name}\n                last5={formDataHome[0].Last5}\n                homeOrAwayResults={gameArrayHomeTeamHomeGames}\n                LeagueOrAll={formDataHome[0].LeagueOrAll}\n                className={\"KeyStatsHome\"}\n                name={formDataHome[0].name}\n                goals={\n                  homeForm.averageScoredLeague !== undefined &&\n                  homeForm.averageScoredLeague !== null\n                    ? homeForm.averageScoredLeague.toFixed(2)\n                    : formDataHome[0].AverageGoals\n                }\n                conceeded={\n                  homeForm.averageConceededLeague !== undefined &&\n                  homeForm.averageConceededLeague !== null\n                    ? homeForm.averageConceededLeague.toFixed(2)\n                    : formDataHome[0].AverageConceeded\n                }\n                XG={formDataHome[0].AverageXG}\n                XGConceded={formDataHome[0].AverageXGConceded}\n                possession={formDataHome[0].AveragePossession}\n                sot={formDataHome[0].AverageShotsOnTarget}\n                dangerousAttacks={formDataHome[0].AverageDangerousAttacks}\n                leaguePosition={\n                  formDataHome[0].leaguePosition\n                    ? formDataHome[0].leaguePosition\n                    : 0\n                }\n                rawPosition={game.homeRawPosition ? game.homeRawPosition : 0}\n                homeOrAwayLeaguePosition={\n                  game.homeTeamHomePosition ? game.homeTeamHomePosition : 0\n                }\n                winPercentage={\n                  game.homeTeamWinPercentage ? game.homeTeamWinPercentage : 0\n                }\n                lossPercentage={\n                  game.homeTeamLossPercentage ? game.homeTeamLossPercentage : 0\n                }\n                drawPercentage={\n                  game.homeTeamDrawPercentage ? game.homeTeamDrawPercentage : 0\n                }\n                ppg={formDataHome[0].SeasonPPG}\n                formTrend={[\n                  homeTenGameAverage.toFixed(2),\n                  homeSixGameAverage.toFixed(2),\n                  homeFiveGameAverage.toFixed(2),\n                ]}\n                lastGame={homeLastGame}\n                formRun={formDataHome[0].formRun}\n                goalDifference={formDataHome[0].goalDifference}\n                goalDifferenceHomeOrAway={\n                  formDataHome[0].goalDifferenceHomeOrAway\n                }\n                BttsPercentage={formDataHome[0].BttsPercentage}\n                BttsPercentageHomeOrAway={\n                  formDataHome[0].BttsPercentageHomeOrAway\n                }\n                // BTTSAll={\n                //   formDataHome[0].BTTSAll\n                //     ? formDataHome[0].BTTSAll\n                //     : '\"Get Predictions\" first'\n                // }\n                // BTTSHorA={\n                //   formDataHome[0].BTTSHorA\n                //     ? formDataHome[0].BTTSHorA\n                //     : '\"Get Predictions\" first'\n                // }\n                BTTSArray={formDataHome[0].BTTSArray}\n                Results={formDataHome[0].Results}\n                ResultsHomeOrAway={formDataHome[0].wonHomeOrAwayOnly}\n                CardsTotal={formDataHome[0].CardsTotal}\n                CornersAverage={formDataHome[0].CornersAverage}\n                ScoredBothHalvesPercentage={\n                  formDataHome[0].ScoredBothHalvesPercentage\n                }\n                FormTextString={formDataHome[0].FormTextStringHome}\n              />\n            </ul>\n          </div>\n        );\n      }\n\n      function StatsAway() {\n        return (\n          <div className=\"flex-childTwo\">\n            <ul style={style}>\n              <Stats\n                style={style}\n                homeOrAway=\"Away\"\n                gameCount={divider}\n                key={formDataAway[0].name}\n                last5={formDataAway[0].Last5}\n                homeOrAwayResults={gameArrayAwayTeamAwayGames}\n                LeagueOrAll={formDataAway[0].LeagueOrAll}\n                className={\"KeyStatsAway\"}\n                name={formDataAway[0].name}\n                goals={\n                  awayForm.averageScoredLeague !== undefined &&\n                  awayForm.averageScoredLeague !== null\n                    ? awayForm.averageScoredLeague.toFixed(2)\n                    : formDataAway[0].AverageGoals\n                }\n                conceeded={\n                  awayForm.averageConceededLeague !== undefined &&\n                  awayForm.averageConceededLeague !== null\n                    ? awayForm.averageConceededLeague.toFixed(2)\n                    : formDataAway[0].AverageConceeded\n                }\n                XG={formDataAway[0].AverageXG}\n                XGConceded={formDataAway[0].AverageXGConceded}\n                //todo add goal diff and btts percentages\n                possession={formDataAway[0].AveragePossession}\n                rawPosition={game.awayRawPosition ? game.awayRawPosition : 0}\n                sot={formDataAway[0].AverageShotsOnTarget}\n                dangerousAttacks={formDataAway[0].AverageDangerousAttacks}\n                leaguePosition={\n                  formDataAway[0].leaguePosition\n                    ? formDataAway[0].leaguePosition\n                    : 0\n                }\n                homeOrAwayLeaguePosition={\n                  game.awayTeamAwayPosition ? game.awayTeamAwayPosition : 0\n                }\n                winPercentage={\n                  game.awayTeamWinPercentage ? game.awayTeamWinPercentage : 0\n                }\n                lossPercentage={\n                  game.awayTeamLossPercentage ? game.awayTeamLossPercentage : 0\n                }\n                drawPercentage={\n                  game.awayTeamDrawPercentage ? game.awayTeamDrawPercentage : 0\n                }\n                ppg={formDataAway[0].SeasonPPG}\n                formTrend={[\n                  awayTenGameAverage.toFixed(2),\n                  awaySixGameAverage.toFixed(2),\n                  awayFiveGameAverage.toFixed(2),\n                ]}\n                lastGame={awayLastGame}\n                formRun={formDataAway[0].formRun}\n                goalDifference={formDataAway[0].goalDifference}\n                goalDifferenceHomeOrAway={\n                  formDataAway[0].goalDifferenceHomeOrAway\n                }\n                BttsPercentage={formDataAway[0].BttsPercentage}\n                BttsPercentageHomeOrAway={\n                  formDataAway[0].BttsPercentageHomeOrAway\n                }\n                // BTTSAll={\n                //   formDataAway[0].BTTSAll\n                //     ? formDataAway[0].BTTSAll\n                //     : '\"Get Predictions\" first'\n                // }\n                // BTTSHorA={\n                //   formDataAway[0].BTTSHorA\n                //     ? formDataAway[0].BTTSHorA\n                //     : '\"Get Predictions\" first'\n                // }\n                BTTSArray={formDataAway[0].BTTSArray}\n                Results={formDataAway[0].Results}\n                CardsTotal={formDataAway[0].CardsTotal}\n                CornersAverage={formDataAway[0].CornersAverage}\n                ScoredBothHalvesPercentage={\n                  formDataAway[0].ScoredBothHalvesPercentage\n                }\n                FormTextString={formDataAway[0].FormTextStringAway}\n              />\n            </ul>\n          </div>\n        );\n      }\n\n      ReactDOM.render(\n        <div style={style}>\n          <div className=\"Chart\" id={`Chart${game.id}`} style={style}>\n            <RadarChart\n              data={[\n                homeAttackStrength,\n                homeDefenceStrength,\n                homePossessionStrength,\n                homeXGForStrength,\n                homeXGAgainstStrength,\n                homeDirectnessStrength,\n                homeAccuracyOverallStrength,\n              ]}\n              data2={[\n                awayAttackStrength,\n                awayDefenceStrength,\n                awayPossessionStrength,\n                awayXGForStrength,\n                awayXGAgainstStrength,\n                awayDirectnessStrength,\n                awayAccuracyOverallStrength,\n              ]}\n              team1={game.homeTeam}\n              team2={game.awayTeam}\n            ></RadarChart>\n            <BarChart\n              data1={[\n                homeForm.averageScoredLeague !== undefined &&\n                homeForm.averageScoredLeague !== null\n                  ? homeForm.averageScoredLeague.toFixed(2)\n                  : formDataHome[0].AverageGoals,\n                awayForm.averageConceededLeague !== undefined &&\n                awayForm.averageConceededLeague !== null\n                  ? awayForm.averageConceededLeague.toFixed(2)\n                  : formDataAway[0].AverageConceeded,\n                gameStats.home[0].PPG,\n                formDataHome[0].AverageXG,\n                formDataAway[0].AverageXGConceded,\n                formDataHome[0].AverageShotsOnTarget,\n                formDataHome[0].AverageDangerousAttacks / 7.5,\n                formDataHome[0].AveragePossession / 7.5,\n                formDataHome[0].goalDifferenceHomeOrAway / 5,\n                formDataHome[0].CornersAverage,\n              ]}\n              data2={[\n                awayForm.averageScoredLeague !== undefined &&\n                awayForm.averageScoredLeague !== null\n                  ? awayForm.averageScoredLeague.toFixed(2)\n                  : formDataAway[0].AverageGoals,\n                homeForm.averageConceededLeague !== undefined &&\n                homeForm.averageConceededLeague !== null\n                  ? homeForm.averageConceededLeague.toFixed(2)\n                  : formDataHome[0].AverageConceeded,\n                gameStats.away[0].PPG,\n                formDataAway[0].AverageXG,\n                formDataHome[0].AverageXGConceded,\n                formDataAway[0].AverageShotsOnTarget,\n                formDataAway[0].AverageDangerousAttacks / 7.5,\n                formDataAway[0].AveragePossession / 7.5,\n                formDataAway[0].goalDifferenceHomeOrAway / 5,\n                formDataAway[0].CornersAverage,\n              ]}\n            ></BarChart>\n            <Chart\n              height={3}\n              depth={0}\n              data1={formArrayHome}\n              data2={formArrayAway}\n              team1={game.homeTeam}\n              team2={game.awayTeam}\n              type={chartType}\n              tension={0}\n            ></Chart>\n            <Chart\n              height={\n                Math.max(\n                  rollingGoalDiffTotalHome[rollingGoalDiffTotalHome.length - 1],\n                  rollingGoalDiffTotalAway[rollingGoalDiffTotalAway.length - 1]\n                ) > 2\n                  ? Math.max(\n                      rollingGoalDiffTotalHome[\n                        rollingGoalDiffTotalHome.length - 1\n                      ],\n                      rollingGoalDiffTotalAway[\n                        rollingGoalDiffTotalAway.length - 1\n                      ]\n                    )\n                  : 2\n              }\n              depth={\n                Math.min(\n                  rollingGoalDiffTotalHome[rollingGoalDiffTotalHome.length - 1],\n                  rollingGoalDiffTotalAway[rollingGoalDiffTotalAway.length - 1]\n                ) < -2\n                  ? Math.min(\n                      rollingGoalDiffTotalHome[\n                        rollingGoalDiffTotalHome.length - 1\n                      ],\n                      rollingGoalDiffTotalAway[\n                        rollingGoalDiffTotalAway.length - 1\n                      ]\n                    )\n                  : -2\n              }\n              data1={rollingGoalDiffTotalHome}\n              data2={rollingGoalDiffTotalAway}\n              team1={game.homeTeam}\n              team2={game.awayTeam}\n              type={\"Goal difference over time\"}\n              tension={0.3}\n            ></Chart>\n          </div>\n          <div style={style}>\n            <Div className=\"MatchTime\" text={`Kick off: ${time} GMT`}></Div>\n            <Div\n              text={`Last league games (most recent first)`}\n              className={\"LastGameHeader\"}\n            ></Div>\n          </div>\n          <div className=\"flex-container\">\n            <div className=\"flex-childOneOverviewSmall\">{overviewHome}</div>\n            <div className=\"flex-childTwoOverviewSmall\">{overviewAway}</div>\n          </div>\n          {/* <Collapsable\n            className={\"Detail\"}\n            classNameTwo={\"flex-childOneOverview\"}\n            classNameThree={\"flex-childTwoOverview\"}\n            classNameFlex={\"flex-element\"}\n            classNameButton={\"DetailedFixtures\"}\n            buttonText={\"Detailed results\"}\n            newText={\"Detailed results\"}\n            element={contentHome}\n            elementTwo={contentAway}\n            // style={style}\n          /> */}\n          <div className=\"flex-container\">\n            <StatsHome />\n            <StatsAway />\n          </div>\n          <input type=\"hidden\" name=\"IL_IN_ARTICLE\" />\n          <Button\n            className=\"MoreStats\"\n            onClickEvent={() =>\n              getTeamStats(\n                game.id,\n                game.homeTeam,\n                game.awayTeam,\n                formDataHome[0].BttsPercentage,\n                formDataHome[0].BttsPercentageHomeOrAway,\n                formDataAway[0].BttsPercentage,\n                formDataAway[0].BttsPercentageHomeOrAway\n              )\n            }\n            text={\"Fixture trends\"}\n          ></Button>\n        </div>,\n        document.getElementById(\"stats\" + homeTeam)\n      );\n    }\n\n    // ReactDOM.render(\n    //   <Button\n    //     className=\"MoreStats\"\n    //     style={style}\n    //     onClickEvent={() =>\n    //       getTeamStats(\n    //         game.id,\n    //         game.homeTeam,\n    //         game.awayTeam,\n    //         formDataHome[0].BttsPercentage,\n    //         formDataHome[0].BttsPercentageHomeOrAway,\n    //         formDataAway[0].BttsPercentage,\n    //         formDataAway[0].BttsPercentageHomeOrAway\n    //       )\n    //     }\n    //     text={\"Fixture trends\"}\n    //   ></Button>,\n    //   document.getElementById(`H2HStats${game.id}`)\n    // );\n  }\n}\n","import React, { Fragment, useState } from \"react\";\nimport { CreateBadge } from \"./createBadge\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { Checkbox } from \"./Checkbox\";\nimport { createStatsDiv } from \"../logic/getStats\";\nimport { renderTable } from \"../logic/getFixtures\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport { json, useNavigate } from \"react-router-dom\";\nimport { Zoom } from \"swiper\";\nimport { useDispatch } from \"react-redux\";\nimport { setData } from \"../logic/dataSlice\";\nimport { Provider } from \"react-redux\";\nimport store from \"../logic/store\"; // Import your Redux store\nimport { formObjectHome } from \"../logic/getScorePredictions\";\nimport { clicked } from \"../logic/getScorePredictions\";\n\nlet resultValue;\nvar count;\nlet mockValue;\nvar setCount;\n\nfunction toggle(bool) {\n  count = !bool;\n  return count;\n}\n\nfunction GetDivider(fixture, mock) {\n  const matchStatus = fixture.status;\n  let isPrediction = resultValue;\n\n  if (mockValue === true && matchStatus === \"complete\") {\n    isPrediction = false;\n    return (\n      <Fragment>\n        <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n        <div\n          className=\"CorrectScore\"\n          key={fixture.fixture.homeTeam}\n          data-cy={\"score-\" + fixture.fixture.id}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (mockValue === true && matchStatus !== \"complete\") {\n    isPrediction = true;\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (isPrediction === false && matchStatus !== \"complete\") {\n    return (\n      <div className=\"divider\" data-cy={\"divider-\" + fixture.fixture.id}>\n        {\"V\"}\n      </div>\n    );\n  } else if (isPrediction === false && matchStatus === \"complete\") {\n    return (\n      <div\n        className=\"Result\"\n        data-cy={\"result-\" + fixture.fixture.id}\n      >{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n    );\n  } else if (isPrediction === true && matchStatus === \"complete\") {\n    let outcome;\n    let prediction;\n\n    switch (true) {\n      case fixture.fixture.homeGoals > fixture.fixture.awayGoals:\n        outcome = 0;\n        fixture.fixture.winner = fixture.fixture.homeTeam;\n        fixture.fixture.outcome = \"homeWin\";\n        break;\n      case fixture.fixture.homeGoals === fixture.fixture.awayGoals:\n        outcome = 1;\n        fixture.fixture.winner = \"draw\";\n        fixture.fixture.outcome = \"draw\";\n\n        break;\n      case fixture.fixture.homeGoals < fixture.fixture.awayGoals:\n        outcome = 2;\n        fixture.fixture.winner = fixture.fixture.awayTeam;\n        fixture.fixture.outcome = \"awayWin\";\n\n        break;\n      default:\n        break;\n    }\n\n    switch (true) {\n      case fixture.fixture.goalsA > fixture.fixture.goalsB:\n        prediction = 0;\n        break;\n      case fixture.fixture.goalsA === fixture.fixture.goalsB:\n        prediction = 1;\n        break;\n      case fixture.fixture.goalsA < fixture.fixture.goalsB:\n        prediction = 2;\n        break;\n      default:\n        break;\n    }\n    if (outcome === prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        switch (true) {\n          case outcome === 0:\n            fixture.fixture.profit = fixture.fixture.homeOdds;\n            break;\n          case outcome === 1:\n            fixture.fixture.profit = fixture.fixture.drawOdds;\n            break;\n          case outcome === 2:\n            fixture.fixture.profit = fixture.fixture.awayOdds;\n            break;\n          default:\n            break;\n        }\n      } else fixture.fixture.profit = 1;\n\n      if (\n        fixture.fixture.goalsA === fixture.fixture.homeGoals &&\n        fixture.fixture.goalsB === fixture.fixture.awayGoals\n      ) {\n        fixture.fixture.exactScore = true;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"ExactScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      } else {\n        fixture.fixture.exactScore = false;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"CorrectScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      }\n    } else if (outcome !== prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        fixture.fixture.profit = 0;\n      } else {\n        fixture.fixture.profit = 1;\n      }\n      fixture.fixture.exactScore = false;\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"IncorrectScore\"\n            key={fixture.fixture.awayTeam}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    }\n  } else {\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  }\n}\n\nfunction renderLeagueName(fixture, mock) {\n  mockValue = mock;\n\n  let name = fixture.leagueName;\n  let id =\n    allLeagueResultsArrayOfObjects.length > 0\n      ? allLeagueResultsArrayOfObjects[fixture.leagueIndex].id\n      : null;\n  if (name === null || mock === true) {\n    return <div></div>;\n  } else {\n    return (\n      <div>\n        <div\n          className=\"leagueName\"\n          id={`league${id}`}\n          key={`leagueName${id}div`}\n          onClick={() =>\n            renderTable(\n              fixture.leagueIndex,\n              allLeagueResultsArrayOfObjects[fixture.leagueIndex],\n              id\n            )\n          }\n        >\n          {fixture.leagueName} &#9776;\n        </div>\n        <div\n          className=\"LeagueTable\"\n          key={`leagueName${id}`}\n          id={`leagueName${id}`}\n        ></div>\n      </div>\n    );\n  }\n}\n\nconst downArrow = \"\\u{2195}\";\nexport let testing;\n\nfunction SingleFixture({ fixture, count, mock }) {\n  const dispatch = useDispatch();\n  function StoreData(){\n\n    const fixtureDetails = {\n      homeTeamName: fixture.homeTeam,\n      homeTeamBadge: fixture.homeBadge,\n      awayTeamName: fixture.awayTeam,\n      awayTeamBadge: fixture.awayBadge,\n      stadium: fixture.stadium,\n      time: fixture.time,\n      homeGoals: fixture.goalsA,\n      awayGoals: fixture.goalsB\n    }\n\n    const homeDetails = {\n      \"Attacking Strength\": fixture.formHome.attackingStrength,\n      \"Defensive Strength\": fixture.formHome.defensiveStrength\n    }\n\n    const awayDetails = {\n      \"Attacking Strength\": fixture.formAway.attackingStrength,\n      \"Defensive Strength\": fixture.formAway.defensiveStrength\n    }\n\n    const dataToSend = {\n      key1: 'value1',\n      key2: 'value2',\n    };\n    fixture.formHome.defensiveMetrics[\"Clean Sheet Percentage\"] = fixture.formHome.CleanSheetPercentage\n    fixture.formAway.defensiveMetrics[\"Clean Sheet Percentage\"] = fixture.formAway.CleanSheetPercentage\n\n    localStorage.setItem('homeForm', JSON.stringify(fixture.formHome.attackingMetrics));\n    localStorage.setItem('homeFormDef', JSON.stringify(fixture.formHome.defensiveMetrics));\n    localStorage.setItem('allTeamResultsHome', JSON.stringify(fixture.formHome.allTeamResults));\n    localStorage.setItem('homeDetails', JSON.stringify(homeDetails));\n\n\n    localStorage.setItem('awayForm', JSON.stringify(fixture.formAway.attackingMetrics));\n    localStorage.setItem('awayFormDef', JSON.stringify(fixture.formAway.defensiveMetrics));\n    localStorage.setItem('allTeamResultsAway', JSON.stringify(fixture.formAway.allTeamResults));\n    localStorage.setItem('awayDetails', JSON.stringify(awayDetails));\n\n    localStorage.setItem('fixtureDetails', JSON.stringify(fixtureDetails))\n\n    dispatch(setData(dataToSend));\n  }\n\n\n  async function handleButtonClick(game) {\n    if(clicked === true){\n      StoreData(formObjectHome)\n      window.open(\"/#/fixture\");\n    }\n    else return\n  }\n  return (\n    <div key={fixture.game}>\n      {renderLeagueName(fixture, mock)}\n      <div className=\"individualFixtureContainer\">\n        <li\n          className={\"individualFixture\"}\n          key={fixture.id}\n          data-cy={fixture.id}\n          onClick={() => handleButtonClick(fixture)}\n        >\n          <div className=\"HomeOdds\">{fixture.fractionHome}</div>\n          <div className=\"homeTeam\">\n            {fixture.homeTeam}\n          </div>\n          <GetDivider\n            result={resultValue}\n            status={fixture.status}\n            fixture={fixture}\n          />\n          {/* <div className=\"divider\">{\"V\"}</div> */}\n          <div className=\"awayTeam\">{fixture.awayTeam}</div>\n          <CreateBadge\n            image={fixture.homeBadge}\n            ClassName=\"HomeBadge\"\n            alt=\"Home team badge\"\n            flexShrink={5}\n          />\n          <CreateBadge\n            image={fixture.awayBadge}\n            ClassName=\"AwayBadge\"\n            alt=\"Away team badge\"\n          />\n          <div className=\"AwayOdds\">{fixture.fractionAway}</div>\n        </li>\n        <button\n          className=\"GameStats\"\n          onClick={() =>\n            mock === false ? createStatsDiv(fixture, count) : null\n          }\n          onMouseDown={() => (count = toggle(count))}\n        >\n          Game stats {downArrow}\n        </button>\n        {/* <Checkbox/> */}\n      </div>\n      <div id={\"stats\" + fixture.homeTeam} />\n      <div className=\"MatchHistory\" id={\"history\" + fixture.homeTeam} />\n    </div>\n  );\n}\n\nconst List = ({ fixtures, mock }) => (\n  <div>\n    <div id=\"Headers\"></div>\n    <ul className=\"FixtureList\" id=\"FixtureList\">\n      {fixtures.map((fixture, i) => (\n        <SingleFixture\n          fixture={fixture}\n          key={fixture.game}\n          count={count}\n          mock={mock}\n        />\n      ))}\n    </ul>\n  </div>\n);\n\nexport function Fixture(props) {\n  [count, setCount] = useState(false);\n  resultValue = props.result;\n  return (\n    <Provider store={store}>\n      <List\n        fixtures={props.fixtures}\n        result={resultValue}\n        count={count}\n        mock={props.mock}\n      />\n    </Provider>\n  );\n}\n","// src/dataSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\n\n// src/dataSlice.js\nconst initialState = {\n  dataHome: localStorage.getItem('homeForm'),\n  dataAway: localStorage.getItem('awayForm'),\n  dataHomeDef: localStorage.getItem('homeFormDef'),\n  dataAwayDef: localStorage.getItem('awayFormDef'),\n  allTeamResultsHome: localStorage.getItem('allTeamResultsHome'),\n  allTeamResultsAway: localStorage.getItem('allTeamResultsAway'),\n  homeDetails:localStorage.getItem('homeDetails'),\n  awayDetails:localStorage.getItem('awayDetails'),\n  fixtureDetails: localStorage.getItem('fixtureDetails')\n};\n\nconst dataSlice = createSlice({\n  name: 'data',\n  initialState,\n  reducers: {\n    setData: (state, action) => {\n      state.data = action.payload;\n    },\n  },\n});\n\nexport const { setData } = dataSlice.actions;\n\nexport default dataSlice.reducer;\n","// src/store.js\nimport { configureStore } from '@reduxjs/toolkit';\nimport dataReducer from './dataSlice'; // Your data reducer\n\nconst store = configureStore({\n  reducer: {\n    data: dataReducer, // Ensure this key matches the key in your initialState\n  },\n});\n\nexport default store;\n","import React from \"react\";\n\nfunction DateField(props) {\n  return (\n    <form className=\"DateForm\">\n      <input type=\"date\" id=\"date\" name=\"date\" />\n      <input type=\"submit\" />\n    </form>\n  );\n}\n\nexport default DateField;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { CreateBadge } from './createBadge';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\n\n\nconst TeamPage = () => {\n\n  const storedDataHome = useSelector((state) => state.data.dataHome);\n  const jsonDataHome = JSON.parse(storedDataHome)\n  const propertyNamesHome = Object.entries(jsonDataHome);\n\n  const storedDataHomeDef = useSelector((state) => state.data.dataHomeDef);\n  const jsonDataHomeDef = JSON.parse(storedDataHomeDef)\n  const propertyNamesHomeDef = Object.entries(jsonDataHomeDef);\n\n  const storedDataallTeamResultsHome = useSelector((state) => state.data.allTeamResultsHome);\n  const jsonDataallTeamResultsHome = JSON.parse(storedDataallTeamResultsHome)\n  const propertyNamesallTeamResultsHome = Object.values(jsonDataallTeamResultsHome);\n\n  const homeDetails = useSelector((state) => state.data.homeDetails);\n  const jsonHomeDetails = JSON.parse(homeDetails)\n\n  const storedDataAway = useSelector((state) => state.data.dataAway);\n  const jsonDataAway = JSON.parse(storedDataAway)\n  const propertyNamesAway = Object.entries(jsonDataAway);\n\n  const storedDataAwayDef = useSelector((state) => state.data.dataAwayDef);\n  const jsonDataAwayDef = JSON.parse(storedDataAwayDef)\n  const propertyNamesAwayDef = Object.entries(jsonDataAwayDef);\n\n  const storedDataallTeamResultsAway = useSelector((state) => state.data.allTeamResultsAway);\n  const jsonDataallTeamResultsAway = JSON.parse(storedDataallTeamResultsAway)\n  const propertyNamesallTeamResultsAway = Object.values(jsonDataallTeamResultsAway);\n\n  const awayDetails = useSelector((state) => state.data.awayDetails);\n  const jsonAwayDetails = JSON.parse(awayDetails)\n\n  const storedFixtureDetails = useSelector((state) => state.data.fixtureDetails)\n  const storedFixtureDetailsJson = JSON.parse(storedFixtureDetails)\n\n  const options = {\n    plugins: {\n      title: {\n        display: true,\n        text: 'Team comparison',\n      },\n    },\n    aspectRatio: 0.5,\n    maintainAspectRatio: true,\n    responsive: true,\n    scales: {\n      x: {\n        stacked: true,\n      },\n      y: {\n        stacked: true,\n        display: false\n      },\n    },\n  };\n  const labels = [storedFixtureDetailsJson.homeTeamName, storedFixtureDetailsJson.awayTeamName];\n\n  const data = {\n    labels,\n    datasets: [\n    {\n      data: [jsonHomeDetails[\"Attacking Strength\"], [jsonAwayDetails[\"Attacking Strength\"]]],\n      label: \"Attacking Strength\",\n      backgroundColor: \"#030061\",\n\n    }, \n    {\n      data: [jsonHomeDetails[\"Defensive Strength\"], [jsonAwayDetails[\"Defensive Strength\"]]],\n      label: \"Defensive Strength\",\n      backgroundColor: \"#CC3314\",\n    }, \n  ]\n  };\n  \n\n\n\n\n  return (\n      <div className=\"TeamStatsContainer\">\n      <div className='FixtureHeadingContiner'>\n          <CreateBadge image={storedFixtureDetailsJson.homeTeamBadge}\n            ClassName=\"HomeTeamBadge\"\n            alt=\"Home team badge\">\n          </CreateBadge>\n            {`${storedFixtureDetailsJson.homeTeamName} v ${storedFixtureDetailsJson.awayTeamName}`}\n            <CreateBadge image={storedFixtureDetailsJson.awayTeamBadge}\n            ClassName=\"AwayTeamBadge\"\n            alt=\"Away team badge\">\n          </CreateBadge>\n      </div>\n      <h4>{storedFixtureDetailsJson.stadium} KO: {storedFixtureDetailsJson.time}</h4>\n      <h4>XGTipping Prediction: {storedFixtureDetailsJson.homeGoals} - {storedFixtureDetailsJson.awayGoals}</h4>\n      <div className=\"TeamStats\">\n      <ul className='HomeTeamStats'>\n      <h4>{storedFixtureDetailsJson.homeTeamName}</h4>\n        {propertyNamesHome.map(([key, value], index) => (\n          <li key={index}>\n            <strong>{key}:</strong> {typeof value === 'object' ? JSON.stringify(value) : value}\n          </li>\n        ))}\n      </ul>\n      <ul className='AwayTeamStats'>\n      <h4>{storedFixtureDetailsJson.awayTeamName}</h4>\n        {propertyNamesAway.map(([key, value], index) => (\n          <li key={index}>\n            <strong>{key}:</strong> {typeof value === 'object' ? JSON.stringify(value) : value}\n          </li>\n        ))}\n      </ul>\n      <ul className='HomeTeamStats'>\n        {propertyNamesHomeDef.map(([key, value], index) => (\n          <li key={index}>\n            <strong>{key}:</strong> {typeof value === 'object' ? JSON.stringify(value) : value}\n          </li>\n        ))}\n      </ul>\n      <ul className='AwayTeamStats'>\n        {propertyNamesAwayDef.map(([key, value], index) => (\n          <li key={index}>\n            <strong>{key}:</strong> {typeof value === 'object' ? JSON.stringify(value) : value}\n          </li>\n        ))}\n      </ul>\n      <div className='ChartContainer'>\n      <span className='Spacer'></span>\n      <Bar options={options} data={data} className='ComparisonBar'/>\n      <span className='Spacer'></span>\n      </div>\n      <ul className='HomeTeamResults'>\n      {propertyNamesallTeamResultsHome.map((match, index) => (\n        <><div className='MatchDate'>{match.date}</div><div className=\"ResultRowOverviewSmall\">\n          <div className=\"columnOverviewHomeSmall\">{match.homeTeam}</div>\n          <span className=\"columnOverviewScoreSmall\">\n            {match.homeGoals} : {match.awayGoals}\n          </span>\n          <div className=\"columnOverviewAwaySmall\">{match.awayTeam}</div>\n        </div></>\n        ))}\n      </ul>\n      <ul className='AwayTeamResults'>\n      {propertyNamesallTeamResultsAway.map((match, index) => (\n        <><div className='MatchDate'>{match.date}</div><div className=\"ResultRowOverviewSmall\">\n          <div className=\"columnOverviewHomeSmall\">{match.homeTeam}</div>\n          <span className=\"columnOverviewScoreSmall\">\n            {match.homeGoals} : {match.awayGoals}\n          </span>\n          <div className=\"columnOverviewAwaySmall\">{match.awayTeam}</div>\n        </div></>\n        ))}\n      </ul>\n      </div>\n      </div>\n  );\n};\n\n\n\nexport default TeamPage;","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./components/Header\";\nimport { Button } from \"./components/Button\";\nimport OddsRadio from \"./components/OddsRadio\";\nimport { Fixture } from \"./components/Fixture\";\nimport mockedFixtures from \"./data/mockedFixtures.json\";\nimport { selectedOdds } from \"./components/OddsRadio\";\nimport Collapsable from \"./components/CollapsableElement\";\nimport { StyledKofiButton } from \"./components/KofiButton\";\nimport DateField from \"./components/DateForm\";\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  RedditShareButton,\n  RedditIcon,\n  TelegramShareButton,\n  TelegramIcon,\n  TwitterShareButton,\n  TwitterIcon,\n  WhatsappShareButton,\n  WhatsappIcon,\n} from \"react-share\";\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\nimport TeamPage from \"./components/Team\";\nimport { generateFixtures } from \"./logic/getFixtures\";\nimport { selectedOption } from \"./components/radio\";\nimport { ThreeDots } from \"react-loading-icons\";\n// import { Toggles } from \"./components/Toggle\";\nimport reactDom from \"react-dom\";\n// require(\"dotenv\").config();\n\nexport const proxyurl = \"https://safe-caverns-99679.herokuapp.com/\";\nexport var fixtureList = [];\nexport let allLeagueData = [];\n\nexport const availableLeagues = [];\nexport var orderedLeagues = [];\n\nconst leagueOrder = [\n  7432, //World Cup 22\n  9660, //premier league 22/23\n  9663, //championship 22/23\n  9582, //league 1 22/23\n  9581, //league 2 22/23\n  9700, //National league 22/23\n  9665, //La Liga 22/23\n  9636, //Scottish Prem 22/23\n  9655, //Bundesliga 22/23\n  9697, //Serie A 22/23\n  9674, //French Prem 22/23\n  9984, //Portagul Prem 22/23\n  9653, //Dutch Prem 22/23\n  9577, //Belgian Pro League 22/23\n  8737, //sweden 23\n  9545, //Danish Prem 22/23\n  8739, //Norway Prem 23\n  9954, //Austrian Prem 22/23\n  9889, //Greek Prem 22/23\n  9553, //Polish prem 22/23\n  9580, //Swiss prem 22/23\n  8741, //Irish Prem 23\n  9675, //Spanish secunda 22/23\n  9808, //Italy serie B 22/23\n  9656, //Bundesliga 2 22/23\n  9741, //German 3rd tier 22/23\n  9621, //French League 2 22/23\n  9637, //Scottish Championship 22/23\n  9639, //Scottish league 1 22/23\n  9638, //Scottish league 2 22/23\n  9890, //Women's prem 23/24\n  8777, //MLS 23\n  9035, //Brazil prem 23\n  8595, //Argentina prem 23\n  // 6935, //Japan 22\n  9525, //Mexico prem 23/24\n  9972, //National league North and South 22/23\n  10505, //Australian A league 23/24\n  8899, //S Korea 23\n];\n\nlet today;\nlet todayFootyStats;\nlet tomorrow;\nlet tomorrowFootyStats;\nlet date;\nlet dateFootyStats;\nlet value;\nlet yesterday;\nlet yesterdayFootyStats;\nlet lastSaturday;\nlet lastSaturdayFootyStats;\nlet historic;\nlet historicFootyStats;\nlet tomorrowsDate;\nlet yesterdaysDate;\nlet saturdayDate;\nlet historicDate;\nlet string;\nlet dateString;\n\n(async function fetchLeagueData(){\n  let leagueList;\n\n  leagueList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}leagueList`);\n\n  let leagueArray;\n  await leagueList.json().then((leagues) => {\n    leagueArray = Array.from(leagues.data);\n  });\n\n  for (let i = 0; i < leagueArray.length; i++) {\n    const league = leagueArray[i];\n    const name = leagueArray[i].name;\n\n    for (let x = 0; x < league.season.length; x++) {\n      const element = league.season[x];\n\n      if (element.year === 2023 || element.year === 20232024) {\n        if (element.id !== 4340 && element.id !== 6935 && element.id !== 7061) {\n          availableLeagues.push({ name: name, element });\n        }\n      }\n    }\n\n    async function mapOrder(array, order, key) {\n      array.sort(function (a, b) {\n        var A = a.element[key],\n          B = b.element[key];\n\n        if (order.indexOf(A) > order.indexOf(B)) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n      return array;\n    }\n    //leagues ordered by id\n    orderedLeagues = await mapOrder(availableLeagues, leagueOrder, \"id\");\n  }\n  return orderedLeagues;\n})()\n\nexport async function getLeagueList() {\n  let i = 0;\n  date = new Date();\n  string = \"Today\";\n\n  async function incrementDate(num, date) {\n    i = i + num;\n    value = i + num;\n    date.setDate(date.getDate() + num);\n    [date, dateFootyStats] = await calculateDate(date);\n    string = dateFootyStats;\n    await renderButtons();\n    // return date;\n  }\n\n  async function decrementDate(num, date) {\n    i = i - num;\n    console.log(i);\n    if (i > -60) {\n      value = i - num;\n      date.setDate(date.getDate() - num);\n      [date, dateFootyStats] = await calculateDate(date);\n      string = dateFootyStats;\n      dateString = date;\n      await renderButtons();\n    }\n  }\n\n  async function calculateDate(dateString) {\n    const day = dateString.getDate();\n    const month = dateString.getMonth() + 1;\n    const year = dateString.getFullYear();\n    return [`${month}${day}${year}`, `${year}-${month}-${day}`];\n  }\n\n  [today, todayFootyStats] = await calculateDate(new Date());\n\n  tomorrowsDate = new Date();\n  tomorrowsDate.setDate(tomorrowsDate.getDate() + 1);\n  [tomorrow, tomorrowFootyStats] = await calculateDate(tomorrowsDate);\n\n  yesterdaysDate = new Date();\n  yesterdaysDate.setDate(yesterdaysDate.getDate() - 1);\n  [yesterday, yesterdayFootyStats] = await calculateDate(yesterdaysDate);\n\n  saturdayDate = new Date();\n  saturdayDate.setDate(\n    saturdayDate.getDate() - ((saturdayDate.getDay() + 6) % 7)\n  );\n  saturdayDate.setDate(saturdayDate.getDate() - 2);\n  [lastSaturday, lastSaturdayFootyStats] = await calculateDate(saturdayDate);\n\n  historicDate = new Date();\n  historicDate.setDate(\n    historicDate.getDate() - ((historicDate.getDay() + 6) % 7)\n  );\n  historicDate.setDate(historicDate.getDate() - 9);\n  [historic, historicFootyStats] = await calculateDate(historicDate);\n\n  const text =\n    \"Select a day you would like to retrieve fixtures for from the options above\\n A list of games will be returned once the data has loaded\\n Once all fixtures have loaded, click on “Get Predictions” to see XGTipping's forecasted outcomes for every game\\n If a game has completed, the predictions is displayed on the right and the actual result on the left\\n Each individual fixture is tappable/clickable. By doing so, you can access a range of detailed stats, from comparative charts, granular performance measures to previous meetings.\\n All games are subject to the same automated prediction algorithm with the outcome being a score prediction. Factors that determine the tip include the following, amongst others:\\n - Goal differentials\\n - Expected goal differentials \\n - Attack/Defence performance\\n - Form trends over time\\n - Home/Away records\\n - WDL records\\n - Points per game \\n - A range of other comparative factors\\n  –\\n\";\n\n  const text2 =\n    \"A range of tools are available should you wish to use them\\n Build a multi - Use the '+' or '-' buttons to add or remove a game deemed to be one of XGTIpping's highest confidence tips from the day\\n Exotic of the day: A pre-built exotic multi comprising of XGTipping's highest confidence tips\\n BTTS games: Games where both teams to score is deemed a likely outcome\\n Over 2.5 goals tips: Games where over 2.5 goals are most likely to be scored\\n XG tips: Comprises only games where the expected goal differentials between each team are at their greatest. We believe this shows a true disparity in the form of the two opposing teams\\n Tap the 'How to use' option to hide this text\";\n\n  let textJoined = text.concat(text2);\n\n  let newText = textJoined.split(\"\\n\").map((i) => {\n    return <p>{i}</p>;\n  });\n\n  async function renderButtons() {\n    ReactDOM.render(\n      <div className=\"FixtureButtons\">\n        <div className=\"historicResults\">\n          <Button\n            text={\"Last Saturday\"}\n            className=\"HistoricFixturesButton\"\n            onClickEvent={async () =>\n              fixtureList.push(\n                await generateFixtures(\n                  \"lastSaturday\",\n                  lastSaturday,\n                  selectedOdds,\n                  lastSaturdayFootyStats,\n                  false,\n                  today\n                )\n              )\n            }\n          />\n          {/* <Button\n            text={\"Historic predictions\"}\n            className=\"HistoricFixturesButtonRight\"\n            onClickEvent={async () =>\n              fixtureList.push(\n                await generateFixtures(\n                  \"historic\",\n                  historic,\n                  selectedOdds,\n                  historicFootyStats\n                )\n              )\n            }\n          /> */}\n        </div>\n        <Button\n          text={`<`}\n          className=\"FixturesButton\"\n          // onClickEvent={async () =>\n          //   fixtureList.push(\n          //     await generateFixtures(\n          //       \"yesterdaysFixtures\",\n          //       yesterday,\n          //       selectedOdds,\n          //       yesterdayFootyStats\n          //     )\n          //   )\n          // }\n          onClickEvent={async () => await decrementDate(1, date)}\n        />\n        <Button\n          text={dateFootyStats !== undefined ? dateFootyStats : date}\n          className=\"FixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"todaysFixtures\",\n                dateString,\n                selectedOdds,\n                dateFootyStats,\n                false,\n                today\n              )\n            )\n          }\n        />\n        <Button\n          text={`Today`}\n          className=\"FixturesButtonToday\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"todaysFixtures\",\n                today,\n                selectedOdds,\n                todayFootyStats,\n                true,\n                today\n              )\n            )\n          }\n        />\n        <Button\n          text={\"Tomorrow\"}\n          className=\"FixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"tomorrowsFixtures\",\n                tomorrow,\n                selectedOdds,\n                tomorrowFootyStats,\n                true,\n                today\n              )\n            )\n          }\n        />\n      </div>,\n      document.getElementById(\"Buttons\")\n    );\n  }\n\n  ReactDOM.render(\n    <div className=\"FixtureButtons\">\n      <div className=\"historicResults\">\n        <Button\n          text={\"Last Saturday\"}\n          className=\"HistoricFixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"lastSaturday\",\n                lastSaturday,\n                selectedOdds,\n                lastSaturdayFootyStats,\n                false,\n                today\n              )\n            )\n          }\n        />\n        {/* <Button\n          text={\"Historic predictions\"}\n          className=\"HistoricFixturesButtonRight\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"historic\",\n                historic,\n                selectedOdds,\n                historicFootyStats\n              )\n            )\n          }\n        /> */}\n      </div>\n      <Button\n        text={`<`}\n        className=\"FixturesButton\"\n        onClickEvent={async () => await decrementDate(1, date)}\n      />\n      <Button\n        text={`${string}`}\n        className=\"FixturesButtonToday\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"todaysFixtures\",\n              today,\n              selectedOdds,\n              todayFootyStats,\n              true,\n              today\n            )\n          )\n        }\n      />\n      <Button\n        text={\"Tomorrow\"}\n        className=\"FixturesButton\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"tomorrowsFixtures\",\n              tomorrow,\n              selectedOdds,\n              tomorrowFootyStats,\n              true,\n              today\n            )\n          )\n        }\n      />\n      <span>\n        *Not enough data to predict games in the first few gameweeks -\n        predictions displayed as 'x - x'\n      </span>\n    </div>,\n    document.getElementById(\"Buttons\")\n  );\n  ReactDOM.render(\n    <div className=\"OddsRadios\">\n      <OddsRadio value=\"Fractional odds\"></OddsRadio>\n      <OddsRadio value=\"Decimal odds\"></OddsRadio>\n    </div>,\n    document.getElementById(\"Checkbox\")\n  );\n  ReactDOM.render(\n    <Fragment>\n      <Collapsable\n        // className={\"HowToUse\"}\n        buttonText={\"How to use\"}\n        element={newText}\n      />\n    </Fragment>,\n    document.getElementById(\"XGDiff\")\n  );\n\n  // ReactDOM.render(\n  //   <Button\n  //     text={\"Lowest scoring leagues\"}\n  //     className={\"Under25TeamsButton\"}\n  //     onClickEvent={async () => {\n  //       let leagues = await getLowestScoringLeagues();\n  //       const leagueList = [];\n\n  //       leagues.forEach(async (league) =>\n  //         leagueList.push(\n  //           <ul className=\"GlobalStat\">\n  //             <p className=\"TeamName\">\n  //               {league.league} ({league.leagueCountry})\n  //             </p>\n  //             <li>Average goals: {league.averageGoals}</li>\n  //             <li>Under 2.5 goals %: {league.under25Percentage}%</li>\n  //           </ul>\n  //         )\n  //       );\n\n  //       reactDom.render(\n  //         <div>\n  //           <h3>Leagues with the lowest scoring games</h3>\n  //           <ul>{leagueList}</ul>\n  //         </div>,\n  //         document.getElementById(\"Under25Games\")\n  //       );\n  //     }}\n  //   ></Button>,\n  //   document.getElementById(\"Under25Games\")\n  // );\n\n  // ReactDOM.render(\n  //   <Button\n  //     text={\"Highest scoring leagues\"}\n  //     className={\"Over25TeamsButton\"}\n  //     onClickEvent={async () => {\n  //       let leagues = await getHighestScoringLeagues();\n  //       const leagueList = [];\n\n  //       leagues.forEach(async (league) =>\n  //         leagueList.push(\n  //           <ul className=\"GlobalStat\">\n  //             <p className=\"TeamName\">\n  //               {league.league} ({league.leagueCountry})\n  //             </p>\n  //             <li>Average goals: {league.averageGoals}</li>\n  //             <li>Over 2.5 goals %: {league.over25Percentage}%</li>\n  //           </ul>\n  //         )\n  //       );\n\n  //       reactDom.render(\n  //         <div>\n  //           <h3>Leagues with the highest scoring games</h3>\n  //           <ul>{leagueList}</ul>\n  //         </div>,\n  //         document.getElementById(\"Over25Games\")\n  //       );\n  //     }}\n  //   ></Button>,\n  //   document.getElementById(\"Over25Games\")\n  // );\n};\n\nasync function getHighestScoringLeagues() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}over25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    for (let index = 0; index < 215; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        over25Percentage:\n          leagues.data.top_leagues.data[index].seasonOver25Percentage_overall,\n        division: leagues.data.top_leagues.data[index].division,\n        leagueId: leagues.data.top_leagues.data[index].id,\n      };\n      arr.push(league);\n    }\n  });\n\n  const finalArray = arr.filter(\n    (league) =>\n      leagueOrder.find((element) => element === league.leagueId) &&\n      league.averageGoals >= 2.5\n  );\n\n  let sortedArray = finalArray.sort((a, b) => b.averageGoals - a.averageGoals);\n\n  return sortedArray;\n}\n\nasync function getLowestScoringLeagues() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}under25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    for (let index = 0; index < 215; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        under25Percentage:\n          leagues.data.top_leagues.data[index].seasonUnder25Percentage_overall,\n        leagueId: leagues.data.top_leagues.data[index].id,\n      };\n      arr.push(league);\n    }\n  });\n\n  const finalArray = arr.filter(\n    (league) =>\n      leagueOrder.find((element) => element === league.leagueId) &&\n      league.averageGoals < 2.5\n  );\n\n  let sortedArray = finalArray.sort((a, b) => a.averageGoals - b.averageGoals);\n\n  return sortedArray;\n}\n\nconst welcomeTextUnsplitOne = `Welcome to XGTipping. Your go-to resource for all things football, from predictions, comprehensive head to head stats, results, xg scores, odds, league tables, form, and bespoke multi-builders underpinned by expected goal (XG) data.\\n `;\nlet welcomeTextOne = welcomeTextUnsplitOne.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nconst welcomeTextUnsplitTwo = `XGTipping is completely independent and free to use, relying on a donation model to support running costs. For feedback or feature ideas, get in touch at @TippingXg.`;\nlet welcomeTextTwo = welcomeTextUnsplitTwo.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\n\nfunction App() {\n  getLeagueList();\n  return (\n    <>\n      <div className=\"App\">\n        <Header />\n        <a\n          className=\"SocialLink\"\n          href=\"https://www.reddit.com/r/xgtipping/\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          r/xgtipping\n        </a>\n        <div id=\"LoadingContainer\" className=\"LoadingContainer\" />\n        <div id=\"RadioContainer\" className=\"RadioContainer\">\n          <div id=\"RadioText\" />\n          <div id=\"RadioButtons\" />\n        </div>\n        <div id=\"Day\" />\n        <div id=\"Checkbox\" />\n        <div id=\"ExplainerText\" />\n        <div id=\"Loading\" className=\"Loading\"></div>\n        <div id=\"Buttons\" className=\"Buttons\">\n          <ThreeDots className=\"MainLoading\" fill=\"#030061\" />\n          <div>Loading all fixture and form data...</div>\n        </div>\n        <div id=\"GeneratePredictions\" className=\"GeneratePredictions\" />\n        <div id=\"bestPredictions\" className=\"bestPredictions\" />\n        <div id=\"exoticOfTheDay\" className=\"exoticOfTheDay\" />\n        <div id=\"successMeasure2\" />\n        <div id=\"RowOneContainer\" className=\"RowOneContainer\">\n          <div id=\"BTTS\" className=\"RowOne\" />\n          <div id=\"longShots\" className=\"RowOne\" />\n          <div id=\"draws\" className=\"RowOne\" />\n        </div>\n        <div id=\"insights\" />\n        <div id=\"successMeasure\" />\n        <div id=\"tables\" />\n        <div id=\"homeBadge\" />\n        <div id=\"FixtureContainerHeaders\"></div>\n        {/* <StyledKofiButton buttonText=\"Donations\"></StyledKofiButton> */}\n        <div id=\"XGDiff\" />\n        <div id=\"FixtureContainer\">\n          <h6 className=\"WelcomeText\">{welcomeTextOne}</h6>\n          <h6 className=\"GetMatchStatText\">\n            Below is an example of our tips/results overview for you to\n            familiarise yourself with. Get real fixtures using the date buttons,\n            above. When loaded, tap on one to see full match stats\n          </h6>\n          <div className=\"ExplainerContainer\">\n            <span className=\"oddsHomeExplainer\">Home odds</span>\n            <span className=\"emptyHomeTeam\"></span>\n            <span className=\"scoreExplainer\">Result / KO Time</span>\n            <span className=\"predictionExplainer\">Our Prediction</span>\n            <span className=\"emptyAwayTeam\"></span>\n            <span className=\"oddsAwayExplainer\">Away odds</span>\n          </div>\n          <Fixture\n            fixtures={mockedFixtures.matches}\n            // result={false}\n            mock={true}\n            className={\"individualFixture\"}\n          />\n          <div>\n            <h6 className=\"WelcomeText\">{welcomeTextTwo}</h6>\n            <h6 className=\"WelcomeText\">\n              We cover a range of leagues, including\n              <ul className=\"AllLeagues\">\n                <li className=\"League\">Premier League</li>\n                <li className=\"League\">English Football League</li>\n                <li className=\"League\">La Liga</li>\n                <li className=\"League\">Serie A</li>\n                <li className=\"League\">Bundesliga</li>\n                <li className=\"League\">Ligue 1</li>\n                <li className=\"League\">MLS</li>\n                <li className=\"League\">Primeira Liga</li>\n                <li className=\"League\">Loads more...</li>\n              </ul>\n            </h6>\n          </div>\n          <div>\n            <div className=\"DataText\">Raw data from</div>\n            <a\n              className=\"DataLink\"\n              href=\"https://www.footystats.org\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              footystats.org\n            </a>\n          </div>\n          <div className=\"bitcoin\" id=\"bitcoin\">\n            We aim to remain free to use, contributions are always appreciated\n            though:\n            <a\n              href=\"https://www.ko-fi.com/xgtipping\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Donations\n            </a>\n            <span className=\"bitcoinSymbol\">&#x20bf;itcoin address</span>\n            <span className=\"bitcoinAddress\">\n              bc1q7j62txkvhfu0dt3l0s07saze6pjnyzs26wfgp0\n            </span>\n          </div>\n        </div>\n        <div className=\"Social\">\n          <TwitterShareButton\n            url={\"www.xgtipping.com\"}\n            title={\"#XGTipping\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <TwitterIcon size={\"3em\"} round={true} />\n          </TwitterShareButton>\n          <RedditShareButton\n            url={\"www.xgtipping.com\"}\n            title={\"XGTipping\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <RedditIcon size={\"3em\"} round={true} />\n          </RedditShareButton>\n          <FacebookShareButton\n            url={\"www.xgtipping.com\"}\n            quote={\"XGTipping - data-driven football predictions\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <FacebookIcon size={\"3em\"} round={true} />\n          </FacebookShareButton>\n          <WhatsappShareButton\n            url={\"www.xgtipping.com\"}\n            title={\"XGTipping\"}\n            separator=\": \"\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <WhatsappIcon size={\"3em\"} round={true} />\n          </WhatsappShareButton>\n          <TelegramShareButton\n            url={\"XGTipping\"}\n            title={\"XGTipping\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <TelegramIcon size={\"3em\"} round={true} />\n          </TelegramShareButton>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n// import React from \"react\";\n// import { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\n// import HomePage from \"./components/HomePage\";\n// import TeamPage from \"./components/Team\";\n\n// const App = () => {\n//   return (\n//     <Router>\n//       <Routes>\n//       <Route path=\"/team\" element={<TeamPage />} />\n//         <Route path=\"/\" element={<HomePage />} />\n//         {/* Add more routes */}\n//       </Routes>\n//     </Router>\n//   );\n// };\n\n// export default App;\n","import React, { Component } from \"react\";\nexport var selectedOption = \"5\";\n\nexport var fixtureList = [];\n\nexport class Radio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOption: this.props.value,\n    };\n  }\n\n  handleOptionChange = () => {\n    this.setState({\n      selectedOption: this.props.value,\n    });\n    selectedOption = this.state.selectedOption;\n  };\n\n  render() {\n    return (\n      <section className=\"dark\">\n        <div className={this.props.className}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"lastGames\"\n              checked={this.state.checked}\n              onChange={this.handleOptionChange}\n              data-cy={this.props.value}\n            />\n            <span className=\"design\"></span>\n            <span className=\"text\">Last {this.props.value} games</span>\n          </label>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Radio;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router, Route, Routes, HashRouter } from \"react-router-dom\";\nimport TeamPage from \"./components/Team\";\nimport {Fixture} from \"./components/Fixture\"\nimport { Provider } from \"react-redux\";\nimport store from \"./logic/store\"; // Import your Redux store\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <HashRouter>\n        <Routes>\n          <Route path=\"/fixture\" element={<TeamPage />} />\n          <Route path=\"/\" exact element={<App />} />\n          {/* <Route path=\"/\" element={<Fixture />} /> */}\n        </Routes>\n        </HashRouter>\n    </Provider>\n    ,\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}