{"version":3,"sources":["components/Button.js","components/OddsRadio.js","components/createBadge.js","components/createStatsDiv.js","components/Div.js","logic/getForm.js","components/Slider.js","components/CollapsableElement.js","components/CollapsableStats.js","components/Increment.js","logic/getBTTSPotential.js","components/Carousel.js","components/SliderDiff.js","firebase.js","logic/hasUserPaid.js","logic/authProvider.js","logic/getScorePredictions.js","components/TeamOfTheSeason.js","components/LeagueTable.js","logic/getFixtures.js","components/Table.js","logic/compareFormTrend.js","components/Chart.js","components/SofaScore.js","logic/getStats.js","logic/dataSlice.js","logic/store.js","components/MultitypeChart.js","components/CarouselXGChart.js","components/GameStats.js","components/Fixture.js","components/Contact.js","components/Login.js","components/ProtectedContent.js","App.js","components/images/xg-tipping-high-resolution-logo-transparent.png","components/Logo.js","reportWebVitals.js","components/Team.js","components/Success.js","components/Cancel.js","components/PasswordReset.js","components/CancelSubscription.js","logic/getStatsInsights.js","components/Over25.js","components/Under25.js","components/HighestScoringTeams.js","components/HighestScoringFixtures.js","components/BTTSFixtures.js","components/BTTSTeams.js","index.js"],"names":["Button","props","id","text","variant","type","onClick","onClickEvent","className","disabled","style","selectedOdds","OddsRadio","handleOptionChange","setState","value","state","this","name","checked","onChange","Component","CreateBadge","image","ClassName","src","alt","flexShrink","Stats","styleForm","formIndicator","styleBTTS","BTTSBoolean","clicked","games","Results","homeOrAway","ResultsHorA","homeOrAwayResults","BTTSArray","FormTextString","StyleOfPlay","StyleOfPlayHomeOrAway","undefined","goals","conceeded","possession","XG","XGConceded","XGSwing","toFixed","goalDifference","goalDifferenceHomeOrAway","shots","sot","dangerousAttacks","leaguePosition","winPercentage","ppg","formTrend","CardsTotal","CornersAverage","Div","getForm","match","teams","homeId","awayId","fixtureForm","i","team","fetch","process","response","json","then","formData","lastMatchTimestamp","last_updated_match_timestamp","length","rangeValue","Slide","useState","range","setRange","fractionalValue","setFractionalValue","useEffect","roundedValueOne","Math","round","roundedValueTwo","fractionalOne","oddslib","from","to","precision","fractionalTwo","error","console","log","sx","width","color","event","newValue","valueLabelDisplay","step","min","max","valueLabelFormat","index","Collapsable","transitionTime","trigger","classNameButton","buttonText","classNameFlex","classNameTwo","element","classNameThree","elementTwo","CollapsableStats","children","incrementValue","riskLevel","Increment","IncrementItem","getNewTips","allTips","DecreaseItem","show","getBTTSPotential","homeGoals","awayGoals","directnessHome","directnessAway","homeBTTS","bttsAllPercentageHome","homeOnlyBTTS","bttsPercentageHomeHome","awayOnlyBTTS","bttsPercentageAwayAway","awayBTTS","bttsAllPercentageAway","homeG","awayG","combinedBTTS","bttsFraction","status","awayOdds","btts","bttsChosen","totalGoals","rawFinalHomeGoals","rawFinalAwayGoals","SwiperCore","use","EffectCoverflow","Pagination","Slider","effect","autoHeight","grabCursor","centeredSlides","slidesPerView","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","pagination","clickable","element2","element3","element4","minimumXG","minimumGD","minimumGDHorA","minimumLast6","SlideDiff","setValue","useCase","marks","parseFloat","lower","upper","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","REACT_APP_FIREBASE_MEASUREMENT_ID","app","initializeApp","auth","getAuth","db","getFirestore","checkUserPaidStatus","uid","Error","userRef","doc","getDoc","userSnap","exists","data","isPaidUser","userDetail","finalHomeGoals","finalAwayGoals","homeOdds","AuthContext","createContext","AuthProvider","user","setUser","setIsPaidUser","loading","setLoading","unsubscribe","onAuthStateChanged","currentUser","userData","isPaid","Provider","Headers","append","paid","drawPredictions","sumStatDAWin","sumStatDALoss","sumStatPossessionWin","sumStatPossessionLoss","sumStatSOTWin","sumStatSOTLoss","sumStatPPGLast10Win","sumStatPPGLast10Loss","sumOddsWin","sumOddsLoss","sumXGForWin","sumXGForLoss","sumXGAgainstWin","sumXGAgainstLoss","allDrawOutcomes","totalROI","totalInvestment","totalProfit","convertTimestamp","timestamp","newDate","Date","toLocaleDateString","split","day","month","year","converted","getPointsFromLastX","lastX","pointsAddition","points","forEach","game","isBeforeTimestamp","targetTimestamp","floor","now","fetchUserTips","userGeneratedTips","tips","tipCounts","Object","values","userTips","gameId","tipString","tip","date","formattedTips","entries","flatMap","map","count","formatted","sort","a","b","slice","UserTips","setTips","fetchAndSetUserTips","fetchedTips","getPastLeagueResults","hOrA","form","completeData","allLeagueResultsArrayOfObjects","leagueIndex","fixtures","addTotalsToRecord","record","totalW","W","reduce","sum","totalD","D","totalL","L","create2DArray","arr1","arr2","xg","scored","ceil","teamsHomeResults","filter","fixture","home_name","item","date_unix","teamsAwayResults","away_name","recordAgainstIndividualStyles","recordAgainstIndividualStylesHome","recordAgainstIndividualStylesAway","homeResults","awayResults","oddsSumHome","oddsSumAway","favouriteCount","underdogCount","winningFavouriteCount","drawingFavouriteCount","beatenFavouriteCount","winningUnderdogCount","drawingUnderdogCount","beatenUnderdogCount","resultedGame","game_week","homeGoalCount","pre_match_teamA_overall_ppg","pre_match_teamB_overall_ppg","team_a_xg","awayGoalCount","team_b_xg","team_a_possession","team_a_shots","team_a_shotsOnTarget","team_b_shotsOnTarget","team_a_dangerous_attacks","team_a_corners","odds_ft_1","odds_ft_2","homeTeam","gameweek","homePPGPreMatch","awayPPGPreMatch","awayTeam","XGAgainst","sotAgainst","corners","dateRaw","oddsHome","oddsAway","result","push","team_b_possession","team_b_shots","team_b_dangerous_attacks","team_b_corners","reversedResultsHome","reversedResultsAway","y","allClearFavouriteResultsHome","allClearFavouriteResultsAway","simlarGameResultsHome","concat","allSlightFavouriteResultsHome","allSlightFavouriteResultsAway","allTossupResultsHome","allTossupResultsAway","allUnderdogResultsHome","allUnderdogResultsAway","allMassiveUnderdogResultsHome","allMassiveUnderdogResultsAway","z","simlarGameResultsAway","allTeamResultsUnordered","allTeamResults","pointsWeighted","teamResult","odds","gamesPlayed","allTeamResultsHome","allTeamResultsAway","allTeamResultsLast6","points6","res","pointsSum6","avPoints6","points5","pointsSum5","avPoints5","pointsAll","pointsSumAll","avPointsAll","resultsAll","resultsHome","resultsAway","LastFiveForm","LastSixForm","LastTenForm","avScoredLast5","avScoredLast5Sum","avConceededLast5","avConceededLast5Sum","avDALast5","avDALast5Sum","avSOTLast5","avSOTLast5Sum","avSOTAgainstLast5","avSOTAgainstLast5Sum","avShotsLast5","avShotsLast5Sum","avCornersLast5","avCornersLast5Sum","avPosessionLast5","avPosessionLast5Sum","avXGLast5","avXGLast5Sum","avXGAgainstLast5","avXGAgainstLast5Sum","averageOddsHome","averageOddsAway","oddsReliabilityWin","oddsReliabilityDraw","oddsReliabilityLose","oddsReliabilityWinAsUnderdog","oddsReliabilityDrawAsUnderdog","oddsReliabilityLoseAsUnderdog","reliableIndicator","unreliableIndicator","predictabilityScore","reliabilityString","teamGoalsHome","teamGoalsAway","teamGoalsAll","teamConceededHome","teamConceededAway","teamConceededAll","teamXGForAll","teamXGAgainstAll","teamXGForAllRecentAtStart","teamXGAgainstAllRecentAtStart","teamXGForHome","teamXGAgainstHome","teamXGForAway","teamXGAgainstAway","XGSum","avgXGScored","XGAgainstSum","avgXGConceeded","shortTermXGDiff","longTermXGDiff","XGChangeRecently","possessionSum","avgPossession","possessionHome","possessionSumHome","avgPossessionHome","possessionAway","possessionSumAway","avgPossessionAway","dangerousAttacksSum","avgDangerousAttacks","dangerousAttacksHome","dangerousAttacksSumHome","avgDangerousAttacksHome","dangerousAttacksAway","dangerousAttacksSumAway","avgDangerousAttacksAway","shotsSum","avgShots","shotsHome","shotsSumHome","avgShotsHome","shotsAway","shotsSumAway","avgShotsAway","shotsOnTarget","shotsOnTargetSum","avgShotsOnTarget","shotsOnTargetHome","shotsOnTargetSumHome","avgShotsOnTargetHome","shotsOnTargetAway","shotsOnTargetSumAway","avgShotsOnTargetAway","directnessRating","directnessRatingHome","directnessRatingAway","shotsOnTargetAgainst","shotsOnTargetSumAgainst","avgShotsOnTargetAgainst","shotsOnTargetAgainstHome","shotsOnTargetSumAgainstHome","avgShotsOnTargetAgainstHome","shotsOnTargetAgainstAway","shotsOnTargetSumAgainstAway","avgShotsOnTargetAgainstAway","cornersSum","cornersAv","cornersLast5","cornersSumLast5","cornersAvLast5","last5Corners","cornersHome","cornersSumHome","cornersAvHome","cornersAway","cornersSumAway","cornersAvAway","last5XG","last5XGSum","last5XGAvgFor","last5XGHome","last5XGSumHome","last5XGAvgForHome","last5XGAway","last5XGSumAway","last5XGAvgForAway","XGSumHome","avgXGScoredHome","XGSumAway","avgXGScoredAway","XGAgainstSumHome","avgXGConceededHome","XGAgainstSumAway","avgXGConceededAway","last5XGAgainst","last5XGAgainstSum","last5XGAvgAgainst","last5XGAgainstHome","last5XGAgainstSumHome","last5XGAvgAgainstHome","last5XGAgainstAway","last5XGAgainstSumAway","last5XGAvgAgainstAway","XGDiffNonAverage","XGDiffNonAverageLast5","XGOverall","XGlast5","shotsLast5Arr","shotsLast5Sum","avgShotsLast5","shotsHomeArr","shotsHomeSum","shotsAwayArr","shotsAwaySum","avgShotValue","avgShotValueLast5","avgShotValueHome","avgShotValueAway","XGAgainstAvgOverall","XGAgainstlast5","AveragePossessionOverall","AverageDangerousAttacksOverall","AverageCorners","AverageShotsOnTargetOverall","AverageShotsOnTargetAgainstOverall","alpha","beta","allGoalsArrayHome","allConceededArrayHome","allGoalsArrayHomeOnly","allConceededArrayHomeOnly","sumTwo","predictGoalsWithExponentialSmoothing","reverse","forAndAgainstRollingAv","forAndAgainstRollingAvHomeOrAway","allGoalsArrayAway","allConceededArrayAway","allGoalsArrayAwayOnly","allConceededArrayAwayOnly","bttsHome","bttsAway","bttsAll","last5BTTS","bttsHomeCount","bttsHomeString","bttsHomePercentage","bttsAwayCount","bttsAwayString","bttsAwayPercentage","bttsAllCount","bttsAllString","bttsAllPercentage","bttsLast5Count","bttsLast5Percentage","r","x","predictNextWeightedMovingAverage","teamGoalsHomeRollingAverage","teamGoalsAwayRollingAverage","xgAndScored","xgAgainstAndConceeded","xgAndScoredHome","xgAgainstAndConceededHome","xgAndScoredAway","xgAgainstAndConceededAway","RoundedXGForV2","RoundedXGAgainstV2","RoundedXGForHomeV2","RoundedXGAgainstHomeV2","RoundedXGForAwayV2","RoundedXGAgainstAwayV2","ArrXGFor","ArrXGAgainst","ArrXGForHome","ArrXGAgainstHome","ArrXGForAway","ArrXGAgainstAway","twoDGoalsArray","twoDGoalsArrayHome","twoDGoalsArrayAway","XGPrediction","XGPredictionHome","XGPredictionAway","teamConceededHomeRollingAverage","teamConceededAwayRollingAverage","avgScored","sumHome","avgScoredHome","sumAway","avgScoredAway","last5","last5Sum","last5AvgScored","last5Home","last5SumHome","last5AvgScoredHome","last5Away","last5SumAway","last5AvgScoredAway","last5Conceeded","last5ConceededSum","last5AvgConceeded","last5GoalDiff","last5ConceededHome","last5ConceededSumHome","last5AvgConceededHome","last5ConceededAway","last5ConceededSumAway","last5AvgConceededAway","last10","last10Sum","last10AvgScored","last10Conceeded","last10ConceededSum","last10AvgConceeded","avgShotValueChart","ScoredAverage","avgShotValueLast5Chart","avgShotValueHomeChart","avgShotValueAwayChart","last5Goals","last5GoalsConceeded","last10Goals","last10GoalsConceeded","last10GoalDiff","teamGoalsAllRollingAverage","teamGoalsConceededAllRollingAverage","avgConceeded","teamConceededHomeOnlySum","teamConceededAvgHomeOnly","teamConceededAwayOnlySum","teamConceededAvgAwayOnly","teamName","numbers","windowSize","startIndex","window","weights","Array","_","acc","num","movingAverage","w","calculateWeightedAverage","arr","weightedSum","totalWeight","weight","pow","teamGoalsFor","teamGoalsAgainst","lambdaFor","lambdaAgainst","predictedGoalsFor","predictedGoalsAgainst","goalsFor","goalsAgainst","calculateDifference","num1","num2","comparison","metricOne","metricTwo","stat1","stat2","statDiff","getClinicalRating","dangerousAttackConversion","rating","score","getPointsDifferential","pointsHomeAvg","pointsAwayAvg","diff","differential","compareFormTrend","recentForm","distantForm","scoreTotal","recent","distant","getPointAverage","pointTotal","generateGoals","homeForm","awayForm","avgHomeXG","avgHomeGoals","avgHomeGoalsLast10","avgAwayXG","avgAwayGoals","avgAwayGoalsLast10","homeExpectedScore","attackingMetrics","defensiveMetrics","awayExpectedScore","adjustToHome","CleanSheetPercentage","adjustToAway","finalScore","attackingStrength","defensiveStrengthScoreGeneration","homeAttackVsAwayDefenceComparison","awayAttackVsHomeDefenceComparison","defensiveStrength","attackingStrengthLast5","defensiveStrengthScoreGenerationLast5","homeAttackVsAwayDefenceComparisonLast5","awayAttackVsHomeDefenceComparisonLast5","attackingStrengthHomeOnly","defensiveStrengthScoreGenerationAwayOnly","homeAttackVsAwayDefenceComparisonHomeOnly","attackingStrengthAwayOnly","defensiveStrengthScoreGenerationHomeOnly","awayAttackVsHomeDefenceComparisonAwayOnly","oddsComparisonHome","oddsComparisonAway","XGRating","XGRatingHomeComparison","XGRatingAwayComparison","abs","calculatePlayingStyle","calculateScore","divider","calculate","allForm","find","home","away","PlayedHome","PlayedAway","formRun","lastHomeOrAwayPoints","homeOrAwayAverage","ScoredOverall","ConcededAverage","ConcededOverall","ScoredAverageShortTerm","ConcededAverageShortTerm","longTermAverageGoals","longTermAverageConceeded","recentGoalDiff","distantGoalDiff","recentDA","distantDA","recentPosession","distantPosession","recentCleanSheet","distantCleanSheet","recentFormArray","distantFormArray","formTrendScore","expectedGoals","ScoredAverageShortAndLongTerm","conceededAverageShortAndLongTerm","longTermGoalDifference","shortTermGoalDifference","XGdifferential","formHome","formAway","last2Points","clinicalRating","clinicalScore","XGdifferentialValue","XGdifferentialValueRaw","leagueID","predictedGoalsBasedOnHomeAv","predictedGoalsBasedOnAwayAv","allTeamGoalsBasedOnAverages","predictedGoalsConceededBasedOnHomeAv","predictedGoalsConceededBasedOnAwayAv","allTeamGoalsConceededBasedOnAverages","averageScoredLeague","averageConceededLeague","last10btts","last10bttsHome","last10bttsAway","bttsPercentageHomeAway","bttsPercentageAwayHome","homeTeamHomePositionRaw","awayTeamAwayPositionRaw","homePositionHomeOnly","awayPositionAwayOnly","homePosition","homeRawPosition","awayPosition","awayRawPosition","improving","pointsDiff6","AttackingPotency","AttacksHome","AttacksAverage","lastGame","previousToLastGame","attackingMetricsHome","AverageShotsOnTarget","Corners","attackingMetricsHomeLast5","AverageShots","attackingMetricsHomeOnly","attackingMetricsAwayOnly","attackingMetricsAway","attackingMetricsAwayLast5","defensiveMetricsHome","defensiveMetricsHomeLast5","defensiveMetricsAway","defensiveMetricsAwayLast5","defensiveMetricsHomeOnly","defensiveMetricsAwayOnly","calculateAttackingStrength","attackingStrengthScoreGeneration","calculateDefensiveStrength","defensiveStrengthLast5","defensiveStrengthHomeOnly","defensiveStrengthAwayOnly","calculateMetricStrength","possessionStrength","possessionStrengthLast5","possessionStrengthHomeOnly","possessionStrengthAwayOnly","XGdifferentialRecent","actualToXGDifferenceRecent","directnessOverall","directnessOverallLast5","directnessHomeOnly","directnessAwayOnly","directnessOverallStrength","directnessOverallStrengthLast5","directnessHomeStrength","directnessAwayStrength","shootingAccuracy","shootingAccuracyLast5","shootingAccuracyHomeOnly","shootingAccuracyAwayOnly","accuracyOverallStrength","accuracyOverallStrengthLast5","accuracyHomeStrength","accuracyAwayStrength","xgForStrength","xgForStrengthLast5","xgForStrengthHomeOnly","xgAgainstStrength","xgAgainstStrengthLast5","xgAgainstStrengthHomeOnly","xgForStrengthAwayOnly","xgAgainstStrengthAwayOnly","styleOfPlayOverall","styleOfPlayHome","styleOfPlayAway","parseInt","actualToXGDifference","teamGoalsCalc","homeGoalDiff","awayGoalDiff","goalsDifferential","rollingAverageGoalsDifferential","GoalsInGamesAverageHome","GoalsInGamesAverageAway","factorOneHome","factorOneAway","scoreDiff","experimentalHomeGoals","experimentalAwayGoals","prediction","includeInMultis","pointsDifferential","pointsDifferentialValue","pointsDifferentialValueRaw","rollingGoalDiffDifferential","rollingGoalDiff","rollingGoalDiffValue","dangerousAttacksDifferential","dangerousAttacksDiff","dangerousAttacksDiffValue","winner","outcome","last10Points","predictionOutcome","over25PredictionOutcome","bttsOutcome","total","total2","drawOdds","omit","last10PointDiffHomePerspective","last6PointDiffAwayPerspective","XGDiffBetweenTeamsHomePerspective","XGDiffBetweenTeamsAwayPerspective","goalDiffHomeOrAwayComparison","goalDifferenceComparison","profit","specificLeagueResults","getSuccessMeasure","sumProfit","investment","exactScores","successCount","netProfit","hasOwnProperty","exactScore","leagueName","leagueDesc","league","netLeagueProfit","ROI","ReactDOM","render","document","getElementById","price","combinations","gamesInExotic","exoticStake","exoticString","allTipsSorted","newArray","bestBets","Over25Tips","XGDiffTips","rollingDiffTips","dangerousAttacksDiffTips","pointsDiffTips","exoticArray","bttsArray","accumulatedOdds","predictions","array","indexOf","rawOdds","renderTips","getScorePrediction","mocked","mock","Promise","all","matches","goalsA","goalsB","unroundedGoalsA","unroundedGoalsB","outcomeSymbol","over25PredictionOutcomeSymbol","bttsOutcomeSymbol","fractionHome","teamComparisonScore","predictionObject","comparisonScore","rawComparisonScore","goalDifferential","experimentalCalc","fractionAway","Over25PredictionObject","decimalOdds","homeDoubleChance","over25Odds","doubleChanceOutcome","goalTotalUnrounded","XGPredictionObject","otherTeam","pointsDiffObject","rollingDiffObject","dangerousAttacksDiffObject","RenderAllFixtures","bool","getMultis","getCoverBetMaxReturns","getAccumulatorPrice","priceArray","minAccSize","stake","perms","getUniquePermutations","j","permLength","permutations","newArr","splice","twoDimArrayUnion","duplicate","k","NewlineText","str","open","TeamOfTheSeason","roundId","setRoundId","seasonId","fetchRoundId","roundsResponse","roundsData","rounds","firstRoundId","height","frameBorder","scrolling","title","fontSize","fontFamily","textAlign","target","href","rel","toggleState","setIsOff","upArrow","StyledTableCell2","withStyles","theme","head","backgroundColor","padding","paddingTop","paddingBottom","margin","body","TableCell","StyledTableCell","StyledTableRow","root","TableRow","LeagueTable","singleResult","rows","Teams","component","scope","Name","Played","Wins","Draws","Losses","For","Against","GoalDifference","Points","Form","Key","leagueResults","team_a_red_cards","team_b_red_cards","leagueResultsOlder","getTopScorersTeam","ID","sorted","order","sortedByForm","LastWeeksResults","LeagueID","TableContainer","Paper","Table","marginTop","marginBottom","TableHead","TableBody","seasonAVG_home","seasonAVG_away","seasonBTTSPercentage","seasonOver05Percentage_overall","seasonOver15Percentage_overall","seasonOver25Percentage_overall","seasonOver35Percentage_overall","seasonOver45Percentage_overall","over75CornersPercentage_overall","over85CornersPercentage_overall","over95CornersPercentage_overall","over105CornersPercentage_overall","over115CornersPercentage_overall","over125CornersPercentage_overall","cornersAVG_overall","cardsAVG_overall","top_scorers","known_as","club_team_id","goals_overall","Division","fixtureResponse","leagueInstance","lastThreeFormHome","lastThreeFormAway","lastFiveFormHome","lastFiveFormAway","lastSixFormHome","lastSixFormAway","lastTenFormHome","lastTenFormAway","leagueOrAll","formRunHome","formRunAway","WDLinLeagueHome","WDLinLeagueAway","HomeAverageGoals","homeAverageGoals","HomeAverageConceded","homeAverageConceded","AwayAverageGoals","awayAverageGoals","AwayAverageConceded","awayAverageConceded","require","fixtureArray","arrayOfGames","leagueGames","leagueArray","leagueIdArray","tableArray","bespokeLeagueArray","generateTables","allResults","currentLeagueId","specific_tables","groups","table","currentTeam","wdl_record","toUpperCase","Position","cleanName","matchesPlayed","seasonWins_overall","seasonDraws_overall","seasonLosses_overall","seasonGoals","seasonConceded_home","seasonConceded_away","seasonGoalDifference","LastXPoints","wdl","seasonConceded","instances","group","league_table","all_matches_table_overall","renderTable","results","nowInSeconds","twoWeeksAgo","mostRecentGames","leagueTable","leagueStatistics","stats","statistics","Id","GamesPlayed","leagueTable1","leagueTable2","divisionName1","divisionName2","createFixture","mockBool","roundedHomeOdds","roundedAwayOdds","homeFraction","awayFraction","bttsOdds","roundedBTTSOdds","homeTeamWinsPercentage","homeTeamWinPercentage","homeTeamLossesPercentage","homeTeamLossPercentage","homeTeamDrawsPercentage","homeTeamDrawPercentage","awayTeamWinsPercentage","awayTeamWinPercentage","awayTeamLossesPercentage","awayTeamLossPercentage","awayTeamDrawsPercentage","awayTeamDrawPercentage","capped","originalLength","Fixture","isFunctionRunning","generateFixtures","footyStatsFormattedDate","current","todaysDate","dateSS","getPrefix","position","teamPositionPrefix","updateResults","method","headers","Accept","JSON","stringify","fill","url","formUrl","formArray","leaguesStored","storedForm","isFormStored","isStoredLocally","orderedLeagues","leaguePositions","allLeagueResults","leagues","allGames","sofaScore","events","time","startTimestamp","homeScore","display","awayScore","startDate","getTime","targetDate","orderedLeague","gamesFiltered","gamesShortened","pager","current_page","max_page","page2","page2Data","gamesConcat","gamesConcatFiltered","mostRecentResults","shortenedResults","home_ppg","away_ppg","leagueObj","homeLeague","awayLeague","all_matches_table_home","all_matches_table_away","regularSeason","season","string","stringHome","stringAway","rawPosition","homeFormName","awayFormName","homeSeasonWinPercentage","seasonWins","awaySeasonWinPercentage","homeSeasonLossPercentage","seasonLosses_home","awaySeasonLossPercentage","seasonLosses_away","homeSeasonDrawPercentage","seasonDraws","awaySeasonDrawPercentage","homeSeasonMatchesPlayed","awaySeasonMatchesPlayed","played","competition_id","unixTimestamp","dateObject","previousLeagueName","toLocaleString","hour","minute","refereeID","odds_ft_x","odds_doublechance_1x","awayDoubleChance","odds_doublechance_x2","odds_btts_yes","homeID","awayID","homeTeamInfo","awayTeamInfo","homeTeaminLeague","awayTeaminLeague","teamPositionHome","teamPositionHomeTable","teamPositionAwayTable","homeTeamWinPercentageHome","awayTeamWinPercentageAway","homeTeamLossPercentageHome","awayTeamLossPercentageAway","homeTeamDrawPercentageHome","awayTeamDrawPercentageAway","teamPositionAway","homePrefix","homePrefixHomeTable","awayPrefix","awayPrefixAwayTable","homeSeasonPPG","awaySeasonPPG","homeTeaminHomeLeague","awayTeaminAwayLeague","homeFormString5","additional_info","formRun_overall","awayFormString5","homeFormString6","awayFormString6","homeFormString10","awayFormString10","homeFormRun","formRun_home","awayFormRun","formRun_away","season_format","xg_for_avg_overall","xg_for_avg_home","seasonScoredNum_overall","seasonScoredAVG_home","seasonMatchesPlayed_home","seasonMatchesPlayed_away","seasonConcededNum_overall","seasonConcededAVG_home","xg_against_avg_overall","xg_against_avg_home","seasonCSPercentage_overall","possessionAVG_overall","possessionAVG_home","shotsOnTargetAVG_overall","shotsOnTargetAVG_home","shotsAVG_overall","shotsAVG_home","dangerous_attacks_avg_overall","seasonPPG_overall","attacks_avg_home","attacks_avg_away","dangerous_attacks_avg_home","homeAttackAdvantage","homeDefenceAdvantage","seasonBTTSPercentage_home","seasonGoalDifference_overall","seasonGoalDifference_home","seasonBTTSPercentage_overall","cardsTotal_overall","scoredBothHalvesPercentage_overall","XGAgainstAverage","AveragePossession","AverageShotsHomeOrAway","PPG","AttacksAway","AverageDangerousAttacks","BTTSPercentage","lastThreeForm","LeagueOrAll","LeaguePosition","SeasonPPG","WinPercentage","LossPercentage","DrawPercentage","BttsPercentage","BttsPercentageHomeOrAway","ScoredBothHalvesPercentage","LastMatch","WDLRecord","LeagueAverageGoals","LeagueAverageConceded","xg_for_avg_away","seasonScoredAVG_away","seasonConcededAVG_away","xg_against_avg_away","possessionAVG_away","shotsOnTargetAVG_away","shotsAVG_away","dangerous_attacks_avg_away","seasonBTTSPercentage_away","seasonGoalDifference_away","teamIDHome","teamIDAway","leagueId","homeBadge","home_image","awayBadge","away_image","homePpg","awayPpg","homeTeamHomePosition","awayTeamAwayPosition","odds_ft_over25","btts_potential","stadium","stadium_name","expectedGoalsHomeToDate","team_a_xg_prematch","expectedGoalsAwayToDate","team_b_xg_prematch","setTimeout","lineHeight","border","getOverOrUnderText","xgSum","overUnderAchievingSum","getXGDifferential","xgFor","xgAgainst","xgDiff","goalDiff","compareXgAndGoalDiff","getAttackingSummary","goalsRecent","goalsLongTerm","getDefenceSummary","cleansheetStat","ten","five","xgText","attackString","defenceString","pointsAverageTotal","GenerateFormSummary","Chart","data1","options","responsive","aspectRatio","maintainAspectRatio","layout","elements","point","radius","scales","suggestedMin","suggestedMax","grid","borderWidth","borderColor","ticks","font","size","plugins","legend","labels","boxHeight","keys","datasets","label","team1","tension","team2","data2","MultilineChart","data3","hidden","data4","RadarChart","angleLines","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","BarChart","datasetOne","idx","numOne","numTwo","tempArr","firstNum","secondNum","findLargestNum","indexAxis","bar","tooltip","enabled","context","dataIndex","dataset","ChartJS","register","CategoryScale","LinearScale","RadialLinearScale","PointElement","ArcElement","Filler","BarElement","LineElement","Title","Tooltip","Legend","SubTitle","SofaLineupsWidget","differenceInSeconds","minutes","iframeSrc","currentTime","maxWidth","frameborder","metric","ranges","normalizedValue","normValue","metricName","metricValue","averagePossession","accuracyOverall","weightedScore","initialState","dataHome","localStorage","getItem","dataAway","dataHomeDef","dataAwayDef","homeDetails","awayDetails","fixtureDetails","dataSlice","createSlice","reducers","setData","action","payload","actions","store","configureStore","reducer","dataReducer","MultiTypeChart","dataArray","barData","backgroundColors","pointRadius","beginAtZero","setUserTips","slideElements","slides","elementName","generateElements","observer","observeParents","GameStats","resultValue","mockValue","displayBool","savedTips","parse","setItem","isLoading","setIsLoading","aiMatchPreview","setAiMatchPreview","setPaid","setHasCompleteData","gameStats","matchingGame","setMatchingGame","formSummaries","setFormSummary","setId","setTeam1","setTeam2","setTimestamp","setHomeGoals","setAwayGoals","homeAttackStrength","setHomeAttackStrength","homeDefenceStrength","setHomeDefenceStrength","homePossessionStrength","setHomePossessionStrength","homeXGForStrength","setHomeXGForStrength","homeXGAgainstStrength","setHomeXGAgainstStrength","homeDirectnessStrength","setHomeDirectnessStrength","homeAccuracyOverallStrength","setHomeAccuracyOverallStrength","awayAttackStrength","setAwayAttackStrength","awayDefenceStrength","setAwayDefenceStrength","awayPossessionStrength","setAwayPossessionStrength","awayXGForStrength","setAwayXGForStrength","awayXGAgainstStrength","setAwayXGAgainstStrength","awayDirectnessStrength","setAwayDirectnessStrength","awayAccuracyOverallStrength","setAwayAccuracyOverallStrength","homeFiveGameAverage","setHomeFiveGameAverage","homeSixGameAverage","setHomeSixGameAverage","homeTenGameAverage","setHomeTenGameAverage","awayFiveGameAverage","setAwayFiveGameAverage","awaySixGameAverage","setAwaySixGameAverage","awayTenGameAverage","setAwayTenGameAverage","homeAttackStrengthLast5","homeOnlyAttackStrength","homeDefenceStrengthLast5","homeOnlyDefenceStrength","homePossessionStrengthLast5","homeOnlyPossessionStrength","homeXGForStrengthLast5","homeOnlyXGForStrength","homeXGAgainstStrengthLast5","homeOnlyXGAgainstStrength","homeDirectnessStrengthLast5","homeOnlyDirectnessStrength","homeAccuracyOverallStrengthLast5","homeOnlyAccuracyOverallStrength","setHomeOnlyAccuracyOverallStrength","awayAttackStrengthLast5","awayOnlyAttackStrength","awayDefenceStrengthLast5","awayOnlyDefenceStrength","awayPossessionStrengthLast5","awayOnlyPossessionStrength","awayXGForStrengthLast5","awayOnlyXGForStrength","awayXGAgainstStrengthLast5","awayOnlyXGAgainstStrength","awayDirectnessStrengthLast5","awayOnlyDirectnessStrength","awayAccuracyOverallStrengthLast5","awayOnlyAccuracyOverallStrength","setAwayOnlyAccuracyOverallStrength","gameArrayHomeTeamHomeGames","gameArrayAwayTeamAwayGames","allResultsHome","useMemo","allResultsAway","goalDiffArrayHome","xgDiffArrayHome","xgDiffArrayAway","rollingGoalDiffTotalHome","rollingXGDiffTotalHome","goalDiffArrayHomeOnly","goalDiffArrayAwayOnly","xgDiffArrayHomeOnly","xgDiffArrayAwayOnly","rollingGoalDiffTotalHomeOnly","rollingXGDiffTotalHomeOnly","goalDiffArrayAway","rollingGoalDiffTotalAway","rollingXGDiffTotalAway","rollingGoalDiffTotalAwayOnly","rollingXGDiffTotalAwayOnly","rollingGoalDiffTotalHomeLast5","rollingXGDiffTotalHomeLast5","rollingGoalDiffTotalAwayLast5","rollingXGDiffTotalAwayLast5","firstRenderDone","setFirstRenderDone","gameArrayHome","gameArrayAway","pos","resultHome","resultHomeOnly","resultAway","resultAwayOnly","timeZone","won","goalsScored","goalsConceeded","homeXG","awayXG","homeShots","awayShots","homeSot","awaySot","homeRed","awayRed","homePossession","awayPossession","homeDangerousAttacks","awayDangerousAttacks","homePPG","awayPPG","wonHomeOrAwayOnly","wonAwayOrAwayOnly","getGameIdByHomeTeam","homeTeamName","matchingGames","includes","getRefStats","refId","compId","ok","refData","isArray","filteredObject","distilledRefData","appearances_overall","full_name","cards_per_match_overall","goals_per_match_overall","min_per_card_overall","nationality","over25_cards_percentage_overall","over35_cards_percentage_overall","penalties_given_per_match_overall","red_cards_overall","StatsHomeComponent","gameCount","formDataHome","Last5","homeOrAwayLeaguePosition","homePPGAv","lossPercentage","drawPercentage","FormTextStringHome","FavouriteRecord","StatsAwayComponent","formDataAway","awayPPGAv","FormTextStringAway","StatsHomeLast5Component","StatsAwayLast5Component","StatsHomeOnlyComponent","StatsAwayOnlyComponent","gameInfo","fetchMatchingGame","toString","bttsArrayHome","bttsArrayAway","overviewHome","overviewAway","getPointsFromGames","formArr","pairings","arrayOfIndividualPoints","last3Points","last5Points","last6Points","homePPGame","awayPPGame","formArrayHome","formArrayAway","chartType","showAIInsights","setShowAIInsights","paymentStatus","checkPaymentStatus","warn","attackH","defenceH","attackA","defenceA","possH","possA","XGForH","XGForA","XGAgH","XGAgA","accuracyHome","accuracyHomeOnly","accuracyAway","accuracyAwayOnly","home5GA","home6GA","home10GA","away5GA","away6GA","away10GA","tenGameAv","fiveGameAv","formTextStringHome","formTextStringAway","fetchData","AverageGoals","AverageConceeded","AverageXG","AverageXGConceded","Last5PPG","generateAIInsights","useCallback","homeLeaguePosition","homeTeamResults","homeXGDiffAll","homeXGDiffLast5","homeAttackingStats","homeAttackingStatsLast5","homeAttackingStatsHomeOnly","homeDefensiveStats","homeDefensiveStatsLast5","homeDefensiveStatsHomeOnly","awayTeamName","awayLeaguePosition","awayTeamResults","awayXGDiffAll","awayXGDiffLast5","awayAttackingStats","awayAttackingStatsLast5","awayAttackingStatsAwayOnly","awayDefensiveStats","awayDefensiveStatsLast5","awayDefensiveStatsAwayOnly","AIPayload","referee","jsonData","formatAIPreview","join","AIOutput","formattedText","matchPreview1","formattedText2","matchPreview2","opinionOnXGTippingPrediction","summary","formPointsHome","formPointsAway","handleSetUserTips","selectedTip","handleTipSelect","handleClick","tipType","setSelectedTip","prevTips","existingTipIndex","findIndex","updatedTips","element1","GetDivider","matchStatus","isPrediction","renderLeagueName","showShortlist","SingleFixture","onToggle","dispatch","useDispatch","showGameStats","setShowGameStats","StoreData","homeTeamBadge","awayTeamBadge","key1","key2","alert","removeItem","List","selectedFixtures","setSelectedFixtures","setShowShortlist","shortlist","fromEntries","ShortlistButton","toggleShortlist","SubmitTipsButton","submit","submitTips","some","f","prev","handleToggle","StripePolicies","userIsPaid","Login","email","setEmail","password","setPassword","isLogin","setIsLogin","setError","showPassword","setShowPassword","handleAuth","e","preventDefault","signInWithEmailAndPassword","userCredential","createUserWithEmailAndPassword","setDoc","message","onSubmit","placeholder","required","location","getCurrentUser","resolve","reject","loggedIn","today","todayFootyStats","todaySS","tomorrow","tomorrowFootyStats","tomorrowSS","dateFootyStats","lastSaturday","lastSaturdayFootyStats","lastSaturdaySS","tomorrowsDate","yesterdaysDate","saturdayDate","historicDate","dateString","Logo","myImage","fixtureList","availableLeagues","leagueOrder","decrementDate","calculateDate","convertTimestampForSofaScore","renderButtons","loginStatus","getFullYear","String","getMonth","padStart","getDate","setDate","getDay","textJoined","newText","leagueList","mapOrder","key","A","B","stripePromise","loadStripe","handleCheckout","priceId","stripe","session","redirectToCheckout","sessionId","welcomeTextOne","welcomeTextTwo","AppContent","useContext","getLeagueList","mockedFixtures","TwitterShareButton","TwitterIcon","RedditShareButton","RedditIcon","FacebookShareButton","quote","FacebookIcon","WhatsappShareButton","separator","WhatsappIcon","TelegramShareButton","TelegramIcon","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","TeamPage","dataState","storedFixtureDetailsJson","responseHome","responseAway","indexHome","indexAway","test","scoredOverallHome","playedHomeOnly","scoredOverallHomeOnly","seasonScoredNum_home","conceededOverallHome","conceededOverallHomeOnly","seasonConcededNum_home","PPGOverallHome","PPGOverallHomeOnly","seasonPPG_home","leaguePosition_overallHome","leaguePosition_overall","leaguePosition_HomeOnly","leaguePosition_home","averageAttendance","average_attendance_home","BTTSPercentage_overallHome","BTTSAndWinPercentage_Home","BTTS_and_win_percentage_overall","BTTSAndLosePercentage_Home","BTTS_and_lose_percentage_overall","BTTSBothHalvesHome","BTTS_both_halves_percentage_overall","GoalDifferenceHT_overall_Home","GoalDifferenceHT_overall","GD_2hg_overall_Home","gd_2hg_overall","leadingAtHTPercentage_overallHome","leadingAtHTPercentage_overall","seasonOver15Percentage_overallHome","seasonOver25Percentage_overallHome","seasonOver35Percentage_overallHome","seasonOver45Percentage_overallHome","scoredBothHalvesPercentage_overallHome","shots_on_target_per_goals_scored_overallHome","shots_on_target_per_goals_scored_overall","cornersTotalAVG_overallHome","cornersTotalAVG_overall","cardsAVG_overallHome","foulsAVG_overallHome","foulsAVG_overall","penalties_won_per_match_overallHome","penalties_won_per_match_overall","penalty_in_a_match_percentage_overallHome","penalty_in_a_match_percentage_overall","scoredOverallAway","playedAwayOnly","scoredOverallAwayOnly","seasonScoredNum_away","conceededOverallAway","conceededOverallAwayOnly","seasonConcededNum_away","PPGOverallAway","PPGOverallAwayOnly","seasonPPG_away","leaguePosition_overallAway","leaguePosition_AwayOnly","leaguePosition_away","BTTSPercentage_overallAway","BTTSAndWinPercentage_Away","BTTSAndLosePercentage_Away","BTTSBothHalvesAway","GoalDifferenceHT_overall_Away","GD_2hg_overall_Away","leadingAtHTPercentage_overallAway","seasonOver15Percentage_overallAway","seasonOver25Percentage_overallAway","seasonOver35Percentage_overallAway","seasonOver45Percentage_overallAway","scoredBothHalvesPercentage_overallAway","shots_on_target_per_goals_scored_overallAway","cornersTotalAVG_overallAway","cardsAVG_overallAway","foulsAVG_overallAway","penalties_won_per_match_overallAway","penalty_in_a_match_percentage_overallAway","storedDataHome","useSelector","jsonDataHome","propertyNamesHome","storedDataHomeDef","jsonDataHomeDef","propertyNamesHomeDef","storedDataallTeamResultsHome","jsonDataallTeamResultsHome","propertyNamesallTeamResultsHome","jsonHomeDetails","storedDataAway","jsonDataAway","propertyNamesAway","storedDataAwayDef","jsonDataAwayDef","propertyNamesAwayDef","storedDataallTeamResultsAway","jsonDataallTeamResultsAway","propertyNamesallTeamResultsAway","jsonAwayDetails","storedFixtureDetails","stacked","SuccessPage","CancelPage","PasswordReset","setMessage","handleReset","sendPasswordResetEmail","CancelSubscription","fetchSubscriptionStatus","handleCancelSubscription","getHighestScoringLeagues","teamsList","top_leagues","leagueCountry","country","averageGoals","seasonAVG_overall","over25Percentage","division","domestic_scale","getLowestScoringLeagues","under25Percentage","seasonUnder25Percentage_overall","getHighestScoringTeams","top_teams","next_match_team","teamCountry","toLocaleTimeString","getHighestScoringFixtures","fixturesList","top_fixtures","avg_potential","progress","avgGoals","getBTTSFixtures","getBTTSTeams","next_match_date","seasonMatchesPlayed_overall","bttsPercentage","opponent","palette","common","white","hover","Over25","setLeagues","fetchLeagues","allowedCountries","filteredLeagues","header","align","Under25","HighestScoringTeams","setTeams","fetchTeams","filteredTeams","HighestScoringFixtures","setGames","fetchGames","filteredGames","BTTSFixtures","BTTSTeams","Team","exact"],"mappings":"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W,OAA0B,wECW1BC,GARF,WACX,OACE,qBAAK/4D,UAAU,iBAAgB,SAC7B,qBAAKiB,IAAK+3D,GAAS93D,IAAI,kBAAkBlB,UAAU,qBAGzD,E,SF6BWi5D,GAAc,GAGZC,GAAmB,GACrB1rB,GAAiB,GAKtB2rB,GAAc,CAGlB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAyVF,cAFC,OAED,mCA1QO,mBAMuB,EAWbC,EAAa,EAabC,EAAa,sBA+BbC,EAA4B,MA8B5BC,EAAa,6EArFA,OAqFA,aAkF3B,OAlF2B,kCAA5B,WAA6BC,GAAW,2EACtCj+B,IAASC,OACP,sBAAKx7B,UAAU,iBAAgB,UAC7B,6BAAKw5D,IACL,qBAAKx5D,UAAU,kBAAiB,SAC9B,cAACR,EAAM,CACLG,KAAM,gBACNK,UAAU,yBACVD,aAAY,gCAAE,wFACD,OADC,KACZk5D,GAAW,SACH/sB,GACJ,eACAqsB,GACAp4D,EACAq4D,IACA,EACAR,GACAS,IACD,iDATS7hD,KAAI,gEActB,cAACpX,EAAM,CACLG,KAAI,IACJK,UAAU,iBACVD,aAAY,gCAAE,wGAAkBq5D,EAAc,EAAGjoD,IAAK,qFAExD,cAAC3R,EAAM,CACLG,UAAyBwC,IAAnBm2D,GAA+BA,GAAiBnnD,GACtDnR,UAAU,iBACVD,aAAY,gCAAE,wFACD,OADC,KACZk5D,GAAW,SACH/sB,GACJ,iBACA4sB,GACA34D,EACAm4D,IACA,EACAN,GACA1rB,IACD,iDATS11B,KAAI,8DAapB,cAACpX,EAAM,CACLG,KAAI,QACJK,UAAU,sBACVD,aAAY,gCAAE,wFACD,OADC,KACZk5D,GAAW,SACH/sB,GACJ,iBACA8rB,GACA73D,EACA83D,IACA,EACAD,GACAE,IACD,iDATSthD,KAAI,8DAapB,cAACpX,EAAM,CACLG,KAAM,WAC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","file":"static/js/main.a853af35.chunk.js","sourcesContent":["import React from \"react\";\n\nexport function Button(props) {\n  return (\n    <div id=\"Button\">\n      <button data-cy={props.text} variant=\"primary\" type=\"button\" onClick={props.onClickEvent} className={props.className} disabled={props.disabled} style={props.style}>\n        {props.text}\n      </button>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nexport var selectedOdds = \"Fractional odds\";\n\nexport class OddsRadio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOdds: this.props.value,\n    };\n  }\n\n  handleOptionChange = () => {\n    this.setState({\n      selectedOdds: this.props.value,\n    });\n    selectedOdds = this.state.selectedOdds;\n  };\n\n  render() {\n    return (\n      <section className=\"dark2\">\n        <div className={this.props.className}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"odds\"\n              checked={this.state.checked}\n              onChange={this.handleOptionChange}\n              data-cy={this.props.value}\n              className=\"Hidden\"\n            />\n            <span className=\"design\"></span>\n            <span className=\"text\">{this.props.value}</span>\n          </label>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default OddsRadio;\n","import React from \"react\";\n\nexport function CreateBadge(props) {\n\n  if(props.image === \"-\"){\n    return (\n      <div className={props.ClassName} />\n    );\n  } else {\n    return (\n      <img\n        src={`https://cdn.footystats.org/img/${props.image}`}\n        className={props.ClassName}\n        alt={props.alt}\n        flex-shrink={props.flexShrink}\n      />\n    );\n  }\n}\n","import React, { Fragment } from \"react\";\n\nfunction Stats(props) {\n  let shouldOpen = props.clicked;\n\n  function styleForm(formIndicator) {\n    let className;\n    if (formIndicator === \"W\") {\n      className = \"win\";\n    } else if (formIndicator === \"D\") {\n      className = \"draw\";\n    } else if (formIndicator === \"L\") {\n      className = \"loss\";\n    }\n    return className;\n  }\n\n  function styleBTTS(BTTSBoolean) {\n    let className;\n    if (BTTSBoolean === \"\\u2714\") {\n      className = \"BTTSTrue\";\n    } else if (BTTSBoolean === \"\\u2718\") {\n      className = \"BTTSFalse\";\n    }\n    return className;\n  }\n\n  if (props.games === \"all\") {\n    return (\n      <Fragment>\n        <ul className={props.className ? props.className : \"\"} style={props.style ? props.style : {}}>\n          <li className=\"FormHeader\">League results (most recent on right)</li>\n          <li key={`last5League`} className=\"last5League\">\n            <span className={styleForm(props.Results && props.Results[5] ? props.Results[5] : \"\")}>\n              {props.Results && props.Results[5] ? props.Results[5] : \"\"}\n            </span>\n            <span className={styleForm(props.Results && props.Results[5] ? props.Results[4] : \"\")}>\n              {props.Results && props.Results[4] ? props.Results[4] : \"\"}\n            </span>\n            <span className={styleForm(props.Results && props.Results[3] ? props.Results[3] : \"\")}>\n              {props.Results && props.Results[3] ? props.Results[3] : \"\"}\n            </span>\n            <span className={styleForm(props.Results && props.Results[2] ? props.Results[2] : \"\")}>\n              {props.Results && props.Results[2] ? props.Results[2] : \"\"}\n            </span>\n            <span className={styleForm(props.Results && props.Results[1] ? props.Results[1] : \"\")}>\n              {props.Results && props.Results[1] ? props.Results[1] : \"\"}\n            </span>\n            <span className={styleForm(props.Results && props.Results[0] ? props.Results[0] : \"\")}>\n              {props.Results && props.Results[0] ? props.Results[0] : \"\"}\n            </span>\n          </li>\n          <li className=\"FormHeader\">\n            {props.homeOrAway ? props.homeOrAway : \"N/A\"} form (most recent on right)\n          </li>\n          <li key={`last5${props.homeOrAwayResults ? props.homeOrAwayResults : \"default\"}`} className=\"FormHomeOrAway\">\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[5] ? props.ResultsHorA[5] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[5] ? props.ResultsHorA[5] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[4] ? props.ResultsHorA[4] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[4] ? props.ResultsHorA[4] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[3] ? props.ResultsHorA[3] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[3] ? props.ResultsHorA[3] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[2] ? props.ResultsHorA[2] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[2] ? props.ResultsHorA[2] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[1] ? props.ResultsHorA[1] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[1] ? props.ResultsHorA[1] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[0] ? props.ResultsHorA[0] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[0] ? props.ResultsHorA[0] : \"\"}\n            </span>\n          </li>\n          <li\n            key=\"BTTSArrayHomeOrAway\"\n            className=\"BTTSArrayHomeOrAway\"\n            data-cy={props.name ? props.name + \"BTTSArrayHomeOrAway\" : \"BTTSArrayHomeOrAway\"}\n          >\n            <div className=\"BTTSResults\">{props.BTTSArray ? `BTTS` : ``}</div>\n            <span className={styleBTTS(props.BTTSArray && props.BTTSArray[5] ? props.BTTSArray[5] : \"\")}>\n              {props.BTTSArray && props.BTTSArray[5] ? props.BTTSArray[5] : \"\"}\n            </span>\n            <span className={styleBTTS(props.BTTSArray && props.BTTSArray[4] ? props.BTTSArray[4] : \"\")}>\n              {props.BTTSArray && props.BTTSArray[4] ? props.BTTSArray[4] : \"\"}\n            </span>\n            <span className={styleBTTS(props.BTTSArray && props.BTTSArray[3] ? props.BTTSArray[3] : \"\")}>\n              {props.BTTSArray && props.BTTSArray[3] ? props.BTTSArray[3] : \"\"}\n            </span>\n            <span className={styleBTTS(props.BTTSArray && props.BTTSArray[2] ? props.BTTSArray[2] : \"\")}>\n              {props.BTTSArray && props.BTTSArray[2] ? props.BTTSArray[2] : \"\"}\n            </span>\n            <span className={styleBTTS(props.BTTSArray && props.BTTSArray[1] ? props.BTTSArray[1] : \"\")}>\n              {props.BTTSArray && props.BTTSArray[1] ? props.BTTSArray[1] : \"\"}\n            </span>\n            <span className={styleBTTS(props.BTTSArray && props.BTTSArray[0] ? props.BTTSArray[0] : \"\")}>\n              {props.BTTSArray && props.BTTSArray[0] ? props.BTTSArray[0] : \"\"}\n            </span>\n          </li>\n          <div className=\"FormSummaries\">\n            <li className=\"FormSummaryHome\">{props.FormTextString ? props.FormTextString : \"The below stats are only available to paying customers\"}</li>\n            <li className=\"StyleOfPlay\">{`Style - ${props.StyleOfPlay ? props.StyleOfPlay : \"N/A\"}`}</li>\n            <li className=\"StyleOfPlay\">{`${props.homeOrAway ? props.homeOrAway : \"N/A\"} style - ${props.StyleOfPlayHomeOrAway ? props.StyleOfPlayHomeOrAway : \"N/A\"}`}</li>\n            {/* <li className=\"FavouriteSummaryHome\">{props.FavouriteRecord ? props.FavouriteRecord : \"Graphs also only available to paying customers\"}</li> */}\n          </div>\n          <div className=\"AllStats\">\n            <li\n              key=\"TeamScored\"\n              className=\"TeamScored\"\n              data-cy={props.name ? props.name + \"teamScored\" : \"teamScored\"}\n            >\n              {`Avg goals scored - ${props.goals !== undefined ? props.goals : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamConceeded\"\n              className=\"TeamConceeded\"\n              data-cy={props.name ? props.name + \"teamConceded\" : \"teamConceded\"}\n            >\n              {`Avg goals conceeded - ${props.conceeded !== undefined ? props.conceeded : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamPossession\"\n              className=\"TeamPossession\"\n              data-cy={props.name ? props.name + \"teamPossession\" : \"teamPossession\"}\n            >\n              {`Avg possession - ${props.possession !== undefined ? props.possession : \"N/A\"}%`}\n            </li>\n            <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name ? props.name + \"teamXG\" : \"teamXG\"}>\n              {`Avg XG - ${props.XG !== undefined ? props.XG : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamXGConceded\"\n              className=\"TeamXGConceded\"\n              data-cy={props.name ? props.name + \"teamXGConceded\" : \"teamXGConceded\"}\n            >\n              {`Avg XG conceded - ${props.XGConceded !== undefined ? props.XGConceded : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamXGSwing\"\n              className=\"TeamXGSwing\"\n              data-cy={props.name ? props.name + \"teamXGSwing\" : \"teamXGSwing\"}\n            >\n              {`XG difference swing (last 5): ${\n                props.XGSwing !== undefined ? props.XGSwing.toFixed(2) : \"N/A\"\n              }`}\n            </li>\n            <li\n              key=\"goalDifference\"\n              className=\"goalDifference\"\n              data-cy={props.name ? props.name + \"goalDifference\" : \"goalDifference\"}\n            >\n              {`Goal difference : `}\n              <span>{props.goalDifference !== undefined ? props.goalDifference : \"N/A\"}</span>\n            </li>\n            <li\n              key=\"goalDifferenceHorA\"\n              className=\"goalDifferenceHorA\"\n              data-cy={props.name ? props.name + \"goalDifference\" : \"goalDifference\"}\n            >\n              {`Goal difference ${props.homeOrAway ? props.homeOrAway : \"N/A\"} : ${\n                props.goalDifferenceHomeOrAway !== undefined ? props.goalDifferenceHomeOrAway : \"N/A\"\n              }`}\n            </li>\n            <li\n              key=\"AverageShots\"\n              className=\"AverageShots\"\n              data-cy={props.name ? props.name + \"AverageShots\" : \"AverageShots\"}\n            >\n              {`Avg shots - ${props.shots !== undefined ? props.shots : \"N/A\"}`}\n            </li>\n            <li\n              key=\"AverageSOT\"\n              className=\"AverageSOT\"\n              data-cy={props.name ? props.name + \"averageSOT\" : \"averageSOT\"}\n            >\n              {`Avg shots on target - ${props.sot !== undefined ? props.sot : \"N/A\"}`}\n            </li>\n            <li\n              key=\"DangerousAttacks\"\n              className=\"DangerousAttacks\"\n              data-cy={props.name ? props.name + \"dangerousAttacks\" : \"dangerousAttacks\"}\n            >\n              {`Avg dangerous attacks - ${props.dangerousAttacks !== undefined ? props.dangerousAttacks : \"N/A\"}`}\n            </li>\n            <li\n              key=\"LeaguePosition\"\n              className=\"LeaguePosition\"\n              data-cy={props.name ? props.name + \"leaguePosition\" : \"leaguePosition\"}\n            >\n              {`League position - ${\n                props.leaguePosition !== undefined ? props.leaguePosition : \"N/A\"\n              }`}\n            </li>\n            <li\n              key=\"WinPercentage\"\n              className=\"WinPercentage\"\n              data-cy={props.name ? props.name + \"WinPercentage\" : \"WinPercentage\"}\n            >\n              {props.homeOrAway && props.winPercentage !== undefined && props.winPercentage !== \"N/A\" ? `${props.homeOrAway} PPG - ${props.winPercentage.toFixed(2)}` : \"N/A\"}\n            </li>\n            <li key=\"PPG\" className=\"PPG\" data-cy={props.name ? props.name + \"PPG\" : \"PPG\"}>\n              {`Season PPG - ${props.ppg !== undefined ? props.ppg : \"N/A\"}`}\n            </li>\n            <li\n              key=\"FormTrend10a\"\n              className=\"FormTrend\"\n              data-cy={props.name ? props.name + \"FormTrend10\" : \"FormTrend10\"}\n            >\n              {`Last 10 PPG: ${props.formTrend && props.formTrend[0] !== undefined ? props.formTrend[0] : \"N/A\"}`}\n            </li>\n            <li\n              key=\"FormTrend10b\"\n              className=\"FormTrend\"\n              data-cy={props.name ? props.name + \"FormTrend10\" : \"FormTrend10\"}\n            >\n              {`Last 6 PPG: ${props.formTrend && props.formTrend[1] !== undefined ? props.formTrend[1] : \"N/A\"}`}\n            </li>\n            <li\n              key=\"FormTrend10c\"\n              className=\"FormTrend\"\n              data-cy={props.name ? props.name + \"FormTrend10\" : \"FormTrend10\"}\n            >\n              {`Last 5 PPG: ${props.formTrend && props.formTrend[2] !== undefined ? props.formTrend[2] : \"N/A\"}.`}\n            </li>\n            <li\n              key=\"CardsTotal\"\n              className=\"CardsTotal\"\n              data-cy={props.name ? props.name + \"CardsTotal\" : \"CardsTotal\"}\n            >\n              {`Cards total: ${props.CardsTotal !== undefined ? props.CardsTotal : \"N/A\"}`}\n            </li>\n            <li\n              key=\"CornersAverage\"\n              className=\"CornersAverage\"\n              data-cy={props.name ? props.name + \"CornersAverage\" : \"CornersAverage\"}\n            >\n              {`Corners average: ${props.CornersAverage !== undefined ? props.CornersAverage : \"N/A\"}`}\n            </li>\n          </div>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  } else if (props.games === \"hOrA\") {\n    return (\n      <Fragment>\n        <ul className={props.className ? props.className : \"\"} style={props.style ? props.style : {}}>\n        <li className=\"FormHeader\">League results (most recent on right)</li>\n          <li key={`last5${props.homeOrAwayResults ? props.homeOrAwayResults : \"default\"}`} className=\"FormHomeOrAway\">\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[5] ? props.ResultsHorA[5] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[5] ? props.ResultsHorA[5] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[4] ? props.ResultsHorA[4] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[4] ? props.ResultsHorA[4] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[3] ? props.ResultsHorA[3] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[3] ? props.ResultsHorA[3] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[2] ? props.ResultsHorA[2] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[2] ? props.ResultsHorA[2] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[1] ? props.ResultsHorA[1] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[1] ? props.ResultsHorA[1] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[0] ? props.ResultsHorA[0] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[0] ? props.ResultsHorA[0] : \"\"}\n            </span>\n          </li>\n          <div className=\"AllStats\">\n          <div className=\"FormSummaries\">\n            <li className=\"StyleOfPlay\">{`${props.homeOrAway ? props.homeOrAway : \"N/A\"} style - ${props.StyleOfPlayHomeOrAway ? props.StyleOfPlayHomeOrAway : \"N/A\"}`}</li>\n          </div>\n            <li\n              key=\"TeamScored\"\n              className=\"TeamScored\"\n              data-cy={props.name ? props.name + \"teamScored\" : \"teamScored\"}\n            >\n              {`Avg goals scored - ${props.goals !== undefined ? props.goals : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamConceeded\"\n              className=\"TeamConceeded\"\n              data-cy={props.name ? props.name + \"teamConceded\" : \"teamConceded\"}\n            >\n              {`Avg goals conceeded - ${props.conceeded !== undefined ? props.conceeded : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamPossession\"\n              className=\"TeamPossession\"\n              data-cy={props.name ? props.name + \"teamPossession\" : \"teamPossession\"}\n            >\n              {`Avg possession - ${props.possession !== undefined ? props.possession : \"N/A\"}%`}\n            </li>\n            <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name ? props.name + \"teamXG\" : \"teamXG\"}>\n              {`Avg XG - ${props.XG !== undefined ? props.XG : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamXGConceded\"\n              className=\"TeamXGConceded\"\n              data-cy={props.name ? props.name + \"teamXGConceded\" : \"teamXGConceded\"}\n            >\n              {`Avg XG conceded - ${props.XGConceded !== undefined ? props.XGConceded : \"N/A\"}`}\n            </li>\n            <li\n              key=\"goalDifferenceHorA\"\n              className=\"goalDifferenceHorA\"\n              data-cy={props.name ? props.name + \"goalDifference\" : \"goalDifference\"}\n            >\n              {`Goal difference ${props.homeOrAway ? props.homeOrAway : \"N/A\"} : ${\n                props.goalDifferenceHomeOrAway !== undefined ? props.goalDifferenceHomeOrAway : \"N/A\"\n              }`}\n            </li>\n            <li\n              key=\"AverageShots\"\n              className=\"AverageShots\"\n              data-cy={props.name ? props.name + \"AverageShots\" : \"AverageShots\"}\n            >\n              {`Avg shots - ${props.shots !== undefined ? props.shots : \"N/A\"}`}\n            </li>\n            <li\n              key=\"AverageSOT\"\n              className=\"AverageSOT\"\n              data-cy={props.name ? props.name + \"averageSOT\" : \"averageSOT\"}\n            >\n              {`Avg shots on target - ${props.sot !== undefined ? props.sot : \"N/A\"}`}\n            </li>\n            <li\n              key=\"DangerousAttacks\"\n              className=\"DangerousAttacks\"\n              data-cy={props.name ? props.name + \"dangerousAttacks\" : \"dangerousAttacks\"}\n            >\n              {`Avg dangerous attacks - ${props.dangerousAttacks !== undefined ? props.dangerousAttacks : \"N/A\"}`}\n            </li>\n            <li\n              key=\"WinPercentage\"\n              className=\"WinPercentage\"\n              data-cy={props.name ? props.name + \"WinPercentage\" : \"WinPercentage\"}\n            >\n              {props.homeOrAway && props.winPercentage !== undefined && props.winPercentage !== \"N/A\" ? `${props.homeOrAway} PPG - ${props.winPercentage.toFixed(2)}` : \"N/A\"}\n            </li>\n            <li\n              key=\"CornersAverage\"\n              className=\"CornersAverage\"\n              data-cy={props.name ? props.name + \"CornersAverage\" : \"CornersAverage\"}\n            >\n              {`Corners average: ${props.CornersAverage !== undefined ? props.CornersAverage : \"N/A\"}`}\n            </li>\n          </div>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  } else if (props.games === \"last5\") {\n    return (\n      <Fragment>\n        <ul className={props.className ? props.className : \"\"} style={props.style ? props.style : {}}>\n          <li className=\"FormHeader\">\n            Last 5 games (All)\n          </li>\n          <li key={`last5League`} className=\"last5League\">\n            <span className={styleForm(props.Results && props.Results[5] ? props.Results[4] : \"\")}>\n              {props.Results && props.Results[4] ? props.Results[4] : \"\"}\n            </span>\n            <span className={styleForm(props.Results && props.Results[3] ? props.Results[3] : \"\")}>\n              {props.Results && props.Results[3] ? props.Results[3] : \"\"}\n            </span>\n            <span className={styleForm(props.Results && props.Results[2] ? props.Results[2] : \"\")}>\n              {props.Results && props.Results[2] ? props.Results[2] : \"\"}\n            </span>\n            <span className={styleForm(props.Results && props.Results[1] ? props.Results[1] : \"\")}>\n              {props.Results && props.Results[1] ? props.Results[1] : \"\"}\n            </span>\n            <span className={styleForm(props.Results && props.Results[0] ? props.Results[0] : \"\")}>\n              {props.Results && props.Results[0] ? props.Results[0] : \"\"}\n            </span>\n          </li>\n          <div className=\"AllStats\">\n            <li\n              key=\"TeamScored\"\n              className=\"TeamScored\"\n              data-cy={props.name ? props.name + \"teamScored\" : \"teamScored\"}\n            >\n              {`Avg goals scored - ${props.goals !== undefined ? props.goals : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamConceeded\"\n              className=\"TeamConceeded\"\n              data-cy={props.name ? props.name + \"teamConceded\" : \"teamConceded\"}\n            >\n              {`Avg goals conceeded - ${props.conceeded !== undefined ? props.conceeded : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamPossession\"\n              className=\"TeamPossession\"\n              data-cy={props.name ? props.name + \"teamPossession\" : \"teamPossession\"}\n            >\n              {`Avg possession - ${props.possession !== undefined ? props.possession : \"N/A\"}%`}\n            </li>\n            <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name ? props.name + \"teamXG\" : \"teamXG\"}>\n              {`Avg XG - ${props.XG !== undefined ? props.XG : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamXGConceded\"\n              className=\"TeamXGConceded\"\n              data-cy={props.name ? props.name + \"teamXGConceded\" : \"teamXGConceded\"}\n            >\n              {`Avg XG conceded - ${props.XGConceded !== undefined ? props.XGConceded : \"N/A\"}`}\n            </li>\n            <li\n              key=\"goalDifference\"\n              className=\"goalDifference\"\n              data-cy={props.name ? props.name + \"goalDifference\" : \"goalDifference\"}\n            >\n              {`Goal difference : `}\n              <span>{props.goalDifference !== undefined ? props.goalDifference : \"N/A\"}</span>\n            </li>\n            <li\n              key=\"AverageShots\"\n              className=\"AverageShots\"\n              data-cy={props.name ? props.name + \"AverageShots\" : \"AverageShots\"}\n            >\n              {`Avg shots - ${props.shots !== undefined ? props.shots : \"N/A\"}`}\n            </li>\n            <li\n              key=\"AverageSOT\"\n              className=\"AverageSOT\"\n              data-cy={props.name ? props.name + \"averageSOT\" : \"averageSOT\"}\n            >\n              {`Avg shots on target - ${props.sot !== undefined ? props.sot : \"N/A\"}`}\n            </li>\n            <li\n              key=\"DangerousAttacks\"\n              className=\"DangerousAttacks\"\n              data-cy={props.name ? props.name + \"dangerousAttacks\" : \"dangerousAttacks\"}\n            >\n              {`Avg dangerous attacks - ${props.dangerousAttacks !== undefined ? props.dangerousAttacks : \"N/A\"}`}\n            </li>\n            <li key=\"PPG\" className=\"PPG\" data-cy={props.name ? props.name + \"PPG\" : \"PPG\"}>\n              {`Last 5 PPG - ${props.ppg !== undefined ? props.ppg : \"N/A\"}`}\n            </li>\n            <li\n              key=\"CornersAverage\"\n              className=\"CornersAverage\"\n              data-cy={props.name ? props.name + \"CornersAverage\" : \"CornersAverage\"}\n            >\n              {`Corners average: ${props.CornersAverage !== undefined ? props.CornersAverage : \"N/A\"}`}\n            </li>\n          </div>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Stats;\n","import React from \"react\";\n\nfunction Div(props) {\n  return (\n    <div id={props.id} onClick={props.onClick} style={props.style} className={props.className}>{props.text}</div>\n  );\n}\n\nexport default Div;\n","export async function getForm(match) {\n  const teams = [match.homeId, match.awayId];\n  const fixtureForm = [];\n\n  for (let i = 0; i < teams.length; i++) {\n    const team = teams[i];\n\n    let response = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}formTeam/${team}`\n    );\n    await response.json().then((formData) => {\n      formData.lastMatchTimestamp = formData.last_updated_match_timestamp\n      fixtureForm[i] = formData;\n    });\n  }\n  return fixtureForm;\n}\n","import React, { useState, useEffect } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport { selectedOdds } from \"../components/OddsRadio\";\nimport oddslib from \"oddslib\";\nexport let rangeValue = [1, 10];\n\nexport const Slide = (props) => {\n  const [range, setRange] = useState([1.1, 10]);\n  const [fractionalValue, setFractionalValue] = useState([\"1/9\", \"10/1\"]);\n\n  useEffect(() => {\n    if (selectedOdds === \"Fractional odds\") {\n      let roundedValueOne = (Math.round(range[0] * 5) / 5).toFixed(1);\n      let roundedValueTwo = (Math.round(range[1] * 5) / 5).toFixed(1);\n\n      try {\n        const fractionalOne = oddslib\n          .from(\"decimal\", roundedValueOne)\n          .to(\"fractional\", { precision: 1 });\n        const fractionalTwo = oddslib\n          .from(\"decimal\", roundedValueTwo)\n          .to(\"fractional\", { precision: 1 });\n        setFractionalValue([fractionalOne, fractionalTwo]);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [range]);\n\n  const handleChange = (event, newValue) => {\n    setRange(newValue);\n    rangeValue = newValue;\n  };\n\n  return (\n    <Slider\n      aria-label=\"Always visible\"\n      value={range}\n      sx={{\n        width: \"90%\",\n        color: \"#030061\",\n      }}\n      onChange={handleChange}\n      valueLabelDisplay=\"auto\"\n      step={0.1}\n      min={1.1}\n      max={10}\n      valueLabelFormat={(value, index) =>\n        selectedOdds === \"Fractional odds\" ? fractionalValue[index] : value\n      }\n    />\n  );\n};\n","import React from \"react\";\nimport Collapsible from \"react-collapsible\";\n\nconst Collapsable = (props) => {\n  return (\n    <Collapsible transitionTime={300} trigger={<button className={props.classNameButton}>{props.buttonText}</button>} className={props.className? props.className: \"Collapsable\"}>\n      <div className={props.classNameFlex? props.classNameFlex: \"\"}>\n      <span className={props.classNameTwo? props.classNameTwo: props.buttonText} style={props.style} key={`123${props.buttonText}`}>{props.element}</span>\n      <span className={props.classNameThree? props.classNameTwo: props.buttonText} key={`456${props.buttonText}`}>{props.elementTwo}</span>\n      </div>\n    </Collapsible>\n  );\n};\n\n\nexport default Collapsable;","import React from \"react\";\nimport Collapsible from \"react-collapsible\";\n\nconst CollapsableStats = (props) => {\n  return (\n    <Collapsible transitionTime={300} trigger={<button className={props.classNameButton}>{props.buttonText}</button>} className={props.className? props.className: \"Collapsable\"}>\n      <div className={props.classNameFlex? props.classNameFlex: \"\"}>\n      {props.children}\n      </div>\n    </Collapsible>\n  );\n};\n\n\nexport default CollapsableStats;","import React, { Component, Fragment } from \"react\";\nimport { getNewTips } from \"../logic/getScorePredictions\"\nimport {allTips} from \"../logic/getScorePredictions\"\nexport var incrementValue = 3;\n\nexport var riskLevel = 10;\n\nclass Increment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      incrementValue,\n      riskLevel,\n      show: true,\n    };\n  }\n\n  IncrementItem = () => {\n    if(incrementValue > 1){\n    this.setState({ incrementValue: this.state.incrementValue - 1 });\n    this.setState({ riskLevel: this.state.riskLevel - 1 });\n    incrementValue = (this.state.incrementValue - 1);\n    riskLevel = this.state.riskLevel - 1;\n    }\n    getNewTips(allTips)\n  };\n  DecreaseItem = () => {\n    if(incrementValue > 0){\n      this.setState({ incrementValue: this.state.incrementValue + 1 });\n      this.setState({ riskLevel: this.state.riskLevel + 1 });\n      incrementValue = (this.state.incrementValue + 1);\n      riskLevel = this.state.riskLevel + 1;\n    }\n    getNewTips(allTips)\n  };\n\n  render() {\n    return (\n      <Fragment>\n          <button className=\"IncrementButton\" onClick={this.IncrementItem}>\n            -\n          </button>\n          <button className=\"DecrementButton\" onClick={this.DecreaseItem}>\n            +\n          </button>\n      </Fragment>\n\n    );\n  }\n}\n\nexport default Increment;\n","export async function getBTTSPotential(\n  match,\n  homeGoals,\n  awayGoals,\n  directnessHome,\n  directnessAway\n) {\n  const homeBTTS = match.bttsAllPercentageHome;\n  const homeOnlyBTTS = match.bttsPercentageHomeHome;\n  const awayOnlyBTTS = match.bttsPercentageAwayAway;\n  const awayBTTS = match.bttsAllPercentageAway;\n  const homeG = homeGoals;\n  const awayG = awayGoals;\n\n  match.combinedBTTS = (homeBTTS + awayBTTS) / 2;\n\n  if (\n    match.bttsFraction !== \"N/A\" &&\n    match.status !== \"suspended\" &&\n    match.status !== \"canceled\"\n  ) {\n    if (\n      homeBTTS > 50 &&\n      awayBTTS > 50 &&\n      homeOnlyBTTS > 50 &&\n      awayOnlyBTTS > 50 &&\n      match.awayOdds < 4 &&\n      match.awayOdds > 1.3 &&\n      homeG >= 1 &&\n      awayG >= 1 &&\n      directnessHome < 11 &&\n      directnessAway < 11\n    ) {\n      match.btts = true;\n      match.bttsChosen = true;\n      match.totalGoals = match.rawFinalHomeGoals + match.rawFinalAwayGoals;\n    } else {\n      match.btts = false;\n      match.bttsChosen = false;\n    }\n  }\n  return match;\n}\n","import SwiperCore, { EffectCoverflow, Pagination } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/swiper-bundle.min.css\";\nimport \"swiper/swiper.min.css\";\n\nSwiperCore.use([EffectCoverflow, Pagination]);\n\nexport const Slider = (props) => {\n  return (\n    <Swiper\n      effect={\"coverflow\"}\n      autoHeight={true}\n      grabCursor={true}\n      centeredSlides={true}\n      slidesPerView={1}\n      coverflowEffect={{\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: false,\n      }}\n      pagination={{ clickable: true }}\n      className=\"mySwiper\"\n    >\n      <SwiperSlide>\n       {props.element}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element2}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element3}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element4}\n      </SwiperSlide>\n    </Swiper>\n  );\n};\n","import React, { useState } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nexport let minimumXG = 0;\nexport let minimumGD = 0;\nexport let minimumGDHorA = 0;\nexport let minimumLast6 = 0;\n\nfunction SlideDiff(props) {\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n\n    switch (true) {\n      case props.useCase === \"xg\":\n        minimumXG = newValue;\n        break;\n      case props.useCase === \"gd\":\n        minimumGD = newValue;\n        break;\n      case props.useCase === \"gdHorA\":\n        minimumGDHorA = newValue;\n        break;\n      case props.useCase === \"last10\":\n        minimumLast6 = newValue;\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Slider\n      aria-label=\"Always visible\"\n      value={value}\n      sx={{\n        width: \"90%\",\n        color: \"#030061\",\n      }}\n      onChange={handleChange}\n      step={1}\n      marks={props.marks}\n      valueLabelDisplay=\"auto\"\n      min={parseFloat(props.lower)}\n      max={parseFloat(props.upper)}\n    />\n  );\n}\n\nexport default SlideDiff;\n","import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\napiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId:process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n\nconst app = initializeApp(firebaseConfig);\n\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);","import { db } from \"../firebase\";\nimport { doc, getDoc } from \"firebase/firestore\";\n\nexport async function checkUserPaidStatus(uid) {\n  if (!uid) throw new Error(\"User UID is required\");\n\n  const userRef = doc(db, \"users\", uid);\n  const userSnap = await getDoc(userRef);\n  \n  if (userSnap.exists()) {\n    return userSnap.data().isPaidUser;\n  } else {\n    return false;\n  }\n}\n","import { createContext, useContext, useState, useEffect } from \"react\";\nimport { auth, db } from \"../firebase\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { ThreeDots } from \"react-loading-icons\";\n\nconst AuthContext = createContext();\n\nexport let userDetail;\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isPaidUser, setIsPaidUser] = useState(false);\n  const [loading, setLoading] = useState(true); // Add a loading state\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (currentUser) => {\n      setUser(currentUser);\n      userDetail = currentUser;\n\n      if (currentUser) {\n        // Check Firestore for subscription status using currentUser.email or uid\n        // (Adjust the document reference as needed)\n        const userRef = doc(db, \"users\", currentUser.uid);\n        const userSnap = await getDoc(userRef);\n        if (userSnap.exists()) {\n          const userData = userSnap.data();\n\n          const isPaid = userData.isPaidUser;\n          currentUser.isPaid = isPaid\n          if (isPaid === true) {\n            setIsPaidUser(isPaid === true);\n            console.log(isPaid)\n          } else {\n            setIsPaidUser(false);\n          }\n        } else {\n          console.log(\"User document does not exist in Firestore.\");\n          setIsPaidUser(false);\n        }\n      }\n\n      setLoading(false); // Auth state has been determined\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  // Until loading is complete, return a loading indicator (or null)\n  if (loading) {\n    return <ThreeDots />;\n  }\n\n  return (\n    <AuthContext.Provider value={{ user, isPaidUser }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Hook to access authentication data\nexport const useAuth = () => useContext(AuthContext);\n","import React, { Fragment, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { matches, diff } from \"./getFixtures\";\nimport { RenderAllFixtures } from \"../logic/getFixtures\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport CollapsableStats from \"../components/CollapsableStats\";\nimport { allForm } from \"../logic/getFixtures\";\nimport Increment from \"../components/Increment\";\nimport { incrementValue } from \"../components/Increment\";\nimport { getBTTSPotential } from \"../logic/getBTTSPotential\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport { Slider } from \"../components/Carousel\";\nimport {\n  calculateAttackingStrength,\n  calculateDefensiveStrength,\n  calculateMetricStrength,\n} from \"./getStats\";\nimport { rangeValue } from \"../components/Slider\";\nimport {\n  minimumGD,\n  minimumXG,\n  minimumLast6,\n  minimumGDHorA,\n} from \"../components/SliderDiff\";\nimport { checkUserPaidStatus } from \"../logic/hasUserPaid\";\nimport { userDetail } from \"../logic/authProvider\";\nimport { dynamicDate } from \"./getFixtures\";\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nlet finalHomeGoals;\nlet finalAwayGoals;\nlet rawFinalHomeGoals;\nlet rawFinalAwayGoals;\nlet homeOdds;\nlet awayOdds;\nlet totalGoals = 0;\nlet totalGoals2 = 0;\nlet numberOfGames = 0;\nlet drawPredictions = 0;\nlet homePredictions = 0;\nlet awayPredictions = 0;\nlet drawAIPredictions = 0;\nlet homeAIPredictions = 0;\nlet awayAIPredictions = 0;\nlet allOutcomes = 0;\nlet homeOutcomes = 0;\nlet awayOutcomes = 0;\nlet winAmount = 0;\nlet lossAmount = 0;\nlet AIwinAmount = 0;\nlet AIlossAmount = 0;\nlet sumStatDAWin = 0;\nlet sumStatDALoss = 0;\nlet sumStatPossessionWin = 0;\nlet sumStatPossessionLoss = 0;\nlet sumStatSOTWin = 0;\nlet sumStatSOTLoss = 0;\nlet sumStatPPGLast10Win = 0;\nlet sumStatPPGLast10Loss = 0;\nlet sumOddsWin = 0;\nlet sumOddsLoss = 0;\nlet sumXGForWin = 0;\nlet sumXGForLoss = 0;\nlet sumXGAgainstWin = 0;\nlet sumXGAgainstLoss = 0;\nlet allWinOutcomes = 0;\nlet allLossOutcomes = 0;\nlet allDrawOutcomes = 0;\nlet totalROI = 0;\nlet totalInvestment = 0;\nlet totalProfit = 0;\nlet totalAIROI = 0;\nlet totalAIInvestment = 0;\nlet totalAIProfit = 0;\nlet userTipList;\nexport let formObjectHome;\nexport let formObjectAway;\nexport let clicked = false;\nlet paid;\n\nexport var renderPredictions;\n\nasync function convertTimestamp(timestamp) {\n  let newDate = new Date(timestamp * 1000);\n  let [day, month, year] = newDate.toLocaleDateString(\"en-US\").split(\"/\");\n\n  let converted = `${year}-${day}-${month}`;\n\n  return converted;\n}\n\nexport function getPointsFromLastX(lastX) {\n  let points = 0;\n  let pointsAddition;\n\n  try {\n    lastX.forEach((game) => {\n      switch (true) {\n        case game === \"W\":\n          pointsAddition = 3;\n          break;\n        case game === \"D\":\n          pointsAddition = 1;\n          break;\n        case game === \"L\":\n          pointsAddition = 0;\n          break;\n        default:\n          break;\n      }\n\n      points = points + pointsAddition;\n    });\n    return points;\n  } catch (error) {\n    console.log(error);\n    return \"N/A\";\n  }\n}\nfunction isBeforeTimestamp(targetTimestamp) {\n  const currentTimestamp = Math.floor(Date.now() / 1000); // Get current time in seconds\n  return currentTimestamp < targetTimestamp;\n}\n\nasync function fetchUserTips() {\n  try {\n    const userGeneratedTips = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}tips`\n    );\n    const tips = await userGeneratedTips.json();\n\n    const tipCounts = {};\n\n    // Process the tips\n    Object.values(tips).forEach((userTips) => {\n      userTips.forEach(({ gameId, game, tip, tipString, date }) => {\n        if (isBeforeTimestamp(date)) {\n          if (!tipCounts[gameId]) {\n            tipCounts[gameId] = { game, tips: {} };\n          }\n\n          if (!tipCounts[gameId].tips[tipString]) {\n            tipCounts[gameId].tips[tipString] = 0;\n          }\n\n          // Increment the respective tip count\n          tipCounts[gameId].tips[tipString] += 1;\n        }\n      });\n    });\n\n    // Convert the object to an array and format output\n    const formattedTips = Object.entries(tipCounts).flatMap(\n      ([gameId, { game, tips }]) =>\n        Object.entries(tips).map(([tipString, count]) => ({\n          game,\n          tipString,\n          count,\n          formatted: `${game} - ${tipString} - ${count} tip(s)`,\n        }))\n    );\n\n    // Sort by count in descending order\n    formattedTips.sort((a, b) => b.count - a.count);\n\n    return formattedTips.slice(0, 10); // ✅ Sorted list with game name, tipString, and count\n  } catch (error) {\n    console.error(\"Error fetching user tips:\", error);\n    return null;\n  }\n}\n\nfunction UserTips() {\n  const [tips, setTips] = useState([]);\n\n  const fetchAndSetUserTips = async () => {\n    const fetchedTips = await fetchUserTips();\n    if (fetchedTips) {\n      setTips(fetchedTips);\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={fetchAndSetUserTips}>User Tips</button>\n      <h4>Most Tipped Games by Users</h4>\n      <ul className=\"UserTipsList\">\n        {tips.length > 0 ? (\n          tips.map((game, index) => (\n            <li key={index} className=\"UserTipsListItems\">\n              {game.formatted}\n            </li>\n          ))\n        ) : (\n          <p>No tips available</p>\n        )}\n      </ul>\n    </div>\n  );\n}\n\nasync function getPastLeagueResults(team, game, hOrA, form) {\n  form.completeData = true;\n  let date = game.date;\n  if (allLeagueResultsArrayOfObjects[game.leagueIndex].fixtures.length > 10) {\n    let teamsHomeResults = allLeagueResultsArrayOfObjects[\n      game.leagueIndex\n    ].fixtures.filter((fixture) => fixture.home_name === team);\n\n    teamsHomeResults = teamsHomeResults\n      .filter(function (item) {\n        return item.date_unix < date - 86400;\n      })\n      .sort((a, b) => a.date_unix - b.date_unix);\n\n    let teamsAwayResults = allLeagueResultsArrayOfObjects[\n      game.leagueIndex\n    ].fixtures.filter((fixture) => fixture.away_name === team);\n\n    teamsAwayResults = teamsAwayResults\n      .filter(function (item) {\n        return item.date_unix < date - 86400;\n      })\n      .sort((a, b) => a.date_unix - b.date_unix);\n\n    async function addTotalsToRecord(record) {\n      // Calculate the total for each array and add as a new property\n      record.totalW =\n        record.W.reduce((sum, value) => sum + value, 0) / record.W.length;\n      record.totalD =\n        record.D.reduce((sum, value) => sum + value, 0) / record.D.length;\n      record.totalL =\n        record.L.reduce((sum, value) => sum + value, 0) / record.L.length;\n\n      return record; // Return the updated object\n    }\n\n    form.recordAgainstIndividualStyles = {\n      W: [],\n      D: [],\n      L: [],\n    };\n\n    form.recordAgainstIndividualStylesHome = {\n      W: [],\n      D: [],\n      L: [],\n    };\n\n    form.recordAgainstIndividualStylesAway = {\n      W: [],\n      D: [],\n      L: [],\n    };\n\n    let homeResults = [];\n    let awayResults = [];\n    let oddsSumHome = 0;\n    let oddsSumAway = 0;\n    let favouriteCount = 0;\n    let underdogCount = 0;\n    let winningFavouriteCount = 0;\n    let drawingFavouriteCount = 0;\n    let beatenFavouriteCount = 0;\n    let winningUnderdogCount = 0;\n    let drawingUnderdogCount = 0;\n    let beatenUnderdogCount = 0;\n\n    for (let index = 0; index < teamsHomeResults.length; index++) {\n      const resultedGame = teamsHomeResults[index];\n      homeResults.push({\n        homeTeam: resultedGame.home_name,\n        gameweek: resultedGame.game_week,\n        homeGoals: resultedGame.homeGoalCount,\n        homePPGPreMatch: resultedGame.pre_match_teamA_overall_ppg,\n        awayPPGPreMatch: resultedGame.pre_match_teamB_overall_ppg,\n        XG:\n          resultedGame.team_a_xg <= 0 || resultedGame.team_a_xg > 7\n            ? resultedGame.homeGoalCount\n            : resultedGame.team_a_xg,\n        awayTeam: resultedGame.away_name,\n        awayGoals: resultedGame.awayGoalCount,\n        XGAgainst:\n          resultedGame.team_b_xg <= 0 || resultedGame.team_b_xg > 7\n            ? resultedGame.awayGoalCount\n            : resultedGame.team_b_xg,\n        possession:\n          resultedGame.team_a_possession <= 0\n            ? 50\n            : resultedGame.team_a_possession,\n        scored: resultedGame.homeGoalCount,\n        conceeded: resultedGame.awayGoalCount,\n        shots: resultedGame.team_a_shots <= 0 ? 12 : resultedGame.team_a_shots,\n        sot:\n          resultedGame.team_a_shotsOnTarget <= 0\n            ? 5\n            : resultedGame.team_a_shotsOnTarget,\n        sotAgainst:\n          resultedGame.team_b_shotsOnTarget <= 0\n            ? 5\n            : resultedGame.team_b_shotsOnTarget,\n        dangerousAttacks:\n          resultedGame.team_a_dangerous_attacks <= 0\n            ? 50\n            : resultedGame.team_a_dangerous_attacks,\n        corners:\n          resultedGame.team_a_corners === -1 ? 6 : resultedGame.team_a_corners,\n        date: await convertTimestamp(resultedGame.date_unix),\n        dateRaw: resultedGame.date_unix,\n        oddsHome: resultedGame.odds_ft_1,\n        oddsAway: resultedGame.odds_ft_2,\n        btts:\n          resultedGame.homeGoalCount > 0 && resultedGame.awayGoalCount > 0\n            ? true\n            : false,\n        points:\n          resultedGame.homeGoalCount > resultedGame.awayGoalCount\n            ? 3\n            : resultedGame.homeGoalCount < resultedGame.awayGoalCount\n            ? 0\n            : 1,\n        result:\n          resultedGame.homeGoalCount > resultedGame.awayGoalCount\n            ? \"W\"\n            : resultedGame.homeGoalCount < resultedGame.awayGoalCount\n            ? \"L\"\n            : \"D\",\n      });\n\n      const directnessHome =\n        (resultedGame.team_a_possession === -1\n          ? 50\n          : 100 - resultedGame.team_a_possession) /\n        (resultedGame.team_b_shotsOnTarget === 0 ||\n        resultedGame.team_b_shotsOnTarget === -1\n          ? 5\n          : resultedGame.team_b_shotsOnTarget);\n\n      switch (true) {\n        case resultedGame.homeGoalCount > resultedGame.awayGoalCount:\n          form.recordAgainstIndividualStyles.W.push(directnessHome);\n          form.recordAgainstIndividualStylesHome.W.push(directnessHome);\n          break;\n        case resultedGame.homeGoalCount < resultedGame.awayGoalCount:\n          form.recordAgainstIndividualStyles.L.push(directnessHome);\n          form.recordAgainstIndividualStylesHome.L.push(directnessHome);\n\n          break;\n        case resultedGame.homeGoalCount === resultedGame.awayGoalCount:\n          form.recordAgainstIndividualStyles.D.push(directnessHome);\n          form.recordAgainstIndividualStylesHome.D.push(directnessHome);\n          break;\n        default:\n          break;\n      }\n\n      oddsSumHome = oddsSumHome + resultedGame.odds_ft_1;\n      favouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2\n          ? favouriteCount + 1\n          : favouriteCount + 0;\n      winningFavouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? winningFavouriteCount + 1\n          : winningFavouriteCount + 0;\n      drawingFavouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingFavouriteCount + 1\n          : drawingFavouriteCount + 0;\n      beatenFavouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? beatenFavouriteCount + 1\n          : beatenFavouriteCount + 0;\n\n      underdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2\n          ? underdogCount + 1\n          : underdogCount + 0;\n      winningUnderdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? winningUnderdogCount + 1\n          : winningUnderdogCount + 0;\n      drawingUnderdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingUnderdogCount + 1\n          : drawingUnderdogCount + 0;\n      beatenUnderdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? beatenUnderdogCount + 1\n          : beatenUnderdogCount + 0;\n    }\n    for (let index = 0; index < teamsAwayResults.length; index++) {\n      const resultedGame = teamsAwayResults[index];\n      awayResults.push({\n        homeTeam: resultedGame.home_name,\n        gameweek: resultedGame.game_week,\n        homeGoals: resultedGame.homeGoalCount,\n        homePPGPreMatch: resultedGame.pre_match_teamA_overall_ppg,\n        awayPPGPreMatch: resultedGame.pre_match_teamB_overall_ppg,\n        XG:\n          resultedGame.team_b_xg <= 0 || resultedGame.team_b_xg > 7\n            ? resultedGame.awayGoalCount\n            : resultedGame.team_b_xg,\n        awayTeam: resultedGame.away_name,\n        awayGoals: resultedGame.awayGoalCount,\n        XGAgainst:\n          resultedGame.team_a_xg <= 0 || resultedGame.team_a_xg > 7\n            ? resultedGame.homeGoalCount\n            : resultedGame.team_a_xg,\n        possession:\n          resultedGame.team_b_possession <= 0\n            ? 50\n            : resultedGame.team_b_possession,\n        scored: resultedGame.awayGoalCount,\n        conceeded: resultedGame.homeGoalCount,\n        shots: resultedGame.team_b_shots <= 0 ? 12 : resultedGame.team_b_shots,\n        sot:\n          resultedGame.team_b_shotsOnTarget <= 0\n            ? 5\n            : resultedGame.team_b_shotsOnTarget,\n        sotAgainst:\n          resultedGame.team_a_shotsOnTarget <= 0\n            ? 5\n            : resultedGame.team_a_shotsOnTarget,\n        dangerousAttacks:\n          resultedGame.team_b_dangerous_attacks <= 0\n            ? 50\n            : resultedGame.team_b_dangerous_attacks,\n        corners:\n          resultedGame.team_b_corners === -1 ? 6 : resultedGame.team_b_corners,\n        date: await convertTimestamp(resultedGame.date_unix),\n        dateRaw: resultedGame.date_unix,\n        oddsHome: resultedGame.odds_ft_1,\n        oddsAway: resultedGame.odds_ft_2,\n        btts:\n          resultedGame.homeGoalCount > 0 && resultedGame.awayGoalCount > 0\n            ? true\n            : false,\n        points:\n          resultedGame.homeGoalCount > resultedGame.awayGoalCount\n            ? 0\n            : resultedGame.homeGoalCount < resultedGame.awayGoalCount\n            ? 3\n            : 1,\n        result:\n          resultedGame.homeGoalCount > resultedGame.awayGoalCount\n            ? \"L\"\n            : resultedGame.homeGoalCount < resultedGame.awayGoalCount\n            ? \"W\"\n            : \"D\",\n      });\n\n      const directnessAway =\n        (resultedGame.team_b_possession === -1\n          ? 50\n          : 100 - resultedGame.team_b_possession) /\n        (resultedGame.team_a_shotsOnTarget === 0 ||\n        resultedGame.team_a_shotsOnTarget === -1\n          ? 5\n          : resultedGame.team_a_shotsOnTarget);\n\n      switch (true) {\n        case resultedGame.homeGoalCount > resultedGame.awayGoalCount:\n          form.recordAgainstIndividualStyles.L.push(directnessAway);\n          form.recordAgainstIndividualStylesAway.L.push(directnessAway);\n          break;\n        case resultedGame.homeGoalCount < resultedGame.awayGoalCount:\n          form.recordAgainstIndividualStyles.W.push(directnessAway);\n          form.recordAgainstIndividualStylesAway.W.push(directnessAway);\n          break;\n        case resultedGame.homeGoalCount === resultedGame.awayGoalCount:\n          form.recordAgainstIndividualStyles.D.push(directnessAway);\n          form.recordAgainstIndividualStylesAway.D.push(directnessAway);\n          break;\n        default:\n          break;\n      }\n\n      oddsSumAway = oddsSumAway + resultedGame.odds_ft_2;\n      favouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2\n          ? favouriteCount + 1\n          : favouriteCount + 0;\n      winningFavouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? winningFavouriteCount + 1\n          : winningFavouriteCount + 0;\n      drawingFavouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingFavouriteCount + 1\n          : drawingFavouriteCount + 0;\n      beatenFavouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? beatenFavouriteCount + 1\n          : beatenFavouriteCount + 0;\n\n      underdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2\n          ? underdogCount + 1\n          : underdogCount + 0;\n      winningUnderdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? winningUnderdogCount + 1\n          : winningUnderdogCount + 0;\n      drawingUnderdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingUnderdogCount + 1\n          : drawingUnderdogCount + 0;\n      beatenUnderdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? beatenUnderdogCount + 1\n          : beatenUnderdogCount + 0;\n    }\n\n    await addTotalsToRecord(form.recordAgainstIndividualStyles);\n\n    let reversedResultsHome = homeResults;\n    let reversedResultsAway = awayResults;\n\n    homeResults.sort((a, b) => a.dateRaw - b.dateRaw);\n\n    awayResults.sort((a, b) => a.dateRaw - b.dateRaw);\n\n    // console.log(form.teamName)\n    // console.log(homeResults)\n    // console.log(awayResults)\n\n    if (game.homeTeam === team) {\n      let y = game.homeOdds;\n      //Clear fav\n      if (y <= 1.5) {\n        const allClearFavouriteResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 1.45\n        );\n        const allClearFavouriteResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 1.45\n        );\n\n        form.simlarGameResultsHome = allClearFavouriteResultsHome\n          .concat(allClearFavouriteResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //fav\n      else if (y <= 2.1) {\n        const allSlightFavouriteResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 2.1 && fixture.oddsHome > 1.45\n        );\n        const allSlightFavouriteResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 2.1 && fixture.oddsAway > 1.45\n        );\n        game.simlarGameResultsHome = allSlightFavouriteResultsHome\n          .concat(allSlightFavouriteResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //Tossup\n      else if (y <= 2.75) {\n        const allTossupResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 2.75 && fixture.oddsHome > 2.1\n        );\n        const allTossupResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 2.75 && fixture.oddsAway > 2.1\n        );\n        game.simlarGameResultsHome = allTossupResultsHome\n          .concat(allTossupResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //Underdog\n      else if (y <= 4) {\n        const allUnderdogResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 4 && fixture.oddsHome > 2.75\n        );\n        const allUnderdogResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 4 && fixture.oddsAway > 2.75\n        );\n        game.simlarGameResultsHome = allUnderdogResultsHome\n          .concat(allUnderdogResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //MassiveUnderdog\n      else if (y > 4) {\n        const allMassiveUnderdogResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome > 4\n        );\n        const allMassiveUnderdogResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway > 4\n        );\n        game.simlarGameResultsHome = allMassiveUnderdogResultsHome\n          .concat(allMassiveUnderdogResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n    } else if (game.awayTeam === team) {\n      let z = game.awayOdds;\n      //Clear fav\n      if (z <= 1.5) {\n        const allClearFavouriteResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 1.45\n        );\n        const allClearFavouriteResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 1.45\n        );\n\n        game.simlarGameResultsAway = allClearFavouriteResultsHome\n          .concat(allClearFavouriteResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //fav\n      else if (z <= 2.1) {\n        const allSlightFavouriteResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 2.1 && fixture.oddsHome > 1.45\n        );\n        const allSlightFavouriteResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 2.1 && fixture.oddsAway > 1.45\n        );\n        game.simlarGameResultsAway = allSlightFavouriteResultsHome\n          .concat(allSlightFavouriteResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //Tossup\n      else if (z <= 2.75) {\n        const allTossupResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 2.75 && fixture.oddsHome > 2.1\n        );\n        const allTossupResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 2.75 && fixture.oddsAway > 2.1\n        );\n        game.simlarGameResultsAway = allTossupResultsHome\n          .concat(allTossupResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //Underdog\n      else if (z <= 4) {\n        const allUnderdogResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 4 && fixture.oddsHome > 2.75\n        );\n        const allUnderdogResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 4 && fixture.oddsAway > 2.75\n        );\n        game.simlarGameResultsAway = allUnderdogResultsHome\n          .concat(allUnderdogResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //MassiveUnderdog\n      else if (z > 4) {\n        const allMassiveUnderdogResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome > 4.5\n        );\n        const allMassiveUnderdogResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway > 4.5\n        );\n        game.simlarGameResultsAway = allMassiveUnderdogResultsHome\n          .concat(allMassiveUnderdogResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n    }\n\n    const allTeamResultsUnordered =\n      reversedResultsHome.concat(reversedResultsAway);\n    const allTeamResults = allTeamResultsUnordered.sort(\n      (a, b) => a.dateRaw - b.dateRaw\n    );\n\n    // console.log(form.teamName);\n    // console.log(allTeamResults);\n\n    let points = 0;\n    let pointsWeighted = 0;\n\n    allTeamResults.forEach((teamResult) => {\n      points = points + teamResult.points;\n      pointsWeighted = pointsWeighted + teamResult.points * teamResult.odds;\n    });\n\n    form.pointsWeighted = pointsWeighted;\n    form.points = points;\n    form.gamesPlayed = allTeamResults.length;\n\n    const allTeamResultsHome = reversedResultsHome.sort(\n      (b, a) => a.dateRaw - b.dateRaw\n    );\n    const allTeamResultsAway = reversedResultsAway.sort(\n      (b, a) => a.dateRaw - b.dateRaw\n    );\n\n    form.allTeamResults = allTeamResults.sort((b, a) => a.dateRaw - b.dateRaw);\n    allTeamResults.sort((b, a) => a.dateRaw - b.dateRaw);\n    form.allTeamResultsLast6 = form.allTeamResults.slice(0, 6);\n\n    const points6 = allTeamResults.map((res) => res.points).slice(0, 6);\n    const pointsSum6 = points6.reduce((a, b) => a + b, 0);\n    form.avPoints6 = pointsSum6 / points6.length;\n    form.pointsSum6 = pointsSum6;\n\n    const points5 = allTeamResults.map((res) => res.points).slice(0, 5);\n    const pointsSum5 = points5.reduce((a, b) => a + b, 0);\n    form.avPoints5 = pointsSum5 / points5.length;\n\n    const pointsAll = allTeamResults.map((res) => res.points);\n    const pointsSumAll = pointsAll.reduce((a, b) => a + b, 0);\n    form.avPointsAll = pointsSumAll / pointsAll.length;\n\n    const resultsAll = allTeamResults.map((res) => res.result);\n    const resultsHome = allTeamResultsHome.map((res) => res.result);\n    const resultsAway = allTeamResultsAway.map((res) => res.result);\n\n    form.LastFiveForm = resultsAll.slice(0, 5);\n    form.LastSixForm = resultsAll.slice(0, 6);\n    form.LastTenForm = resultsAll.slice(0, 10);\n\n    form.resultsAll = resultsAll.slice(0, 6);\n    form.resultsHome = resultsHome.slice(0, 6);\n    form.resultsAway = resultsAway.slice(0, 6);\n\n    // console.log(form.teamName)\n    // console.log(form)\n\n    const avScoredLast5 = allTeamResults.map((res) => res.scored).slice(0, 5);\n    const avScoredLast5Sum = avScoredLast5.reduce((a, b) => a + b, 0);\n    form.avScoredLast5 = avScoredLast5Sum / avScoredLast5.length;\n    const avConceededLast5 = allTeamResults\n      .map((res) => res.conceeded)\n      .slice(0, 5);\n    const avConceededLast5Sum = avConceededLast5.reduce((a, b) => a + b, 0);\n    form.avConceededLast5 = avConceededLast5Sum / avConceededLast5.length;\n    const avDALast5 = allTeamResults\n      .map((res) => res.dangerousAttacks)\n      .slice(0, 5);\n    const avDALast5Sum = avDALast5.reduce((a, b) => a + b, 0);\n    form.avDALast5 = avDALast5Sum / avDALast5.length;\n    const avSOTLast5 = allTeamResults.map((res) => res.sot).slice(0, 5);\n    const avSOTLast5Sum = avSOTLast5.reduce((a, b) => a + b, 0);\n    form.avSOTLast5 = avSOTLast5Sum / avSOTLast5.length;\n    const avSOTAgainstLast5 = allTeamResults\n      .map((res) => res.sotAgainst)\n      .slice(0, 5);\n    const avSOTAgainstLast5Sum = avSOTAgainstLast5.reduce((a, b) => a + b, 0);\n    form.avSOTAgainstLast5 = avSOTAgainstLast5Sum / avSOTAgainstLast5.length;\n    const avShotsLast5 = allTeamResults.map((res) => res.shots).slice(0, 5);\n    const avShotsLast5Sum = avShotsLast5.reduce((a, b) => a + b, 0);\n    form.avShotsLast5 = avShotsLast5Sum / avShotsLast5.length;\n    const avCornersLast5 = allTeamResults.map((res) => res.corners).slice(0, 5);\n    const avCornersLast5Sum = avCornersLast5.reduce((a, b) => a + b, 0);\n    form.avCornersLast5 = avCornersLast5Sum / avCornersLast5.length;\n    const avPosessionLast5 = allTeamResults\n      .map((res) => res.possession)\n      .slice(0, 6);\n    const avPosessionLast5Sum = avPosessionLast5.reduce((a, b) => a + b, 0);\n    form.avPosessionLast5 = avPosessionLast5Sum / avPosessionLast5.length;\n    const avXGLast5 = allTeamResults.map((res) => res.XG).slice(0, 5);\n    const avXGLast5Sum = avXGLast5.reduce((a, b) => a + b, 0);\n    form.avXGLast5 = avXGLast5Sum / avXGLast5.length;\n    const avXGAgainstLast5 = allTeamResults\n      .map((res) => res.XGAgainst)\n      .slice(0, 5);\n\n    const avXGAgainstLast5Sum = avXGAgainstLast5.reduce((a, b) => a + b, 0);\n    form.avXGAgainstLast5 = avXGAgainstLast5Sum / avXGAgainstLast5.length;\n\n    const averageOddsHome = oddsSumHome / teamsHomeResults.length;\n    const averageOddsAway = oddsSumAway / teamsAwayResults.length;\n    form.favouriteCount = favouriteCount;\n    form.winningFavouriteCount = winningFavouriteCount;\n    form.drawingFavouriteCount = drawingFavouriteCount;\n    form.beatenFavouriteCount = beatenFavouriteCount;\n\n    form.underdogCount = underdogCount;\n    form.winningUnderdogCount = winningUnderdogCount;\n    form.drawingUnderdogCount = drawingUnderdogCount;\n    form.beatenUnderdogCount = beatenUnderdogCount;\n\n    form.oddsReliabilityWin =\n      favouriteCount > 0\n        ? (form.winningFavouriteCount / form.favouriteCount) * 100\n        : 0;\n    form.oddsReliabilityDraw =\n      favouriteCount > 0\n        ? (form.drawingFavouriteCount / form.favouriteCount) * 100\n        : 0;\n    form.oddsReliabilityLose =\n      favouriteCount > 0\n        ? (form.beatenFavouriteCount / form.favouriteCount) * 100\n        : 0;\n\n    form.oddsReliabilityWinAsUnderdog =\n      underdogCount > 0\n        ? (form.winningUnderdogCount / form.underdogCount) * 100\n        : 0;\n    form.oddsReliabilityDrawAsUnderdog =\n      underdogCount > 0\n        ? (form.drawingUnderdogCount / form.underdogCount) * 100\n        : 0;\n    form.oddsReliabilityLoseAsUnderdog =\n      underdogCount > 0\n        ? (form.beatenUnderdogCount / form.underdogCount) * 100\n        : 0;\n\n    form.reliableIndicator =\n      form.winningFavouriteCount + form.beatenUnderdogCount;\n    form.unreliableIndicator =\n      form.beatenFavouriteCount +\n      form.drawingFavouriteCount +\n      form.winningUnderdogCount +\n      form.drawingUnderdogCount;\n\n    form.predictabilityScore =\n      form.reliableIndicator / form.unreliableIndicator;\n\n    let reliabilityString;\n\n    switch (true) {\n      case form.predictabilityScore < 0.3:\n        reliabilityString =\n          \"Odds have been an extremely unreliable indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 0.3 && form.predictabilityScore < 0.8:\n        reliabilityString =\n          \"Odds have been an unreliable indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 0.8 && form.predictabilityScore < 1.2:\n        reliabilityString =\n          \"Odds have been a decent indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 1.2 && form.predictabilityScore < 1.7:\n        reliabilityString =\n          \"Odds have been a good indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 1.7 && form.predictabilityScore < 2.2:\n        reliabilityString =\n          \"Odds have been a very good indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 2.2:\n        reliabilityString =\n          \"Odds have been an excellent indicator of actual performance so far this season\";\n        break;\n      default:\n        break;\n    }\n\n    form.reliabilityString = reliabilityString;\n\n    const teamGoalsHome = homeResults.map((res) => res.scored);\n\n    const teamGoalsAway = awayResults.map((res) => res.scored);\n    const teamGoalsAll = allTeamResults.map((res) => res.scored);\n    const teamConceededHome = homeResults.map((res) => res.conceeded);\n    const teamConceededAway = awayResults.map((res) => res.conceeded);\n    const teamConceededAll = allTeamResults.map((res) => res.conceeded);\n\n    const teamXGForAll = allTeamResults.map((res) => res.XG);\n    const teamXGAgainstAll = allTeamResults.map((res) => res.XGAgainst);\n    const teamXGForAllRecentAtStart = teamXGForAll;\n    const teamXGAgainstAllRecentAtStart = teamXGAgainstAll;\n    homeResults.sort((b, a) => a.dateRaw - b.dateRaw);\n    awayResults.sort((b, a) => a.dateRaw - b.dateRaw);\n\n    const teamXGForHome = homeResults.map((res) => res.XG);\n    const teamXGAgainstHome = homeResults.map((res) => res.XGAgainst);\n    const teamXGForAway = awayResults.map((res) => res.XG);\n    const teamXGAgainstAway = awayResults.map((res) => res.XGAgainst);\n\n    const XGSum = teamXGForAll.reduce((a, b) => a + b, 0);\n    const avgXGScored = XGSum / teamXGForAll.length || 0;\n    const XGAgainstSum = teamXGAgainstAll.reduce((a, b) => a + b, 0);\n    const avgXGConceeded = XGAgainstSum / teamXGAgainstAll.length || 0;\n\n    const shortTermXGDiff = form.avXGLast5 - form.avXGAgainstLast5;\n    const longTermXGDiff = avgXGScored - avgXGConceeded;\n    form.shortTermXGDiff = shortTermXGDiff.toFixed(2);\n    form.longTermXGDiff = longTermXGDiff.toFixed(2);\n\n    form.XGChangeRecently = shortTermXGDiff - longTermXGDiff;\n\n    const possession = allTeamResults.map((res) => res.possession);\n    const possessionSum = possession.reduce((a, b) => a + b, 0);\n    const avgPossession = possessionSum / possession.length || 0;\n\n    const possessionHome = homeResults.map((res) => res.possession);\n    const possessionSumHome = possessionHome.reduce((a, b) => a + b, 0);\n    form.avgPossessionHome = possessionSumHome / possessionHome.length || 0;\n\n    const possessionAway = awayResults.map((res) => res.possession);\n    const possessionSumAway = possessionAway.reduce((a, b) => a + b, 0);\n    form.avgPossessionAway = possessionSumAway / possessionAway.length || 0;\n\n    const dangerousAttacks = allTeamResults.map((res) => res.dangerousAttacks);\n    const dangerousAttacksSum = dangerousAttacks.reduce((a, b) => a + b, 0);\n    const avgDangerousAttacks =\n      dangerousAttacksSum / dangerousAttacks.length || 40;\n\n    const dangerousAttacksHome = homeResults.map((res) => res.dangerousAttacks);\n    const dangerousAttacksSumHome = dangerousAttacksHome.reduce(\n      (a, b) => a + b,\n      40\n    );\n    form.avgDangerousAttacksHome =\n      dangerousAttacksSumHome / dangerousAttacksHome.length || 40;\n\n    const dangerousAttacksAway = awayResults.map((res) => res.dangerousAttacks);\n    const dangerousAttacksSumAway = dangerousAttacksAway.reduce(\n      (a, b) => a + b,\n      0\n    );\n    form.avgDangerousAttacksAway =\n      dangerousAttacksSumAway / dangerousAttacksAway.length || 40;\n\n    const shots = allTeamResults.map((res) => res.shots);\n    const shotsSum = shots.reduce((a, b) => a + b, 0);\n    const avgShots = shotsSum / shots.length || 0;\n    form.avgShots = avgShots;\n\n    const shotsHome = homeResults.map((res) => res.shots);\n    const shotsSumHome = shotsHome.reduce((a, b) => a + b, 0);\n    form.avgShotsHome = shotsSumHome / shotsHome.length || 0;\n\n    const shotsAway = awayResults.map((res) => res.shots);\n    const shotsSumAway = shotsAway.reduce((a, b) => a + b, 0);\n    form.avgShotsAway = shotsSumAway / shotsAway.length || 0;\n\n    const shotsOnTarget = allTeamResults.map((res) => res.sot);\n    const shotsOnTargetSum = shotsOnTarget.reduce((a, b) => a + b, 0);\n    const avgShotsOnTarget = shotsOnTargetSum / shotsOnTarget.length || 0;\n\n    const shotsOnTargetHome = homeResults.map((res) => res.sot);\n    const shotsOnTargetSumHome = shotsOnTargetHome.reduce((a, b) => a + b, 0);\n    form.avgShotsOnTargetHome =\n      shotsOnTargetSumHome / shotsOnTargetHome.length || 0;\n\n    const shotsOnTargetAway = awayResults.map((res) => res.sot);\n    const shotsOnTargetSumAway = shotsOnTargetAway.reduce((a, b) => a + b, 0);\n    form.avgShotsOnTargetAway =\n      shotsOnTargetSumAway / shotsOnTargetAway.length || 0;\n\n    form.directnessRating = avgPossession / avgShotsOnTarget;\n    form.directnessRatingHome =\n      form.avgPossessionHome / form.avgShotsOnTargetHome;\n    form.directnessRatingAway =\n      form.avgPossessionAway / form.avgShotsOnTargetAway;\n\n    const shotsOnTargetAgainst = allTeamResults.map((res) => res.sotAgainst);\n    const shotsOnTargetSumAgainst = shotsOnTargetAgainst.reduce(\n      (a, b) => a + b,\n      0\n    );\n    const avgShotsOnTargetAgainst =\n      shotsOnTargetSumAgainst / shotsOnTargetAgainst.length || 0;\n\n    const shotsOnTargetAgainstHome = homeResults.map((res) => res.sotAgainst);\n    const shotsOnTargetSumAgainstHome = shotsOnTargetAgainstHome.reduce(\n      (a, b) => a + b,\n      0\n    );\n    form.avgShotsOnTargetAgainstHome =\n      shotsOnTargetSumAgainstHome / shotsOnTargetAgainstHome.length || 0;\n\n    const shotsOnTargetAgainstAway = awayResults.map((res) => res.sotAgainst);\n    const shotsOnTargetSumAgainstAway = shotsOnTargetAgainstAway.reduce(\n      (a, b) => a + b,\n      0\n    );\n    form.avgShotsOnTargetAgainstAway =\n      shotsOnTargetSumAgainstAway / shotsOnTargetAgainstAway.length || 0;\n\n    const corners = allTeamResults.map((res) => res.corners);\n    const cornersSum = corners.reduce((a, b) => a + b, 0);\n    const cornersAv = cornersSum / corners.length || 0;\n\n    const cornersLast5 = corners.slice(0, 5);\n    const cornersSumLast5 = cornersLast5.reduce((a, b) => a + b, 0);\n    const cornersAvLast5 = cornersSumLast5 / cornersLast5.length || 0;\n    form.last5Corners = cornersAvLast5;\n\n    const cornersHome = homeResults.map((res) => res.corners);\n    const cornersSumHome = cornersHome.reduce((a, b) => a + b, 0);\n    form.cornersAvHome = cornersSumHome / cornersHome.length || 0;\n\n    const cornersAway = awayResults.map((res) => res.corners);\n    const cornersSumAway = cornersAway.reduce((a, b) => a + b, 0);\n    form.cornersAvAway = cornersSumAway / cornersAway.length || 0;\n\n    const last5XG = teamXGForAllRecentAtStart.slice(0, 5);\n    const last5XGSum = last5XG.reduce((a, b) => a + b, 0);\n    const last5XGAvgFor = last5XGSum / last5XG.length || 0;\n\n    const last5XGHome = teamXGForHome.slice(0, 5);\n    const last5XGSumHome = last5XGHome.reduce((a, b) => a + b, 0);\n    form.last5XGAvgForHome = last5XGSumHome / last5XGHome.length || 0;\n\n    const last5XGAway = teamXGForAway.slice(0, 5);\n    const last5XGSumAway = last5XGAway.reduce((a, b) => a + b, 0);\n    form.last5XGAvgForAway = last5XGSumAway / last5XGAway.length || 0;\n\n    const XGSumHome = teamXGForHome.reduce((a, b) => a + b, 0);\n    form.avgXGScoredHome = XGSumHome / teamXGForHome.length || 0;\n\n    const XGSumAway = teamXGForAway.reduce((a, b) => a + b, 0);\n    form.avgXGScoredAway = XGSumAway / teamXGForAway.length || 0;\n\n    const XGAgainstSumHome = teamXGAgainstHome.reduce((a, b) => a + b, 0);\n    form.avgXGConceededHome = XGAgainstSumHome / teamXGAgainstHome.length || 0;\n\n    const XGAgainstSumAway = teamXGAgainstAway.reduce((a, b) => a + b, 0);\n    form.avgXGConceededAway = XGAgainstSumAway / teamXGAgainstAway.length || 0;\n\n    const last5XGAgainst = teamXGAgainstAllRecentAtStart.slice(0, 5);\n    const last5XGAgainstSum = last5XGAgainst.reduce((a, b) => a + b, 0);\n    const last5XGAvgAgainst = last5XGAgainstSum / last5XGAgainst.length || 0;\n\n    const last5XGAgainstHome = teamXGForHome.slice(0, 5);\n    const last5XGAgainstSumHome = last5XGAgainstHome.reduce((a, b) => a + b, 0);\n    form.last5XGAvgAgainstHome =\n      last5XGAgainstSumHome / last5XGAgainstHome.length || 0;\n\n    const last5XGAgainstAway = teamXGForAway.slice(0, 5);\n    const last5XGAgainstSumAway = last5XGAgainstAway.reduce((a, b) => a + b, 0);\n    form.last5XGAvgAgainstAway =\n      last5XGAgainstSumAway / last5XGAgainstAway.length || 0;\n\n    form.XGDiffNonAverage = XGSum - XGAgainstSum;\n    form.XGDiffNonAverageLast5 = last5XGSum - last5XGAgainstSum;\n\n    form.XGOverall = parseFloat(avgXGScored.toFixed(2));\n    form.XGlast5 = parseFloat(last5XGAvgFor.toFixed(2));\n\n    const shotsLast5Arr = shots.slice(0, 5);\n    const shotsLast5Sum = shotsLast5Arr.reduce((a, b) => a + b, 0);\n    const avgShotsLast5 = shotsLast5Sum / shotsLast5Arr.length || 0;\n    form.avgShotsLast5 = avgShotsLast5;\n\n    const shotsHomeArr = shotsHome.slice(0, 5);\n    const shotsHomeSum = shotsHomeArr.reduce((a, b) => a + b, 0);\n    const avgShotsHome = shotsHomeSum / shotsHomeArr.length || 0;\n    form.avgShotsHome = avgShotsHome;\n\n    const shotsAwayArr = shotsAway.slice(0, 5);\n    const shotsAwaySum = shotsAwayArr.reduce((a, b) => a + b, 0);\n    const avgShotsAway = shotsAwaySum / shotsAwayArr.length || 0;\n    form.avgShotsAway = avgShotsAway;\n\n    form.avgShotValue = (form.XGOverall / form.avgShots) * 100;\n    form.avgShotValueLast5 = (form.XGlast5 / form.avgShotsLast5) * 100;\n    form.avgShotValueHome = (form.avgXGScoredHome / form.avgShotsHome) * 100;\n    form.avgShotValueAway = (form.avgXGScoredAway / form.avgShotsAway) * 100;\n\n    form.XGAgainstAvgOverall = parseFloat(avgXGConceeded.toFixed(2));\n    form.XGAgainstlast5 = parseFloat(last5XGAvgAgainst.toFixed(2));\n\n    form.AveragePossessionOverall = parseFloat(avgPossession.toFixed(1));\n    form.AverageDangerousAttacksOverall = parseFloat(\n      avgDangerousAttacks.toFixed(1)\n    );\n    form[\"Average Shots\"] = parseFloat(avgShots.toFixed(1));\n    form.AverageCorners = parseFloat(cornersAv.toFixed(1));\n    form.AverageShotsOnTargetOverall = parseFloat(avgShotsOnTarget.toFixed(1));\n    form.AverageShotsOnTargetAgainstOverall = parseFloat(\n      avgShotsOnTargetAgainst.toFixed(1)\n    );\n    const alpha = 0.4;\n    const beta = 0.4;\n\n    let forAndAgainstRollingAv;\n    let forAndAgainstRollingAvHomeOrAway;\n\n    if (hOrA === \"home\") {\n      form.homeResults = homeResults;\n      form.allGoalsArrayHome = teamGoalsAll;\n      form.allConceededArrayHome = teamConceededAll;\n      form.allGoalsArrayHomeOnly = teamGoalsHome;\n      form.allConceededArrayHomeOnly = teamConceededHome;\n      const sum = teamGoalsHome.reduce((a, b) => a + b, 0);\n      const sumTwo = teamConceededHome.reduce((a, b) => a + b, 0);\n      form.goalDifferenceHomeOrAway = sum - sumTwo;\n\n      forAndAgainstRollingAv = await predictGoalsWithExponentialSmoothing(\n        form.allGoalsArrayHome.reverse(),\n        form.allConceededArrayHome.reverse(),\n        alpha\n      );\n\n      forAndAgainstRollingAvHomeOrAway =\n        await predictGoalsWithExponentialSmoothing(\n          form.allGoalsArrayHomeOnly.reverse(),\n          form.allConceededArrayHomeOnly.reverse(),\n          beta\n        );\n    } else if (hOrA === \"away\") {\n      form.awayResults = awayResults;\n      form.allGoalsArrayAway = teamGoalsAll;\n      form.allConceededArrayAway = teamConceededAll;\n      form.allGoalsArrayAwayOnly = teamGoalsAway;\n      form.allConceededArrayAwayOnly = teamConceededAway;\n      const sum = teamGoalsAway.reduce((a, b) => a + b, 0);\n      const sumTwo = teamConceededAway.reduce((a, b) => a + b, 0);\n      form.goalDifferenceHomeOrAway = sum - sumTwo;\n      forAndAgainstRollingAv = await predictGoalsWithExponentialSmoothing(\n        form.allGoalsArrayAway.reverse(),\n        form.allConceededArrayAway.reverse(),\n        alpha\n      );\n\n      forAndAgainstRollingAvHomeOrAway =\n        await predictGoalsWithExponentialSmoothing(\n          form.allGoalsArrayAwayOnly,\n          form.allConceededArrayAwayOnly,\n          beta\n        );\n    }\n\n    async function create2DArray(arr1, arr2) {\n      if (arr1.length !== arr2.length) {\n        throw new Error(\"Arrays must have the same length.\");\n      }\n\n      return arr1.map((element, index) => [element, arr2[index]]);\n    }\n\n    let bttsHome = homeResults.map((res) => res.btts);\n    if (bttsHome.length > 10) {\n      bttsHome = bttsHome.slice(-10);\n    }\n\n    let bttsAway = awayResults.map((res) => res.btts);\n    if (bttsAway.length > 10) {\n      bttsAway = bttsAway.slice(-10);\n    }\n\n    let bttsAll = allTeamResults.map((res) => res.btts);\n    let last5BTTS = bttsAll.slice(0, 5);\n    if (bttsAll.length > 10) {\n      bttsAll = bttsAll.slice(-10);\n    }\n\n    const bttsHomeCount = bttsHome.filter((btts) => btts === true);\n    const bttsHomeString = `${bttsHomeCount.length}/${bttsHome.length}`;\n    const bttsHomePercentage = (\n      (bttsHomeCount.length / bttsHome.length) *\n      100\n    ).toFixed(0);\n\n    const bttsAwayCount = bttsAway.filter((btts) => btts === true);\n    const bttsAwayString = `${bttsAwayCount.length}/${bttsAway.length}`;\n    const bttsAwayPercentage = (\n      (bttsAwayCount.length / bttsAway.length) *\n      100\n    ).toFixed(0);\n    const bttsAllCount = bttsAll.filter((btts) => btts === true);\n    const bttsAllString = `${bttsAllCount.length}/${bttsAll.length}`;\n    const bttsAllPercentage = (\n      (bttsAllCount.length / bttsAll.length) *\n      100\n    ).toFixed(0);\n\n    const bttsLast5Count = last5BTTS.filter((btts) => btts === true);\n    const bttsLast5Percentage = (\n      (bttsLast5Count.length / last5BTTS.length) *\n      100\n    ).toFixed(0);\n    form.bttsAllPercentage = bttsAllPercentage;\n    form.bttsLast5Percentage = bttsLast5Percentage;\n\n    form.bttsHomePercentage = bttsHomePercentage;\n    form.bttsAwayPercentage = bttsAwayPercentage;\n\n    let r = 10;\n    let x = 10;\n\n    const teamGoalsHomeRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsHome,\n      teamGoalsHome.length < x ? teamGoalsHome.length : x\n    );\n\n    const teamGoalsAwayRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsAway,\n      teamGoalsAway.length < x ? teamGoalsAway.length : x\n    );\n\n    function roundXG(xg, scored) {\n      if (scored >= xg) {\n        // Round up to the nearest integer if scored is greater or equal\n        return Math.ceil(xg);\n      } else {\n        // Round down to the nearest integer if scored is less\n        return Math.floor(xg);\n      }\n    }\n    // console.log(form.teamName)\n    // console.log(allTeamResults)\n    const xgAndScored = allTeamResults.map((res) => ({\n      XG: res.XG,\n      scored: res.scored,\n    }));\n    const xgAgainstAndConceeded = allTeamResults.map((res) => ({\n      XG: res.XGAgainst,\n      conceeded: res.conceeded,\n    }));\n\n    const xgAndScoredHome = homeResults.map((res) => ({\n      XG: res.XG,\n      scored: res.scored,\n    }));\n    const xgAgainstAndConceededHome = homeResults.map((res) => ({\n      XG: res.XGAgainst,\n      conceeded: res.conceeded,\n    }));\n    const xgAndScoredAway = awayResults.map((res) => ({\n      XG: res.XG,\n      scored: res.scored,\n    }));\n    const xgAgainstAndConceededAway = awayResults.map((res) => ({\n      XG: res.XGAgainst,\n      conceeded: res.conceeded,\n    }));\n\n    const RoundedXGForV2 = xgAndScored.map(\n      ({ XG }) => XG\n      // roundXG(XG, scored, form)\n    );\n    const RoundedXGAgainstV2 = xgAgainstAndConceeded.map(\n      ({ XG }) => XG\n      // roundXG(XG, conceeded, form)\n    );\n    const RoundedXGForHomeV2 = xgAndScoredHome.map(\n      ({ XG }) => XG\n      // roundXG(XG, scored, form)\n    );\n    const RoundedXGAgainstHomeV2 = xgAgainstAndConceededHome.map(\n      ({ XG }) => XG\n      // roundXG(XG, conceeded, form)\n    );\n    const RoundedXGForAwayV2 = xgAndScoredAway.map(\n      ({ XG }) => XG\n      // roundXG(XG, scored, form)\n    );\n    const RoundedXGAgainstAwayV2 = xgAgainstAndConceededAway.map(\n      ({ XG }) => XG\n      // roundXG(XG, conceeded, form)\n    );\n\n    const ArrXGFor = teamXGForAll.map((xg) => xg);\n    const ArrXGAgainst = teamXGAgainstAll.map((xg) => xg);\n    const ArrXGForHome = teamXGForHome.map((xg) => xg);\n    const ArrXGAgainstHome = teamXGAgainstHome.map((xg) => xg);\n    const ArrXGForAway = teamXGForAway.map((xg) => xg);\n    const ArrXGAgainstAway = teamXGAgainstAway.map((xg) => xg);\n\n    form.twoDGoalsArray = await create2DArray(\n      ArrXGFor.reverse(),\n      ArrXGAgainst.reverse()\n    );\n    form.twoDGoalsArrayHome = await create2DArray(\n      ArrXGForHome.reverse(),\n      ArrXGAgainstHome.reverse()\n    );\n    form.twoDGoalsArrayAway = await create2DArray(\n      ArrXGForAway.reverse(),\n      ArrXGAgainstAway.reverse()\n    );\n\n    RoundedXGForV2.reverse();\n    RoundedXGAgainstV2.reverse();\n    RoundedXGForHomeV2.reverse();\n    RoundedXGAgainstHomeV2.reverse();\n    RoundedXGForAwayV2.reverse();\n    RoundedXGAgainstAwayV2.reverse();\n    // RoundedXGForAway.reverse()\n    // RoundedXGAgainstAway.reverse()\n\n    form.XGPrediction = await predictGoalsWithExponentialSmoothing(\n      RoundedXGForV2,\n      RoundedXGAgainstV2,\n      alpha\n    );\n\n    form.XGPredictionHome = await predictGoalsWithExponentialSmoothing(\n      RoundedXGForHomeV2,\n      RoundedXGAgainstHomeV2,\n      beta\n    );\n\n    form.XGPredictionAway = await predictGoalsWithExponentialSmoothing(\n      RoundedXGForAwayV2,\n      RoundedXGAgainstAwayV2,\n      beta\n    );\n\n    const teamConceededHomeRollingAverage =\n      await predictNextWeightedMovingAverage(\n        teamConceededHome,\n        teamConceededHome.length < x ? teamConceededHome.length : x\n      );\n\n    const teamConceededAwayRollingAverage =\n      await predictNextWeightedMovingAverage(\n        teamConceededAway,\n        teamConceededAway.length < x ? teamConceededAway.length : x\n      );\n\n    const sum = teamGoalsAll.reduce((a, b) => a + b, 0);\n    const avgScored = sum / teamGoalsAll.length || 0;\n    form.avgScored = parseFloat(avgScored.toFixed(2));\n\n    const sumHome = teamGoalsHome.reduce((a, b) => a + b, 0);\n    const avgScoredHome = sumHome / teamGoalsHome.length || 0;\n    form.avgScoredHome = parseFloat(avgScoredHome.toFixed(2));\n\n    const sumAway = teamGoalsAway.reduce((a, b) => a + b, 0);\n    const avgScoredAway = sumAway / teamGoalsAway.length || 0;\n    form.avgScoredAway = parseFloat(avgScoredAway.toFixed(2));\n\n    const last5 = teamGoalsAll.reverse().slice(0, 5);\n    const last5Sum = last5.reduce((a, b) => a + b, 0);\n    const last5AvgScored = parseFloat(last5Sum / last5.length || 0);\n\n    const last5Home = teamGoalsHome.slice(0, 5);\n    const last5SumHome = last5Home.reduce((a, b) => a + b, 0);\n    form.last5AvgScoredHome = parseFloat(last5SumHome / last5Home.length || 0);\n\n    const last5Away = teamGoalsAway.slice(0, 5);\n    const last5SumAway = last5Away.reduce((a, b) => a + b, 0);\n    form.last5AvgScoredAway = parseFloat(last5SumAway / last5Away.length || 0);\n\n    const last5Conceeded = teamConceededAll.reverse().slice(0, 5);\n    const last5ConceededSum = last5Conceeded.reduce((a, b) => a + b, 0);\n    const last5AvgConceeded = parseFloat(\n      last5ConceededSum / last5Conceeded.length || 0\n    );\n\n    form.last5GoalDiff = last5Sum - last5ConceededSum;\n\n    const last5ConceededHome = teamConceededHome.slice(0, 5);\n    const last5ConceededSumHome = last5ConceededHome.reduce((a, b) => a + b, 0);\n    form.last5AvgConceededHome = parseFloat(\n      last5ConceededSumHome / last5ConceededHome.length || 0\n    );\n\n    const last5ConceededAway = teamConceededAway.slice(0, 5);\n    const last5ConceededSumAway = last5ConceededAway.reduce((a, b) => a + b, 0);\n    form.last5AvgConceededAway = parseFloat(\n      last5ConceededSumAway / last5ConceededAway.length || 0\n    );\n\n    const last10 = teamGoalsAll.slice(0, 10);\n    const last10Sum = last10.reduce((a, b) => a + b, 0);\n    const last10AvgScored = parseFloat(last10Sum / last10.length || 0);\n\n    const last10Conceeded = teamConceededAll.slice(0, 10);\n    const last10ConceededSum = last10Conceeded.reduce((a, b) => a + b, 0);\n    const last10AvgConceeded = parseFloat(\n      last10ConceededSum / last10Conceeded.length || 0\n    );\n\n    form.avgShotValueChart =\n      (form.XGOverall / form.avgShots) * 100 * form.ScoredAverage;\n    form.avgShotValueLast5Chart =\n      (form.XGlast5 / form.avgShotsLast5) * 100 * form.avScoredLast5;\n    form.avgShotValueHomeChart =\n      (form.avgXGScoredHome / form.avgShotsHome) * 100 * form.avgScoredHome;\n    form.avgShotValueAwayChart =\n      (form.avgXGScoredAway / form.avgShotsAway) * 100 * form.avgScoredAway;\n\n    form.last5Goals = parseFloat(last5AvgScored.toFixed(2));\n    form.last5GoalsConceeded = parseFloat(last5AvgConceeded.toFixed(2));\n    form.last10Goals = parseFloat(last10AvgScored.toFixed(2));\n    form.last10GoalsConceeded = parseFloat(last10AvgConceeded.toFixed(2));\n    form.last10GoalDiff = form.last10Goals - form.last10GoalsConceeded;\n\n    const teamGoalsAllRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsAll,\n      teamGoalsAll.length < r ? teamGoalsAll.length : r\n    );\n\n    const teamGoalsConceededAllRollingAverage =\n      await predictNextWeightedMovingAverage(\n        last10Conceeded,\n        last10Conceeded.length < 10 ? last10Conceeded.length : 10\n      );\n\n    const sumTwo = teamConceededAll.reduce((a, b) => a + b, 0);\n    const avgConceeded = sumTwo / teamConceededAll.length || 0;\n    form.avgConceeded = parseFloat(avgConceeded.toFixed(2));\n\n    const teamConceededHomeOnlySum = teamConceededHome.reduce(\n      (a, b) => a + b,\n      0\n    );\n    const teamConceededAvgHomeOnly =\n      teamConceededHomeOnlySum / teamConceededHome.length || 0;\n    form.teamConceededAvgHomeOnly = teamConceededAvgHomeOnly;\n\n    const teamConceededAwayOnlySum = teamConceededAway.reduce(\n      (a, b) => a + b,\n      0\n    );\n    const teamConceededAvgAwayOnly =\n      teamConceededAwayOnlySum / teamConceededAway.length || 0;\n    form.teamConceededAvgAwayOnly = teamConceededAvgAwayOnly;\n\n    form.goalDifference = sum - sumTwo;\n\n    // console.log(teamGoalsHomeRollingAverage)\n    // console.log(teamGoalsAwayRollingAverage)\n    // console.log(teamGoalsAllRollingAverage)\n    // console.log(teamConceededHomeRollingAverage)\n    // console.log(teamConceededAwayRollingAverage)\n    // console.log(teamGoalsConceededAllRollingAverage)\n    // console.log(averageOddsHome)\n    // console.log(averageOddsAway)\n    // console.log(avgScored)\n    // console.log(avgConceeded)\n    // console.log(form.XGPrediction)\n    // console.log(forAndAgainstRollingAvHomeOrAway)\n    // console.log(forAndAgainstRollingAv)\n\n    return [\n      teamGoalsHomeRollingAverage,\n      teamGoalsAwayRollingAverage,\n      teamGoalsAllRollingAverage,\n      teamConceededHomeRollingAverage,\n      teamConceededAwayRollingAverage,\n      teamGoalsConceededAllRollingAverage,\n      averageOddsHome,\n      averageOddsAway,\n      avgScored,\n      avgConceeded,\n      bttsAllString,\n      bttsHomeString,\n      bttsAwayString,\n      bttsAllPercentage,\n      bttsHomePercentage,\n      bttsAwayPercentage,\n      forAndAgainstRollingAvHomeOrAway,\n      forAndAgainstRollingAv,\n    ];\n  } else {\n    console.log(form.teamName);\n    return null;\n  }\n}\n\nasync function predictNextWeightedMovingAverage(numbers, windowSize) {\n  const startIndex = numbers.length - windowSize;\n  const window = numbers.slice(startIndex);\n  const weights = Array.from(\n    { length: windowSize },\n    (_, i) => (i + 1) / ((windowSize * (windowSize + 1)) / 2)\n  );\n  const sum = window.reduce((acc, num, i) => acc + num * weights[i], 0);\n  const movingAverage = sum / weights.reduce((acc, w) => acc + w, 0);\n  return parseFloat(movingAverage.toFixed(2));\n}\n\n// // Function to cap goals at a maximum value\n// function capGoals(goals, maxGoals = 4) {\n//   return Math.min(goals, maxGoals);\n// }\n\n// Function to calculate the weighted average using exponential smoothing\nasync function calculateWeightedAverage(arr, alpha) {\n  let weightedSum = 0;\n  let totalWeight = 0;\n\n  for (let i = arr.length - 1; i >= 0; i--) {\n    const weight = Math.pow(1 - alpha, arr.length - 1 - i);\n    weightedSum += arr[i] * weight;\n    totalWeight += weight;\n  }\n\n  return weightedSum / totalWeight;\n}\n\n// Function to predict goals scored and conceded for a team with exponential smoothing\nasync function predictGoalsWithExponentialSmoothing(\n  teamGoalsFor,\n  teamGoalsAgainst,\n  alpha\n) {\n  const lambdaFor = await calculateWeightedAverage(teamGoalsFor, alpha);\n  const lambdaAgainst = await calculateWeightedAverage(teamGoalsAgainst, alpha);\n\n  // You can fine-tune these values based on your model and data\n  const predictedGoalsFor = lambdaFor;\n  const predictedGoalsAgainst = lambdaAgainst;\n\n  return {\n    goalsFor: predictedGoalsFor,\n    goalsAgainst: predictedGoalsAgainst,\n  };\n}\n\nasync function calculateDifference(num1, num2) {\n  return num1 >= num2 ? num1 - num2 : -(num2 - num1);\n}\n\nexport async function comparison(metricOne, metricTwo) {\n  let stat1 = parseFloat(metricOne);\n  let stat2 = parseFloat(metricTwo);\n  let statDiff;\n\n  statDiff = await calculateDifference(stat1, stat2);\n\n  return parseFloat(statDiff);\n}\n\nexport async function compareStat(statOne, statTwo) {\n  let stat1 = parseFloat(statOne);\n  let stat2 = parseFloat(statTwo);\n  let statDiff;\n  // console.log( await normalizeValues(12, 2, 0, 1))\n  // console.log(await diff(1.8571428571428571, 1.14285714285714285))\n\n  if (stat1 === 0) {\n    stat1 = stat1 + 1;\n    stat2 = stat2 + 1;\n  }\n  if (stat2 === 0) {\n    stat2 = stat2 + 1;\n    stat2 = stat2 + 1;\n  }\n\n  const { normalizedValue1, normalizedValue2 } = await normalizeValues(\n    stat1,\n    stat2,\n    0,\n    1\n  );\n\n  const finalValue1 = normalizedValue1;\n  const finalValue2 = normalizedValue2;\n\n  statDiff = await diff(finalValue1, finalValue2);\n\n  // if (statDiff > 0.3 || statDiff < -0.3) {\n  //   // console.log(statDiff)\n  // } else {\n  //   statDiff = 0;\n  // }\n  return statDiff;\n}\n\nexport async function getClinicalRating(form) {\n  let rating;\n  let score;\n  switch (true) {\n    case form.dangerousAttackConversion <= 15:\n      rating = \"excellent\";\n      score = 0.8;\n      break;\n\n    case form.dangerousAttackConversion > 15 &&\n      form.dangerousAttackConversion <= 20:\n      rating = \"great\";\n      score = 0.9;\n      break;\n\n    case form.dangerousAttackConversion > 20 &&\n      form.dangerousAttackConversion <= 25:\n      rating = \"very good\";\n      score = 0.95;\n      break;\n\n    case form.dangerousAttackConversion > 25 &&\n      form.dangerousAttackConversion <= 32.5:\n      rating = \"good\";\n      score = 0.98;\n      break;\n\n    case form.dangerousAttackConversion > 30 &&\n      form.dangerousAttackConversion <= 35:\n      rating = \"above average\";\n      score = 0.99;\n      break;\n\n    case form.dangerousAttackConversion > 35 &&\n      form.dangerousAttackConversion <= 40:\n      rating = \"average\";\n      score = 1;\n      break;\n\n    case form.dangerousAttackConversion > 40 &&\n      form.dangerousAttackConversion <= 45:\n      rating = \"below average\";\n      score = 1.01;\n      break;\n\n    case form.dangerousAttackConversion > 45 &&\n      form.dangerousAttackConversion <= 50:\n      rating = \"poor\";\n      score = 1.05;\n      break;\n\n    case form.dangerousAttackConversion > 50 &&\n      form.dangerousAttackConversion <= 55:\n      rating = \"very poor\";\n      score = 1.1;\n      break;\n\n    case form.dangerousAttackConversion > 55 &&\n      form.dangerousAttackConversion <= 60:\n      rating = \"terrible\";\n      score = 1.2;\n      break;\n\n    case form.dangerousAttackConversion > 60:\n      rating = \"awful\";\n      score = 1.3;\n      break;\n\n    default:\n      break;\n  }\n\n  return [rating, score];\n}\n\nexport async function getPointsDifferential(pointsHomeAvg, pointsAwayAvg) {\n  const differential = await diff(pointsHomeAvg, pointsAwayAvg);\n  return parseFloat(differential);\n}\n\nexport async function getPointWeighting(pointsDiff) {\n  let pointsDiffWeightingHome;\n  let pointsDiffWeightingAway;\n\n  switch (true) {\n    case pointsDiff >= 2.5:\n      pointsDiffWeightingHome = 0.3;\n      pointsDiffWeightingAway = -0.3;\n      break;\n    case pointsDiff >= 2 && pointsDiff < 2.5:\n      pointsDiffWeightingHome = 0.2;\n      pointsDiffWeightingAway = -0.2;\n      break;\n    case pointsDiff >= 1.5 && pointsDiff < 2:\n      pointsDiffWeightingHome = 0.15;\n      pointsDiffWeightingAway = -0.15;\n      break;\n    case pointsDiff >= 1 && pointsDiff < 1.5:\n      pointsDiffWeightingHome = 0.1;\n      pointsDiffWeightingAway = -0.1;\n      break;\n    case pointsDiff >= 0.5 && pointsDiff < 1:\n      pointsDiffWeightingHome = 0.05;\n      pointsDiffWeightingAway = -0.05;\n      break;\n    case pointsDiff > -0.5 && pointsDiff < 0.5:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n      break;\n    case pointsDiff <= -0.5 && pointsDiff > -1:\n      pointsDiffWeightingHome = -0.05;\n      pointsDiffWeightingAway = 0.05;\n      break;\n    case pointsDiff <= -1 && pointsDiff > -1.5:\n      pointsDiffWeightingHome = -0.1;\n      pointsDiffWeightingAway = 0.1;\n      break;\n    case pointsDiff <= -1.5 && pointsDiff > -2:\n      pointsDiffWeightingHome = -0.15;\n      pointsDiffWeightingAway = 0.15;\n      break;\n    case pointsDiff <= -2 && pointsDiff > -2.5:\n      pointsDiffWeightingHome = -0.2;\n      pointsDiffWeightingAway = 0.2;\n      break;\n    case pointsDiff <= -2.5:\n      pointsDiffWeightingHome = -0.3;\n      pointsDiffWeightingAway = 0.3;\n      break;\n    default:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n  }\n  return [pointsDiffWeightingHome, pointsDiffWeightingAway];\n}\n\nexport async function compareFormTrend(recentForm, distantForm) {\n  let score;\n  let scoreTotal = 0;\n\n  for (let index = 0; index < recentForm.length; index++) {\n    const recent = recentForm[index];\n    const distant = distantForm[index];\n\n    if (recent > distant) {\n      score = 1.05;\n    } else if (recent === distant) {\n      score = 1;\n    } else if (recent < distant) {\n      score = 0.95;\n    }\n    scoreTotal = scoreTotal + score / recentForm.length;\n  }\n\n  return scoreTotal;\n}\n\nexport async function getPointAverage(pointTotal, games) {\n  return pointTotal / games;\n}\n\nasync function poissonDistribution(lambda, k) {\n  const numerator = Math.exp(-lambda) * Math.pow(lambda, k);\n  const denominator = factorial(k);\n  return numerator / denominator;\n}\n\nfunction factorial(n) {\n  if (n === 0 || n === 1) {\n    return 1;\n  }\n  let result = 1;\n  for (let i = 2; i <= n; i++) {\n    result *= i;\n  }\n  return result;\n}\n\nasync function calculateAverageGoals(goalsFor) {\n  const totalGoals = goalsFor.reduce((sum, goals) => sum + goals, 0);\n  return totalGoals / goalsFor.length;\n}\n\nasync function adjustGoalsAvg(goalsAvg, strengthRatio) {\n  return goalsAvg * strengthRatio;\n}\n\nasync function normalizeDifference(value1, value2) {\n  // Calculate the absolute difference between the two values\n  const difference = Math.abs(value1 - value2);\n\n  // Define a fixed maximum possible difference (you can adjust this value based on your needs)\n  const maxDifference = 25; // Adjust this based on your expected data\n\n  // Normalize the difference to a 0-1 range\n  const normalizedDifference = difference / maxDifference;\n\n  // Map to range 0.25 to 1.75 inversely for value1 and value2\n  const scaleMin = 0.8;\n  const scaleMax = 1.2;\n\n  // The multiplier now stretches across the 0.25 to 1.75 range (difference is 1.5)\n  const multiplier = 0.2;\n\n  let value1Normalized, value2Normalized;\n\n  if (value1 > value2) {\n    value1Normalized = 1 + normalizedDifference * multiplier; // Closer to 1.75\n    value2Normalized = 1 - normalizedDifference * multiplier; // Closer to 0.25\n  } else if (value1 < value2) {\n    value1Normalized = 1 - normalizedDifference * multiplier; // Closer to 0.25\n    value2Normalized = 1 + normalizedDifference * multiplier; // Closer to 1.75\n  } else {\n    // If the values are equal, normalize both to 1\n    value1Normalized = 1;\n    value2Normalized = 1;\n  }\n\n  return {\n    value1Normalized: Math.max(scaleMin, Math.min(value1Normalized, scaleMax)),\n    value2Normalized: Math.max(scaleMin, Math.min(value2Normalized, scaleMax)),\n  };\n}\n\nasync function predictScore(\n  goalsForTeam1,\n  goalsAgainstTeam1,\n  goalsForTeam2,\n  goalsAgainstTeam2,\n  team1Metrics,\n  team2Metrics,\n  game\n) {\n  let team1AverageGoalsFor = await calculateAverageGoals(goalsForTeam1);\n  let team1AverageGoalsAgainst = await calculateAverageGoals(goalsAgainstTeam1);\n  let team2AverageGoalsFor = await calculateAverageGoals(goalsForTeam2);\n  let team2AverageGoalsAgainst = await calculateAverageGoals(goalsAgainstTeam2);\n\n  let team1StrengthRatio = 1;\n  let team2StrengthRatio = 1;\n\n  let adjustedTeam1AverageGoals = await adjustGoalsAvg(\n    team1AverageGoalsFor,\n    team1StrengthRatio\n  );\n  let adjustedTeam2AverageGoals = await adjustGoalsAvg(\n    team2AverageGoalsFor,\n    team2StrengthRatio\n  );\n\n  let adjustedTeam1AverageGoalsAgainst = await adjustGoalsAvg(\n    team1AverageGoalsAgainst,\n    team2StrengthRatio\n  );\n  let adjustedTeam2AverageGoalsAgainst = await adjustGoalsAvg(\n    team2AverageGoalsAgainst,\n    team1StrengthRatio\n  );\n\n  let maxGoals = 5; // Set the maximum number of goals to predict\n\n  const scores = [];\n\n  for (let i = 0; i <= maxGoals; i++) {\n    for (let j = 0; j <= maxGoals; j++) {\n      let team1GoalExpectation =\n        (adjustedTeam1AverageGoals + adjustedTeam2AverageGoalsAgainst) / 2;\n      // (adjustedTeam2AverageGoalsAgainst / adjustedTeam1AverageGoalsAgainst);\n      let team2GoalExpectation =\n        (adjustedTeam2AverageGoals + adjustedTeam1AverageGoalsAgainst) / 2;\n      // (adjustedTeam1AverageGoalsAgainst / adjustedTeam2AverageGoalsAgainst);\n\n      if (!isFinite(team1GoalExpectation)) {\n        team1GoalExpectation = 0;\n      }\n\n      if (!isFinite(team2GoalExpectation)) {\n        team2GoalExpectation = 0;\n      }\n\n      const probability =\n        (await poissonDistribution(team1GoalExpectation, i)) *\n        (await poissonDistribution(team2GoalExpectation, j));\n      scores.push({\n        team1Score: i,\n        team2Score: j,\n        probability,\n      });\n    }\n  }\n\n  scores.sort((a, b) => b.probability - a.probability); // Sort scores in descending order by probability\n  const top5Scores = scores.slice(0, 5); // Get the top 5 scores\n\n  // for (const score of top5Scores) {\n  //   console.log(\n  //     `Team 1: ${score.team1Score} - Team 2: ${score.team2Score} (${(\n  //       score.probability * 100\n  //     ).toFixed(2)}%)`\n  //   );\n  // }\n  return top5Scores;\n}\n\nasync function normalizeValues(value1, value2, minRange, maxRange) {\n  if (\n    typeof value1 !== \"number\" ||\n    typeof value2 !== \"number\" ||\n    typeof minRange !== \"number\" ||\n    typeof maxRange !== \"number\"\n  ) {\n    throw new Error(\"All arguments must be numbers.\");\n  }\n\n  // Calculate the absolute values of the inputs\n\n  const absValue1 = Math.abs(value1);\n  const absValue2 = Math.abs(value2);\n\n  // Calculate the total sum of the absolute values\n  const totalAbs = absValue1 + absValue2;\n\n  // Calculate the normalized values based on the ratio of absolute values\n  const normalizedAbsValue1 =\n    (absValue1 / totalAbs) * (maxRange - minRange) + minRange;\n  const normalizedAbsValue2 =\n    (absValue2 / totalAbs) * (maxRange - minRange) + minRange;\n\n  // Adjust the signs of the normalized values based on the original values\n  const normalizedValue1 =\n    value1 >= 0 ? normalizedAbsValue1 : -normalizedAbsValue1;\n  const normalizedValue2 =\n    value2 >= 0 ? normalizedAbsValue2 : -normalizedAbsValue2;\n\n  return { normalizedValue1, normalizedValue2 };\n}\n\nasync function findClosestProperty(obj, number) {\n  let closestProperty = null;\n  let smallestDifference = Infinity;\n\n  for (const [key, value] of Object.entries(obj)) {\n    const difference = Math.abs(number - value);\n    if (difference < smallestDifference) {\n      smallestDifference = difference;\n      closestProperty = key;\n    }\n  }\n\n  return closestProperty;\n}\n\nexport async function generateGoals(homeForm, awayForm, match) {\n  const avgHomeXG = (homeForm.avXGLast5 + awayForm.avXGAgainstLast5) / 2;\n  const avgHomeGoals = (homeForm.avScoredLast5 + awayForm.avConceededLast5) / 2;\n  const avgHomeGoalsLast10 =\n    (homeForm.last10Goals + awayForm.last10GoalsConceeded) / 2;\n  // const avgXGH = (homeForm.XGPrediction.goalsFor + awayForm.XGPrediction.goalsAgainst) / 2;\n\n  let homeGoals = (avgHomeGoals + avgHomeXG + avgHomeGoalsLast10) / 3;\n\n  // ((homeForm.XGPrediction.goalsFor + awayForm.XGPrediction.goalsAgainst) / 2 +\n  //   (homeForm.XGPredictionHome.goalsFor +\n  //     awayForm.XGPredictionAway.goalsAgainst) /\n  //     2) /\n  // 2;\n  const avgAwayXG = (awayForm.avXGLast5 + homeForm.avXGAgainstLast5) / 2;\n  const avgAwayGoals = (awayForm.avScoredLast5 + homeForm.avConceededLast5) / 2;\n  const avgAwayGoalsLast10 =\n    (awayForm.last10Goals + homeForm.last10GoalsConceeded) / 2;\n\n  // const avgXGA = (awayForm.XGPrediction.goalsFor + homeForm.XGPrediction.goalsAgainst) / 2;\n\n  let awayGoals = (avgAwayGoals + avgAwayXG + avgAwayGoalsLast10) / 3;\n\n  let homeExpectedScore =\n    homeForm.attackingMetrics[\"Average Expected Goals\"] -\n    awayForm.defensiveMetrics[\"Average XG Against\"];\n  let awayExpectedScore =\n    awayForm.attackingMetrics[\"Average Expected Goals\"] -\n    homeForm.defensiveMetrics[\"Average XG Against\"];\n  let goalDifference = homeExpectedScore - awayExpectedScore;\n  let adjustToHome = Math.round(homeForm.CleanSheetPercentage / 50);\n  let adjustToAway = Math.round(awayForm.CleanSheetPercentage / 50) * -1;\n  let finalScore = goalDifference + adjustToHome + adjustToAway;\n\n  const homeAttackVsAwayDefenceComparison = await comparison(\n    homeForm.attackingStrength,\n    awayForm.defensiveStrengthScoreGeneration\n  );\n\n  const awayAttackVsHomeDefenceComparison = await comparison(\n    awayForm.attackingStrength,\n    homeForm.defensiveStrengthScoreGeneration\n  );\n\n  const homeOverallVsAwayOverallComparison = await comparison(\n    homeForm.attackingStrength + homeForm.defensiveStrength,\n    awayForm.attackingStrength + awayForm.defensiveStrength\n  );\n\n  const awayOverallVsHomeOverallComparison = await comparison(\n    awayForm.attackingStrength + awayForm.defensiveStrength,\n    homeForm.attackingStrength + homeForm.defensiveStrength\n  );\n\n  const homeAttackVsAwayDefenceComparisonLast5 = await comparison(\n    homeForm.attackingStrengthLast5,\n    awayForm.defensiveStrengthScoreGenerationLast5\n  );\n  const awayAttackVsHomeDefenceComparisonLast5 = await comparison(\n    awayForm.attackingStrengthLast5,\n    homeForm.defensiveStrengthScoreGenerationLast5\n  );\n\n  const homeAttackVsAwayDefenceComparisonHomeOnly = await comparison(\n    homeForm.attackingStrengthHomeOnly,\n    awayForm.defensiveStrengthScoreGenerationAwayOnly\n  );\n  const awayAttackVsHomeDefenceComparisonAwayOnly = await comparison(\n    awayForm.attackingStrengthAwayOnly,\n    homeForm.defensiveStrengthScoreGenerationHomeOnly\n  );\n\n  const pointsComparisonHome = await comparison(\n    homeForm.avPoints6,\n    awayForm.avPoints6\n  );\n\n  const pointsComparisonAway = await comparison(\n    awayForm.avPoints6,\n    homeForm.avPoints6\n  );\n\n  const oddsComparisonHome = await comparison(match.awayOdds, match.homeOdds);\n  const oddsComparisonAway = await comparison(match.homeOdds, match.awayOdds);\n\n  homeForm.XGRating =\n    homeForm.attackingStrength +\n    homeForm.defensiveStrengthScoreGeneration +\n    homeForm.attackingStrengthLast5 +\n    homeForm.defensiveStrengthScoreGenerationLast5 +\n    homeForm.attackingStrengthHomeOnly +\n    homeForm.defensiveStrengthScoreGenerationHomeOnly;\n\n  awayForm.XGRating =\n    awayForm.attackingStrength +\n    awayForm.defensiveStrengthScoreGeneration +\n    awayForm.attackingStrengthLast5 +\n    awayForm.defensiveStrengthScoreGenerationLast5 +\n    awayForm.attackingStrengthAwayOnly +\n    awayForm.defensiveStrengthScoreGenerationAwayOnly;\n\n  const XGRatingHomeComparison = await comparison(\n    homeForm.XGRating,\n    awayForm.XGRating\n  );\n\n  const XGRatingAwayComparison = await comparison(\n    awayForm.XGRating,\n    homeForm.XGRating\n  );\n\n  const weighedPointsComparisonHome = await comparison(\n    homeForm.pointsWeighted,\n    homeForm.points\n  );\n\n  const weighedPointsComparisonAway = await comparison(\n    awayForm.pointsWeighted,\n    awayForm.points\n  );\n\n  homeGoals =\n    homeGoals +\n    homeAttackVsAwayDefenceComparison * 2.5 +\n    XGRatingHomeComparison * 0 +\n    homeAttackVsAwayDefenceComparisonLast5 * 0 +\n    0.2 +\n    homeAttackVsAwayDefenceComparisonHomeOnly * 0 +\n    // weighedPointsComparisonHome * 0.005 +\n    oddsComparisonHome * 0.025;\n\n  awayGoals =\n    awayGoals +\n    awayAttackVsHomeDefenceComparison * 2.5 +\n    XGRatingAwayComparison * 0 +\n    awayAttackVsHomeDefenceComparisonLast5 * 0 +\n    awayAttackVsHomeDefenceComparisonAwayOnly * 0 +\n    // weighedPointsComparisonAway * 0.005 +\n    oddsComparisonAway * 0.025;\n\n  // Cumulative ROI for all 2102 match outcomes: +3.30%\n\n  // ROI for all 145 W/D/W outcomes: + 12.21%\n  // Correct W/D/W predictions: 74 (51.0%)\n\n  // Exact scores predicted: 15 (10.3%)\n\n  // Cumulative ROI for all 1408 match outcomes: +3.77%\n\n  if (finalScore > 0 && (await diff(homeGoals, awayGoals)) < 1.25) {\n    homeGoals = homeGoals + 0.5;\n    awayGoals = awayGoals + -Math.abs(0.5);\n  } else if (finalScore < 0 && (await diff(awayGoals, homeGoals)) < 1.25) {\n    homeGoals = homeGoals + -Math.abs(0.5);\n    awayGoals = awayGoals + 0.5;\n  }\n\n  //PLACEHOLDER\n\n  // if (homeForm.actualToXGDifference > 0.5) {\n  //   homeGoals = homeGoals + homeForm.actualToXGDifference / 20;\n  // } else if (homeForm.actualToXGDifference < -0.5) {\n  //   homeGoals = homeGoals + homeForm.actualToXGDifference / 20;\n  // }\n\n  // if (awayForm.actualToXGDifference > 0.5) {\n  //   awayGoals = awayGoals + awayForm.actualToXGDifference / 20;\n  // } else if (awayForm.actualToXGDifference < -0.5) {\n  //   awayGoals = awayGoals + awayForm.actualToXGDifference / 20;\n  // }\n\n  // if (homeForm.lastGame === \"L\" && homeForm.previousToLastGame === \"L\") {\n  //   homeGoals = homeGoals * 0.5;\n  // } else if (awayForm.lastGame === \"L\" && awayForm.previousToLastGame === \"L\") {\n  //   awayGoals = awayGoals * 0.5;\n  // } else if (homeForm.lastGame === \"L\") {\n  //   homeGoals = homeGoals * 0.8;\n  // } else if (awayForm.lastGame === \"L\") {\n  //   awayGoals = awayGoals * 0.8;\n  // }\n\n  // if (homeForm.improving === true && awayForm.improving === false) {\n  //   homeGoals = homeGoals * 1.25;\n  //   awayGoals = awayGoals * 0.75;\n  // } else if (homeForm.improving === false && awayForm.improving === true) {\n  //   homeGoals = homeGoals * 0.75;\n  //   awayGoals = awayGoals * 1.25;\n  // }\n\n  // const homeRecordAgainstSimilarStyles = await findClosestProperty(homeForm.recordAgainstIndividualStylesHome, awayForm.directnessRatingAway); // Outputs: \"totalL\"\n  // const awayRecordAgainstSimilarStyles = await findClosestProperty(awayForm.recordAgainstIndividualStylesAway, homeForm.directnessRating); // Outputs: \"totalL\"\n\n  // if(homeRecordAgainstSimilarStyles === \"totalW\" && awayRecordAgainstSimilarStyles === \"totalL\"){\n  //   homeGoals = homeGoals * 1.5;\n  //   awayGoals = awayGoals * 0.5;\n  // } else if(homeRecordAgainstSimilarStyles === \"totalL\" && awayRecordAgainstSimilarStyles === \"totalW\"){\n  //   homeGoals = homeGoals * 0.5;\n  //   awayGoals = awayGoals * 1.5;\n  // }\n\n  // console.log(match.game)\n  // console.log(homeRecordAgainstSimilarStyles)\n  // console.log(awayRecordAgainstSimilarStyles)\n  // if(homeForm.last5Points > homeForm.last10Points){\n  //   homeGoals = homeGoals + 0.1;\n  //   awayGoals = awayGoals - 0.1;\n\n  // } else if (awayForm.last5Points > awayForm.last10Points){\n  //   awayGoals = awayGoals + 0.1;\n  //   homeGoals = homeGoals - 0.1;\n  // }\n\n  // Cumalative ROI for all 2193 match outcomes: + 4.18%\n\n  if (homeGoals < 0 && awayGoals < 0) {\n    if (homeGoals < awayGoals) {\n      homeGoals = homeGoals + awayGoals / 4;\n      awayGoals = awayGoals - homeGoals / 4;\n    } else if (homeGoals > awayGoals) {\n      homeGoals = homeGoals - awayGoals / 4;\n      awayGoals = awayGoals + homeGoals / 4;\n    }\n  } else if (homeGoals < -1 && awayGoals < 1) {\n    awayGoals = awayGoals + Math.abs(homeGoals) / 2;\n  } else if (awayGoals < -1 && homeGoals < 1) {\n    homeGoals = homeGoals + Math.abs(awayGoals) / 2;\n  }\n\n  return [homeGoals, awayGoals];\n}\n\nexport async function compareTeams(homeForm, awayForm, match) {\n  // let homeAttackStrength = homeForm.attackingStrength;\n  // let homeDefenceStrength = homeForm.defensiveStrength;\n  // let homePossessionStrength = homeForm.possessionStrength;\n  // let awayAttackStrength = awayForm.attackingStrength;\n  // let awayDefenceStrength = awayForm.defensiveStrength;\n  // let awayPossessionStrength = awayForm.possessionStrength;\n  // let homeAttackStrengthLast5 = homeForm.attackingStrengthLast5;\n  // let homeDefenceStrengthLast5 = homeForm.defensiveStrengthLast5;\n  // let homePossessionStrengthLast5 = homeForm.possessionStrengthLast5;\n  // let awayAttackStrengthLast5 = awayForm.attackingStrengthLast5;\n  // let awayDefenceStrengthLast5 = awayForm.defensiveStrengthLast5;\n  // let awayPossessionStrengthLast5 = awayForm.possessionStrengthLast5;\n  // let homeAttackStrengthHome = homeForm.attackingStrengthHomeOnly;\n  // let homeDefenceStrengthHome = homeForm.defensiveStrengthHomeOnly;\n  // let homePossessionStrengthHome = homeForm.possessionStrengthHomeOnly;\n  // let awayAttackStrengthAway = awayForm.attackingStrengthAwayOnly;\n  // let awayDefenceStrengthAway = awayForm.defensiveStrengthAwayOnly;\n  // let awayPossessionStrengthAway = awayForm.possessionStrengthAwayOnly;\n  // const attackStrengthComparison = await compareStat(\n  //   homeAttackStrength,\n  //   awayAttackStrength\n  // );\n  // const attackStrengthHAComparison = await compareStat(\n  //   homeAttackStrengthHome,\n  //   awayAttackStrengthAway\n  // );\n  // const defenceStrengthComparison = await compareStat(\n  //   homeDefenceStrength,\n  //   awayDefenceStrength\n  // );\n  // const defenceStrengthHAComparison = await compareStat(\n  //   homeDefenceStrengthHome,\n  //   awayDefenceStrengthAway\n  // );\n  // const attackStrengthComparisonLast5 = await compareStat(\n  //   homeAttackStrengthLast5,\n  //   awayAttackStrengthLast5\n  // );\n  // const defenceStrengthComparisonLast5 = await compareStat(\n  //   homeDefenceStrengthLast5,\n  //   awayDefenceStrengthLast5\n  // );\n  // const possessiontrengthComparison = await compareStat(\n  //   homePossessionStrength,\n  //   awayPossessionStrength\n  // );\n  // const possessiontrengthComparisonLast5 = await compareStat(\n  //   homePossessionStrengthLast5,\n  //   awayPossessionStrengthLast5\n  // );\n  // const possessionHAStrengthComparison = await compareStat(\n  //   homePossessionStrengthHome,\n  //   awayPossessionStrengthAway\n  // );\n  // // const xgActualComparison = await compareStat(\n  // //   homeForm.actualToXGDifference,\n  // //   awayForm.actualToXGDifference\n  // // );\n  // // const XGComparison = await compareStat(\n  // //   homeForm.XGDiffNonAverage,\n  // //   awayForm.XGDiffNonAverage\n  // // );\n  // // const XGComparisonLast5 = await compareStat(\n  // //   homeForm.XGDiffNonAverageLast5,\n  // //   awayForm.XGDiffNonAverageLast5\n  // // )\n  // const homeAwayPointAverageComparison = await compareStat(\n  //   homeForm.homeOrAwayAverage,\n  //   awayForm.homeOrAwayAverage\n  // );\n  // // const fiveGameComparison = await compareStat(\n  // //   homeForm.last5Points,\n  // //   awayForm.last5Points\n  // // );\n  // // const last5GDComparison = await compareStat(\n  // //   homeForm.last5GoalDiff,\n  // //   awayForm.last5GoalDiff\n  // // )\n  // let oddsComparison = await compareStat(match.awayOdds, match.homeOdds);\n  // // const homeAdvantage = await compareStat(\n  // //   parseFloat(homeForm.homeAttackAdvantage) / 2,\n  // //   1\n  // // );\n  // // const dangerousAttacksWithConverstionComparison = await compareStat(\n  // //   homeForm.AverageDangerousAttacksOverall *\n  // //     homeForm.dangerousAttackConversion,\n  // //   awayForm.AverageDangerousAttacksOverall * awayForm.dangerousAttackConversion\n  // // );\n  // match.goalDiffHomeOrAwayComparison =\n  //   parseFloat(homeForm.goalDifferenceHomeOrAway) -\n  //   parseFloat(awayForm.goalDifferenceHomeOrAway);\n  // match.goalDifferenceComparison =\n  //   parseFloat(homeForm.goalDifference) - parseFloat(awayForm.goalDifference);\n  // const goalDiffHomeOrAwayComparison = await compareStat(\n  //   homeForm.goalDifferenceHomeOrAway,\n  //   awayForm.goalDifferenceHomeOrAway\n  // );\n  // const overallDirectnessComparison = await compareStat(\n  //   homeForm.directnessOverallStrength,\n  //   awayForm.directnessOverallStrength\n  // );\n  // // const hOrADirectnessComparison = await compareStat(\n  // //   homeForm.directnessHomeOnly,\n  // //   awayForm.directnessAwayOnly\n  // // );\n  // const accuracyComparison = await compareStat(\n  //   homeForm.accuracyOverallStrength,\n  //   awayForm.accuracyOverallStrength\n  // );\n  // const accuracyComparisonLast5 = await compareStat(\n  //   homeForm.accuracyOverallStrengthLast5,\n  //   awayForm.accuracyOverallStrengthLast5\n  // );\n  // // console.log(match.game)\n  // // console.log(attackStrengthComparison);\n  // // console.log(defenceStrengthComparison);\n  // // console.log(possessiontrengthComparison);\n  // // console.log(attackStrengthComparisonLast5);\n  // // console.log(defenceStrengthComparisonLast5);\n  // // console.log(attackStrengthHAComparison);\n  // // console.log(defenceStrengthHAComparison);\n  // // console.log(homeAwayPointAverageComparison);\n  // // console.log(goalDiffHomeOrAwayComparison);\n  // // // console.log(oddsComparison);\n  // // console.log(overallDirectnessComparison);\n  // // console.log(accuracyComparisonLast5);\n  // // console.log(accuracyComparison);\n  // // let calculation =\n  // //   attackStrengthComparison * 0 +\n  // //   attackStrengthComparisonLast5 * 0 +\n  // //   attackStrengthHAComparison * 1 +\n  // //   defenceStrengthComparison * 0 +\n  // //   defenceStrengthComparisonLast5 * 0 +\n  // //   defenceStrengthHAComparison * 1 +\n  // //   possessiontrengthComparison * 0 +\n  // //   possessionHAStrengthComparison * 0 +\n  // //   possessiontrengthComparisonLast5 * 1 +\n  // //   // xgToActualDiffComparison * 1 +\n  // //   // xgForStrengthRecentComparison * 1 +\n  // //   // xgAgainstStrengthRecentComparison * 1 +\n  // //   homeAwayPointAverageComparison * 5 +\n  // //   goalDiffHomeOrAwayComparison * 0 +\n  // //   // xgActualComparison * 0 +\n  // //   // xgForComparison * 1 +\n  // //   // xgAgainstComparison * 1 +\n  // //   // XGComparison * 0 +\n  // //   oddsComparison * 2 +\n  // //   // dangerousAttacksWithConverstionComparison * 0.05 +\n  // //   overallDirectnessComparison * 0 +\n  // //   // hOrADirectnessComparison * 0 +\n  // //   accuracyComparisonLast5 * 0 +\n  // //   accuracyComparison * 0;\n  // // // console.log(match.game)\n  // // // console.log(calculation)\n  // let calculation =\n  //   attackStrengthComparisonLast5 * 2 +\n  //   attackStrengthHAComparison * 1 +\n  //   defenceStrengthComparisonLast5 * 2 +\n  //   defenceStrengthHAComparison * 1 +\n  //   possessionHAStrengthComparison * 1 +\n  //   possessiontrengthComparisonLast5 * 1 +\n  //   possessiontrengthComparison * 1 +\n  //   // xgToActualDiffComparison * 1 +\n  //   // xgForStrengthRecentComparison * 1 +\n  //   // xgAgainstStrengthRecentComparison * 1 +\n  //   homeAwayPointAverageComparison * 2 +\n  //   goalDiffHomeOrAwayComparison * 0 +\n  //   // xgActualComparison * 1 +\n  //   // xgForComparison * 1 +\n  //   // xgAgainstComparison * 1 +\n  //   oddsComparison * 0 +\n  //   // dangerousAttacksWithConverstionComparison * 0.05 +\n  //   overallDirectnessComparison * 0 +\n  //   accuracyComparison * 1;\n  // let homeWinOutcomeProbability =\n  //   match.homeTeamWinPercentage + match.awayTeamLossPercentage;\n  // let awayWinOutcomeProbability =\n  //   match.homeTeamLossPercentage + match.awayTeamWinPercentage;\n  // let drawOutcomeProbability =\n  //   match.homeTeamDrawPercentage + match.awayTeamDrawPercentage;\n  // if (\n  //   drawOutcomeProbability > homeWinOutcomeProbability &&\n  //   drawOutcomeProbability > awayWinOutcomeProbability\n  // ) {\n  //   switch (true) {\n  //     case drawOutcomeProbability > 100:\n  //       calculation = calculation / 3;\n  //       break;\n  //     default:\n  //       calculation = calculation * 1;\n  //       break;\n  //   }\n  // } else {\n  //   calculation = calculation * 1;\n  // }\n  // if (calculation > 0) {\n  //   if (\n  //     homeForm.lastGame === \"L\" ||\n  //     homeForm.last2Points < 2 ||\n  //     awayForm.last2Points >= 5 ||\n  //     match.XGdifferentialValueRaw < 0\n  //   ) {\n  //     calculation = calculation / 2;\n  //   }\n  // } else if (calculation < 0) {\n  //   if (\n  //     awayForm.lastGame === \"L\" ||\n  //     awayForm.last2Points < 2 ||\n  //     homeForm.last2Points >= 5 ||\n  //     match.XGdifferentialValueRaw > 0\n  //   ) {\n  //     calculation = calculation / 2;\n  //   }\n  // }\n  // // if (homeForm.averageOddsHome !== null || awayForm.averageOddsAway !== null) {\n  // //   if (\n  // //     calculation > 0 &&\n  // //     homeForm.averageOddsHome < match.homeOdds &&\n  // //     awayForm.averageOddsAway > match.awayOdds\n  // //   ) {\n  // //     calculation = calculation / 2;\n  // //   } else if (\n  // //     calculation > 0 &&\n  // //     homeForm.averageOddsHome > match.homeOdds &&\n  // //     awayForm.averageOddsAway < match.awayOdds\n  // //   ) {\n  // //     calculation = calculation * 1.25;\n  // //   } else {\n  // //     calculation = calculation * 1;\n  // //   }\n  // //   if (\n  // //     calculation < 0 &&\n  // //     awayForm.averageOddsAway < match.awayOdds &&\n  // //     homeForm.averageOddsHome > match.homeOdds\n  // //   ) {\n  // //     calculation = calculation / 2;\n  // //   } else if (\n  // //     calculation < 0 &&\n  // //     awayForm.averageOddsAway > match.awayOdds &&\n  // //     homeForm.averageOddsHome < match.homeOdds\n  // //   ) {\n  // //     calculation = calculation * 1.25;\n  // //   } else {\n  // //     calculation = calculation * 1;\n  // //   }\n  // // }\n  // if (\n  //   calculation > 0 &&\n  //   homeForm.improving === true &&\n  //   awayForm.improving === false\n  // ) {\n  //   console.log(homeForm);\n  //   calculation = calculation * 1.5;\n  // } else if (\n  //   calculation < 0 &&\n  //   awayForm.improving === true &&\n  //   awayForm.improving === false\n  // ) {\n  //   calculation = calculation * 1.5;\n  // } else if (\n  //   calculation > 0 &&\n  //   homeForm.improving === false &&\n  //   awayForm.improving === true\n  // ) {\n  //   calculation = calculation / 2;\n  // } else if (\n  //   calculation < 0 &&\n  //   awayForm.improving === false &&\n  //   homeForm.improving === true\n  // ) {\n  //   calculation = calculation / 2;\n  // }\n  // // if (\n  // //   (calculation < 0 && homeForm.oddsReliabilityWin < 50) ||\n  // //   (calculation < 0 && awayForm.oddsReliabilityWinAsUnderdog > 45)\n  // // ) {\n  // //   calculation = calculation / 2;\n  // // } else if (\n  // //   (calculation > 0 && awayForm.oddsReliabilityWin < 50) ||\n  // //   (calculation > 0 && homeForm.oddsReliabilityWinAsUnderdog > 45)\n  // // ) {\n  // //   calculation = calculation / 2;\n  // // }\n  // // if (calculation < 0 && homeForm.predictabilityScore < 0.3) {\n  // //   calculation = calculation / 2;\n  // // } else if (calculation > 0 && awayForm.predictabilityScore < 0.3) {\n  // //   calculation = calculation / 2;\n  // // }\n  // return calculation;\n}\n\nasync function calculatePlayingStyle(points, possession) {\n  let style;\n\n  switch (true) {\n    case possession > 60:\n      switch (true) {\n        case points > 12:\n          style = \"Extremely controlling and patient\";\n          break;\n        case points > 9.5:\n          style = \"Highly controlling, slow and patient\";\n          break;\n        case points > 8.5:\n          style = \"Balanced and controlling possession\";\n          break;\n        case points > 6:\n          style = \"Attacking and controlling possession\";\n          break;\n        case points > 3:\n          style = \"Extremely attacking control approach\";\n          break;\n        default:\n          style = \"N/A\";\n          break;\n      }\n      break;\n\n    case possession > 50:\n      switch (true) {\n        case points > 12:\n          style = \"Passive, inefficient possession play\";\n          break;\n        case points > 9:\n          style = \"Patient, possession-based approach\";\n          break;\n        case points > 8:\n          style = \"Balanced with some possession focus\";\n          break;\n        case points > 5:\n          style = \"Direct control, effective possession\";\n          break;\n        case points > 3:\n          style = \"Extremely direct attacking approach\";\n          break;\n        default:\n          style = \"N/A\";\n          break;\n      }\n      break;\n\n    case possession > 40:\n      switch (true) {\n        case points > 12:\n          style = \"Low control with wasteful transitions\";\n          break;\n        case points > 10:\n          style = \"Wasteful transitional countering play\";\n          break;\n        case points > 7.5:\n          style = \"Counter attacking and quick build up\";\n          break;\n        case points > 5:\n          style = \"Direct and precise transitional play\";\n          break;\n        case points > 3:\n          style = \"Extremely effective transition focus\";\n          break;\n        default:\n          style = \"N/A\";\n          break;\n      }\n      break;\n\n    case possession > 20:\n      switch (true) {\n        case points > 13:\n          style = \"Concede possession, highly inefficient\";\n          break;\n        case points > 10:\n          style = \"Defensive with inefficient transitions\";\n          break;\n        case points > 7:\n          style = \"Counter attacking and very direct play\";\n          break;\n        case points > 4:\n          style = \"Extremely counter attacking transitions\";\n          break;\n        case points > 2:\n          style = \"Extremely direct, efficient countering\";\n          break;\n        default:\n          style = \"N/A\";\n          break;\n      }\n      break;\n\n    default:\n      style = \"N/A\";\n      break;\n  }\n\n  return style;\n}\n\nexport async function roundCustom(num, form, otherForm) {\n  let wholeNumber = Math.floor(num);\n  let remainder = num - wholeNumber;\n  let goals;\n\n  // switch (true) {\n  //   case remainder >= 0.9:\n  //     switch (true) {\n  //       default:\n  //         goals = Math.round(num);\n  //         break;\n  //     }\n  //     break;\n  //   case remainder >= 0.8 && remainder < 0.9:\n  //     switch (true) {\n  //       case form.actualToXGDifference >= 0:\n  //         goals = Math.ceil(num);\n  //         break;\n  //       case form.actualToXGDifference < 0:\n  //         goals = Math.floor(num);\n  //         break;\n  //       default:\n  //         goals = Math.round(num);\n  //         break;\n  //     }\n  //     break;\n  //   case remainder >= 0.6 && remainder < 0.8:\n  //     switch (true) {\n  //       case form.actualToXGDifference >= 10:\n  //         goals = Math.ceil(num);\n  //         break;\n  //       case form.actualToXGDifference < 10:\n  //         goals = Math.floor(num);\n  //         break;\n  //       default:\n  //         goals = Math.round(num);\n  //         break;\n  //     }\n  //     break;\n  //   case remainder >= 0.5 && remainder < 0.6:\n  //     switch (true) {\n  //       case form.actualToXGDifference >= 20:\n  //         goals = Math.ceil(num);\n  //         break;\n  //       case form.actualToXGDifference < 20:\n  //         goals = Math.floor(num);\n  //         break;\n  //       default:\n  //         goals = Math.round(num);\n  //         break;\n  //     }\n  //     break;\n  //   default:\n  //     goals = Math.floor(num);\n  //     break;\n  // }\n\n  if (remainder > 0.9) {\n    goals = Math.ceil(num);\n  } else {\n    goals = Math.floor(num);\n  }\n\n  return goals;\n}\n\n//Calculates scores based on prior XG figures, weighted by odds\nlet i = 0;\n\nexport async function calculateScore(match, index, divider, calculate) {\n  i++;\n\n  let teams;\n\n  if (\n    calculate === true &&\n    allForm.find(\n      (game) =>\n        game.home.teamName === match.homeTeam &&\n        game.away.teamName === match.awayTeam\n    )\n  ) {\n    teams = [\n      allForm.find((game) => game.home.teamName === match.homeTeam).home,\n      allForm.find((game) => game.away.teamName === match.awayTeam).away,\n    ];\n  } else {\n    calculate = false;\n  }\n\n  let formHome;\n  let formAway;\n\n  if (calculate) {\n    for (let i = 0; i < teams.length; i++) {\n      if (teams[0][index].PlayedHome <= 1 || teams[1][index].PlayedAway <= 1) {\n        index = 2;\n        divider = 10;\n      }\n\n      if (teams[i][index].formRun) {\n        teams[i][index].lastHomeOrAwayPoints = getPointsFromLastX(\n          teams[i][index].formRun\n        );\n\n        teams[i][index].homeOrAwayAverage = await getPointAverage(\n          teams[i][index].lastHomeOrAwayPoints,\n          teams[i][index].formRun.length\n        );\n      }\n\n      teams[i][0].ScoredAverage = teams[i][0].ScoredOverall / 5;\n      teams[i][1].ScoredAverage = teams[i][1].ScoredOverall / 6;\n      teams[i][2].ScoredAverage = teams[i][2].ScoredOverall / 10;\n\n      teams[i][0].ConcededAverage = teams[i][0].ConcededOverall / 5;\n      teams[i][1].ConcededAverage = teams[i][1].ConcededOverall / 6;\n      teams[i][2].ConcededAverage = teams[i][2].ConcededOverall / 10;\n\n      if (teams[i][1].ScoredAverage === 0) {\n        teams[i][1].ScoredAverage = teams[i][index].ScoredOverall / 10;\n        teams[i][1].ScoredOverall = teams[i][2].ScoredOverall / 2;\n      }\n\n      if (teams[i][1].ConcededAverage === 0) {\n        teams[i][1].ConcededAverage = teams[i][index].ConcededOverall / 10;\n        teams[i][1].ConcededOverall = teams[i][2].ConcededOverall / 2;\n      }\n\n      teams[i][index].ScoredAverageShortTerm = teams[i][0].ScoredOverall / 5;\n      teams[i][index].ConcededAverageShortTerm =\n        teams[i][0].ConcededOverall / 5;\n\n      teams[i][index].longTermAverageGoals = teams[i][2].ScoredOverall / 10;\n      teams[i][index].longTermAverageConceeded =\n        teams[i][2].ConcededOverall / 10;\n\n      let recentGoalDiff =\n        teams[i][index].ScoredAverageShortTerm -\n        teams[i][index].ConcededAverageShortTerm;\n      let distantGoalDiff =\n        teams[i][index].longTermAverageGoals -\n        teams[i][index].longTermAverageConceeded;\n\n      let recentDA = teams[i][0].AverageDangerousAttacksOverall;\n      let distantDA = teams[i][2].AverageDangerousAttacksOverall;\n\n      let recentPosession = teams[i][0].AveragePossessionOverall;\n      let distantPosession = teams[i][2].AveragePossessionOverall;\n\n      let recentCleanSheet = teams[i][0].CleanSheetPercentage;\n      let distantCleanSheet = teams[i][2].CleanSheetPercentage;\n\n      let recentFormArray = [\n        recentGoalDiff,\n        recentDA,\n        recentPosession,\n        recentCleanSheet,\n      ];\n      let distantFormArray = [\n        distantGoalDiff,\n        distantDA,\n        distantPosession,\n        distantCleanSheet,\n      ];\n\n      teams[i][index].formTrendScore = await compareFormTrend(\n        recentFormArray,\n        distantFormArray\n      );\n\n      teams[i][index].expectedGoals = parseFloat(teams[i][index].XG);\n\n      teams[i][index].ScoredAverageShortAndLongTerm =\n        (teams[i][index].ScoredOverall / 10 +\n          teams[i][index].ScoredAverageShortTerm) /\n        2;\n\n      teams[i][index].conceededAverageShortAndLongTerm =\n        (teams[i][index].ConcededOverall / 10 +\n          teams[i][index].ConcededAverageShortTerm) /\n        2;\n\n      teams[i][index].longTermGoalDifference =\n        teams[i][2].ScoredAverage - teams[i][2].ConcededAverage;\n\n      teams[i][index].shortTermGoalDifference =\n        teams[i][0].ScoredAverage - teams[i][0].ConcededAverage;\n\n      teams[i][index].XGdifferential = await diff(\n        teams[i][index].XGOverall,\n        teams[i][index].XGAgainstAvgOverall\n      );\n    }\n\n    homeOdds = match.homeOdds;\n    awayOdds = match.awayOdds;\n\n    formHome = teams[0][index];\n    formAway = teams[1][index];\n\n    // if (\n    //   (formHome.XGOverall - formHome.XGAgainstAvgOverall) < (formHome.last5XG - formHome.XGAgainstlast5)\n    // ) {\n    //   formHome.improving = true;\n    // } else {\n    //   formHome.improving = false;\n    // }\n\n    // if (\n    //   (formAway.XGOverall - formAway.XGAgainstAvgOverall) < (formAway.last5XG - formAway.XGAgainstlast5)\n    // ) {\n    //   formAway.improving = true;\n    // } else {\n    //   formAway.improving = false;\n    // }\n\n    let homeTwoGameAvg = formHome.last2Points / 2;\n    let awayTwoGameAvg = formAway.last2Points / 2;\n\n    // let [last10WeightingHome, last10WeightingAway] = await getPointWeighting(\n    //   pointsDiff10\n    // );\n\n    // let [last2WeightingHome, last2WeightingAway] = await getPointWeighting(\n    //   pointsDiff2\n    // );\n\n    formHome.dangerousAttackConversion =\n      (formHome.ScoredAverageShortAndLongTerm /\n        formHome.AverageDangerousAttacksOverall) *\n      100;\n    formAway.dangerousAttackConversion =\n      (formAway.ScoredAverageShortAndLongTerm /\n        formAway.AverageDangerousAttacksOverall) *\n      100;\n\n    [formHome.clinicalRating, formHome.clinicalScore] = await getClinicalRating(\n      formHome\n    );\n    [formAway.clinicalRating, formAway.clinicalScore] = await getClinicalRating(\n      formAway\n    );\n\n    let XGdifferential = await diff(\n      formHome.XGdifferential,\n      formAway.XGdifferential\n    );\n\n    formHome.teamName = match.homeTeam;\n    formAway.teamName = match.awayTeam;\n\n    match.XGdifferentialValue = Math.abs(XGdifferential);\n    match.XGdifferentialValueRaw = parseFloat(XGdifferential);\n    if (\n      allLeagueResultsArrayOfObjects[match.leagueIndex].fixtures.length > 10 &&\n      match.leagueID !== 7956\n    ) {\n      [\n        formHome.predictedGoalsBasedOnHomeAv,\n        formHome.predictedGoalsBasedOnAwayAv,\n        formHome.allTeamGoalsBasedOnAverages,\n        formHome.predictedGoalsConceededBasedOnHomeAv,\n        formHome.predictedGoalsConceededBasedOnAwayAv,\n        formHome.allTeamGoalsConceededBasedOnAverages,\n        formHome.averageOddsHome,\n        formHome.averageOddsAway,\n        formHome.averageScoredLeague,\n        formHome.averageConceededLeague,\n        formHome.last10btts,\n        formHome.last10bttsHome,\n        formHome.last10bttsAway,\n        match.bttsAllPercentageHome,\n        match.bttsPercentageHomeHome,\n        match.bttsPercentageHomeAway,\n        formHome.forAndAgainstRollingAvHomeOrAway,\n        formHome.forAndAgainstRollingAv,\n      ] = await getPastLeagueResults(match.homeTeam, match, \"home\", formHome);\n\n      [\n        formAway.predictedGoalsBasedOnHomeAv,\n        formAway.predictedGoalsBasedOnAwayAv,\n        formAway.allTeamGoalsBasedOnAverages,\n        formAway.predictedGoalsConceededBasedOnHomeAv,\n        formAway.predictedGoalsConceededBasedOnAwayAv,\n        formAway.allTeamGoalsConceededBasedOnAverages,\n        formAway.averageOddsHome,\n        formAway.averageOddsAway,\n        formAway.averageScoredLeague,\n        formAway.averageConceededLeague,\n        formAway.last10btts,\n        formAway.last10bttsHome,\n        formAway.last10bttsAway,\n        match.bttsAllPercentageAway,\n        match.bttsPercentageAwayHome,\n        match.bttsPercentageAwayAway,\n        formAway.forAndAgainstRollingAvHomeOrAway,\n        formAway.forAndAgainstRollingAv,\n      ] = await getPastLeagueResults(match.awayTeam, match, \"away\", formAway);\n    } else {\n      formHome.completeData = false;\n      formHome.predictedGoalsBasedOnHomeAv = formHome.ScoredAverage;\n      formHome.predictedGoalsBasedOnAwayAv = formHome.ConcededAverage;\n      formHome.allTeamGoalsBasedOnAverages = formHome.ScoredAverage;\n      formHome.forAndAgainstRollingAv = {\n        goalsFor: formHome.ScoredAverage,\n        goalsAgainst: formHome.ConcededAverage,\n      };\n      formHome.forAndAgainstRollingAvHomeOrAway = {\n        goalsFor: formHome.ScoredAverage,\n        goalsAgainst: formHome.ConcededAverage,\n      };\n      formHome.predictedGoalsConceededBasedOnHomeAv = formHome.ConcededAverage;\n      formHome.predictedGoalsConceededBasedOnAwayAv = formHome.ConcededAverage;\n      formHome.allTeamGoalsConceededBasedOnAverages = formHome.ConcededAverage;\n      formHome.averageOddsHome = null;\n      formHome.averageOddsAway = null;\n      formHome.averageScoredLeague = null;\n      formHome.averageConceededLeague = null;\n      formHome.goalDifference =\n        formHome.ScoredOverall - formHome.ConcededOverall;\n      formHome.goalDifferenceHomeOrAway =\n        formHome.ScoredOverall - formHome.ConcededOverall;\n      formHome.last10btts = null;\n      formHome.last10bttsHome = null;\n      formHome.last10bttsAway = null;\n      formHome.allTeamResults = [];\n      formHome.resultsAll = [];\n      formHome.resultsHome = [];\n      formHome.resultsAway = [];\n      match.bttsAllPercentageHome = \"\";\n      match.bttsPercentageHomeHome = \"\";\n      match.bttsPercentageHomeAway = \"\";\n      formAway.completeData = false;\n      formAway.predictedGoalsBasedOnHomeAv = formAway.ScoredAverage;\n      formAway.predictedGoalsBasedOnAwayAv = formAway.ConcededAverage;\n      formAway.allTeamGoalsBasedOnAverages = formAway.ScoredAverage;\n      formAway.forAndAgainstRollingAv = {\n        goalsFor: formAway.ScoredAverage,\n        goalsAgainst: formAway.ConcededAverage,\n      };\n      formAway.forAndAgainstRollingAvHomeOrAway = {\n        goalsFor: formAway.ScoredAverage,\n        goalsAgainst: formAway.ConcededAverage,\n      };\n      formAway.predictedGoalsConceededBasedOnHomeAv = formAway.ConcededAverage;\n      formAway.predictedGoalsConceededBasedOnAwayAv = formAway.ConcededAverage;\n      formAway.allTeamGoalsConceededBasedOnAverages = formAway.ConcededAverage;\n      formAway.averageOddsHome = null;\n      formAway.averageOddsAway = null;\n      formAway.averageScoredLeague = null;\n      formAway.averageConceededLeague = null;\n      formAway.goalDifference =\n        formAway.ScoredOverall - formAway.ConcededOverall;\n      formAway.goalDifferenceHomeOrAway =\n        formAway.ScoredOverall - formAway.ConcededOverall;\n\n      formAway.last10btts = null;\n      formAway.last10bttsHome = null;\n      formAway.last10bttsAway = null;\n      formAway.allTeamResults = [];\n      formAway.resultsAll = [];\n      formAway.resultsHome = [];\n      formAway.resultsAway = [];\n      match.bttsAllPercentageAway = \"\";\n      match.bttsPercentageAwayHome = \"\";\n      match.bttsPercentageAwayAway = \"\";\n    }\n\n    match.directnessRatingHome = formHome.directnessRatingHome;\n    match.directnessRatingAway = formAway.directnessRatingAway;\n\n    if (\n      typeof formHome.homeTeamHomePositionRaw === \"number\" &&\n      typeof formAway.awayTeamAwayPositionRaw === \"number\"\n    ) {\n      formHome.homePositionHomeOnly = parseFloat(\n        formHome.homeTeamHomePositionRaw\n      );\n      formAway.awayPositionAwayOnly = parseFloat(\n        formAway.awayTeamAwayPositionRaw\n      );\n      formHome.homePosition = parseFloat(formHome.homeRawPosition);\n      formAway.awayPosition = parseFloat(formAway.awayRawPosition);\n    } else {\n      formHome.homePositionHomeOnly = \"N/A\";\n      formAway.awayPositionAwayOnly = \"N/A\";\n      formHome.homePosition = \"N/A\";\n      formAway.awayPosition = \"N/A\";\n    }\n\n    if (formHome.last10Goals && formAway.last10Goals !== 0) {\n      if (\n        formHome.last5Goals - formHome.last5GoalsConceeded >\n        formHome.last10Goals - formHome.last10GoalsConceeded\n      ) {\n        formHome.improving = true;\n      } else {\n        formHome.improving = false;\n      }\n\n      if (\n        formAway.last5Goals - formAway.last5GoalsConceeded >\n        formAway.last10Goals - formAway.last10GoalsConceeded\n      ) {\n        formAway.improving = true;\n      } else {\n        formAway.improving = false;\n      }\n    }\n\n    let pointsDiff6 = await getPointsDifferential(\n      formHome.avPoints6,\n      formAway.avPoints6\n    );\n\n    formHome.AttackingPotency = (formHome.XG / formHome.AttacksHome) * 100;\n    formAway.AttackingPotency = (formAway.XG / formAway.AttacksAverage) * 100;\n\n    formHome.lastGame = formHome.resultsAll[0];\n    formHome.previousToLastGame = formHome.resultsAll[1];\n\n    formAway.lastGame = formAway.resultsAll[0];\n    formAway.previousToLastGame = formAway.resultsAll[1];\n\n    let teamComparisonScore;\n\n    const attackingMetricsHome = {\n      \"Average Dangerous Attacks\": formHome.AverageDangerousAttacksOverall,\n      \"Average Shots\": formHome.avgShots,\n      \"Average Shots On Target\": formHome.AverageShotsOnTargetOverall\n        ? formHome.AverageShotsOnTargetOverall\n        : formHome.AverageShotsOnTarget,\n      \"Average Expected Goals\": formHome.XGOverall\n        ? formHome.XGOverall\n        : formHome.expectedGoals,\n      \"Recent XG\": formHome.XGlast5 ? formHome.XGlast5 : formHome.XGOverall,\n      \"Average Goals\": formHome.avgScored\n        ? formHome.avgScored\n        : formHome.ScoredAverage,\n      Corners: formHome.AverageCorners\n        ? formHome.AverageCorners\n        : formHome.CornersAverage,\n    };\n\n    const attackingMetricsHomeLast5 = {\n      \"Average Dangerous Attacks\": formHome.avDALast5\n        ? formHome.avDALast5\n        : formHome.AverageDangerousAttacksOverall,\n      \"Average Shots\": formHome.avShotsLast5\n        ? formHome.avShotsLast5\n        : formHome.AverageShots,\n      \"Average Shot Value\": formHome.avgShotValueLast5,\n      \"Average Shots On Target\": formHome.avSOTLast5\n        ? formHome.avSOTLast5\n        : formHome.AverageShotsOnTarget,\n      \"Average Expected Goals\": formHome.XGlast5\n        ? formHome.XGlast5\n        : formHome.XGOverall,\n      \"Recent XG\": formHome.XGlast5 ? formHome.XGlast5 : formHome.XGOverall,\n      \"Average Goals\": formHome.avScoredLast5\n        ? formHome.avScoredLast5\n        : formHome.ScoredAverage,\n      Corners: formHome.avCornersLast5\n        ? formHome.avCornersLast5\n        : formHome.CornersAverage,\n    };\n\n    const attackingMetricsHomeOnly = {\n      \"Average Dangerous Attacks\": formHome.avgDangerousAttacksHome\n        ? formHome.avgDangerousAttacksHome\n        : formHome.AverageDangerousAttacksOverall,\n      \"Average Shots\": formHome.avgShotsHome\n        ? formHome.avgShotsHome\n        : formHome.AverageShots,\n      \"Average Shot Value\": formHome.avgShotValueHome,\n      \"Average Shots On Target\": formHome.avgShotsOnTargetHome\n        ? formHome.avgShotsOnTargetHome\n        : formHome.AverageShotsOnTarget,\n      \"Average Expected Goals\": formHome.avgXGScoredHome\n        ? formHome.avgXGScoredHome\n        : formHome.XGOverall,\n      \"Recent XG\": formHome.last5XGAvgForHome\n        ? formHome.last5XGAvgForHome\n        : formHome.XGOverall,\n      \"Average Goals\": formHome.avgScoredHome\n        ? formHome.avgScoredHome\n        : formHome.ScoredAverage,\n      Corners: formHome.cornersAvHome\n        ? formHome.cornersAvHome\n        : formHome.CornersAverage,\n    };\n\n    const attackingMetricsAwayOnly = {\n      \"Average Dangerous Attacks\": formAway.avgDangerousAttacksAway\n        ? formAway.avgDangerousAttacksAway\n        : formAway.AverageDangerousAttacksOverall,\n      \"Average Shots\": formAway.avgShotsAway\n        ? formAway.avgShotsAway\n        : formAway.AverageShots,\n      \"Average Shot Value\": formAway.avgShotValueAway,\n      \"Average Shots On Target\": formAway.avgShotsOnTargetAway\n        ? formAway.avgShotsOnTargetAway\n        : formAway.AverageShotsOnTarget,\n      \"Average Expected Goals\": formAway.avgXGScoredAway\n        ? formAway.avgXGScoredAway\n        : formAway.XGOverall,\n      \"Recent XG\": formAway.last5XGAvgForAway\n        ? formAway.last5XGAvgForAway\n        : formAway.XGOverall,\n      \"Average Goals\": formAway.avgScoredAway\n        ? formAway.avgScoredAway\n        : formAway.ScoredAverage,\n      Corners: formAway.cornersAvAway\n        ? formAway.cornersAvAway\n        : formAway.CornersAverage,\n    };\n\n    const attackingMetricsAway = {\n      \"Average Dangerous Attacks\": formAway.AverageDangerousAttacksOverall,\n      \"Average Shots\": formAway.avgShots,\n      \"Average Shot Value\": formAway.avgShotValue,\n      \"Average Shots On Target\": formAway.AverageShotsOnTargetOverall\n        ? formAway.AverageShotsOnTargetOverall\n        : formAway.AverageShotsOnTarget,\n      \"Average Expected Goals\": formAway.XGOverall\n        ? formAway.XGOverall\n        : formAway.expectedGoals,\n      \"Recent XG\": formAway.XGlast5 ? formAway.XGlast5 : formAway.XGOverall,\n      \"Average Goals\": formAway.avgScored\n        ? formAway.avgScored\n        : formAway.ScoredAverage,\n      Corners: formAway.AverageCorners\n        ? formAway.AverageCorners\n        : formAway.CornersAverage,\n    };\n\n    const attackingMetricsAwayLast5 = {\n      \"Average Dangerous Attacks\": formAway.avDALast5\n        ? formAway.avDALast5\n        : formAway.AverageDangerousAttacksOverall,\n      \"Average Shots\": formAway.avShotsLast5\n        ? formAway.avShotsLast5\n        : formAway.AverageShots,\n      \"Average Shot Value\": formAway.avgShotValueLast5,\n      \"Average Shots On Target\": formAway.avSOTLast5\n        ? formAway.avSOTLast5\n        : formAway.AverageShotsOnTarget,\n      \"Average Expected Goals\": formAway.XGlast5\n        ? formAway.XGlast5\n        : formAway.XGOverall,\n      \"Recent XG\": formAway.XGlast5 ? formAway.XGlast5 : formAway.XGOverall,\n      \"Average Goals\": formAway.avScoredLast5\n        ? formAway.avScoredLast5\n        : formAway.ScoredAverage,\n      Corners: formAway.avCornersLast5\n        ? formAway.avCornersLast5\n        : formAway.CornersAverage,\n    };\n\n    const defensiveMetricsHome = {\n      \"Average XG Against\": formHome.XGAgainstAvgOverall\n        ? formHome.XGAgainstAvgOverall\n        : formHome.XGAgainstAvgOverall,\n      \"Recent XG Against\": formHome.XGAgainstlast5\n        ? formHome.XGAgainstlast5\n        : formHome.XGAgainstAvgOverall,\n      \"Average Goals Against\": formHome.avgConceeded\n        ? formHome.avgConceeded\n        : formHome.ConcededAverage,\n      \"Average SOT Against\": formHome.AverageShotsOnTargetAgainstOverall\n        ? formHome.AverageShotsOnTargetAgainstOverall\n        : 5,\n    };\n\n    const defensiveMetricsHomeLast5 = {\n      \"Average XG Against\": formHome.XGAgainstlast5\n        ? formHome.XGAgainstlast5\n        : formHome.XGAgainstAvgOverall,\n      \"Recent XG Against\": formHome.avXGAgainstLast5\n        ? formHome.avXGAgainstLast5\n        : formHome.XGAgainstAvgOverall,\n      \"Average Goals Against\": formHome.avConceededLast5\n        ? formHome.avConceededLast5\n        : formHome.ConcededAverage,\n      \"Average SOT Against\": formHome.avSOTAgainstLast5\n        ? formHome.avSOTAgainstLast5\n        : 5,\n    };\n\n    const defensiveMetricsAway = {\n      \"Average XG Against\": formAway.XGAgainstAvgOverall\n        ? formAway.XGAgainstAvgOverall\n        : formAway.XGAgainstAvgOverall,\n      \"Recent XG Against\": formAway.XGAgainstlast5\n        ? formAway.XGAgainstlast5\n        : formAway.XGAgainstAvgOverall,\n      \"Average Goals Against\": formAway.avgConceeded\n        ? formAway.avgConceeded\n        : formAway.ConcededAverage,\n      \"Average SOT Against\": formAway.AverageShotsOnTargetAgainstOverall\n        ? formAway.AverageShotsOnTargetAgainstOverall\n        : 5,\n    };\n\n    const defensiveMetricsAwayLast5 = {\n      \"Average XG Against\": formAway.XGAgainstlast5\n        ? formAway.XGAgainstlast5\n        : formAway.XGAgainstAvgOverall,\n      \"Recent XG Against\": formAway.avXGAgainstLast5\n        ? formAway.avXGAgainstLast5\n        : formAway.XGAgainstAvgOverall,\n      \"Average Goals Against\": formAway.avConceededLast5\n        ? formAway.avConceededLast5\n        : formAway.ConcededAverage,\n      \"Average SOT Against\": formAway.avSOTAgainstLast5\n        ? formAway.avSOTAgainstLast5\n        : 5,\n    };\n\n    const defensiveMetricsHomeOnly = {\n      \"Average XG Against\": formHome.avgXGConceededHome\n        ? formHome.avgXGConceededHome\n        : formHome.XGAgainstAvgOverall,\n      \"Recent XG Against\": formHome.last5XGAvgAgainstHome\n        ? formHome.last5XGAvgAgainstHome\n        : formHome.XGAgainstAvgOverall,\n      \"Average Goals Against\": formHome.teamConceededAvgHomeOnly\n        ? formHome.teamConceededAvgHomeOnly\n        : formHome.ConcededAverage,\n      \"Average SOT Against\": formHome.avgShotsOnTargetAgainstHome\n        ? formHome.avgShotsOnTargetAgainstHome\n        : 5,\n    };\n\n    const defensiveMetricsAwayOnly = {\n      \"Average XG Against\": formAway.avgXGConceededAway\n        ? formAway.avgXGConceededAway\n        : formAway.XGAgainstAvgOverall,\n      \"Recent XG Against\": formAway.last5XGAvgAgainstAway\n        ? formAway.last5XGAvgAgainstAway\n        : formAway.XGAgainstAvgOverall,\n      \"Average Goals Against\": formAway.teamConceededAvgAwayOnly\n        ? formAway.teamConceededAvgAwayOnly\n        : formAway.ConcededAverage,\n      \"Average SOT Against\": formAway.avgShotsOnTargetAgainstAway\n        ? formAway.avgShotsOnTargetAgainstAway\n        : 5,\n    };\n\n    formHome.attackingMetrics = attackingMetricsHome;\n    formHome.defensiveMetrics = defensiveMetricsHome;\n    formHome.attackingMetricsHomeLast5 = attackingMetricsHomeLast5;\n    formHome.defensiveMetricsHomeLast5 = defensiveMetricsHomeLast5;\n    formHome.attackingMetricsHomeOnly = attackingMetricsHomeOnly;\n    formHome.defensiveMetricsHomeOnly = defensiveMetricsHomeOnly;\n\n    formAway.attackingMetrics = attackingMetricsAway;\n    formAway.defensiveMetrics = defensiveMetricsAway;\n    formAway.attackingMetricsAwayLast5 = attackingMetricsAwayLast5;\n    formAway.defensiveMetricsAwayLast5 = defensiveMetricsAwayLast5;\n    formAway.attackingMetricsAwayOnly = attackingMetricsAwayOnly;\n    formAway.defensiveMetricsAwayOnly = defensiveMetricsAwayOnly;\n\n    formHome.attackingStrength = await calculateAttackingStrength(\n      attackingMetricsHome\n    );\n\n    formHome.attackingStrengthScoreGeneration =\n      await calculateAttackingStrength(attackingMetricsHome);\n\n    formHome.attackingStrengthLast5 = await calculateAttackingStrength(\n      attackingMetricsHomeLast5\n    );\n\n    formHome.attackingStrengthHomeOnly = await calculateAttackingStrength(\n      attackingMetricsHomeOnly\n    );\n\n    formAway.attackingStrength = await calculateAttackingStrength(\n      attackingMetricsAway\n    );\n\n    formAway.attackingStrengthLast5 = await calculateAttackingStrength(\n      attackingMetricsAwayLast5\n    );\n\n    formAway.attackingStrengthAwayOnly = await calculateAttackingStrength(\n      attackingMetricsAwayOnly\n    );\n\n    formHome.defensiveStrength = await calculateDefensiveStrength(\n      defensiveMetricsHome\n    );\n\n    formHome.defensiveStrengthScoreGeneration =\n      await calculateDefensiveStrength(defensiveMetricsHome, 0.85);\n\n    formHome.defensiveStrengthLast5 = await calculateDefensiveStrength(\n      defensiveMetricsHomeLast5\n    );\n\n    formHome.defensiveStrengthScoreGenerationLast5 =\n      await calculateDefensiveStrength(defensiveMetricsHomeLast5, 0.85);\n\n    formHome.defensiveStrengthHomeOnly = await calculateDefensiveStrength(\n      defensiveMetricsHomeOnly\n    );\n\n    formHome.defensiveStrengthScoreGenerationHomeOnly =\n      await calculateDefensiveStrength(defensiveMetricsHomeOnly, 0.85);\n\n    formAway.defensiveStrength = await calculateDefensiveStrength(\n      defensiveMetricsAway\n    );\n\n    formAway.defensiveStrengthScoreGeneration =\n      await calculateDefensiveStrength(defensiveMetricsAway, 0.85);\n\n    formAway.defensiveStrengthLast5 = await calculateDefensiveStrength(\n      defensiveMetricsAwayLast5\n    );\n\n    formAway.defensiveStrengthScoreGenerationLast5 =\n      await calculateDefensiveStrength(defensiveMetricsAwayLast5, 0.85);\n\n    formAway.defensiveStrengthAwayOnly = await calculateDefensiveStrength(\n      defensiveMetricsAwayOnly\n    );\n\n    formAway.defensiveStrengthScoreGenerationAwayOnly =\n      await calculateDefensiveStrength(defensiveMetricsAwayOnly, 0.85);\n\n    formHome.possessionStrength = await calculateMetricStrength(\n      \"averagePossession\",\n      formHome.AveragePossessionOverall\n        ? formHome.AveragePossessionOverall\n        : formHome.AveragePossessionOverall\n    );\n\n    formHome.possessionStrengthLast5 = await calculateMetricStrength(\n      \"averagePossession\",\n      formHome.avPosessionLast5\n        ? formHome.avPosessionLast5\n        : formHome.AveragePossessionOverall\n    );\n\n    formHome.possessionStrengthHomeOnly = await calculateMetricStrength(\n      \"averagePossession\",\n      formHome.avgPossessionHome\n        ? formHome.avgPossessionHome\n        : formHome.AveragePossessionOverall\n    );\n\n    formAway.possessionStrengthLast5 = await calculateMetricStrength(\n      \"averagePossession\",\n      formAway.avPosessionLast5\n        ? formAway.avPosessionLast5\n        : formAway.AveragePossessionOverall\n    );\n\n    formAway.possessionStrength = await calculateMetricStrength(\n      \"averagePossession\",\n      formAway.AveragePossessionOverall\n        ? formAway.AveragePossessionOverall\n        : formAway.AveragePossessionOverall\n    );\n\n    formAway.possessionStrengthAwayOnly = await calculateMetricStrength(\n      \"averagePossession\",\n      formAway.avgPossessionAway\n        ? formAway.avgPossessionAway\n        : formAway.AveragePossessionOverall\n    );\n\n    formHome.XGdifferentialRecent = await diff(\n      formHome.XGlast5,\n      formHome.XGAgainstlast5\n    );\n\n    formHome.actualToXGDifferenceRecent = await diff(\n      formHome.XGdifferentialRecent,\n      formHome.last5GoalDiff\n    );\n\n    formAway.XGdifferentialRecent = await diff(\n      formAway.XGlast5,\n      formAway.XGAgainstlast5\n    );\n\n    formAway.actualToXGDifferenceRecent = await diff(\n      formAway.XGdifferentialRecent,\n      formAway.last5GoalDiff\n    );\n\n    formHome.directnessOverall =\n      (formHome.AverageShots / formHome.AveragePossessionOverall) * 10;\n\n    formHome.directnessOverallLast5 =\n      (formHome.avShotsLast5 / formHome.avPosessionLast5) * 10;\n\n    formAway.directnessOverallLast5 =\n      (formAway.avShotsLast5 / formAway.avPosessionLast5) * 10;\n\n    formHome.directnessHomeOnly =\n      (formHome.avgShotsHome / formHome.avgPossessionHome) * 10;\n\n    formAway.directnessOverall =\n      (formAway.AverageShots / formAway.AveragePossessionOverall) * 10;\n\n    formAway.directnessAwayOnly =\n      (formAway.avgShotsAway / formAway.avgPossessionAway) * 10;\n\n    formHome.directnessOverallStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formHome.directnessOverall\n    );\n\n    formHome.directnessOverallStrengthLast5 = await calculateMetricStrength(\n      \"directnessOverall\",\n      formHome.directnessOverallLast5\n    );\n\n    formHome.directnessHomeStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formHome.directnessHomeOnly\n    );\n\n    formAway.directnessOverallStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formAway.directnessOverall\n    );\n\n    formAway.directnessOverallStrengthLast5 = await calculateMetricStrength(\n      \"directnessOverall\",\n      formAway.directnessOverallLast5\n    );\n\n    formAway.directnessAwayStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formAway.directnessAwayOnly\n    );\n\n    formHome.shootingAccuracy =\n      (formHome.AverageShotsOnTargetOverall\n        ? formHome.AverageShotsOnTargetOverall / formHome.avgShots\n        : formHome.AverageShotsOnTarget / formHome.avgShots) *\n      formHome.AverageShotsOnTargetOverall\n        ? formHome.AverageShotsOnTargetOverall\n        : formHome.AverageShotsOnTarget;\n\n    formHome.shootingAccuracyLast5 =\n      (formHome.avSOTLast5 / formHome.avShotsLast5) * formHome.avSOTLast5;\n\n    formAway.shootingAccuracyLast5 =\n      (formAway.avSOTLast5 / formAway.avShotsLast5) * formAway.avSOTLast5;\n\n    formHome.shootingAccuracyHomeOnly =\n      (formHome.avgShotsOnTargetHome / formHome.avgShotsHome) *\n      formHome.avgShotsOnTargetHome;\n\n    formAway.shootingAccuracy =\n      (formAway.AverageShotsOnTargetOverall\n        ? formAway.AverageShotsOnTargetOverall / formAway.avgShots\n        : formAway.AverageShotsOnTarget / formAway.avgShots) *\n      formAway.AverageShotsOnTargetOverall\n        ? formAway.AverageShotsOnTargetOverall\n        : formAway.AverageShotsOnTarget;\n\n    formAway.shootingAccuracyAwayOnly =\n      (formAway.avgShotsOnTargetAway / formAway.avgShotsAway) *\n      formAway.avgShotsOnTargetAway;\n\n    formHome.accuracyOverallStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formHome.avgShotValue\n    );\n\n    formHome.accuracyOverallStrengthLast5 = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formHome.avgShotValueLast5\n    );\n\n    formHome.accuracyHomeStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formHome.avgShotValueHome\n    );\n\n    formAway.accuracyOverallStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formAway.avgShotValue\n    );\n\n    formAway.accuracyOverallStrengthLast5 = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formAway.avgShotValueLast5\n    );\n\n    formAway.accuracyAwayStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formAway.avgShotValueAway\n    );\n\n    formHome.xgForStrength = await calculateMetricStrength(\n      \"xgFor\",\n      formHome.XGOverall\n    );\n\n    formHome.xgForStrengthLast5 = await calculateMetricStrength(\n      \"xgFor\",\n      formHome.XGlast5\n    );\n\n    formHome.xgForStrengthHomeOnly = await calculateMetricStrength(\n      \"xgFor\",\n      formHome.avgXGScoredHome\n    );\n\n    formHome.xgAgainstStrength = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formHome.XGAgainstAvgOverall\n    );\n\n    formHome.xgAgainstStrengthLast5 = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formHome.XGAgainstlast5\n    );\n\n    formHome.xgAgainstStrengthHomeOnly = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formHome.avgXGConceededHome\n    );\n\n    formAway.xgForStrength = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.XGOverall\n    );\n\n    formAway.xgForStrengthLast5 = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.last5XGAvgFor\n    );\n\n    formAway.xgForStrengthLast5 = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.XGlast5\n    );\n\n    formAway.xgForStrengthAwayOnly = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.avgXGScoredAway\n    );\n\n    formAway.xgAgainstStrength = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formAway.XGAgainstAvgOverall\n    );\n\n    formAway.xgAgainstStrengthLast5 = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formAway.XGAgainstlast5\n    );\n\n    formAway.xgAgainstStrengthAwayOnly = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formAway.avgXGConceededAway\n    );\n\n    formHome.styleOfPlayOverall = await calculatePlayingStyle(\n      formHome.directnessRating,\n      formHome.AveragePossessionOverall\n    );\n    formHome.styleOfPlayHome = await calculatePlayingStyle(\n      formHome.directnessRatingHome,\n      formHome.avgPossessionHome\n    );\n\n    formAway.styleOfPlayOverall = await calculatePlayingStyle(\n      formAway.directnessRating,\n      formAway.AveragePossessionOverall\n    );\n    formAway.styleOfPlayAway = await calculatePlayingStyle(\n      formAway.directnessRatingAway,\n      formAway.avgPossessionAway\n    );\n\n    formHome.actualToXGDifference = parseInt(\n      await diff(formHome.XGDiffNonAverage, formHome.goalDifference)\n    );\n\n    formAway.actualToXGDifference = parseInt(\n      await diff(formAway.XGDiffNonAverage, formAway.goalDifference)\n    );\n\n    // teamComparisonScore = await compareTeams(formHome, formAway, match);\n\n    [formHome.teamGoalsCalc, formAway.teamGoalsCalc] = await generateGoals(\n      formHome,\n      formAway,\n      match\n    );\n\n    // teamComparisonScore = teamComparisonScore * 0.3;\n    // LEAVE\n\n    // if (teamComparisonScore > 0.45) {\n    //   teamComparisonScore = 0.45;\n    // } else if (teamComparisonScore < -0.45) {\n    //   teamComparisonScore = -0.45;\n    // }\n\n    // if (teamComparisonScore < 0) {\n    //   formHome.teamStrengthWeighting = 1 + teamComparisonScore / 1;\n    //   formAway.teamStrengthWeighting = 1 - teamComparisonScore / 1;\n    // } else if (teamComparisonScore >= 0) {\n    //   formHome.teamStrengthWeighting = 1 + teamComparisonScore / 1;\n    //   formAway.teamStrengthWeighting = 1 - teamComparisonScore / 1;\n    // }\n\n    // teamComparisonScore = 0;\n\n    // match.teamComparisonScore = teamComparisonScore.toFixed(2);\n    // match.goalWeighting = 1 + parseFloat(match.teamComparisonScore)\n\n    // let team1Metrics = {\n    //   weighting: formHome.teamGoalsCalc,\n    //   odds: match.homeOdds,\n    //   XGRating: formHome.XGRating,\n    //   actualToXGDifference: formHome.actualToXGDifference,\n    //   // Add other relevant metrics here\n    // };\n\n    // let team2Metrics = {\n    //   weighting: formAway.teamGoalsCalc,\n    //   odds: match.awayOdds,\n    //   XGRating: formAway.XGRating,\n    //   actualToXGDifference: formAway.actualToXGDifference,\n    //   // Add other relevant metrics here\n    // };\n\n    // // pass arrays of league goals and conceeded\n    // let scorePredictions;\n    // let scorePredictionsHA;\n    // let scorePredictionsRecent;\n\n    // if (\n    //   formHome.allConceededArrayHome !== undefined &&\n    //   formAway.allConceededArrayAway !== undefined\n    // ) {\n    //   scorePredictionsRecent = await predictScore(\n    //     formHome.allGoalsArrayHomeRecent,\n    //     formHome.allConceededArrayHomeRecent,\n    //     formAway.allGoalsArrayAwayRecent,\n    //     formAway.allConceededArrayAwayRecent,\n    //     team1Metrics,\n    //     team2Metrics,\n    //     match.game\n    //   );\n    //   scorePredictionsHA = await predictScore(\n    //     formHome.allGoalsArrayHomeOnly,\n    //     formHome.allConceededArrayHomeOnly,\n    //     formAway.allGoalsArrayAwayOnly,\n    //     formAway.allConceededArrayAwayOnly,\n    //     team1Metrics,\n    //     team2Metrics,\n    //     match.game\n    //   );\n    //   scorePredictions = await predictScore(\n    //     formHome.allGoalsArrayHome,\n    //     formHome.allConceededArrayHome,\n    //     formAway.allGoalsArrayAway,\n    //     formAway.allConceededArrayAway,\n    //     team1Metrics,\n    //     team2Metrics,\n    //     match.game\n    //   );\n    // }\n\n    let finalHomeGoals;\n    let finalAwayGoals;\n\n    const homeGoalDiff =\n      formHome.ScoredAverageShortAndLongTerm -\n      formHome.conceededAverageShortAndLongTerm;\n    const awayGoalDiff =\n      formAway.ScoredAverageShortAndLongTerm -\n      formAway.conceededAverageShortAndLongTerm;\n\n    formHome.goalsDifferential =\n      parseFloat(await diff(homeGoalDiff, awayGoalDiff)) / 1;\n    formAway.goalsDifferential =\n      parseFloat(await diff(awayGoalDiff, homeGoalDiff)) / 1;\n\n    formHome.rollingAverageGoalsDifferential = parseFloat(\n      formHome.allTeamGoalsBasedOnAverages -\n        formHome.allTeamGoalsConceededBasedOnAverages\n    );\n    formAway.rollingAverageGoalsDifferential = parseFloat(\n      formAway.allTeamGoalsBasedOnAverages -\n        formAway.allTeamGoalsConceededBasedOnAverages\n    );\n\n    match.GoalsInGamesAverageHome =\n      formHome.avScoredLast5 + formHome.avConceededLast5;\n\n    match.GoalsInGamesAverageAway =\n      formAway.avScoredLast5 + formAway.avConceededLast5;\n\n    let factorOneHome;\n    let factorOneAway;\n\n    factorOneHome =\n      // homeLeagueOrAllFormAverageGoals * 1 +\n      // formHome.last5Goals * 0.5 +\n      // formAway.last5GoalsConceeded * 0.5 +\n      (formHome.forAndAgainstRollingAvHomeOrAway.goalsFor * 2 +\n        formAway.forAndAgainstRollingAvHomeOrAway.goalsAgainst * 2 +\n        formHome.forAndAgainstRollingAv.goalsFor * 0 +\n        formAway.forAndAgainstRollingAv.goalsAgainst * 0 +\n        formHome.allTeamGoalsBasedOnAverages * 0 +\n        formAway.allTeamGoalsConceededBasedOnAverages * 0) /\n      // formHome.XGOverall * 1 +\n      // formAway.XGAgainstAvgOverall * 1 +\n\n      8;\n\n    factorOneAway =\n      // awayLeagueOrAllFormAverageGoals * 1 +\n      // formAway.last5Goals * 0.5 +\n      // formHome.last5GoalsConceeded * 0.5 +\n      (formAway.forAndAgainstRollingAvHomeOrAway.goalsFor * 2 +\n        formHome.forAndAgainstRollingAvHomeOrAway.goalsAgainst * 2 +\n        formAway.forAndAgainstRollingAv.goalsFor * 0 +\n        formHome.forAndAgainstRollingAv.goalsAgainst * 0 +\n        formAway.allTeamGoalsBasedOnAverages * 0 +\n        formHome.allTeamGoalsConceededBasedOnAverages * 0) /\n      // formAway.XGOverall * 1 +\n      // formHome.XGAgainstAvgOverall * 1 +\n      8;\n\n    // let factorTwoHome;\n    // let factorTwoAway;\n\n    // // if (\n    //   scorePredictions !== undefined &&\n    //   scorePredictions[0].probability !== 1\n    // ) {\n    //   factorTwoHome =\n    //     // scorePredictions[0].team1Score +\n    //     // scorePredictionsRecent[0].team1Score +\n    //     scorePredictionsHA[0].team1Score / 2;\n    //   factorTwoAway =\n    //     // scorePredictions[0].team2Score +\n    //     // scorePredictionsRecent[0].team2Score +\n    //     scorePredictionsHA[0].team2Score / 2;\n    // } else {\n    //   factorTwoHome = factorOneHome;\n    //   factorTwoAway = factorOneAway;\n    // }\n\n    let homeComparisonWeighting;\n    let awayComparisonWeighting;\n    match.scoreDiff = await diff(factorOneHome, factorOneAway);\n\n    if (teamComparisonScore > 0) {\n      homeComparisonWeighting = 1 + Math.abs(teamComparisonScore);\n      awayComparisonWeighting = 1 + -Math.abs(teamComparisonScore);\n    } else if (teamComparisonScore < 0) {\n      homeComparisonWeighting = 1 + -Math.abs(teamComparisonScore);\n      awayComparisonWeighting = 1 + Math.abs(teamComparisonScore);\n    } else {\n      homeComparisonWeighting = 1;\n      awayComparisonWeighting = 1;\n    }\n\n    // ROI\n    // Cumalative ROI for all 1402 match outcomes: + 7.58%\n\n    // const adjustmentHome =\n    //   formHome.avgShotValue > 10.5\n    //     ? parseFloat(formHome.actualToXGDifferenceRecent * 0.25)\n    //     : parseFloat(formHome.actualToXGDifferenceRecent * 0.5);\n    // const adjustmentAway =\n    //   formAway.twoGameAverage > 10.5\n    //     ? parseFloat(formAway.actualToXGDifferenceRecent * 0.25)\n    //     : parseFloat(formAway.actualToXGDifferenceRecent * 0.5);\n\n    // const homeAdj = formHome.actualToXGDifferenceRecent / 2;\n    // const awayAdj = formAway.actualToXGDifferenceRecent / 2;\n\n    // let experimentalHomeGoals = formHome.teamGoalsCalc;\n\n    // console.log(match.game)\n    // console.log(formHome)\n    // console.log(formAway)\n\n    let experimentalHomeGoals = formHome.teamGoalsCalc;\n    // factorOneHome * 1 +\n    // (formHome.avXGLast5 +\n    //   formAway.avXGAgainstLast5 +\n    //   // formHome.predictedGoalsBasedOnHomeAv +\n    //   // formAway.predictedGoalsConceededBasedOnAwayAv +\n    //   // formHome.XGPredictionHome.goalsFor +\n    //   // formAway.XGPredictionAway.goalsAgainst +\n    //   formHome.teamGoalsCalc * 4) /\n    // +\n    // formHome.forAndAgainstRollingAvHomeOrAway.goalsFor * 1 +\n    // formAway.forAndAgainstRollingAvHomeOrAway.goalsAgainst * 1 +\n    // formHome.forAndAgainstRollingAv.goalsFor * 1 +\n    // formAway.forAndAgainstRollingAv.goalsAgainst * 1\n    // 6;\n    // + homeAdj;\n\n    // (factorOneHome * homeComparisonWeighting +\n    //   (formHome.teamGoalsCalc * 2) +\n    //   factorTwoHome) /\n    // 4;\n    // (formHome.forAndAgainstRollingAvHomeOrAway.goalsFor + formAway.forAndAgainstRollingAvHomeOrAway.goalsAgainst) / 2\n\n    // let experimentalAwayGoals = formAway.teamGoalsCalc;\n    let experimentalAwayGoals = formAway.teamGoalsCalc;\n    // // factorOneAway * 1 +\n    // (formAway.avXGLast5 +\n    //   formHome.avXGAgainstLast5 +\n    //   // formAway.predictedGoalsBasedOnAwayAv +\n    //   // formHome.predictedGoalsConceededBasedOnHomeAv +\n    //   // formAway.XGPredictionAway.goalsFor +\n    //   // formHome.XGPredictionHome.goalsAgainst +\n    //   formAway.teamGoalsCalc * 4) /\n    // +\n    // formAway.forAndAgainstRollingAvHomeOrAway.goalsFor * 1 +\n    // formHome.forAndAgainstRollingAvHomeOrAway.goalsAgainst * 1 +\n    // formAway.forAndAgainstRollingAv.goalsFor * 1 +\n    // formHome.forAndAgainstRollingAv.goalsAgainst * 1\n    // 6;\n    // + awayAdj;\n\n    // console.log(experimentalHomeGoals);\n    // console.log(adjustmentHome);\n\n    // (factorOneAway * awayComparisonWeighting +\n    //   (formAway.teamGoalsCalc * 2) +\n    //   factorTwoAway) /\n    // 4;\n    // (formAway.forAndAgainstRollingAvHomeOrAway.goalsFor + formHome.forAndAgainstRollingAvHomeOrAway.goalsAgainst) / 2\n\n    let rawFinalHomeGoals = experimentalHomeGoals;\n    let rawFinalAwayGoals = experimentalAwayGoals;\n\n    // if(rawFinalHomeGoals < 0){\n    //   rawFinalHomeGoals = 0\n    // }\n\n    // if(rawFinalAwayGoals < 0){\n    //   rawFinalAwayGoals = 0\n    // }\n\n    match.rawFinalHomeGoals = rawFinalHomeGoals;\n    match.rawFinalAwayGoals = rawFinalAwayGoals;\n\n    if (\n      formHome.CleanSheetPercentage > 30 &&\n      formAway.CleanSheetPercentage > 30\n    ) {\n      finalHomeGoals = rawFinalHomeGoals - Math.abs(1);\n      finalAwayGoals = rawFinalAwayGoals - Math.abs(1);\n    }\n\n    if (rawFinalHomeGoals < 0) {\n      rawFinalHomeGoals = 0.01;\n    }\n\n    if (rawFinalAwayGoals < 0) {\n      rawFinalAwayGoals = 0.01;\n    }\n\n    // else {\n    //   finalHomeGoals = Math.floor(rawFinalHomeGoals);\n    //   finalAwayGoals = Math.floor(rawFinalAwayGoals);\n    // }\n\n    // if(rawFinalHomeGoals > formHome.avgScored && rawFinalAwayGoals > formAway.avgScored){\n    //   rawFinalHomeGoals -= Math.abs(-1)\n    //   rawFinalAwayGoals -= Math.abs(-1)\n    // }\n\n    finalHomeGoals = Math.floor(rawFinalHomeGoals);\n    finalAwayGoals = Math.floor(rawFinalAwayGoals);\n\n    // finalHomeGoals = rawFinalHomeGoals;\n    // finalAwayGoals = rawFinalAwayGoals;\n\n    // finalHomeGoals = await roundCustom(rawFinalHomeGoals, formHome, formAway);\n    // finalAwayGoals = await roundCustom(rawFinalAwayGoals, formAway, formHome);\n\n    // if (finalHomeGoals > formHome.avgScored + 2) {\n    //   finalHomeGoals = Math.round((finalHomeGoals + formHome.avgScored) / 2);\n    // }\n\n    // if (finalAwayGoals > formAway.avgScored + 2) {\n    //   finalAwayGoals = Math.round((finalAwayGoals + formAway.avgScored) / 2);\n    // }\n\n    // if (finalAwayGoals < 0) {\n    //   let difference = Math.abs(\n    //     parseFloat((await diff(0, finalAwayGoals)) / 2)\n    //   );\n    //   rawFinalHomeGoals = rawFinalHomeGoals + difference;\n    //   finalAwayGoals = 0;\n    // }\n\n    // if (finalHomeGoals < 0) {\n    //   let difference = Math.abs(\n    //     parseFloat((await diff(0, finalHomeGoals)) / 2)\n    //   );\n    //   rawFinalAwayGoals = rawFinalAwayGoals + difference;\n    //   finalHomeGoals = 0;\n    // }\n\n    if (match.status !== \"suspended\") {\n      if (finalHomeGoals > finalAwayGoals) {\n        match.prediction = \"homeWin\";\n        homePredictions = homePredictions + 1;\n        if (\n          formHome.lastGame === \"L\" ||\n          formHome.last2Points < 3 ||\n          formAway.last2Points > 4 ||\n          formHome.oddsReliabilityWin < 50\n        ) {\n          match.includeInMultis = false;\n        } else {\n          match.includeInMultis = true;\n        }\n      } else if (finalAwayGoals > finalHomeGoals) {\n        match.prediction = \"awayWin\";\n        awayPredictions = awayPredictions + 1;\n        if (\n          formAway.lastGame === \"L\" ||\n          formAway.last2Points < 3 ||\n          formHome.last2Points > 4 ||\n          formAway.oddsReliabilityWin < 50\n        ) {\n          match.includeInMultis = false;\n        } else {\n          match.includeInMultis = true;\n        }\n      } else if (finalHomeGoals === finalAwayGoals) {\n        match.prediction = \"draw\";\n        drawPredictions = drawPredictions + 1;\n      }\n    }\n\n    // console.log(match)\n    // if (match.status !== \"suspended\" && match.AIHomeGoals) {\n    //   if (match.AIHomeGoals > match.AIAwayGoals) {\n    //     match.AIprediction = \"homeWin\";\n    //     homeAIPredictions = homeAIPredictions + 1;\n    //   } else if (match.AIAwayGoals > match.AIHomeGoals) {\n    //     match.AIprediction = \"awayWin\";\n    //     awayAIPredictions = awayAIPredictions + 1;\n    //   } else if (finalHomeGoals === finalAwayGoals) {\n    //     match.prediction = \"draw\";\n    //     drawAIPredictions = drawAIPredictions + 1;\n    //   }\n    // }\n\n    console.log(`drawPredictions: ${drawPredictions}`);\n    // console.log(`draw AI Predictions: ${drawAIPredictions}`);\n\n    if (\n      (XGdifferential > 1 && match.prediction === \"homeWin\") ||\n      (XGdifferential < -1.6 && match.prediction === \"awayWin\")\n    ) {\n      match.XGdifferential = true;\n    } else {\n      match.XGdifferential = false;\n    }\n\n    if (\n      (pointsDiff6 > 1.2 && match.prediction === \"homeWin\") ||\n      (pointsDiff6 < -1.2 && match.prediction === \"awayWin\")\n    ) {\n      match.pointsDifferential = true;\n      match.pointsDifferentialValue = Math.abs(pointsDiff6);\n      match.pointsDifferentialValueRaw = parseFloat(pointsDiff6);\n    } else {\n      match.pointsDifferential = false;\n      match.pointsDifferentialValue = Math.abs(pointsDiff6);\n      match.pointsDifferentialValueRaw = parseFloat(pointsDiff6);\n    }\n\n    let rollingGoalDiffDifferential = await diff(\n      formHome.rollingAverageGoalsDifferential,\n      formAway.rollingAverageGoalsDifferential\n    );\n\n    if (\n      (rollingGoalDiffDifferential > 1.5 && match.prediction === \"homeWin\") ||\n      (rollingGoalDiffDifferential < -1.5 && match.prediction === \"awayWin\")\n    ) {\n      match.rollingGoalDiff = true;\n      match.rollingGoalDiffValue = rollingGoalDiffDifferential;\n    } else {\n      match.rollingGoalDiff = false;\n      match.rollingGoalDiffValue = rollingGoalDiffDifferential;\n    }\n\n    let dangerousAttacksDifferential = await diff(\n      formHome.AverageDangerousAttacksOverall,\n      formAway.AverageDangerousAttacksOverall\n    );\n\n    if (\n      (dangerousAttacksDifferential > 20 && match.prediction === \"homeWin\") ||\n      (dangerousAttacksDifferential < -20 && match.prediction === \"awayWin\")\n    ) {\n      match.dangerousAttacksDiff = true;\n      match.dangerousAttacksDiffValue = dangerousAttacksDifferential;\n    } else {\n      match.dangerousAttacksDiff = false;\n      match.dangerousAttacksDiffValue = dangerousAttacksDifferential;\n    }\n\n    switch (true) {\n      case match.status !== \"complete\":\n        break;\n      case match.homeGoals > match.awayGoals:\n        match.winner = match.homeTeam;\n        match.outcome = \"homeWin\";\n        homeOutcomes = homeOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formHome.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formAway.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formHome.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formAway.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formHome.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formAway.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formHome.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formAway.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += homeOdds;\n        sumOddsLoss = sumOddsLoss += awayOdds;\n        sumXGForWin = sumXGForWin += formHome.XGOverall;\n        sumXGForLoss = sumXGForLoss += formAway.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formHome.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formAway.XGAgainstAvgOverall;\n        break;\n      case match.homeGoals === match.awayGoals:\n        match.winner = \"draw\";\n        match.outcome = \"draw\";\n        allOutcomes = allOutcomes + 1;\n        allDrawOutcomes = allDrawOutcomes + 1;\n        break;\n      case match.homeGoals < match.awayGoals:\n        match.winner = match.awayTeam;\n        match.outcome = \"awayWin\";\n        allOutcomes = allOutcomes + 1;\n        awayOutcomes = awayOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formAway.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formHome.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formAway.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formHome.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formAway.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formHome.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formAway.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formHome.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += awayOdds;\n        sumOddsLoss = sumOddsLoss += homeOdds;\n        sumXGForWin = sumXGForWin += formAway.XGOverall;\n        sumXGForLoss = sumXGForLoss += formHome.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formAway.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formHome.XGAgainstAvgOverall;\n        break;\n      default:\n        break;\n    }\n\n    console.log(`allDrawOutcomes: ${allDrawOutcomes}`);\n\n    if (match.status === \"complete\") {\n      if (match.prediction === match.outcome) {\n        match.predictionOutcome = \"Won\";\n        winAmount = winAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      } else if (match.prediction !== match.outcome) {\n        match.predictionOutcome = \"Lost\";\n        lossAmount = lossAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      }\n    }\n\n    // if (match.status === \"complete\") {\n    //   if (match.AIprediction === match.outcome) {\n    //     match.predictionOutcome = \"Won\";\n    //     AIwinAmount = AIwinAmount + 1;\n    //     if (match.outcome === \"draw\") {\n    //     }\n    //   } else if (match.AIprediction !== match.outcome) {\n    //     match.predictionOutcome = \"Lost\";\n    //     AIlossAmount = AIlossAmount + 1;\n    //     if (match.outcome === \"draw\") {\n    //     }\n    //   }\n    // }\n\n    if (match.status === \"complete\") {\n      if (match.homeGoals + match.awayGoals > 2) {\n        match.over25PredictionOutcome = \"Won\";\n      } else {\n        match.over25PredictionOutcome = \"Lost\";\n      }\n    }\n\n    if (\n      match.status === \"complete\" &&\n      match.homeGoals > 0 &&\n      match.awayGoals > 0\n    ) {\n      match.bttsOutcome = \"bttsWon\";\n    } else {\n      match.bttsOutcome = \"bttsLost\";\n    }\n\n    match.formHome = formHome;\n    match.formAway = formAway;\n\n    // formObjectHome = formHome;\n    // formObjectAway = formAway;\n\n    // console.log(formObjectHome)\n    // console.log(formObjectAway)\n\n    let total = parseInt(finalHomeGoals + finalAwayGoals);\n    totalGoals = totalGoals + total;\n\n    let total2 = parseInt(match.homeGoals + match.awayGoals);\n    totalGoals2 = totalGoals2 + total2;\n\n    numberOfGames = numberOfGames + 1;\n\n    if (finalHomeGoals < 0) {\n      finalHomeGoals = 0;\n    }\n\n    if (finalAwayGoals < 0) {\n      finalAwayGoals = 0;\n    }\n\n    if (match.status === \"suspended\") {\n      finalHomeGoals = \"P\";\n      finalAwayGoals = \"P\";\n    }\n\n    if (\n      finalHomeGoals > finalAwayGoals &&\n      match.homeOdds !== 0 &&\n      (match.homeOdds < rangeValue[0] || match.homeOdds > rangeValue[1])\n    ) {\n      match.omit = true;\n    } else if (\n      finalAwayGoals > finalHomeGoals &&\n      match.homeOdds !== 0 &&\n      (match.awayOdds < rangeValue[0] || match.awayOdds > rangeValue[1])\n    ) {\n      match.omit = true;\n    } else if (\n      finalHomeGoals === finalAwayGoals &&\n      match.homeOdds !== 0 &&\n      (match.drawOdds < rangeValue[0] || match.drawOdds > rangeValue[1])\n    ) {\n      match.omit = true;\n    }\n\n    const last10PointDiffHomePerspective = Math.abs(\n      formHome.pointsSum6 - formAway.pointsSum6\n    );\n\n    const last6PointDiffAwayPerspective = Math.abs(\n      formAway.pointsSum6 - formHome.pointsSum6\n    );\n\n    const XGDiffBetweenTeamsHomePerspective = Math.abs(\n      formHome.XGDiffNonAverage - formAway.XGDiffNonAverage\n    );\n    const XGDiffBetweenTeamsAwayPerspective = Math.abs(\n      formAway.XGDiffNonAverage - formHome.XGDiffNonAverage\n    );\n\n    match.goalDiffHomeOrAwayComparison =\n      parseFloat(formHome.goalDifferenceHomeOrAway) -\n      parseFloat(formAway.goalDifferenceHomeOrAway);\n\n    match.goalDifferenceComparison =\n      parseFloat(formHome.goalDifference) - parseFloat(formAway.goalDifference);\n\n    switch (true) {\n      case finalHomeGoals > finalAwayGoals:\n        if (minimumXG !== 0 && XGDiffBetweenTeamsHomePerspective < minimumXG) {\n          match.omit = true;\n        }\n        if (\n          minimumLast6 !== 0 &&\n          last10PointDiffHomePerspective < minimumLast6\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGDHorA !== 0 &&\n          match.goalDiffHomeOrAwayComparison < minimumGDHorA\n        ) {\n          match.omit = true;\n        }\n        if (minimumGD !== 0 && match.goalDifferenceComparison < minimumGD) {\n          match.omit = true;\n        }\n        break;\n      case finalHomeGoals < finalAwayGoals:\n        if (minimumXG !== 0 && XGDiffBetweenTeamsAwayPerspective < minimumXG) {\n          match.omit = true;\n        }\n        if (\n          minimumLast6 !== 0 &&\n          last6PointDiffAwayPerspective < minimumLast6\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGDHorA !== 0 &&\n          Math.abs(match.goalDiffHomeOrAwayComparison) < minimumGDHorA\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGD !== 0 &&\n          Math.abs(match.goalDifferenceComparison) < minimumGD\n        ) {\n          match.omit = true;\n        }\n        break;\n      case finalHomeGoals === finalAwayGoals:\n        if (\n          minimumXG !== 0 &&\n          Math.abs(XGDiffBetweenTeamsHomePerspective) < minimumXG\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumLast6 !== 0 &&\n          last10PointDiffHomePerspective < minimumLast6\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGDHorA !== 0 &&\n          Math.abs(match.goalDiffHomeOrAwayComparison) < minimumGDHorA\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGD !== 0 &&\n          Math.abs(match.goalDifferenceComparison) < minimumGD\n        ) {\n          match.omit = true;\n        }\n        break;\n      default:\n        break;\n    }\n\n    if (\n      (match.game_week < 5 && match.game_week > 0) ||\n      match.omit === true\n      // match.game_week < 3 &&\n    ) {\n      finalHomeGoals = \"-\";\n      finalAwayGoals = \"-\";\n      match.status = \"notEnoughData\";\n    }\n\n    return [\n      finalHomeGoals,\n      finalAwayGoals,\n      rawFinalHomeGoals,\n      rawFinalAwayGoals,\n    ];\n  } else {\n    finalHomeGoals = \"\";\n    finalAwayGoals = \"\";\n    rawFinalHomeGoals = \"\";\n    rawFinalAwayGoals = \"\";\n    match.status = \"notEnoughData\";\n    match.profit = 0;\n  }\n\n  return [finalHomeGoals, finalAwayGoals, rawFinalHomeGoals, rawFinalAwayGoals];\n}\n\nlet specificLeagueResults = {}; // Initialize outside the function to persist data\n\nasync function getSuccessMeasure(fixtures) {\n  let sumProfit = 0;\n  let investment = 0;\n  let exactScores = 0;\n  let successCount = 0;\n  let profit = 0;\n  let netProfit = 0;\n\n  for (let i = 0; i < fixtures.length; i++) {\n    if (\n      fixtures[i].status === \"complete\" &&\n      fixtures[i].hasOwnProperty(\"prediction\") &&\n      fixtures[i].omit !== true\n    ) {\n      sumProfit += fixtures[i].profit;\n      investment += 1;\n      netProfit = (sumProfit - investment).toFixed(2);\n      profit = parseFloat(netProfit);\n\n      if (fixtures[i].exactScore === true) {\n        exactScores += 1;\n      }\n      if (fixtures[i].predictionOutcome === \"Won\") {\n        successCount += 1;\n      }\n\n      // Handle league-specific results\n      const leagueName = fixtures[i].leagueDesc || \"Unknown League\";\n\n      if (!specificLeagueResults[leagueName]) {\n        specificLeagueResults[leagueName] = {\n          totalProfit: 0,\n          totalInvestment: 0,\n          totalROI: 0,\n          exactScores: 0,\n          successCount: 0,\n        };\n      }\n\n      // Update the league-specific results\n      const league = specificLeagueResults[leagueName];\n      league.totalProfit += fixtures[i].profit;\n      league.totalInvestment += 1;\n      league.exactScores += fixtures[i].exactScore ? 1 : 0;\n      league.successCount += fixtures[i].predictionOutcome === \"Won\" ? 1 : 0;\n\n      // Calculate ROI for the league\n      const netLeagueProfit = league.totalProfit - league.totalInvestment;\n      league.totalROI = (\n        (netLeagueProfit / league.totalInvestment) *\n        100\n      ).toFixed(2);\n    }\n  }\n\n  // Update cumulative totals\n  totalInvestment += investment;\n  totalProfit += profit;\n  const ROI = (profit / investment) * 100;\n  totalROI = (totalProfit / totalInvestment) * 100;\n\n  console.log(`Total Investment: ${totalInvestment}`);\n  console.log(`Total Profit: ${totalProfit}`);\n  console.log(typeof totalProfit);\n  console.log(`Total Investment: ${totalInvestment}`);\n  console.log(`Total ROI: ${totalROI}`);\n  console.log(typeof totalROI);\n\n  let isPaid;\n  if (userDetail) {\n    isPaid = userDetail.isPaid;\n  }\n  console.log(isPaid);\n  if (investment > 0 && isPaid) {\n    ReactDOM.render(\n      <Fragment>\n        <h3 className={\"SuccessMeasureText\"}>\n          ROI for all {investment} W/D/W outcomes: {ROI >= 0 ? \"+\" : \" \"}{\" \"}\n          {ROI.toFixed(2)}%\n        </h3>\n        <p>{`Correct W/D/W predictions: ${successCount} (${(\n          (successCount / investment) *\n          100\n        ).toFixed(1)}%)`}</p>\n        <p>{`Exact scores predicted: ${exactScores} (${(\n          (exactScores / investment) *\n          100\n        ).toFixed(1)}%)`}</p>\n        <p className=\"SuccessMeasureText\">\n          Cumulative ROI for all {totalInvestment} match outcomes:{\" \"}\n          {totalROI >= 0 ? \"+\" : \"\"}\n          {totalROI.toFixed(2)}%\n        </p>\n        <CollapsableStats buttonText=\"ROI by League\">\n          {Object.entries(specificLeagueResults)\n            .sort(([, a], [, b]) => b.totalROI - a.totalROI) // Sort by ROI in descending order\n            .map(([leagueName, league]) => {\n              return (\n                <div className=\"SuccessMeasure\" key={leagueName}>\n                  <h3\n                    className={`${\n                      league.totalROI >= 0\n                        ? \"ProfitableLeague\"\n                        : \"NonProfitableLeague\"\n                    }`}\n                  >\n                    {leagueName}: ROI {league.totalROI >= 0 ? \"+\" : \" \"}\n                    {league.totalROI}%\n                  </h3>\n                  <p>\n                    Successful Predictions: {league.successCount} /{\" \"}\n                    {specificLeagueResults[leagueName].totalInvestment} :{\" \"}\n                    {(\n                      (league.successCount /\n                        specificLeagueResults[leagueName].totalInvestment) *\n                      100\n                    ).toFixed(2)}\n                    %\n                  </p>\n                  <p>\n                    Exact Scores: {league.exactScores} /{\" \"}\n                    {specificLeagueResults[leagueName].totalInvestment} :{\" \"}\n                    {(\n                      (league.exactScores /\n                        specificLeagueResults[leagueName].totalInvestment) *\n                      100\n                    ).toFixed(2)}\n                  </p>\n                </div>\n              );\n            })}\n        </CollapsableStats>\n      </Fragment>,\n      document.getElementById(\"successMeasure2\")\n    );\n  } else if (!isPaid) {\n    ReactDOM.render(\n      <Fragment>\n        <p>{`Correct W/D/W predictions: ${successCount} / ${investment} (${(\n          (successCount / investment) *\n          100\n        ).toFixed(1)}%)`}</p>\n        <p>Full ROI stats available when fixtures are uncapped</p>\n      </Fragment>,\n      document.getElementById(\"successMeasure2\")\n    );\n  } else {\n    return;\n  }\n}\n\n// async function getAISuccessMeasure(fixtures) {\n//   let sumProfit = 0;\n//   let investment = 0;\n//   let exactScores = 0;\n//   let successCount = 0;\n//   let profit = 0;\n//   let netProfit = 0;\n\n//   for (let i = 0; i < fixtures.length; i++) {\n//     if (\n//       fixtures[i].status === \"complete\" &&\n//       fixtures[i].hasOwnProperty(\"AIprediction\") &&\n//       fixtures[i].omit !== true\n//     ) {\n//       sumProfit += fixtures[i].profit;\n//       investment += 1;\n//       netProfit = (sumProfit - investment).toFixed(2);\n//       profit = parseFloat(netProfit);\n\n//       if (fixtures[i].exactScore === true) {\n//         exactScores += 1;\n//       }\n//       if (fixtures[i].predictionOutcome === \"Won\") {\n//         successCount += 1;\n//       }\n//     }\n//   }\n//   console.log(`AI Profit / loss = ${profit}`)\n//   console.log(`AI exact scores = ${exactScores}`)\n\n// }\n\nexport var tips = [];\nexport var allTips = [];\nlet allTipsSorted = [];\nvar newArray = [];\nvar bestBets = [];\nvar price;\nvar Over25Tips = [];\nvar XGDiffTips = [];\nvar rollingDiffTips = [];\nvar dangerousAttacksDiffTips = [];\nvar pointsDiffTips = [];\nvar combinations;\nvar exoticArray = [];\nvar gamesInExotic;\nvar minimumExotic;\nvar exoticStake;\nvar exoticString;\nvar bttsArray = [];\nvar accumulatedOdds = 1;\nlet predictions = [];\n\nexport async function getNewTips(array) {\n  // allTips = [];\n  newArray = [];\n  accumulatedOdds = 1;\n\n  if (array.length > 1 && incrementValue > 0) {\n    array.forEach((tip) => {\n      if (\n        array.indexOf(tip) < incrementValue\n        // tip.goalDifferential >= incrementValue && tip.comparisonScore > 0\n      ) {\n        newArray.push(tip);\n        accumulatedOdds = parseFloat(accumulatedOdds) * parseFloat(tip.rawOdds);\n      }\n    });\n  }\n  await renderTips(newArray);\n}\n\nexport async function getScorePrediction(day, mocked) {\n  let mock = mocked;\n  clicked = true;\n  tips = [];\n  bestBets = [];\n  // price = 0\n  bttsArray = [];\n  Over25Tips = [];\n  XGDiffTips = [];\n  pointsDiffTips = [];\n  rollingDiffTips = [];\n  dangerousAttacksDiffTips = [];\n  allTips = [];\n\n  let index = 2;\n  let divider = 10;\n\n  ReactDOM.render(<div></div>, document.getElementById(\"GeneratePredictions\"));\n\n  await Promise.all(\n    matches.map(async (match) => {\n      // if there are no stored predictions, calculate them based on live data\n      if (match) {\n        switch (true) {\n          case match.status === \"canceled\":\n            match.goalsA = \"P\";\n            match.goalsB = \"P\";\n            match.completeData = false;\n            await calculateScore(match, index, divider, false);\n            break;\n          case match.leagueID === 6935 ||\n            match.leagueID === 7061 ||\n            (match.game_week < 3 && match.game_week !== 0):\n            match.goalsA = \"x\";\n            match.goalsB = \"x\";\n            match.completeData = false;\n            await calculateScore(match, index, divider, true);\n            break;\n          default:\n            [\n              match.goalsA,\n              match.goalsB,\n              match.unroundedGoalsA,\n              match.unroundedGoalsB,\n              match.completeData = true,\n            ] = await calculateScore(match, index, divider, true);\n            break;\n        }\n      } else {\n        [\n          match.goalsA,\n          match.goalsB,\n          match.unroundedGoalsA,\n          match.unroundedGoalsB,\n        ] = await calculateScore(match, index, divider, true);\n      }\n\n      await getBTTSPotential(\n        match,\n        match.goalsA,\n        match.goalsB,\n        match.directnessRatingHome,\n        match.directnessRatingAway\n      );\n\n      let predictionObject;\n      let Over25PredictionObject;\n      let XGPredictionObject;\n      let pointsDiffObject;\n      let rollingDiffObject;\n      let dangerousAttacksDiffObject;\n\n      if (match.status === \"complete\" && match.prediction) {\n        match.outcomeSymbol =\n          match.predictionOutcome === \"Won\" ? \"\\u2714\" : \"\\u2718\";\n        match.over25PredictionOutcomeSymbol =\n          match.over25PredictionOutcome === \"Won\" ? \"\\u2714\" : \"\\u2718\";\n        match.bttsOutcomeSymbol =\n          match.bttsOutcome === \"bttsWon\" ? \"\\u2714\" : \"\\u2718\";\n      } else {\n        match.outcomeSymbol = \"\";\n        match.over25PredictionOutcomeSymbol = \"\";\n        match.bttsOutcomeSymbol = \"\";\n      }\n\n      //STICK\n\n      if (\n        match.unroundedGoalsA - match.unroundedGoalsB > 0.65 &&\n        match.homeOdds !== 0 &&\n        match.fractionHome !== \"N/A\" &&\n        match.includeInMultis !== false &&\n        match.omit !== true\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.status !== \"notEnoughData\" &&\n          match.homeOdds < 3\n        ) {\n          predictionObject = {\n            team: `${match.homeTeam} to win`,\n            game:\n              match.status === \"complete\"\n                ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n                : match.game,\n            odds: match.fractionHome,\n            rawOdds: match.homeOdds,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            outcome: match.predictionOutcome,\n            outcomeSymbol: match.outcomeSymbol,\n            goalDifferential: parseFloat(\n              await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n            ),\n            experimentalCalc: (\n              (match.unroundedGoalsA - match.unroundedGoalsB) *\n              Math.abs(match.teamComparisonScore)\n            ).toFixed(2),\n            XGdifferentialValue: parseFloat(match.XGdifferentialValue),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formHome.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n\n            if (\n              match.unroundedGoalsA - match.unroundedGoalsB >\n              incrementValue\n            ) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      } else if (\n        match.unroundedGoalsB - match.unroundedGoalsA > 1.75 &&\n        match.awayOdds !== 0 &&\n        match.fractionAway !== \"N/A\" &&\n        match.includeInMultis !== false &&\n        match.omit !== true\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.status !== \"notEnoughData\" &&\n          match.awayOdds < 3.5\n        ) {\n          predictionObject = {\n            team: `${match.awayTeam} to win`,\n            game:\n              match.status === \"complete\"\n                ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n                : match.game,\n            rawOdds: match.awayOdds,\n            odds: match.fractionAway,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            outcome: match.predictionOutcome,\n            outcomeSymbol: match.outcomeSymbol,\n            goalDifferential:\n              parseFloat(\n                await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n              ) - 1,\n            experimentalCalc: (\n              (match.unroundedGoalsB - match.unroundedGoalsA) *\n              Math.abs(match.teamComparisonScore)\n            ).toFixed(2),\n            XGdifferentialValue: parseFloat(match.XGdifferentialValue),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formAway.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n            if (match.unroundedGoalsB - match.unroundedGoalsA > 2) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      }\n\n      if (\n        match.btts === true &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\" &&\n        match.status !== \"notEnoughData\"\n      ) {\n        bttsArray.push(match);\n      }\n      if (\n        match.unroundedGoalsA + match.unroundedGoalsB > 4 &&\n        match.goalsA + match.goalsB > 2 &&\n        match.GoalsInGamesAverageHome > 3 &&\n        match.GoalsInGamesAverageAway > 3\n      ) {\n        Over25PredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: match.homeTeam,\n          decimalOdds: match.homeDoubleChance,\n          rawOdds: match.over25Odds,\n          odds: match.over25Odds,\n          comparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.over25PredictionOutcomeSymbol,\n          doubleChanceOutcome: match.over25PredictionOutcome,\n          goalTotalUnrounded: match.unroundedGoalsA + match.unroundedGoalsB,\n        };\n        Over25Tips.push(Over25PredictionObject);\n      }\n\n      if (\n        match.XGdifferential === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        XGPredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          XGdifferentialValue: match.XGdifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        XGDiffTips.push(XGPredictionObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        XGPredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          XGdifferentialValue: match.XGdifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        XGDiffTips.push(XGPredictionObject);\n      }\n\n      if (\n        match.pointsDifferential === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        pointsDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          pointsDifferentialValue: match.pointsDifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        pointsDiffTips.push(pointsDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        pointsDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          pointsDifferentialValue: match.pointsDifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        pointsDiffTips.push(pointsDiffObject);\n      }\n\n      if (\n        match.rollingGoalDiff === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        rollingDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        rollingDiffTips.push(rollingDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        rollingDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        rollingDiffTips.push(rollingDiffObject);\n      }\n\n      if (\n        match.dangerousAttacksDiff === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        dangerousAttacksDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        dangerousAttacksDiffTips.push(dangerousAttacksDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        dangerousAttacksDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        dangerousAttacksDiffTips.push(dangerousAttacksDiffObject);\n      }\n\n      predictions.push(match);\n    })\n  );\n  ReactDOM.render(\n    <RenderAllFixtures matches={matches} result={true} bool={mock} />,\n    document.getElementById(\"FixtureContainer\")\n  );\n  await getSuccessMeasure(matches);\n  await getMultis();\n  await getNewTips(allTipsSorted);\n\n  // await renderTips();\n}\n\nasync function getMultis() {\n  // userTipList = await fetchUserTips()\n  // console.log(userTipList)\n\n  allTipsSorted = allTips.sort(function (a, b) {\n    return b.goalDifferential - a.goalDifferential;\n  });\n\n  bestBets.sort(function (a, b) {\n    if (a.goalDifferential === b.goalDifferential) {\n      return b.comparisonScore - a.comparisonScore;\n    } else {\n      return b.goalDifferential > a.goalDifferential ? 1 : -1;\n    }\n  });\n\n  bttsArray.sort(function (a, b) {\n    return b.combinedBTTS - a.combinedBTTS;\n  });\n\n  Over25Tips.sort(function (a, b) {\n    return b.goalTotalUnrounded - a.goalTotalUnrounded;\n  });\n\n  XGDiffTips.sort(function (a, b) {\n    return Math.abs(b.XGdifferentialValue) - Math.abs(a.XGdifferentialValue);\n  });\n\n  pointsDiffTips.sort(function (a, b) {\n    return (\n      Math.abs(b.pointsDifferentialValue) - Math.abs(a.pointsDifferentialValue)\n    );\n  });\n\n  rollingDiffTips.sort(function (a, b) {\n    return Math.abs(b.rollingGoalDiffValue) - Math.abs(a.rollingGoalDiffValue);\n  });\n\n  dangerousAttacksDiffTips.sort(function (a, b) {\n    return (\n      Math.abs(b.dangerousAttacksDiffValue) -\n      Math.abs(a.dangerousAttacksDiffValue)\n    );\n  });\n\n  exoticArray = [];\n  gamesInExotic = 0;\n  exoticStake = 0;\n  exoticString = \"\";\n\n  switch (true) {\n    case allTips.length >= 10:\n      for (let i = 0; i < 10; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 10;\n      minimumExotic = 8;\n      exoticStake = 0.1;\n      exoticString = \"45 8-folds, 10 9-folds and 1 10-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 9:\n      for (let i = 0; i < 9; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 9;\n      minimumExotic = 7;\n      exoticStake = 0.1;\n      exoticString = \"36 7-folds, 9 8-folds and 1 9-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 8:\n      for (let i = 0; i < 8; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 8;\n      minimumExotic = 6;\n      exoticStake = 0.1;\n      exoticString = \"28 6-folds, 8 7-folds and 1 8-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 7:\n      for (let i = 0; i < 7; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 7;\n      minimumExotic = 6;\n      exoticStake = 1;\n      exoticString = \"7 6-folds and 1 7-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 6:\n      for (let i = 0; i < 6; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 6;\n      minimumExotic = 5;\n      exoticStake = 1;\n      exoticString = \"6 5-folds and 1 6-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 5:\n      for (let i = 0; i < 5; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 5;\n      minimumExotic = 4;\n      exoticStake = 1;\n      exoticString = \"5 4-folds and 1 5-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case Over25Tips.length >= 4:\n      for (let i = 0; i < 4; i++) {\n        let game = Over25Tips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 4;\n      minimumExotic = 3;\n      exoticStake = 1;\n      exoticString = \"4 3-folds and 1 4-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    default:\n      break;\n  }\n}\n\nexport function getAccumulatorPrice(priceArray) {\n  var result = 1;\n  for (var i = 0; i < priceArray.length; i++)\n    result = result * priceArray[i].rawOdds;\n\n  return result;\n}\n\nexport function getCoverBetMaxReturns(priceArray, minAccSize, stake) {\n  var total = 0;\n  combinations = 0;\n\n  for (var i = minAccSize; i <= priceArray.length; i++) {\n    var perms = getUniquePermutations(priceArray, i);\n    combinations = combinations + perms.length;\n\n    for (var j = 0; j < perms.length; j++)\n      total += getAccumulatorPrice(perms[j]) * stake;\n  }\n  return parseFloat(total.toFixed(2));\n}\n\nfunction getUniquePermutations(arr, permLength) {\n  if (arr.length <= permLength) return [arr];\n\n  var permutations = [];\n  var newArr = [];\n\n  newArr = arr.slice(0);\n\n  for (var i = 0; i < arr.length; i++) {\n    newArr = arr.slice(0);\n    newArr.splice(i, 1);\n    permutations = twoDimArrayUnion(\n      permutations,\n      getUniquePermutations(newArr, permLength)\n    );\n  }\n  return permutations;\n}\n\nfunction twoDimArrayUnion(arr1, arr2) {\n  for (var i = 0; i < arr2.length; i++) {\n    var duplicate = false;\n\n    for (var j = 0; j < arr1.length; j++)\n      if (arr1[j].length === arr2[i].length)\n        for (var k = 0; k < arr1[j].length; k++)\n          if (arr1[j][k] !== arr2[i][k]) break;\n          else if (k === arr1[j].length - 1) duplicate = true;\n\n    if (!duplicate) arr1.push(arr2[i]);\n  }\n\n  return arr1;\n}\n\nfunction NewlineText(props) {\n  const text = props.text;\n  const newText = text.split(\"\\n\").map((str) => <p>{str}</p>);\n\n  return newText;\n}\n\nasync function renderTips() {\n  if (userDetail) {\n    paid = await checkUserPaidStatus(userDetail.uid);\n  } else {\n    paid = false;\n  }\n\n  console.log(paid);\n  if (newArray.length > 0) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a Multi\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <div className=\"BestPredictionsExplainer\">\n                  Add or remove a selection using the buttons below. Predictions\n                  are ordered by confidence in the outcome.\n                </div>\n                {newArray.map((tip) => (\n                  <li key={`${tip.game}acca`}>\n                    <div>\n                      {tip.team}: {tip.odds}{\" \"}\n                      <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                    </div>\n                    <div className=\"TipGame\">{tip.game}</div>\n                  </li>\n                ))}\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  No games fit the criteria\n                </h4>\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  }\n\n  if (exoticArray.length > 4) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Exotic of the Day\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  <NewlineText\n                    text={`${gamesInExotic} games: ${exoticString}\\nStake per multi: ${exoticStake} units - ${combinations} combinations\\nTotal stake: ${(\n                      exoticStake * combinations\n                    ).toFixed(2)} unit(s)`}\n                  />\n                  {`Potential winnings: ${price.toFixed(2)} units`}\n                </h4>\n                {exoticArray.map((tip) => (\n                  <li key={tip.team}>\n                    {tip.team}: {tip.odds}{\" \"}\n                    <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                    <div>{tip.game}</div>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Exotic of the day\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  Not enough games for this feature\n                </h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  }\n\n  if (Over25Tips.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Over 2.5 Goals Tips\"}\n            element={\n              <ul className=\"LongshotPredictions\" id=\"LongshotPredictions\">\n                <h4>Over 2.5 goals</h4>\n                {Over25Tips.map((tip) => (\n                  <li key={tip.team}>\n                    {tip.game} - Odds: {tip.odds}{\" \"}\n                    <span className={`${tip.doubleChanceOutcome}`}>\n                      {tip.outcomeSymbol}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Over 2.5 goals tips\"}\n            element={\n              <ul className=\"LongshotPredictions\" id=\"LongshotPredictions\">\n                <h4>No games fit the criteria</h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  }\n\n  if (bttsArray.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"BTTS Games\"}\n            element={\n              <ul className=\"BTTSGames\" id=\"BTTSGames\">\n                <h4>Games with highest chance of BTTS</h4>\n                {bttsArray.map((game) => (\n                  <li key={game.game}>\n                    {`${game.game} odds: ${game.bttsFraction}`}{\" \"}\n                    <span className={game.bttsOutcome}>\n                      {game.bttsOutcomeSymbol}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"BTTS games\"}\n            element={\n              <ul className=\"BTTSGames\" id=\"BTTSGames\">\n                <h4>No games fit the criteria</h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  }\n\n  ReactDOM.render(\n    <div>\n      <Collapsable\n        buttonText={\"XG Tips\"}\n        element={\n          <Slider\n            element={\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>Games with greatest XG Differentials</h4>\n                {paid ? (\n                  XGDiffTips.length > 0 ? (\n                    XGDiffTips.map((tip) => (\n                      <li key={tip.game}>\n                        {tip.game} | {tip.prediction} {tip.odds}{\" \"}\n                        <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                      </li>\n                    ))\n                  ) : (\n                    <li key=\"noGames\">\n                      Sorry, no games fit this criteria today\n                    </li>\n                  )\n                ) : (\n                  <li key=\"premiumOnly\">Premium members only</li>\n                )}\n              </ul>\n            }\n            element2={\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>\n                  Games with greatest points per game differentials (last 6)\n                </h4>\n                {paid ? (\n                  pointsDiffTips.length > 0 ? (\n                    pointsDiffTips.map((game) => (\n                      <li key={game.game}>\n                        {game.game} | {game.prediction} {game.odds}{\" \"}\n                        <span className={game.outcome}>\n                          {game.outcomeSymbol}\n                        </span>\n                      </li>\n                    ))\n                  ) : (\n                    <li key=\"noGames\">\n                      Sorry, no games fit this criteria today\n                    </li>\n                  )\n                ) : (\n                  <li key=\"premiumOnly\">Premium members only</li>\n                )}\n              </ul>\n            }\n            element3={\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>\n                  Games with greatest rolling goal difference differentials\n                </h4>\n                {paid ? (\n                  rollingDiffTips.length > 0 ? (\n                    rollingDiffTips.map((game) => (\n                      <li key={game.game}>\n                        {game.game} | {game.prediction} {game.odds}{\" \"}\n                        <span className={game.outcome}>\n                          {game.outcomeSymbol}\n                        </span>\n                      </li>\n                    ))\n                  ) : (\n                    <li key=\"noGames\">\n                      Sorry, no games fit this criteria today\n                    </li>\n                  )\n                ) : (\n                  <li key=\"premiumOnly\">Premium members only</li>\n                )}\n              </ul>\n            }\n            element4={\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>\n                  Games with greatest average dangerous attacks differentials\n                </h4>\n                {paid ? (\n                  dangerousAttacksDiffTips.length > 0 ? (\n                    dangerousAttacksDiffTips.map((game) => (\n                      <li key={game.game}>\n                        {game.game} | {game.prediction} {game.odds}{\" \"}\n                        <span className={game.outcome}>\n                          {game.outcomeSymbol}\n                        </span>\n                      </li>\n                    ))\n                  ) : (\n                    <li key=\"noGames\">\n                      Sorry, no games fit this criteria today\n                    </li>\n                  )\n                ) : (\n                  <li key=\"premiumOnly\">Premium members only</li>\n                )}\n              </ul>\n            }\n          ></Slider>\n        }\n      ></Collapsable>\n      {(minimumGD !== 0 ||\n        minimumXG !== 0 ||\n        minimumLast6 !== 0 ||\n        minimumGDHorA !== 0) && (\n        <div className=\"FiltersSelected\">\n          <h4>Filters selected:</h4>\n          <ul className=\"FiltersSelectedList\">\n            <li>Minimum goal difference spread: {minimumGD}</li>\n            <li>\n              Minimum goal difference spread (home or away only):{\" \"}\n              {minimumGDHorA}\n            </li>\n            <li>Minimum XG difference spread: {minimumXG}</li>\n            <li>Minimum PPG difference spread: {minimumLast6}</li>\n            <li>\n              Odds range: {rangeValue[0]} - {rangeValue[1]}\n            </li>\n          </ul>\n        </div>\n      )}\n    </div>,\n    document.getElementById(\"insights\")\n  );\n\n  ReactDOM.render(\n    <div>\n      <Fragment>\n        <UserTips />\n      </Fragment>\n    </div>,\n    document.getElementById(\"UserGeneratedTips\")\n  );\n\n  ReactDOM.render(\n    <Fragment>\n      <Collapsable\n        buttonText={\"Extras\"}\n        element={\n          <div>\n            <button\n              className=\"SecondaryButtons\"\n              onClick={() => {\n                window.open(\"https://www.xgtipping.com/#/bttsteams\");\n              }}\n            >\n              Both teams to score teams\n            </button>\n            <button\n              className=\"SecondaryButtons\"\n              onClick={() => {\n                window.open(\"https://www.xgtipping.com/#/bttsfixtures\");\n              }}\n              disabled={!paid}\n            >\n              Both teams to score fixtures\n            </button>\n            <button\n              className=\"SecondaryButtons\"\n              onClick={() => {\n                if (paid)\n                  window.open(\"https://www.xgtipping.com/#/fixtureshigh\");\n              }}\n              disabled={!paid}\n            >\n              Over 2.5 goals fixtures\n            </button>\n            <button\n              className=\"SecondaryButtons\"\n              onClick={() => {\n                if (paid) window.open(\"https://www.xgtipping.com/#/o25\");\n              }}\n              disabled={!paid}\n            >\n              Highest scoring leagues\n            </button>\n            <button\n              className=\"SecondaryButtons\"\n              onClick={() => {\n                if (paid) window.open(\"https://www.xgtipping.com/#/u25\");\n              }}\n              disabled={!paid}\n            >\n              Lowest scoring leagues\n            </button>\n            <button\n              className=\"SecondaryButtons\"\n              onClick={() => {\n                if (paid) window.open(\"https://www.xgtipping.com/#/teamshigh\");\n              }}\n              disabled={!paid}\n            >\n              Highest scoring teams\n            </button>\n          </div>\n        }\n      />\n    </Fragment>,\n    document.getElementById(\"highLowLeagues\")\n  );\n}\n","import React, { useState, useEffect } from 'react';\n\nconst TeamOfTheSeason = () => {\n  const [roundId, setRoundId] = useState(null);\n  const seasonId = 61627; // Update this dynamically if needed\n  const baseUrl = \"https://widgets.sofascore.com/embed/unique-tournament/17\";\n\n  useEffect(() => {\n    const fetchRoundId = async () => {\n      try {\n        \n        // Fetch rounds data to get the correct round ID\n        const roundsResponse = await fetch(\n          `https://www.sofascore.com/api/v1/unique-tournament/17/season/${seasonId}/team-of-the-week/rounds`\n        );\n        const roundsData = await roundsResponse.json();\n\n        // Get the round ID from the first round in the data\n        if (roundsData.rounds?.length > 0) {\n          const firstRoundId = roundsData.rounds[0]?.id; // Grabbing the id from index 0\n          setRoundId(firstRoundId); // Set the roundId state\n        } else {\n          console.error(\"No rounds data found.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching SofaScore API:\", error);\n      }\n    };\n\n    fetchRoundId();\n  }, [seasonId]);\n\n  return (\n    <div className='TeamOfTheSeason'>\n      {roundId ? (\n        <iframe\n          width=\"100%\"\n          height=\"523\"\n          // style={{ display: 'block', maxWidth: '700px' }}\n          src={`${baseUrl}/season/${seasonId}/round/${roundId}/teamOfTheWeek?widgetBackground=Gray&showCompetitionLogo=true&widgetTitle=Premier%20League&v=2`}\n          frameBorder=\"0\"\n          scrolling=\"no\"\n          title=\"SofaScore Team of the Week\"\n        ></iframe>\n      ) : (\n        <p>Loading Team of the Week...</p>\n      )}\n      <div style={{ fontSize: '12px', fontFamily: 'Arial, sans-serif', textAlign: 'left' }}>\n        <a target=\"_blank\" href=\"https://www.sofascore.com/\" rel=\"noreferrer\">\n          Team of the Week provided by SofaScore\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default TeamOfTheSeason;\n","import React, { useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport TeamOfTheWeek from \"../components/TeamOfTheWeek\";\nimport TeamOfTheSeason from \"../components/TeamOfTheSeason\";\n\nexport var toggleState = false;\nexport var setIsOff = false;\n\nconst upArrow = \"\\u{25B2}\";\n\nconst StyledTableCell2 = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"rgba(226, 226, 226, 1)\",\n    color: \"white\",\n    padding: \"0.35em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    textAlign: \"left\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    fontSize: \"1.9em\",\n    textAlign: \"left\",\n    fontFamily: \"inherit\",\n    padding: \"0.5em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"#030061\",\n  },\n}))(TableCell);\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"white\",\n    color: \"#030061\",\n    padding: \"0.5em\",\n    paddingTop: \"1em\",\n    paddingBottom: \"1em\",\n    textAlign: \"center\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    // backgroundColor: \"#030061\",\n    fontSize: \"1.9em\",\n    textAlign: \"center\",\n    fontFamily: \"inherit\",\n    padding: \"0.35em\",\n    paddingTop: \"1em\",\n    paddingBottom: \"1em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"#030061\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#rgba(226, 226, 226, 0.424)\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#rgba(226, 226, 226, 1)\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\nfunction styleForm(formIndicator) {\n  let className;\n  if (formIndicator === \"W\") {\n    className = \"winLeague\";\n  } else if (formIndicator === \"D\") {\n    className = \"drawLeague\";\n  } else if (formIndicator === \"L\") {\n    className = \"lossLeague\";\n  }\n  return className;\n}\n\nexport default function LeagueTable(props) {\n  [toggleState, setIsOff] = useState(false);\n\n  let rows = props.Teams.map((team, i) => (\n    <StyledTableRow key={`${props.Key}row${i}`}>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${i + 1}`}\n      </StyledTableCell>\n      <StyledTableCell2 component=\"th\" scope=\"row\" style={{ width: \"15em\" }}>\n        {`${team.Name}`}\n      </StyledTableCell2>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Played}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Wins}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Draws}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Losses}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.For}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Against}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.GoalDifference}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Points}`}\n      </StyledTableCell>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ textAlign: \"center\" }}\n      >\n        <span className={styleForm(team.Form[0])}>\n          {team.Form[0] !== undefined ? team.Form[0] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[1])}>\n          {team.Form[1] !== undefined ? team.Form[1] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[2])}>\n          {team.Form[2] !== undefined ? team.Form[2] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[3])}>\n          {team.Form[3] !== undefined ? team.Form[3] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[4])}>\n          {team.Form[4] !== undefined ? team.Form[4] : \"\"}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  ));\n\n  const leagueResults = [];\n  let singleResult;\n  if (props.Results) {\n    props.Results.forEach((result) => {\n      singleResult = (\n        <div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_xg}</span>\n            <span className=\"column\">XG</span>\n            <span className=\"column\">{result.team_b_xg}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shots}</span>\n            <span className=\"column\">Shots</span>\n            <span className=\"column\">{result.team_b_shots}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shotsOnTarget}</span>\n            <span className=\"column\">SOT</span>\n            <span className=\"column\">{result.team_b_shotsOnTarget}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_dangerous_attacks}</span>\n            <span className=\"column\">Dangerous Attacks</span>\n            <span className=\"column\">{result.team_b_dangerous_attacks}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_possession}%</span>\n            <span className=\"column\">Possession</span>\n            <span className=\"column\">{result.team_b_possession}%</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_red_cards}</span>\n            <span className=\"column\">Red cards</span>\n            <span className=\"column\">{result.team_b_red_cards}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.odds_ft_1}</span>\n            <span className=\"column\">Odds (pre-match)</span>\n            <span className=\"column\">{result.odds_ft_2}</span>\n          </div>\n        </div>\n      );\n\n      leagueResults.push(\n        <Collapsable\n          classNameButton=\"ResultButton\"\n          buttonText={\n            <div className=\"ResultRowOverview\">\n              <div className=\"columnOverviewHome\">{result.home_name}</div>\n              <span className=\"columnOverviewScore\">\n                {result.homeGoalCount} : {result.awayGoalCount}\n              </span>\n              <div className=\"columnOverviewAway\">{result.away_name}</div>\n            </div>\n          }\n          element={singleResult}\n        />\n      );\n    });\n  }\n\n  const leagueResultsOlder = [];\n  if (props.LastWeeksResults) {\n    props.LastWeeksResults.forEach((result) => {\n      singleResult = (\n        <div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_xg}</span>\n            <span className=\"column\">XG</span>\n            <span className=\"column\">{result.team_b_xg}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shots}</span>\n            <span className=\"column\">Shots</span>\n            <span className=\"column\">{result.team_b_shots}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shotsOnTarget}</span>\n            <span className=\"column\">SOT</span>\n            <span className=\"column\">{result.team_b_shotsOnTarget}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_dangerous_attacks}</span>\n            <span className=\"column\">Dangerous Attacks</span>\n            <span className=\"column\">{result.team_b_dangerous_attacks}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_possession}</span>\n            <span className=\"column\">Possession</span>\n            <span className=\"column\">{result.team_b_possession}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_red_cards}</span>\n            <span className=\"column\">Red cards</span>\n            <span className=\"column\">{result.team_b_red_cards}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.odds_ft_1}</span>\n            <span className=\"column\">Odds (pre-match)</span>\n            <span className=\"column\">{result.odds_ft_2}</span>\n          </div>\n        </div>\n      );\n\n      leagueResultsOlder.push(\n        <Collapsable\n          classNameButton=\"ResultButton\"\n          buttonText={\n            <div className=\"ResultRowOverview\">\n              <div className=\"columnOverviewHome\">{result.home_name}</div>\n              <span className=\"columnOverviewScore\">\n                {result.homeGoalCount} : {result.awayGoalCount}\n              </span>\n              <div className=\"columnOverviewAway\">{result.away_name}</div>\n            </div>\n          }\n          element={singleResult}\n        />\n      );\n    });\n  }\n\n  function getTopScorersTeam(id) {\n    let found = props.Teams.find((team) => team.ID === id);\n    return found.Name;\n  }\n\n  async function sorted(league, value, order) {\n    console.log(league)\n    console.log(value)\n    console.log(order)\n\n    let sortedByForm;\n    if (order === \"desc\") {\n      sortedByForm = league.sort((a, b) => b[value] - a[value]);\n    } else {\n      sortedByForm = league.sort((a, b) => a[value] - b[value]);\n    }\n    setIsOff(!toggleState);\n    console.log(sortedByForm)\n    return sortedByForm;\n  }\n\n  if (\n    // props.GamesPlayed > 3 &&\n    props.Teams[0].LeagueID !== 13973 && //MLS\n    props.Teams[0].LeagueID !== 12933 && //UKNorth&South\n    props.Teams[0].LeagueID !== 12327 && //Europa\n    props.Teams[0].LeagueID !== 12321 //ChampionsLeague\n  ) {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table\n            className=\"Table\"\n            aria-label=\"customized table\"\n            key={props.Key}\n            style={{ marginTop: \"2em\", marginBottom: \"1em\" }}\n          >\n            <TableHead>\n              <TableRow>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"Points\", \"desc\")}\n                  >\n                    Pts {upArrow}\n                  </button>\n                </td>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"LastXPoints\", \"desc\")}\n                  >\n                    Last 5 {upArrow}\n                  </button>\n                </td>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n          <h5>{`Results from last 2 weeks`}</h5>\n          <div className=\"ResultsList\" id=\"ResultsList\">\n            <ul>{leagueResults}</ul>\n          </div>\n          {props.Teams[0].LeagueID === 12325 && <TeamOfTheSeason />}{\" \"}\n          {/* Conditional render */}\n          <div className=\"LeagueStatisticsHeader\">League Statistics</div>\n          <div className=\"LeagueStatistics\">\n            <ul className=\"LeagueStatsColumn\">\n              <li>Average home goals: {props.Stats.seasonAVG_home}</li>\n              <li>Average away goals: {props.Stats.seasonAVG_away}</li>\n              <li>BTTS: {props.Stats.seasonBTTSPercentage}%</li>\n              <li>\n                Over 0.5 goals: {props.Stats.seasonOver05Percentage_overall}%\n              </li>\n              <li>\n                Over 1.5 goals: {props.Stats.seasonOver15Percentage_overall}%\n              </li>\n              <li>\n                Over 2.5 goals: {props.Stats.seasonOver25Percentage_overall}%\n              </li>\n              <li>\n                Over 3.5 goals: {props.Stats.seasonOver35Percentage_overall}%\n              </li>\n              <li>\n                Over 4.5 goals: {props.Stats.seasonOver45Percentage_overall}%\n              </li>\n            </ul>\n            <ul className=\"LeagueStatsColumn\">\n              <li>\n                Over 7.5 corners: {props.Stats.over75CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 8.5 corners: {props.Stats.over85CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 9.5 corners: {props.Stats.over95CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 10.5 corners:{\" \"}\n                {props.Stats.over105CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 11.5 corners:{\" \"}\n                {props.Stats.over115CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 12.5 corners:{\" \"}\n                {props.Stats.over125CornersPercentage_overall}%\n              </li>\n              <li>Corners average: {props.Stats.cornersAVG_overall}</li>\n              <li>Cards average: {props.Stats.cardsAVG_overall}</li>\n            </ul>\n            <ul className=\"TopScorersColumn\">\n              <h4>Top scorers</h4>\n              <li>\n                {props.Stats.top_scorers[0].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[0].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[0].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[1].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[1].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[1].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[2].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[2].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[2].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[3].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[3].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[3].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[4].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[4].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[4].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[5].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[5].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[5].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[6].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[6].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[6].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[7].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[7].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[7].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[8].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[8].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[8].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[9].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[9].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[9].goals_overall}\n              </li>\n            </ul>\n          </div>\n        </TableContainer>\n      );\n    }\n  } else if (props.Teams[0].LeagueID === 4340) {\n    return null;\n  } else if (\n    props.Teams[0].LeagueID === 13973 || //MLS\n    props.Teams[0].LeagueID === 12933 || //UKNorth&South\n    props.Teams[0].LeagueID === 12327 || //Europa\n    props.Teams[0].LeagueID === 12321 //ChampionsLeague\n  ) {\n\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <>\n          <h2 className=\"DivisionName\">{props.Division}</h2>\n          <TableContainer component={Paper} className=\"StatsTable\">\n            <Table\n              className=\"Table\"\n              aria-label=\"customized table\"\n              key={props.Key}\n              style={{ marginTop: \"2em\", marginBottom: \"1em\" }}\n            >\n              <TableHead>\n                <TableRow>\n                  <StyledTableCell></StyledTableCell>\n                  <StyledTableCell></StyledTableCell>\n                  <StyledTableCell>Pld</StyledTableCell>\n                  <StyledTableCell>W</StyledTableCell>\n                  <StyledTableCell>D</StyledTableCell>\n                  <StyledTableCell>L</StyledTableCell>\n                  <StyledTableCell>GF</StyledTableCell>\n                  <StyledTableCell>GA</StyledTableCell>\n                  <StyledTableCell>GD</StyledTableCell>\n                  <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"Points\", \"desc\")}\n                  >\n                    Pts {upArrow}\n                  </button>\n                </td>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"LastXPoints\", \"desc\")}\n                  >\n                    Last 5 {upArrow}\n                  </button>\n                </td>\n                </TableRow>\n              </TableHead>\n              <TableBody>{rows}</TableBody>\n            </Table>\n          </TableContainer>\n        </>\n      );\n    }\n  }\n}\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { orderedLeagues } from \"../App\";\nimport { getForm } from \"./getForm\";\nimport { Fixture } from \"../components/Fixture\";\nimport { Button } from \"../components/Button\";\nimport { Slide } from \"../components/Slider\";\nimport { getScorePrediction } from \"../logic/getScorePredictions\";\nimport { ThreeDots } from \"react-loading-icons\";\nimport { selectedOdds } from \"../components/OddsRadio\";\nimport LeagueTable from \"../components/LeagueTable\";\nimport { getPointsFromLastX } from \"../logic/getScorePredictions\";\nimport SlideDiff from \"../components/SliderDiff\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { userDetail } from \"./authProvider\";\n\nvar oddslib = require(\"oddslib\");\n\n// require(\"dotenv\").config();\n\nvar fixtureResponse;\nvar fixtureArray = [];\nexport var matches = [];\nexport var resultedMatches = [];\nexport let arrayOfGames = [];\n\nvar league;\nvar leagueID;\nvar leagueGames = [];\nexport var leagueArray = [];\nvar leagueIdArray = [];\nexport var leagueStatsArray = [];\nexport let leagueInstance;\nexport let groupInstance;\nexport let allLeagueResultsArrayOfObjects = [];\nvar lastThreeFormHome;\nvar lastThreeFormAway;\nvar lastFiveFormHome;\nvar lastFiveFormAway;\nvar lastSixFormHome;\nvar lastSixFormAway;\nvar lastTenFormHome;\nvar lastTenFormAway;\nvar leagueOrAll;\nvar formRunHome;\nvar formRunAway;\nlet WDLinLeagueHome;\nlet WDLinLeagueAway;\nlet HomeAverageGoals;\nlet homeAverageGoals;\nlet HomeAverageConceded;\nlet homeAverageConceded;\nlet AwayAverageGoals;\nlet awayAverageGoals;\nlet AwayAverageConceded;\nlet awayAverageConceded;\nlet paid = false;\n\n// export var [currentDay, month, year] = new Date()\n//   .toLocaleDateString(\"en-US\", { timeZone: \"Europe/London\" })\n//   .split(\"/\");\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nexport let allForm = [];\nexport let tableArray = [];\nexport let bespokeLeagueArray = [];\ngroupInstance = [];\nleagueInstance = [];\n\nasync function convertTimestamp(timestamp) {\n  let newDate = new Date(timestamp);\n  let [day, month, year] = newDate.toLocaleDateString(\"en-US\").split(\"/\");\n\n  let converted = `${year}-${day}-${month}`;\n\n  return converted;\n}\n\nexport async function generateTables(a, leagueIdArray, allResults) {\n  // leagueIdArray = [];\n  tableArray = [];\n  bespokeLeagueArray = [];\n  let i = 0;\n  leagueArray.forEach(function (league) {\n    let currentLeagueId = leagueIdArray[i];\n    i++;\n    leagueInstance = [];\n    //Skip MLS which has a weird format\n    if (\n      !league.data.specific_tables[0].groups &&\n      currentLeagueId !== 13973 &&\n      currentLeagueId !== 12933 &&\n      league.data.specific_tables[0].table\n    ) {\n      for (\n        let index = 0;\n        index < league.data.specific_tables[0].table.length;\n        index++\n      ) {\n        let currentTeam = league.data.specific_tables[0].table[index];\n        let last5;\n        if (currentTeam.wdl_record.length < 5) {\n          last5 = currentTeam.wdl_record\n            .slice(`-${currentTeam.wdl_record.length}`)\n            .toUpperCase();\n        } else {\n          last5 = currentTeam.wdl_record.slice(-5).toUpperCase();\n        }\n\n        const team = {\n          LeagueID: currentLeagueId,\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          ID: currentTeam.id,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: last5,\n          LastXPoints: getPointsFromLastX(last5.split(\"\")),\n          Points: currentTeam.points,\n          wdl: currentTeam.wdl_record,\n          seasonGoals: currentTeam.seasonGoals,\n          seasonConceded: currentTeam.seasonConceded,\n        };\n        leagueInstance.push(team);\n      }\n      tableArray.push({ id: currentLeagueId, table: leagueInstance });\n    } else if (currentLeagueId === 13973 || currentLeagueId === 12933) {\n      // for (let x = 0; x < league.data.specific_tables[0].groups.length; x++) {\n      // for (\n      //   let index = 0;\n      //   index < league.data.specific_tables[0].groups[x].table.length;\n      //   index++\n      // )\n      let instances;\n\n      if (currentLeagueId === 13973) {\n        instances = league.data.specific_tables[0].groups;\n      } else if (currentLeagueId === 12933) {\n        instances = [\n          league.data.specific_tables[0],\n          league.data.specific_tables[1],\n        ];\n      }\n\n      instances.forEach((group) => {\n        leagueInstance = [];\n        for (let index = 0; index < group.table.length; index++) {\n          let currentTeam = group.table[index];\n          let last5;\n          if (currentTeam.wdl_record.length < 5) {\n            last5 = currentTeam.wdl_record\n              .slice(`-${currentTeam.wdl_record.length}`)\n              .toUpperCase();\n          } else {\n            last5 = currentTeam.wdl_record.slice(-5).toUpperCase();\n          }\n          const team = {\n            LeagueID: currentLeagueId,\n            Position: index + 1,\n            Name: currentTeam.cleanName,\n            ID: currentTeam.id,\n            Played: currentTeam.matchesPlayed,\n            Wins: currentTeam.seasonWins_overall,\n            Draws: currentTeam.seasonDraws_overall,\n            Losses: currentTeam.seasonLosses_overall,\n            For: currentTeam.seasonGoals,\n            Against:\n              currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n            GoalDifference: currentTeam.seasonGoalDifference,\n            Form: last5,\n            LastXPoints: getPointsFromLastX(last5.split(\"\")),\n            Points: currentTeam.points,\n            wdl: currentTeam.wdl_record,\n            seasonGoals: currentTeam.seasonGoals,\n            seasonConceded: currentTeam.seasonConceded,\n          };\n          leagueInstance.push(team);\n        }\n        bespokeLeagueArray.push({\n          id: currentLeagueId,\n          group: group.name ? group.name : group.round,\n          table: leagueInstance,\n        });\n      });\n    } else if (league.data.league_table === null) {\n      for (\n        let index = 0;\n        index < league.data.all_matches_table_overall.length;\n        index++\n      ) {\n        let currentTeam = league.data.all_matches_table_overall[index];\n        let last5 = \"N/A\";\n        const team = {\n          LeagueID: currentLeagueId,\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          ID: currentTeam.id,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: last5,\n          LastXPoints: getPointsFromLastX(last5.split(\"\")),\n          Points: currentTeam.points,\n          wdl: currentTeam.wdl_record,\n          seasonGoals: currentTeam.seasonGoals,\n          seasonConceded: currentTeam.seasonConceded,\n        };\n        leagueInstance.push(team);\n      }\n\n      tableArray.push({ id: currentLeagueId, table: leagueInstance });\n    }\n  });\n}\n\nexport async function renderTable(index, results, id) {\n  let league;\n  //World cup table rendering\n\n  // let mostRecentGame = results.fixtures.pop();\n  const nowInSeconds = Math.floor(Date.now() / 1000); // Current time in seconds\n  const twoWeeksAgo = nowInSeconds - 14 * 24 * 60 * 60; // Two week ago in seconds  console.log(oneWeekAgo)\n  // 1740576517073\n  // 1723230000\n  let mostRecentGames = results.fixtures.filter(\n    (result) => result.date_unix >= twoWeeksAgo\n  );\n\n  // let mostRecentGameweek = \"Latest\";\n\n  // const gameweeksResults = results.fixtures.filter(\n  //   (games) => games.game_week === mostRecentGame.game_week\n  // );\n\n  // const lastGameweeksResults = results.fixtures.filter(\n  //   (games) => games.game_week === mostRecentGameweek - 1\n  // );\n  // tableArray.concat(bespokeLeagueArray)\n\n  if (id !== 13973 && id !== 12933) {\n    const leagueTable = tableArray.filter((table) => table.id === id);\n\n    league = leagueTable[0].table;\n\n    let statistics;\n    let leagueStatistics = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}leagueStats/${id}`\n    );\n    await leagueStatistics.json().then((stats) => {\n      statistics = stats.data;\n    });\n\n    if (league !== undefined) {\n      ReactDOM.render(\n        <LeagueTable\n          Teams={league}\n          Id={id}\n          Stats={statistics}\n          Key={`League${index}`}\n          GamesPlayed={statistics.game_week}\n          Results={mostRecentGames}\n          // mostRecentGameweek={mostRecentGameweek}\n        />,\n        document.getElementById(`leagueName${id}`)\n      );\n    }\n  } else if (id === 13973 || id === 12933) {\n    const leagueTable = bespokeLeagueArray.filter((table) => table.id === id);\n\n    const leagueTable1 = leagueTable[0].table;\n    const leagueTable2 = leagueTable[1].table;\n    const divisionName1 = leagueTable[0].group;\n    const divisionName2 = leagueTable[1].group;\n\n    let statistics;\n    let leagueStatistics = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}leagueStats/${id}`\n    );\n    await leagueStatistics.json().then((stats) => {\n      statistics = stats.data;\n    });\n\n    if (leagueTable1 !== undefined && leagueTable2 !== undefined) {\n      ReactDOM.render(\n        <>\n          <LeagueTable\n            Teams={leagueTable1}\n            Stats={statistics}\n            Id={id}\n            Division={divisionName1}\n            Key={`League${index}${divisionName1}`}\n            GamesPlayed={statistics.game_week}\n            Results={mostRecentGames}\n          />\n          <LeagueTable\n            Teams={leagueTable2}\n            Division={divisionName2}\n            Stats={statistics}\n            Id={id}\n            Key={`League${index}${divisionName1}`}\n            GamesPlayed={statistics.game_week}\n            Results={mostRecentGames}\n          />\n        </>,\n        document.getElementById(`leagueName${id}`)\n      );\n    }\n  }\n}\n\nasync function createFixture(match, result, mockBool) {\n  let roundedHomeOdds;\n  let roundedAwayOdds;\n  let roundedBTTSOdds;\n  let homeFraction;\n  let awayFraction;\n  let bttsFraction;\n\n  if (selectedOdds === \"Fractional odds\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      roundedHomeOdds = (Math.round(match.homeOdds * 5) / 5).toFixed(1);\n      roundedAwayOdds = (Math.round(match.awayOdds * 5) / 5).toFixed(1);\n\n      if (roundedHomeOdds < 1.1) {\n        roundedHomeOdds = 1.1;\n      }\n      if (roundedAwayOdds < 1.1) {\n        roundedAwayOdds = 1.1;\n      }\n\n      if (match.homeOdds === 0.1 && match.awayOdds === 0.1) {\n        match.homeOdds = 3;\n        roundedHomeOdds = 3;\n        match.awayOdds = 3;\n        roundedAwayOdds = 3;\n      }\n\n      try {\n        homeFraction = oddslib\n          .from(\"decimal\", roundedHomeOdds)\n          .to(\"fractional\", { precision: 1 });\n        awayFraction = oddslib\n          .from(\"decimal\", roundedAwayOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      roundedBTTSOdds = (Math.round(match.bttsOdds * 5) / 5).toFixed(1);\n\n      if (roundedBTTSOdds < 1.1) {\n        roundedBTTSOdds = 1.1;\n      }\n\n      try {\n        bttsFraction = oddslib\n          .from(\"decimal\", roundedBTTSOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  } else if (selectedOdds === \"Decimal odds\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      homeFraction = match.homeOdds;\n      awayFraction = match.awayOdds;\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      bttsFraction = match.bttsOdds;\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  }\n\n  match.omit = false;\n  match.homeTeamWinsPercentage = match.homeTeamWinPercentage;\n  match.homeTeamLossesPercentage = match.homeTeamLossPercentage;\n  match.homeTeamDrawsPercentage = match.homeTeamDrawPercentage;\n\n  match.awayTeamWinsPercentage = match.awayTeamWinPercentage;\n  match.awayTeamLossesPercentage = match.awayTeamLossPercentage;\n  match.awayTeamDrawsPercentage = match.awayTeamDrawPercentage;\n  match.fractionHome = homeFraction;\n  match.fractionAway = awayFraction;\n\n  match.bttsFraction = bttsFraction;\n\n  match.game = match.homeTeam + \" v \" + match.awayTeam;\n\n  // ReactDOM.render(\n  //   <Fixture\n  //     fixtures={matches}\n  //     result={result}\n  //     mock={mockBool}\n  //     className={\"individualFixture\"}\n  //   />,\n  //   document.getElementById(\"FixtureContainer\")\n  // );\n}\n\nexport function RenderAllFixtures(props) {\n  let matches;\n  let capped = false;\n  let paid = false;\n  if (userDetail) {\n    paid = userDetail.isPaid;\n  }\n  const originalLength = props.matches.length;\n  if (paid === true) {\n    matches = props.matches;\n  } else {\n    if (originalLength > 15) {\n      matches = props.matches.slice(0, 15);\n      capped = true;\n    } else {\n      matches = props.matches;\n    }\n  }\n  console.log(paid);\n\n  return (\n    <Fixture\n      fixtures={matches}\n      result={props.result}\n      mock={false}\n      className={\"individualFixture\"}\n      paid={paid}\n      capped={capped}\n      originalLength={originalLength}\n    />\n  );\n}\n//     document.getElementById(\"FixtureContainer\")\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nlet isFunctionRunning = false;\n\nexport let dynamicDate;\n\nexport async function generateFixtures(\n  day,\n  date,\n  selectedOdds,\n  footyStatsFormattedDate,\n  current,\n  todaysDate,\n  dateSS\n) {\n  if (!isFunctionRunning) {\n    isFunctionRunning = true;\n    // const randomInt = Math.random() * 10\n\n    // if(randomInt >= 7){\n    //   alert(\"XGTipping is now serving over 2000 users a month,1 relying on donations to cover increasing running costs. If you can afford to do so and like what we do, please, help us stay subscription fee today by tapping to Donation button at the bottom of the page\")\n    // }\n\n    ReactDOM.render(\n      <div>\n        <div className=\"LoadingText\">\n          Loading all league, fixture & form data, please be patient...\n        </div>\n        <ThreeDots height=\"3em\" fill=\"#030061\" />\n      </div>,\n      document.getElementById(\"Loading\")\n    );\n\n    dynamicDate = todaysDate\n\n    //cleanup if different day is selected\n    ReactDOM.render(\n      <div></div>,\n      document.getElementById(\"GeneratePredictions\")\n    );\n    ReactDOM.render(<div></div>, document.getElementById(\"successMeasure2\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"bestPredictions\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"exoticOfTheDay\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"insights\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"longShots\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"BTTS\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"draws\"));\n\n    const url = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${footyStatsFormattedDate}`;\n    const formUrl = `${process.env.REACT_APP_EXPRESS_SERVER}form/${date}`;\n\n    matches = [];\n    fixtureArray = [];\n\n    league = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${todaysDate}`\n    );\n\n    ReactDOM.render(<div></div>, document.getElementById(\"FixtureContainer\"));\n\n    fixtureResponse = await fetch(url);\n\n    await fixtureResponse.json().then((fixtures) => {\n      fixtureArray = Array.from(fixtures.data);\n    });\n\n    let form;\n    let formArray = [];\n    allForm = [];\n    var isFormStored;\n    var isStoredLocally;\n    var leaguesStored = false;\n    let storedForm = await fetch(formUrl);\n    if (storedForm.status === 201 || storedForm.status === 200) {\n      await storedForm.json().then((form) => {\n        formArray = Array.from(form.allForm);\n        isFormStored = true;\n        isStoredLocally = true;\n        allForm = formArray;\n      });\n    } else {\n      isFormStored = false;\n      isStoredLocally = false;\n    }\n\n    leagueIdArray = [];\n    for (let i = 0; i < orderedLeagues.length; i++) {\n      leagueID = orderedLeagues[i].element.id;\n      leagueIdArray.push(leagueID);\n    }\n\n    var leaguePositions = [];\n    leagueArray = [];\n\n    let allLeagueResults;\n\n    allLeagueResults = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}results`\n    );\n\n    if (league.status === 200) {\n      leaguesStored = true;\n      console.log(\"leagues fetched from s3\");\n    }\n\n    if (league.status === 200 && allLeagueResults.status === 201) {\n      console.log(\"Not fetching leagues\");\n      await league.json().then((leagues) => {\n        leagueArray = Array.from(leagues.leagueArray);\n      });\n      updateResults(false);\n\n      await allLeagueResults.json().then((allGames) => {\n        allLeagueResultsArrayOfObjects = Array.from(allGames);\n      });\n\n      leaguesStored = true;\n      generateTables(\n        leagueArray,\n        leagueIdArray,\n        allLeagueResultsArrayOfObjects\n      );\n      arrayOfGames = [];\n\n      const sofaScore = await fetch(\n        `https://www.sofascore.com/api/v1/sport/football/scheduled-events/${dateSS}`\n      );\n      await sofaScore.json().then((games) => {\n        games.events.forEach((game) => {\n          arrayOfGames.push({\n            homeTeam: game.homeTeam.name,\n            awayTeam: game.awayTeam.name,\n            id: game.id,\n            time: game.startTimestamp,\n            homeGoals:\n              game.homeScore.display != undefined\n                ? game.homeScore.display\n                : \"-\",\n            awayGoals:\n              game.awayScore.display != undefined\n                ? game.awayScore.display\n                : \"-\",\n          });\n        });\n      });\n\n      const sofaScoreLeagues = await fetch(\"\");\n    } else {\n      allLeagueResultsArrayOfObjects = [];\n      console.log(\"Fetching leagues\");\n      for (let i = 0; i < orderedLeagues.length; i++) {\n        league = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}tables/${orderedLeagues[i].element.id}/${todaysDate}`\n        );\n        // eslint-disable-next-line no-loop-func\n        await league.json().then((table) => {\n          leagueArray.push(table);\n        });\n        leaguesStored = false;\n      }\n\n      //set variable for date X amount of days in the past and use that to filter the results\n\n      let startDate = (new Date().getTime() / 1000).toFixed(0);\n      // deduct 3 months\n      let targetDate = startDate - 23778463;\n\n      for (const orderedLeague of orderedLeagues) {\n        let fixtures = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${orderedLeague.element.id}`\n        );\n\n        let games = await fixtures.json();\n        let gamesFiltered;\n        let gamesShortened;\n        if (games.pager.current_page < games.pager.max_page) {\n          const page2 = await fetch(\n            `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${orderedLeague.element.id}&page=2`\n          );\n          let page2Data = await page2.json();\n\n          const gamesConcat = games.data.concat(page2Data.data);\n          const gamesConcatFiltered = gamesConcat.filter(\n            (game) => game.status === \"complete\"\n          );\n\n          let mostRecentResults = gamesConcatFiltered.filter(\n            (game) => game.date_unix > targetDate\n          );\n          let sorted = mostRecentResults.sort(\n            (a, b) => a.date_unix - b.date_unix\n          );\n          gamesShortened = sorted.slice(-600);\n          gamesFiltered = gamesShortened;\n        } else {\n          gamesFiltered = games.data.filter(\n            (game) => game.status === \"complete\"\n          );\n\n          if (current) {\n            let mostRecentResults = gamesFiltered.filter(\n              (game) => game.date_unix > targetDate\n            );\n            gamesFiltered = mostRecentResults.slice(-600);\n          }\n        }\n\n        // let mostRecentResults = gamesFiltered.filter(\n        //   (game) => game.date_unix > targetDate\n        // );\n\n        const shortenedResults = gamesFiltered.map(\n          ({\n            home_name,\n            away_name,\n            homeGoalCount,\n            awayGoalCount,\n            home_ppg,\n            away_ppg,\n            date_unix,\n            team_a_xg,\n            team_b_xg,\n            odds_ft_1,\n            odds_ft_2,\n            team_a_shots,\n            team_b_shots,\n            team_a_corners,\n            team_b_corners,\n            team_a_shotsOnTarget,\n            team_b_shotsOnTarget,\n            team_a_red_cards,\n            team_b_red_cards,\n            team_a_possession,\n            team_b_possession,\n            team_a_dangerous_attacks,\n            team_b_dangerous_attacks,\n            pre_match_teamA_overall_ppg,\n            pre_match_teamB_overall_ppg,\n            game_week,\n          }) => ({\n            home_name,\n            away_name,\n            homeGoalCount,\n            awayGoalCount,\n            home_ppg,\n            away_ppg,\n            date_unix,\n            team_a_xg,\n            team_b_xg,\n            odds_ft_1,\n            odds_ft_2,\n            team_a_shots,\n            team_b_shots,\n            team_a_corners,\n            team_b_corners,\n            team_a_shotsOnTarget,\n            team_b_shotsOnTarget,\n            team_a_red_cards,\n            team_b_red_cards,\n            team_a_possession,\n            team_b_possession,\n            team_a_dangerous_attacks,\n            team_b_dangerous_attacks,\n            pre_match_teamA_overall_ppg,\n            pre_match_teamB_overall_ppg,\n            game_week,\n          })\n        );\n\n        let leagueObj = {\n          // leagueObject[orderedLeague] = {\n          name: orderedLeague.name,\n          id: orderedLeague.element.id,\n          fixtures: shortenedResults,\n        };\n\n        allLeagueResultsArrayOfObjects.push(leagueObj);\n      }\n      updateResults(true);\n      generateTables(\n        leagueArray,\n        leagueIdArray,\n        allLeagueResultsArrayOfObjects\n      );\n    }\n\n    let teamPositionPrefix;\n\n    async function getPrefix(position) {\n      switch (position) {\n        case 1:\n        case 21:\n        case 31:\n        case 41:\n          teamPositionPrefix = \"st\";\n          break;\n        case 2:\n        case 22:\n        case 32:\n        case 42:\n          teamPositionPrefix = \"nd\";\n          break;\n        case 3:\n        case 23:\n        case 33:\n        case 43:\n          teamPositionPrefix = \"rd\";\n          break;\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18:\n        case 19:\n        case 20:\n        case 24:\n        case 25:\n        case 26:\n        case 27:\n        case 28:\n        case 29:\n        case 30:\n        case 34:\n        case 35:\n        case 36:\n        case 37:\n        case 38:\n        case 39:\n        case 40:\n        case 44:\n        case 45:\n        case 46:\n        case 47:\n        case 48:\n          teamPositionPrefix = \"th\";\n          break;\n        default:\n          break;\n      }\n      return teamPositionPrefix;\n    }\n\n    for (let i = 0; i < leagueArray.length; i++) {\n      let leagueInstance;\n      let homeLeague;\n      let awayLeague;\n\n      if (leagueArray[i].data.league_table !== null) {\n        leagueInstance = leagueArray[i].data.league_table;\n        homeLeague = leagueArray[i].data.all_matches_table_home;\n        awayLeague = leagueArray[i].data.all_matches_table_away;\n      } else {\n        leagueInstance = leagueArray[i].data.all_matches_table_overall;\n        homeLeague = leagueArray[i].data.all_matches_table_home;\n        awayLeague = leagueArray[i].data.all_matches_table_away;\n      }\n\n      for (let x = 0; x < leagueInstance.length; x++) {\n        let regularSeason = leagueArray[i].data.specific_tables.find(\n          (season) =>\n            season.round === \"Regular Season\" ||\n            season.round === \"2025\" ||\n            season.round === \"2024/2025\" ||\n            season.round === \"Apertura\" ||\n            season.round === \"1st Phase\"\n          // season.round === \"North\" ||\n          // season.round === \"South\"\n        );\n        let string;\n\n        if (regularSeason !== undefined && regularSeason.table) {\n          string = regularSeason.table[x];\n          homeLeague = leagueArray[i].data.all_matches_table_home;\n          awayLeague = leagueArray[i].data.all_matches_table_away;\n        } else {\n          string = leagueArray[i].data.all_matches_table_overall[x];\n          homeLeague = leagueArray[i].data.all_matches_table_home;\n          awayLeague = leagueArray[i].data.all_matches_table_away;\n        }\n\n        let stringHome = homeLeague[x];\n        let stringAway = awayLeague[x];\n\n        if (string) {\n          leaguePositions.push({\n            name: string.cleanName,\n            position: x + 1,\n            rawPosition: x + 1,\n            homeFormName: stringHome ? stringHome.cleanName : string.cleanName,\n            awayFormName: stringAway ? stringAway.cleanName : string.cleanName,\n            homeSeasonWinPercentage: stringHome\n              ? stringHome.seasonWins\n              : string.seasonWins,\n            awaySeasonWinPercentage: stringAway\n              ? stringAway.seasonWins\n              : string.seasonWins,\n            homeSeasonLossPercentage: stringHome\n              ? stringHome.seasonLosses_home\n              : string.seasonLosses_home,\n            awaySeasonLossPercentage: stringAway\n              ? stringAway.seasonLosses_away\n              : string.seasonLosses_away,\n            homeSeasonDrawPercentage: stringHome\n              ? stringHome.seasonDraws\n              : string.seasonDraws,\n            awaySeasonDrawPercentage: stringAway\n              ? stringAway.seasonDraws\n              : string.seasonDraws,\n            homeSeasonMatchesPlayed: stringHome\n              ? stringHome.matchesPlayed\n              : string.matchesPlayed,\n            awaySeasonMatchesPlayed: stringAway\n              ? stringAway.matchesPlayed\n              : string.matchesPlayed,\n            ppg: string.points / string.matchesPlayed,\n            wdl: string.wdl_record ? string.wdl_record : \"\",\n            played: string.matchesPlayed,\n            seasonGoals: string.seasonGoals,\n            seasonConceded: string.seasonConceded,\n          });\n        }\n      }\n    }\n\n    let previousLeagueName;\n\n    for (let i = 0; i < orderedLeagues.length; i++) {\n      leagueID = orderedLeagues[i].element.id;\n      leagueGames = fixtureArray.filter(\n        (game) => game.competition_id === orderedLeagues[i].element.id\n      );\n\n      for (const fixture of leagueGames) {\n        const unixTimestamp = fixture.date_unix;\n        const milliseconds = unixTimestamp * 1000;\n        const dateObject = new Date(milliseconds);\n\n        let match = {};\n        if (orderedLeagues[i].name !== previousLeagueName) {\n          match.leagueName = orderedLeagues[i].name;\n          match.leagueDesc = orderedLeagues[i].name;\n          match.leagueIndex = i;\n          match.leagueID = leagueID;\n        } else {\n          match.leagueName = null;\n          match.leagueDesc = orderedLeagues[i].name;\n          match.leagueIndex = i;\n          match.leagueID = leagueID;\n        }\n        match.id = fixture.id;\n        match.competition_id = fixture.competition_id;\n        match.date = fixture.date_unix;\n        match.time = dateObject.toLocaleString(\"en-GB\", {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n        });\n        match.homeTeam = fixture.home_name;\n        match.awayTeam = fixture.away_name;\n        match.refereeID = fixture.refereeID;\n        match.homeOdds = +fixture.odds_ft_1.toFixed(2);\n        match.awayOdds = +fixture.odds_ft_2.toFixed(2);\n        match.drawOdds = +fixture.odds_ft_x.toFixed(2);\n        match.homeDoubleChance = fixture.odds_doublechance_1x;\n        match.awayDoubleChance = fixture.odds_doublechance_x2;\n        match.bttsOdds = fixture.odds_btts_yes;\n        match.homeId = fixture.homeID;\n        match.awayId = fixture.awayID;\n        match.form = [];\n        match.homeTeamInfo = [];\n        match.awayTeamInfo = [];\n        match.btts = false;\n\n        previousLeagueName = orderedLeagues[i].name;\n\n        let homeTeaminLeague;\n        let awayTeaminLeague;\n        let teamPositionHome;\n        let teamPositionHomeTable;\n        let teamPositionAwayTable;\n        let homeTeamWinPercentageHome;\n        let awayTeamWinPercentageAway;\n        let homeTeamLossPercentageHome;\n        let awayTeamLossPercentageAway;\n        let homeTeamDrawPercentageHome;\n        let awayTeamDrawPercentageAway;\n        let teamPositionAway;\n        let homePrefix;\n        let homePrefixHomeTable;\n        let awayPrefix;\n        let awayPrefixAwayTable;\n        let homeSeasonPPG;\n        let awaySeasonPPG;\n\n        try {\n          homeTeaminLeague = leaguePositions.find(\n            (team) => team.name === match.homeTeam\n          );\n\n          let homeTeaminHomeLeague = leaguePositions.find(\n            (team) => team.homeFormName === match.homeTeam\n          );\n\n          teamPositionHome = homeTeaminLeague.position;\n          teamPositionHomeTable = homeTeaminHomeLeague.position;\n\n          WDLinLeagueHome = Array.from(homeTeaminLeague.wdl.toUpperCase());\n          HomeAverageGoals =\n            homeTeaminLeague.seasonGoals / homeTeaminLeague.played;\n          HomeAverageConceded =\n            homeTeaminLeague.seasonConceded / homeTeaminLeague.played;\n\n          homeTeamWinPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonWinPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homeTeamLossPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonLossPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homeTeamDrawPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonDrawPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homePrefix = await getPrefix(teamPositionHome);\n          homePrefixHomeTable = await getPrefix(teamPositionHomeTable);\n\n          homeSeasonPPG = homeTeaminLeague.ppg.toFixed(2);\n        } catch (error) {\n          console.log(error);\n          teamPositionHome = \"N/A\";\n          homePrefix = \"\";\n          homePrefixHomeTable = \"\";\n          homeSeasonPPG = \"N/A\";\n          homeTeaminLeague = {\n            rawPosition: \"N/A\",\n          };\n          WDLinLeagueHome = [];\n        }\n\n        try {\n          awayTeaminLeague = leaguePositions.find(\n            (team) => team.name === match.awayTeam\n          );\n\n          let awayTeaminAwayLeague = leaguePositions.find(\n            (team) => team.awayFormName === match.awayTeam\n          );\n\n          teamPositionAway = awayTeaminLeague.position;\n          teamPositionAwayTable = awayTeaminAwayLeague.position;\n\n          WDLinLeagueAway = Array.from(awayTeaminLeague.wdl.toUpperCase());\n          AwayAverageGoals =\n            awayTeaminLeague.seasonGoals / awayTeaminLeague.played;\n          AwayAverageConceded =\n            awayTeaminLeague.seasonConceded / awayTeaminLeague.played;\n\n          awayTeamWinPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonWinPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayTeamLossPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonLossPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayTeamDrawPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonDrawPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayPrefix = await getPrefix(teamPositionAway);\n          awayPrefixAwayTable = await getPrefix(teamPositionAwayTable);\n\n          awaySeasonPPG = awayTeaminLeague.ppg.toFixed(2);\n        } catch (error) {\n          console.log(error);\n          teamPositionAway = \"N/A\";\n          awayPrefix = \"\";\n          awaySeasonPPG = \"N/A\";\n          awayTeaminLeague = {\n            rawPosition: \"N/A\",\n          };\n          WDLinLeagueAway = [];\n        }\n\n        if (!isFormStored) {\n          form = await getForm(match);\n\n          let homeFormString5 =\n            form[0].data[0].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString5 =\n            form[1].data[0].stats.additional_info.formRun_overall.toUpperCase();\n          let homeFormString6 =\n            form[0].data[1].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString6 =\n            form[1].data[1].stats.additional_info.formRun_overall.toUpperCase();\n          let homeFormString10 =\n            form[0].data[2].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString10 =\n            form[1].data[2].stats.additional_info.formRun_overall.toUpperCase();\n\n          let homeFormRun =\n            form[0].data[2].stats.additional_info.formRun_home.toUpperCase();\n          let awayFormRun =\n            form[1].data[2].stats.additional_info.formRun_away.toUpperCase();\n\n          if (WDLinLeagueHome.length >= 10) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = WDLinLeagueHome.slice(-6);\n            lastTenFormHome = WDLinLeagueHome.slice(-10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = WDLinLeagueAway.slice(-6);\n            lastTenFormAway = WDLinLeagueAway.slice(-10);\n            leagueOrAll = \"League\";\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else if (WDLinLeagueHome.length >= 6) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = WDLinLeagueHome.slice(-6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = WDLinLeagueAway.slice(-6);\n            lastTenFormAway = Array.from(awayFormString10);\n            leagueOrAll = \"League\";\n\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else if (WDLinLeagueHome.length >= 5) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = Array.from(homeFormString6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = Array.from(awayFormString6);\n            lastTenFormAway = Array.from(awayFormString10);\n            leagueOrAll = \"League\";\n\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else {\n            lastThreeFormHome = [\n              homeFormString5[2],\n              homeFormString5[3],\n              homeFormString5[4],\n            ];\n            lastFiveFormHome = Array.from(homeFormString5);\n            lastSixFormHome = Array.from(homeFormString6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = [\n              awayFormString5[2],\n              awayFormString5[3],\n              awayFormString5[4],\n            ];\n\n            lastFiveFormAway = Array.from(awayFormString5);\n            lastSixFormAway = Array.from(awayFormString6);\n            lastTenFormAway = Array.from(awayFormString10);\n\n            leagueOrAll = \"All\";\n\n            homeAverageGoals = undefined;\n            homeAverageConceded = undefined;\n            awayAverageGoals = undefined;\n            awayAverageConceded = undefined;\n          }\n\n          formRunHome = Array.from(homeFormRun);\n          formRunAway = Array.from(awayFormRun);\n\n          if (\n            teamPositionHome === 0 ||\n            form[0].data[0].season_format !== \"Domestic League\"\n          ) {\n            teamPositionHome = \"N/A\";\n            teamPositionHomeTable = \"N/A\";\n            homePrefix = \"\";\n            homePrefixHomeTable = \"\";\n          }\n\n          if (\n            teamPositionAway === 0 ||\n            form[0].data[0].season_format !== \"Domestic League\"\n          ) {\n            teamPositionAway = \"N/A\";\n            teamPositionAwayTable = \"N/A\";\n            awayPrefix = \"\";\n            awayPrefixAwayTable = \"\";\n          }\n          allForm.push({\n            id: match.id,\n            teamIDHome: match.homeId,\n            teamIDAway: match.awayId,\n            leagueId: leagueID,\n            home: {\n              teamName: match.homeTeam,\n              0: {\n                // XGOverall: parseFloat(form[0].data[0].stats.xg_for_avg_overall),\n                // XG: parseFloat(form[0].data[0].stats.xg_for_avg_home),\n                // ScoredOverall: parseFloat(\n                //   form[0].data[0].stats.seasonScoredNum_overall\n                // ),\n                // ScoredAverage: parseFloat(\n                //   form[0].data[0].stats.seasonScoredAVG_home\n                // ),\n                // PlayedHome: parseFloat(\n                //   form[0].data[0].stats.seasonMatchesPlayed_home\n                // ),\n                // PlayedAway: parseFloat(\n                //   form[0].data[0].stats.seasonMatchesPlayed_away\n                // ),\n                // ConcededOverall: parseFloat(\n                //   form[0].data[0].stats.seasonConcededNum_overall\n                // ),\n                // ConcededAverage: parseFloat(\n                //   form[0].data[0].stats.seasonConcededAVG_home\n                // ),\n                // XGAgainstAvgOverall: parseFloat(\n                //   form[0].data[0].stats.xg_against_avg_overall\n                // ),\n                // XGAgainstAverage: parseFloat(\n                //   form[0].data[0].stats.xg_against_avg_home\n                // ),\n                // CleanSheetPercentage: parseFloat(\n                //   form[0].data[0].stats.seasonCSPercentage_overall\n                // ),\n                // AveragePossessionOverall: parseFloat(\n                //   form[0].data[0].stats.possessionAVG_overall\n                // ),\n                // AveragePossession: parseFloat(\n                //   form[0].data[0].stats.possessionAVG_home\n                // ),\n                // AverageShotsOnTargetOverall: parseFloat(\n                //   form[0].data[0].stats.shotsOnTargetAVG_overall\n                // ),\n                // AverageShotsOnTarget: parseFloat(\n                //   form[0].data[0].stats.shotsOnTargetAVG_home\n                // ),\n                // AverageDangerousAttacksOverall: parseFloat(\n                //   form[0].data[0].stats.dangerous_attacks_avg_overall\n                // ),\n                // PPG: parseFloat(form[0].data[0].stats.seasonPPG_overall),\n                // AttacksHome: parseFloat(form[0].data[0].stats.attacks_avg_home),\n                // AttacksAway: parseFloat(form[0].data[0].stats.attacks_avg_away),\n                // AverageDangerousAttacks: parseFloat(\n                //   form[0].data[0].stats.dangerous_attacks_avg_home\n                // ),\n                // homeAttackAdvantage: parseFloat(\n                //   form[0].data[0].stats.homeAttackAdvantage\n                // ),\n                // homeDefenceAdvantage: parseFloat(\n                //   form[0].data[0].stats.homeDefenceAdvantage\n                // ),\n                // BTTSPercentage: parseInt(\n                //   form[0].data[0].stats.seasonBTTSPercentage_home\n                // ),\n                // LeagueOrAll: leagueOrAll,\n                // LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                // homeRawPosition: homeTeaminLeague.rawPosition !== undefined\n                //   ? homeTeaminLeague.rawPosition\n                //   : 0,\n                // homeTeamHomePositionRaw: teamPositionHomeTable,\n                // LeagueAverageGoals: homeAverageGoals,\n                // LeagueAverageConceded: homeAverageConceded,\n              },\n              1: {\n                // XGOverall: parseFloat(form[0].data[1].stats.xg_for_avg_overall),\n                // XG: parseFloat(form[0].data[1].stats.xg_for_avg_home),\n                // ScoredOverall: parseFloat(\n                //   form[0].data[1].stats.seasonScoredNum_overall\n                // ),\n                // ScoredAverage: parseFloat(\n                //   form[0].data[1].stats.seasonScoredAVG_home\n                // ),\n                // PlayedHome: parseFloat(\n                //   form[0].data[1].stats.seasonMatchesPlayed_home\n                // ),\n                // PlayedAway: parseFloat(\n                //   form[0].data[1].stats.seasonMatchesPlayed_away\n                // ),\n                // ConcededOverall: parseFloat(\n                //   form[0].data[1].stats.seasonConcededNum_overall\n                // ),\n                // ConcededAverage: parseFloat(\n                //   form[0].data[1].stats.seasonConcededAVG_home\n                // ),\n                // XGAgainstAvgOverall: parseFloat(\n                //   form[0].data[1].stats.xg_against_avg_overall\n                // ),\n                // XGAgainstAverage: parseFloat(\n                //   form[0].data[1].stats.xg_against_avg_home\n                // ),\n                // CleanSheetPercentage: parseFloat(\n                //   form[0].data[1].stats.seasonCSPercentage_overall\n                // ),\n                // AveragePossessionOverall: parseFloat(\n                //   form[0].data[1].stats.possessionAVG_overall\n                // ),\n                // AveragePossession: parseFloat(\n                //   form[0].data[1].stats.possessionAVG_home\n                // ),\n                // AverageShotsOnTargetOverall: parseFloat(\n                //   form[0].data[1].stats.shotsOnTargetAVG_overall\n                // ),\n                // AverageShotsOnTarget: parseFloat(\n                //   form[0].data[1].stats.shotsOnTargetAVG_home\n                // ),\n                // AverageDangerousAttacksOverall: parseFloat(\n                //   form[0].data[1].stats.dangerous_attacks_avg_overall\n                // ),\n                // PPG: parseFloat(form[0].data[1].stats.seasonPPG_overall),\n                // AttacksHome: parseFloat(form[0].data[1].stats.attacks_avg_home),\n                // AttacksAway: parseFloat(form[0].data[1].stats.attacks_avg_away),\n                // AverageDangerousAttacks: parseFloat(\n                //   form[0].data[1].stats.dangerous_attacks_avg_home\n                // ),\n                // homeAttackAdvantage: parseFloat(\n                //   form[0].data[1].stats.homeAttackAdvantage\n                // ),\n                // homeDefenceAdvantage: parseFloat(\n                //   form[0].data[1].stats.homeDefenceAdvantage\n                // ),\n                // BTTSPercentage: parseInt(\n                //   form[0].data[1].stats.seasonBTTSPercentage_home\n                // ),\n                // LeagueOrAll: leagueOrAll,\n                // LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                // homeRawPosition: homeTeaminLeague.rawPosition !== undefined\n                //   ? homeTeaminLeague.rawPosition\n                //   : 0,\n                // homeTeamHomePositionRaw: teamPositionHomeTable,\n                // LeagueAverageGoals: homeAverageGoals,\n                // LeagueAverageConceded: homeAverageConceded,\n              },\n              2: {\n                XGOverall: parseFloat(form[0].data[2].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[2].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[2].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[2].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[2].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[2].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[2].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[2].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[2].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[2].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[2].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[2].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[2].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[2].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[2].stats.shotsOnTargetAVG_home\n                ),\n                AverageShots: parseFloat(\n                  form[0].data[2].stats.shotsAVG_overall\n                ),\n                AverageShotsHomeOrAway: parseFloat(\n                  form[0].data[2].stats.shotsAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[2].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[2].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[2].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[2].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[2].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[2].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[2].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[2].stats.seasonBTTSPercentage_home\n                ),\n                lastThreeForm:\n                  lastThreeFormHome !== undefined\n                    ? lastThreeFormHome.reverse()\n                    : \"N/A\",\n                LastFiveForm:\n                  lastFiveFormHome !== undefined\n                    ? lastFiveFormHome.reverse()\n                    : \"N/A\",\n                LastSixForm:\n                  lastSixFormHome !== undefined\n                    ? lastSixFormHome.reverse()\n                    : \"N/A\",\n                LastTenForm:\n                  lastTenFormHome !== undefined\n                    ? lastTenFormHome.reverse()\n                    : \"N/A\",\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition:\n                  homeTeaminLeague.rawPosition !== undefined\n                    ? homeTeaminLeague.rawPosition\n                    : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                SeasonPPG: homeSeasonPPG,\n                WinPercentage: homeTeamWinPercentageHome,\n                LossPercentage: homeTeamLossPercentageHome,\n                DrawPercentage: homeTeamDrawPercentageHome,\n                formRun: formRunHome,\n                goalDifference:\n                  form[0].data[2].stats.seasonGoalDifference_overall,\n                goalDifferenceHomeOrAway:\n                  form[0].data[2].stats.seasonGoalDifference_home,\n                BttsPercentage:\n                  form[0].data[2].stats.seasonBTTSPercentage_overall,\n                BttsPercentageHomeOrAway:\n                  form[0].data[2].stats.seasonBTTSPercentage_home,\n                CardsTotal: form[0].data[2].stats.cardsTotal_overall,\n                CornersAverage: form[0].data[2].stats.cornersAVG_overall,\n                ScoredBothHalvesPercentage:\n                  form[0].data[2].stats.scoredBothHalvesPercentage_overall,\n                LastMatch: await convertTimestamp(\n                  form[0].data[0].last_updated_match_timestamp\n                ),\n                WDLRecord: WDLinLeagueHome,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n            },\n            away: {\n              teamName: match.awayTeam,\n              0: {\n                // XGOverall: parseFloat(form[1].data[0].stats.xg_for_avg_overall),\n                // XG: parseFloat(form[1].data[0].stats.xg_for_avg_away),\n                // ScoredOverall: parseFloat(\n                //   form[1].data[0].stats.seasonScoredNum_overall\n                // ),\n                // ScoredAverage: parseFloat(\n                //   form[1].data[0].stats.seasonScoredAVG_away\n                // ),\n                // PlayedHome: parseFloat(\n                //   form[1].data[0].stats.seasonMatchesPlayed_home\n                // ),\n                // PlayedAway: parseFloat(\n                //   form[1].data[0].stats.seasonMatchesPlayed_away\n                // ),\n                // ConcededOverall: parseFloat(\n                //   form[1].data[0].stats.seasonConcededNum_overall\n                // ),\n                // ConcededAverage: parseFloat(\n                //   form[1].data[0].stats.seasonConcededAVG_away\n                // ),\n                // XGAgainstAvgOverall: parseFloat(\n                //   form[1].data[0].stats.xg_against_avg_overall\n                // ),\n                // XGAgainstAverage: parseFloat(\n                //   form[1].data[0].stats.xg_against_avg_away\n                // ),\n                // CleanSheetPercentage: parseFloat(\n                //   form[1].data[0].stats.seasonCSPercentage_overall\n                // ),\n                // AveragePossessionOverall: parseFloat(\n                //   form[1].data[0].stats.possessionAVG_overall\n                // ),\n                // AveragePossession: parseFloat(\n                //   form[1].data[0].stats.possessionAVG_away\n                // ),\n                // AverageShotsOnTargetOverall: parseFloat(\n                //   form[1].data[0].stats.shotsOnTargetAVG_overall\n                // ),\n                // AverageShotsOnTarget: parseFloat(\n                //   form[1].data[0].stats.shotsOnTargetAVG_away\n                // ),\n                // AverageDangerousAttacksOverall: parseFloat(\n                //   form[1].data[0].stats.dangerous_attacks_avg_overall\n                // ),\n                // PPG: parseFloat(form[1].data[0].stats.seasonPPG_overall),\n                // AttacksAverage: parseFloat(\n                //   form[1].data[0].stats.attacks_avg_away\n                // ),\n                // AverageDangerousAttacks: parseFloat(\n                //   form[1].data[0].stats.dangerous_attacks_avg_away\n                // ),\n                // BTTSPercentage: parseInt(\n                //   form[1].data[0].stats.seasonBTTSPercentage_away\n                // ),\n                // LeagueOrAll: leagueOrAll,\n                // LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                // awayRawPosition: awayTeaminLeague.rawPosition\n                //   ? awayTeaminLeague.rawPosition\n                //   : 0,\n                // awayTeamAwayPositionRaw: teamPositionAwayTable,\n                // LeagueAverageGoals: awayAverageGoals,\n                // LeagueAverageConceded: awayAverageConceded,\n              },\n              1: {\n                // XGOverall: parseFloat(form[1].data[1].stats.xg_for_avg_overall),\n                // XG: parseFloat(form[1].data[1].stats.xg_for_avg_away),\n                // ScoredOverall: parseFloat(\n                //   form[1].data[1].stats.seasonScoredNum_overall\n                // ),\n                // ScoredAverage: parseFloat(\n                //   form[1].data[1].stats.seasonScoredAVG_away\n                // ),\n                // PlayedHome: parseFloat(\n                //   form[1].data[1].stats.seasonMatchesPlayed_home\n                // ),\n                // PlayedAway: parseFloat(\n                //   form[1].data[1].stats.seasonMatchesPlayed_away\n                // ),\n                // ConcededOverall: parseFloat(\n                //   form[1].data[1].stats.seasonConcededNum_overall\n                // ),\n                // ConcededAverage: parseFloat(\n                //   form[1].data[1].stats.seasonConcededAVG_away\n                // ),\n                // XGAgainstAvgOverall: parseFloat(\n                //   form[1].data[1].stats.xg_against_avg_overall\n                // ),\n                // XGAgainstAverage: parseFloat(\n                //   form[1].data[1].stats.xg_against_avg_away\n                // ),\n                // CleanSheetPercentage: parseFloat(\n                //   form[1].data[1].stats.seasonCSPercentage_overall\n                // ),\n                // AveragePossessionOverall: parseFloat(\n                //   form[1].data[1].stats.possessionAVG_overall\n                // ),\n                // AveragePossession: parseFloat(\n                //   form[1].data[1].stats.possessionAVG_away\n                // ),\n                // AverageShotsOnTargetOverall: parseFloat(\n                //   form[1].data[1].stats.shotsOnTargetAVG_overall\n                // ),\n                // AverageShotsOnTarget: parseFloat(\n                //   form[1].data[1].stats.shotsOnTargetAVG_away\n                // ),\n                // AverageDangerousAttacksOverall: parseFloat(\n                //   form[1].data[1].stats.dangerous_attacks_avg_overall\n                // ),\n                // PPG: parseFloat(form[1].data[1].stats.seasonPPG_overall),\n                // AttacksAverage: parseFloat(\n                //   form[1].data[1].stats.attacks_avg_away\n                // ),\n                // AverageDangerousAttacks: parseFloat(\n                //   form[1].data[1].stats.dangerous_attacks_avg_away\n                // ),\n                // BTTSPercentage: parseInt(\n                //   form[1].data[1].stats.seasonBTTSPercentage_away\n                // ),\n                // LeagueOrAll: leagueOrAll,\n                // LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                // awayRawPosition: awayTeaminLeague.rawPosition\n                //   ? awayTeaminLeague.rawPosition\n                //   : 0,\n                // awayTeamAwayPositionRaw: teamPositionAwayTable,\n                // LeagueAverageGoals: awayAverageGoals,\n                // LeagueAverageConceded: awayAverageConceded,\n              },\n              2: {\n                XGOverall: parseFloat(form[1].data[2].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[2].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[2].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[2].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[2].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[2].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[2].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[2].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[2].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[2].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[2].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[2].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[2].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[2].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[2].stats.shotsOnTargetAVG_away\n                ),\n                AverageShots: parseFloat(\n                  form[1].data[2].stats.shotsAVG_overall\n                ),\n                AverageShotsHomeOrAway: parseFloat(\n                  form[1].data[2].stats.shotsAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[2].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[2].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[2].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[2].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[2].stats.seasonBTTSPercentage_away\n                ),\n                lastThreeForm:\n                  lastThreeFormAway !== undefined\n                    ? lastThreeFormAway.reverse()\n                    : \"N/A\",\n                LastFiveForm:\n                  lastFiveFormAway !== undefined\n                    ? lastFiveFormAway.reverse()\n                    : \"N/A\",\n                LastSixForm:\n                  lastSixFormAway !== undefined\n                    ? lastSixFormAway.reverse()\n                    : \"N/A\",\n                LastTenForm:\n                  lastTenFormAway !== undefined\n                    ? lastTenFormAway.reverse()\n                    : \"N/A\",\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                SeasonPPG: awaySeasonPPG,\n                WinPercentage: awayTeamWinPercentageAway,\n                LossPercentage: awayTeamLossPercentageAway,\n                DrawPercentage: awayTeamDrawPercentageAway,\n                formRun: formRunAway,\n                goalDifference:\n                  form[1].data[2].stats.seasonGoalDifference_overall,\n                goalDifferenceHomeOrAway:\n                  form[1].data[2].stats.seasonGoalDifference_away,\n                BttsPercentage:\n                  form[1].data[2].stats.seasonBTTSPercentage_overall,\n                BttsPercentageHomeOrAway:\n                  form[1].data[2].stats.seasonBTTSPercentage_away,\n                CardsTotal: form[1].data[2].stats.cardsTotal_overall,\n                CornersAverage: form[1].data[2].stats.cornersAVG_overall,\n                ScoredBothHalvesPercentage:\n                  form[1].data[2].stats.scoredBothHalvesPercentage_overall,\n                LastMatch: await convertTimestamp(\n                  form[1].data[0].last_updated_match_timestamp\n                ),\n                WDLRecord: WDLinLeagueAway,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n            },\n          });\n        }\n\n        match.homeBadge = fixture.home_image;\n        match.awayBadge = fixture.away_image;\n\n        match.homePpg = fixture.home_ppg.toFixed(2);\n        match.awayPpg = fixture.away_ppg.toFixed(2);\n\n        match.lastFiveFormHome = lastFiveFormHome;\n        match.lastFiveFormAway = lastFiveFormAway;\n\n        match.homeRawPosition = homeTeaminLeague.rawPosition;\n        match.awayRawPosition = awayTeaminLeague.rawPosition;\n\n        match.homeTeamHomePosition = `${teamPositionHomeTable}${homePrefixHomeTable}`;\n        match.awayTeamAwayPosition = `${teamPositionAwayTable}${awayPrefixAwayTable}`;\n\n        match.homeTeamHomePositionRaw = teamPositionHomeTable;\n        match.awayTeamAwayPositionRaw = teamPositionAwayTable;\n\n        match.homeTeamWinPercentage = homeTeamWinPercentageHome;\n        match.awayTeamWinPercentage = awayTeamWinPercentageAway;\n\n        match.homeTeamLossPercentage = homeTeamLossPercentageHome;\n        match.awayTeamLossPercentage = awayTeamLossPercentageAway;\n\n        match.homeTeamDrawPercentage = homeTeamDrawPercentageHome;\n        match.awayTeamDrawPercentage = awayTeamDrawPercentageAway;\n        match.status = fixture.status;\n        match.over25Odds = fixture.odds_ft_over25;\n        match.btts_potential = fixture.btts_potential;\n        match.game = match.homeTeam + \" v \" + match.awayTeam;\n        match.stadium = fixture.stadium_name;\n        match.homeGoals = fixture.homeGoalCount;\n        match.awayGoals = fixture.awayGoalCount;\n\n        match.expectedGoalsHomeToDate = fixture.team_a_xg_prematch;\n        match.expectedGoalsAwayToDate = fixture.team_b_xg_prematch;\n        match.game_week = fixture.game_week;\n\n        if (match.status !== \"canceled\" || match.status !== \"suspended\") {\n          matches.push(match);\n          await createFixture(match, false);\n        }\n      }\n\n      if (matches.length > 0) {\n        ReactDOM.render(\n          <Fragment>\n            <Button\n              text={\"Get Predictions & League stats\"}\n              onClickEvent={() => getScorePrediction(day)}\n              className={\"GeneratePredictions\"}\n            />\n            <div className=\"Version\">Prediction engine v1.4.0 (18/03/25)</div>\n            <Collapsable\n              buttonText={\"Filters\"}\n              element={\n                <div className=\"FilterContainer\">\n                  <h6>\n                    Use the below filters to remove predictions that don't meet\n                    the set criteria. These will be greyed out and not included\n                    in multi-builders and ROI stats\n                  </h6>\n                  <h6>Goals for/against differential filter</h6>\n                  <div>\n                    I'm looking for tips where the goal differential between\n                    teams is at least...\n                  </div>\n                  <SlideDiff\n                    value=\"0\"\n                    text=\"all games\"\n                    useCase=\"gd\"\n                    lower=\"0\"\n                    upper=\"30\"\n                  ></SlideDiff>\n                  <h6>\n                    Goals for/against home or away differential filter\n                  </h6>\n                  <div>\n                    I'm looking for tips where the goal differential (home or\n                    away only) between teams is at least...\n                  </div>\n                  <SlideDiff\n                    value=\"0\"\n                    text=\"all games\"\n                    useCase=\"gdHorA\"\n                    lower=\"0\"\n                    upper=\"30\"\n                  ></SlideDiff>\n                  <Fragment>\n                    <h6>XG for/against differential filter</h6>\n                    <div>\n                      I'm looking for tips where the XG differential between\n                      teams is at least...\n                    </div>\n                    <SlideDiff\n                      value=\"0\"\n                      text=\"all games\"\n                      useCase=\"xg\"\n                      lower=\"0\"\n                      upper=\"30\"\n                    ></SlideDiff>\n                  </Fragment>\n                  <Fragment>\n                    <h6>Last 6 points differential filter</h6>\n                    <div>\n                      I'm looking for tips where the points differential between\n                      teams is at least...\n                    </div>\n                    <SlideDiff\n                      value=\"0\"\n                      text=\"all games\"\n                      useCase=\"last10\"\n                      lower=\"0\"\n                      upper=\"18\"\n                    ></SlideDiff>\n                  </Fragment>\n                  <Fragment>\n                    <h6>Choose your risk profile</h6>\n                    <div>\n                      I'm looking for tips where the odds are between...\n                    </div>\n                    <Slide value=\"1\" text=\"all games\"></Slide>\n                  </Fragment>\n                </div>\n              }\n            />\n            ,\n          </Fragment>,\n          document.getElementById(\"GeneratePredictions\")\n        );\n      }\n\n      // }\n    }\n\n\n    ReactDOM.render(\n      <div>\n        <div className=\"LoadingText\"></div>\n      </div>,\n      document.getElementById(\"Loading\")\n    );\n\n    async function updateResults(bool) {\n      console.log(\"updating results\");\n      if (allLeagueResultsArrayOfObjects.length > 0 && bool === true) {\n        await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}results`, {\n          method: \"DELETE\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }).then(async () => {\n          await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}results`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(allLeagueResultsArrayOfObjects),\n          });\n        });\n      } else {\n        console.log(\"EMPTY RESULTS\");\n      }\n    }\n\n    if (!isStoredLocally) {\n      await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}allForm/${date}`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ allForm }),\n      });\n      await updateResults(true);\n    }\n    if (!leaguesStored) {\n      await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${todaysDate}`,\n        {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ leagueArray }),\n        }\n      );\n    }\n\n    // const allFixtures = await RenderAllFixtures(matches, false)\n    ReactDOM.render(\n      <RenderAllFixtures matches={matches} result={false} bool={false} />,\n      document.getElementById(\"FixtureContainer\")\n    );\n    // ReactDOM.render(<RenderAllFixtures matches={matches} bool={false}/>),document.getElementById(\"FixtureContainer\")\n    setTimeout(() => {\n      isFunctionRunning = false;\n    }, 3000);\n  }\n}\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    // backgroundColor: \"#dedddd\",\n    padding: 10,\n    textAlign: \"center\",\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    // border: \"none\",\n    margin: \"none\",\n    color: 'white',\n    lineHeight: '2em',\n    backgroundColor: '#030061',\n  },\n  body: {\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    padding: \"1em\",\n    color: 'white',\n    border: \"none\",\n    margin: \"em\",\n    backgroundColor: '#030061',\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#030061\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#030052\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\n\nexport default function CustomizedTables(props) {\n\n\n  return (\n    <TableContainer className=\"StatsTable\">\n      <Table aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Stat</StyledTableCell>\n            <StyledTableCell>H2H history</StyledTableCell>\n            <StyledTableCell>XGTipping forecast</StyledTableCell>\n            <StyledTableCell>Odds (yes)</StyledTableCell>\n            <StyledTableCell>Odds (no)</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        <StyledTableRow key=\"O05\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 0.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o05Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o05Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u05Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O15\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 1.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o15Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o15Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u15Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O25\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 2.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o25Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o25Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u25Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O35\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 3.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o35Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o35Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u35Odds}</StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","async function getOverOrUnderText(xgSum) {\n  let overUnderAchievingSum = xgSum;\n  let text;\n  switch (true) {\n    case overUnderAchievingSum > 1.5:\n      text = \"Underachieving drastically against expected goals.\";\n      break;\n    case overUnderAchievingSum > 1.25 && overUnderAchievingSum <= 1.5:\n      text = \"Underachieving significantly against expected goals.\";\n      break;\n    case overUnderAchievingSum > 1 && overUnderAchievingSum <= 1.25:\n      text = \"Underachieving moderately against expected goals.\";\n      break;\n    case overUnderAchievingSum > 0.75 && overUnderAchievingSum <= 1:\n      text = \"Underachieving slightly against expected goals.\";\n      break;\n    case overUnderAchievingSum > 0.4 && overUnderAchievingSum <= 0.75:\n      text = \"Underachieving very slightly against expected goals.\";\n      break;\n    case overUnderAchievingSum > -0.4 && overUnderAchievingSum <= 0.4:\n      text = \"Roughly matching expected goal difference overall.\";\n      break;\n    case overUnderAchievingSum < -0.4 && overUnderAchievingSum >= -0.75:\n      text = \"Overachieving very slightly against expected goals.\";\n      break;\n    case overUnderAchievingSum < -0.75 && overUnderAchievingSum >= -1:\n      text = \"Overachieving slightly against expected goals overall.\";\n      break;\n    case overUnderAchievingSum < -1 && overUnderAchievingSum >= -1.25:\n      text = \"Overachieving moderately against expected goals.\";\n      break;\n    case overUnderAchievingSum < -1.25 && overUnderAchievingSum >= -1.5:\n      text = \"Overachieving significantly against expected goals.\";\n      break;\n    case overUnderAchievingSum < -1.5:\n      text = \"Overachieving drastically against expected goals.\";\n      break;\n    default:\n      text = \"\";\n      break;\n  }\n  \n  return text;\n}\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nasync function getXGDifferential(xgFor, xgAgainst, goalsFor, goalsAgainst) {\n  let xgDiff = xgFor - xgAgainst;\n  let goalDiff = goalsFor - goalsAgainst;\n  let compareXgAndGoalDiff = await diff(xgDiff, goalDiff);\n\n  return compareXgAndGoalDiff;\n}\n\nasync function getAttackingSummary(goalsRecent, goalsLongTerm) {\n\n  let text;\n  if (goalsRecent >= 3) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Free-scoring and improving recently in front of goal.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Free-scoring and consistent recently in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Free-scoring overall, but less so recently in games.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 3 && goalsRecent >= 2) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Impressive scoring; improving recently in front of goal.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Impressive scoring; consistent recently in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Impressive scoring, but less impressive in recent games.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 2 && goalsRecent >= 1) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Decent scoring; improving recently in front of goal.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Decent scoring; consistent recently in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Decent scoring, but less impressive in recent games.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 1 && goalsRecent > 0) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Poor scoring, but signs of improvement in recent games.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Poor scoring and consistently so in most recent games.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Poor scoring with no improvement in most recent games.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent === 0) {\n    switch (true) {\n      case goalsRecent === 0:\n        text = \"Woeful scoring; no goals scored recently at all.\";\n        break;\n      default:\n        text = \"\";\n        break;\n    }\n  }\n  return text;  \n}\n\nasync function getDefenceSummary(cleansheetStat) {\n  let text;\n  switch (true) {\n    case cleansheetStat > 80:\n      text = `Rock solid at the back; ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    case cleansheetStat > 60 && cleansheetStat <= 80:\n      text = `Very strong defensively; ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    case cleansheetStat > 40 && cleansheetStat <= 60:\n      text = `Defensively impressive; ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    case cleansheetStat > 20 && cleansheetStat <= 40:\n      text = `Average at the back; only ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    case cleansheetStat > 1 && cleansheetStat <= 20:\n      text = `Defensively frail; only ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    case cleansheetStat === 0:\n      text = `Defensively shambolic; ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    default:\n      break;\n  }  \n  return text;\n}\n\nasync function GenerateFormSummary(form, last10, last5) {\n  let text;\n  // let six = lastx[2];\n  let ten = last10;\n  let five = last5;\n  // console.log(ten)\n  // console.log(five)\n\n  let xgSum = await getXGDifferential(\n    form.XGOverall,\n    form.XGAgainstAvgOverall,\n    form.ScoredOverall / 10,\n    form.ConcededOverall / 10\n  );\n  let xgText = await getOverOrUnderText(xgSum);\n  let attackString = await getAttackingSummary(\n    form.last5Goals,\n    form.last10Goals\n  );\n  let defenceString = await getDefenceSummary(form.CleanSheetPercentage);\n  let pointsAverageTotal =\n    (parseFloat(five) + parseFloat(ten)) / 2;\n\n    if (pointsAverageTotal >= 2.6) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Outstanding recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Outstanding recent form, consistent over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Outstanding recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 2.3) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Excellent recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Excellent recent form, consistent over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Excellent recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 2) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Very good recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Very good recent form, consistent over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Very good recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 1.7) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Good recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Good recent form, consistent over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Good recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 1.4) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Decent recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Decent recent form, consistent over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Decent recent form, worsened in last 5 fixtures.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 1.1) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Average recent form; improving over last 5 fixtures.\";\n          break;\n        case five === ten:\n          text =\n            \"Average recent form, consistent over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Average recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 0.8) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Poor recent form; improving over last 5 fixtures.\";\n          break;\n        case five === ten:\n          text =\n            \"Poor recent form, consistent over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Poor recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 0.5) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Very poor recent form; improving over last 5 fixtures.\";\n          break;\n        case five === ten:\n          text =\n            \"Very poor recent form, consistent over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Very poor recent form, worsening still in last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal < 0.5) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Terrible recent form; improving over last 5 fixtures.\";\n          break;\n        case five === ten:\n          text =\n            \"Terrible recent form, consistent over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Terrible recent form, worsening still in last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else {\n      console.log(pointsAverageTotal);\n    }\n  \n  return text + ` ${xgText} ${attackString} ${defenceString}`;\n}\n\nexport default GenerateFormSummary;\n","// import { light } from \"@material-ui/core/styles/createPalette\";\n// import { toBePartiallyChecked } from \"@testing-library/jest-dom/dist/matchers\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  ArcElement,\n  LineElement,\n  Filler,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  SubTitle,\n} from \"chart.js\";\nimport { Line, Radar, Bar, Doughnut } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  ArcElement,\n  Filler,\n  BarElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  SubTitle\n);\n\nexport function Chart(props) {\n  let length;\n  let depth;\n\n  if (props.type === \"Points over time\") {\n    length = props.data1.length * 3;\n    depth = 0;\n  } else if (props.type === \"Rolling average points over last 10\") {\n    length = Math.abs(props.height);\n    depth = 0;\n  } else if (Math.abs(props.height) > Math.abs(props.depth)) {\n    length = Math.abs(props.height);\n    depth = -Math.abs(props.height);\n  } else if (Math.abs(props.height) < Math.abs(props.depth)) {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  } else {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  }\n\n  const options = {\n    color: \"#030061\",\n    responsive: true,\n    aspectRatio: 1.2,\n    maintainAspectRatio: true,\n    layout: {\n      padding: 3,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    scales: {\n      y: {\n        suggestedMin: depth,\n        suggestedMax: length,\n        // suggestedMax: Math.max(...props.data1) > 3 ? Math.max(...props.data1) : 3,\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          font: {\n            size: 12,\n          },\n        },\n      },\n      x: {\n        title: {\n          display: false,\n          text: \"Last X Games\",\n          font: {\n            size: 14,\n          },\n        },\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          display: false,\n          font: {\n            size: 14,\n          },\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 5,\n        },\n      },\n      title: {\n        display: true,\n        text: props.type,\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  const labels = Array.from(props.data1.keys());\n\n  let data = {\n    labels,\n    datasets: [\n      {\n        label: props.team1,\n        font: {\n          color: \"black\",\n        },\n        data: props.data1,\n        borderColor: \"#030061\",\n        borderWidth: 3,\n        backgroundColor: \"#030061\",\n        tension: props.tension,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        borderColor: \"#970d00\",\n        borderWidth: 3,\n        backgroundColor: \"#970d00\",\n        tension: props.tension,\n      }\n    ],\n  };\n\n  return <Line options={options} data={data} />;\n}\n\nexport function MultilineChart(props) {\n  let length;\n  let depth;\n\n  if (props.type === \"Points over time\") {\n    length = props.data1.length * 3;\n    depth = 0;\n  } else if (props.type === \"Rolling average points over last 10\") {\n    length = Math.abs(props.height);\n    depth = 0;\n  } else if (Math.abs(props.height) > Math.abs(props.depth)) {\n    length = Math.abs(props.height);\n    depth = -Math.abs(props.height);\n  } else if (Math.abs(props.height) < Math.abs(props.depth)) {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  } else {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  }\n\n  const options = {\n    color: \"#030061\",\n    responsive: true,\n    aspectRatio: 1.2,\n    maintainAspectRatio: true,\n    layout: {\n      padding: 3,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    scales: {\n      y: {\n        suggestedMin: depth,\n        suggestedMax: length,\n        // suggestedMax: Math.max(...props.data1) > 3 ? Math.max(...props.data1) : 3,\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          font: {\n            size: 12,\n          },\n        },\n      },\n      x: {\n        title: {\n          display: false,\n          text: \"Last X Games\",\n          font: {\n            size: 14,\n          },\n        },\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          display: false,\n          font: {\n            size: 14,\n          },\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 5,\n        },\n      },\n      title: {\n        display: true,\n        text: props.type,\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  const labels = Array.from(props.data1.keys());\n\n  let data = {\n    labels,\n    datasets: [\n      {\n        label: props.team1,\n        font: {\n          color: \"black\",\n        },\n        data: props.data1,\n        borderColor: \"#030061\",\n        borderWidth: 3,\n        backgroundColor: \"#030061\",\n        tension: props.tension,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        borderColor: \"#970d00\",\n        borderWidth: 3,\n        backgroundColor: \"#970d00\",\n        tension: props.tension,\n      },\n      {\n        label: `${props.team1} XG Diff`,\n        font: {\n          color: \"black\",\n        },\n        data: props.data3,\n        borderColor: \"#0600d6\",\n        borderWidth: 3,\n        backgroundColor: \"#0600d6\",\n        tension: props.tension,\n        hidden: true,\n      },\n      {\n        label: `${props.team2} XG Diff`,\n        font: {\n          color: \"black\",\n        },\n        data: props.data4,\n        borderColor: \"#be1000\",\n        borderWidth: 3,\n        backgroundColor: \"#be1000\",\n        tension: props.tension,\n        hidden: true,\n      },\n    ],\n  };\n\n  return <Line options={options} data={data} />;\n}\n\n\nexport function DoughnutChart(props) {\n  const options = {\n    color: \"#030061\",\n\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 10,\n          color: \"#030061\",\n        },\n      },\n      title: {\n        display: true,\n        text: \"XG Tipping Form Comparison\",\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  const data = {\n    labels: [props.homeTeam, props.awayTeam],\n    datasets: [\n      {\n        data: props.data,\n        backgroundColor: [\"#030061\", \"#970d00\"],\n        rotation: 270,\n        hoverOffset: 4,\n        cutout: \"75%\",\n        circumference: 180,\n      },\n    ],\n  };\n\n  const config = {\n    type: \"doughnut\",\n    data: data,\n  };\n\n  return <Doughnut options={options} data={data} />;\n}\n\nexport function RadarChart(props) {\n  const options = {\n    color: \"#030061\",\n    scales: {\n      r: {\n        angleLines: {\n          display: false,\n        },\n        suggestedMin: 0,\n        suggestedMax: 1,\n        ticks: {\n          precision: 0,\n          display: false,\n        },\n        // grid: {\n        //     circular: true,\n        //   }\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 10,\n          color: \"#030061\",\n        },\n      },\n      title: {\n        display: true,\n        text: props.title,\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  let data = {\n    labels: [\n      \"Attack rating\",\n      \"Defence rating\",\n      \"Ball retention\",\n      \"XG For\",\n      \"XG Against\",\n      \"Directness\",\n      \"Attacking precision\",\n    ],\n    datasets: [\n      {\n        label: props.team1,\n        data: props.data,\n        fill: true,\n        backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n        borderColor: \"#030061\",\n        pointBackgroundColor: \"#030061\",\n        pointBorderColor: \"#fff\",\n        pointHoverBackgroundColor: \"#fff\",\n        pointHoverBorderColor: \"rgb(255, 99, 132)\",\n        borderWidth: 2,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        fill: true,\n        backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n        borderColor: \"#970d00\",\n        pointBackgroundColor: \"#970d00\",\n        pointBorderColor: \"#fff\",\n        pointHoverBackgroundColor: \"#fff\",\n        pointHoverBorderColor: \"rgb(54, 162, 235)\",\n        borderWidth: 2,\n      },\n    ],\n  };\n\n  return <Radar options={options} data={data} />;\n}\n\nexport function BarChart(props) {\n  const datasetOne = props.data1;\n  const datasetTwo = props.data2;\n  const sum = datasetTwo.map(function (num, idx) {\n    return num - datasetOne[idx];\n  });\n\n  const max = Math.max(...sum);\n  const min = Math.min(...sum);\n\n  const largest = findLargestNum(max, min);\n\n  function findLargestNum(numOne, numTwo) {\n    const tempArr = [];\n    const firstNum = Math.abs(numOne);\n    const secondNum = Math.abs(numTwo);\n    tempArr.push(firstNum, secondNum);\n\n    return Math.max(...tempArr) + 1;\n  }\n\n  const options = {\n    color: \"#030061\",\n    indexAxis: \"y\",\n    // Elements options apply to all of the options unless overridden in a dataset\n    // In this case, we are setting the border of each horizontal bar to be 2px wide\n    aspectRatio: 1.3,\n    elements: {\n      bar: {\n        borderWidth: 2,\n      },\n    },\n    scales: {\n      x: {\n        min: -8,\n        max: 8,\n        ticks: {\n          display: false,\n        },\n      },\n      y: {\n        ticks: {\n          font: {\n            size: 10,\n          },\n        },\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: false,\n      },\n      title: {\n        display: true,\n        text: props.text,\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  const labels = [\n    \"Highest Goals\",\n    \"Fewest Conceeded\",\n    \"PPG\",\n    \"Highest XG\",\n    \"Fewest XG Conceeded\",\n    \"Shots On Target\",\n    \"Dangerous Attacks\",\n    \"Av. Possession\",\n    \"Home/Away Goal Diff\",\n    \"Corners\",\n  ];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        // label: 'Dataset 1',\n        legend: {\n          display: false,\n        },\n        data: sum,\n        backgroundColor(context) {\n          const index = context.dataIndex;\n          const value = context.dataset.data[index];\n          return value < 0 ? \"#030061\" : \"#970d00\";\n        },\n      },\n    ],\n  };\n\n  return <Bar options={options} data={data} />;\n}\n\nexport function BarChartTwo(props) {\n  const dataset = [props.data1, props.data2]\n\n  const options = {\n    color: \"#030061\",\n    indexAxis: \"x\",\n    // Elements options apply to all of the options unless overridden in a dataset\n    // In this case, we are setting the border of each horizontal bar to be 2px wide\n    aspectRatio: 1.3,\n    elements: {\n      bar: {\n        borderWidth: 2,\n      },\n    },\n    scales: {\n      y: {\n        min: -0.8,\n        max: 0.8,\n        ticks: {\n          display: true,\n          font: {\n            size: 10,\n          },\n        },\n      },\n      // y: {\n      //   suggestedMin: -0.8,\n      //   suggestedMax: 0.8,\n      //   ticks: {\n      //     font: {\n      //       size: 10,\n      //     },\n      //   },\n      // },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: true,\n      },\n      title: {\n        display: true,\n        text: [props.text],\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n      subtitle: {\n        display: true,\n        text: \"Green - Improving | Red - Worsening\",\n        color: \"#030061\",\n        font: {\n          size: 12,\n        },\n        padding: {\n          bottom: 10,\n        },\n      },\n    },\n  };\n\n  const labels = [\n    props.homeTeam,\n    props.awayTeam,\n  ];\n\n  const data = {\n    labels: labels,\n    datasets: [\n      {\n        legend: {\n          display: false,\n        },\n        // label: \"XG Recent Swing\",\n        data: dataset,\n        ticks: {\n          font: {\n            size: 14,\n          },\n        },\n        barThickness: 120,\n        backgroundColor(context) {\n          const index = context.dataIndex;\n          const value = context.dataset.data[index];\n          return value < 0 ? \"#730a00\" : \"#016001\";\n        },\n      },\n    ],\n  };\n\n  return <Bar options={options} data={data} />;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SofaLineupsWidget = ({ id, team1, team2, time, homeGoals, awayGoals }) => {\n  const iframeSrc = `https://widgets.sofascore.com/embed/lineups?id=${id}&widgetTheme=light`;\n\n  let differenceInSeconds, minutes\n  const currentTime = new Date().getTime() / 1000;\n  // Calculate the difference in seconds\n    if(time > 0){\n        differenceInSeconds = time - currentTime;\n        minutes = Math.floor(differenceInSeconds / 60);\n    } else {\n        minutes = -99999999\n    }\n\n\n\n  if(team1 === \"N/A\") {\n    return <h6>No lineups available for this match yet</h6>\n  } else if (minutes > 60) {\n    return (\n      <div>\n        <h6>Predicted lineups</h6>\n        <iframe\n          id={`sofa-lineups-embed-${id}`}\n          src={iframeSrc}\n          style={{\n            height: \"786px\",\n            maxWidth: \"800px\",\n            width: \"100%\",\n            border: \"0\",\n          }}\n          scrolling=\"no\"\n          title=\"SofaScore Lineups\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n      </div>\n    );\n  } else if (minutes < 60 && minutes > 0) {\n    return (\n      <div>\n        <h6>Lineups</h6>\n        <iframe\n          id={`sofa-lineups-embed-${id}`}\n          src={iframeSrc}\n          style={{\n            height: \"786px\",\n            maxWidth: \"800px\",\n            width: \"100%\",\n            border: \"0\",\n          }}\n          scrolling=\"no\"\n          title=\"SofaScore Lineups\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n      </div>\n    );\n  } else if (minutes < 0) {\n    return (\n      <div>\n        <div className=\"CurrentScore\">Score: {`${team1}: ${homeGoals} - ${team2}: ${awayGoals}`}</div>\n        <span>Score not live updated</span>\n        <h6 className=\"AttackingMomentum\">Live attacking momentum and goals</h6>\n        <iframe\n          width=\"100%\"\n          height=\"286\"\n          src={`https://widgets.sofascore.com/embed/attackMomentum?id=${id}&widgetTheme=light`}\n          frameborder=\"0\"\n          scrolling=\"no\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n        <h6>Lineups and in-play ratings</h6>\n        <iframe\n          id={`sofa-lineups-embed-${id}`}\n          src={iframeSrc}\n          style={{\n            height: \"786px\",\n            maxWidth: \"800px\",\n            width: \"100%\",\n            border: \"0\",\n          }}\n          scrolling=\"no\"\n          title=\"SofaScore Lineups\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n      </div>\n    );\n  }\n  else {\n    return <h6>{`Lineups coming in approximately ${minutes - 60} minutes`}</h6>;\n  }\n};\n\n\nSofaLineupsWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  team1: PropTypes.string.isRequired,\n  team2: PropTypes.string.isRequired,\n};\n\nexport default SofaLineupsWidget;\n","import ReactDOM from \"react-dom\";\nimport { Button } from \"../components/Button\";\nimport Stats from \"../components/createStatsDiv\";\nimport Div from \"../components/Div\";\nimport { allForm } from \"../logic/getFixtures\";\nimport { getTeamStats } from \"../logic/getTeamStats\";\nimport { getPointsFromLastX } from \"../logic/getScorePredictions\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport GenerateFormSummary from \"../logic/compareFormTrend\";\nimport {\n  Chart,\n  MultilineChart,\n  RadarChart,\n  BarChart,\n  BarChartTwo,\n  DoughnutChart,\n} from \"../components/Chart\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { clicked } from \"../logic/getScorePredictions\";\nimport SofaLineupsWidget from \"../components/SofaScore\";\nimport { arrayOfGames } from \"../logic/getFixtures\";\nimport { userDetail } from \"../logic/authProvider\";\nimport { checkUserPaidStatus } from \"../logic/hasUserPaid\";\nimport {generateAIInsights} from \"../logic/getAIStats\"\n\nexport async function getPointAverage(pointTotal, games) {\n  return pointTotal / games;\n}\n\n\nexport async function calculateAttackingStrength(stats) {\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    // averagePossession: 0.15,\n    \"Average Dangerous Attacks\": 0.05,\n    \"Average Shots\": 0.05,\n    \"Average Shots On Target\": 0.15,\n    \"Average Expected Goals\": 0.15,\n    \"Recent XG\": 0.15,\n    \"Average Goals\": 0.3,\n    Corners: 0,\n    \"Average Shot Value\": 0.1,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    // averagePossession: { min: 25, max: 75 },\n    \"Average Dangerous Attacks\": { min: 25, max: 75 }, // Adjust the max value as needed\n    \"Average Shots\": { min: 4, max: 25 }, // Adjust the max value as needed\n    \"Average Shots On Target\": { min: 3, max: 7 }, // Adjust the max value as needed\n    \"Average Expected Goals\": { min: 0.75, max: 2.25 }, // Adjust the max value as needed\n    \"Recent XG\": { min: 0.5, max: 2.25 }, // Adjust the max value as needed\n    \"Average Goals\": { min: 0, max: 3 }, // Adjust the max value as needed\n    Corners: { min: 2, max: 9 },\n    \"Average Shot Value\": { min: 8.5, max: 13 },\n  };\n\n  // Normalize each metric value and calculate the weighted sum\n  let weightedSum = 0;\n  for (const metric in stats) {\n    if (\n      stats.hasOwnProperty(metric) &&\n      weights.hasOwnProperty(metric) &&\n      ranges.hasOwnProperty(metric)\n    ) {\n      const normalizedValue = Math.max(\n        0,\n        Math.min(\n          1,\n          (stats[metric] - ranges[metric].min) /\n            (ranges[metric].max - ranges[metric].min)\n        )\n      );\n      weightedSum += normalizedValue * weights[metric];\n    } else {\n      console.log(metric);\n    }\n  }\n\n  return parseFloat(weightedSum.toFixed(2));\n}\n\nexport async function calculateDefensiveStrength(stats, normalizedValue = 1) {\n  let normValue = normalizedValue;\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    \"Average XG Against\": 0.2,\n    \"Recent XG Against\": 0.3,\n    \"Average Goals Against\": 0.4,\n    \"Average SOT Against\": 0.1,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    \"Average XG Against\": { min: 0.5, max: 2.25 }, // Adjust the max value as needed\n    \"Recent XG Against\": { min: 0.75, max: 2.25 },\n    \"Average Goals Against\": { min: 0, max: 3 }, // Adjust the max value as needed\n    \"Average SOT Against\": { min: 3, max: 7 },\n  };\n\n  // Normalize each metric value and calculate the weighted sum\n  let weightedSum = 0;\n  for (const metric in stats) {\n    if (\n      stats.hasOwnProperty(metric) &&\n      weights.hasOwnProperty(metric) &&\n      ranges.hasOwnProperty(metric)\n    ) {\n      // Normalize the value and clamp it between 0 and 1\n      let normalizedValue =\n        (stats[metric] - ranges[metric].min) /\n        (ranges[metric].max - ranges[metric].min);\n      normalizedValue = Math.max(0, Math.min(1, normalizedValue));\n\n      // Reverse logic for defensive strength: better defense, lower metric value\n      let val = normValue - normalizedValue;\n\n      // Add the weighted value to the weightedSum\n      weightedSum += val * weights[metric];\n    }\n  }\n\n  return parseFloat(weightedSum.toFixed(2));\n}\n\nexport async function calculateMetricStrength(metricName, metricValue) {\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    averagePossession: 1,\n    xgFor: 1,\n    xgAgainst: 1,\n    directnessOverall: 1,\n    accuracyOverall: 1,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    averagePossession: { min: 20, max: 80 },\n    xgFor: { min: 0.25, max: 2.75 },\n    xgAgainst: { min: 0.25, max: 2.75 },\n    directnessOverall: { min: 0.5, max: 7 },\n    accuracyOverall: { min: 3, max: 25 },\n  };\n\n  // Ensure the metric is valid and exists in the weights and ranges objects\n  if (\n    !weights.hasOwnProperty(metricName) ||\n    !ranges.hasOwnProperty(metricName)\n  ) {\n    throw new Error(\"Invalid metric name or missing normalization range.\");\n  }\n\n  // Normalize the metric value\n  const normalizedValue =\n    (metricValue - ranges[metricName].min) /\n    (ranges[metricName].max - ranges[metricName].min);\n\n  // Calculate the weighted score\n  const weightedScore = normalizedValue * weights[metricName];\n\n  return parseFloat(weightedScore.toFixed(2));\n}\n\n// export async function getDefenceStrength(goalsAgainst) {\n//   let strength;\n//   switch (true) {\n//     case goalsAgainst >= 2.8:\n//       strength = 1;\n//       break;\n//     case goalsAgainst >= 2.5 && goalsAgainst < 2.8:\n//       strength = 2;\n//       break;\n//     case goalsAgainst >= 2.2 && goalsAgainst < 2.5:\n//       strength = 3;\n//       break;\n//     case goalsAgainst >= 1.9 && goalsAgainst < 2.2:\n//       strength = 4;\n//       break;\n//     case goalsAgainst >= 1.6 && goalsAgainst < 1.9:\n//       strength = 5;\n//       break;\n//     case goalsAgainst >= 1.3 && goalsAgainst < 1.6:\n//       strength = 6;\n//       break;\n//     case goalsAgainst >= 1 && goalsAgainst < 1.3:\n//       strength = 7;\n//       break;\n//     case goalsAgainst >= 0.7 && goalsAgainst < 1:\n//       strength = 8;\n//       break;\n//     case goalsAgainst >= 0.4 && goalsAgainst < 0.7:\n//       strength = 9;\n//       break;\n//     case goalsAgainst < 0.4:\n//       strength = 10;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getPossessionStrength(possession) {\n//   let strength;\n//   switch (true) {\n//     case possession >= 68:\n//       strength = 10;\n//       break;\n//     case possession >= 64 && possession < 68:\n//       strength = 9;\n//       break;\n//     case possession >= 60 && possession < 64:\n//       strength = 8;\n//       break;\n//     case possession >= 56 && possession < 60:\n//       strength = 7;\n//       break;\n//     case possession >= 52 && possession < 56:\n//       strength = 6;\n//       break;\n//     case possession >= 48 && possession < 52:\n//       strength = 5;\n//       break;\n//     case possession >= 44 && possession < 48:\n//       strength = 4;\n//       break;\n//     case possession >= 40 && possession < 44:\n//       strength = 3;\n//       break;\n//     case possession >= 35 && possession < 40:\n//       strength = 2;\n//       break;\n//     case possession < 35:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getShotsStrength(Shots) {\n//   let strength;\n//   switch (true) {\n//     case Shots >= 15:\n//       strength = 10;\n//       break;\n//     case Shots >= 14.25 && Shots < 15:\n//       strength = 9;\n//       break;\n//     case Shots >= 13.5 && Shots < 14.25:\n//       strength = 8;\n//       break;\n//     case Shots >= 12.75 && Shots < 13.5:\n//       strength = 7;\n//       break;\n//     case Shots >= 12 && Shots < 12.75:\n//       strength = 6;\n//       break;\n//     case Shots >= 11.25 && Shots < 12:\n//       strength = 5;\n//       break;\n//     case Shots >= 10.5 && Shots < 11.25:\n//       strength = 4;\n//       break;\n//     case Shots >= 9.75 && Shots < 10.5:\n//       strength = 3;\n//       break;\n//     case Shots >= 9 && Shots < 9.75:\n//       strength = 2;\n//       break;\n//     case Shots < 9:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getShotsStrengthHorA(Shots) {\n//   let strength;\n//   switch (true) {\n//     case Shots >= 19.5:\n//       strength = 10;\n//       break;\n//     case Shots >= 18 && Shots < 19.5:\n//       strength = 9;\n//       break;\n//     case Shots >= 17 && Shots < 18:\n//       strength = 8;\n//       break;\n//     case Shots >= 15.5 && Shots < 17:\n//       strength = 7;\n//       break;\n//     case Shots >= 14 && Shots < 15.5:\n//       strength = 6;\n//       break;\n//     case Shots >= 12.5 && Shots < 14:\n//       strength = 5;\n//       break;\n//     case Shots >= 11 && Shots < 12.5:\n//       strength = 4;\n//       break;\n//     case Shots >= 9.5 && Shots < 11:\n//       strength = 3;\n//       break;\n//     case Shots >= 8 && Shots < 9.5:\n//       strength = 2;\n//       break;\n//     case Shots < 8:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGForStrength(XG) {\n//   let strength;\n//   switch (true) {\n//     case XG >= 2.9:\n//       strength = 10;\n//       break;\n//     case XG >= 2.6 && XG < 2.9:\n//       strength = 9;\n//       break;\n//     case XG >= 2.3 && XG < 2.6:\n//       strength = 8;\n//       break;\n//     case XG >= 2 && XG < 2.3:\n//       strength = 7;\n//       break;\n//     case XG >= 1.7 && XG < 2:\n//       strength = 6;\n//       break;\n//     case XG >= 1.4 && XG < 1.7:\n//       strength = 5;\n//       break;\n//     case XG >= 1.1 && XG < 1.4:\n//       strength = 4;\n//       break;\n//     case XG >= 0.8 && XG < 1.1:\n//       strength = 3;\n//       break;\n//     case XG >= 0.5 && XG < 0.8:\n//       strength = 2;\n//       break;\n//     case XG < 0.5:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGAgainstStrength(XGAgainst) {\n//   let strength;\n//   switch (true) {\n//     case XGAgainst >= 2.9:\n//       strength = 1;\n//       break;\n//     case XGAgainst >= 2.6 && XGAgainst < 2.9:\n//       strength = 2;\n//       break;\n//     case XGAgainst >= 2.3 && XGAgainst < 2.6:\n//       strength = 3;\n//       break;\n//     case XGAgainst >= 2 && XGAgainst < 2.3:\n//       strength = 4;\n//       break;\n//     case XGAgainst >= 1.7 && XGAgainst < 2:\n//       strength = 5;\n//       break;\n//     case XGAgainst >= 1.4 && XGAgainst < 1.7:\n//       strength = 6;\n//       break;\n//     case XGAgainst >= 1.1 && XGAgainst < 1.4:\n//       strength = 7;\n//       break;\n//     case XGAgainst >= 0.8 && XGAgainst < 1.1:\n//       strength = 8;\n//       break;\n//     case XGAgainst >= 0.5 && XGAgainst < 0.8:\n//       strength = 9;\n//       break;\n//     case XGAgainst < 0.5:\n//       strength = 10;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGDifferentialStrength(XGDiff) {\n//   let strength;\n//   switch (true) {\n//     case XGDiff >= 1.5:\n//       strength = 10;\n//       break;\n//     case XGDiff >= 1 && XGDiff < 1.5:\n//       strength = 9;\n//       break;\n//     case XGDiff >= 0.5 && XGDiff < 1:\n//       strength = 8;\n//       break;\n//     case XGDiff >= 0.25 && XGDiff < 0.5:\n//       strength = 7;\n//       break;\n//     case XGDiff > 0 && XGDiff < 0.25:\n//       strength = 6;\n//       break;\n//     case XGDiff <= 0 && XGDiff > -0.25:\n//       strength = 5;\n//       break;\n//     case XGDiff <= -0.25 && XGDiff > -0.5:\n//       strength = 4;\n//       break;\n//     case XGDiff <= -0.5 && XGDiff > -1:\n//       strength = 3;\n//       break;\n//     case XGDiff <= -1 && XGDiff > -1.5:\n//       strength = 2;\n//       break;\n//     case XGDiff <= -1.5:\n//       strength = 1;\n//       break;\n//     default:\n//       console.log(\"default clause triggered\");\n//       break;\n//   }\n//   return strength;\n// }\n\nexport async function getXGtoActualDifferentialStrength(XGDiff) {\n  let strength;\n  switch (true) {\n    case XGDiff >= 1.5:\n      strength = 10;\n      break;\n    case XGDiff >= 1 && XGDiff < 1.5:\n      strength = 9;\n      break;\n    case XGDiff >= 0.5 && XGDiff < 1:\n      strength = 8;\n      break;\n    case XGDiff >= 0.25 && XGDiff < 0.5:\n      strength = 7;\n      break;\n    case XGDiff > 0 && XGDiff < 0.25:\n      strength = 6;\n      break;\n    case XGDiff <= 0 && XGDiff > -0.25:\n      strength = 5;\n      break;\n    case XGDiff <= -0.25 && XGDiff > -0.5:\n      strength = 4;\n      break;\n    case XGDiff <= -0.5 && XGDiff > -1:\n      strength = 3;\n      break;\n    case XGDiff <= -1 && XGDiff > -1.5:\n      strength = 2;\n      break;\n    case XGDiff <= -1.5:\n      strength = 1;\n      break;\n    default:\n      strength = 1;\n      break;\n  }\n  return strength;\n}\n\nlet rollingGoalDiffTotalHome = [];\nlet rollingGoalDiffTotalAway = [];\nlet rollingXGDiffTotalHome = [];\nlet rollingXGDiffTotalAway = [];\nlet rollingSOTDiffTotalHome = [];\nlet rollingSOTDiffTotalAway = [];\n\nexport async function createStatsDiv(game, displayBool) {\n  if (game.status !== \"void\") {\n    // takes the displayBool boolean from the fixture onClick and sets the styling of the stats div from there\n    function styling(testBool) {\n      let bool = testBool;\n      if (bool === true && clicked === true) {\n        // set stats element to display flex\n        return { display: \"block\" };\n      } else {\n        // set stats element to display none\n        return { display: \"none\" };\n      }\n    }\n    let style = styling(displayBool);\n\n    if (clicked === false) {\n      alert(\"Tap Get Predictions to fetch all game stats first\");\n    } else {\n      let index = 2;\n      let divider = 10;\n\n      let gameStats = allForm.find((match) => match.id === game.id);\n      const gameArrayHome = [];\n      const gameArrayAway = [];\n      const gameArrayHomeTeamHomeGames = [];\n      const gameArrayAwayTeamAwayGames = [];\n      let goalDiffArrayHome;\n      let goalDiffArrayAway;\n      let xgDiffArrayHome;\n      let xgDiffArrayAway;\n      let sotDiffArrayHome;\n      let sotDiffArrayAway;\n      let latestHomeGoalDiff;\n      let latestAwayGoalDiff;\n\n      var getEMA = (a, r) =>\n        a.reduce(\n          (p, n, i) =>\n            i\n              ? p.concat(\n                  (2 * n) / (r + 1) + (p[p.length - 1] * (r - 1)) / (r + 1)\n                )\n              : p,\n          [a[0]]\n        );\n\n      const homeForm = gameStats.home[index];\n      const awayForm = gameStats.away[index];\n\n      if (displayBool === true) {\n        // let fixtures = await fetch(\n        //   `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${gameStats.leagueId}`\n        // );\n\n        const pos = allLeagueResultsArrayOfObjects\n          .map((i) => i.id)\n          .indexOf(gameStats.leagueId);\n        let matches = allLeagueResultsArrayOfObjects[pos];\n        // await fixtures.json().then((matches) => {\n        const resultHome = matches.fixtures.filter(\n          (game) =>\n            game.home_name === gameStats.home.teamName ||\n            game.away_name === gameStats.home.teamName\n        );\n\n        const resultHomeOnly = matches.fixtures.filter(\n          (game) => game.home_name === gameStats.home.teamName\n        );\n\n        resultHome.sort((a, b) => b.date_unix - a.date_unix);\n        resultHomeOnly.sort((a, b) => b.date_unix - a.date_unix);\n\n        for (let i = 0; i < resultHome.length; i++) {\n          let unixTimestamp = resultHome[i].date_unix;\n          let milliseconds = unixTimestamp * 1000;\n          let dateObject = new Date(milliseconds).toLocaleString(\"en-GB\", {\n            timeZone: \"UTC\",\n          });\n\n          let won;\n          let goalsScored;\n          let goalsConceeded;\n\n          switch (true) {\n            case resultHome[i].home_name === gameStats.home.teamName:\n              switch (true) {\n                case resultHome[i].homeGoalCount > resultHome[i].awayGoalCount:\n                  won = \"W\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                case resultHome[i].homeGoalCount ===\n                  resultHome[i].awayGoalCount:\n                  won = \"D\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                case resultHome[i].homeGoalCount < resultHome[i].awayGoalCount:\n                  won = \"L\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                default:\n                  break;\n              }\n              break;\n            case resultHome[i].away_name === gameStats.home.teamName:\n              switch (true) {\n                case resultHome[i].homeGoalCount > resultHome[i].awayGoalCount:\n                  won = \"L\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                case resultHome[i].homeGoalCount ===\n                  resultHome[i].awayGoalCount:\n                  won = \"D\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                case resultHome[i].homeGoalCount < resultHome[i].awayGoalCount:\n                  won = \"W\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                default:\n                  break;\n              }\n              break;\n            default:\n              break;\n          }\n\n          gameArrayHome.push({\n            id: resultHome[i].id,\n            date: dateObject,\n            homeTeam: resultHome[i].home_name,\n            homeGoals: resultHome[i].homeGoalCount,\n            homeXG: resultHome[i].team_a_xg,\n            homeOdds: resultHome[i].odds_ft_1,\n            awayTeam: resultHome[i].away_name,\n            awayGoals: resultHome[i].awayGoalCount,\n            awayXG: resultHome[i].team_b_xg,\n            awayOdds: resultHome[i].odds_ft_2,\n            won: won,\n            homeShots: resultHome[i].team_a_shots,\n            awayShots: resultHome[i].team_b_shots,\n            homeSot: resultHome[i].team_a_shotsOnTarget,\n            awaySot: resultHome[i].team_b_shotsOnTarget,\n            homeRed: resultHome[i].team_a_red_cards,\n            awayRed: resultHome[i].team_b_red_cards,\n            homePossession: resultHome[i].team_a_possession,\n            awayPossession: resultHome[i].team_b_possession,\n            homeDangerousAttacks: resultHome[i].team_a_dangerous_attacks,\n            awayDangerousAttacks: resultHome[i].team_b_dangerous_attacks,\n            homePPG: resultHome[i].pre_match_teamA_overall_ppg,\n            awayPPG: resultHome[i].pre_match_teamB_overall_ppg,\n            unixTimestamp: resultHome[i].date_unix,\n            goalsFor: goalsScored,\n            goalsAgainst: goalsConceeded,\n            btts:\n              resultHome[i].homeGoalCount > 0 && resultHome[i].awayGoalCount > 0\n                ? \"\\u2714\"\n                : \"\\u2718\",\n          });\n        }\n\n        for (let i = 0; i < resultHomeOnly.length; i++) {\n          let wonHomeOrAwayOnly;\n\n          switch (true) {\n            case resultHomeOnly[i].home_name === gameStats.home.teamName:\n              switch (true) {\n                case resultHomeOnly[i].homeGoalCount >\n                  resultHomeOnly[i].awayGoalCount:\n                  wonHomeOrAwayOnly = \"W\";\n                  gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n                  break;\n                case resultHomeOnly[i].homeGoalCount ===\n                  resultHomeOnly[i].awayGoalCount:\n                  wonHomeOrAwayOnly = \"D\";\n                  gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n                  break;\n                case resultHomeOnly[i].homeGoalCount <\n                  resultHomeOnly[i].awayGoalCount:\n                  wonHomeOrAwayOnly = \"L\";\n                  gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n                  break;\n                default:\n                  break;\n              }\n              break;\n\n            default:\n              break;\n          }\n        }\n\n        goalDiffArrayHome = homeForm.allTeamResults.map(\n          (a) => a.scored - a.conceeded\n        );\n        goalDiffArrayHome = goalDiffArrayHome.reverse();\n        xgDiffArrayHome = homeForm.allTeamResults.map(\n          (a) => a.XG - a.XGAgainst\n        );\n        xgDiffArrayHome = xgDiffArrayHome.reverse();\n\n        sotDiffArrayHome = homeForm.allTeamResults.map(\n          (a) => a.sot - a.sotAgainst\n        );\n        sotDiffArrayHome = sotDiffArrayHome.reverse();\n\n        gameArrayHome.sort((a, b) => b.unixTimestamp - a.unixTimestamp);\n\n        rollingGoalDiffTotalHome = goalDiffArrayHome.map(\n          (\n            (sum) => (value) =>\n              (sum += value)\n          )(0)\n        );\n        rollingXGDiffTotalHome = xgDiffArrayHome.map(\n          (\n            (sum) => (value) =>\n              (sum += value)\n          )(0)\n        );\n        rollingSOTDiffTotalHome = sotDiffArrayHome.map(\n          (\n            (sum) => (value) =>\n              (sum += value)\n          )(0)\n        );\n\n        const resultAway = matches.fixtures.filter(\n          (game) =>\n            game.away_name === gameStats.away.teamName ||\n            game.home_name === gameStats.away.teamName\n        );\n\n        const resultAwayOnly = matches.fixtures.filter(\n          (game) => game.away_name === gameStats.away.teamName\n        );\n\n        resultAway.sort((a, b) => b.date_unix - a.date_unix);\n        resultAwayOnly.sort((a, b) => b.date_unix - a.date_unix);\n\n        for (let i = 0; i < resultAway.length; i++) {\n          let unixTimestamp = resultAway[i].date_unix;\n          let milliseconds = unixTimestamp * 1000;\n          let dateObject = new Date(milliseconds).toLocaleString(\"en-GB\", {\n            timeZone: \"UTC\",\n          });\n\n          let won;\n          let goalsScored;\n          let goalsConceeded;\n\n          switch (true) {\n            case resultAway[i].home_name === gameStats.away.teamName:\n              switch (true) {\n                case resultAway[i].homeGoalCount > resultAway[i].awayGoalCount:\n                  won = \"W\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                case resultAway[i].awayGoalCount ===\n                  resultAway[i].homeGoalCount:\n                  won = \"D\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                case resultAway[i].homeGoalCount < resultAway[i].awayGoalCount:\n                  won = \"L\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                default:\n                  break;\n              }\n              break;\n\n            case resultAway[i].away_name === gameStats.away.teamName:\n              switch (true) {\n                case resultAway[i].homeGoalCount > resultAway[i].awayGoalCount:\n                  won = \"L\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                case resultAway[i].homeGoalCount ===\n                  resultAway[i].awayGoalCount:\n                  won = \"D\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                case resultAway[i].homeGoalCount < resultAway[i].awayGoalCount:\n                  won = \"W\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                default:\n                  break;\n              }\n              break;\n            default:\n              break;\n          }\n\n          gameArrayAway.push({\n            id: resultAway[i].id,\n            date: dateObject,\n            homeTeam: resultAway[i].home_name,\n            homeGoals: resultAway[i].homeGoalCount,\n            homeXG: resultAway[i].team_a_xg,\n            homeOdds: resultAway[i].odds_ft_1,\n            awayTeam: resultAway[i].away_name,\n            awayGoals: resultAway[i].awayGoalCount,\n            awayXG: resultAway[i].team_b_xg,\n            awayOdds: resultAway[i].odds_ft_2,\n            won: won,\n            homeShots: resultAway[i].team_a_shots,\n            awayShots: resultAway[i].team_b_shots,\n            homeSot: resultAway[i].team_a_shotsOnTarget,\n            awaySot: resultAway[i].team_b_shotsOnTarget,\n            homeRed: resultAway[i].team_a_red_cards,\n            awayRed: resultAway[i].team_b_red_cards,\n            homePossession: resultAway[i].team_a_possession,\n            awayPossession: resultAway[i].team_b_possession,\n            homeDangerousAttacks: resultAway[i].team_a_dangerous_attacks,\n            awayDangerousAttacks: resultAway[i].team_b_dangerous_attacks,\n            homePPG: resultAway[i].pre_match_teamA_overall_ppg,\n            awayPPG: resultAway[i].pre_match_teamB_overall_ppg,\n            unixTimestamp: resultAway[i].date_unix,\n            goalsFor: goalsScored,\n            goalsAgainst: goalsConceeded,\n            btts:\n              resultAway[i].homeGoalCount > 0 && resultAway[i].awayGoalCount > 0\n                ? \"\\u2714\"\n                : \"\\u2718\",\n          });\n        }\n\n        for (let i = 0; i < resultAwayOnly.length; i++) {\n          let wonAwayOrAwayOnly;\n\n          switch (true) {\n            case resultAwayOnly[i].away_name === gameStats.away.teamName:\n              switch (true) {\n                case resultAwayOnly[i].awayGoalCount >\n                  resultAwayOnly[i].homeGoalCount:\n                  wonAwayOrAwayOnly = \"W\";\n                  gameArrayAwayTeamAwayGames.push(wonAwayOrAwayOnly);\n                  break;\n                case resultAwayOnly[i].awayGoalCount ===\n                  resultAwayOnly[i].homeGoalCount:\n                  wonAwayOrAwayOnly = \"D\";\n                  gameArrayAwayTeamAwayGames.push(wonAwayOrAwayOnly);\n                  break;\n                case resultAwayOnly[i].awayGoalCount <\n                  resultAwayOnly[i].homeGoalCount:\n                  wonAwayOrAwayOnly = \"L\";\n                  gameArrayAwayTeamAwayGames.push(wonAwayOrAwayOnly);\n                  break;\n                default:\n                  break;\n              }\n              break;\n\n            default:\n              break;\n          }\n        }\n\n        goalDiffArrayAway = awayForm.allTeamResults.map(\n          (a) => a.scored - a.conceeded\n        );\n        goalDiffArrayAway = goalDiffArrayAway.reverse();\n        xgDiffArrayAway = awayForm.allTeamResults.map(\n          (a) => a.XG - a.XGAgainst\n        );\n        xgDiffArrayAway = xgDiffArrayAway.reverse();\n\n        sotDiffArrayAway = awayForm.allTeamResults.map(\n          (a) => a.sot - a.sotAgainst\n        );\n        sotDiffArrayAway = sotDiffArrayAway.reverse();\n\n        gameArrayAway.sort((a, b) => b.unixTimestamp - a.unixTimestamp);\n\n        rollingGoalDiffTotalAway = goalDiffArrayAway.map(\n          (\n            (sum) => (value) =>\n              (sum += value)\n          )(0)\n        );\n        rollingXGDiffTotalAway = xgDiffArrayAway.map(\n          (\n            (sum) => (value) =>\n              (sum += value)\n          )(0)\n        );\n        rollingSOTDiffTotalAway = sotDiffArrayAway.map(\n          (\n            (sum) => (value) =>\n              (sum += value)\n          )(0)\n        );\n        // });\n      }\n\n      const bttsArrayHome = Array.from(gameArrayHome, (x) => x.btts);\n      const bttsArrayHomeOnly = Array.from(gameArrayHomeTeamHomeGames, (x) => x.btts);\n\n      \n      const bttsArrayAway = Array.from(gameArrayAway, (x) => x.btts);\n      const bttsArrayAwayOnly = Array.from(gameArrayAwayTeamAwayGames, (x) => x.btts);\n\n      const resultsArrayHome = Array.from(gameArrayHome, (x) => x.won);\n      const resultsArrayAway = Array.from(gameArrayAway, (x) => x.won);\n\n      let homeTeam = gameStats.home.teamName;\n      let awayTeam = gameStats.away.teamName;\n\n      let time = game.time;\n\n      if (homeForm.last3Points === undefined) {\n        homeForm.last3Points = getPointsFromLastX(homeForm.lastThreeForm);\n\n        homeForm.last5Points = getPointsFromLastX(homeForm.LastFiveForm);\n\n        homeForm.last6Points = getPointsFromLastX(homeForm.LastSixForm);\n\n        homeForm.last10Points = getPointsFromLastX(homeForm.LastTenForm);\n\n        homeForm.homePPGame = getPointsFromLastX(homeForm.resultsHome);\n\n        awayForm.last3Points = getPointsFromLastX(awayForm.lastThreeForm);\n\n        awayForm.last5Points = getPointsFromLastX(awayForm.LastFiveForm);\n\n        awayForm.last6Points = getPointsFromLastX(awayForm.LastSixForm);\n\n        awayForm.last10Points = getPointsFromLastX(awayForm.LastTenForm);\n\n        awayForm.awayPPGame = getPointsFromLastX(awayForm.resultsAway);\n      }\n\n      // let homeThreeGameAverage = await getPointAverage(\n      //   homeForm.last3Points,\n      //   3\n      // );\n\n      let homeFiveGameAverage = await getPointAverage(homeForm.last5Points, 5);\n\n      let homeSixGameAverage = await getPointAverage(homeForm.last6Points, 6);\n\n      let homeTenGameAverage = await getPointAverage(homeForm.last10Points, 10);\n\n      homeForm.homePPGAv = await getPointAverage(\n        homeForm.homePPGame,\n        homeForm.resultsHome.length\n      );\n      homeForm.tenGameAv = homeTenGameAverage;\n      homeForm.fiveGameAv = homeFiveGameAverage;\n\n      // let awayThreeGameAverage = await getPointAverage(\n      //   awayForm.last3Points,\n      //   3\n      // );\n\n      let awayFiveGameAverage = await getPointAverage(awayForm.last5Points, 5);\n\n      let awaySixGameAverage = await getPointAverage(awayForm.last6Points, 6);\n\n      let awayTenGameAverage = await getPointAverage(awayForm.last10Points, 10);\n\n      awayForm.awayPPGAv = await getPointAverage(\n        awayForm.awayPPGame,\n        awayForm.resultsAway.length\n      );\n      awayForm.tenGameAv = awayTenGameAverage;\n      awayForm.fiveGameAv = awayFiveGameAverage;\n\n      let paid;\n      if (userDetail) {\n        paid = await checkUserPaidStatus(userDetail.uid);\n      } else {\n        paid = false;\n      }\n\n      async function getPointsFromGames(formArr) {\n        const pairings = {\n          W: 3,\n          D: 1,\n          L: 0,\n        };\n        let newArr = [];\n        let arrayOfIndividualPoints = [];\n        let sum = 0;\n\n        for (let i = 0; i < formArr.length; i++) {\n          sum = sum + pairings[formArr[i]];\n          newArr.push(sum);\n          arrayOfIndividualPoints.push(pairings[formArr[i]]);\n        }\n        return [newArr, arrayOfIndividualPoints];\n      }\n\n      async function getLastGameResult(lastGame) {\n        let text;\n        switch (true) {\n          case lastGame === \"L\":\n            text = \"Lost\";\n            break;\n          case lastGame === \"D\":\n            text = \"Drew\";\n            break;\n          case lastGame === \"W\":\n            text = \"Won\";\n            break;\n          default:\n            break;\n        }\n        return text;\n      }\n\n      let homeFormTrend = [\n        homeFiveGameAverage.toFixed(2),\n        homeTenGameAverage.toFixed(2),\n      ];\n\n      let awayFormTrend = [\n        awayFiveGameAverage.toFixed(2),\n        awayTenGameAverage.toFixed(2),\n      ];\n\n      let formTextStringHome;\n      let formTextStringAway;\n\n      // if (displayBool === true && gameStats.home[2].LeagueOrAll === \"League\") {\n      //   console.log(1)\n      formTextStringHome = await GenerateFormSummary(\n        homeForm,\n        homeForm.tenGameAv,\n        homeForm.fiveGameAv\n      );\n      formTextStringAway = await GenerateFormSummary(\n        awayForm,\n        awayForm.tenGameAv,\n        awayForm.fiveGameAv\n      );\n      // } else {\n      //   console.log(2)\n      //   formTextStringHome = \"\";\n      //   formTextStringAway = \"\";\n      // }\n\n      let favouriteRecordHome, favouriteRecordAway;\n      if (\n        homeForm.underdogCount &&\n        awayForm.underdogCount &&\n        homeForm.favouriteCount &&\n        awayForm.favouriteCount\n      ) {\n        favouriteRecordHome =\n          game.homeOdds < game.awayOdds || game.homeOdds === game.awayOdds\n            ? `${homeForm.teamName} have been favourites ${\n                homeForm.favouriteCount\n              } times. Of these games, they have Won: ${homeForm.oddsReliabilityWin.toFixed(\n                0\n              )}%, Drawn:  ${homeForm.oddsReliabilityDraw.toFixed(\n                0\n              )}%, Lost:  ${homeForm.oddsReliabilityLose.toFixed(0)}%`\n            : `${homeForm.teamName} have been underdogs ${\n                homeForm.underdogCount\n              } times. Of these games, they have Won: ${homeForm.oddsReliabilityWinAsUnderdog.toFixed(\n                0\n              )}%, Drawn:  ${homeForm.oddsReliabilityDrawAsUnderdog.toFixed(\n                0\n              )}%, Lost:  ${homeForm.oddsReliabilityLoseAsUnderdog.toFixed(\n                0\n              )}%`;\n        favouriteRecordAway =\n          game.homeOdds > game.awayOdds || game.homeOdds === game.awayOdds\n            ? `${awayForm.teamName} have been favourites ${\n                awayForm.favouriteCount\n              } times. Of these games, they have Won: ${awayForm.oddsReliabilityWin.toFixed(\n                0\n              )}%, Drawn:  ${awayForm.oddsReliabilityDraw.toFixed(\n                0\n              )}%, Lost:  ${awayForm.oddsReliabilityLose.toFixed(0)}%`\n            : `${awayForm.teamName} have been underdogs ${\n                awayForm.underdogCount\n              } times. Of these games, they have Won: ${awayForm.oddsReliabilityWinAsUnderdog.toFixed(\n                0\n              )}%, Drawn:  ${awayForm.oddsReliabilityDrawAsUnderdog.toFixed(\n                0\n              )}%, Lost:  ${awayForm.oddsReliabilityLoseAsUnderdog.toFixed(\n                0\n              )}%`;\n      } else if (\n        !homeForm.favouriteCount &&\n        awayForm.favouriteCount &&\n        !homeForm.underdogCount &&\n        awayForm.underdogCount\n      ) {\n        favouriteRecordHome =\n          \"No previous fixtures match the profile of this game.\";\n        favouriteRecordAway =\n          game.homeOdds > game.awayOdds || game.homeOdds === game.awayOdds\n            ? `${awayForm.teamName} have been favourites ${\n                awayForm.favouriteCount\n              } times. Of these games, they have Won: ${awayForm.oddsReliabilityWin.toFixed(\n                0\n              )}%, Drawn:  ${awayForm.oddsReliabilityDraw.toFixed(\n                0\n              )}%, Lost:  ${awayForm.oddsReliabilityLose.toFixed(0)}%`\n            : `${awayForm.teamName} have been underdogs ${\n                awayForm.underdogCount\n              } times. Of these games, they have Won: ${awayForm.oddsReliabilityWinAsUnderdog.toFixed(\n                0\n              )}%, Drawn:  ${awayForm.oddsReliabilityDrawAsUnderdog.toFixed(\n                0\n              )}%, Lost:  ${awayForm.oddsReliabilityLoseAsUnderdog.toFixed(\n                0\n              )}%`;\n      } else if (homeForm.oddsReliabilityWin && !awayForm.oddsReliabilityWin) {\n        favouriteRecordHome =\n          game.homeOdds < game.awayOdds || game.homeOdds === game.awayOdds\n            ? `${homeForm.teamName} have been favourites ${\n                homeForm.favouriteCount\n              } times. Of these games, they have Won: ${homeForm.oddsReliabilityWin.toFixed(\n                0\n              )}%, Drawn:  ${homeForm.oddsReliabilityDraw.toFixed(\n                0\n              )}%, Lost:  ${homeForm.oddsReliabilityLose.toFixed(0)}%`\n            : `${homeForm.teamName} have been underdogs ${\n                homeForm.underdogCount\n              } times. Of these games, they have Won: ${homeForm.oddsReliabilityWinAsUnderdog.toFixed(\n                0\n              )}%, Drawn:  ${homeForm.oddsReliabilityDrawAsUnderdog.toFixed(\n                0\n              )}%, Lost:  ${homeForm.oddsReliabilityLoseAsUnderdog.toFixed(\n                0\n              )}%`;\n        favouriteRecordAway =\n          \"No previous fixtures match the profile of this game.\";\n      } else if (!homeForm.oddsReliabilityWin && !awayForm.oddsReliabilityWin) {\n        favouriteRecordHome =\n          \"No previous fixtures match the profile of this game.\";\n        favouriteRecordAway =\n          \"No previous fixtures match the profile of this game.\";\n      }\n\n      // let homeAttackStrength = await getAttackStrength(\n      //   homeForm.ScoredOverall / 10\n      // );\n\n      const attackingMetricsHome = {\n        // averagePossession: homeForm.AveragePossessionOverall,\n        \"Average Dangerous Attacks\": homeForm.AverageDangerousAttacksOverall,\n        \"Average Shots\": homeForm.AverageShots,\n        \"Average Shots On Target\": homeForm.AverageShotsOnTargetOverall,\n        \"Average Expected Goals\": homeForm.XGOverall,\n        \"Recent XG\": homeForm.XGlast5 ? homeForm.XGlast5 : homeForm.XGOverall,\n        \"Average Goals\":\n          homeForm.averageScoredLeague !== undefined &&\n          homeForm.averageScoredLeague !== null\n            ? homeForm.averageScoredLeague\n            : homeForm.ScoredOverall / 10,\n      };\n      const attackingMetricsAway = {\n        // averagePossession: awayForm.AveragePossessionOverall,\n        \"Average Dangerous Attacks\": awayForm.AverageDangerousAttacksOverall,\n        \"Average Shots\": awayForm.AverageShots,\n        \"Average Shots On Target\": awayForm.AverageShotsOnTargetOverall,\n        \"Average Expected Goals\": awayForm.XGOverall,\n        \"Recent XG\": awayForm.XGlast5 ? awayForm.XGlast5 : awayForm.XGOverall,\n        \"Average Goals\":\n          awayForm.averageScoredLeague !== undefined &&\n          awayForm.averageScoredLeague !== null\n            ? awayForm.averageScoredLeague\n            : awayForm.ScoredOverall / 10,\n      };\n\n      const defensiveMetricsHome = {\n        \"Clean Sheet Percentage\": 100 - homeForm.CleanSheetPercentage,\n        \"Average XG Against\": homeForm.XGAgainstAvgOverall,\n        \"Recent XG Against\": homeForm.XGAgainstlast5\n          ? homeForm.XGAgainstlast5\n          : homeForm.XGAgainstAvgOverall,\n        \"Average Goals Against\":\n          homeForm.averageConceededLeague !== undefined &&\n          homeForm.averageConceededLeague !== null\n            ? homeForm.averageConceededLeague\n            : homeForm.ConcededOverall / 10,\n      };\n\n      const defensiveMetricsAway = {\n        \"Clean Sheet Percentage\": 100 - awayForm.CleanSheetPercentage,\n        \"Average XG Against\": awayForm.XGAgainstAvgOverall,\n        \"Recent XG Against\": awayForm.XGAgainstlast5\n          ? awayForm.XGAgainstlast5\n          : awayForm.XGAgainstAvgOverall,\n        \"Average Goals Against\":\n          awayForm.averageConceededLeague !== undefined &&\n          awayForm.averageConceededLeague !== null\n            ? awayForm.averageConceededLeague\n            : awayForm.ConcededOverall / 10,\n      };\n\n      let homeXGRating;\n      let awayXGRating;\n      let homeAttackStrength;\n      let homeAttackStrengthLast5;\n      let homeOnlyAttackStrength;\n      let homeDefenceStrength;\n      let homeDefenceStrengthLast5;\n      let homeOnlyDefenceStrength;\n      let homePossessionStrength;\n      let homePossessionStrengthLast5;\n      let homeOnlyPossessionStrength;\n      let homeXGForStrength;\n      let homeXGForStrengthLast5;\n      let homeOnlyXGForStrength;\n      let homeXGAgainstStrength;\n      let homeXGAgainstStrengthLast5;\n      let homeOnlyXGAgainstStrength;\n      let awayAttackStrength;\n      let awayAttackStrengthLast5;\n      let awayOnlyAttackStrength;\n      let awayDefenceStrength;\n      let awayDefenceStrengthLast5;\n      let awayOnlyDefenceStrength;\n      let awayPossessionStrength;\n      let awayPossessionStrengthLast5;\n      let awayOnlyPossessionStrength;\n      let awayXGForStrength;\n      let awayXGForStrengthLast5;\n      let awayOnlyXGForStrength;\n      let awayXGAgainstStrength;\n      let awayXGAgainstStrengthLast5;\n      let awayOnlyXGAgainstStrength;\n      let homeDirectnessStrength;\n      let homeDirectnessStrengthLast5;\n      let homeOnlyDirectnessStrength;\n      let awayDirectnessStrength;\n      let awayDirectnessStrengthLast5;\n      let awayOnlyDirectnessStrength;\n      let homeAccuracyOverallStrength;\n      let homeAccuracyOverallStrengthLast5;\n      let homeOnlyAccuracyOverallStrength;\n      let awayAccuracyOverallStrength;\n      let awayAccuracyOverallStrengthLast5;\n      let awayOnlyAccuracyOverallStrength;\n\n      if (homeForm.xgForStrength) {\n        console.log(\"not calculating\");\n        homeXGRating = homeForm.XGRating;\n        awayXGRating = awayForm.XGRating;\n        homeAttackStrength = homeForm.attackingStrength;\n        homeAttackStrengthLast5 = homeForm.attackingStrengthLast5;\n        homeOnlyAttackStrength = homeForm.attackingStrengthHomeOnly;\n        homeDefenceStrength = homeForm.defensiveStrength;\n        homeDefenceStrengthLast5 = homeForm.defensiveStrengthLast5;\n        homeOnlyDefenceStrength = homeForm.defensiveStrengthHomeOnly;\n        homePossessionStrength = homeForm.possessionStrength;\n        homePossessionStrengthLast5 = homeForm.possessionStrengthLast5;\n        homeOnlyPossessionStrength = homeForm.possessionStrengthHomeOnly;\n        homeXGForStrength = homeForm.xgForStrength;\n        homeXGForStrengthLast5 = homeForm.xgForStrengthLast5;\n        homeOnlyXGForStrength = homeForm.xgForStrengthHomeOnly;\n        homeXGAgainstStrength = homeForm.xgAgainstStrength;\n        homeXGAgainstStrengthLast5 = homeForm.xgAgainstStrengthLast5;\n        homeOnlyXGAgainstStrength = homeForm.xgAgainstStrengthHomeOnly;\n        homeDirectnessStrength = homeForm.directnessOverallStrength;\n        homeDirectnessStrengthLast5 = homeForm.directnessOverallStrengthLast5;\n        homeOnlyDirectnessStrength = homeForm.directnessHomeStrength;\n        homeAccuracyOverallStrength = homeForm.accuracyOverallStrength;\n        homeAccuracyOverallStrengthLast5 =\n          homeForm.accuracyOverallStrengthLast5;\n        homeOnlyAccuracyOverallStrength = homeForm.accuracyHomeStrength;\n        awayAttackStrength = awayForm.attackingStrength;\n        awayAttackStrengthLast5 = awayForm.attackingStrengthLast5;\n        awayOnlyAttackStrength = awayForm.attackingStrengthAwayOnly;\n        awayDefenceStrength = awayForm.defensiveStrength;\n        awayDefenceStrengthLast5 = awayForm.defensiveStrengthLast5;\n        awayOnlyDefenceStrength = awayForm.defensiveStrengthAwayOnly;\n        awayPossessionStrength = awayForm.possessionStrength;\n        awayPossessionStrengthLast5 = awayForm.possessionStrengthLast5;\n        awayOnlyPossessionStrength = awayForm.possessionStrengthAwayOnly;\n        awayXGForStrength = awayForm.xgForStrength;\n        awayXGForStrengthLast5 = awayForm.xgForStrengthLast5;\n        awayOnlyXGForStrength = awayForm.xgForStrengthAwayOnly;\n        awayXGAgainstStrength = awayForm.xgAgainstStrength;\n        awayXGAgainstStrengthLast5 = awayForm.xgAgainstStrengthLast5;\n        awayOnlyXGAgainstStrength = awayForm.xgAgainstStrengthAwayOnly;\n        awayDirectnessStrength = awayForm.directnessOverallStrength;\n        awayDirectnessStrengthLast5 = awayForm.directnessOverallStrengthLast5;\n        awayOnlyDirectnessStrength = awayForm.directnessAwayStrength;\n        awayAccuracyOverallStrength = awayForm.accuracyOverallStrength;\n        awayAccuracyOverallStrengthLast5 =\n          awayForm.accuracyOverallStrengthLast5;\n        awayOnlyAccuracyOverallStrength = awayForm.accuracyAwayStrength;\n      } else {\n        homeAttackStrength = await calculateAttackingStrength(\n          attackingMetricsHome\n        );\n\n        homeDefenceStrength = await calculateDefensiveStrength(\n          defensiveMetricsHome\n        );\n\n        homePossessionStrength = await calculateMetricStrength(\n          \"averagePossession\",\n          homeForm.AveragePossessionOverall\n        );\n\n        homeXGForStrength = await calculateMetricStrength(\n          \"xgFor\",\n          gameStats.home[2].XGOverall\n        );\n\n        homeXGAgainstStrength = await calculateMetricStrength(\n          \"xgAgainst\",\n          3 - gameStats.home[2].XGAgainstAvgOverall\n        );\n        homeDirectnessStrength = await calculateMetricStrength(\n          \"directnessOverall\",\n          homeForm.directnessOverall\n        );\n        homeAccuracyOverallStrength = await calculateMetricStrength(\n          \"accuracyOverall\",\n          homeForm.avgShotValue\n        );\n\n        awayAttackStrength = await calculateAttackingStrength(\n          attackingMetricsAway\n        );\n        awayDefenceStrength = await calculateDefensiveStrength(\n          defensiveMetricsAway\n        );\n        awayPossessionStrength = await calculateMetricStrength(\n          \"averagePossession\",\n          awayForm.AveragePossessionOverall\n        );\n        awayXGForStrength = await calculateMetricStrength(\n          \"xgFor\",\n          gameStats.away[2].XGOverall\n        );\n\n        awayXGAgainstStrength = await calculateMetricStrength(\n          \"xgAgainst\",\n          3 - gameStats.away[2].XGAgainstAvgOverall\n        );\n        awayDirectnessStrength = await calculateMetricStrength(\n          \"directnessOverall\",\n          awayForm.directnessOverall\n        );\n        awayAccuracyOverallStrength = await calculateMetricStrength(\n          \"accuracyOverall\",\n          awayForm.avgShotValue\n        );\n      }\n\n      let [formPointsHome, testArrayHome] = await getPointsFromGames(\n        gameStats.home[2].WDLRecord\n      );\n      let [formPointsAway, testArrayAway] = await getPointsFromGames(\n        gameStats.away[2].WDLRecord\n      );\n\n      let rollingGoalDiffHome = [\n        (gameStats.home[0].ScoredOverall - gameStats.home[0].ConcededOverall) /\n          10,\n        (gameStats.home[1].ScoredOverall - gameStats.home[1].ConcededOverall) /\n          6,\n        (gameStats.home[2].ScoredOverall - gameStats.home[2].ConcededOverall) /\n          5,\n      ];\n\n      let rollingGoalDiffAway = [\n        (gameStats.away[0].ScoredOverall - gameStats.away[0].ConcededOverall) /\n          10,\n        (gameStats.away[1].ScoredOverall - gameStats.away[1].ConcededOverall) /\n          6,\n        (gameStats.away[2].ScoredOverall - gameStats.away[2].ConcededOverall) /\n          5,\n      ];\n\n\n      // async function generateAIInsights(game) {\n      //   console.log(\"called\")\n      //   // ReactDOM.render(\n      //   //   <Fragment>\n      //   //    <div>Loading...</div>\n      //   //   </Fragment>,\n      //   //   document.getElementById(\"AIInsightsContainer\")\n      //   // );\n\n      //   try {\n      //     const response = await fetch(\n      //       `${process.env.REACT_APP_EXPRESS_SERVER}gemini/${game}`,\n      //       {\n      //         method: \"POST\",\n      //         headers: {\n      //           Accept: \"application/json\",\n      //           \"Content-Type\": \"application/json\",\n      //         },\n      //         body: JSON.stringify(AIPayload),\n      //       }\n      //     );\n\n      //     console.log(\"Raw Response:\", response); // See the raw response\n\n      //     if (!response.ok) {\n      //       // Check for HTTP errors\n      //       throw new Error(`HTTP error! Status: ${response.status}`);\n      //     }\n\n      //     const jsonData = await response.json(); // Parse the response body as JSON\n      //     AIMatchPreview = jsonData;\n      //     console.log(AIMatchPreview)\n      //     const formattedText = await addNewlinesAfterPeriods(AIMatchPreview.matchPreview)\n\n      //     ReactDOM.render(\n      //       <Fragment>\n      //         <h2>Preview</h2>\n      //         <div className=\"AIMatchPreview\">\n      //           {formattedText}\n      //         </div>\n      //         <h2>AI Prediction</h2>\n      //         <div className=\"AIMatchPreview\">{AIMatchPreview.prediction} <i>(may not reflect the view of XGTipping)</i></div>\n      //         <div className=\"AIContainer\">\n      //           <div className=\"HomeAIInsights\">\n      //             <div>\n      //             {AIMatchPreview.homeTeam.summary}\n      //             </div>\n      //           </div>\n      //           <div className=\"AwayAIInsights\">\n      //             <div>\n      //             {AIMatchPreview.awayTeam.summary}\n      //             </div>\n      //           </div>\n      //         </div>\n      //       </Fragment>,\n      //       document.getElementById(\"AIInsightsContainer\")\n      //     );\n      //   } catch (error) {\n      //     console.error(\"Fetch error:\", error); // Handle fetch errors\n      //   }\n      // }\n\n      const formDataMatch = [];\n\n      formDataMatch.push({\n        btts: game.btts_potential,\n      });\n\n      const formDataHome = [];\n\n      formDataHome.push({\n        name: game.homeTeam,\n        Last5: gameStats.home[2].LastFiveForm,\n        LeagueOrAll: gameStats.home[2].LeagueOrAll,\n        AverageGoals: homeForm.ScoredOverall / 10,\n        AverageConceeded: homeForm.ConcededOverall / 10,\n        AverageXG: homeForm.XGOverall,\n        AverageXGConceded: homeForm.XGAgainstAvgOverall,\n        AveragePossession: homeForm.AveragePossessionOverall,\n        AverageShotsOnTarget: homeForm.AverageShotsOnTargetOverall,\n        AverageDangerousAttacks: homeForm.AverageDangerousAttacksOverall,\n        homeOrAway: \"Home\",\n        leaguePosition: homeForm.LeaguePosition,\n        Last5PPG: homeForm.PPG,\n        SeasonPPG: homeForm.SeasonPPG,\n        formRun: homeForm.formRun,\n        goalDifference: homeForm.goalDifference,\n        goalDifferenceHomeOrAway: homeForm.goalDifferenceHomeOrAway,\n        // BttsPercentage: homeForm.BttsPercentage || \"-\",\n        // BttsPercentageHomeOrAway: homeForm.BttsPercentageHomeOrAway || \"-\",\n        CardsTotal: homeForm.CardsTotal || \"-\",\n        CornersAverage: homeForm.AverageCorners || \"-\",\n        FormTextStringHome: formTextStringHome,\n        FavouriteRecord:\n          favouriteRecordHome + `. ${homeForm.reliabilityString}`,\n        BTTSArray: bttsArrayHome,\n        Results: homeForm.resultsAll,\n        ResultsHorA: homeForm.resultsHome.reverse(),\n        XGSwing: homeForm.XGChangeRecently,\n        styleOfPlayOverall: homeForm.styleOfPlayOverall,\n        styleOfPlayHome: homeForm.styleOfPlayHome,\n        // BTTSAll: homeForm.last10btts,\n        // BTTSHorA: homeForm.last10bttsHome,\n      });\n\n      const formDataAway = [];\n\n      formDataAway.push({\n        name: game.awayTeam,\n        Last5: gameStats.away[2].LastFiveForm,\n        LeagueOrAll: gameStats.away[2].LeagueOrAll,\n        AverageGoals: awayForm.ScoredOverall / 10,\n        AverageConceeded: awayForm.ConcededOverall / 10,\n        AverageXG: awayForm.XGOverall,\n        AverageXGConceded: awayForm.XGAgainstAvgOverall,\n        AveragePossession: awayForm.AveragePossessionOverall,\n        AverageShotsOnTarget: awayForm.AverageShotsOnTargetOverall,\n        AverageDangerousAttacks: awayForm.AverageDangerousAttacksOverall,\n        homeOrAway: \"Away\",\n        leaguePosition: awayForm.LeaguePosition,\n        Last5PPG: awayForm.PPG,\n        SeasonPPG: awayForm.SeasonPPG,\n        formRun: awayForm.formRun,\n        goalDifference: awayForm.goalDifference,\n        goalDifferenceHomeOrAway: awayForm.goalDifferenceHomeOrAway,\n        // BttsPercentage: awayForm.BttsPercentage || \"-\",\n        // BttsPercentageHomeOrAway: awayForm.BttsPercentageHomeOrAway || \"-\",\n        CardsTotal: awayForm.CardsTotal || \"-\",\n        CornersAverage: awayForm.AverageCorners || \"-\",\n        FormTextStringAway: formTextStringAway,\n        FavouriteRecord:\n          favouriteRecordAway + `. ${awayForm.reliabilityString}`,\n        BTTSArray: bttsArrayAway,\n        Results: awayForm.resultsAll,\n        ResultsHorA: awayForm.resultsAway.reverse(),\n        XGSwing: awayForm.XGChangeRecently,\n        styleOfPlayOverall: awayForm.styleOfPlayOverall,\n        styleOfPlayAway: awayForm.styleOfPlayAway,\n        // BTTSAll: awayForm.last10btts,\n        // BTTSHorA: awayForm.last10bttsAway,\n      });\n\n      let formArrayHome;\n      let formArrayAway;\n      let chartType;\n\n      if (formPointsHome.length > 1) {\n        formArrayHome = formPointsHome;\n        formArrayAway = formPointsAway;\n        chartType = \"Points over time\";\n      } else {\n        formArrayHome = [\n          homeTenGameAverage,\n          homeSixGameAverage,\n          homeFiveGameAverage,\n        ];\n        formArrayAway = [\n          awayTenGameAverage,\n          awaySixGameAverage,\n          awayFiveGameAverage,\n        ];\n        chartType = \"Rolling average points over last 10\";\n      }\n\n      ReactDOM.render(\n        <div style={style}>\n          <div className=\"H2HStats\" id={`H2HStats${game.id}`}></div>\n          <div className=\"TrendsHome\" id={`TrendsHome${game.id}`}></div>\n          <div className=\"TrendsAway\" id={`TrendsAway${game.id}`}></div>\n        </div>,\n        document.getElementById(\"history\" + homeTeam)\n      );\n\n      //This tournament does not have league positions\n      if (game.leagueName === \"Europe UEFA Women's Euro\") {\n        game.homeTeamHomePosition = \"N/A\";\n        game.awayTeamAwayPosition = \"N/A\";\n      }\n\n      function singleResult(game) {\n        return (\n          <div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeXG}</span>\n              <span className=\"column\">XG</span>\n              <span className=\"column\">{game.awayXG}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeShots}</span>\n              <span className=\"column\">Shots</span>\n              <span className=\"column\">{game.awayShots}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeSot}</span>\n              <span className=\"column\">SOT</span>\n              <span className=\"column\">{game.awaySot}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeDangerousAttacks}</span>\n              <span className=\"column\">Dangerous Attacks</span>\n              <span className=\"column\">{game.awayDangerousAttacks}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homePossession}%</span>\n              <span className=\"column\">Possession</span>\n              <span className=\"column\">{game.awayPossession}%</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeRed}</span>\n              <span className=\"column\">Red cards</span>\n              <span className=\"column\">{game.awayRed}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homePPG}</span>\n              <span className=\"column\">PPG (pre-match)</span>\n              <span className=\"column\">{game.awayPPG}</span>\n            </div>\n          </div>\n        );\n      }\n\n      function singleSimilarResult(game) {\n        return (\n          <div>\n            <div className=\"ResultRowSmallDate\">\n              <span>{game.date}</span>\n            </div>\n            {/* <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.XG}</span>\n              <span className=\"column\">XG</span>\n              <span className=\"column\">{game.XGAgainst}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.sot}</span>\n              <span className=\"column\">SOT</span>\n              <span className=\"column\">{game.sotAgainst}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.possession}%</span>\n              <span className=\"column\">Possession</span>\n              <span className=\"column\">{100 - game.possession}%</span>\n            </div> */}\n          </div>\n        );\n      }\n\n      const overviewHome = gameArrayHome.slice(0, 10).map((game) => (\n        <div>\n          <Collapsable\n            classNameButton=\"ResultButton\"\n            buttonText={\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {game.homeGoals} : {game.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n              </div>\n            }\n            element={singleResult(game)}\n          />\n        </div>\n      ));\n\n      const overviewAway = gameArrayAway.slice(0, 10).map((game) => (\n        <div>\n          <Collapsable\n            classNameButton=\"ResultButton\"\n            buttonText={\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {game.homeGoals} : {game.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n              </div>\n            }\n            element={singleResult(game)}\n          />\n        </div>\n      ));\n\n      let similarGamesHome;\n\n      if (game.simlarGameResultsHome) {\n        similarGamesHome = game.simlarGameResultsHome.reverse().map((game) => (\n          <div>\n            <Collapsable\n              classNameButton=\"ResultButton\"\n              buttonText={\n                <div className={`ResultRowOverviewSmall${game.result}`}>\n                  <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                  <span className=\"columnOverviewScoreSmall\">\n                    {game.homeGoals} : {game.awayGoals}\n                  </span>\n                  <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n                </div>\n              }\n              element={singleSimilarResult(game)}\n            />\n          </div>\n        ));\n      } else {\n        similarGamesHome = (\n          <h4 className=\"NoGames\">No previous games fit this profile</h4>\n        );\n      }\n\n      let similarGamesAway;\n      if (game.simlarGameResultsAway) {\n        similarGamesAway = game.simlarGameResultsAway.reverse().map((game) => (\n          <div>\n            <Collapsable\n              classNameButton=\"ResultButton\"\n              buttonText={\n                <div className={`ResultRowOverviewSmall${game.result}`}>\n                  <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                  <span className=\"columnOverviewScoreSmall\">\n                    {game.homeGoals} : {game.awayGoals}\n                  </span>\n                  <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n                </div>\n              }\n              element={singleSimilarResult(game)}\n            />\n          </div>\n        ));\n      } else {\n        similarGamesAway = <h4>No previous games fit this profile</h4>;\n      }\n\n      function StatsHome() {\n        return (\n          <div className=\"flex-childOne\">\n            <ul style={style}>\n              <Stats\n                style={style}\n                homeOrAway=\"Home\"\n                gameCount={divider}\n                key={formDataHome[0].name}\n                last5={formDataHome[0].Last5}\n                homeOrAwayResults={gameArrayHomeTeamHomeGames}\n                LeagueOrAll={formDataHome[0].LeagueOrAll}\n                className={\"KeyStatsHome\"}\n                name={formDataHome[0].name}\n                goals={homeForm.avgScored}\n                conceeded={homeForm.avgConceeded}\n                XG={homeForm.XGOverall.toFixed(2)}\n                XGConceded={homeForm.XGAgainstAvgOverall.toFixed(2)}\n                XGSwing={homeForm.XGChangeRecently}\n                possession={homeForm.AveragePossessionOverall.toFixed(2)}\n                sot={homeForm.AverageShotsOnTargetOverall.toFixed(2)}\n                dangerousAttacks={\n                  homeForm.AverageDangerousAttacksOverall !== 0\n                    ? homeForm.AverageDangerousAttacksOverall.toFixed(2)\n                    : homeForm.AverageDangerousAttacks\n                }\n                leaguePosition={\n                  formDataHome[0].leaguePosition !== undefined &&\n                  formDataHome[0].leaguePosition !== \"undefined\"\n                    ? formDataHome[0].leaguePosition\n                    : 0\n                }\n                rawPosition={\n                  game.homeRawPosition !== undefined &&\n                  game.homeRawPosition !== \"undefined\"\n                    ? game.homeRawPosition\n                    : 0\n                }\n                homeOrAwayLeaguePosition={\n                  game.homeTeamHomePosition !== undefined &&\n                  game.homeTeamHomePosition !== \"undefined\"\n                    ? game.homeTeamHomePosition\n                    : 0\n                }\n                winPercentage={homeForm.homePPGAv ? homeForm.homePPGAv : \"N/A\"}\n                lossPercentage={\n                  game.homeTeamLossPercentage\n                    ? game.homeTeamLossPercentage\n                    : \"N/A\"\n                }\n                drawPercentage={\n                  game.homeTeamDrawPercentage\n                    ? game.homeTeamDrawPercentage\n                    : \"N/A\"\n                }\n                ppg={formDataHome[0].SeasonPPG}\n                formTrend={[\n                  homeTenGameAverage.toFixed(2),\n                  homeSixGameAverage.toFixed(2),\n                  homeFiveGameAverage.toFixed(2),\n                ]}\n                formRun={homeForm.resultsAll.reverse()}\n                goalDifference={formDataHome[0].goalDifference}\n                goalDifferenceHomeOrAway={\n                  formDataHome[0].goalDifferenceHomeOrAway\n                }\n                BttsPercentage={formDataHome[0].BttsPercentage}\n                BttsPercentageHomeOrAway={\n                  formDataHome[0].BttsPercentageHomeOrAway\n                }\n                BTTSArray={formDataHome[0].BTTSArray}\n                Results={formDataHome[0].Results}\n                ResultsHorA={formDataHome[0].ResultsHorA}\n                CardsTotal={formDataHome[0].CardsTotal}\n                CornersAverage={homeForm.AverageCorners}\n                ScoredBothHalvesPercentage={\n                  formDataHome[0].ScoredBothHalvesPercentage\n                }\n                FormTextString={formDataHome[0].FormTextStringHome}\n                FavouriteRecord={formDataHome[0].FavouriteRecord}\n                StyleOfPlay={formDataHome[0].styleOfPlayOverall}\n                StyleOfPlayHomeOrAway={formDataHome[0].styleOfPlayHome}\n              />\n            </ul>\n          </div>\n        );\n      }\n\n      function StatsAway() {\n        return (\n          <div className=\"flex-childTwo\">\n            <ul style={style}>\n              <Stats\n                style={style}\n                homeOrAway=\"Away\"\n                gameCount={divider}\n                key={formDataAway[0].name}\n                last5={formDataAway[0].Last5}\n                homeOrAwayResults={gameArrayAwayTeamAwayGames}\n                LeagueOrAll={formDataAway[0].LeagueOrAll}\n                className={\"KeyStatsAway\"}\n                classNameTwo={\"FormStatsAway\"}\n                name={formDataAway[0].name}\n                goals={awayForm.avgScored}\n                conceeded={awayForm.avgConceeded}\n                XG={awayForm.XGOverall.toFixed(2)}\n                XGConceded={awayForm.XGAgainstAvgOverall.toFixed(2)}\n                XGSwing={awayForm.XGChangeRecently}\n                //todo add goal diff and btts percentages\n                possession={awayForm.AveragePossessionOverall.toFixed(2)}\n                rawPosition={game.awayRawPosition ? game.awayRawPosition : 0}\n                sot={awayForm.AverageShotsOnTargetOverall.toFixed(2)}\n                dangerousAttacks={\n                  awayForm.AverageDangerousAttacksOverall !== 0\n                    ? awayForm.AverageDangerousAttacksOverall.toFixed(2)\n                    : awayForm.AverageDangerousAttacks\n                }\n                leaguePosition={\n                  formDataAway[0].leaguePosition !== undefined &&\n                  formDataAway[0].leaguePosition !== \"undefined\"\n                    ? formDataAway[0].leaguePosition\n                    : 0\n                }\n                homeOrAwayLeaguePosition={\n                  game.awayTeamAwayPosition !== undefined &&\n                  game.awayTeamAwayPosition !== \"undefinedundefined\"\n                    ? game.awayTeamAwayPosition\n                    : 0\n                }\n                winPercentage={awayForm.awayPPGAv ? awayForm.awayPPGAv : \"N/A\"}\n                lossPercentage={\n                  game.awayTeamLossPercentage\n                    ? game.awayTeamLossPercentage\n                    : \"N/A\"\n                }\n                drawPercentage={\n                  game.awayTeamDrawPercentage\n                    ? game.awayTeamDrawPercentage\n                    : \"N/A\"\n                }\n                ppg={formDataAway[0].SeasonPPG}\n                formTrend={[\n                  awayTenGameAverage.toFixed(2),\n                  awaySixGameAverage.toFixed(2),\n                  awayFiveGameAverage.toFixed(2),\n                ]}\n                formRun={awayForm.resultsAll.reverse()}\n                goalDifference={formDataAway[0].goalDifference}\n                goalDifferenceHomeOrAway={\n                  formDataAway[0].goalDifferenceHomeOrAway\n                }\n                BttsPercentage={formDataAway[0].BttsPercentage}\n                BttsPercentageHomeOrAway={\n                  formDataAway[0].BttsPercentageHomeOrAway\n                }\n                BTTSArray={formDataAway[0].BTTSArray}\n                Results={formDataAway[0].Results}\n                ResultsHorA={formDataAway[0].ResultsHorA}\n                CardsTotal={formDataAway[0].CardsTotal}\n                CornersAverage={awayForm.AverageCorners}\n                ScoredBothHalvesPercentage={\n                  formDataAway[0].ScoredBothHalvesPercentage\n                }\n                FormTextString={formDataAway[0].FormTextStringAway}\n                FavouriteRecord={formDataAway[0].FavouriteRecord}\n                StyleOfPlay={formDataAway[0].styleOfPlayOverall}\n                StyleOfPlayHomeOrAway={formDataAway[0].styleOfPlayAway}\n              />\n            </ul>\n          </div>\n        );\n      }\n\n      let id, team1, team2, timestamp, homeGoals, awayGoals;\n\n      async function getGameIdByHomeTeam(games, homeTeamName) {\n        const matchingGames = games.filter((game) =>\n          game.homeTeam.includes(homeTeamName)\n        );\n        if (matchingGames.length > 0) {\n          return matchingGames[0];\n        } else {\n          return null; // or any other value you prefer to return if no match is found\n        }\n      }\n\n      const matchingGame = await getGameIdByHomeTeam(\n        arrayOfGames,\n        game.homeTeam\n      );\n\n      if (matchingGame) {\n        id = matchingGame.id.toString();\n        team1 = matchingGame.homeTeam;\n        team2 = matchingGame.awayTeam;\n        timestamp = matchingGame.time;\n        homeGoals = matchingGame.homeGoals;\n        awayGoals = matchingGame.awayGoals;\n      } else {\n        id = \"0\";\n        team1 = \"N/A\";\n        team2 = \"N/A\";\n        timestamp = 1;\n        homeGoals = \"-\";\n        awayGoals = \"-\";\n      }\n\n      if (homeForm.completeData === true && game.completeData === true) {\n        ReactDOM.render(\n          <>\n            <div style={style}>\n              <Collapsable\n                buttonText={\"Lineups & match action\"}\n                classNameButton=\"Lineups\"\n                element={\n                  <>\n                    <SofaLineupsWidget\n                      id={id}\n                      team1={team1}\n                      team2={team2}\n                      time={timestamp}\n                      homeGoals={homeGoals}\n                      awayGoals={awayGoals}\n                    ></SofaLineupsWidget>\n                  </>\n                }\n              />\n              <div style={style}>\n                <Div className=\"MatchTime\" text={`Kick off: ${time} GMT`}></Div>\n              </div>\n              <div id=\"AIInsightsContainer\" className=\"AIInsightsContainer\">\n              {!paid ? (\n                <div>Paid feature</div>\n              ) : (\n                <div></div>\n              )}\n                <Button\n                  className=\"AIInsights\"\n                  onClickEvent={() => generateAIInsights(game.id, homeForm, awayForm)}\n                  text={\"Generate AI Insights\"}\n                  disabled={!paid}\n                ></Button>\n              </div>\n              <div className=\"flex-container\">\n                <StatsHome />\n                <StatsAway />\n              </div>\n              <div className=\"Chart\" id={`Chart${game.id}`} style={style}>\n                <RadarChart\n                  title=\"XG Tipping Strength Ratings - All Games\"\n                  data={[\n                    homeAttackStrength,\n                    homeDefenceStrength,\n                    homePossessionStrength,\n                    homeXGForStrength,\n                    homeXGAgainstStrength,\n                    homeDirectnessStrength,\n                    homeAccuracyOverallStrength,\n                  ]}\n                  data2={[\n                    awayAttackStrength,\n                    awayDefenceStrength,\n                    awayPossessionStrength,\n                    awayXGForStrength,\n                    awayXGAgainstStrength,\n                    awayDirectnessStrength,\n                    awayAccuracyOverallStrength,\n                  ]}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                ></RadarChart>\n                <RadarChart\n                  title=\"XG Tipping Strength Ratings - Last 5 games\"\n                  data={[\n                    homeAttackStrengthLast5,\n                    homeDefenceStrengthLast5,\n                    homePossessionStrengthLast5,\n                    homeXGForStrengthLast5,\n                    homeXGAgainstStrengthLast5,\n                    homeDirectnessStrengthLast5,\n                    homeAccuracyOverallStrengthLast5,\n                  ]}\n                  data2={[\n                    awayAttackStrengthLast5,\n                    awayDefenceStrengthLast5,\n                    awayPossessionStrengthLast5,\n                    awayXGForStrengthLast5,\n                    awayXGAgainstStrengthLast5,\n                    awayDirectnessStrengthLast5,\n                    awayAccuracyOverallStrengthLast5,\n                  ]}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                ></RadarChart>\n                <RadarChart\n                  title=\"XG Tipping Strength Ratings - Home/Away Games Only\"\n                  data={[\n                    homeOnlyAttackStrength,\n                    homeOnlyDefenceStrength,\n                    homeOnlyPossessionStrength,\n                    homeOnlyXGForStrength,\n                    homeOnlyXGAgainstStrength,\n                    homeOnlyDirectnessStrength,\n                    homeOnlyAccuracyOverallStrength,\n                  ]}\n                  data2={[\n                    awayOnlyAttackStrength,\n                    awayOnlyDefenceStrength,\n                    awayOnlyPossessionStrength,\n                    awayOnlyXGForStrength,\n                    awayOnlyXGAgainstStrength,\n                    awayOnlyDirectnessStrength,\n                    awayOnlyAccuracyOverallStrength,\n                  ]}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                ></RadarChart>\n                <DoughnutChart\n                  data={[homeForm.XGRating, awayForm.XGRating]}\n                  homeTeam={game.homeTeam}\n                  awayTeam={game.awayTeam}\n                ></DoughnutChart>\n                <BarChartTwo\n                  text=\"Recent XG Differential Swing\"\n                  homeTeam={homeForm.teamName}\n                  awayTeam={awayForm.teamName}\n                  data1={[homeForm.XGChangeRecently.toFixed(2)]}\n                  data2={[awayForm.XGChangeRecently.toFixed(2)]}\n                ></BarChartTwo>\n                <BarChart\n                  text=\"H2H - Home Team | Away Team\"\n                  data1={[\n                    homeForm.avgScored * 2,\n                    awayForm.avgConceeded * 2,\n                    homeForm.avPointsAll * 3,\n                    homeForm.XGOverall * 2,\n                    awayForm.XGAgainstAvgOverall * 2,\n                    homeForm.AverageShotsOnTargetOverall,\n                    homeForm.AverageDangerousAttacksOverall !== 0\n                      ? homeForm.AverageDangerousAttacksOverall / 7.5\n                      : homeForm.AverageDangerousAttacks / 7.5,\n                    homeForm.AveragePossessionOverall / 7.5,\n                    homeForm.goalDifferenceHomeOrAway / 10,\n                    homeForm.AverageCorners,\n                  ]}\n                  data2={[\n                    awayForm.avgScored * 2,\n                    homeForm.avgConceeded * 2,\n                    awayForm.avPointsAll * 3,\n                    awayForm.XGOverall * 2,\n                    homeForm.XGAgainstAvgOverall * 2,\n                    awayForm.AverageShotsOnTargetOverall,\n                    awayForm.AverageDangerousAttacksOverall !== 0\n                      ? awayForm.AverageDangerousAttacksOverall / 7.5\n                      : awayForm.AverageDangerousAttacks / 7.5,\n                    awayForm.AveragePossessionOverall / 7.5,\n                    awayForm.goalDifferenceHomeOrAway / 10,\n                    awayForm.AverageCorners,\n                  ]}\n                ></BarChart>\n                <Chart\n                  height={3}\n                  depth={0}\n                  data1={formArrayHome}\n                  data2={formArrayAway}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                  type={chartType}\n                  tension={0}\n                ></Chart>\n                <MultilineChart\n                  height={\n                    Math.max(\n                      rollingGoalDiffTotalHome[\n                        rollingGoalDiffTotalHome.length - 1\n                      ],\n                      rollingGoalDiffTotalAway[\n                        rollingGoalDiffTotalAway.length - 1\n                      ]\n                    ) > 2\n                      ? Math.max(\n                          rollingGoalDiffTotalHome[\n                            rollingGoalDiffTotalHome.length - 1\n                          ],\n                          rollingGoalDiffTotalAway[\n                            rollingGoalDiffTotalAway.length - 1\n                          ]\n                        )\n                      : 2\n                  }\n                  depth={\n                    Math.min(\n                      rollingGoalDiffTotalHome[\n                        rollingGoalDiffTotalHome.length - 1\n                      ],\n                      rollingGoalDiffTotalAway[\n                        rollingGoalDiffTotalAway.length - 1\n                      ]\n                    ) < -2\n                      ? Math.min(\n                          rollingGoalDiffTotalHome[\n                            rollingGoalDiffTotalHome.length - 1\n                          ],\n                          rollingGoalDiffTotalAway[\n                            rollingGoalDiffTotalAway.length - 1\n                          ]\n                        )\n                      : -2\n                  }\n                  data1={rollingGoalDiffTotalHome}\n                  data2={rollingGoalDiffTotalAway}\n                  data3={rollingXGDiffTotalHome}\n                  data4={rollingXGDiffTotalAway}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                  type={\"Goal/XG difference over time\"}\n                  tension={0.5}\n                ></MultilineChart>\n              </div>\n              <Div\n                text={`Last league games (most recent first)`}\n                className={\"LastGameHeader\"}\n              ></Div>\n              <div className=\"flex-container\">\n                <div className=\"flex-childOneOverviewSmall\">{overviewHome}</div>\n                <div className=\"flex-childTwoOverviewSmall\">{overviewAway}</div>\n              </div>\n              <h2>Results from similar profile games</h2>\n              <span>(Games where each team had similar odds)</span>\n              <h3>Most recent first</h3>\n              <div className=\"flex-container-similar\">\n                <div className=\"flex-childOneOverviewSmall\">\n                  {similarGamesHome}\n                </div>\n                <div className=\"flex-childTwoOverviewSmall\">\n                  {similarGamesAway}\n                </div>\n              </div>\n              <input type=\"hidden\" name=\"IL_IN_ARTICLE\" />\n              <Button\n                className=\"MoreStats\"\n                onClickEvent={() =>\n                  getTeamStats(\n                    game.id,\n                    game.homeTeam,\n                    game.awayTeam,\n                    formDataHome[0].BttsPercentage,\n                    formDataHome[0].BttsPercentageHomeOrAway,\n                    formDataAway[0].BttsPercentage,\n                    formDataAway[0].BttsPercentageHomeOrAway\n                  )\n                }\n                text={\"Fixture trends + AI Preview\"}\n              ></Button>\n            </div>\n          </>,\n          document.getElementById(\"stats\" + homeTeam)\n        );\n      } else if (\n        homeForm.completeData === false ||\n        game.completeData === false\n      ) {\n        ReactDOM.render(\n          <>\n            <div style={style}>\n              <Collapsable\n                buttonText={\"Lineups & match action\"}\n                classNameButton=\"Lineups\"\n                element={\n                  <>\n                    <SofaLineupsWidget\n                      id={id}\n                      team1={team1}\n                      team2={team2}\n                      time={timestamp}\n                      homeGoals={homeGoals}\n                      awayGoals={awayGoals}\n                    ></SofaLineupsWidget>\n                  </>\n                }\n              />\n              <div className=\"Chart\" id={`Chart${game.id}`} style={style}>\n                <RadarChart\n                  title=\"XG Tipping Strength Ratings - All Games\"\n                  data={[\n                    homeAttackStrength,\n                    homeDefenceStrength,\n                    homePossessionStrength,\n                    homeXGForStrength,\n                    homeXGAgainstStrength,\n                    homeDirectnessStrength,\n                    homeAccuracyOverallStrength,\n                  ]}\n                  data2={[\n                    awayAttackStrength,\n                    awayDefenceStrength,\n                    awayPossessionStrength,\n                    awayXGForStrength,\n                    awayXGAgainstStrength,\n                    awayDirectnessStrength,\n                    awayAccuracyOverallStrength,\n                  ]}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                ></RadarChart>\n              </div>\n              <div style={style}>\n                <Div className=\"MatchTime\" text={`Kick off: ${time} GMT`}></Div>\n                {/* <Div\n                  text={`Last league games (most recent first)`}\n                  className={\"LastGameHeader\"}\n                ></Div> */}\n              </div>\n              {/* <div className=\"flex-container\">\n                <div className=\"flex-childOneOverviewSmall\">{overviewHome}</div>\n                <div className=\"flex-childTwoOverviewSmall\">{overviewAway}</div>\n              </div>\n              <div className=\"flex-container\">\n                <StatsHome />\n                <StatsAway />\n              </div> */}\n              <h2>Results from similar profile games</h2>\n              <span>(Games where each team had similar odds)</span>\n              <h3>Most recent first</h3>\n              <div className=\"flex-container-similar\">\n                <div className=\"flex-childOneOverviewSmall\">\n                  {similarGamesHome}\n                </div>\n                <div className=\"flex-childTwoOverviewSmall\">\n                  {similarGamesAway}\n                </div>\n              </div>\n              <input type=\"hidden\" name=\"IL_IN_ARTICLE\" />\n              <Button\n                className=\"MoreStats\"\n                onClickEvent={() =>\n                  getTeamStats(\n                    game.id,\n                    game.homeTeam,\n                    game.awayTeam,\n                    formDataHome[0].BttsPercentage,\n                    formDataHome[0].BttsPercentageHomeOrAway,\n                    formDataAway[0].BttsPercentage,\n                    formDataAway[0].BttsPercentageHomeOrAway\n                  )\n                }\n                text={\"Fixture trends + AI Preview\"}\n              ></Button>\n            </div>\n          </>,\n          document.getElementById(\"stats\" + homeTeam)\n        );\n      } else {\n        ReactDOM.render(\n          <>\n            <div style={style}>\n              <Collapsable\n                buttonText={\"Lineups & match action\"}\n                classNameButton=\"Lineups\"\n                element={\n                  <>\n                    <SofaLineupsWidget\n                      id={id}\n                      team1={team1}\n                      team2={team2}\n                      time={timestamp}\n                      homeGoals={homeGoals}\n                      awayGoals={awayGoals}\n                    ></SofaLineupsWidget>\n                  </>\n                }\n              />\n              <div style={style}>\n                <Div className=\"MatchTime\" text={`Kick off: ${time} GMT`}></Div>\n              </div>\n              <div className=\"flex-container\">\n                <StatsHome />\n                <StatsAway />\n              </div>\n              <Div\n                text={`AI Preview, last league games & h2h records (paid feature only)`}\n                className={\"LastGameHeader\"}\n              ></Div>\n            </div>\n          </>,\n          document.getElementById(\"stats\" + homeTeam)\n        );\n      }\n    }\n\n    // ReactDOM.render(\n    //   <Button\n    //     className=\"MoreStats\"\n    //     style={style}\n    //     onClickEvent={() =>\n    //       getTeamStats(\n    //         game.id,\n    //         game.homeTeam,\n    //         game.awayTeam,\n    //         formDataHome[0].BttsPercentage,\n    //         formDataHome[0].BttsPercentageHomeOrAway,\n    //         formDataAway[0].BttsPercentage,\n    //         formDataAway[0].BttsPercentageHomeOrAway\n    //       )\n    //     }\n    //     text={\"Fixture trends\"}\n    //   ></Button>,\n    //   document.getElementById(`H2HStats${game.id}`)\n    // );\n  }\n}\n","// src/dataSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\n\n// src/dataSlice.js\nconst initialState = {\n  dataHome: localStorage.getItem('homeForm'),\n  dataAway: localStorage.getItem('awayForm'),\n  dataHomeDef: localStorage.getItem('homeFormDef'),\n  dataAwayDef: localStorage.getItem('awayFormDef'),\n  allTeamResultsHome: localStorage.getItem('allTeamResultsHome'),\n  allTeamResultsAway: localStorage.getItem('allTeamResultsAway'),\n  homeDetails:localStorage.getItem('homeDetails'),\n  awayDetails:localStorage.getItem('awayDetails'),\n  fixtureDetails: localStorage.getItem('fixtureDetails')\n};\n\nconst dataSlice = createSlice({\n  name: 'data',\n  initialState,\n  reducers: {\n    setData: (state, action) => {\n      state.data = action.payload;\n    },\n  },\n});\n\nexport const { setData } = dataSlice.actions;\n\nexport default dataSlice.reducer;\n","// src/store.js\nimport { configureStore } from '@reduxjs/toolkit';\nimport dataReducer from './dataSlice'; // Your data reducer\n\nconst store = configureStore({\n  reducer: {\n    data: dataReducer, // Ensure this key matches the key in your initialState\n  },\n});\n\nexport default store;\n","import React from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Bar, Line } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst MultiTypeChart = ({ dataArray, text }) => {\n  // 1. Process the Data: Calculate the difference and labels\n  const labels = dataArray.map((_, index) => `Game ${index + 1}`); // Create labels like \"Index 1\", \"Index 2\", etc.\n  const barData = dataArray.map(item => item[0] - item[1]); // Calculate the difference\n\n  // Create an array of colors based on the sign of the bar data\n  const backgroundColors = barData.map(value =>\n    value >= 0 ? '#030052' : '#970d00'\n  );\n\n  // 2. Chart Data Structure:\n  const data = {\n    labels: labels,\n    datasets: [\n      {\n        type: 'bar',\n        label: 'XG Difference',\n        data: barData,\n        backgroundColor: backgroundColors, // Use the dynamic colors\n        borderColor: backgroundColors,      // Match the border color\n        borderWidth: 1,\n      },\n      {\n        type: 'line',\n        label: 'Trend Line',\n        data: barData, // Use the same data for the line to create a trend\n        borderColor: 'rgba(255, 99, 132, 1)',   // Red line\n        backgroundColor: 'rgba(255, 99, 132, 0.2)',  // Pinkish fill\n        pointRadius: 3,                             // Make points visible\n        tension: 0.4,                               // Curve the line a bit\n      },\n    ],\n  };\n\n  // 3. Chart Options (customize as needed):\n  const options = {\n    responsive: true,\n    plugins: {\n      title: {\n        display: true,\n        text: text,\n      },\n      legend: { // Add this legend configuration\n        display: false, // Set display to false to hide the legend\n      },\n    },\n    scales: {\n      y: {\n        beginAtZero: true, // Start y-axis at 0\n        suggestedMin: -1.5,\n        suggestedMax: 1.5,\n      },\n    },\n  };\n\n  return <Bar data={data} options={options} className='BarChart'/>;\n};\n\nexport default MultiTypeChart;","import SwiperCore, { EffectCoverflow, Pagination } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/swiper-bundle.min.css\";\nimport \"swiper/swiper.min.css\";\n\nSwiperCore.use([EffectCoverflow, Pagination]);\n\nexport const Slider = (props) => {\n  const length = parseInt(props.length);\n\n  const generateElements = () => {\n    const slides = [];\n    for (let i = 1; i <= length; i++) {\n      const elementName = `element${i}`;\n      slides.push(\n        <>\n          <SwiperSlide key={i}>{props[elementName]}</SwiperSlide>\n          <div></div>\n        </>\n      );\n    }\n    return slides;\n  };\n\n  const slideElements = generateElements();\n\n  return (\n    <Swiper\n      effect={\"coverflow\"}\n      autoHeight={true}\n      grabCursor={true}\n      observer={true}\n      observeParents={true}\n      centeredSlides={true}\n      slidesPerView={1}\n      coverflowEffect={{\n        rotate: 10,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: false,\n      }}\n      pagination={{ clickable: true }}\n      className=\"XGSwiper\"\n    >\n      {slideElements}\n    </Swiper>\n  );\n};\n","import React, {\n  useState,\n  useEffect,\n  Fragment,\n  useCallback,\n  useMemo,\n} from \"react\";\n// import ReactDOM from \"react-dom\";\nimport { Button } from \"./Button\";\nimport SofaLineupsWidget from \"./SofaScore\";\nimport Div from \"./Div\";\nimport {\n  Chart,\n  MultilineChart,\n  RadarChart,\n  BarChart,\n  BarChartTwo,\n  DoughnutChart,\n} from \"./Chart\";\nimport MultiTypeChart from \"./MultitypeChart\"; // Adjust the path if necessary\nimport { Slider } from \"../components/CarouselXGChart\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport Stats from \"../components/createStatsDiv\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport { userDetail } from \"../logic/authProvider\";\nimport { clicked, getPointsFromLastX } from \"../logic/getScorePredictions\";\nimport { arrayOfGames } from \"../logic/getFixtures\";\nimport GenerateFormSummary from \"../logic/compareFormTrend\";\n\nimport { getTeamStats } from \"../logic/getTeamStats\";\nimport { checkUserPaidStatus } from \"../logic/hasUserPaid\";\nimport { getPointAverage } from \"../logic/getStats\";\nimport { allForm } from \"../logic/getFixtures\";\n\nimport {\n  calculateAttackingStrength,\n  calculateDefensiveStrength,\n  calculateMetricStrength,\n} from \"../logic/getStats\";\nimport finalPropsSelectorFactory from \"react-redux/es/connect/selectorFactory\";\nimport { dynamicDate } from \"../logic/getFixtures\";\nexport let userTips;\nlet setUserTips;\n// let id, team1, team2, timestamp, homeGoals, awayGoals;\n\nfunction GameStats({ game, displayBool }) {\n  function styling(testBool) {\n    let bool = testBool;\n    if (bool === true && clicked === true) {\n      // set stats element to display flex\n      return { display: \"block\" };\n    } else {\n      // set stats element to display none\n      return { display: \"none\" };\n    }\n  }\n  let style = styling(displayBool);\n\n  // State Variables\n  [userTips, setUserTips] = useState(() => {\n    const savedTips = localStorage.getItem(\"userTips\");\n    return savedTips ? JSON.parse(savedTips) : [];\n  });\n  // Save to localStorage whenever userTips changes\n  useEffect(() => {\n    localStorage.setItem(\"userTips\", JSON.stringify(userTips));\n  }, [userTips]);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [aiMatchPreview, setAiMatchPreview] = useState(null);\n  const [paid, setPaid] = useState(false);\n  const [hasCompleteData, setHasCompleteData] = useState(false);\n  //   const [homeForm, setHomeForm] = useState(null);\n  //   const [awayForm, setAwayForm] = useState(null);\n  let gameStats = allForm.find((match) => match.id === game.id);\n  const homeForm = gameStats?.home[2];\n  const awayForm = gameStats?.away[2];\n\n  //   const [id, setId] = useState(\"0\");\n  //   const [team1, setTeam1] = useState(\"N/A\");\n  //   const [team2, setTeam2] = useState(\"N/A\");\n  //   const [time, setTime] = useState(1);\n  //   const [timestamp, setTimestamp] = useState(1);\n  //   const [homeGoals, setHomeGoals] = useState(\"-\");\n  //   const [awayGoals, setAwayGoals] = useState(\"-\");\n  //   const [rollingGoalDiffTotalHome, setRollingGoalDiffTotalHome] = useState([]);\n  //   const [rollingGoalDiffTotalAway, setRollingGoalDiffTotalAway] = useState([]);\n  //   const [rollingXGDiffTotalHome, setRollingXGDiffTotalHome] = useState([]);\n  //   const [rollingXGDiffTotalAway, setRollingXGDiffTotalAway] = useState([]);\n\n  // These need to be declared *outside* the `if` block\n  //   const [formDataHome, setFormDataHome] = useState([]);\n  //   const [formDataAway, setFormDataAway] = useState([]);\n  const [matchingGame, setMatchingGame] = useState(null); // State for the game\n  const [formSummaries, setFormSummary] = useState([]);\n  const [id, setId] = useState(\"0\");\n  const [team1, setTeam1] = useState(\"N/A\");\n  const [team2, setTeam2] = useState(\"N/A\");\n  const [timestamp, setTimestamp] = useState(1);\n  const [homeGoals, setHomeGoals] = useState(\"-\");\n  const [awayGoals, setAwayGoals] = useState(\"-\");\n  const [homeXGRating, setHomeXGRating] = useState(0);\n  const [awayXGRating, setAwayXGRating] = useState(0);\n  const [homeAttackStrength, setHomeAttackStrength] = useState(0);\n  const [homeDefenceStrength, setHomeDefenceStrength] = useState(0);\n  const [homePossessionStrength, setHomePossessionStrength] = useState(0);\n  const [homeXGForStrength, setHomeXGForStrength] = useState(0);\n  const [homeXGAgainstStrength, setHomeXGAgainstStrength] = useState(0);\n  const [homeDirectnessStrength, setHomeDirectnessStrength] = useState(0);\n  const [homeAccuracyOverallStrength, setHomeAccuracyOverallStrength] =\n    useState(0);\n  const [awayAttackStrength, setAwayAttackStrength] = useState(0);\n  const [awayDefenceStrength, setAwayDefenceStrength] = useState(0);\n  const [awayPossessionStrength, setAwayPossessionStrength] = useState(0);\n  const [awayXGForStrength, setAwayXGForStrength] = useState(0);\n  const [awayXGAgainstStrength, setAwayXGAgainstStrength] = useState(0);\n  const [awayDirectnessStrength, setAwayDirectnessStrength] = useState(0);\n  const [awayAccuracyOverallStrength, setAwayAccuracyOverallStrength] =\n    useState(0);\n  //   const [formArrayHome, setFormArrayHome] = useState([]);\n  //   const [formArrayAway, setFormArrayAway] = useState([]);\n  //   const [chartType, setChartType] = useState(\"\");\n  const [rollingSOTDiffTotalHome, setRollingSOTDiffTotalHome] = useState([]);\n  const [similarGamesHome, setSimilarGamesHome] = useState([]);\n  const [similarGamesAway, setSimilarGamesAway] = useState([]);\n\n  const [homeFiveGameAverage, setHomeFiveGameAverage] = useState(0);\n  const [homeSixGameAverage, setHomeSixGameAverage] = useState(0);\n  const [homeTenGameAverage, setHomeTenGameAverage] = useState(0);\n  const [awayFiveGameAverage, setAwayFiveGameAverage] = useState(0);\n  const [awaySixGameAverage, setAwaySixGameAverage] = useState(0);\n  const [awayTenGameAverage, setAwayTenGameAverage] = useState(0);\n  const [homeAttackStrengthLast5, setHomeAttackStrengthLast5] = useState(\n    homeForm?.attackingStrengthLast5 || null\n  );\n  const [homeOnlyAttackStrength, setHomeOnlyAttackStrength] = useState(\n    homeForm?.attackingStrengthHomeOnly || null\n  );\n  const [homeDefenceStrengthLast5, setHomeDefenceStrengthLast5] = useState(\n    homeForm?.defensiveStrengthLast5 || null\n  );\n  const [homeOnlyDefenceStrength, setHomeOnlyDefenceStrength] = useState(\n    homeForm?.defensiveStrengthHomeOnly || null\n  );\n  const [homePossessionStrengthLast5, setHomePossessionStrengthLast5] =\n    useState(homeForm?.possessionStrengthLast5 || null);\n  const [homeOnlyPossessionStrength, setHomeOnlyPossessionStrength] = useState(\n    homeForm?.possessionStrengthHomeOnly || null\n  );\n  const [homeXGForStrengthLast5, setHomeXGForStrengthLast5] = useState(\n    homeForm?.xgForStrengthLast5 || null\n  );\n  const [homeOnlyXGForStrength, setHomeOnlyXGForStrength] = useState(\n    homeForm?.xgForStrengthHomeOnly || null\n  );\n  const [homeXGAgainstStrengthLast5, setHomeXGAgainstStrengthLast5] = useState(\n    homeForm?.xgAgainstStrengthLast5 || null\n  );\n  const [homeOnlyXGAgainstStrength, setHomeOnlyXGAgainstStrength] = useState(\n    homeForm?.xgAgainstStrengthHomeOnly || null\n  );\n  const [homeDirectnessStrengthLast5, setHomeDirectnessStrengthLast5] =\n    useState(homeForm?.directnessOverallStrengthLast5 || null);\n  const [homeOnlyDirectnessStrength, setHomeOnlyDirectnessStrength] = useState(\n    homeForm?.directnessHomeStrength || null\n  );\n  const [\n    homeAccuracyOverallStrengthLast5,\n    setHomeAccuracyOverallStrengthLast5,\n  ] = useState(homeForm?.accuracyOverallStrengthLast5 || null);\n  const [homeOnlyAccuracyOverallStrength, setHomeOnlyAccuracyOverallStrength] =\n    useState(homeForm?.accuracyHomeStrength || null);\n  const [awayAttackStrengthLast5, setAwayAttackStrengthLast5] = useState(\n    awayForm?.attackingStrengthLast5 || null\n  );\n  const [awayOnlyAttackStrength, setAwayOnlyAttackStrength] = useState(\n    awayForm?.attackingStrengthAwayOnly || null\n  );\n  const [awayDefenceStrengthLast5, setAwayDefenceStrengthLast5] = useState(\n    awayForm?.defensiveStrengthLast5 || null\n  );\n  const [awayOnlyDefenceStrength, setAwayOnlyDefenceStrength] = useState(\n    awayForm?.defensiveStrengthAwayOnly || null\n  );\n  const [awayPossessionStrengthLast5, setAwayPossessionStrengthLast5] =\n    useState(awayForm?.possessionStrengthLast5 || null);\n  const [awayOnlyPossessionStrength, setAwayOnlyPossessionStrength] = useState(\n    awayForm?.possessionStrengthAwayOnly || null\n  );\n  const [awayXGForStrengthLast5, setAwayXGForStrengthLast5] = useState(\n    awayForm?.xgForStrengthLast5 || null\n  );\n  const [awayOnlyXGForStrength, setAwayOnlyXGForStrength] = useState(\n    awayForm?.xgForStrengthAwayOnly || null\n  );\n  const [awayXGAgainstStrengthLast5, setAwayXGAgainstStrengthLast5] = useState(\n    awayForm?.xgAgainstStrengthLast5 || null\n  );\n  const [awayOnlyXGAgainstStrength, setAwayOnlyXGAgainstStrength] = useState(\n    awayForm?.xgAgainstStrengthAwayOnly || null\n  );\n  const [awayDirectnessStrengthLast5, setAwayDirectnessStrengthLast5] =\n    useState(awayForm?.directnessOverallStrengthLast5 || null);\n  const [awayOnlyDirectnessStrength, setAwayOnlyDirectnessStrength] = useState(\n    awayForm?.directnessAwayStrength || null\n  );\n  const [\n    awayAccuracyOverallStrengthLast5,\n    setAwayAccuracyOverallStrengthLast5,\n  ] = useState(awayForm?.accuracyOverallStrengthLast5 || null);\n  const [awayOnlyAccuracyOverallStrength, setAwayOnlyAccuracyOverallStrength] =\n    useState(awayForm?.accuracyAwayStrength || null);\n\n  const [gameArrayHomeTeamHomeGames, setGameArrayHomeTeamHomeGames] = useState(\n    []\n  );\n  const [gameArrayAwayTeamAwayGames, setGameArrayAwayTeamAwayGames] = useState(\n    []\n  );\n\n  const allResultsHome = useMemo(() => {\n    return [...homeForm.allTeamResults].sort((b, a) => b.dateRaw - a.dateRaw);\n  }, [homeForm.allTeamResults]); // Only re-sort if homeForm.allTeamResults changes\n\n  const homeResults = useMemo(() => {\n    return [...homeForm.homeResults].sort((b, a) => b.dateRaw - a.dateRaw);\n  }, [homeForm.homeResults]); // Only re-sort if homeForm.homeResults changes\n\n  const allResultsAway = useMemo(() => {\n    // Assuming awayForm.allTeamResults is an array\n    return [...awayForm.allTeamResults].sort((b, a) => b.dateRaw - a.dateRaw);\n  }, [awayForm.allTeamResults]);\n\n  const awayResults = useMemo(() => {\n    return [...awayForm.awayResults].sort((b, a) => b.dateRaw - a.dateRaw);\n  }, [awayForm.awayResults]); // Only re-sort if awayForm.awayResults changes\n\n  // Memoize the derived arrays\n  const goalDiffArrayHome = useMemo(() => {\n    return allResultsHome.map((a) => a.scored - a.conceeded);\n  }, [allResultsHome]);\n\n  const xgDiffArrayHome = allResultsHome.map((a) => a.XG - a.XGAgainst);\n  const xgDiffArrayAway = allResultsAway.map((a) => a.XG - a.XGAgainst);\n\n  const rollingGoalDiffTotalHome = useMemo(() => {\n    return goalDiffArrayHome.map(\n      (\n        (sum) => (value) =>\n          (sum += value)\n      )(0)\n    );\n  }, [goalDiffArrayHome]);\n\n  const rollingXGDiffTotalHome = xgDiffArrayHome.map(\n    (\n      (sum) => (value) =>\n        (sum += value)\n    )(0)\n  );\n\n  const goalDiffArrayHomeOnly = useMemo(() => {\n    return homeResults.map((a) => a.scored - a.conceeded);\n  }, [homeResults]);\n\n  const goalDiffArrayAwayOnly = useMemo(() => {\n    return awayResults.map((a) => a.scored - a.conceeded);\n  }, [awayResults]);\n\n  const xgDiffArrayHomeOnly = useMemo(() => {\n    return homeResults.map((a) => a.XG - a.XGAgainst);\n  }, [homeResults]);\n\n  const xgDiffArrayAwayOnly = useMemo(() => {\n    return awayResults.map((a) => a.XG - a.XGAgainst);\n  }, [awayResults]);\n\n  const rollingGoalDiffTotalHomeOnly = useMemo(() => {\n    return goalDiffArrayHomeOnly.map(\n      (\n        (sum) => (value) =>\n          (sum += value)\n      )(0)\n    );\n  }, [goalDiffArrayHomeOnly]);\n\n  const rollingXGDiffTotalHomeOnly = useMemo(() => {\n    return xgDiffArrayHomeOnly.map(\n      (\n        (sum) => (value) =>\n          (sum += value)\n      )(0)\n    );\n  }, [xgDiffArrayHomeOnly]);\n\n  const goalDiffArrayAway = useMemo(() => {\n    return allResultsAway.map((a) => a.scored - a.conceeded);\n  }, [allResultsAway]);\n\n  const rollingGoalDiffTotalAway = goalDiffArrayAway.map(\n    (\n      (sum) => (value) =>\n        (sum += value)\n    )(0)\n  );\n\n  const rollingXGDiffTotalAway = xgDiffArrayAway.map(\n    (\n      (sum) => (value) =>\n        (sum += value)\n    )(0)\n  );\n\n  const rollingGoalDiffTotalAwayOnly = useMemo(() => {\n    return goalDiffArrayAwayOnly.map(\n      (\n        (sum) => (value) =>\n          (sum += value)\n      )(0)\n    );\n  }, [goalDiffArrayAwayOnly]);\n\n  const rollingXGDiffTotalAwayOnly = useMemo(() => {\n    return xgDiffArrayAwayOnly.map(\n      (\n        (sum) => (value) =>\n          (sum += value)\n      )(0)\n    );\n  }, [xgDiffArrayAwayOnly]);\n\n  //It is unlikely that slice will be an array without useMemo, so you need to ensure it works for all relevant ones.\n  const rollingGoalDiffTotalHomeLast5 = useMemo(() => {\n    return goalDiffArrayHome\n      .slice(Math.max(goalDiffArrayHome.length - 5, 0))\n      .map(\n        (\n          (sum) => (value) =>\n            (sum += value)\n        )(0)\n      );\n  }, [goalDiffArrayHome]);\n\n  const rollingXGDiffTotalHomeLast5 = useMemo(() => {\n    return xgDiffArrayHome.slice(Math.max(xgDiffArrayHome.length - 5, 0)).map(\n      (\n        (sum) => (value) =>\n          (sum += value)\n      )(0)\n    );\n  }, [xgDiffArrayHome]);\n\n  const rollingGoalDiffTotalAwayLast5 = useMemo(() => {\n    return goalDiffArrayAway\n      .slice(Math.max(goalDiffArrayAway.length - 5, 0))\n      .map(\n        (\n          (sum) => (value) =>\n            (sum += value)\n        )(0)\n      );\n  }, [goalDiffArrayAway]);\n\n  const rollingXGDiffTotalAwayLast5 = useMemo(() => {\n    return xgDiffArrayAway.slice(Math.max(xgDiffArrayAway.length - 5, 0)).map(\n      (\n        (sum) => (value) =>\n          (sum += value)\n      )(0)\n    );\n  }, [xgDiffArrayAway]);\n\n  const [firstRenderDone, setFirstRenderDone] = useState(false);\n  const [divider, setDivider] = useState(0);\n  const gameArrayHome = [];\n  const gameArrayAway = [];\n  // const allResultsHome = homeForm.allTeamResults.sort((b, a) => b.dateRaw - a.dateRaw);\n  // const homeResults = homeForm.homeResults.sort((b, a) => b.dateRaw - a.dateRaw);\n  // const allResultsAway = awayForm.allTeamResults.sort((b, a) => a.dateRaw - b.dateRaw);\n  // const awayResults = awayForm.awayResults.sort((b, a) => b.dateRaw - a.dateRaw);\n  let ref;\n\n  const pos = allLeagueResultsArrayOfObjects\n    .map((i) => i.id)\n    .indexOf(gameStats.leagueId);\n  let matches = allLeagueResultsArrayOfObjects[pos];\n  const resultHome = matches.fixtures.filter(\n    (game) =>\n      game.home_name === gameStats.home.teamName ||\n      game.away_name === gameStats.home.teamName\n  );\n\n  const resultHomeOnly = matches.fixtures.filter(\n    (game) => game.home_name === gameStats.home.teamName\n  );\n\n  resultHome.sort((a, b) => b.date_unix - a.date_unix);\n  resultHomeOnly.sort((a, b) => b.date_unix - a.date_unix);\n\n  const resultAway = matches.fixtures.filter(\n    (game) =>\n      game.away_name === gameStats.away.teamName ||\n      game.home_name === gameStats.away.teamName\n  );\n\n  const resultAwayOnly = matches.fixtures.filter(\n    (game) => game.away_name === gameStats.away.teamName\n  );\n\n  // let formTextStringHome\n  // let formTextStringAway\n\n  resultAway.sort((a, b) => b.date_unix - a.date_unix);\n  resultAwayOnly.sort((a, b) => b.date_unix - a.date_unix);\n\n  for (let i = 0; i < resultHome.length; i++) {\n    let unixTimestamp = resultHome[i].date_unix;\n    let milliseconds = unixTimestamp * 1000;\n    let dateObject = new Date(milliseconds).toLocaleString(\"en-GB\", {\n      timeZone: \"UTC\",\n    });\n\n    let won;\n    let goalsScored;\n    let goalsConceeded;\n\n    switch (true) {\n      case resultHome[i].home_name === gameStats.home.teamName:\n        switch (true) {\n          case resultHome[i].homeGoalCount > resultHome[i].awayGoalCount:\n            won = \"W\";\n            goalsScored = resultHome[i].homeGoalCount;\n            goalsConceeded = resultHome[i].awayGoalCount;\n            break;\n          case resultHome[i].homeGoalCount === resultHome[i].awayGoalCount:\n            won = \"D\";\n            goalsScored = resultHome[i].homeGoalCount;\n            goalsConceeded = resultHome[i].awayGoalCount;\n            break;\n          case resultHome[i].homeGoalCount < resultHome[i].awayGoalCount:\n            won = \"L\";\n            goalsScored = resultHome[i].homeGoalCount;\n            goalsConceeded = resultHome[i].awayGoalCount;\n            break;\n          default:\n            break;\n        }\n        break;\n      case resultHome[i].away_name === gameStats.home.teamName:\n        switch (true) {\n          case resultHome[i].homeGoalCount > resultHome[i].awayGoalCount:\n            won = \"L\";\n            goalsScored = resultHome[i].homeGoalCount;\n            goalsConceeded = resultHome[i].awayGoalCount;\n            break;\n          case resultHome[i].homeGoalCount === resultHome[i].awayGoalCount:\n            won = \"D\";\n            goalsScored = resultHome[i].homeGoalCount;\n            goalsConceeded = resultHome[i].awayGoalCount;\n            break;\n          case resultHome[i].homeGoalCount < resultHome[i].awayGoalCount:\n            won = \"W\";\n            goalsScored = resultHome[i].homeGoalCount;\n            goalsConceeded = resultHome[i].awayGoalCount;\n            break;\n          default:\n            break;\n        }\n        break;\n      default:\n        break;\n    }\n\n    gameArrayHome.push({\n      id: resultHome[i].id,\n      date: dateObject,\n      homeTeam: resultHome[i].home_name,\n      homeGoals: resultHome[i].homeGoalCount,\n      homeXG: resultHome[i].team_a_xg,\n      homeOdds: resultHome[i].odds_ft_1,\n      awayTeam: resultHome[i].away_name,\n      awayGoals: resultHome[i].awayGoalCount,\n      awayXG: resultHome[i].team_b_xg,\n      awayOdds: resultHome[i].odds_ft_2,\n      won: won,\n      homeShots: resultHome[i].team_a_shots,\n      awayShots: resultHome[i].team_b_shots,\n      homeSot: resultHome[i].team_a_shotsOnTarget,\n      awaySot: resultHome[i].team_b_shotsOnTarget,\n      homeRed: resultHome[i].team_a_red_cards,\n      awayRed: resultHome[i].team_b_red_cards,\n      homePossession: resultHome[i].team_a_possession,\n      awayPossession: resultHome[i].team_b_possession,\n      homeDangerousAttacks: resultHome[i].team_a_dangerous_attacks,\n      awayDangerousAttacks: resultHome[i].team_b_dangerous_attacks,\n      homePPG: resultHome[i].pre_match_teamA_overall_ppg,\n      awayPPG: resultHome[i].pre_match_teamB_overall_ppg,\n      unixTimestamp: resultHome[i].date_unix,\n      goalsFor: goalsScored,\n      goalsAgainst: goalsConceeded,\n      btts:\n        resultHome[i].homeGoalCount > 0 && resultHome[i].awayGoalCount > 0\n          ? \"\\u2714\"\n          : \"\\u2718\",\n    });\n  }\n\n  for (let i = 0; i < resultHomeOnly.length; i++) {\n    let wonHomeOrAwayOnly;\n\n    switch (true) {\n      case resultHomeOnly[i].home_name === gameStats.home.teamName:\n        switch (true) {\n          case resultHomeOnly[i].homeGoalCount >\n            resultHomeOnly[i].awayGoalCount:\n            wonHomeOrAwayOnly = \"W\";\n            gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n            break;\n          case resultHomeOnly[i].homeGoalCount ===\n            resultHomeOnly[i].awayGoalCount:\n            wonHomeOrAwayOnly = \"D\";\n            gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n            break;\n          case resultHomeOnly[i].homeGoalCount <\n            resultHomeOnly[i].awayGoalCount:\n            wonHomeOrAwayOnly = \"L\";\n            gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n            break;\n          default:\n            break;\n        }\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  for (let i = 0; i < resultAway.length; i++) {\n    let unixTimestamp = resultAway[i].date_unix;\n    let milliseconds = unixTimestamp * 1000;\n    let dateObject = new Date(milliseconds).toLocaleString(\"en-GB\", {\n      timeZone: \"UTC\",\n    });\n\n    let won;\n    let goalsScored;\n    let goalsConceeded;\n\n    switch (true) {\n      case resultAway[i].home_name === gameStats.away.teamName:\n        switch (true) {\n          case resultAway[i].homeGoalCount > resultAway[i].awayGoalCount:\n            won = \"W\";\n            goalsScored = resultAway[i].awayGoalCount;\n            goalsConceeded = resultAway[i].homeGoalCount;\n            break;\n          case resultAway[i].awayGoalCount === resultAway[i].homeGoalCount:\n            won = \"D\";\n            goalsScored = resultAway[i].awayGoalCount;\n            goalsConceeded = resultAway[i].homeGoalCount;\n            break;\n          case resultAway[i].homeGoalCount < resultAway[i].awayGoalCount:\n            won = \"L\";\n            goalsScored = resultAway[i].awayGoalCount;\n            goalsConceeded = resultAway[i].homeGoalCount;\n            break;\n          default:\n            break;\n        }\n        break;\n\n      case resultAway[i].away_name === gameStats.away.teamName:\n        switch (true) {\n          case resultAway[i].homeGoalCount > resultAway[i].awayGoalCount:\n            won = \"L\";\n            goalsScored = resultAway[i].awayGoalCount;\n            goalsConceeded = resultAway[i].homeGoalCount;\n            break;\n          case resultAway[i].homeGoalCount === resultAway[i].awayGoalCount:\n            won = \"D\";\n            goalsScored = resultAway[i].awayGoalCount;\n            goalsConceeded = resultAway[i].homeGoalCount;\n            break;\n          case resultAway[i].homeGoalCount < resultAway[i].awayGoalCount:\n            won = \"W\";\n            goalsScored = resultAway[i].awayGoalCount;\n            goalsConceeded = resultAway[i].homeGoalCount;\n            break;\n          default:\n            break;\n        }\n        break;\n      default:\n        break;\n    }\n\n    gameArrayAway.push({\n      id: resultAway[i].id,\n      date: dateObject,\n      homeTeam: resultAway[i].home_name,\n      homeGoals: resultAway[i].homeGoalCount,\n      homeXG: resultAway[i].team_a_xg,\n      homeOdds: resultAway[i].odds_ft_1,\n      awayTeam: resultAway[i].away_name,\n      awayGoals: resultAway[i].awayGoalCount,\n      awayXG: resultAway[i].team_b_xg,\n      awayOdds: resultAway[i].odds_ft_2,\n      won: won,\n      homeShots: resultAway[i].team_a_shots,\n      awayShots: resultAway[i].team_b_shots,\n      homeSot: resultAway[i].team_a_shotsOnTarget,\n      awaySot: resultAway[i].team_b_shotsOnTarget,\n      homeRed: resultAway[i].team_a_red_cards,\n      awayRed: resultAway[i].team_b_red_cards,\n      homePossession: resultAway[i].team_a_possession,\n      awayPossession: resultAway[i].team_b_possession,\n      homeDangerousAttacks: resultAway[i].team_a_dangerous_attacks,\n      awayDangerousAttacks: resultAway[i].team_b_dangerous_attacks,\n      homePPG: resultAway[i].pre_match_teamA_overall_ppg,\n      awayPPG: resultAway[i].pre_match_teamB_overall_ppg,\n      unixTimestamp: resultAway[i].date_unix,\n      goalsFor: goalsScored,\n      goalsAgainst: goalsConceeded,\n      btts:\n        resultAway[i].homeGoalCount > 0 && resultAway[i].awayGoalCount > 0\n          ? \"\\u2714\"\n          : \"\\u2718\",\n    });\n  }\n\n  for (let i = 0; i < resultAwayOnly.length; i++) {\n    let wonAwayOrAwayOnly;\n\n    switch (true) {\n      case resultAwayOnly[i].away_name === gameStats.away.teamName:\n        switch (true) {\n          case resultAwayOnly[i].awayGoalCount >\n            resultAwayOnly[i].homeGoalCount:\n            wonAwayOrAwayOnly = \"W\";\n            gameArrayAwayTeamAwayGames.push(wonAwayOrAwayOnly);\n            break;\n          case resultAwayOnly[i].awayGoalCount ===\n            resultAwayOnly[i].homeGoalCount:\n            wonAwayOrAwayOnly = \"D\";\n            gameArrayAwayTeamAwayGames.push(wonAwayOrAwayOnly);\n            break;\n          case resultAwayOnly[i].awayGoalCount <\n            resultAwayOnly[i].homeGoalCount:\n            wonAwayOrAwayOnly = \"L\";\n            gameArrayAwayTeamAwayGames.push(wonAwayOrAwayOnly);\n            break;\n          default:\n            break;\n        }\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  // goalDiffArrayHome = allResultsHome.map(\n  //   (a) => a.scored - a.conceeded\n  // );\n  // xgDiffArrayHome = allResultsHome.map((a) => a.XG - a.XGAgainst);\n  // console.log(xgDiffArrayHome)\n\n  // goalDiffArrayHomeOnly = homeResults.map(\n  //   (a) => a.scored - a.conceeded\n  // );\n  // xgDiffArrayHomeOnly = homeResults.map((a) => a.XG - a.XGAgainst);\n\n  // rollingGoalDiffTotalHome = goalDiffArrayHome.map(\n  //   (\n  //     (sum) => (value) =>\n  //       (sum += value)\n  //   )(0)\n  // );\n\n  // rollingGoalDiffTotalHomeLast5 = goalDiffArrayHome.slice(0,5).map(\n  //     (\n  //       (sum) => (value) =>\n  //         (sum += value)\n  //     )(0)\n  //   );\n\n  // rollingXGDiffTotalHome = xgDiffArrayHome.slice(0,5).map(\n  //   (\n  //     (sum) => (value) =>\n  //       (sum += value)\n  //   )(0)\n  // );\n\n  // rollingXGDiffTotalHomeLast5 = xgDiffArrayHome.slice(0,5)\n  //   .map(\n  //     (\n  //       (sum) => (value) =>\n  //         (sum += value)\n  //     )(0)\n  //   );\n\n  //   console.log(xgDiffArrayHome)\n  //   console.log(rollingXGDiffTotalHomeLast5)\n\n  // goalDiffArrayAway = allResultsAway.map(\n  //   (a) => a.scored - a.conceeded\n  // );\n\n  // rollingGoalDiffTotalHomeOnly = goalDiffArrayHomeOnly.map(\n  //   (\n  //     (sum) => (value) =>\n  //       (sum += value)\n  //   )(0)\n  // );\n  // rollingXGDiffTotalHomeOnly = xgDiffArrayHomeOnly.map(\n  //   (\n  //     (sum) => (value) =>\n  //       (sum += value)\n  //   )(0)\n  // );\n\n  // xgDiffArrayAway = allResultsAway.map((a) => a.XG - a.XGAgainst);\n\n  // goalDiffArrayAwayOnly = awayResults.map(\n  //   (a) => a.scored - a.conceeded\n  // );\n  // xgDiffArrayAwayOnly = awayResults.map((a) => a.XG - a.XGAgainst);\n\n  // rollingGoalDiffTotalAway = goalDiffArrayAway.map(\n  //   (\n  //     (sum) => (value) =>\n  //       (sum += value)\n  //   )(0)\n  // );\n\n  // console.log(xgDiffArrayAway)\n\n  // rollingGoalDiffTotalAwayLast5 = goalDiffArrayAway\n  //   .slice(0, 5)\n  //   .map(\n  //     (\n  //       (sum) => (value) =>\n  //         (sum += value)\n  //     )(0)\n  //   );\n\n  // rollingXGDiffTotalAway = xgDiffArrayAway.map(\n  //   (\n  //     (sum) => (value) =>\n  //       (sum += value)\n  //   )(0)\n  // );\n\n  // rollingXGDiffTotalAwayLast5 = xgDiffArrayAway\n  //   .slice(0, 5)\n  //   .map(\n  //     (\n  //       (sum) => (value) =>\n  //         (sum += value)\n  //     )(0)\n  //   );\n\n  // rollingGoalDiffTotalAwayOnly = goalDiffArrayAwayOnly.map(\n  //   (\n  //     (sum) => (value) =>\n  //       (sum += value)\n  //   )(0)\n  // );\n  // rollingXGDiffTotalAwayOnly = xgDiffArrayAwayOnly.map(\n  //   (\n  //     (sum) => (value) =>\n  //       (sum += value)\n  //   )(0)\n  // );\n\n  async function getGameIdByHomeTeam(games, homeTeamName) {\n    const matchingGames = games.filter((game) =>\n      game.homeTeam.includes(homeTeamName)\n    );\n    if (matchingGames.length > 0) {\n      return matchingGames[0];\n    } else {\n      return null; // or any other value you prefer to return if no match is found\n    }\n  }\n\n  function isBeforeTimestamp(targetTimestamp) {\n    const currentTimestamp = Math.floor(Date.now() / 1000); // Get current time in seconds\n    return currentTimestamp < targetTimestamp;\n  }\n\n  async function getRefStats(refId, compId) {\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}referee/${refId}`\n      );\n\n      if (!response.ok) {\n        // Handle HTTP errors (e.g., 404, 500)\n        console.error(`HTTP error! Status: ${response.status}`);\n        return null; // Or throw an error to be caught later\n      }\n\n      const refData = await response.json(); // Parse the JSON response\n\n      // Access the array within the 'data' property\n      const dataArray = refData.data;\n\n      if (!Array.isArray(dataArray)) {\n        console.error(\"Error: Expected 'data' property to be an array.\");\n        return null;\n      }\n\n      // Find the object with the matching competition_id\n      const filteredObject = dataArray.find(\n        (item) => item.competition_id === compId\n      );\n\n      const distilledRefData = {\n        appearances_overall: filteredObject.appearances_overall,\n        full_name: filteredObject.full_name,\n        cards_per_match_overall: filteredObject.cards_per_match_overall,\n        goals_per_match_overall: filteredObject.goals_per_match_overall,\n        min_per_card_overall: filteredObject.min_per_card_overall,\n        nationality: filteredObject.nationality,\n        over25_cards_percentage_overall:\n          filteredObject.over25_cards_percentage_overall,\n        over35_cards_percentage_overall:\n          filteredObject.over35_cards_percentage_overall,\n        penalties_given_per_match_overall:\n          filteredObject.penalties_given_per_match_overall,\n        red_cards_overall: filteredObject.red_cards_overall,\n      };\n\n      return distilledRefData; // Returns the found object, or undefined if not found\n    } catch (error) {\n      console.error(\"Error fetching or processing data:\", error);\n      return null; // Or handle the error as appropriate for your application (e.g., display an error message to the user)\n    }\n  }\n\n  useEffect(() => {\n    async function fetchMatchingGame() {\n      try {\n        const gameInfo = await getGameIdByHomeTeam(arrayOfGames, game.homeTeam);\n        setMatchingGame(gameInfo);\n      } catch (error) {\n        console.error(\"Error fetching game info:\", error);\n      }\n    }\n\n    fetchMatchingGame();\n  }, [game.homeTeam]);\n\n  useEffect(() => {\n    if (matchingGame) {\n      setId(matchingGame.id.toString());\n      setTeam1(matchingGame.homeTeam);\n      setTeam2(matchingGame.awayTeam);\n      setTimestamp(matchingGame.time);\n      setHomeGoals(matchingGame.homeGoals);\n      setAwayGoals(matchingGame.awayGoals);\n    } else {\n      setId(\"0\");\n      setTeam1(\"N/A\");\n      setTeam2(\"N/A\");\n      setTimestamp(1);\n      setHomeGoals(\"-\");\n      setAwayGoals(\"-\");\n    }\n  }, [matchingGame]); //This useEffect hook runs whenever matchingGame changes.\n\n  function singleResult(game) {\n    return (\n      <div>\n        <div className=\"ResultRowSmall\">\n          <span className=\"column\">{game.homeXG}</span>\n          <span className=\"column\">XG</span>\n          <span className=\"column\">{game.awayXG}</span>\n        </div>\n        <div className=\"ResultRowSmall\">\n          <span className=\"column\">{game.homeShots}</span>\n          <span className=\"column\">Shots</span>\n          <span className=\"column\">{game.awayShots}</span>\n        </div>\n        <div className=\"ResultRowSmall\">\n          <span className=\"column\">{game.homeSot}</span>\n          <span className=\"column\">SOT</span>\n          <span className=\"column\">{game.awaySot}</span>\n        </div>\n        <div className=\"ResultRowSmall\">\n          <span className=\"column\">{game.homeDangerousAttacks}</span>\n          <span className=\"column\">Dangerous Attacks</span>\n          <span className=\"column\">{game.awayDangerousAttacks}</span>\n        </div>\n        <div className=\"ResultRowSmall\">\n          <span className=\"column\">{game.homePossession}%</span>\n          <span className=\"column\">Possession</span>\n          <span className=\"column\">{game.awayPossession}%</span>\n        </div>\n        <div className=\"ResultRowSmall\">\n          <span className=\"column\">{game.homeRed}</span>\n          <span className=\"column\">Red cards</span>\n          <span className=\"column\">{game.awayRed}</span>\n        </div>\n        <div className=\"ResultRowSmall\">\n          <span className=\"column\">{game.homePPG}</span>\n          <span className=\"column\">PPG (pre-match)</span>\n          <span className=\"column\">{game.awayPPG}</span>\n        </div>\n      </div>\n    );\n  }\n\n  function StatsHomeComponent() {\n    if (!homeForm) return null;\n    return (\n      <div className=\"flex-childOne\">\n        <ul style={style}>\n          <Stats\n            games={\"all\"}\n            style={style}\n            homeOrAway=\"Home\"\n            gameCount={divider}\n            key={formDataHome[0].name}\n            last5={formDataHome[0].Last5}\n            // homeOrAwayResults={gameArrayHomeTeamHomeGames}\n            LeagueOrAll={formDataHome[0].LeagueOrAll}\n            className={\"KeyStatsHome\"}\n            name={formDataHome[0].name}\n            goals={homeForm.avgScored}\n            conceeded={homeForm.avgConceeded}\n            XG={homeForm.XGOverall.toFixed(2)}\n            XGConceded={homeForm.XGAgainstAvgOverall.toFixed(2)}\n            XGSwing={homeForm.XGChangeRecently}\n            possession={homeForm.AveragePossessionOverall.toFixed(2)}\n            shots={homeForm.avgShots.toFixed(2)}\n            sot={homeForm.AverageShotsOnTargetOverall.toFixed(2)}\n            dangerousAttacks={\n              homeForm.AverageDangerousAttacksOverall !== 0\n                ? homeForm.AverageDangerousAttacksOverall.toFixed(2)\n                : homeForm.AverageDangerousAttacks\n            }\n            leaguePosition={\n              homeForm.LeaguePosition !== undefined &&\n              homeForm.LeaguePosition !== \"undefined\"\n                ? formDataHome[0].leaguePosition\n                : 0\n            }\n            rawPosition={\n              game.homeRawPosition !== undefined &&\n              game.homeRawPosition !== \"undefined\"\n                ? game.homeRawPosition\n                : 0\n            }\n            homeOrAwayLeaguePosition={\n              homeForm.homePositionHomeOnly !== undefined &&\n              homeForm.homePositionHomeOnly !== \"undefined\"\n                ? homeForm.homePositionHomeOnly\n                : 0\n            }\n            winPercentage={homeForm.homePPGAv ? homeForm.homePPGAv : \"N/A\"}\n            lossPercentage={\n              game.homeTeamLossPercentage ? game.homeTeamLossPercentage : \"N/A\"\n            }\n            drawPercentage={\n              game.homeTeamDrawPercentage ? game.homeTeamDrawPercentage : \"N/A\"\n            }\n            ppg={homeForm.avPointsAll.toFixed(2)}\n            formTrend={[\n              homeTenGameAverage.toFixed(2),\n              homeSixGameAverage.toFixed(2),\n              homeFiveGameAverage.toFixed(2),\n            ]}\n            formRun={homeForm.resultsAll}\n            goalDifference={formDataHome[0].goalDifference}\n            goalDifferenceHomeOrAway={formDataHome[0].goalDifferenceHomeOrAway}\n            BttsPercentage={formDataHome[0].BttsPercentage}\n            BttsPercentageHomeOrAway={formDataHome[0].BttsPercentageHomeOrAway}\n            BTTSArray={formDataHome[0].BTTSArray}\n            Results={formDataHome[0].Results}\n            ResultsHorA={formDataHome[0].ResultsHorA}\n            CardsTotal={formDataHome[0].CardsTotal}\n            CornersAverage={homeForm.AverageCorners}\n            ScoredBothHalvesPercentage={\n              formDataHome[0].ScoredBothHalvesPercentage\n            }\n            FormTextString={formDataHome[0].FormTextStringHome}\n            FavouriteRecord={formDataHome[0].FavouriteRecord}\n            StyleOfPlay={formDataHome[0].styleOfPlayOverall}\n            StyleOfPlayHomeOrAway={formDataHome[0].styleOfPlayHome}\n          />\n        </ul>\n      </div>\n    );\n  }\n\n  // Component: StatsAway (Render Away Team Stats)\n  function StatsAwayComponent() {\n    if (!awayForm) return null;\n    return (\n      <div className=\"flex-childTwo\">\n        <ul style={style}>\n          <Stats\n            games={\"all\"}\n            style={style}\n            homeOrAway=\"Away\"\n            gameCount={divider}\n            key={formDataAway[0].name}\n            last5={formDataAway[0].Last5}\n            // homeOrAwayResults={gameArrayAwayTeamAwayGames}\n            LeagueOrAll={formDataAway[0].LeagueOrAll}\n            className={\"KeyStatsAway\"}\n            classNameTwo={\"FormStatsAway\"}\n            name={formDataAway[0].name}\n            goals={awayForm.avgScored}\n            conceeded={awayForm.avgConceeded}\n            XG={awayForm.XGOverall.toFixed(2)}\n            XGConceded={awayForm.XGAgainstAvgOverall.toFixed(2)}\n            XGSwing={awayForm.XGChangeRecently}\n            //todo add goal diff and btts percentages\n            possession={awayForm.AveragePossessionOverall.toFixed(2)}\n            rawPosition={game.awayRawPosition ? game.awayRawPosition : 0}\n            sot={awayForm.AverageShotsOnTargetOverall.toFixed(2)}\n            shots={awayForm.avgShots.toFixed(2)}\n            dangerousAttacks={\n              awayForm.AverageDangerousAttacksOverall !== 0\n                ? awayForm.AverageDangerousAttacksOverall.toFixed(2)\n                : awayForm.AverageDangerousAttacks\n            }\n            leaguePosition={\n              awayForm.LeaguePosition !== undefined &&\n              awayForm.LeaguePosition !== \"undefined\"\n                ? formDataAway[0].leaguePosition\n                : 0\n            }\n            homeOrAwayLeaguePosition={\n              awayForm.awayPositionAwayOnly !== undefined &&\n              awayForm.awayPositionAwayOnly !== \"undefinedundefined\"\n                ? awayForm.awayPositionAwayOnly\n                : 0\n            }\n            winPercentage={awayForm.awayPPGAv ? awayForm.awayPPGAv : \"N/A\"}\n            lossPercentage={\n              game.awayTeamLossPercentage ? game.awayTeamLossPercentage : \"N/A\"\n            }\n            drawPercentage={\n              game.awayTeamDrawPercentage ? game.awayTeamDrawPercentage : \"N/A\"\n            }\n            ppg={awayForm.avPointsAll.toFixed(2)}\n            formTrend={[\n              awayTenGameAverage.toFixed(2),\n              awaySixGameAverage.toFixed(2),\n              awayFiveGameAverage.toFixed(2),\n            ]}\n            formRun={awayForm.resultsAll}\n            goalDifference={formDataAway[0].goalDifference}\n            goalDifferenceHomeOrAway={formDataAway[0].goalDifferenceHomeOrAway}\n            BttsPercentage={formDataAway[0].BttsPercentage}\n            BttsPercentageHomeOrAway={formDataAway[0].BttsPercentageHomeOrAway}\n            BTTSArray={formDataAway[0].BTTSArray}\n            Results={formDataAway[0].Results}\n            ResultsHorA={formDataAway[0].ResultsHorA}\n            CardsTotal={formDataAway[0].CardsTotal}\n            CornersAverage={awayForm.AverageCorners}\n            ScoredBothHalvesPercentage={\n              formDataAway[0].ScoredBothHalvesPercentage\n            }\n            FormTextString={formDataAway[0].FormTextStringAway}\n            FavouriteRecord={formDataAway[0].FavouriteRecord}\n            StyleOfPlay={formDataAway[0].styleOfPlayOverall}\n            StyleOfPlayHomeOrAway={formDataAway[0].styleOfPlayAway}\n          />\n        </ul>\n      </div>\n    );\n  }\n\n  function StatsHomeLast5Component() {\n    if (!homeForm) return null;\n    return (\n      <div className=\"flex-childOne\">\n        <ul style={style}>\n          <Stats\n            games={\"last5\"}\n            style={style}\n            homeOrAway=\"Home\"\n            gameCount={divider}\n            key={formDataHome[0].name}\n            last5={formDataHome[0].Last5}\n            // homeOrAwayResults={gameArrayHomeTeamHomeGames}\n            LeagueOrAll={formDataHome[0].LeagueOrAll}\n            className={\"KeyStatsHome\"}\n            name={formDataHome[0].name}\n            goals={homeForm.last5Goals}\n            conceeded={homeForm.last5GoalsConceeded}\n            XG={homeForm.avXGLast5.toFixed(2)}\n            XGConceded={homeForm.avXGAgainstLast5.toFixed(2)}\n            possession={homeForm.avPosessionLast5.toFixed(2)}\n            shots={homeForm.avShotsLast5.toFixed(2)}\n            sot={homeForm.avSOTLast5.toFixed(2)}\n            dangerousAttacks={\n              homeForm.avDALast5 !== 0\n                ? homeForm.avDALast5.toFixed(2)\n                : homeForm.AverageDangerousAttacks\n            }\n            leaguePosition={\n              homeForm.LeaguePosition !== undefined &&\n              homeForm.LeaguePosition !== \"undefined\"\n                ? formDataHome[0].leaguePosition\n                : 0\n            }\n            rawPosition={\n              game.homeRawPosition !== undefined &&\n              game.homeRawPosition !== \"undefined\"\n                ? game.homeRawPosition\n                : 0\n            }\n            homeOrAwayLeaguePosition={\n              homeForm.homePositionHomeOnly !== undefined &&\n              homeForm.homePositionHomeOnly !== \"undefined\"\n                ? homeForm.homePositionHomeOnly\n                : 0\n            }\n            winPercentage={homeForm.homePPGAv ? homeForm.homePPGAv : \"N/A\"}\n            lossPercentage={\n              game.homeTeamLossPercentage ? game.homeTeamLossPercentage : \"N/A\"\n            }\n            drawPercentage={\n              game.homeTeamDrawPercentage ? game.homeTeamDrawPercentage : \"N/A\"\n            }\n            ppg={homeForm.avPoints5.toFixed(2)}\n            formTrend={[\n              homeTenGameAverage.toFixed(2),\n              homeSixGameAverage.toFixed(2),\n              homeFiveGameAverage.toFixed(2),\n            ]}\n            formRun={homeForm.resultsAll}\n            goalDifference={homeForm.last5GoalDiff}\n            BttsPercentage={homeForm.bttsLast5Percentage}\n            BTTSArray={formDataHome[0].BTTSArray}\n            Results={formDataHome[0].Results}\n            ResultsHorA={formDataHome[0].ResultsHorA}\n            CornersAverage={homeForm.last5Corners}\n            FormTextString={formDataHome[0].FormTextStringHome}\n          />\n        </ul>\n      </div>\n    );\n  }\n\n  // Component: StatsAway (Render Away Team Stats)\n  function StatsAwayLast5Component() {\n    if (!awayForm) return null;\n    return (\n      <div className=\"flex-childTwo\">\n        <ul style={style}>\n          <Stats\n            games={\"last5\"}\n            style={style}\n            homeOrAway=\"Away\"\n            gameCount={divider}\n            key={formDataAway[0].name}\n            last5={formDataAway[0].Last5}\n            // homeOrAwayResults={gameArrayAwayTeamAwayGames}\n            LeagueOrAll={formDataAway[0].LeagueOrAll}\n            className={\"KeyStatsAway\"}\n            classNameTwo={\"FormStatsAway\"}\n            name={formDataAway[0].name}\n            goals={awayForm.last5Goals}\n            conceeded={awayForm.last5GoalsConceeded}\n            XG={awayForm.avXGLast5.toFixed(2)}\n            XGConceded={awayForm.avXGAgainstLast5.toFixed(2)}\n            //todo add goal diff and btts percentages\n            possession={awayForm.avPosessionLast5.toFixed(2)}\n            rawPosition={game.awayRawPosition ? game.awayRawPosition : 0}\n            sot={awayForm.avSOTLast5.toFixed(2)}\n            shots={awayForm.avShotsLast5.toFixed(2)}\n            dangerousAttacks={\n              awayForm.avDALast5 !== 0\n                ? awayForm.avDALast5.toFixed(2)\n                : awayForm.AverageDangerousAttacks\n            }\n            leaguePosition={\n              awayForm.LeaguePosition !== undefined &&\n              awayForm.LeaguePosition !== \"undefined\"\n                ? formDataAway[0].leaguePosition\n                : 0\n            }\n            homeOrAwayLeaguePosition={\n              awayForm.awayPositionAwayOnly !== undefined &&\n              awayForm.awayPositionAwayOnly !== \"undefinedundefined\"\n                ? awayForm.awayPositionAwayOnly\n                : 0\n            }\n            winPercentage={awayForm.awayPPGAv ? awayForm.awayPPGAv : \"N/A\"}\n            lossPercentage={\n              game.awayTeamLossPercentage ? game.awayTeamLossPercentage : \"N/A\"\n            }\n            drawPercentage={\n              game.awayTeamDrawPercentage ? game.awayTeamDrawPercentage : \"N/A\"\n            }\n            ppg={awayForm.avPoints5.toFixed(2)}\n            formTrend={[\n              awayTenGameAverage.toFixed(2),\n              awaySixGameAverage.toFixed(2),\n              awayFiveGameAverage.toFixed(2),\n            ]}\n            formRun={awayForm.resultsAll}\n            goalDifference={awayForm.last5GoalDiff}\n            BttsPercentage={awayForm.bttsLast5Percentage}\n            BTTSArray={formDataAway[0].BTTSArray}\n            Results={formDataAway[0].Results}\n            ResultsHorA={formDataAway[0].ResultsHorA}\n            CornersAverage={awayForm.last5Corners}\n          />\n        </ul>\n      </div>\n    );\n  }\n\n  function StatsHomeOnlyComponent() {\n    if (!homeForm) return null;\n    return (\n      <div className=\"flex-childOne\">\n        <ul style={style}>\n          <Stats\n            games={\"hOrA\"}\n            style={style}\n            homeOrAway=\"Home\"\n            gameCount={divider}\n            key={formDataHome[0].name}\n            last5={formDataHome[0].Last5}\n            // homeOrAwayResults={gameArrayHomeTeamHomeGames}\n            LeagueOrAll={formDataHome[0].LeagueOrAll}\n            className={\"KeyStatsHome\"}\n            name={formDataHome[0].name}\n            goals={homeForm.avgScoredHome}\n            conceeded={homeForm.teamConceededAvgHomeOnly.toFixed(2)}\n            XG={homeForm.avgXGScoredHome.toFixed(2)}\n            XGConceded={homeForm.avgXGConceededHome.toFixed(2)}\n            possession={homeForm.avgPossessionHome.toFixed(2)}\n            sot={homeForm.avgShotsOnTargetHome.toFixed(2)}\n            shots={homeForm.avgShotsHome.toFixed(2)}\n            dangerousAttacks={\n              homeForm.avgDangerousAttacksHome !== 0\n                ? homeForm.avgDangerousAttacksHome.toFixed(2)\n                : homeForm.AverageDangerousAttacks\n            }\n            leaguePosition={\n              homeForm.homePositionHomeOnly !== undefined &&\n              homeForm.homePositionHomeOnly !== \"undefined\"\n                ? formDataHome[0].leaguePosition\n                : 0\n            }\n            rawPosition={\n              game.homeRawPosition !== undefined &&\n              game.homeRawPosition !== \"undefined\"\n                ? game.homeRawPosition\n                : 0\n            }\n            homeOrAwayLeaguePosition={\n              homeForm.homePositionHomeOnly !== undefined &&\n              homeForm.homePositionHomeOnly !== \"undefined\"\n                ? homeForm.homePositionHomeOnly\n                : 0\n            }\n            winPercentage={homeForm.homePPGAv ? homeForm.homePPGAv : \"N/A\"}\n            formTrend={[\n              homeTenGameAverage.toFixed(2),\n              homeSixGameAverage.toFixed(2),\n              homeFiveGameAverage.toFixed(2),\n            ]}\n            formRun={homeForm.resultsAll}\n            goalDifference={formDataHome[0].goalDifference}\n            goalDifferenceHomeOrAway={formDataHome[0].goalDifferenceHomeOrAway}\n            BttsPercentage={homeForm.bttsHomePercentage}\n            BTTSArray={formDataHome[0].BTTSArray}\n            // Results={formDataHome[0].Results}\n            ResultsHorA={formDataHome[0].ResultsHorA}\n            CardsTotal={formDataHome[0].CardsTotal}\n            CornersAverage={homeForm.cornersAvHome.toFixed()}\n            ScoredBothHalvesPercentage={\n              formDataHome[0].ScoredBothHalvesPercentage\n            }\n            FormTextString={formDataHome[0].FormTextStringHome}\n            FavouriteRecord={formDataHome[0].FavouriteRecord}\n            StyleOfPlay={formDataHome[0].styleOfPlayOverall}\n            StyleOfPlayHomeOrAway={formDataHome[0].styleOfPlayHome}\n          />\n        </ul>\n      </div>\n    );\n  }\n\n  // Component: StatsAway (Render Away Team Stats)\n  function StatsAwayOnlyComponent() {\n    if (!awayForm) return null;\n    return (\n      <div className=\"flex-childTwo\">\n        <ul style={style}>\n          <Stats\n            games={\"hOrA\"}\n            style={style}\n            homeOrAway=\"Away\"\n            gameCount={divider}\n            key={formDataAway[0].name}\n            last5={formDataAway[0].Last5}\n            // homeOrAwayResults={gameArrayAwayTeamAwayGames}\n            LeagueOrAll={formDataAway[0].LeagueOrAll}\n            className={\"KeyStatsAway\"}\n            classNameTwo={\"FormStatsAway\"}\n            name={formDataAway[0].name}\n            goals={awayForm.avgScoredAway}\n            conceeded={awayForm.teamConceededAvgAwayOnly.toFixed(2)}\n            XG={awayForm.avgXGScoredAway.toFixed(2)}\n            XGConceded={awayForm.avgXGConceededAway.toFixed(2)}\n            //todo add goal diff and btts percentages\n            possession={awayForm.avgPossessionAway.toFixed(2)}\n            rawPosition={game.awayRawPosition ? game.awayRawPosition : 0}\n            sot={awayForm.avgShotsOnTargetAway.toFixed(2)}\n            shots={awayForm.avgShotsAway.toFixed(2)}\n            dangerousAttacks={\n              awayForm.avgDangerousAttacksAway !== 0\n                ? awayForm.avgDangerousAttacksAway.toFixed(2)\n                : awayForm.AverageDangerousAttacks\n            }\n            leaguePosition={\n              awayForm.awayPosition !== undefined &&\n              awayForm.awayPosition !== \"undefined\"\n                ? formDataAway[0].leaguePosition\n                : 0\n            }\n            homeOrAwayLeaguePosition={\n              awayForm.awayPositionAwayOnly !== undefined &&\n              awayForm.awayPositionAwayOnly !== \"undefinedundefined\"\n                ? awayForm.awayPositionAwayOnly\n                : 0\n            }\n            winPercentage={awayForm.awayPPGAv ? awayForm.awayPPGAv : \"N/A\"}\n            formTrend={[\n              awayTenGameAverage.toFixed(2),\n              awaySixGameAverage.toFixed(2),\n              awayFiveGameAverage.toFixed(2),\n            ]}\n            formRun={awayForm.resultsAll}\n            goalDifference={formDataAway[0].goalDifference}\n            goalDifferenceHomeOrAway={formDataAway[0].goalDifferenceHomeOrAway}\n            BttsPercentage={awayForm.bttsHomePercentage}\n            BTTSArray={formDataAway[0].BTTSArray}\n            // Results={formDataAway[0].Results}\n            ResultsHorA={formDataAway[0].ResultsHorA}\n            CardsTotal={formDataAway[0].CardsTotal}\n            CornersAverage={awayForm.cornersAvAway.toFixed()}\n            ScoredBothHalvesPercentage={\n              formDataAway[0].ScoredBothHalvesPercentage\n            }\n            FormTextString={formDataAway[0].FormTextStringAway}\n            FavouriteRecord={formDataAway[0].FavouriteRecord}\n            StyleOfPlay={formDataAway[0].styleOfPlayOverall}\n            StyleOfPlayHomeOrAway={formDataAway[0].styleOfPlayAway}\n          />\n        </ul>\n      </div>\n    );\n  }\n\n  function handleSetUserTips(gameId, game, tipString, tip, date, uid) {\n    setUserTips((prevTips) => {\n      // Check if the tip for this gameId already exists\n      const existingTipIndex = prevTips.findIndex(\n        (tip) => tip.gameId === gameId\n      );\n\n      if (existingTipIndex !== -1) {\n        // If the tip already exists, update it\n        const updatedTips = [...prevTips];\n        updatedTips[existingTipIndex] = {\n          gameId,\n          game,\n          tipString,\n          tip,\n          date,\n          uid,\n        };\n        return updatedTips; // Return the updated list\n      } else {\n        // If the tip doesn't exist, add a new one\n        return [...prevTips, { gameId, game, tipString, tip, date, uid }];\n      }\n    });\n  }\n\n  gameArrayHome.sort((a, b) => b.unixTimestamp - a.unixTimestamp);\n  gameArrayAway.sort((a, b) => b.unixTimestamp - a.unixTimestamp);\n\n  const bttsArrayHome = Array.from(gameArrayHome, (x) => x.btts);\n  const bttsArrayAway = Array.from(gameArrayAway, (x) => x.btts);\n\n  const overviewHome = gameArrayHome.slice(0, 10).map((game) => (\n    <div>\n      <Collapsable\n        classNameButton=\"ResultButton\"\n        buttonText={\n          <div className=\"ResultRowOverviewSmall\">\n            <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n            <span className=\"columnOverviewScoreSmall\">\n              {game.homeGoals} : {game.awayGoals}\n            </span>\n            <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n          </div>\n        }\n        element={singleResult(game)}\n      />\n    </div>\n  ));\n\n  const overviewAway = gameArrayAway.slice(0, 10).map((game) => (\n    <div>\n      <Collapsable\n        classNameButton=\"ResultButton\"\n        buttonText={\n          <div className=\"ResultRowOverviewSmall\">\n            <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n            <span className=\"columnOverviewScoreSmall\">\n              {game.homeGoals} : {game.awayGoals}\n            </span>\n            <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n          </div>\n        }\n        element={singleResult(game)}\n      />\n    </div>\n  ));\n\n  const formDataMatch = [];\n\n  formDataMatch.push({\n    btts: game.btts_potential,\n  });\n\n  const formDataHome = [];\n\n  function getPointsFromGames(formArr) {\n    const pairings = {\n      W: 3,\n      D: 1,\n      L: 0,\n    };\n    let newArr = [];\n    let arrayOfIndividualPoints = [];\n    let sum = 0;\n\n    for (let i = 0; i < formArr.length; i++) {\n      sum = sum + pairings[formArr[i]];\n      newArr.push(sum);\n      arrayOfIndividualPoints.push(pairings[formArr[i]]);\n    }\n    return [newArr, arrayOfIndividualPoints];\n  }\n\n  let time = game.time;\n\n  if (homeForm.last3Points === undefined) {\n    homeForm.last3Points = getPointsFromLastX(homeForm.lastThreeForm);\n\n    homeForm.last5Points = getPointsFromLastX(homeForm.LastFiveForm);\n\n    homeForm.last6Points = getPointsFromLastX(homeForm.LastSixForm);\n\n    homeForm.last10Points = getPointsFromLastX(homeForm.LastTenForm);\n\n    homeForm.homePPGame = getPointsFromLastX(homeForm.resultsHome);\n\n    awayForm.last3Points = getPointsFromLastX(awayForm.lastThreeForm);\n\n    awayForm.last5Points = getPointsFromLastX(awayForm.LastFiveForm);\n\n    awayForm.last6Points = getPointsFromLastX(awayForm.LastSixForm);\n\n    awayForm.last10Points = getPointsFromLastX(awayForm.LastTenForm);\n\n    awayForm.awayPPGame = getPointsFromLastX(awayForm.resultsAway);\n  }\n\n  const [showAIInsights, setShowAIInsights] = useState(false);\n\n  let formArrayHome;\n  let formArrayAway;\n  let chartType;\n\n  // Side Effect: Initialize component\n  useEffect(() => {\n    async function checkPaymentStatus() {\n      if (userDetail?.uid) {\n        try {\n          const paymentStatus = await checkUserPaidStatus(userDetail.uid);\n          setPaid(paymentStatus);\n        } catch (error) {\n          console.error(\"Error checking payment status:\", error);\n          setPaid(false); // Set to false in case of an error\n        }\n      } else {\n        setPaid(false); // Set to false if there's no user ID\n      }\n    }\n\n    checkPaymentStatus(); // Call the function\n  }); // Dependency on userDetail\n\n  // Get all necessary data\n\n  useEffect(() => {\n    // useEffect to fetch and process game data based on props\n    async function fetchData() {\n      if (game.status === \"void\") return; // Exit if game is void\n\n      if (!allForm || !allLeagueResultsArrayOfObjects) {\n        // return;\n      }\n\n      let index = 2;\n      let gameStats = allForm.find((match) => match.id === game.id);\n      if (!gameStats) {\n        console.warn(\"No game stats found for game id:\", game.id);\n        // return;\n      }\n\n      try {\n        const pos = allLeagueResultsArrayOfObjects\n          .map((i) => i.id)\n          .indexOf(gameStats.leagueId);\n        let matches = allLeagueResultsArrayOfObjects[pos];\n        const resultHome = matches.fixtures.filter(\n          (game) =>\n            game.home_name === gameStats.home.teamName ||\n            game.away_name === gameStats.home.teamName\n        );\n\n        const resultHomeOnly = matches.fixtures.filter(\n          (game) => game.home_name === gameStats.home.teamName\n        );\n        const resultAway = matches.fixtures.filter(\n          (game) =>\n            game.away_name === gameStats.away.teamName ||\n            game.home_name === gameStats.away.teamName\n        );\n\n        const resultAwayOnly = matches.fixtures.filter(\n          (game) => game.away_name === gameStats.away.teamName\n        );\n\n        const homeForm = gameStats.home[index];\n        const awayForm = gameStats.away[index];\n        let id = game.id;\n\n        const attackingMetricsHome = {\n          \"Average Dangerous Attacks\":\n            gameStats?.home[index]?.AverageDangerousAttacksOverall || 0,\n          \"Average Shots\": gameStats?.home[index]?.AverageShots || 0,\n          \"Average Shots On Target\":\n            gameStats?.home[index]?.AverageShotsOnTargetOverall || 0,\n          \"Average Expected Goals\": gameStats?.home[index]?.XGOverall || 0,\n          \"Recent XG\": gameStats?.home[index]?.XGlast5\n            ? gameStats?.home[index]?.XGlast5\n            : gameStats?.home[index]?.XGOverall || 0,\n          \"Average Goals\":\n            gameStats?.home[index]?.averageScoredLeague !== undefined &&\n            gameStats?.home[index]?.averageScoredLeague !== null\n              ? gameStats?.home[index]?.averageScoredLeague\n              : gameStats?.home[index]?.ScoredOverall / 10,\n        };\n        const attackingMetricsAway = {\n          // averagePossession: awayForm.AveragePossessionOverall,\n          \"Average Dangerous Attacks\":\n            gameStats?.away[index]?.AverageDangerousAttacksOverall || 0,\n          \"Average Shots\": gameStats?.away[index]?.AverageShots || 0,\n          \"Average Shots On Target\":\n            gameStats?.away[index]?.AverageShotsOnTargetOverall || 0,\n          \"Average Expected Goals\": gameStats?.away[index]?.XGOverall || 0,\n          \"Recent XG\": gameStats?.away[index]?.XGlast5\n            ? gameStats?.away[index]?.XGlast5\n            : gameStats?.away[index]?.XGOverall || 0,\n          \"Average Goals\":\n            gameStats?.away[index]?.averageScoredLeague !== undefined &&\n            gameStats?.away[index]?.averageScoredLeague !== null\n              ? gameStats?.away[index]?.averageScoredLeague\n              : gameStats?.away[index]?.ScoredOverall / 10,\n        };\n\n        const defensiveMetricsHome = {\n          \"Clean Sheet Percentage\":\n            100 - gameStats?.home[index]?.CleanSheetPercentage || 0,\n          \"Average XG Against\":\n            gameStats?.home[index]?.XGAgainstAvgOverall || 0,\n          \"Recent XG Against\": gameStats?.home[index]?.XGAgainstlast5\n            ? gameStats?.home[index]?.XGAgainstlast5\n            : gameStats?.home[index]?.XGAgainstAvgOverall || 0,\n          \"Average Goals Against\":\n            gameStats?.home[index]?.averageConceededLeague !== undefined &&\n            gameStats?.home[index]?.averageConceededLeague !== null\n              ? gameStats?.home[index]?.averageConceededLeague\n              : gameStats?.home[index]?.ConcededOverall / 10,\n        };\n\n        const defensiveMetricsAway = {\n          \"Clean Sheet Percentage\":\n            100 - gameStats?.away[index]?.CleanSheetPercentage || 0,\n          \"Average XG Against\":\n            gameStats?.away[index]?.XGAgainstAvgOverall || 0,\n          \"Recent XG Against\": gameStats?.away[index]?.XGAgainstlast5\n            ? gameStats?.away[index]?.XGAgainstlast5\n            : gameStats?.away[index]?.XGAgainstAvgOverall || 0,\n          \"Average Goals Against\":\n            gameStats?.away[index]?.averageConceededLeague !== undefined &&\n            gameStats?.away[index]?.averageConceededLeague !== null\n              ? gameStats?.away[index]?.averageConceededLeague\n              : gameStats?.away[index]?.ConcededOverall / 10,\n        };\n\n        const attackH = await calculateAttackingStrength(attackingMetricsHome);\n\n        setHomeAttackStrength(attackH);\n\n        const defenceH = await calculateDefensiveStrength(defensiveMetricsHome);\n\n        setHomeDefenceStrength(defenceH);\n\n        const attackA = await calculateAttackingStrength(attackingMetricsAway);\n\n        setAwayAttackStrength(attackA);\n\n        const defenceA = await calculateDefensiveStrength(defensiveMetricsAway);\n\n        setAwayDefenceStrength(defenceA);\n\n        const possH = await calculateMetricStrength(\n          \"averagePossession\",\n          homeForm.AveragePossessionOverall\n        );\n\n        setHomePossessionStrength(possH);\n\n        const possA = await calculateMetricStrength(\n          \"averagePossession\",\n          awayForm.AveragePossessionOverall\n        );\n\n        setAwayPossessionStrength(possA);\n\n        // \"Directness\",\n        // \"Attacking precision\",\n        const XGForH = await calculateMetricStrength(\n          \"xgFor\",\n          homeForm.XGOverall\n        );\n\n        setHomeXGForStrength(XGForH);\n\n        const XGForA = await calculateMetricStrength(\n          \"xgFor\",\n          awayForm.XGOverall\n        );\n\n        setAwayXGForStrength(XGForA);\n\n        const XGAgH = await calculateMetricStrength(\n          \"xgAgainst\",\n          3 - homeForm.XGAgainstAvgOverall\n        );\n\n        setHomeXGAgainstStrength(XGAgH);\n\n        const XGAgA = await calculateMetricStrength(\n          \"xgAgainst\",\n          3 - awayForm.XGAgainstAvgOverall\n        );\n\n        setAwayXGAgainstStrength(XGAgA);\n\n        const directnessHome = await calculateMetricStrength(\n          \"directnessOverall\",\n          homeForm.directnessOverall\n        );\n\n        setHomeDirectnessStrength(directnessHome);\n\n        const directnessAway = await calculateMetricStrength(\n          \"directnessOverall\",\n          awayForm.directnessOverall\n        );\n\n        setAwayDirectnessStrength(directnessAway);\n\n        const accuracyHome = await calculateMetricStrength(\n          \"accuracyOverall\",\n          homeForm.avgShotValueChart\n        );\n        setHomeAccuracyOverallStrength(accuracyHome);\n\n        const accuracyHomeOnly = await calculateMetricStrength(\n          \"accuracyOverall\",\n          homeForm.avgShotValueHomeChart\n        );\n        setHomeOnlyAccuracyOverallStrength(accuracyHomeOnly);\n\n        const accuracyAway = await calculateMetricStrength(\n          \"accuracyOverall\",\n          awayForm.avgShotValueChart\n        );\n        setAwayAccuracyOverallStrength(accuracyAway);\n\n        const accuracyAwayOnly = await calculateMetricStrength(\n          \"accuracyOverall\",\n          homeForm.avgShotValueAwayChart\n        );\n        setAwayOnlyAccuracyOverallStrength(accuracyAwayOnly);\n\n        const home5GA = await getPointAverage(homeForm.last5Points, 5);\n        setHomeFiveGameAverage(home5GA);\n\n        const home6GA = await getPointAverage(homeForm.last6Points, 6);\n        setHomeSixGameAverage(home6GA);\n\n        const home10GA = await getPointAverage(homeForm.last10Points, 10);\n        setHomeTenGameAverage(home10GA);\n\n        const away5GA = await getPointAverage(awayForm.last5Points, 5);\n        setAwayFiveGameAverage(away5GA);\n\n        const away6GA = await getPointAverage(awayForm.last6Points, 6);\n        setAwaySixGameAverage(away6GA);\n\n        const away10GA = await getPointAverage(awayForm.last10Points, 10);\n        setAwayTenGameAverage(away10GA);\n\n        homeForm.homePPGAv = await getPointAverage(\n          homeForm.homePPGame,\n          homeForm.resultsHome.length\n        );\n        homeForm.tenGameAv = homeTenGameAverage;\n        homeForm.fiveGameAv = homeFiveGameAverage;\n\n        awayForm.awayPPGAv = await getPointAverage(\n          awayForm.awayPPGame,\n          awayForm.resultsAway.length\n        );\n        awayForm.tenGameAv = awayTenGameAverage;\n        awayForm.fiveGameAv = awayFiveGameAverage;\n\n        if (homeForm.fiveGameAv) {\n          const formTextStringHome = await GenerateFormSummary(\n            homeForm,\n            homeForm.tenGameAv,\n            homeForm.fiveGameAv\n          );\n          const formTextStringAway = await GenerateFormSummary(\n            awayForm,\n            awayForm.tenGameAv,\n            awayForm.fiveGameAv\n          );\n          setFormSummary([formTextStringHome, formTextStringAway]);\n        }\n\n        // const homeTeam = game.homeTeam;\n        // const awayTeam = game.awayTeam;\n        // console.log(homeForm);\n\n        // setTime(game.time);\n        // setTeam1(homeTeam);\n        // setTeam2(awayTeam);\n        // setHomeGoals(game.homeGoals);\n        // setAwayGoals(game.awayGoals);\n\n        if (id === \"1\") {\n        }\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setIsLoading(false);\n        setHasCompleteData(\n          game.completeData === true &&\n            gameStats?.home[index].completeData === true\n        );\n\n        setFirstRenderDone(true);\n      }\n    }\n    if (!firstRenderDone) {\n      fetchData();\n    }\n  }, [\n    awayFiveGameAverage,\n    firstRenderDone,\n    awayTenGameAverage,\n    game.completeData,\n    game.id,\n    game.status,\n    homeFiveGameAverage,\n    homeTenGameAverage,\n  ]); // Dependencies for the useCallback\n\n  formDataHome.push({\n    name: game.homeTeam,\n    Last5: gameStats.home[2].LastFiveForm,\n    LeagueOrAll: gameStats.home[2].LeagueOrAll,\n    AverageGoals: homeForm.ScoredOverall / 10,\n    AverageConceeded: homeForm.ConcededOverall / 10,\n    AverageXG: homeForm.XGOverall,\n    AverageXGConceded: homeForm.XGAgainstAvgOverall,\n    AveragePossession: homeForm.AveragePossessionOverall,\n    AverageShotsOnTarget: homeForm.AverageShotsOnTargetOverall,\n    AverageDangerousAttacks: homeForm.AverageDangerousAttacksOverall,\n    homeOrAway: \"Home\",\n    leaguePosition: homeForm.LeaguePosition,\n    Last5PPG: homeForm.PPG,\n    SeasonPPG: homeForm.SeasonPPG,\n    formRun: homeForm.formRun,\n    goalDifference: homeForm.goalDifference,\n    goalDifferenceHomeOrAway: homeForm.goalDifferenceHomeOrAway,\n    // BttsPercentage: homeForm.BttsPercentage || \"-\",\n    // BttsPercentageHomeOrAway: homeForm.BttsPercentageHomeOrAway || \"-\",\n    CardsTotal: homeForm.CardsTotal || \"-\",\n    CornersAverage: homeForm.AverageCorners || \"-\",\n    FormTextStringHome: formSummaries[0],\n    // FavouriteRecord:\n    //   favouriteRecordHome + `. ${homeForm.reliabilityString}`,\n    BTTSArray: bttsArrayHome,\n    Results: homeForm.resultsAll,\n    ResultsHorA: homeForm.resultsHome,\n    XGSwing: homeForm.XGChangeRecently,\n    styleOfPlayOverall: homeForm.styleOfPlayOverall,\n    styleOfPlayHome: homeForm.styleOfPlayHome,\n    // BTTSAll: homeForm.last10btts,\n    // BTTSHorA: homeForm.last10bttsHome,\n  });\n\n  const formDataAway = [];\n\n  formDataAway.push({\n    name: game.awayTeam,\n    Last5: gameStats.away[2].LastFiveForm,\n    LeagueOrAll: gameStats.away[2].LeagueOrAll,\n    AverageGoals: awayForm.ScoredOverall / 10,\n    AverageConceeded: awayForm.ConcededOverall / 10,\n    AverageXG: awayForm.XGOverall,\n    AverageXGConceded: awayForm.XGAgainstAvgOverall,\n    AveragePossession: awayForm.AveragePossessionOverall,\n    AverageShotsOnTarget: awayForm.AverageShotsOnTargetOverall,\n    AverageDangerousAttacks: awayForm.AverageDangerousAttacksOverall,\n    homeOrAway: \"Away\",\n    leaguePosition: awayForm.LeaguePosition,\n    Last5PPG: awayForm.PPG,\n    SeasonPPG: awayForm.SeasonPPG,\n    formRun: awayForm.formRun,\n    goalDifference: awayForm.goalDifference,\n    goalDifferenceHomeOrAway: awayForm.goalDifferenceHomeOrAway,\n    // BttsPercentage: awayForm.BttsPercentage || \"-\",\n    // BttsPercentageHomeOrAway: awayForm.BttsPercentageHomeOrAway || \"-\",\n    CardsTotal: awayForm.CardsTotal || \"-\",\n    CornersAverage: awayForm.AverageCorners || \"-\",\n    FormTextStringAway: formSummaries[1],\n    // FavouriteRecord:\n    //   favouriteRecordAway + `. ${awayForm.reliabilityString}`,\n    BTTSArray: bttsArrayAway,\n    Results: awayForm.resultsAll,\n    ResultsHorA: awayForm.resultsAway,\n    XGSwing: awayForm.XGChangeRecently,\n    styleOfPlayOverall: awayForm.styleOfPlayOverall,\n    styleOfPlayAway: awayForm.styleOfPlayAway,\n    // BTTSAll: awayForm.last10btts,\n    // BTTSHorA: awayForm.last10bttsAway,\n  });\n\n  // AI Insights Generation\n\n  const generateAIInsights = useCallback(\n    async (gameId) => {\n      setIsLoading(true);\n      try {\n        const AIPayload = {\n          league: game.leagueDesc,\n          gameweek: game.game_week,\n          referee: await getRefStats(game.refereeID, game.competition_id),\n          homeTeam: {\n            homeTeamName: game.homeTeam,\n            homeLeaguePosition: homeForm?.LeaguePosition,\n            homeTeamResults: homeForm?.allTeamResults,\n            homeXGDiffAll: homeForm?.longTermXGDiff,\n            homeXGDiffLast5: homeForm?.shortTermXGDiff,\n            homeAttackingStats: homeForm?.attackingMetrics,\n            homeAttackingStatsLast5: homeForm?.attackingMetricsHomeLast5,\n            homeAttackingStatsHomeOnly: homeForm?.attackingMetricsHomeOnly,\n            homeDefensiveStats: homeForm?.defensiveMetrics,\n            homeDefensiveStatsLast5: homeForm?.defensiveMetricsHomeLast5,\n            homeDefensiveStatsHomeOnly: homeForm?.defensiveMetricsHomeOnly,\n          },\n          awayTeam: {\n            awayTeamName: game.awayTeam,\n            awayLeaguePosition: awayForm?.LeaguePosition,\n            awayTeamResults: awayForm?.allTeamResults,\n            awayXGDiffAll: awayForm?.longTermXGDiff,\n            awayXGDiffLast5: awayForm?.shortTermXGDiff,\n            awayAttackingStats: awayForm?.attackingMetrics,\n            awayAttackingStatsLast5: awayForm?.attackingMetricsAwayLast5,\n            awayAttackingStatsAwayOnly: awayForm?.attackingMetricsAwayOnly,\n            awayDefensiveStats: awayForm?.defensiveMetrics,\n            awayDefensiveStatsLast5: awayForm?.defensiveMetricsAwayLast5,\n            awayDefensiveStatsAwayOnly: awayForm?.defensiveMetricsAwayOnly,\n          },\n        };\n        console.log(AIPayload);\n        const response = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}gemini/${gameId}`,\n          {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(AIPayload),\n          }\n        );\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        const jsonData = await response.json();\n        setAiMatchPreview(jsonData);\n      } catch (error) {\n        console.error(\"Fetch error:\", error);\n        // Handle the error\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [game, homeForm, awayForm]\n  );\n\n  // Function to format the AI Match Preview text with newlines\n  const formatAIPreview = (text) => {\n    if (!text) return \"\";\n    return text.split(\". \").join(\".\\n\");\n  };\n\n  //Render the AI data\n  const AIOutput = useMemo(() => {\n    if (!aiMatchPreview) return null;\n\n    const formattedText = formatAIPreview(aiMatchPreview.matchPreview1);\n    const formattedText2 = formatAIPreview(aiMatchPreview.matchPreview2);\n\n    return (\n      <>\n        <h2>Preview</h2>\n        <div className=\"AIMatchPreview\">{formattedText}</div>\n        <div className=\"AIMatchPreview\">{formattedText2}</div>\n        <h2>AI Prediction</h2>\n        <div className=\"AIMatchPreview\">\n          {aiMatchPreview.prediction}{\" \"}\n          <i>(may not reflect the view of XGTipping)</i>\n        </div>\n        <div className=\"AIMatchPreview\">\n          {aiMatchPreview.opinionOnXGTippingPrediction}{\" \"}\n        </div>\n        <div className=\"AIContainer\">\n          <div className=\"HomeAIInsights\">\n            <div>{aiMatchPreview?.homeTeam?.summary}</div>\n          </div>\n          <div className=\"AwayAIInsights\">\n            <div>{aiMatchPreview?.awayTeam?.summary}</div>\n          </div>\n        </div>\n      </>\n    );\n  }, [aiMatchPreview]);\n\n  let [formPointsHome, testArrayHome] = getPointsFromGames(\n    gameStats.home[2].WDLRecord\n  );\n  let [formPointsAway, testArrayAway] = getPointsFromGames(\n    gameStats.away[2].WDLRecord\n  );\n\n  if (formPointsHome.length > 1) {\n    formArrayHome = formPointsHome;\n    formArrayAway = formPointsAway;\n    chartType = \"Points over time\";\n  } else {\n    formArrayHome = [\n      homeTenGameAverage,\n      homeSixGameAverage,\n      homeFiveGameAverage,\n    ];\n    formArrayAway = [\n      awayTenGameAverage,\n      awaySixGameAverage,\n      awayFiveGameAverage,\n    ];\n    chartType = \"Rolling average points over last 10\";\n  }\n  console.log(game);\n\n  const UserTips = ({\n    game,\n    handleSetUserTips,\n    userDetail,\n    selectedTip,\n    handleTipSelect,\n  }) => {\n    const handleClick = (tipType, label) => {\n      if (selectedTip === tipType) {\n        return; // If the button clicked is already selected, do nothing\n      }\n\n      handleTipSelect(tipType); // Update parent state\n      handleSetUserTips(\n        game.id,\n        game.game,\n        label,\n        tipType,\n        game.date,\n        userDetail.uid\n      );\n    };\n\n    return (\n      <div className=\"UserTips\">\n        <button\n          id=\"TipButtonHome\"\n          className=\"TipButton\"\n          style={{\n            backgroundColor: selectedTip === \"homeTeam\" ? \"#fe8c00\" : \"white\",\n            color: selectedTip === \"homeTeam\" ? \"white\" : \"#030052\",\n            border: `1px solid ${\n              selectedTip === \"homeTeam\" ? \"#fe8c00\" : \"#030052\"\n            }`,\n          }}\n          onClick={() => handleClick(\"homeTeam\", `${game.homeTeam} to win`)}\n        >\n          Home\n        </button>\n\n        <button\n          id=\"TipButtonDraw\"\n          className=\"TipButton\"\n          style={{\n            backgroundColor: selectedTip === \"draw\" ? \"#fe8c00\" : \"white\",\n            color: selectedTip === \"draw\" ? \"white\" : \"#030052\",\n            border: `1px solid ${\n              selectedTip === \"draw\" ? \"#fe8c00\" : \"#030052\"\n            }`,\n          }}\n          onClick={() => handleClick(\"draw\", \"Draw\")}\n        >\n          Draw\n        </button>\n\n        <button\n          id=\"TipButtonAway\"\n          className=\"TipButton\"\n          style={{\n            backgroundColor: selectedTip === \"awayTeam\" ? \"#fe8c00\" : \"white\",\n            color: selectedTip === \"awayTeam\" ? \"white\" : \"#030052\",\n            border: `1px solid ${\n              selectedTip === \"awayTeam\" ? \"#fe8c00\" : \"#030052\"\n            }`,\n          }}\n          onClick={() => handleClick(\"awayTeam\", `${game.awayTeam} to win`)}\n        >\n          Away\n        </button>\n      </div>\n    );\n  };\n\n  const [selectedTip, setSelectedTip] = useState(null);\n\n  const handleTipSelect = (tipType) => {\n    setSelectedTip(tipType);\n  };\n  return (\n    <>\n      {isBeforeTimestamp(game.date) && (\n        <>\n          <h2>Your Prediction</h2>\n          <UserTips\n            game={game}\n            handleSetUserTips={handleSetUserTips}\n            userDetail={userDetail}\n            selectedTip={selectedTip} // Pass selectedTip down\n            handleTipSelect={handleTipSelect} // Pass handler down\n          />\n        </>\n      )}\n      <div style={style}>\n        <Collapsable\n          buttonText={\"Lineups & match action\"}\n          classNameButton=\"Lineups\"\n          element={\n            <>\n              <SofaLineupsWidget\n                id={id}\n                team1={team1}\n                team2={team2}\n                time={timestamp}\n                homeGoals={homeGoals}\n                awayGoals={awayGoals}\n              ></SofaLineupsWidget>\n            </>\n          }\n        />\n        <div style={style}>\n          <Div className=\"MatchTime\" text={`Kick off: ${time} GMT`}></Div>\n        </div>\n        <div id=\"AIInsightsContainer\" className=\"AIInsightsContainer\">\n          {!paid && game.leagueID !== 12325 && <div>Paid feature only</div>}\n          <Button\n            className=\"AIInsights\"\n            onClickEvent={() => {\n              generateAIInsights(game.id);\n              setShowAIInsights(true);\n            }}\n            text={\"XG AI\"}\n            disabled={!paid && game.leagueID !== 12325}\n          ></Button>\n          {showAIInsights && ( // Conditionally Render the AI Insights.\n            <div className=\"AIOutputContainer\">\n              {isLoading ? <p>Loading AI data....</p> : AIOutput}\n            </div>\n          )}\n        </div>\n        <Slider\n          length=\"3\"\n          element1={\n            <>\n              <h2>All games</h2>\n              <div className=\"flex-container\">\n                <StatsHomeComponent />\n                <StatsAwayComponent />\n              </div>\n              <div className=\"Chart\" id={`Chart${game.id}`} style={style}>\n                <RadarChart\n                  style={{ height: \"auto\" }}\n                  title=\"XG Tipping Strength Ratings - All Games\"\n                  data={[\n                    homeAttackStrength,\n                    homeDefenceStrength,\n                    homePossessionStrength,\n                    homeXGForStrength,\n                    homeXGAgainstStrength,\n                    homeDirectnessStrength,\n                    homeAccuracyOverallStrength,\n                  ]}\n                  data2={[\n                    awayAttackStrength,\n                    awayDefenceStrength,\n                    awayPossessionStrength,\n                    awayXGForStrength,\n                    awayXGAgainstStrength,\n                    awayDirectnessStrength,\n                    awayAccuracyOverallStrength,\n                  ]}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                ></RadarChart>\n                <BarChart\n                  text=\"All games - Home Team | Away Team\"\n                  data1={[\n                    homeForm.avgScored * 2,\n                    awayForm.avgConceeded * 2,\n                    homeForm.avPointsAll * 3,\n                    homeForm.XGOverall * 2,\n                    awayForm.XGAgainstAvgOverall * 2,\n                    homeForm.AverageShotsOnTargetOverall,\n                    homeForm.AverageDangerousAttacksOverall !== 0\n                      ? homeForm.AverageDangerousAttacksOverall / 7.5\n                      : homeForm.AverageDangerousAttacks / 7.5,\n                    homeForm.AveragePossessionOverall / 7.5,\n                    homeForm.goalDifference / 10,\n                    homeForm.AverageCorners,\n                  ]}\n                  data2={[\n                    awayForm.avgScored * 2,\n                    homeForm.avgConceeded * 2,\n                    awayForm.avPointsAll * 3,\n                    awayForm.XGOverall * 2,\n                    homeForm.XGAgainstAvgOverall * 2,\n                    awayForm.AverageShotsOnTargetOverall,\n                    awayForm.AverageDangerousAttacksOverall !== 0\n                      ? awayForm.AverageDangerousAttacksOverall / 7.5\n                      : awayForm.AverageDangerousAttacks / 7.5,\n                    awayForm.AveragePossessionOverall / 7.5,\n                    awayForm.goalDifference / 10,\n                    awayForm.AverageCorners,\n                  ]}\n                ></BarChart>\n                <MultiTypeChart\n                  dataArray={homeForm.twoDGoalsArray}\n                  text={homeForm.teamName + \" XG Diff (All)\"}\n                />\n                <MultiTypeChart\n                  dataArray={awayForm.twoDGoalsArray}\n                  text={awayForm.teamName + \" XG Diff (All)\"}\n                />\n                <Chart\n                  height={3}\n                  depth={0}\n                  data1={formArrayHome}\n                  data2={formArrayAway}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                  type={chartType}\n                  tension={0}\n                ></Chart>\n                <MultilineChart\n                  height={\n                    Math.max(\n                      rollingGoalDiffTotalHome[\n                        rollingGoalDiffTotalHome.length - 1\n                      ],\n                      rollingGoalDiffTotalAway[\n                        rollingGoalDiffTotalAway.length - 1\n                      ]\n                    ) > 2\n                      ? Math.max(\n                          rollingGoalDiffTotalHome[\n                            rollingGoalDiffTotalHome.length - 1\n                          ],\n                          rollingGoalDiffTotalAway[\n                            rollingGoalDiffTotalAway.length - 1\n                          ]\n                        )\n                      : 2\n                  }\n                  depth={\n                    Math.min(\n                      rollingGoalDiffTotalHome[\n                        rollingGoalDiffTotalHome.length - 1\n                      ],\n                      rollingGoalDiffTotalAway[\n                        rollingGoalDiffTotalAway.length - 1\n                      ]\n                    ) < -2\n                      ? Math.min(\n                          rollingGoalDiffTotalHome[\n                            rollingGoalDiffTotalHome.length - 1\n                          ],\n                          rollingGoalDiffTotalAway[\n                            rollingGoalDiffTotalAway.length - 1\n                          ]\n                        )\n                      : -2\n                  }\n                  data1={rollingGoalDiffTotalHome}\n                  data2={rollingGoalDiffTotalAway}\n                  data3={rollingXGDiffTotalHome}\n                  data4={rollingXGDiffTotalAway}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                  type={\"Goal/XG difference over time\"}\n                  tension={0.5}\n                ></MultilineChart>\n              </div>\n            </>\n          }\n          element2={\n            <>\n              <h2>Last 5 games only</h2>\n              <div className=\"flex-container\">\n                <StatsHomeLast5Component />\n                <StatsAwayLast5Component />\n              </div>\n              <div className=\"Chart\" id={`Chart${game.id}`} style={style}>\n                <RadarChart\n                  title=\"XG Tipping Strength Ratings - Last 5 Games Only\"\n                  data={[\n                    homeAttackStrengthLast5,\n                    homeDefenceStrengthLast5,\n                    homePossessionStrengthLast5,\n                    homeXGForStrengthLast5,\n                    homeXGAgainstStrengthLast5,\n                    homeDirectnessStrengthLast5,\n                    homeAccuracyOverallStrengthLast5,\n                  ]}\n                  data2={[\n                    awayAttackStrengthLast5,\n                    awayDefenceStrengthLast5,\n                    awayPossessionStrengthLast5,\n                    awayXGForStrengthLast5,\n                    awayXGAgainstStrengthLast5,\n                    awayDirectnessStrengthLast5,\n                    awayAccuracyOverallStrengthLast5,\n                  ]}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                ></RadarChart>\n                <BarChart\n                  text=\"Last 5 only - Home Team | Away Team\"\n                  data1={[\n                    homeForm.last5Goals * 2,\n                    awayForm.last5GoalsConceeded * 2,\n                    homeForm.avPoints5 * 3,\n                    homeForm.avXGLast5 * 2,\n                    awayForm.avXGAgainstLast5 * 2,\n                    homeForm.avSOTLast5,\n                    homeForm.avDALast5 !== 0\n                      ? homeForm.avDALast5 / 7.5\n                      : homeForm.AverageDangerousAttacks / 7.5,\n                    homeForm.avPosessionLast5 / 7.5,\n                    homeForm.last5GoalDiff / 5,\n                    homeForm.last5Corners,\n                  ]}\n                  data2={[\n                    awayForm.last5Goals * 2,\n                    homeForm.last5GoalsConceeded * 2,\n                    awayForm.avPoints5 * 3,\n                    awayForm.avXGLast5 * 2,\n                    homeForm.avXGAgainstLast5 * 2,\n                    awayForm.avSOTLast5,\n                    awayForm.avDALast5 !== 0\n                      ? awayForm.avDALast5 / 7.5\n                      : awayForm.AverageDangerousAttacks / 7.5,\n                    awayForm.avPosessionLast5 / 7.5,\n                    awayForm.last5GoalDiff / 5,\n                    awayForm.last5Corners,\n                  ]}\n                ></BarChart>\n                <MultiTypeChart\n                  dataArray={homeForm.twoDGoalsArray.slice(\n                    Math.max(homeForm.twoDGoalsArray.length - 5, 0)\n                  )}\n                  text={homeForm.teamName + \" XG Diff Last 5\"}\n                />\n                <MultiTypeChart\n                  dataArray={awayForm.twoDGoalsArray.slice(\n                    Math.max(awayForm.twoDGoalsArray.length - 5, 0)\n                  )}\n                  text={awayForm.teamName + \" XG Diff Last 5\"}\n                />\n                <MultilineChart\n                  height={\n                    Math.max(\n                      rollingGoalDiffTotalHomeLast5[\n                        rollingGoalDiffTotalHomeLast5.length - 1\n                      ],\n                      rollingGoalDiffTotalAwayLast5[\n                        rollingGoalDiffTotalAwayLast5.length - 1\n                      ]\n                    ) > 2\n                      ? Math.max(\n                          rollingGoalDiffTotalHomeLast5[\n                            rollingGoalDiffTotalHomeLast5.length - 1\n                          ],\n                          rollingGoalDiffTotalAwayLast5[\n                            rollingGoalDiffTotalAwayLast5.length - 1\n                          ]\n                        )\n                      : 2\n                  }\n                  depth={\n                    Math.min(\n                      rollingGoalDiffTotalHomeLast5[\n                        rollingGoalDiffTotalHomeLast5.length - 1\n                      ],\n                      rollingGoalDiffTotalAwayLast5[\n                        rollingGoalDiffTotalAwayLast5.length - 1\n                      ]\n                    ) < -2\n                      ? Math.min(\n                          rollingGoalDiffTotalHomeLast5[\n                            rollingGoalDiffTotalHomeLast5.length - 1\n                          ],\n                          rollingGoalDiffTotalAwayLast5[\n                            rollingGoalDiffTotalAwayLast5.length - 1\n                          ]\n                        )\n                      : -2\n                  }\n                  data1={rollingGoalDiffTotalHomeLast5}\n                  data2={rollingGoalDiffTotalAwayLast5}\n                  data3={rollingXGDiffTotalHomeLast5}\n                  data4={rollingXGDiffTotalAwayLast5}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                  type={\"Goal/XG difference over last 5\"}\n                  tension={0.5}\n                ></MultilineChart>\n              </div>\n            </>\n          }\n          element3={\n            <>\n              <h2>Home/Away games only</h2>\n              <div className=\"flex-container\">\n                <StatsHomeOnlyComponent />\n                <StatsAwayOnlyComponent />\n              </div>\n              <div className=\"Chart\" id={`Chart${game.id}`} style={style}>\n                <RadarChart\n                  title=\"XG Tipping Strength Ratings - Home/Away Games Only\"\n                  data={[\n                    homeOnlyAttackStrength,\n                    homeOnlyDefenceStrength,\n                    homeOnlyPossessionStrength,\n                    homeOnlyXGForStrength,\n                    homeOnlyXGAgainstStrength,\n                    homeOnlyDirectnessStrength,\n                    homeOnlyAccuracyOverallStrength,\n                  ]}\n                  data2={[\n                    awayOnlyAttackStrength,\n                    awayOnlyDefenceStrength,\n                    awayOnlyPossessionStrength,\n                    awayOnlyXGForStrength,\n                    awayOnlyXGAgainstStrength,\n                    awayOnlyDirectnessStrength,\n                    awayOnlyAccuracyOverallStrength,\n                  ]}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                ></RadarChart>\n                <BarChart\n                  text=\"Home/Away only - Home Team | Away Team\"\n                  data1={[\n                    homeForm.avgScoredHome * 2,\n                    awayForm.teamConceededAvgAwayOnly * 2,\n                    homeForm.homePPGAv * 3,\n                    homeForm.avgXGScoredHome * 2,\n                    awayForm.avgXGConceededHome * 2,\n                    homeForm.avgShotsOnTargetHome,\n                    homeForm.avgDangerousAttacksHome !== 0\n                      ? homeForm.avgDangerousAttacksHome / 7.5\n                      : homeForm.AverageDangerousAttacks / 7.5,\n                    homeForm.avgPossessionHome / 7.5,\n                    homeForm.goalDifferenceHomeOrAway / 10,\n                    homeForm.cornersAvHome,\n                  ]}\n                  data2={[\n                    awayForm.avgScoredAway * 2,\n                    homeForm.teamConceededAvgAwayOnly * 2,\n                    awayForm.awayPPGAv * 3,\n                    awayForm.avgXGScoredAway * 2,\n                    homeForm.avgXGConceededAway * 2,\n                    awayForm.avgShotsOnTargetAway,\n                    awayForm.avgDangerousAttacksAway !== 0\n                      ? awayForm.avgDangerousAttacksAway / 7.5\n                      : awayForm.AverageDangerousAttacks / 7.5,\n                    awayForm.avgPossessionAway / 7.5,\n                    awayForm.goalDifferenceHomeOrAway / 10,\n                    awayForm.cornersAvAway,\n                  ]}\n                ></BarChart>\n                <MultiTypeChart\n                  dataArray={homeForm.twoDGoalsArrayHome}\n                  text={homeForm.teamName + \" XG Diff (Home)\"}\n                />\n                <MultiTypeChart\n                  dataArray={awayForm.twoDGoalsArrayAway}\n                  text={awayForm.teamName + \" XG Diff (Away)\"}\n                />\n                <MultilineChart\n                  height={\n                    Math.max(\n                      rollingGoalDiffTotalHomeOnly[\n                        rollingGoalDiffTotalHomeOnly.length - 1\n                      ],\n                      rollingGoalDiffTotalAwayOnly[\n                        rollingGoalDiffTotalAwayOnly.length - 1\n                      ]\n                    ) > 2\n                      ? Math.max(\n                          rollingGoalDiffTotalHomeOnly[\n                            rollingGoalDiffTotalHomeOnly.length - 1\n                          ],\n                          rollingGoalDiffTotalAwayOnly[\n                            rollingGoalDiffTotalAwayOnly.length - 1\n                          ]\n                        )\n                      : 2\n                  }\n                  depth={\n                    Math.min(\n                      rollingGoalDiffTotalHomeOnly[\n                        rollingGoalDiffTotalHomeOnly.length - 1\n                      ],\n                      rollingGoalDiffTotalAwayOnly[\n                        rollingGoalDiffTotalAwayOnly.length - 1\n                      ]\n                    ) < -2\n                      ? Math.min(\n                          rollingGoalDiffTotalHomeOnly[\n                            rollingGoalDiffTotalHomeOnly.length - 1\n                          ],\n                          rollingGoalDiffTotalAwayOnly[\n                            rollingGoalDiffTotalAwayOnly.length - 1\n                          ]\n                        )\n                      : -2\n                  }\n                  data1={rollingGoalDiffTotalHomeOnly}\n                  data2={rollingGoalDiffTotalAwayOnly}\n                  data3={rollingXGDiffTotalHomeOnly}\n                  data4={rollingXGDiffTotalAwayOnly}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                  type={\"Home/Away Goal/XG difference over time\"}\n                  tension={0.5}\n                ></MultilineChart>\n              </div>\n            </>\n          }\n        />\n        <div className=\"Chart\" id={`Chart${game.id}`} style={style}></div>\n        <Div\n          text={`Last league games (most recent first)`}\n          className={\"LastGameHeader\"}\n        ></Div>\n        <div className=\"flex-container\">\n          <div className=\"flex-childOneOverviewSmall\">{overviewHome}</div>\n          <div className=\"flex-childTwoOverviewSmall\">{overviewAway}</div>\n        </div>\n        {/* <h2>Results from similar profile games</h2>\n        <span>(Games where each team had similar odds)</span>\n        <h3>Most recent first</h3>\n        <div className=\"flex-container-similar\">\n          <div className=\"flex-childOneOverviewSmall\">{similarGamesHome}</div>\n          <div className=\"flex-childTwoOverviewSmall\">{similarGamesAway}</div>\n        </div>\n        <input type=\"hidden\" name=\"IL_IN_ARTICLE\" />\n        <Button\n          className=\"MoreStats\"\n          onClickEvent={() =>\n            getTeamStats(\n              game.id,\n              game.homeTeam,\n              game.awayTeam,\n              formDataHome[0].BttsPercentage,\n              formDataHome[0].BttsPercentageHomeOrAway,\n              formDataAway[0].BttsPercentage,\n              formDataAway[0].BttsPercentageHomeOrAway\n            )\n          }\n          text={\"Fixture trends + AI Preview\"}\n        ></Button> */}\n      </div>\n    </>\n  );\n}\n\nexport default GameStats;\n","import React, { Fragment, useState } from \"react\";\nimport { CreateBadge } from \"./createBadge\";\nimport { createStatsDiv } from \"../logic/getStats\";\nimport { renderTable } from \"../logic/getFixtures\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport { useDispatch } from \"react-redux\";\nimport { setData } from \"../logic/dataSlice\";\nimport { Provider } from \"react-redux\";\nimport store from \"../logic/store\"; // Import your Redux store\nimport { formObjectHome } from \"../logic/getScorePredictions\";\nimport { clicked } from \"../logic/getScorePredictions\";\nimport { userDetail } from \"../logic/authProvider\";\nimport { checkUserPaidStatus } from \"../logic/hasUserPaid\";\nimport GameStats from \"./GameStats\";\nimport { userTips } from \"./GameStats\";\nimport { dynamicDate } from \"../logic/getFixtures\";\n\nlet resultValue;\nlet paid;\nvar count;\nlet mockValue;\nvar setCount;\nfunction toggle(bool) {\n  count = !bool;\n  return count;\n}\n\nfunction GetDivider(fixture, mock) {\n  const matchStatus = fixture.status;\n  let isPrediction = resultValue;\n\n  if (fixture.fixture.omit === true && matchStatus !== \"complete\") {\n    isPrediction = true;\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"Omitted\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (mockValue === true && matchStatus === \"complete\") {\n    isPrediction = false;\n    return (\n      <Fragment>\n        <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n        <div\n          className=\"CorrectScore\"\n          key={fixture.fixture.homeTeam}\n          data-cy={\"score-\" + fixture.fixture.id}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (mockValue === true && matchStatus !== \"complete\") {\n    isPrediction = true;\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (isPrediction === false && matchStatus !== \"complete\") {\n    return (\n      <div className=\"divider\" data-cy={\"divider-\" + fixture.fixture.id}>\n        {\"V\"}\n      </div>\n    );\n  } else if (isPrediction === false && matchStatus === \"complete\") {\n    return (\n      <div\n        className=\"Result\"\n        data-cy={\"result-\" + fixture.fixture.id}\n      >{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n    );\n  } else if (isPrediction === true && matchStatus === \"complete\") {\n    let outcome;\n    let prediction;\n\n    switch (true) {\n      case fixture.fixture.homeGoals > fixture.fixture.awayGoals:\n        outcome = 0;\n        fixture.fixture.winner = fixture.fixture.homeTeam;\n        fixture.fixture.outcome = \"homeWin\";\n        break;\n      case fixture.fixture.homeGoals === fixture.fixture.awayGoals:\n        outcome = 1;\n        fixture.fixture.winner = \"draw\";\n        fixture.fixture.outcome = \"draw\";\n\n        break;\n      case fixture.fixture.homeGoals < fixture.fixture.awayGoals:\n        outcome = 2;\n        fixture.fixture.winner = fixture.fixture.awayTeam;\n        fixture.fixture.outcome = \"awayWin\";\n\n        break;\n      default:\n        break;\n    }\n\n    switch (true) {\n      case fixture.fixture.goalsA > fixture.fixture.goalsB:\n        prediction = 0;\n        break;\n      case fixture.fixture.goalsA === fixture.fixture.goalsB:\n        prediction = 1;\n        break;\n      case fixture.fixture.goalsA < fixture.fixture.goalsB:\n        prediction = 2;\n        break;\n      default:\n        break;\n    }\n\n    if (fixture.fixture.omit === true) {\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"Omitted\"\n            key={fixture.fixture.homeTeam}\n            data-cy={\"score-\" + fixture.fixture.id}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    } else if (outcome === prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        switch (true) {\n          case outcome === 0:\n            fixture.fixture.profit = fixture.fixture.homeOdds;\n            break;\n          case outcome === 1:\n            fixture.fixture.profit = fixture.fixture.drawOdds;\n            break;\n          case outcome === 2:\n            fixture.fixture.profit = fixture.fixture.awayOdds;\n            break;\n          default:\n            break;\n        }\n      } else fixture.fixture.profit = 1;\n\n      if (\n        fixture.fixture.goalsA === fixture.fixture.homeGoals &&\n        fixture.fixture.goalsB === fixture.fixture.awayGoals\n      ) {\n        fixture.fixture.exactScore = true;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"ExactScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      } else {\n        fixture.fixture.exactScore = false;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"CorrectScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      }\n    } else if (outcome !== prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        fixture.fixture.profit = 0;\n      } else {\n        fixture.fixture.profit = 1;\n      }\n      fixture.fixture.exactScore = false;\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"IncorrectScore\"\n            key={fixture.fixture.awayTeam}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    }\n  } else {\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  }\n}\n\nfunction renderLeagueName(fixture, mock, showShortlist) {\n  mockValue = mock;\n\n  let name = fixture.leagueName;\n  let id =\n    allLeagueResultsArrayOfObjects.length > 0\n      ? allLeagueResultsArrayOfObjects[fixture.leagueIndex].id\n      : null;\n  if (showShortlist === true) {\n    return (\n      <div>\n        <div\n          className=\"leagueName\"\n          id={`league${id}`}\n          key={`leagueName${id}div`}\n          onClick={() =>\n            renderTable(\n              fixture.leagueIndex,\n              allLeagueResultsArrayOfObjects[fixture.leagueIndex],\n              id\n            )\n          }\n        >\n          {fixture.leagueDesc} &#9776;\n        </div>\n        <div\n          className=\"LeagueTable\"\n          key={`leagueName${id}`}\n          id={`leagueName${id}`}\n        ></div>\n      </div>\n    );\n  } else if (name === null || mock === true) {\n    return <div></div>;\n  } else {\n    return (\n      <div>\n        <div\n          className=\"leagueName\"\n          id={`league${id}`}\n          key={`leagueName${id}div`}\n          onClick={() =>\n            renderTable(\n              fixture.leagueIndex,\n              allLeagueResultsArrayOfObjects[fixture.leagueIndex],\n              id\n            )\n          }\n        >\n          {fixture.leagueName} &#9776;\n        </div>\n        <div\n          className=\"LeagueTable\"\n          key={`leagueName${id}`}\n          id={`leagueName${id}`}\n        ></div>\n      </div>\n    );\n  }\n}\n\nconst downArrow = \"\\u{2195}\";\nconst rightArrow = \"\\u{29C9}\";\n\nexport let testing;\n\nfunction SingleFixture({\n  fixture,\n  count,\n  mock,\n  checked,\n  onToggle,\n  showShortlist,\n}) {\n  const dispatch = useDispatch();\n  const [showGameStats, setShowGameStats] = useState(false);\n\n  function StoreData() {\n    const fixtureDetails = {\n      id: fixture.id,\n      homeTeamName: fixture.homeTeam,\n      homeId: fixture.homeId,\n      homeTeamBadge: fixture.homeBadge,\n      awayTeamName: fixture.awayTeam,\n      awayId: fixture.awayId,\n      awayTeamBadge: fixture.awayBadge,\n      stadium: fixture.stadium,\n      time: fixture.time,\n      homeGoals: fixture.goalsA,\n      awayGoals: fixture.goalsB,\n    };\n\n    localStorage.setItem(\"fixtureDetails\", JSON.stringify(fixtureDetails));\n    dispatch(setData({ key1: \"value1\", key2: \"value2\" }));\n  }\n\n  async function handleButtonClick() {\n    if (userDetail) {\n      paid = await checkUserPaidStatus(userDetail.uid);\n      if (clicked === true && paid) {\n        StoreData();\n        window.open(\"/#/fixture\");\n      } else {\n        alert(\"Premium feature only\");\n      }\n    } else {\n      paid = false;\n    }\n  }\n\n  const handleGameStatsClick = () => {\n    if (!clicked) {\n      alert(\"Tap Get Predictions to fetch all game stats first\");\n      return;\n    }\n    StoreData();\n    setShowGameStats(!showGameStats);\n  };\n\n  return (\n    <div key={fixture.game}>\n      {renderLeagueName(fixture, mock, showShortlist)}\n      <div className={`individualFixtureContainer${fixture.omit}`}>\n        <li\n          className={`individualFixture${fixture.omit}`}\n          key={fixture.id}\n          data-cy={fixture.id}\n          // onClick={onToggle} // Toggle checked state on click\n          style={{ display: checked ? \"lightblue\" : \"white\" }} // Change background when checked\n        >\n          <div className=\"HomeOdds\">{fixture.fractionHome}</div>\n          <div className=\"homeTeam\">{fixture.homeTeam}</div>\n          <GetDivider\n            result={resultValue}\n            status={fixture.status}\n            fixture={fixture}\n          />\n          <div className=\"awayTeam\">{fixture.awayTeam}</div>\n          <CreateBadge\n            image={fixture.homeBadge}\n            ClassName=\"HomeBadge\"\n            alt=\"Home team badge\"\n            flexShrink={5}\n          />\n          <CreateBadge\n            image={fixture.awayBadge}\n            ClassName=\"AwayBadge\"\n            alt=\"Away team badge\"\n          />\n          <div className=\"AwayOdds\">{fixture.fractionAway}</div>\n        </li>\n        <button className=\"GameStats\" onClick={handleGameStatsClick}>\n          Game overview {downArrow}\n        </button>\n        <input\n          type=\"checkbox\"\n          checked={checked}\n          onChange={onToggle}\n          className=\"star\"\n          id={`shortlist-${fixture.id}`} // Unique ID for label association\n        />\n        <button className=\"GameStatsTwo\" onClick={handleButtonClick}>\n          More detail {rightArrow}\n        </button>\n        {/* Checkbox for toggling */}\n      </div>\n      {showGameStats && <GameStats game={fixture} displayBool={true} />}\n    </div>\n  );\n}\n\nasync function submitTips() {\n  if (userDetail?.uid && userTips) {\n    await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}tips`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userTips),\n    });\n    alert('Tips submitted')\n  } else {\n    return;\n  }\n\n  localStorage.removeItem(\"userTips\");\n  userTips.length = 0;\n}\n\nconst List = ({ fixtures, mock }) => {\n  // State to track selected fixtures\n  const [selectedFixtures, setSelectedFixtures] = useState([]);\n  const [showShortlist, setShowShortlist] = useState(false); // Toggle between full list and shortlist\n\n  const handleToggle = (fixture) => {\n\n    setSelectedFixtures((prev) => {\n      const index = prev.findIndex((f) => f.id === fixture.id);\n      if (index !== -1) {\n        // Remove fixture if already selected\n        return prev.filter((_, i) => i !== index);\n      } else {\n        // Add fixture to the end of the array\n        return [...prev, fixture];\n      }\n    });\n  };\n\n  // Convert array into an indexed object\n  const shortlist = Object.fromEntries(\n    selectedFixtures.map((fixture, i) => [i, fixture])\n  );\n\n  return (\n    <>\n      <ShortlistButton\n        toggleShortlist={() => setShowShortlist(!showShortlist)}\n      />\n      <SubmitTipsButton submit={() => submitTips()} />\n      <div>\n        <div id=\"Headers\"></div>\n        <ul className=\"FixtureList\" id=\"FixtureList\">\n          {(showShortlist ? selectedFixtures : fixtures).map((fixture) => (\n            <SingleFixture\n              shortlist={shortlist}\n              showShortlist={showShortlist}\n              fixture={fixture}\n              key={fixture.id}\n              mock={mock}\n              checked={selectedFixtures.some((f) => f.id === fixture.id)}\n              onToggle={() => handleToggle(fixture)}\n            />\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nfunction ShortlistButton({ toggleShortlist }) {\n  return <button onClick={toggleShortlist}>Toggle Shortlist &#9733; </button>;\n}\n\nfunction SubmitTipsButton({ submit }) {\n  return (\n    <button\n      onClick={submit}\n      style={{\n        border: \"1px solid #fe8c00\",\n      }}\n    >\n      Submit My Tips\n    </button>\n  );\n}\n\nexport function Fixture(props) {\n  [count, setCount] = useState(false);\n  resultValue = props.result;\n  return (\n    <Provider store={store}>\n      <List\n        fixtures={props.fixtures}\n        result={resultValue}\n        count={count}\n        mock={props.mock}\n      />\n      {!props.paid && props.capped === true && (\n        <div>\n          {props.originalLength} games have been capped at 15 for free users\n          with full stats available for those returned - sign up for access to\n          40+ leagues and cups\n        </div>\n      )}{\" \"}\n    </Provider>\n  );\n}\n","import React from \"react\";\n\nconst StripePolicies = () => {\n  return (\n    <div className=\"ContactText\">\n      <h2 className=\"text-2xl font-bold mb-4\">XGTipping Policies</h2>\n      \n      <section className=\"mb-6\">\n        <h2 className=\"text-xl font-semibold\">Customer Support</h2>\n        <p>For any inquiries, please contact us via:</p>\n        <ul className=\"list-disc ml-6\">\n          <li>Email: <a href=\"mailto:support@xgtipping.com\" className=\"text-blue-500\">support@xgtipping.com</a></li>\n        </ul>\n      </section>\n\n      <section className=\"mb-6\">\n        <h2 className=\"text-xl font-semibold\">Refund and Dispute Policy</h2>\n        <p>\n          Due to the digital nature of our services, all payments are final, and we do not offer refunds. \n          If you experience technical issues preventing access, please contact our support team for resolution.\n        </p>\n        <p>\n          If you believe you have been charged incorrectly, reach out to us before initiating a chargeback. \n          We will review and resolve the issue promptly.\n        </p>\n      </section>\n\n      <section className=\"mb-6\">\n        <h2 className=\"text-xl font-semibold\">Cancellation Policy</h2>\n        <p>\n          You may cancel your subscription anytime through your account settings. Cancellations prevent future billing, \n          but no refunds are issued for unused time. Access remains active until the end of the billing cycle.\n        </p>\n      </section>\n\n      <section className=\"mb-6\">\n        <h2 className=\"text-xl font-semibold\">Legal and Export Restrictions</h2>\n        <p>\n          XGTipping is available only in jurisdictions where online tipping and sports analysis services are legally permitted. \n          Users are responsible for ensuring compliance with local laws.\n        </p>\n      </section>\n\n      <section className=\"mb-6\">\n        <h2 className=\"text-xl font-semibold\">Terms and Conditions of Promotions</h2>\n        <p>\n          Any promotions, free trials, or discounts offered are subject to change or termination at XGTipping’s discretion. \n          Promotional offers cannot be combined unless explicitly stated. If a promotion is tied to a subscription, \n          standard billing resumes after the promotional period unless canceled before renewal.\n        </p>\n      </section>\n    </div>\n  );\n};\n\nexport default StripePolicies;\n","import { useState } from \"react\";\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { Eye, EyeOff } from \"lucide-react\"; // Eye icons for toggling password visibility\nimport { auth, db } from \"../firebase\"; // Adjust the path as needed\n\nexport let userIsPaid = false;\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false); // State for toggling password visibility\n\n  const handleAuth = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n    try {\n      let userCredential;\n      if (isLogin) {\n        userCredential = await signInWithEmailAndPassword(auth, email, password);\n      } else {\n        userCredential = await createUserWithEmailAndPassword(auth, email, password);\n        // Create Firestore user document with default isPaidUser set to false\n        await setDoc(doc(db, \"users\", userCredential.user.uid), {\n          email: userCredential.user.email,\n          isPaidUser: false,\n        });\n      }\n\n      // Fetch user subscription data from Firestore\n      const userRef = doc(db, \"users\", userCredential.user.uid);\n      const userSnap = await getDoc(userRef);\n\n      if (userSnap.exists()) {\n        const data = userSnap.data();\n        // Update the global variable\n        userIsPaid = data.isPaidUser;\n        console.log(\"User isPaid status:\", userIsPaid);\n      } else {\n        console.error(\"User document not found in Firestore\");\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div>\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      <form onSubmit={handleAuth} className=\"LoginForm\">\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n          className=\"LoginInput1\"\n        />\n\n        {/* Password Input with Toggle Button */}\n        <div className=\"PasswordContainer\">\n          <input\n            type={showPassword ? \"text\" : \"password\"} // Toggle between \"text\" and \"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n            className=\"LoginInput2\"\n          />\n          <button\n            type=\"button\"\n            onClick={() => setShowPassword(!showPassword)}\n            className=\"TogglePasswordButton\"\n          >\n            {showPassword ? <EyeOff size={20} /> : <Eye size={20} />}\n          </button>\n        </div>\n\n        <button type=\"submit\" className=\"LoginSignUp\">\n          {isLogin ? \"Login\" : \"Sign Up\"}\n        </button>\n        <button\n          className=\"ResetPasswordLink\"\n          onClick={() => {\n            window.location.href = \"https://www.xgtipping.com/#/reset\";\n          }}\n        >\n          Reset password\n        </button>\n      </form>\n      <button className=\"SignUp\" onClick={() => setIsLogin(!isLogin)}>\n        {isLogin ? \"Need an account? Sign up\" : \"Already have an account? Login\"}\n      </button>\n    </div>\n  );\n};\n\nexport default Login;\n","import { getAuth, onAuthStateChanged } from \"firebase/auth\";\n\n/**\n * Returns a promise that resolves to the current user if logged in,\n * or null if not logged in.\n */\nexport async function getCurrentUser() {\n  const auth = getAuth();\n  return new Promise((resolve, reject) => {\n    // Use onAuthStateChanged to get the current user once\n    const unsubscribe = onAuthStateChanged(\n      auth,\n      (user) => {\n        unsubscribe();\n        resolve(user);\n      },\n      (error) => {\n        unsubscribe();\n        reject(error);\n      }\n    );\n  });\n}\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./components/Header\";\nimport { Button } from \"./components/Button\";\nimport OddsRadio from \"./components/OddsRadio\";\nimport { Fixture } from \"./components/Fixture\";\nimport mockedFixtures from \"./data/mockedFixtures.json\";\nimport { selectedOdds } from \"./components/OddsRadio\";\nimport Collapsable from \"./components/CollapsableElement\";\nimport StripePolicies from \"./components/Contact\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { AuthProvider, useAuth } from \"./logic/authProvider\";\nimport { getAuth } from \"firebase/auth\";\nimport Login from \"./components/Login\";\nimport { getCurrentUser } from \"./components/ProtectedContent\";\nimport { userDetail } from \"./logic/authProvider\";\nimport { checkUserPaidStatus } from \"./logic/hasUserPaid\";\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  RedditShareButton,\n  RedditIcon,\n  TelegramShareButton,\n  TelegramIcon,\n  TwitterShareButton,\n  TwitterIcon,\n  WhatsappShareButton,\n  WhatsappIcon,\n} from \"react-share\";\nimport { generateFixtures } from \"./logic/getFixtures\";\nimport { ThreeDots } from \"react-loading-icons\";\nimport Logo from \"./components/Logo\";\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\n\nimport reactDom from \"react-dom\";\n// require(\"dotenv\").config();\n\nexport const proxyurl = \"https://safe-caverns-99679.herokuapp.com/\";\nexport var fixtureList = [];\nexport let allLeagueData = [];\n\nexport const availableLeagues = [];\nexport var orderedLeagues = [];\n\nlet loggedIn;\nexport let paid = false;\n\nconst leagueOrder = [\n  // 11084, //Euro 2024\n  // 7432, //World Cup 22\n  13734, //Nations league 24/25\n  12325, //premier league 22/23\n  12451, //championship 22/23\n  12446, //league 1 22/23\n  12422, //league 2 22/23\n  12622, //National league 22/23\n  12316, //La Liga 22/23\n  12455, //Scottish Prem 22/23\n  12529, //Bundesliga 22/23\n  12530, //Serie A 22/23\n  12337, //French Prem 22/23\n  12931, //Portagul Prem 22/23\n  12322, //Dutch Prem 22/23\n  12137, //Belgian Pro League 22/23\n  10969, //sweden 24\n  12132, //Danish Prem 24/25\n  10976, //Norway Prem 23\n  12472, //Austrian Prem 22/23\n  12734, //Greek Prem 22/23\n  12641, //turkey\n  12120, //Polish prem 22/23\n  12326, //Swiss prem 22/23\n  13952, //Irish Prem 23\n  12321, // Champs league\n  12327, //Europa\n  12467, //Spanish secunda 22/23\n  12621, //Italy serie B 22/23\n  12528, //Bundesliga 2 22/23\n  12623, //German 3rd tier 22/23\n  12338, //French League 2 22/23\n  12456, //Scottish Championship 22/23\n  12474, //Scottish league 1 22/23\n  12453, //Scottish league 2 22/23\n  12827, //Women's prem 23/24\n  13973, //MLS 25\n  11321, //Brazil prem 24\n  14125, //Argentina prem 23\n  12136, //Mexico prem 23/24\n  12933, //National league North and South 22/23\n  13703, //Australian A league 24/25\n  14069, //S Korea 25\n];\n\nlet today;\nlet todayFootyStats;\nlet todaySS;\nlet tomorrow;\nlet tomorrowFootyStats;\nlet tomorrowSS;\nexport let date;\nlet dateSS;\nlet dateFootyStats;\nlet yesterday;\nlet yesterdayFootyStats;\nlet yesterdaySS;\nlet lastSaturday;\nlet lastSaturdayFootyStats;\nlet lastSaturdaySS;\nlet historic;\nlet historicFootyStats;\nlet historicSS;\nlet tomorrowsDate;\nlet yesterdaysDate;\nlet saturdayDate;\nlet historicDate;\nlet string;\nlet dateString;\n\n(async function fetchLeagueData() {\n  let leagueList;\n  if (userDetail) {\n    paid = await checkUserPaidStatus(userDetail.uid);\n  } else {\n    paid = false;\n  }\n  leagueList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}leagueList`);\n\n  let leagueArray;\n  await leagueList.json().then((leagues) => {\n    leagueArray = Array.from(leagues.data);\n  });\n\n  for (let i = 0; i < leagueArray.length; i++) {\n    const league = leagueArray[i];\n    const name = leagueArray[i].name;\n\n    for (let x = 0; x < league.season.length; x++) {\n      const element = league.season[x];\n\n      if (element.year === 2025 || element.year === 20242025) {\n        if (\n          element.id !== 13703 &&\n          element.id !== 6935 &&\n          element.id !== 7061\n        ) {\n          availableLeagues.push({ name: name, element });\n        }\n      }\n    }\n\n    async function mapOrder(array, order, key) {\n      array.sort(function (a, b) {\n        var A = a.element[key],\n          B = b.element[key];\n\n        if (order.indexOf(A) > order.indexOf(B)) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n      return array;\n    }\n    //leagues ordered by id\n    orderedLeagues = await mapOrder(availableLeagues, leagueOrder, \"id\");\n  }\n  return orderedLeagues;\n})();\n\nexport async function getLeagueList() {\n  loggedIn = await getCurrentUser();\n  let i = 0;\n  date = new Date();\n  string = \"Today\";\n\n  async function incrementDate(num, date) {\n    i = i + num;\n    date.setDate(date.getDate() + num);\n    dateSS = await convertTimestampForSofaScore(date);\n\n    [date, dateFootyStats] = await calculateDate(date);\n    string = dateFootyStats;\n\n    await renderButtons();\n  }\n\n  async function decrementDate(num, date) {\n    i = i - num;\n    console.log(i);\n    if (i > -120) {\n      date.setDate(date.getDate() - num);\n      dateSS = await convertTimestampForSofaScore(date);\n      [date, dateFootyStats] = await calculateDate(date);\n      string = dateFootyStats;\n      dateString = date;\n      await renderButtons();\n    }\n  }\n\n  async function calculateDate(dateString) {\n    const day = dateString.getDate();\n    const month = dateString.getMonth() + 1;\n    const year = dateString.getFullYear();\n    return [`${month}${day}${year}`, `${year}-${month}-${day}`];\n  }\n\n  [today, todayFootyStats] = await calculateDate(new Date());\n\n  tomorrowsDate = new Date();\n  tomorrowsDate.setDate(tomorrowsDate.getDate() + 1);\n  [tomorrow, tomorrowFootyStats] = await calculateDate(tomorrowsDate);\n\n  yesterdaysDate = new Date();\n  yesterdaysDate.setDate(yesterdaysDate.getDate() - 1);\n  [yesterday, yesterdayFootyStats] = await calculateDate(yesterdaysDate);\n\n  saturdayDate = new Date();\n  saturdayDate.setDate(\n    saturdayDate.getDate() - ((saturdayDate.getDay() + 6) % 7)\n  );\n  saturdayDate.setDate(saturdayDate.getDate() - 2);\n  [lastSaturday, lastSaturdayFootyStats] = await calculateDate(saturdayDate);\n\n  historicDate = new Date();\n  historicDate.setDate(\n    historicDate.getDate() - ((historicDate.getDay() + 6) % 7)\n  );\n  historicDate.setDate(historicDate.getDate() - 9);\n  [historic, historicFootyStats] = await calculateDate(historicDate);\n\n  async function convertTimestampForSofaScore(timestamp) {\n    let newDate = new Date(timestamp);\n\n    let year = newDate.getFullYear();\n    let month = String(newDate.getMonth() + 1).padStart(2, \"0\"); // Adding 1 to month because it is zero-based\n    let day = String(newDate.getDate()).padStart(2, \"0\");\n\n    let converted = `${year}-${month}-${day}`;\n\n    return converted;\n  }\n\n  todaySS = await convertTimestampForSofaScore(new Date());\n  tomorrowSS = await convertTimestampForSofaScore(tomorrowsDate);\n  yesterdaySS = await convertTimestampForSofaScore(yesterdaysDate);\n  lastSaturdaySS = await convertTimestampForSofaScore(saturdayDate);\n  historicSS = await convertTimestampForSofaScore(historicDate);\n\n  const text =\n    \"Select a day you would like to retrieve fixtures for from the options above\\n A list of games will be returned once the data has loaded\\n Once all fixtures have loaded, click on “Get Predictions” to see XGTipping's forecasted outcomes for every game\\n If a game has completed, the predictions is displayed on the right and the actual result on the left\\n Each individual fixture is tappable/clickable. By doing so, you can access a range of detailed stats, from comparative charts, granular performance measures to previous meetings.\\n All games are subject to the same automated prediction algorithm with the outcome being a score prediction. Factors that determine the tip include the following, amongst others:\\n - Goal differentials\\n - Expected goal differentials \\n - Attack/Defence performance\\n - Form trends over time\\n - Home/Away records\\n - WDL records\\n - Points per game \\n - A range of other comparative factors\\n  –\\n\";\n\n  const text2 =\n    \"A range of tools are available should you wish to use them\\n Build a multi - Use the '+' or '-' buttons to add or remove a game deemed to be one of XGTIpping's highest confidence tips from the day\\n Exotic of the day: A pre-built exotic multi comprising of XGTipping's highest confidence tips\\n BTTS games: Games where both teams to score is deemed a likely outcome\\n Over 2.5 goals tips: Games where over 2.5 goals are most likely to be scored\\n XG tips: Comprises only games where the expected goal differentials between each team are at their greatest. We believe this shows a true disparity in the form of the two opposing teams\\n Tap the 'How to use' option to hide this text\";\n\n  let textJoined = text.concat(text2);\n\n  let newText = textJoined.split(\"\\n\").map((i) => {\n    return <p>{i}</p>;\n  });\n\n  async function renderButtons(loginStatus) {\n    ReactDOM.render(\n      <div className=\"FixtureButtons\">\n        <h6>{loginStatus}</h6>\n        <div className=\"historicResults\">\n          <Button\n            text={\"Last Saturday\"}\n            className=\"HistoricFixturesButton\"\n            onClickEvent={async () =>\n              fixtureList.push(\n                await generateFixtures(\n                  \"lastSaturday\",\n                  lastSaturday,\n                  selectedOdds,\n                  lastSaturdayFootyStats,\n                  false,\n                  today,\n                  lastSaturdaySS\n                )\n              )\n            }\n          />\n        </div>\n        <Button\n          text={`<`}\n          className=\"FixturesButton\"\n          onClickEvent={async () => await decrementDate(1, date)}\n        />\n        <Button\n          text={dateFootyStats !== undefined ? dateFootyStats : date}\n          className=\"FixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"todaysFixtures\",\n                dateString,\n                selectedOdds,\n                dateFootyStats,\n                false,\n                today,\n                dateSS\n              )\n            )\n          }\n        />\n        <Button\n          text={`Today`}\n          className=\"FixturesButtonToday\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"todaysFixtures\",\n                today,\n                selectedOdds,\n                todayFootyStats,\n                true,\n                today,\n                todaySS\n              )\n            )\n          }\n        />\n        <Button\n          text={\"Tomorrow\"}\n          className=\"FixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"tomorrowsFixtures\",\n                tomorrow,\n                selectedOdds,\n                tomorrowFootyStats,\n                true,\n                today,\n                tomorrowSS\n              )\n            )\n          }\n        />\n      </div>,\n      document.getElementById(\"Buttons\")\n    );\n  }\n\n  ReactDOM.render(\n    <div className=\"FixtureButtons\">\n      <div className=\"historicResults\">\n        <Button\n          text={\"Last Saturday\"}\n          className=\"HistoricFixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"lastSaturday\",\n                lastSaturday,\n                selectedOdds,\n                lastSaturdayFootyStats,\n                false,\n                today,\n                lastSaturdaySS\n              )\n            )\n          }\n        />\n      </div>\n      <Button\n        text={`<`}\n        className=\"FixturesButton\"\n        onClickEvent={async () => await decrementDate(1, date)}\n      />\n      <Button\n        text={`${string}`}\n        className=\"FixturesButtonToday\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"todaysFixtures\",\n              today,\n              selectedOdds,\n              todayFootyStats,\n              true,\n              today,\n              todaySS\n            )\n          )\n        }\n      />\n      <Button\n        text={\"Tomorrow\"}\n        className=\"FixturesButton\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"tomorrowsFixtures\",\n              tomorrow,\n              selectedOdds,\n              tomorrowFootyStats,\n              true,\n              today,\n              tomorrowSS\n            )\n          )\n        }\n      />\n    </div>,\n    document.getElementById(\"Buttons\")\n  );\n  ReactDOM.render(\n    <div className=\"OddsRadios\">\n      <OddsRadio value=\"Fractional odds\"></OddsRadio>\n      <OddsRadio value=\"Decimal odds\"></OddsRadio>\n    </div>,\n    document.getElementById(\"Checkbox\")\n  );\n  ReactDOM.render(\n    <Fragment>\n      <Collapsable\n        // className={\"HowToUse\"}\n        buttonText={\"How to use\"}\n        element={newText}\n      />\n    </Fragment>,\n    document.getElementById(\"XGDiff\")\n  );\n\n  if (loggedIn) {\n    ReactDOM.render(\n      <h6>Welcome back {loggedIn.email}</h6>,\n      document.getElementById(\"Email\")\n    );\n  } else {\n    ReactDOM.render(<Login />, document.getElementById(\"Email\"));\n  }\n}\n\n// Replace with your own Stripe public key\nconst stripePromise = loadStripe(\n  \"pk_live_51QojxLBrqiWlVPadBxhtoj499YzoC8YjFUIVQwCcTe8B7ZUG47NbYAam2wvNox2mUmzd0WgQh4PWKaIQaxKxubig00yEzjNuVQ\"\n);\n\nconst handleCheckout = async (priceId) => {\n  const stripe = await stripePromise;\n  const auth = getAuth();\n  const user = auth.currentUser;\n\n  if (!user) {\n    alert(\"Please sign-up or login before purchasing\");\n    return;\n  }\n\n  const response = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}create-checkout-session`,\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ priceId, uid: user.uid }), // Send uid\n    }\n  );\n\n  const session = await response.json();\n\n  const result = await stripe.redirectToCheckout({ sessionId: session.id });\n\n  if (result.error) {\n    console.error(\"Checkout error:\", result.error.message);\n  }\n};\n\nasync function getHighestScoringLeagues() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}over25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    for (let index = 0; index < 215; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        over25Percentage:\n          leagues.data.top_leagues.data[index].seasonOver25Percentage_overall,\n        division: leagues.data.top_leagues.data[index].division,\n        leagueId: leagues.data.top_leagues.data[index].id,\n      };\n      arr.push(league);\n    }\n  });\n\n  const finalArray = arr.filter(\n    (league) =>\n      leagueOrder.find((element) => element === league.leagueId) &&\n      league.averageGoals >= 2.5\n  );\n\n  let sortedArray = finalArray.sort((a, b) => b.averageGoals - a.averageGoals);\n\n  return sortedArray;\n}\n\nasync function getLowestScoringLeagues() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}under25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    for (let index = 0; index < 215; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        under25Percentage:\n          leagues.data.top_leagues.data[index].seasonUnder25Percentage_overall,\n        leagueId: leagues.data.top_leagues.data[index].id,\n      };\n      arr.push(league);\n    }\n  });\n\n  const finalArray = arr.filter(\n    (league) =>\n      leagueOrder.find((element) => element === league.leagueId) &&\n      league.averageGoals < 2.5\n  );\n\n  let sortedArray = finalArray.sort((a, b) => a.averageGoals - b.averageGoals);\n\n  return sortedArray;\n}\n\nconst welcomeTextUnsplitOne = `Welcome to XGTipping. Your go-to resource for all things football, from predictions, comprehensive head to head stats, results, xg scores, odds, league tables, form, and bespoke multi-builders underpinned by expected goal (XG) data.\\n `;\nlet welcomeTextOne = welcomeTextUnsplitOne.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nconst welcomeTextUnsplitTwo = `XGTipping is completely independent and free to use, relying on a donation model to support running costs. For feedback or feature ideas, get in touch at @TippingXg.`;\nlet welcomeTextTwo = welcomeTextUnsplitTwo.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nfunction AppContent() {\n  const { user, isPaidUser } = useAuth();\n  getLeagueList();\n\n  return (\n    <div className=\"App\">\n      <Logo />\n      <a\n        className=\"SocialLink\"\n        href=\"https://www.reddit.com/r/xgtipping/\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        r/xgtipping\n      </a>\n      <div id=\"LoadingContainer\" className=\"LoadingContainer\" />\n      <div id=\"RadioContainer\" className=\"RadioContainer\">\n        <div id=\"RadioText\" />\n        <div id=\"RadioButtons\" />\n      </div>\n      <div id=\"Email\" className=\"Email\"></div>\n      <div id=\"Day\" />\n      <div id=\"Checkbox\" />\n      <div id=\"ExplainerText\" />\n      <div id=\"Loading\" className=\"Loading\"></div>\n      <div id=\"Buttons\" className=\"Buttons\">\n        <ThreeDots className=\"MainLoading\" fill=\"#030061\" />\n        <div>Loading all fixture and form data...</div>\n      </div>\n\n      {user ? (\n        isPaidUser ? (\n          // If the user is logged in and is a paying customer, show the cancel button\n          <button\n            onClick={() => {\n              window.location.href =\n                \"https://www.xgtipping.com/#/cancelsubscription\";\n            }}\n            className=\"CancelButton\"\n          >\n            Cancel Subscription\n          </button>\n        ) : (\n          // If the user is logged in but is NOT a paying customer, show subscribe buttons\n          <div>\n            <span className=\"MembershipInfo\">\n              Full fixtures and AI predictions are restricted to\n              premium members. Memberships can be cancelled at any time and\n              prices will differ in currencies other than GBP. Payments are\n              securely hosted by Stripe.\n            </span>\n            <h3>\n              Subscription will be charged to payment card from week 2 but can\n              be cancelled at any time.\n            </h3>\n            <button\n              onClick={() => handleCheckout(\"price_1QrQ4ZBrqiWlVPadCkhLhtiZ\")}\n              className=\"SubscribeButton\"\n            >\n              Subscribe for £1/week\n            </button>\n            <button\n              onClick={() => handleCheckout(\"price_1QrQ5NBrqiWlVPadFBuBKKSM\")}\n              className=\"SubscribeButton\"\n            >\n              Subscribe for £3/month\n            </button>\n            <button\n              onClick={() => handleCheckout(\"price_1QrQ75BrqiWlVPadEML30BoJ\")}\n              className=\"SubscribeButton\"\n            >\n              Subscribe for £30/year\n            </button>\n          </div>\n        )\n      ) : (\n        // If the user is not logged in, show nothing\n        <div></div>\n      )}\n\n      <div id=\"GeneratePredictions\" className=\"GeneratePredictions\" />\n      <Collapsable\n        buttonText={\"Multis\"}\n        element={\n          <Fragment>\n            <div id=\"bestPredictions\" className=\"bestPredictions\" />\n            <div id=\"exoticOfTheDay\" className=\"exoticOfTheDay\" />\n            {/* <div id=\"successMeasure2\" /> */}\n            <div id=\"RowOneContainer\" className=\"RowOneContainer\">\n              <div id=\"BTTS\" className=\"RowOne\" />\n              <div id=\"longShots\" className=\"RowOne\" />\n              <div id=\"draws\" className=\"RowOne\" />\n            </div>\n            <div id=\"insights\" />\n            <div id=\"UserGeneratedTips\"/>\n\n          </Fragment>\n        }\n      />\n      <div id=\"shortlistRender\" />\n      <div id=\"successMeasure2\" />\n      <div id=\"highLowLeagues\" className=\"HighLowLeagues\" />\n      <div id=\"risk\" />\n      <div id=\"successMeasure\" />\n      <div id=\"tables\" />\n      <div id=\"homeBadge\" />\n      <div id=\"FixtureContainerHeaders\"></div>\n\n      <div id=\"FixtureContainer\">\n        <h6 className=\"WelcomeText\">{welcomeTextOne}</h6>\n        <h6 className=\"GetMatchStatText\">\n          Below is an example of our tips/results overview for you to\n          familiarise yourself with. Get real fixtures using the date buttons\n          above. When loaded, tap on one to see full match stats.\n        </h6>\n\n        <div className=\"ExplainerContainer\">\n          <span className=\"oddsHomeExplainer\">Home odds</span>\n          <span className=\"emptyHomeTeam\"></span>\n          <span className=\"scoreExplainer\">Result / KO Time</span>\n          <span className=\"predictionExplainer\">Our Prediction</span>\n          <span className=\"emptyAwayTeam\"></span>\n          <span className=\"oddsAwayExplainer\">Away odds</span>\n        </div>\n\n        <Fixture\n          fixtures={mockedFixtures.matches}\n          mock={true}\n          className={\"individualFixture\"}\n        />\n\n        <div>\n          <h6 className=\"WelcomeText\">{welcomeTextTwo}</h6>\n          <h6 className=\"WelcomeText\">\n            We cover a range of leagues, including\n            <ul className=\"AllLeagues\">\n              <li className=\"League\" key=\"premier-league\">\n                Premier League\n              </li>\n              <li className=\"League\" key=\"english-football-league\">\n                English Football League\n              </li>\n              <li className=\"League\" key=\"la-liga\">\n                La Liga\n              </li>\n              <li className=\"League\" key=\"serie-a\">\n                Serie A\n              </li>\n              <li className=\"League\" key=\"bundesliga\">\n                Bundesliga\n              </li>\n              <li className=\"League\" key=\"ligue-1\">\n                Ligue 1\n              </li>\n              <li className=\"League\" key=\"mls\">\n                MLS\n              </li>\n              <li className=\"League\" key=\"primeira-liga\">\n                Primeira Liga\n              </li>\n              <li className=\"League\" key=\"loads-more\">\n                Loads more...\n              </li>\n            </ul>\n          </h6>\n        </div>\n\n        <div>\n          <div className=\"DataText\">Raw data from</div>\n          <a\n            className=\"DataLink\"\n            href=\"https://www.footystats.org\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            footystats.org\n          </a>\n        </div>\n        <div className=\"bitcoin\" id=\"bitcoin\">\n          <a\n            href=\"https://www.ko-fi.com/xgtipping\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Donations\n          </a>\n          <span className=\"bitcoinSymbol\">&#x20bf;itcoin address</span>\n          <span className=\"bitcoinAddress\">\n            bc1q7j62txkvhfu0dt3l0s07saze6pjnyzs26wfgp0\n          </span>\n        </div>\n      </div>\n      <div id=\"XGDiff\" />\n\n      <div className=\"Social\">\n        <TwitterShareButton\n          url={\"www.xgtipping.com\"}\n          title={\"#XGTipping\"}\n          className=\"ShareButton\"\n        >\n          <TwitterIcon size={\"3em\"} round={true} />\n        </TwitterShareButton>\n        <RedditShareButton\n          url={\"www.xgtipping.com\"}\n          title={\"XGTipping\"}\n          className=\"ShareButton\"\n        >\n          <RedditIcon size={\"3em\"} round={true} />\n        </RedditShareButton>\n        <FacebookShareButton\n          url={\"www.xgtipping.com\"}\n          quote={\"XGTipping - data-driven football predictions\"}\n          className=\"ShareButton\"\n        >\n          <FacebookIcon size={\"3em\"} round={true} />\n        </FacebookShareButton>\n        <WhatsappShareButton\n          url={\"www.xgtipping.com\"}\n          title={\"XGTipping\"}\n          separator=\": \"\n          className=\"ShareButton\"\n        >\n          <WhatsappIcon size={\"3em\"} round={true} />\n        </WhatsappShareButton>\n        <TelegramShareButton\n          url={\"XGTipping\"}\n          title={\"XGTipping\"}\n          className=\"ShareButton\"\n        >\n          <TelegramIcon size={\"3em\"} round={true} />\n        </TelegramShareButton>\n      </div>\n\n      <Collapsable buttonText={\"Contact\"} element={<StripePolicies />} />\n    </div>\n  );\n}\n\nexport default function App() {\n  return (\n    <AuthProvider>\n      <Routes>\n        <Route path=\"/\" element={<AppContent />} />\n      </Routes>\n    </AuthProvider>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/xg-tipping-high-resolution-logo-transparent.90176ea6.png\";","import React from 'react';\nimport myImage from './images/xg-tipping-high-resolution-logo-transparent.png';\n\nconst Logo = () => {\n  return (\n    <div className=\"logo-container\">\n      <img src={myImage} alt=\"XG Tipping logo\" className='responsive-logo'/>\n    </div>\n  );\n};\n\nexport default Logo;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CreateBadge } from \"./createBadge\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction TeamPage() {\n  const [dataState, setData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const responseHome = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}team/${storedFixtureDetailsJson.homeId}`\n      );\n      const resultHome = await responseHome.json();\n\n      const responseAway = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}team/${storedFixtureDetailsJson.awayId}`\n      );\n      const resultAway = await responseAway.json();\n      // setData(result.data.stadium_name);\n\n      let indexHome = resultHome.data.findIndex(\n        (x) => x.season_format === \"Domestic League\"\n      );\n      let indexAway = resultAway.data.findIndex(\n        (x) => x.season_format === \"Domestic League\"\n      );\n\n      if (resultHome.data[indexHome].stats.seasonScoredNum_overall) {\n        setData((test) => ({\n          ...test,\n          scoredOverallHome:\n            resultHome.data[indexHome].stats.seasonScoredNum_overall,\n          playedHomeOnly:\n            resultHome.data[indexHome].stats.seasonMatchesPlayed_home,\n          scoredOverallHomeOnly:\n            resultHome.data[indexHome].stats.seasonScoredNum_home,\n          conceededOverallHome:\n            resultHome.data[indexHome].stats.seasonConcededNum_overall,\n          conceededOverallHomeOnly:\n            resultHome.data[indexHome].stats.seasonConcededNum_home,\n\n          PPGOverallHome: resultHome.data[indexHome].stats.seasonPPG_overall,\n          PPGOverallHomeOnly: resultHome.data[indexHome].stats.seasonPPG_home,\n          leaguePosition_overallHome:\n            resultHome.data[indexHome].stats.leaguePosition_overall,\n          leaguePosition_HomeOnly:\n            resultHome.data[indexHome].stats.leaguePosition_home,\n          averageAttendance:\n            resultHome.data[indexHome].stats.average_attendance_home,\n          BTTSPercentage_overallHome:\n            resultHome.data[indexHome].stats.seasonBTTSPercentage_overall,\n          BTTSAndWinPercentage_Home:\n            resultHome.data[indexHome].stats.BTTS_and_win_percentage_overall,\n          BTTSAndLosePercentage_Home:\n            resultHome.data[indexHome].stats.BTTS_and_lose_percentage_overall,\n          BTTSBothHalvesHome:\n            resultHome.data[indexHome].stats\n              .BTTS_both_halves_percentage_overall,\n          GoalDifferenceHT_overall_Home:\n            resultHome.data[indexHome].stats.GoalDifferenceHT_overall,\n          GD_2hg_overall_Home: resultHome.data[indexHome].stats.gd_2hg_overall,\n          leadingAtHTPercentage_overallHome:\n            resultHome.data[indexHome].stats.leadingAtHTPercentage_overall,\n          seasonOver15Percentage_overallHome:\n            resultHome.data[indexHome].stats.seasonOver15Percentage_overall,\n          seasonOver25Percentage_overallHome:\n            resultHome.data[indexHome].stats.seasonOver25Percentage_overall,\n          seasonOver35Percentage_overallHome:\n            resultHome.data[indexHome].stats.seasonOver35Percentage_overall,\n          seasonOver45Percentage_overallHome:\n            resultHome.data[indexHome].stats.seasonOver45Percentage_overall,\n          scoredBothHalvesPercentage_overallHome:\n            resultHome.data[indexHome].stats.scoredBothHalvesPercentage_overall,\n          shots_on_target_per_goals_scored_overallHome:\n            resultHome.data[indexHome].stats.additional_info\n              .shots_on_target_per_goals_scored_overall,\n          cornersTotalAVG_overallHome:\n            resultHome.data[indexHome].stats.cornersTotalAVG_overall,\n          cardsAVG_overallHome:\n            resultHome.data[indexHome].stats.cardsAVG_overall,\n          foulsAVG_overallHome:\n            resultHome.data[indexHome].stats.foulsAVG_overall,\n          penalties_won_per_match_overallHome:\n            resultHome.data[indexHome].stats.additional_info\n              .penalties_won_per_match_overall,\n          penalty_in_a_match_percentage_overallHome:\n            resultHome.data[indexHome].stats.additional_info\n              .penalty_in_a_match_percentage_overall,\n\n          scoredOverallAway:\n            resultAway.data[indexAway].stats.seasonScoredNum_overall,\n          playedAwayOnly:\n            resultAway.data[indexAway].stats.seasonMatchesPlayed_away,\n          scoredOverallAwayOnly:\n            resultAway.data[indexAway].stats.seasonScoredNum_away,\n          conceededOverallAway:\n            resultAway.data[indexAway].stats.seasonConcededNum_overall,\n          conceededOverallAwayOnly:\n            resultAway.data[indexAway].stats.seasonConcededNum_away,\n\n          PPGOverallAway: resultAway.data[indexAway].stats.seasonPPG_overall,\n          PPGOverallAwayOnly: resultAway.data[indexAway].stats.seasonPPG_away,\n          leaguePosition_overallAway:\n            resultAway.data[indexAway].stats.leaguePosition_overall,\n          leaguePosition_AwayOnly:\n            resultAway.data[indexAway].stats.leaguePosition_away,\n          BTTSPercentage_overallAway:\n            resultAway.data[indexAway].stats.seasonBTTSPercentage_overall,\n          BTTSAndWinPercentage_Away:\n            resultAway.data[indexAway].stats.BTTS_and_win_percentage_overall,\n          BTTSAndLosePercentage_Away:\n            resultAway.data[indexAway].stats.BTTS_and_lose_percentage_overall,\n          BTTSBothHalvesAway:\n            resultAway.data[indexAway].stats\n              .BTTS_both_halves_percentage_overall,\n          GoalDifferenceHT_overall_Away:\n            resultAway.data[indexAway].stats.GoalDifferenceHT_overall,\n          GD_2hg_overall_Away: resultAway.data[indexAway].stats.gd_2hg_overall,\n          leadingAtHTPercentage_overallAway:\n            resultAway.data[indexAway].stats.leadingAtHTPercentage_overall,\n          seasonOver15Percentage_overallAway:\n            resultAway.data[indexAway].stats.seasonOver15Percentage_overall,\n          seasonOver25Percentage_overallAway:\n            resultAway.data[indexAway].stats.seasonOver25Percentage_overall,\n          seasonOver35Percentage_overallAway:\n            resultAway.data[indexAway].stats.seasonOver35Percentage_overall,\n          seasonOver45Percentage_overallAway:\n            resultAway.data[indexAway].stats.seasonOver45Percentage_overall,\n          scoredBothHalvesPercentage_overallAway:\n            resultAway.data[indexAway].stats.scoredBothHalvesPercentage_overall,\n          shots_on_target_per_goals_scored_overallAway:\n            resultAway.data[indexAway].stats.additional_info\n              .shots_on_target_per_goals_scored_overall,\n\n          cornersTotalAVG_overallAway:\n            resultAway.data[indexAway].stats.cornersTotalAVG_overall,\n          cardsAVG_overallAway:\n            resultAway.data[indexAway].stats.cardsAVG_overall,\n          foulsAVG_overallAway:\n            resultAway.data[indexAway].stats.foulsAVG_overall,\n          penalties_won_per_match_overallAway:\n            resultAway.data[indexAway].stats.additional_info\n              .penalties_won_per_match_overall,\n          penalty_in_a_match_percentage_overallAway:\n            resultAway.data[indexAway].stats.additional_info\n              .penalty_in_a_match_percentage_overall,\n        }));\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  const storedDataHome = useSelector((state) => state.data.dataHome);\n  const jsonDataHome = JSON.parse(storedDataHome);\n  const propertyNamesHome = Object.entries(jsonDataHome);\n\n  const storedDataHomeDef = useSelector((state) => state.data.dataHomeDef);\n  const jsonDataHomeDef = JSON.parse(storedDataHomeDef);\n  const propertyNamesHomeDef = Object.entries(jsonDataHomeDef);\n\n  const storedDataallTeamResultsHome = useSelector(\n    (state) => state.data.allTeamResultsHome\n  );\n  const jsonDataallTeamResultsHome = JSON.parse(storedDataallTeamResultsHome);\n  const propertyNamesallTeamResultsHome = Object.values(\n    jsonDataallTeamResultsHome\n  );\n\n  const homeDetails = useSelector((state) => state.data.homeDetails);\n  const jsonHomeDetails = JSON.parse(homeDetails);\n\n  const storedDataAway = useSelector((state) => state.data.dataAway);\n  const jsonDataAway = JSON.parse(storedDataAway);\n  const propertyNamesAway = Object.entries(jsonDataAway);\n\n  const storedDataAwayDef = useSelector((state) => state.data.dataAwayDef);\n  const jsonDataAwayDef = JSON.parse(storedDataAwayDef);\n  const propertyNamesAwayDef = Object.entries(jsonDataAwayDef);\n\n  const storedDataallTeamResultsAway = useSelector(\n    (state) => state.data.allTeamResultsAway\n  );\n  const jsonDataallTeamResultsAway = JSON.parse(storedDataallTeamResultsAway);\n  const propertyNamesallTeamResultsAway = Object.values(\n    jsonDataallTeamResultsAway\n  );\n\n  const awayDetails = useSelector((state) => state.data.awayDetails);\n  const jsonAwayDetails = JSON.parse(awayDetails);\n\n  const storedFixtureDetails = useSelector(\n    (state) => state.data.fixtureDetails\n  );\n  const storedFixtureDetailsJson = JSON.parse(storedFixtureDetails);\n\n  const options = {\n    plugins: {\n      title: {\n        display: true,\n        text: \"Team comparison\",\n      },\n    },\n    aspectRatio: 0.5,\n    maintainAspectRatio: true,\n    responsive: true,\n    scales: {\n      x: {\n        stacked: true,\n      },\n      y: {\n        stacked: true,\n        display: false,\n      },\n    },\n  };\n  const labels = [\n    storedFixtureDetailsJson.homeTeamName,\n    storedFixtureDetailsJson.awayTeamName,\n  ];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        data: [\n          jsonHomeDetails[\"Attacking Strength\"],\n          jsonAwayDetails[\"Attacking Strength\"],\n        ],\n        label: \"Attacking Strength\",\n        backgroundColor: \"#030061\",\n      },\n      {\n        data: [\n          jsonHomeDetails[\"Defensive Strength\"],\n          jsonAwayDetails[\"Defensive Strength\"],\n        ],\n        label: \"Defensive Strength\",\n        backgroundColor: \"#CC3314\",\n      },\n    ],\n  };\n\n  return (\n    <div className=\"TeamStatsContainer\">\n      <div className=\"FixtureHeadingContiner\">\n        <CreateBadge\n          image={storedFixtureDetailsJson.homeTeamBadge}\n          ClassName=\"HomeTeamBadge\"\n          alt=\"Home team badge\"\n        ></CreateBadge>\n        {`${storedFixtureDetailsJson.homeTeamName} v ${storedFixtureDetailsJson.awayTeamName}`}\n        <CreateBadge\n          image={storedFixtureDetailsJson.awayTeamBadge}\n          ClassName=\"AwayTeamBadge\"\n          alt=\"Away team badge\"\n        ></CreateBadge>\n      </div>\n      <h3>\n        {storedFixtureDetailsJson.stadium} KO: {storedFixtureDetailsJson.time} |\n        Average Attendance: {dataState.averageAttendance}\n      </h3>\n      <h3>\n        XGTipping Prediction: {storedFixtureDetailsJson.homeGoals} -{\" \"}\n        {storedFixtureDetailsJson.awayGoals}\n      </h3>\n      <div className=\"TeamStats\">\n        <ul className=\"HomeTeamStats\">\n          <iframe\n            src={`https://footystats.org/api/club?id=${storedFixtureDetailsJson.homeId}`}\n            height=\"100%\"\n            width=\"100%\"\n            style={{\n              height: \"420px\",\n              width: \"100%\",\n              border: \"0.1em solid #030061\",\n            }}\n          ></iframe>\n          <h3>{storedFixtureDetailsJson.homeTeamName}</h3>\n          {propertyNamesHome.map(([key, value], index) => (\n            <li key={index}>\n              <strong>{key}:</strong>{\" \"}\n              {typeof value === \"object\" ? JSON.stringify(value) : value}\n            </li>\n          ))}\n          <ul className=\"HomeTeamStats\">\n            {propertyNamesHomeDef.map(([key, value], index) => (\n              <li key={index}>\n                <strong>{key}:</strong>{\" \"}\n                {typeof value === \"object\" ? JSON.stringify(value) : value}\n              </li>\n            ))}\n          </ul>\n          <li>Scored overall: {dataState.scoredOverallHome}</li>\n          <li>Conceeded overall: {dataState.conceededOverallHome}</li>\n          <li>\n            Average scored home only:{\" \"}\n            {(\n              dataState.scoredOverallHomeOnly / dataState.playedHomeOnly\n            ).toFixed(2)}\n          </li>\n          <li>\n            Average conceeded home only:{\" \"}\n            {(\n              dataState.conceededOverallHomeOnly / dataState.playedHomeOnly\n            ).toFixed(2)}\n          </li>\n          <li>PPG overall: {dataState.PPGOverallHome}</li>\n          <li>PPG home only: {dataState.PPGOverallHomeOnly}</li>\n          <li>League position: {dataState.leaguePosition_overallHome}</li>\n          <li>\n            League position home only: {dataState.leaguePosition_HomeOnly}\n          </li>\n          <li>BTTS {dataState.BTTSPercentage_overallHome}%</li>\n          <li>BTTS and win: {dataState.BTTSAndWinPercentage_Home}%</li>\n          <li>BTTS and lose: {dataState.BTTSAndLosePercentage_Home}%</li>\n          <li>BTTS both halves: {dataState.BTTSBothHalvesHome}%</li>\n          <li>\n            Goal diff 1st half only: {dataState.GoalDifferenceHT_overall_Home}\n          </li>\n          <li>Goal diff 2nd half only: {dataState.GD_2hg_overall_Home}</li>\n          <li>\n            Leading at half time: {dataState.leadingAtHTPercentage_overallHome}%\n          </li>\n          <li>\n            Over 1.5 goals in games:{\" \"}\n            {dataState.seasonOver15Percentage_overallHome}%\n          </li>\n          <li>\n            Over 2.5 goals in games:{\" \"}\n            {dataState.seasonOver25Percentage_overallHome}%\n          </li>\n          <li>\n            Over 3.5 goals in games:{\" \"}\n            {dataState.seasonOver35Percentage_overallHome}%\n          </li>\n          <li>\n            Over 4.5 goals in games:{\" \"}\n            {dataState.seasonOver45Percentage_overallHome}%\n          </li>\n          <li>\n            Scored both halves:{\" \"}\n            {dataState.scoredBothHalvesPercentage_overallHome}%\n          </li>\n          <li>\n            SOTs per goal:{\" \"}\n            {dataState.shots_on_target_per_goals_scored_overallHome}\n          </li>\n          <li>Corners in game avg: {dataState.cornersTotalAVG_overallHome}</li>\n          <li>Cards avg: {dataState.cardsAVG_overallHome}</li>\n          <li>Fouls against avg: {dataState.foulsAVG_overallHome}</li>\n          <li>\n            Penalties won avg: {dataState.penalties_won_per_match_overallHome}\n          </li>\n          <li>\n            Penalties in match:{\" \"}\n            {dataState.penalty_in_a_match_percentage_overallHome}%\n          </li>\n        </ul>\n        <ul className=\"AwayTeamStats\">\n          <iframe\n            src={`https://footystats.org/api/club?id=${storedFixtureDetailsJson.awayId}`}\n            height=\"100%\"\n            width=\"100%\"\n            style={{\n              height: \"420px\",\n              width: \"100%\",\n              color: \"#030061\",\n              border: \"0.1em solid #030061\",\n            }}\n          ></iframe>\n          <h3>{storedFixtureDetailsJson.awayTeamName}</h3>\n          {propertyNamesAway.map(([key, value], index) => (\n            <li key={index}>\n              <strong>{key}:</strong>{\" \"}\n              {typeof value === \"object\" ? JSON.stringify(value) : value}\n            </li>\n          ))}\n          <ul className=\"AwayTeamStats\">\n            {propertyNamesAwayDef.map(([key, value], index) => (\n              <li key={index}>\n                <strong>{key}:</strong>{\" \"}\n                {typeof value === \"object\" ? JSON.stringify(value) : value}\n              </li>\n            ))}\n          </ul>\n          <li>Scored overall: {dataState.scoredOverallAway}</li>\n          <li>Conceeded overall: {dataState.conceededOverallAway}</li>\n          <li>\n            Average scored away only:{\" \"}\n            {(\n              dataState.scoredOverallAwayOnly / dataState.playedAwayOnly\n            ).toFixed(2)}\n          </li>\n          <li>\n            Average conceeded away only:{\" \"}\n            {(\n              dataState.conceededOverallAwayOnly / dataState.playedAwayOnly\n            ).toFixed(2)}\n          </li>\n          <li>PPG overall: {dataState.PPGOverallAway}</li>\n          <li>PPG away only: {dataState.PPGOverallAwayOnly}</li>\n          <li>League position: {dataState.leaguePosition_overallAway}</li>\n          <li>\n            League position away only: {dataState.leaguePosition_AwayOnly}\n          </li>\n          <li>BTTS: {dataState.BTTSPercentage_overallAway}%</li>\n          <li>BTTS and win: {dataState.BTTSAndWinPercentage_Away}%</li>\n          <li>BTTS and lose: {dataState.BTTSAndLosePercentage_Away}%</li>\n          <li>BTTS both halves: {dataState.BTTSBothHalvesAway}%</li>\n          <li>\n            Goal diff 1st half only: {dataState.GoalDifferenceHT_overall_Away}\n          </li>\n          <li>Goal diff 2nd half only: {dataState.GD_2hg_overall_Away}</li>\n          <li>\n            Leading at half time: {dataState.leadingAtHTPercentage_overallAway}%\n          </li>\n          <li>\n            Over 1.5 goals in games:{\" \"}\n            {dataState.seasonOver15Percentage_overallAway}%\n          </li>\n          <li>\n            Over 2.5 goals in games:{\" \"}\n            {dataState.seasonOver25Percentage_overallAway}%\n          </li>\n          <li>\n            Over 3.5 goals in games:{\" \"}\n            {dataState.seasonOver35Percentage_overallAway}%\n          </li>\n          <li>\n            Over 4.5 goals in games:{\" \"}\n            {dataState.seasonOver45Percentage_overallAway}%\n          </li>\n          <li>\n            Scored both halves:{\" \"}\n            {dataState.scoredBothHalvesPercentage_overallAway}%\n          </li>\n          <li>\n            SOTs per goal:{\" \"}\n            {dataState.shots_on_target_per_goals_scored_overallAway}\n          </li>\n          <li>Corners in game avg: {dataState.cornersTotalAVG_overallAway}</li>\n          <li>Cards avg: {dataState.cardsAVG_overallAway}</li>\n          <li>Fouls against avg: {dataState.foulsAVG_overallAway}</li>\n          <li>\n            Penalties won avg: {dataState.penalties_won_per_match_overallAway}\n          </li>\n          <li>\n            Penalties in match:{\" \"}\n            {dataState.penalty_in_a_match_percentage_overallAway}%\n          </li>\n        </ul>\n        <div className=\"ChartContainer\">\n          <span className=\"Spacer\"></span>\n          <Bar options={options} data={data} className=\"ComparisonBar\" />\n          <span className=\"Spacer\"></span>\n        </div>\n        <ul className=\"HomeTeamResults\">\n          {propertyNamesallTeamResultsHome.map((match, index) => (\n            <>\n              <div className=\"MatchDate\">{match.date}</div>\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{match.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {match.homeGoals} : {match.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{match.awayTeam}</div>\n              </div>\n            </>\n          ))}\n        </ul>\n        <ul className=\"AwayTeamResults\">\n          {propertyNamesallTeamResultsAway.map((match, index) => (\n            <>\n              <div className=\"MatchDate\">{match.date}</div>\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{match.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {match.homeGoals} : {match.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{match.awayTeam}</div>\n              </div>\n            </>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default TeamPage;\n","import React, { Fragment } from \"react\";\n\nexport const SuccessPage = () => {\n  return (\n    <Fragment>\n      <h1>Payment Successful! Thank you for subscribing.</h1>\n      <button\n      className=\"PaymentReturn\"\n        onClick={() => {\n          window.location.href = \"https://www.xgtipping.com/\";\n        }}\n      >\n        Return to XGTipping\n      </button>\n    </Fragment>\n  );\n};\n","import React from \"react\";\n\nexport const CancelPage = () => {\n  return (\n    <div>\n      <h1>Payment Cancelled</h1>\n      <button\n        className=\"PaymentReturn\"\n        onClick={() => {\n          window.location.href = \"https://www.xgtipping.com/\";\n        }}\n      >\n        Return to XGTipping\n      </button>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { getAuth, sendPasswordResetEmail } from \"firebase/auth\";\n\nconst PasswordReset = () => {\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const auth = getAuth();\n\n  const handleReset = async (e) => {\n    e.preventDefault();\n    setMessage(\"\");\n    setError(\"\");\n    try {\n      await sendPasswordResetEmail(auth, email);\n      setMessage(\"Password reset email sent! Check your inbox.\");\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Reset Password</h2>\n      {message && <p style={{ color: \"green\" }}>{message}</p>}\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      <form onSubmit={handleReset}>\n        <input\n          type=\"email\"\n          className=\"ResetPasswordField\"\n          placeholder=\"Enter your email address\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        />\n        <button type=\"submit\">Send Reset Email</button>\n      </form>\n    </div>\n  );\n};\n\nexport default PasswordReset;\n","import { useState, useEffect } from \"react\";\nimport { getAuth } from \"firebase/auth\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { db } from \"../firebase\"; // Ensure you have Firebase initialized\n\nexport default function CancelSubscription() {\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [isPaidUser, setIsPaidUser] = useState(false);\n\n  useEffect(() => {\n    async function fetchSubscriptionStatus() {\n      const user = getAuth().currentUser;\n      if (!user) return;\n\n      try {\n        const userRef = doc(db, \"users\", user.uid);\n        const userSnap = await getDoc(userRef);\n\n        if (userSnap.exists()) {\n          const data = userSnap.data();\n          setIsPaidUser(data.isPaidUser || false);\n        } else {\n          console.error(\"User document not found in Firestore\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching subscription status:\", error);\n      }\n    }\n\n    fetchSubscriptionStatus();\n  }, []);\n\n  const handleCancelSubscription = async () => {\n    setLoading(true);\n    setMessage(\"\");\n\n    const user = getAuth().currentUser;\n\n    if (!user) {\n      setMessage(\"User not authenticated.\");\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const response = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}cancel-subscription`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ uid: user.uid }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setMessage(\"✅ Subscription cancellation scheduled.\");\n        setIsPaidUser(false);\n      } else {\n        setMessage(`⚠️ ${data.error || \"Failed to cancel subscription.\"}`);\n      }\n    } catch (error) {\n      setMessage(\"⚠️ Error cancelling subscription.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"p-4 bg-white shadow-md rounded-lg\">\n      <h2 className=\"text-xl font-semibold mb-2\">Manage Subscription</h2>\n      {isPaidUser ? (\n        <>\n          <p className=\"mb-2\">Your subscription is active. Cancelations will come into effect after the end of your current billing cycle and are irreversible</p>\n          <button\n            onClick={handleCancelSubscription}\n            className=\"bg-red-500 text-white px-4 py-2 rounded\"\n            disabled={loading}\n          >\n            {loading ? \"Cancelling...\" : \"Cancel Subscription\"}\n          </button>\n        </>\n      ) : (\n        <p className=\"text-gray-500\">You do not have an active subscription.</p>\n      )}\n      {message && <p className=\"mt-2 text-sm\">{message}</p>}\n    </div>\n  );\n}\n","export async function getHighestScoringLeagues() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}over25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    console.log(leagues)\n\n    for (let index = 0; index < leagues.data.top_leagues.data.length; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        over25Percentage:\n          leagues.data.top_leagues.data[index].seasonOver25Percentage_overall,\n        division: leagues.data.top_leagues.data[index].division,\n        leagueId: leagues.data.top_leagues.data[index].id,\n        domestic_scale: leagues.data.top_leagues.data[index].domestic_scale\n      };\n      arr.push(league);\n    }\n  });\n  return arr;\n}\n\nexport async function getLowestScoringLeagues() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}under25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    for (let index = 0; index < leagues.data.top_leagues.data.length; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        under25Percentage:\n          leagues.data.top_leagues.data[index].seasonUnder25Percentage_overall,\n          division: leagues.data.top_leagues.data[index].division,\n        leagueId: leagues.data.top_leagues.data[index].id,\n      };\n      arr.push(league);\n    }\n  });\n  return arr;\n}\n\nexport async function getHighestScoringTeams() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}over25`);\n  let arr = [];\n  await teamsList.json().then(async (teams) => {\n    for (let index = 0; index < teams.data.top_teams.data.length; index++) {\n      const team = {\n        team: teams.data.top_teams.data[index].full_name,\n        next_match_team: teams.data.top_teams.data[index].next_match_team,\n        teamCountry: teams.data.top_teams.data[index].country,\n        averageGoals: teams.data.top_teams.data[index].seasonAVG_overall,\n        over25Percentage:\n          teams.data.top_teams.data[index].seasonOver25Percentage_overall,\n        division: teams.data.top_teams.data[index].division,\n        leagueId: teams.data.top_teams.data[index].id,\n      };\n      arr.push(team);\n    }\n  });\n  return arr;\n}\n\nasync function convertTimestamp(timestamp) {\n  let newDate = new Date(timestamp * 1000);\n  \n  // Extract date components\n  let [day, month, year] = newDate.toLocaleDateString(\"en-GB\").split(\"/\");\n\n  // Extract time (24-hour format)\n  let time = newDate.toLocaleTimeString(\"en-GB\", { hour: \"2-digit\", minute: \"2-digit\" });\n\n  // Format: YYYY-DD-MM HH:MM\n  return `${year}-${day}-${month} ${time}`;\n}\n\n\nexport async function getHighestScoringFixtures() {\n  let fixturesList = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}over25`\n  );\n\n  let arr = [];\n  \n  await fixturesList.json().then(async (fixture) => {\n    // Extract fixture data\n    let fixtures = fixture.data.top_fixtures.data;\n    console.log(fixtures)\n\n    // Sort fixtures by `date_unix` (soonest first)\n    fixtures.sort((a, b) => a.date_unix - b.date_unix);\n\n    // Process sorted fixtures\n    for (let index = 0; index < fixtures.length; index++) {\n      const game = {\n        date: fixtures[index].date_unix\n          ? await convertTimestamp(fixtures[index].date_unix)\n          : \"N/A\",\n        country: fixtures[index].country,\n        odds: fixtures[index].odds_ft_over25,\n        avgGoals: fixtures[index].avg_potential,\n        match: fixtures[index].name,\n        progress: fixtures[index].progress\n      };\n      arr.push(game);\n    }\n  });\n\n  return arr;\n}\n\nexport async function getBTTSFixtures() {\n  let fixturesList = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}btts`\n  );\n\n  let arr = [];\n  console.log(\"called\")\n  \n  await fixturesList.json().then(async (fixture) => {\n    // Extract fixture data\n    let fixtures = fixture.data.top_fixtures.data;\n    console.log(fixtures)\n    console.log(fixture.data)\n    // Sort fixtures by `date_unix` (soonest first)\n    fixtures.sort((a, b) => a.date_unix - b.date_unix);\n\n    // Process sorted fixtures\n    for (let index = 0; index < fixtures.length; index++) {\n      const game = {\n        date: fixtures[index].date_unix\n          ? await convertTimestamp(fixtures[index].date_unix)\n          : \"N/A\",\n        country: fixtures[index].country,\n        odds: fixtures[index].odds_btts_yes,\n        avgGoals: fixtures[index].avg_potential,\n        match: fixtures[index].name,\n        progress: fixtures[index].progress\n      };\n      arr.push(game);\n    }\n  });\n\n  return arr;\n}\n\nexport async function getBTTSTeams() {\n  let fixturesList = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}btts`\n  );\n\n  let arr = [];\n  console.log(\"called\")\n  \n  await fixturesList.json().then(async (fixture) => {\n    // Extract fixture data\n    let teams = fixture.data.top_teams.data;\n    console.log(teams)\n    // Sort teams by `date_unix` (soonest first)\n    teams.sort((a, b) => b.seasonBTTSPercentage_overall - a.seasonBTTSPercentage_overall);\n\n    // Process sorted teams\n    for (let index = 0; index < teams.length; index++) {\n      const game = {\n        date: teams[index].next_match_date\n          ? await convertTimestamp(teams[index].next_match_date)\n          : \"N/A\",\n        country: teams[index].country,\n        odds: teams[index].odds_btts_yes,\n        played: teams[index].seasonMatchesPlayed_overall,\n        bttsPercentage: teams[index].seasonBTTSPercentage_overall,\n        name: teams[index].name,\n        opponent: teams[index].next_match_team,\n        progress: teams[index].progress\n      };\n      arr.push(game);\n    }\n  });\n\n  return arr;\n}\n\n","import React, { Fragment } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useEffect, useState } from \"react\";\nimport { getHighestScoringLeagues } from \"../logic/getStatsInsights\";\nimport Logo from \"../components/Logo\"\n\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: \"#030052\",\n      color: theme.palette.common.white,\n      padding: 2,\n      textAlign: \"center\",\n      fontSize: \"1em\",\n      fontFamily: \"inherit\",\n    },\n    body: {\n      fontSize: \"1em\",\n      fontFamily: \"inherit\",\n      padding: 5,\n    },\n  }))(TableCell);\n  \n  const StyledTableRow = withStyles((theme) => ({\n    root: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.action.hover,\n        textAlign: \"center\",\n      },\n    },\n  }))(TableRow);\n\n\nexport default function Over25() {\n  const [leagues, setLeagues] = useState([]);\n\n  useEffect(() => {\n    async function fetchLeagues() {\n      const data = await getHighestScoringLeagues();\n      setLeagues(data);\n    }\n    fetchLeagues();\n  }, []);\n\n  const allowedCountries = [\n    \"England\", \"Scotland\", \"Italy\", \"Spain\", \"Germany\", \"France\", \"USA\", \"Denmark\",\n    \"Greece\", \"Turkey\", \"Switzerland\", \"Austria\", \"Norway\", \"Mexico\", \"Poland\",\n    \"Brazil\", \"Argentina\", \"Sweden\", \"Netherlands\", \"Portugal\", \"Belgium\"\n  ];\n\n  // Filter leagues based on allowed countries\n  const filteredLeagues = leagues.filter(league => allowedCountries.includes(league.leagueCountry) && league.division > 0 && league.domestic_scale < 6);\n  console.log(filteredLeagues)\n\n  const headers = [\"League\", \"Country\", \"Avg Goals\", \"Over 2.5%\"];\n\n  return (\n    <Fragment>\n    <Logo/>\n      <h1>Highest Scoring Leagues</h1>\n    <TableContainer component={Paper} className=\"O25Table\">\n      <Table aria-label=\"highest scoring leagues\">\n        <TableHead>\n          <TableRow>\n            {headers.map((header, index) => (\n              <StyledTableCell key={index} align=\"center\">\n                {header}\n              </StyledTableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {filteredLeagues.map((league, index) => (\n            <StyledTableRow key={index}>\n              <StyledTableCell align=\"center\">{league.league}</StyledTableCell>\n              <StyledTableCell align=\"center\">\n                {league.leagueCountry}\n              </StyledTableCell>\n              <StyledTableCell align=\"center\">\n                {league.averageGoals}\n              </StyledTableCell>\n              <StyledTableCell align=\"center\">\n                {league.over25Percentage}%\n              </StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useEffect, useState } from \"react\";\nimport { getLowestScoringLeagues } from \"../logic/getStatsInsights\";\nimport Logo from \"../components/Logo\"\n\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: \"#030052\",\n      color: theme.palette.common.white,\n      padding: 2,\n      textAlign: \"center\",\n      fontSize: \"1em\",\n      fontFamily: \"inherit\",\n    },\n    body: {\n      fontSize: \"1em\",\n      fontFamily: \"inherit\",\n      padding: 5,\n    },\n  }))(TableCell);\n  \n  const StyledTableRow = withStyles((theme) => ({\n    root: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.action.hover,\n        textAlign: \"center\",\n      },\n    },\n  }))(TableRow);\n\n\nexport default function Under25() {\n  const [leagues, setLeagues] = useState([]);\n\n  useEffect(() => {\n    async function fetchLeagues() {\n      const data = await getLowestScoringLeagues();\n      setLeagues(data);\n    }\n    fetchLeagues();\n  }, []);\n\n  const allowedCountries = [\n    \"England\", \"Scotland\", \"Italy\", \"Spain\", \"Germany\", \"France\", \"USA\", \"Denmark\",\n    \"Greece\", \"Turkey\", \"Switzerland\", \"Austria\", \"Norway\", \"Mexico\", \"Poland\",\n    \"Brazil\", \"Argentina\", \"Sweden\", \"Netherlands\", \"Portugal\", \"Belgium\"\n  ];\n\n  // Filter leagues based on allowed countries\n  const filteredLeagues = leagues.filter(league => allowedCountries.includes(league.leagueCountry) && league.division > 0 && league.division < 5);\nconsole.log(filteredLeagues)\n\n  const headers = [\"League\", \"Country\", \"Avg Goals\", \"Under 2.5%\"];\n\n  return (\n    <Fragment>\n    <Logo/>\n      <h1>Lowest Scoring Leagues</h1>\n    <TableContainer component={Paper} className=\"O25Table\">\n      <Table aria-label=\"Lowest scoring leagues\">\n        <TableHead>\n          <TableRow>\n            {headers.map((header, index) => (\n              <StyledTableCell key={index} align=\"center\">\n                {header}\n              </StyledTableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {filteredLeagues.map((league, index) => (\n            <StyledTableRow key={index}>\n              <StyledTableCell align=\"center\">{league.league}</StyledTableCell>\n              <StyledTableCell align=\"center\">\n                {league.leagueCountry}\n              </StyledTableCell>\n              <StyledTableCell align=\"center\">\n                {league.averageGoals}\n              </StyledTableCell>\n              <StyledTableCell align=\"center\">\n                {league.under25Percentage}%\n              </StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useEffect, useState } from \"react\";\nimport { getHighestScoringTeams } from \"../logic/getStatsInsights\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#030052\",\n    color: theme.palette.common.white,\n    padding: 2,\n    textAlign: \"center\",\n    fontSize: \"1em\",\n    fontFamily: \"inherit\",\n  },\n  body: {\n    fontSize: \"1em\",\n    fontFamily: \"inherit\",\n    padding: 5,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\nexport default function HighestScoringTeams() {\n  const [teams, setTeams] = useState([]);\n\n  useEffect(() => {\n    async function fetchTeams() {\n      const data = await getHighestScoringTeams();\n      setTeams(data);\n    }\n    fetchTeams();\n  }, []);\n\n  const allowedCountries = [\n    \"England\",\n    \"Scotland\",\n    \"Italy\",\n    \"Spain\",\n    \"Germany\",\n    \"France\",\n    \"USA\",\n    \"Denmark\",\n    \"Greece\",\n    \"Turkey\",\n    \"Switzerland\",\n    \"Austria\",\n    \"Norway\",\n    \"Mexico\",\n    \"Poland\",\n    \"Brazil\",\n    \"Argentina\",\n    \"Sweden\",\n    \"Netherlands\",\n    \"Portugal\",\n    \"Belgium\",\n  ];\n\n  // Filter teams based on allowed countries\n  const filteredTeams = teams.filter((team) =>\n    allowedCountries.includes(team.teamCountry)\n  );\n\n  const headers = [\"Country\", \"Team\", \"Next Match\", \"Avg Goals\", \"Over 2.5%\"];\n\n  return (\n    <Fragment>\n      <h1>Highest Scoring Teams</h1>\n      <TableContainer component={Paper} className=\"O25Table\">\n        <Table aria-label=\"highest scoring teams\">\n          <TableHead>\n            <TableRow>\n              {headers.map((header, index) => (\n                <StyledTableCell key={index} align=\"center\">\n                  {header}\n                </StyledTableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {filteredTeams.map((team, index) => (\n              <StyledTableRow key={index}>\n                <StyledTableCell align=\"center\">\n                  {team.teamCountry}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">{team.team}</StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.next_match_team}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.averageGoals}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.over25Percentage}%\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useEffect, useState } from \"react\";\nimport { getHighestScoringFixtures } from \"../logic/getStatsInsights\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#030052\",\n    color: theme.palette.common.white,\n    padding: 2,\n    textAlign: \"center\",\n    fontSize: \"1em\",\n    fontFamily: \"inherit\",\n    border: \"1px, solid, black\"\n  },\n  body: {\n    fontSize: \"1em\",\n    fontFamily: \"inherit\",\n    padding: 5,\n    border: \"1px, solid, black\"\n\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\nexport default function HighestScoringFixtures() {\n  const [games, setGames] = useState([]);\n\n  useEffect(() => {\n    async function fetchGames() {\n      const data = await getHighestScoringFixtures();\n      setGames(data);\n    }\n    fetchGames();\n  }, []);\n\n  const allowedCountries = [\n    \"England\",\n    \"Scotland\",\n    \"Italy\",\n    \"Spain\",\n    \"Germany\",\n    \"France\",\n    \"USA\",\n    \"Denmark\",\n    \"Greece\",\n    \"Turkey\",\n    \"Switzerland\",\n    \"Austria\",\n    \"Norway\",\n    \"Mexico\",\n    \"Poland\",\n    \"Brazil\",\n    \"Argentina\",\n    \"Sweden\",\n    \"Netherlands\",\n    \"Portugal\",\n    \"Belgium\",\n  ];\n\n\n  // Filter games based on allowed countries\n  const filteredGames = games.filter((game) =>\n    allowedCountries.includes(game.country) && game.progress > 50 && game.avgGoals > 2.5\n  ).slice(0,30);\n  console.log(filteredGames)\n\n  const headers = [\"Fixture\", \"Date\", \"Country\", \"Odds Over 2.5\", \"Avg Combined Goals\"];\n\n  return (\n    <Fragment>\n      <h1>Fixtures With Highest Goal Potential</h1>\n      <TableContainer component={Paper} className=\"O25Table\">\n        <Table aria-label=\"highest scoring games\">\n          <TableHead>\n            <TableRow>\n              {headers.map((header, index) => (\n                <StyledTableCell key={index} align=\"center\">\n                  {header}\n                </StyledTableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {filteredGames.map((team, index) => (\n              <StyledTableRow key={index}>\n                <StyledTableCell align=\"center\">\n                  {team.match}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.date}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.country}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.odds}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.avgGoals}\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useEffect, useState } from \"react\";\nimport { getBTTSFixtures } from \"../logic/getStatsInsights\";\nimport Logo from \"../components/Logo\"\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#030052\",\n    color: theme.palette.common.white,\n    padding: 2,\n    textAlign: \"center\",\n    fontSize: \"1em\",\n    fontFamily: \"inherit\",\n    border: \"1px, solid, black\"\n  },\n  body: {\n    fontSize: \"1em\",\n    fontFamily: \"inherit\",\n    padding: 5,\n    border: \"1px, solid, black\"\n\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\nexport default function BTTSFixtures() {\n  const [games, setGames] = useState([]);\n\n  useEffect(() => {\n    async function fetchGames() {\n      const data = await getBTTSFixtures();\n      setGames(data);\n    }\n    fetchGames();\n  }, []);\n\n  const allowedCountries = [\n    \"England\",\n    \"Scotland\",\n    \"Italy\",\n    \"Spain\",\n    \"Germany\",\n    \"France\",\n    \"USA\",\n    \"Denmark\",\n    \"Greece\",\n    \"Turkey\",\n    \"Switzerland\",\n    \"Austria\",\n    \"Norway\",\n    \"Mexico\",\n    \"Poland\",\n    \"Brazil\",\n    \"Argentina\",\n    \"Sweden\",\n    \"Netherlands\",\n    \"Portugal\",\n    \"Belgium\",\n  ];\n\n  console.log(games)\n\n  // Filter games based on allowed countries\n  const filteredGames = games.filter((game) =>\n    allowedCountries.includes(game.country) && game.progress > 30 && game.avgGoals > 3\n  ).slice(0,30);\n\n  const headers = [\"Fixture\", \"Date\", \"Country\", \"Odds BTTS Yes\", \"Avg Combined Goals\"];\n\n  return (\n    <Fragment>\n    <Logo/>\n      <h1>Fixtures With Highest BTTS Potential</h1>\n      <TableContainer component={Paper} className=\"O25Table\">\n        <Table aria-label=\"highest scoring games\">\n          <TableHead>\n            <TableRow>\n              {headers.map((header, index) => (\n                <StyledTableCell key={index} align=\"center\">\n                  {header}\n                </StyledTableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {filteredGames.map((team, index) => (\n              <StyledTableRow key={index}>\n                <StyledTableCell align=\"center\">\n                  {team.match}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.date}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.country}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.odds}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.avgGoals}\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useEffect, useState } from \"react\";\nimport { getBTTSTeams } from \"../logic/getStatsInsights\";\nimport Logo from \"../components/Logo\"\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#030052\",\n    color: theme.palette.common.white,\n    padding: 2,\n    textAlign: \"center\",\n    fontSize: \"1em\",\n    fontFamily: \"inherit\",\n    border: \"1px, solid, black\"\n  },\n  body: {\n    fontSize: \"1em\",\n    fontFamily: \"inherit\",\n    padding: 4,\n    border: \"1px, solid, black\"\n\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\nexport default function BTTSTeams() {\n  const [games, setGames] = useState([]);\n\n  useEffect(() => {\n    async function fetchGames() {\n      const data = await getBTTSTeams();\n      setGames(data);\n    }\n    fetchGames();\n  }, []);\n\n  const allowedCountries = [\n    \"England\",\n    \"Scotland\",\n    \"Italy\",\n    \"Spain\",\n    \"Germany\",\n    \"France\",\n    \"USA\",\n    \"Denmark\",\n    \"Greece\",\n    \"Turkey\",\n    \"Switzerland\",\n    \"Austria\",\n    \"Norway\",\n    \"Mexico\",\n    \"Poland\",\n    \"Brazil\",\n    \"Argentina\",\n    \"Sweden\",\n    \"Netherlands\",\n    \"Portugal\",\n    \"Belgium\",\n  ];\n\n  console.log(games)\n\n  // Filter games based on allowed countries\n  const filteredGames = games.filter((game) =>\n    allowedCountries.includes(game.country) && game.played > 10\n  ).slice(0,30);\n\n  const headers = [\"Name\", \"Country\", \"BTTS %\", \"Played\", \"Next Opponent\",  \"Date\", \"Odds BTTS\", ];\n\n  return (\n    <Fragment>\n    <Logo/>\n      <h1>Teams With Best BTTS Records</h1>\n      <TableContainer component={Paper} className=\"O25Table\">\n        <Table aria-label=\"highest scoring games\">\n          <TableHead>\n            <TableRow>\n              {headers.map((header, index) => (\n                <StyledTableCell key={index} align=\"center\">\n                  {header}\n                </StyledTableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {filteredGames.map((team, index) => (\n              <StyledTableRow key={index}>\n                <StyledTableCell align=\"center\">\n                  {team.name}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.country}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.bttsPercentage}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.played}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.opponent}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.date}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.odds}\n                </StyledTableCell>\n\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router, Route, Routes, HashRouter } from \"react-router-dom\";\nimport TeamPage from \"./components/Team\";\nimport {SuccessPage} from \"./components/Success\"\nimport {CancelPage} from \"./components/Cancel\"\nimport PasswordReset from \"./components/PasswordReset\";\nimport { Provider } from \"react-redux\";\nimport store from \"./logic/store\"; // Import your Redux store\nimport CancelSubscription from \"./components/CancelSubscription\"\nimport Over25 from \"./components/Over25\"\nimport Under25 from \"./components/Under25\"\nimport HighestScoringTeams from \"./components/HighestScoringTeams\"\nimport HighestScoringFixtures from \"./components/HighestScoringFixtures\";\nimport BTTSFixtures from \"./components/BTTSFixtures\";\nimport BTTSTeams from \"./components/BTTSTeams\";\n\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n    <HashRouter>\n        <Routes>\n          <Route path=\"/fixture\" element={<TeamPage />} />\n          <Route path=\"/success\" element={<SuccessPage />} />\n          <Route path=\"/cancel\" element={<CancelPage />} />\n          <Route path=\"/reset\" element={<PasswordReset />} />\n          <Route path=\"/o25\" element={<Over25 />} />\n          <Route path=\"/u25\" element={<Under25 />} />\n          <Route path=\"/teamshigh\" element={<HighestScoringTeams />} />\n          <Route path=\"/fixtureshigh\" element={<HighestScoringFixtures />} />\n          <Route path=\"/bttsfixtures\" element={<BTTSFixtures />} />\n          <Route path=\"/bttsteams\" element={<BTTSTeams />} />\n          <Route path=\"/cancelsubscription\" element={<CancelSubscription/>} />\n          <Route path=\"/\" exact element={<App />} />\n          {/* <Route path=\"/\" element={<Fixture />} /> */}\n        </Routes>\n        </HashRouter>\n    </Provider>\n    ,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}