{"version":3,"sources":["components/Header.js","components/Button.js","components/OddsRadio.js","components/createBadge.js","components/CollapsableElement.js","components/createStatsDiv.js","components/Div.js","logic/getForm.js","components/Increment.js","logic/getBTTSPotential.js","components/Carousel.js","logic/getScorePredictions.js","components/KofiButton.js","components/LeagueTable.js","logic/getFixtures.js","components/HeadToHead.js","components/Table.js","logic/getTeamStats.js","logic/compareFormTrend.js","components/Chart.js","logic/getStats.js","components/Fixture.js","components/DateForm.js","App.js","components/radio.js","reportWebVitals.js","index.js"],"names":["Header","className","Button","props","id","text","variant","type","onClick","onClickEvent","style","selectedOdds","OddsRadio","handleOptionChange","setState","value","state","this","name","checked","onChange","Component","CreateBadge","image","ClassName","src","alt","flexShrink","Collapsable","transitionTime","trigger","classNameButton","buttonText","classNameFlex","classNameTwo","element","classNameThree","elementTwo","Stats","styleForm","formIndicator","styleBTTS","BTTSBoolean","formRun","FormTextString","Results","BTTSArray","homeOrAway","homeOrAwayResults","goals","conceeded","possession","XG","XGConceded","goalDifference","goalDifferenceHomeOrAway","sot","dangerousAttacks","leaguePosition","homeOrAwayLeaguePosition","winPercentage","toFixed","drawPercentage","lossPercentage","ppg","formTrend","BTTSAll","BTTSHorA","CardsTotal","CornersAverage","ScoredBothHalvesPercentage","Div","getForm","match","teams","homeId","awayId","fixtureForm","i","team","fetch","process","response","json","then","formData","lastMatchTimestamp","last_updated_match_timestamp","length","incrementValue","riskLevel","Increment","IncrementItem","getNewTips","allTips","DecreaseItem","show","getBTTSPotential","homeGoals","awayGoals","unroundedHomeGoals","unroundedAwayGoals","homeBTTS","bttsAllPercentageHome","homeOnlyBTTS","bttsPercentageHomeHome","awayOnlyBTTS","bttsPercentageAwayAway","awayBTTS","bttsAllPercentageAway","homeG","awayG","combinedBTTS","bttsFraction","status","awayOdds","btts","bttsChosen","totalGoals","rawFinalHomeGoals","rawFinalAwayGoals","SwiperCore","use","EffectCoverflow","Pagination","finalHomeGoals","finalAwayGoals","homeOdds","Slider","effect","autoHeight","grabCursor","centeredSlides","slidesPerView","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","pagination","clickable","element2","element3","element4","element5","StyledKofiButton","color","title","kofiID","Headers","append","drawPredictions","sumStatDAWin","sumStatDALoss","sumStatPossessionWin","sumStatPossessionLoss","sumStatSOTWin","sumStatSOTLoss","sumStatPPGLast10Win","sumStatPPGLast10Loss","sumOddsWin","sumOddsLoss","sumXGForWin","sumXGForLoss","sumXGAgainstWin","sumXGAgainstLoss","allDrawOutcomes","totalROI","totalInvestment","totalProfit","clicked","convertTimestamp","timestamp","newDate","Date","toLocaleDateString","split","day","month","year","converted","getPointsFromLastX","lastX","pointsAddition","points","forEach","game","error","console","log","getPastLeagueResults","hOrA","form","date","allLeagueResultsArrayOfObjects","leagueIndex","fixtures","teamsHomeResults","filter","fixture","home_name","item","date_unix","sort","a","b","teamsAwayResults","away_name","homeResults","awayResults","oddsSumHome","oddsSumAway","index","resultedGame","homeGoalCount","team_a_xg","awayGoalCount","team_b_xg","team_a_possession","team_a_shots","team_a_shotsOnTarget","team_a_dangerous_attacks","odds_ft_1","odds_ft_2","homeTeam","awayTeam","XGAgainst","scored","shots","dateRaw","oddsHome","oddsAway","push","team_b_possession","team_b_shots","team_b_shotsOnTarget","team_b_dangerous_attacks","reversedResultsAway","allTeamResults","reversedResultsHome","concat","averageOddsHome","averageOddsAway","teamGoalsHome","map","res","teamGoalsAway","teamGoalsAll","teamConceededHome","teamConceededAway","teamConceededAll","teamXGForAll","teamXGAgainstAll","XGSum","reduce","avgXGScored","XGAgainstSum","avgXGConceeded","possessionSum","avgPossession","dangerousAttacksSum","avgDangerousAttacks","shotsSum","avgShots","shotsOnTarget","shotsOnTargetSum","avgShotsOnTarget","last5XG","slice","last5XGSum","last5XGAvgFor","last5XGAgainst","last5XGAgainstSum","last5XGAvgAgainst","XGOverall","parseFloat","XGlast5","XGAgainstAvgOverall","XGAgainstlast5","AveragePossessionOverall","AverageDangerousAttacksOverall","AverageShots","AverageShotsOnTargetOverall","alpha","beta","allGoalsArrayHome","allConceededArrayHome","sum","sumTwo","predictGoalsWithExponentialSmoothing","forAndAgainstRollingAv","forAndAgainstRollingAvHomeOrAway","allGoalsArrayAway","allConceededArrayAway","bttsHome","bttsAway","bttsAll","bttsHomeCount","bttsHomeString","bttsHomePercentage","bttsAwayCount","bttsAwayString","bttsAwayPercentage","bttsAllCount","bttsAllString","bttsAllPercentage","r","x","predictNextWeightedMovingAverage","teamGoalsHomeRollingAverage","teamGoalsAwayRollingAverage","teamGoalsAllRollingAverage","teamConceededHomeRollingAverage","teamConceededAwayRollingAverage","teamGoalsConceededAllRollingAverage","avgScored","last5","last5Sum","last5AvgScored","last10","last10Sum","last10AvgScored","last5Goals","last10Goals","avgConceeded","numbers","windowSize","startIndex","window","weights","Array","from","_","acc","num","movingAverage","w","calculateWeightedAverage","arr","weightedSum","totalWeight","weight","Math","pow","teamGoalsFor","teamGoalsAgainst","lambdaFor","lambdaAgainst","predictedGoalsFor","predictedGoalsAgainst","goalsFor","goalsAgainst","compareStat","statOne","statTwo","stat1","stat2","normalizeValues","normalizedValue1","normalizedValue2","finalValue1","finalValue2","diff","statDiff","getClinicalRating","dangerousAttackConversion","rating","score","getPointsDifferential","pointsHomeAvg","pointsAwayAvg","differential","getPointWeighting","pointsDiff","pointsDiffWeightingHome","pointsDiffWeightingAway","compareFormTrend","recentForm","distantForm","scoreTotal","recent","distant","getPointAverage","pointTotal","games","poissonDistribution","lambda","k","numerator","exp","denominator","factorial","n","result","calculateAverageGoals","adjustGoalsAvg","goalsAvg","strengthRatio","predictScore","goalsForTeam1","goalsAgainstTeam1","goalsForTeam2","goalsAgainstTeam2","team1Metrics","team2Metrics","team1AverageGoalsFor","team1AverageGoalsAgainst","team2AverageGoalsFor","team2AverageGoalsAgainst","team1StrengthRatio","weighting","team2StrengthRatio","adjustedTeam1AverageGoals","adjustedTeam2AverageGoals","adjustedTeam1AverageGoalsAgainst","adjustedTeam2AverageGoalsAgainst","maxGoals","scores","j","team1GoalExpectation","team2GoalExpectation","isFinite","probability","team1Score","team2Score","top5Scores","value1","value2","minRange","maxRange","Error","absValue1","abs","absValue2","normalizedAbsValue1","totalAbs","normalizedAbsValue2","compareTeams","homeForm","awayForm","homeAttackStrength","attackingStrength","homeDefenceStrength","defensiveStrength","homePossessionStrength","possessionStrength","awayAttackStrength","awayDefenceStrength","awayPossessionStrength","getXGtoActualDifferentialStrength","actualToXGDifference","homeXGtoActualDiffStrength","awayXGtoActualDiffStrength","attackStrengthComparison","defenceStrengthComparison","possessiontrengthComparison","xgActualComparison","xgAgainstStrength","homeOrAwayAverage","homeAwayPointAverageComparison","last5Points","fiveGameComparison","oddsComparison","homeAttackAdvantage","homeAdvantage","dangerousAttacksWithConverstionComparison","goalDiffHomeOrAwayComparison","calculation","homeWinOutcomeProbability","homeTeamWinPercentage","awayTeamLossPercentage","awayWinOutcomeProbability","homeTeamLossPercentage","awayTeamWinPercentage","drawOutcomeProbability","homeTeamDrawPercentage","awayTeamDrawPercentage","lastGame","last2Points","XGdifferentialValueRaw","calculateScore","divider","calculate","allForm","find","home","teamName","away","PlayedHome","PlayedAway","LastFiveForm","previousToLastGame","last2","last6Points","LastSixForm","last10Points","LastTenForm","twoGameAverage","last3Points","threeGameAverage","fiveGameAverage","sixGameAverage","tenGameAverage","lastHomeOrAwayPoints","ScoredAverage","ScoredOverall","ConcededAverage","ConcededOverall","ScoredAverageShortTerm","ConcededAverageShortTerm","longTermAverageGoals","longTermAverageConceeded","GoalsInGamesAverageHome","GoalsInGamesAverageAway","recentGoalDiff","distantGoalDiff","recentDA","distantDA","recentPosession","distantPosession","recentCleanSheet","CleanSheetPercentage","distantCleanSheet","recentFormArray","distantFormArray","formTrendScore","expectedGoals","ScoredAverageShortAndLongTerm","conceededAverageShortAndLongTerm","longTermGoalDifference","shortTermGoalDifference","XGdifferential","XGdifferentialRecent","actualToXGDifferenceRecent","improving","formHome","formAway","homeTenGameAvg","awayTenGameAvg","homeTwoGameAvg","awayTwoGameAvg","pointsDiff10","pointsDiff2","last10WeightingHome","last10WeightingAway","last2WeightingHome","last2WeightingAway","AverageDangerousAttacks","clinicalRating","clinicalScore","XGdifferentialValue","leagueID","predictedGoalsBasedOnHomeAv","predictedGoalsBasedOnAwayAv","allTeamGoalsBasedOnAverages","predictedGoalsConceededBasedOnHomeAv","predictedGoalsConceededBasedOnAwayAv","allTeamGoalsConceededBasedOnAverages","averageScoredLeague","averageConceededLeague","last10btts","last10bttsHome","last10bttsAway","bttsPercentageHomeAway","bttsPercentageAwayHome","homeTeamHomePositionRaw","awayTeamAwayPositionRaw","homePositionHomeOnly","awayPositionAwayOnly","homePosition","homeRawPosition","awayPosition","awayRawPosition","AttackingPotency","AttacksHome","AttacksAverage","attackingMetricsHome","averagePossession","AveragePossession","averageDangerousAttacks","averageShots","averageShotsOnTarget","AverageShotsOnTarget","averageExpectedGoals","recentXG","averageGoals","attackingMetricsAway","defensiveMetricsHome","averageExpectedGoalsAgainst","recentXGAgainst","averageGoalsAgainst","defensiveMetricsAway","calculateAttackingStrength","calculateDefensiveStrength","calculateMetricStrength","xgForStrength","teamComparisonScore","teamStrengthWeighting","undefined","scorePredictions","homeGoalDiff","awayGoalDiff","goalsDifferential","rollingAverageGoalsDifferential","goalCalcHomeShortTerm","goalCalcAwayShortTerm","homeLeagueOrAllFormAverageGoals","LeagueAverageGoals","LeagueAverageConceded","awayLeagueOrAllFormAverageGoals","factorOneHome","factorOneAway","factorTwoHome","factorTwoAway","scoreDiff","homeComparisonWeighting","awayComparisonWeighting","ceil","floor","round","difference","prediction","includeInMultis","pointsDifferential","pointsDifferentialValue","pointsDifferentialValueRaw","rollingGoalDiffDifferential","rollingGoalDiff","rollingGoalDiffValue","dangerousAttacksDifferential","dangerousAttacksDiff","dangerousAttacksDiffValue","winner","outcome","predictionOutcome","over25PredictionOutcome","bttsOutcome","total","parseInt","total2","game_week","profit","getSuccessMeasure","sumProfit","investment","exactScores","successCount","netProfit","hasOwnProperty","exactScore","ROI","operand","operandTwo","exactScoreHitRate","successRate","ReactDOM","render","document","getElementById","price","combinations","gamesInExotic","exoticStake","exoticString","allTipsSorted","newArray","bestBets","Over25Tips","XGDiffTips","rollingDiffTips","dangerousAttacksDiffTips","pointsDiffTips","exoticArray","bttsArray","accumulatedOdds","predictions","array","tip","indexOf","rawOdds","renderTips","getScorePrediction","mocked","mock","Promise","all","matches","goalsA","goalsB","unroundedGoalsA","unroundedGoalsB","outcomeSymbol","over25PredictionOutcomeSymbol","bttsOutcomeSymbol","fractionHome","predictionObject","odds","comparisonScore","rawComparisonScore","goalDifferential","experimentalCalc","fractionAway","Over25PredictionObject","decimalOdds","homeDoubleChance","over25Odds","doubleChanceOutcome","goalTotalUnrounded","XGPredictionObject","otherTeam","pointsDiffObject","rollingDiffObject","dangerousAttacksDiffObject","RenderAllFixtures","bool","getMultis","getCoverBetMaxReturns","getAccumulatorPrice","priceArray","minAccSize","stake","perms","getUniquePermutations","permLength","permutations","newArr","splice","twoDimArrayUnion","arr1","arr2","duplicate","NewlineText","str","toggleState","setIsOff","upArrow","StyledTableCell2","withStyles","theme","head","backgroundColor","padding","paddingTop","paddingBottom","textAlign","fontSize","fontFamily","margin","body","TableCell","StyledTableCell","StyledTableRow","root","TableRow","LeagueTable","useState","singleResult","rows","Teams","component","scope","width","Name","Played","Wins","Draws","Losses","For","Against","GoalDifference","Points","Form","Key","leagueResults","team_a_red_cards","team_b_red_cards","leagueResultsOlder","getTopScorersTeam","ID","sorted","league","order","sortedByForm","LastWeeksResults","GamesPlayed","LeagueID","TableContainer","Paper","Table","marginTop","marginBottom","TableHead","TableBody","mostRecentGameweek","seasonAVG_home","seasonAVG_away","seasonBTTSPercentage","seasonOver05Percentage_overall","seasonOver15Percentage_overall","seasonOver25Percentage_overall","seasonOver35Percentage_overall","seasonOver45Percentage_overall","over75CornersPercentage_overall","over85CornersPercentage_overall","over95CornersPercentage_overall","over105CornersPercentage_overall","over115CornersPercentage_overall","over125CornersPercentage_overall","cornersAVG_overall","cardsAVG_overall","top_scorers","known_as","club_team_id","goals_overall","fixtureResponse","leagueInstance","lastThreeFormHome","lastThreeFormAway","lastFiveFormHome","lastFiveFormAway","lastSixFormHome","lastSixFormAway","lastTenFormHome","lastTenFormAway","leagueOrAll","formRunHome","formRunAway","WDLinLeagueHome","WDLinLeagueAway","HomeAverageGoals","homeAverageGoals","HomeAverageConceded","homeAverageConceded","AwayAverageGoals","awayAverageGoals","AwayAverageConceded","awayAverageConceded","oddslib","require","fixtureArray","leagueGames","leagueArray","leagueIdArray","tableArray","worldCupArray","generateTables","allResults","currentLeagueId","data","specific_tables","groups","table","currentTeam","wdl_record","toUpperCase","Position","cleanName","matchesPlayed","seasonWins_overall","seasonDraws_overall","seasonLosses_overall","seasonGoals","seasonConceded_home","seasonConceded_away","seasonGoalDifference","LastXPoints","wdl","seasonConceded","group","league_table","all_matches_table_overall","results","mostRecentGame","pop","gameweeksResults","leagueTable","leagueStatistics","stats","statistics","createFixture","mockBool","roundedHomeOdds","roundedAwayOdds","homeFraction","to","precision","awayFraction","bttsOdds","roundedBTTSOdds","homeTeamWinsPercentage","homeTeamLossesPercentage","homeTeamDrawsPercentage","awayTeamWinsPercentage","awayTeamLossesPercentage","awayTeamDrawsPercentage","Fixture","isFunctionRunning","generateFixtures","footyStatsFormattedDate","current","todaysDate","getPrefix","position","teamPositionPrefix","updateResults","method","headers","Accept","JSON","stringify","url","formUrl","formArray","leaguesStored","storedForm","isFormStored","isStoredLocally","height","fill","orderedLeagues","leaguePositions","leagues","allLeagueResults","allGames","startDate","getTime","targetDate","orderedLeague","gamesFiltered","mostRecentResults","shortenedResults","pre_match_teamA_overall_ppg","pre_match_teamB_overall_ppg","leagueObj","homeLeague","awayLeague","all_matches_table_home","all_matches_table_away","regularSeason","season","string","stringHome","stringAway","rawPosition","homeFormName","awayFormName","homeSeasonWinPercentage","seasonWins","awaySeasonWinPercentage","homeSeasonLossPercentage","seasonLosses_home","awaySeasonLossPercentage","seasonLosses_away","homeSeasonDrawPercentage","seasonDraws","awaySeasonDrawPercentage","homeSeasonMatchesPlayed","awaySeasonMatchesPlayed","played","o","competition_id","unixTimestamp","dateObject","previousLeagueName","leagueName","time","toLocaleString","hour","minute","drawOdds","odds_ft_x","odds_doublechance_1x","awayDoubleChance","odds_doublechance_x2","odds_btts_yes","homeID","awayID","homeTeamInfo","awayTeamInfo","homeTeaminLeague","awayTeaminLeague","teamPositionHome","teamPositionHomeTable","teamPositionAwayTable","homeTeamWinPercentageHome","awayTeamWinPercentageAway","homeTeamLossPercentageHome","awayTeamLossPercentageAway","homeTeamDrawPercentageHome","awayTeamDrawPercentageAway","teamPositionAway","homePrefix","homePrefixHomeTable","awayPrefix","awayPrefixAwayTable","homeSeasonPPG","awaySeasonPPG","homeTeaminHomeLeague","awayTeaminAwayLeague","homeFormString5","additional_info","formRun_overall","awayFormString5","homeFormString6","awayFormString6","homeFormString10","awayFormString10","homeFormRun","formRun_home","awayFormRun","formRun_away","season_format","xg_for_avg_overall","xg_for_avg_home","seasonScoredNum_overall","seasonScoredAVG_home","seasonMatchesPlayed_home","seasonMatchesPlayed_away","seasonConcededNum_overall","seasonConcededAVG_home","xg_against_avg_overall","XGAgainstAverage","xg_against_avg_home","seasonCSPercentage_overall","possessionAVG_overall","possessionAVG_home","shotsOnTargetAVG_overall","shotsOnTargetAVG_home","dangerous_attacks_avg_overall","PPG","seasonPPG_overall","attacks_avg_home","AttacksAway","attacks_avg_away","dangerous_attacks_avg_home","homeDefenceAdvantage","BTTSPercentage","seasonBTTSPercentage_home","LeagueOrAll","LeaguePosition","shotsAVG_overall","shotsAVG_home","seasonGoalDifference_overall","seasonGoalDifference_home","seasonBTTSPercentage_overall","cardsTotal_overall","scoredBothHalvesPercentage_overall","AverageShotsHomeOrAway","lastThreeForm","SeasonPPG","WinPercentage","LossPercentage","DrawPercentage","BttsPercentage","BttsPercentageHomeOrAway","LastMatch","WDLRecord","xg_for_avg_away","seasonScoredAVG_away","seasonConcededAVG_away","xg_against_avg_away","possessionAVG_away","shotsOnTargetAVG_away","dangerous_attacks_avg_away","seasonBTTSPercentage_away","shotsAVG_away","seasonGoalDifference_away","teamIDHome","teamIDAway","leagueId","homeBadge","home_image","awayBadge","away_image","homePpg","home_ppg","awayPpg","away_ppg","homeTeamHomePosition","awayTeamAwayPosition","odds_ft_over25","btts_potential","expectedGoalsHomeToDate","team_a_xg_prematch","expectedGoalsAwayToDate","team_b_xg_prematch","setTimeout","HeadToHead","stadium","homeWins","awayWins","draws","bestHomeOdds","bestAwayOdds","lastGameStadiumName","lastGameDate","lastGameHomeTeam","lastGameHomeGoals","lastGameAwayGoals","lastGameAwayTeam","secondToLastGameStadiumName","secondToLastGameDate","secondToLastGameHomeTeam","secondToLastGameHomeGoals","secondToLastGameAwayGoals","secondToLastGameAwayTeam","lineHeight","CustomizedTables","align","o05Stat","o05Odds","u05Odds","o15Stat","o15Odds","u15Odds","o25Stat","o25Odds","u25Odds","o35Stat","o35Odds","u35Odds","BTTSStat","BTTSForecast","BTTSOdds","BTTSOddsNo","getTeamStats","identifier","getBTTSPercentage","getFairOdds","impliedProbability","impliedProbabilityDivided","homeToal","awayTotal","fixtureHistory","matchArr","h2h","previous_matches_ids","oddsComparisonHomeArray","oddsComparisonAwayArray","odds_comparison","sortedHomeOdds","Object","entries","sortedAwayOdds","bestHomeOddsProvider","bestAwayOddsProvider","previous_matches_results","totalMatches","lastMatch","secondMatchExists","secondToLastMatch","previousMatch","previousMatchDetails","getDate","getMonth","getFullYear","secondToPreviousMatch","secondToPreviousMatchDetails","dateObject2","date2","betting_stats","bttsPercentage","fairOddsBTTSYes","fairOddsBTTSNo","stadium_name","team_a_wins","team_b_wins","draw","avg_goals","isNaN","over05Percentage","over15Percentage","o15Forecast","o15_potential","odds_ft_over05","odds_ft_under05","odds_ft_over15","odds_ft_under15","over25Percentage","o25Forecast","o25_potential","odds_ft_under25","over35Percentage","o35Forecast","o35_potential","odds_ft_over35","odds_ft_under35","odds_btts_no","CornersStat","CornersForecast","corners_potential","CornersOdds","odds_corners_over_105","getOverOrUnderText","xgSum","overUnderAchievingSum","getXGDifferential","xgFor","xgAgainst","xgDiff","goalDiff","compareXgAndGoalDiff","getAttackingSummary","goalsRecent","goalsLongTerm","getDefenceSummary","cleansheetStat","lastx","ten","five","xgText","attackString","defenceString","pointsAverageTotal","GenerateFormSummary","Chart","data1","options","responsive","aspectRatio","maintainAspectRatio","layout","elements","point","radius","scales","y","suggestedMin","suggestedMax","grid","borderWidth","borderColor","ticks","font","size","display","plugins","legend","labels","boxHeight","keys","datasets","label","team1","tension","team2","data2","RadarChart","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","angleLines","BarChart","datasetOne","idx","numOne","numTwo","tempArr","firstNum","secondNum","max","findLargestNum","min","context","dataIndex","dataset","indexAxis","bar","tooltip","enabled","metric","ranges","recentXGA","normalizedValue","metricName","metricValue","weightedScore","XGDiff","strength","ChartJS","register","CategoryScale","LinearScale","RadialLinearScale","PointElement","ArcElement","Filler","BarElement","LineElement","Title","Tooltip","Legend","resultValue","count","mockValue","rollingGoalDiffTotalHome","rollingGoalDiffTotalAway","displayBool","styling","testBool","getPointsFromGames","formArr","pairings","W","D","L","arrayOfIndividualPoints","getLastGameResult","homeXG","awayXG","homeShots","awayShots","homeSot","awaySot","homeDangerousAttacks","awayDangerousAttacks","homePossession","awayPossession","homeRed","awayRed","homePPG","awayPPG","StatsHome","gameCount","formDataHome","Last5","gameArrayHomeTeamHomeGames","AverageGoals","AverageConceeded","AverageXG","AverageXGConceded","homeTenGameAverage","homeSixGameAverage","homeFiveGameAverage","homeLastGame","ResultsHomeOrAway","wonHomeOrAwayOnly","FormTextStringHome","StatsAway","formDataAway","gameArrayAwayTeamAwayGames","awayTenGameAverage","awaySixGameAverage","awayFiveGameAverage","awayLastGame","FormTextStringAway","gameStats","gameArrayHome","gameArrayAway","goalDiffHomeMovingAv","goalDiffAwayMovingAv","getEMA","p","resultHome","resultHomeOnly","timeZone","won","goalsScored","goalsConceeded","winningTeam","goalDiffArrayHome","cumulativeSumHome","resultAway","resultAwayOnly","goalDiffArrayAway","cumulativeSumAway","bttsArrayHome","bttsArrayAway","resultsArrayHome","resultsArrayAway","homeFormTrend","awayFormTrend","formTextStringHome","formTextStringAway","homeXGForStrength","homeXGAgainstStrength","awayXGForStrength","awayXGAgainstStrength","formPointsHome","formPointsAway","Last5PPG","formArrayHome","formArrayAway","chartType","overviewHome","overviewAway","GetDivider","matchStatus","isPrediction","renderLeagueName","renderTable","SingleFixture","onMouseDown","createStatsDiv","List","DateField","today","todayFootyStats","tomorrow","tomorrowFootyStats","dateFootyStats","lastSaturday","lastSaturdayFootyStats","tomorrowsDate","yesterdaysDate","saturdayDate","historicDate","dateString","fixtureList","availableLeagues","leagueOrder","decrementDate","calculateDate","renderButtons","setDate","getDay","leagueList","mapOrder","key","A","B","textJoined","newText","welcomeTextOne","welcomeTextTwo","App","href","target","rel","mockedFixtures","TwitterShareButton","boxShadow","TwitterIcon","RedditShareButton","RedditIcon","FacebookShareButton","quote","FacebookIcon","WhatsappShareButton","separator","WhatsappIcon","TelegramShareButton","TelegramIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.274e2a90.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n      <h1 className=\"HeaderContainer\">XG Tipping</h1>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nexport function Button(props) {\n  return (\n    <div id=\"Button\">\n      <button data-cy={props.text} variant=\"primary\" type=\"button\" onClick={props.onClickEvent} className={props.className} style={props.style}>\n        {props.text}\n      </button>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nexport var selectedOdds = \"Fractional odds\";\n\nexport class OddsRadio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOdds: this.props.value,\n    };\n  }\n\n  handleOptionChange = () => {\n    this.setState({\n      selectedOdds: this.props.value,\n    });\n    selectedOdds = this.state.selectedOdds;\n  };\n\n  render() {\n    return (\n      <section className=\"dark2\">\n        <div className={this.props.className}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"odds\"\n              checked={this.state.checked}\n              onChange={this.handleOptionChange}\n              data-cy={this.props.value}\n            />\n            <span className=\"design\"></span>\n            <span className=\"text\">{this.props.value}</span>\n          </label>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default OddsRadio;\n","import React from \"react\";\n\nexport function CreateBadge(props) {\n\n  if(props.image === \"-\"){\n    return (\n      <div className={props.ClassName} />\n    );\n  } else {\n    return (\n      <img\n        src={`https://cdn.footystats.org/img/${props.image}`}\n        className={props.ClassName}\n        alt={props.alt}\n        flex-shrink={props.flexShrink}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Collapsible from \"react-collapsible\";\n\nconst Collapsable = (props) => {\n  return (\n    <Collapsible transitionTime={300} trigger={<button className={props.classNameButton}>{props.buttonText}</button>} className={props.className? props.className: \"Collapsable\"}>\n      <div className={props.classNameFlex? props.classNameFlex: \"\"}>\n      <span className={props.classNameTwo? props.classNameTwo: props.buttonText} style={props.style} key={`123${props.buttonText}`}>{props.element}</span>\n      <span className={props.classNameThree? props.classNameTwo: props.buttonText} key={`456${props.buttonText}`}>{props.elementTwo}</span>\n      </div>\n    </Collapsible>\n  );\n};\n\n\nexport default Collapsable;","import React, { Fragment } from \"react\";\n\nfunction Stats(props) {\n  function styleForm(formIndicator) {\n    let className;\n    if (formIndicator === \"W\") {\n      className = \"win\";\n    } else if (formIndicator === \"D\") {\n      className = \"draw\";\n    } else if (formIndicator === \"L\") {\n      className = \"loss\";\n    }\n    return className;\n  }\n\n  function styleBTTS(BTTSBoolean) {\n    let className;\n    if (BTTSBoolean === \"\\u2714\") {\n      className = \"BTTSTrue\";\n    } else if (BTTSBoolean === \"\\u2718\") {\n      className = \"BTTSFalse\";\n    }\n    return className;\n  }\n\n  if (props.formRun) {\n    return (\n      <Fragment>\n        <ul className={props.className} style={props.style}>\n          <li className=\"FormSummaryHome\">{props.FormTextString}</li>\n          <li className=\"FormHeader\">\n            League results (most recent on right)\n          </li>\n          <li key={`last5League`} className=\"last5League\">\n          <span className={styleForm(props.Results[5])}>\n              {props.Results[5]}\n            </span>\n            <span className={styleForm(props.Results[4])}>\n              {props.Results[4]}\n            </span>\n            <span className={styleForm(props.Results[3])}>\n              {props.Results[3]}\n            </span>\n            <span className={styleForm(props.Results[2])}>\n              {props.Results[2]}\n            </span>\n            <span className={styleForm(props.Results[1])}>\n              {props.Results[1]}\n            </span>\n            <span className={styleForm(props.Results[0])}>\n              {props.Results[0]}\n            </span>\n          </li>\n          <li\n            key=\"BTTSArrayHomeOrAway\"\n            className=\"BTTSArrayHomeOrAway\"\n            data-cy={props.name + \"BTTSArrayHomeOrAway\"}\n          >\n            <div className=\"BTTSResults\">BTTS</div>\n            <span className={styleBTTS(props.BTTSArray[5])}>{props.BTTSArray[5]}</span>\n            <span className={styleBTTS(props.BTTSArray[4])}>{props.BTTSArray[4]}</span>\n            <span className={styleBTTS(props.BTTSArray[3])}>{props.BTTSArray[3]}</span>\n            <span className={styleBTTS(props.BTTSArray[2])}>{props.BTTSArray[2]}</span>\n            <span className={styleBTTS(props.BTTSArray[1])}>{props.BTTSArray[1]}</span>\n            <span className={styleBTTS(props.BTTSArray[0])}>{props.BTTSArray[0]}</span>\n          </li>\n          <li className=\"FormHeader\">\n            {props.homeOrAway} form (most recent on right)\n          </li>\n          <li key={`last5${props.homeOrAwayResults}`} className=\"FormHomeOrAway\">\n          <span className={styleForm(props.homeOrAwayResults[5])}>\n              {props.homeOrAwayResults[5]}\n            </span>\n            <span className={styleForm(props.homeOrAwayResults[4])}>\n              {props.homeOrAwayResults[4]}\n            </span>\n            <span className={styleForm(props.homeOrAwayResults[3])}>\n              {props.homeOrAwayResults[3]}\n            </span>\n            <span className={styleForm(props.homeOrAwayResults[2])}>\n              {props.homeOrAwayResults[2]}\n            </span>\n            <span className={styleForm(props.homeOrAwayResults[1])}>\n              {props.homeOrAwayResults[1]}\n            </span>\n            <span className={styleForm(props.homeOrAwayResults[0])}>\n              {props.homeOrAwayResults[0]}\n            </span>\n          </li>\n          <li\n            key=\"TeamScored\"\n            className=\"TeamScored\"\n            data-cy={props.name + \"teamScored\"}\n          >\n            {`Avg goals scored - ${props.goals}`}\n          </li>\n          <li\n            key=\"TeamConceeded\"\n            className=\"TeamConceeded\"\n            data-cy={props.name + \"teamConceded\"}\n          >\n            {`Avg goals conceeded - ${props.conceeded}`}\n          </li>\n          <li\n            key=\"TeamPossession\"\n            className=\"TeamPossession\"\n            data-cy={props.name + \"teamPossession\"}\n          >\n            {`Avg possession - ${props.possession}%`}\n          </li>\n          <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name + \"teamXG\"}>\n            {`Avg XG - ${props.XG}`}\n          </li>\n          <li\n            key=\"TeamXGConceded\"\n            className=\"TeamXGConceded\"\n            data-cy={props.name + \"teamXGConceded\"}\n          >\n            {`Avg XG conceded - ${props.XGConceded}`}\n          </li>\n          <li\n            key=\"goalDifference\"\n            className=\"goalDifference\"\n            data-cy={props.name + \"goalDifference\"}\n          >\n            {`Goal difference : `}\n            <span>{props.goalDifference}</span>\n          </li>\n          <li\n            key=\"goalDifferenceHorA\"\n            className=\"goalDifferenceHorA\"\n            data-cy={props.name + \"goalDifference\"}\n          >\n            {`Goal difference ${props.homeOrAway} : ${props.goalDifferenceHomeOrAway}`}\n          </li>\n          <li\n            key=\"AverageSOT\"\n            className=\"AverageSOT\"\n            data-cy={props.name + \"averageSOT\"}\n          >\n            {`Avg shots on target - ${props.sot}`}\n          </li>\n          <li\n            key=\"DangerousAttacks\"\n            className=\"DangerousAttacks\"\n            data-cy={props.name + \"dangerousAttacks\"}\n          >\n            {`Avg dangerous attacks - ${props.dangerousAttacks}`}\n          </li>\n          <li\n            key=\"LeaguePosition\"\n            className=\"LeaguePosition\"\n            data-cy={props.name + \"leaguePosition\"}\n          >\n            {`League position - ${props.leaguePosition}`}\n          </li>\n\n          <li\n            key=\"LeaguePositionHomeOrAway\"\n            className=\"LeaguePositionHomeOrAway\"\n            data-cy={props.name + \"LeaguePositionHomeOrAway\"}\n          >\n            {`Position (${props.homeOrAway} only) - ${props.homeOrAwayLeaguePosition}`}\n          </li>\n          <li\n            key=\"WinPercentage\"\n            className=\"WinPercentage\"\n            data-cy={props.name + \"WinPercentage\"}\n          >\n            {`${props.homeOrAway} wins - ${props.winPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"DrawPercentage\"\n            className=\"DrawPercentage\"\n            data-cy={props.name + \"DrawPercentage\"}\n          >\n            {`${props.homeOrAway} draws - ${props.drawPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"LossPercentage\"\n            className=\"LossPercentage\"\n            data-cy={props.name + \"LossPercentage\"}\n          >\n            {`${props.homeOrAway} losses - ${props.lossPercentage.toFixed(1)}%`}\n          </li>\n          <li key=\"PPG\" className=\"PPG\" data-cy={props.name + \"PPG\"}>\n            {`Season PPG - ${props.ppg}`}\n          </li>\n          <li\n            key=\"FormTrend10a\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 10 PPG: ${props.formTrend[0]}`}\n          </li>\n          <li\n            key=\"FormTrend10b\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 6 PPG: ${props.formTrend[1]}`}\n          </li>\n          <li\n            key=\"FormTrend10c\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 5 PPG: ${props.formTrend[2]}.`}\n          </li>\n          <li\n            key=\"BttsPercentage\"\n            className=\"BttsPercentage\"\n            data-cy={props.name + \"BttsPercentage\"}\n          >\n            {`BTTS: ${props.BTTSAll}`}\n          </li>\n          <li\n            key=\"BttsPercentageHomeOrAway\"\n            className=\"BttsPercentageHomeOrAway\"\n            data-cy={props.name + \"BttsPercentageHomeOrAway\"}\n          >\n            {`BTTS ${props.homeOrAway}: ${props.BTTSHorA}`}\n          </li>\n          <li\n            key=\"CardsTotal\"\n            className=\"CardsTotal\"\n            data-cy={props.name + \"CardsTotal\"}\n          >\n            {`Cards total: ${props.CardsTotal}`}\n          </li>\n          <li\n            key=\"CornersAverage\"\n            className=\"CornersAverage\"\n            data-cy={props.name + \"CornersAverage\"}\n          >\n            {`Corners average: ${props.CornersAverage}`}\n          </li>\n          <li\n            key=\"ScoredBothHalvesPercentage\"\n            className=\"ScoredBothHalvesPercentage\"\n            data-cy={props.name + \"ScoredBothHalvesPercentage\"}\n          >\n            {`Scored both halves: ${props.ScoredBothHalvesPercentage}%`}\n          </li>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  } else {\n    return (\n      <Fragment>\n        <ul className={props.className} style={props.style}>\n          <li className=\"FormSummaryHome\">{props.FormTextString}</li>\n          <li\n            key=\"TeamScored\"\n            className=\"TeamScored\"\n            data-cy={props.name + \"teamScored\"}\n          >\n            {`Avg goals scored - ${props.goals}`}\n          </li>\n          <li\n            key=\"TeamConceeded\"\n            className=\"TeamConceeded\"\n            data-cy={props.name + \"teamConceded\"}\n          >\n            {`Avg goals conceeded - ${props.conceeded}`}\n          </li>\n          <li\n            key=\"TeamPossession\"\n            className=\"TeamPossession\"\n            data-cy={props.name + \"teamPossession\"}\n          >\n            {`Avg possession - ${props.possession}%`}\n          </li>\n          <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name + \"teamXG\"}>\n            {`Avg XG - ${props.XG}`}\n          </li>\n          <li\n            key=\"TeamXGConceded\"\n            className=\"TeamXGConceded\"\n            data-cy={props.name + \"teamXGConceded\"}\n          >\n            {`Avg XG conceded - ${props.XGConceded}`}\n          </li>\n          <li\n            key=\"AverageSOT\"\n            className=\"AverageSOT\"\n            data-cy={props.name + \"averageSOT\"}\n          >\n            {`Avg shots on target - ${props.sot}`}\n          </li>\n          <li\n            key=\"DangerousAttacks\"\n            className=\"DangerousAttacks\"\n            data-cy={props.name + \"dangerousAttacks\"}\n          >\n            {`Avg dangerous attacks - ${props.dangerousAttacks}`}\n          </li>\n          <li\n            key=\"LeaguePosition\"\n            className=\"LeaguePosition\"\n            data-cy={props.name + \"leaguePosition\"}\n          >\n            {`League position - ${props.leaguePosition}`}\n          </li>\n\n          <li\n            key=\"LeaguePositionHomeOrAway\"\n            className=\"LeaguePositionHomeOrAway\"\n            data-cy={props.name + \"LeaguePositionHomeOrAway\"}\n          >\n            {`Position (${props.homeOrAway} only) - ${props.homeOrAwayLeaguePosition}`}\n          </li>\n          <li\n            key=\"WinPercentage\"\n            className=\"WinPercentage\"\n            data-cy={props.name + \"WinPercentage\"}\n          >\n            {`${props.homeOrAway} wins - ${props.winPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"DrawPercentage\"\n            className=\"DrawPercentage\"\n            data-cy={props.name + \"DrawPercentage\"}\n          >\n            {`${props.homeOrAway} draws - ${props.drawPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"LossPercentage\"\n            className=\"LossPercentage\"\n            data-cy={props.name + \"LossPercentage\"}\n          >\n            {`${props.homeOrAway} losses - ${props.lossPercentage.toFixed(1)}%`}\n          </li>\n          <li key=\"PPG\" className=\"PPG\" data-cy={props.name + \"PPG\"}>\n            {`Season PPG - ${props.ppg}`}\n          </li>\n          <li\n            key=\"FormTrend10a\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 10 PPG: ${props.formTrend[0]}`}\n          </li>\n          <li\n            key=\"FormTrend10b\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 6 PPG: ${props.formTrend[1]}`}\n          </li>\n          <li\n            key=\"FormTrend10c\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 5 PPG: ${props.formTrend[2]}.`}\n          </li>\n          <li\n            key=\"BttsPercentage\"\n            className=\"BttsPercentage\"\n            data-cy={props.name + \"BttsPercentage\"}\n          >\n            {`BTTS last 10: ${props.BTTSAll}`}\n          </li>\n          <li\n            key=\"BttsPercentageHomeOrAway\"\n            className=\"BttsPercentageHomeOrAway\"\n            data-cy={props.name + \"BttsPercentageHomeOrAway\"}\n          >\n            {`BTTS last 10 ${props.homeOrAway}: ${props.BTTSHorA}`}\n          </li>\n          <li\n            key=\"CardsTotal\"\n            className=\"CardsTotal\"\n            data-cy={props.name + \"CardsTotal\"}\n          >\n            {`Cards total: ${props.CardsTotal}`}\n          </li>\n          <li\n            key=\"CornersAverage\"\n            className=\"CornersAverage\"\n            data-cy={props.name + \"CornersAverage\"}\n          >\n            {`Corners average: ${props.CornersAverage}`}\n          </li>\n          <li\n            key=\"ScoredBothHalvesPercentage\"\n            className=\"ScoredBothHalvesPercentage\"\n            data-cy={props.name + \"ScoredBothHalvesPercentage\"}\n          >\n            {`Scored both halves: ${props.ScoredBothHalvesPercentage}%`}\n          </li>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Stats;\n","import React from \"react\";\n\nfunction Div(props) {\n  return (\n    <div id={props.id} onClick={props.onClick} style={props.style} className={props.className}>{props.text}</div>\n  );\n}\n\nexport default Div;\n","export async function getForm(match) {\n  const teams = [match.homeId, match.awayId];\n  const fixtureForm = [];\n\n  for (let i = 0; i < teams.length; i++) {\n    const team = teams[i];\n\n    let response = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}formTeam/${team}`\n    );\n    await response.json().then((formData) => {\n      formData.lastMatchTimestamp = formData.last_updated_match_timestamp\n      fixtureForm[i] = formData;\n    });\n  }\n  return fixtureForm;\n}\n","import React, { Component, Fragment } from \"react\";\nimport { getNewTips } from \"../logic/getScorePredictions\"\nimport {allTips} from \"../logic/getScorePredictions\"\nexport var incrementValue = 3;\n\nexport var riskLevel = 10;\n\nclass Increment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      incrementValue,\n      riskLevel,\n      show: true,\n    };\n  }\n\n  IncrementItem = () => {\n    if(incrementValue > 1){\n    this.setState({ incrementValue: this.state.incrementValue - 1 });\n    this.setState({ riskLevel: this.state.riskLevel - 1 });\n    incrementValue = (this.state.incrementValue - 1);\n    riskLevel = this.state.riskLevel - 1;\n    }\n    getNewTips(allTips)\n  };\n  DecreaseItem = () => {\n    if(incrementValue > 0){\n      this.setState({ incrementValue: this.state.incrementValue + 1 });\n      this.setState({ riskLevel: this.state.riskLevel + 1 });\n      incrementValue = (this.state.incrementValue + 1);\n      riskLevel = this.state.riskLevel + 1;\n    }\n    getNewTips(allTips)\n  };\n\n  render() {\n    return (\n      <Fragment>\n          <button className=\"IncrementButton\" onClick={this.IncrementItem}>\n            -\n          </button>\n          <button className=\"DecrementButton\" onClick={this.DecreaseItem}>\n            +\n          </button>\n      </Fragment>\n\n    );\n  }\n}\n\nexport default Increment;\n","export async function getBTTSPotential(\n  match,\n  homeGoals,\n  awayGoals,\n  unroundedHomeGoals,\n  unroundedAwayGoals\n) {\n  const homeBTTS = match.bttsAllPercentageHome;\n  const homeOnlyBTTS = match.bttsPercentageHomeHome;\n  const awayOnlyBTTS = match.bttsPercentageAwayAway;\n  const awayBTTS = match.bttsAllPercentageAway;\n  const homeG = homeGoals;\n  const awayG = awayGoals;\n\n  match.combinedBTTS = (homeBTTS + awayBTTS) / 2;\n\n  if (\n    match.bttsFraction !== \"N/A\" &&\n    match.status !== \"suspended\" &&\n    match.status !== \"canceled\"\n  ) {\n    if (\n      match.combinedBTTS > 60 &&\n      homeBTTS > 45 &&\n      awayBTTS > 45 &&\n      homeOnlyBTTS > 40 &&\n      awayOnlyBTTS > 40 &&\n      match.awayOdds < 4 &&\n      match.awayOdds > 1.3 &&\n      homeG >= 1 &&\n      awayG >= 1 \n    ) {\n      match.btts = true;\n      match.bttsChosen = true;\n      match.totalGoals = match.rawFinalHomeGoals + match.rawFinalAwayGoals;\n    } else {\n      match.btts = false;\n      match.bttsChosen = false;\n    }\n  }\n  return match;\n}\n","import { getThemeProps } from \"@material-ui/styles\";\nimport SwiperCore, { EffectCoverflow, Pagination } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/swiper-bundle.min.css\";\nimport \"swiper/swiper.min.css\";\n\nSwiperCore.use([EffectCoverflow, Pagination]);\n\nexport const Slider = (props) => {\n  return (\n    <Swiper\n      effect={\"coverflow\"}\n      autoHeight={true}\n      grabCursor={true}\n      centeredSlides={true}\n      slidesPerView={1}\n      coverflowEffect={{\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: false,\n      }}\n      pagination={{ clickable: true }}\n      className=\"mySwiper\"\n    >\n      <SwiperSlide>\n       {props.element}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element2}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element3}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element4}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element5}\n      </SwiperSlide>\n    </Swiper>\n  );\n};\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { matches, diff } from \"./getFixtures\";\nimport { Fixture } from \"../components/Fixture\";\nimport { RenderAllFixtures } from \"../logic/getFixtures\";\nimport Div from \"../components/Div\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { allForm } from \"../logic/getFixtures\";\nimport Increment from \"../components/Increment\";\nimport { incrementValue } from \"../components/Increment\";\nimport { getBTTSPotential } from \"../logic/getBTTSPotential\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport { Slider } from \"../components/Carousel\";\nimport { StyledKofiButton } from \"../components/KofiButton\";\nimport {\n  calculateAttackingStrength,\n  calculateDefensiveStrength,\n  calculateMetricStrength,\n  getXGtoActualDifferentialStrength,\n} from \"./getStats\";\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nlet finalHomeGoals;\nlet finalAwayGoals;\nlet rawFinalHomeGoals;\nlet rawFinalAwayGoals;\nlet homeOdds;\nlet awayOdds;\nlet totalGoals = 0;\nlet totalGoals2 = 0;\nlet numberOfGames = 0;\nlet drawPredictions = 0;\nlet homePredictions = 0;\nlet awayPredictions = 0;\nlet allOutcomes = 0;\nlet homeOutcomes = 0;\nlet awayOutcomes = 0;\nlet winAmount = 0;\nlet lossAmount = 0;\nlet sumStatDAWin = 0;\nlet sumStatDALoss = 0;\nlet sumStatPossessionWin = 0;\nlet sumStatPossessionLoss = 0;\nlet sumStatSOTWin = 0;\nlet sumStatSOTLoss = 0;\nlet sumStatPPGLast10Win = 0;\nlet sumStatPPGLast10Loss = 0;\nlet sumOddsWin = 0;\nlet sumOddsLoss = 0;\nlet sumXGForWin = 0;\nlet sumXGForLoss = 0;\nlet sumXGAgainstWin = 0;\nlet sumXGAgainstLoss = 0;\nlet allWinOutcomes = 0;\nlet allLossOutcomes = 0;\nlet allDrawOutcomes = 0;\nlet totalROI = 0;\nlet totalInvestment = 0;\nlet totalProfit = 0;\nexport let clicked = false;\n\nexport var renderPredictions;\n\nasync function convertTimestamp(timestamp) {\n  let newDate = new Date(timestamp * 1000);\n  let [day, month, year] = newDate.toLocaleDateString(\"en-US\").split(\"/\");\n\n  let converted = `${year}-${day}-${month}`;\n\n  return converted;\n}\n\nexport function getPointsFromLastX(lastX) {\n  let points = 0;\n  let pointsAddition;\n\n  try {\n    lastX.forEach((game) => {\n      switch (true) {\n        case game === \"W\":\n          pointsAddition = 3;\n          break;\n        case game === \"D\":\n          pointsAddition = 1;\n          break;\n        case game === \"L\":\n          pointsAddition = 0;\n          break;\n        default:\n          break;\n      }\n\n      points = points + pointsAddition;\n    });\n    return points;\n  } catch (error) {\n    console.log(error);\n    return \"N/A\";\n  }\n}\n\nasync function getPastLeagueResults(team, game, hOrA, form) {\n  let date = game.date;\n  if (allLeagueResultsArrayOfObjects[game.leagueIndex].fixtures.length > 50) {\n    let teamsHomeResults = allLeagueResultsArrayOfObjects[\n      game.leagueIndex\n    ].fixtures.filter((fixture) => fixture.home_name === team);\n\n    teamsHomeResults = teamsHomeResults\n      .filter(function (item) {\n        return item.date_unix < date;\n      })\n      .sort((a, b) => a.date_unix - b.date_unix);\n\n    let teamsAwayResults = allLeagueResultsArrayOfObjects[\n      game.leagueIndex\n    ].fixtures.filter((fixture) => fixture.away_name === team);\n\n    teamsAwayResults = teamsAwayResults\n      .filter(function (item) {\n        return item.date_unix < date;\n      })\n      .sort((a, b) => a.date_unix - b.date_unix);\n\n    let homeResults = [];\n    let awayResults = [];\n    let oddsSumHome = 0;\n    let oddsSumAway = 0;\n    for (let index = 0; index < teamsHomeResults.length; index++) {\n      const resultedGame = teamsHomeResults[index];\n\n      homeResults.push({\n        homeTeam: resultedGame.home_name,\n        homeGoals: resultedGame.homeGoalCount,\n        XG: resultedGame.team_a_xg,\n        awayTeam: resultedGame.away_name,\n        awayGoals: resultedGame.awayGoalCount,\n        XGAgainst: resultedGame.team_b_xg,\n        possession: resultedGame.team_a_possession,\n        scored: resultedGame.homeGoalCount,\n        conceeded: resultedGame.awayGoalCount,\n        shots: resultedGame.team_a_shots,\n        sot: resultedGame.team_a_shotsOnTarget,\n        dangerousAttacks: resultedGame.team_a_dangerous_attacks,\n        date: await convertTimestamp(resultedGame.date_unix),\n        dateRaw: resultedGame.date_unix,\n        oddsHome: resultedGame.odds_ft_1,\n        oddsAway: resultedGame.odds_ft_2,\n        btts:\n          resultedGame.homeGoalCount > 0 && resultedGame.awayGoalCount > 0\n            ? true\n            : false,\n      });\n      oddsSumHome = oddsSumHome + resultedGame.odds_ft_1;\n    }\n    for (let index = 0; index < teamsAwayResults.length; index++) {\n      const resultedGame = teamsAwayResults[index];\n      awayResults.push({\n        homeTeam: resultedGame.home_name,\n        homeGoals: resultedGame.homeGoalCount,\n        XG: resultedGame.team_b_xg,\n        awayTeam: resultedGame.away_name,\n        awayGoals: resultedGame.awayGoalCount,\n        XGAgainst: resultedGame.team_a_xg,\n        possession: resultedGame.team_b_possession,\n        scored: resultedGame.awayGoalCount,\n        conceeded: resultedGame.homeGoalCount,\n        shots: resultedGame.team_b_shots,\n        sot: resultedGame.team_b_shotsOnTarget,\n        dangerousAttacks: resultedGame.team_b_dangerous_attacks,\n        date: await convertTimestamp(resultedGame.date_unix),\n        dateRaw: resultedGame.date_unix,\n        oddsHome: resultedGame.odds_ft_1,\n        oddsAway: resultedGame.odds_ft_2,\n        btts:\n          resultedGame.homeGoalCount > 0 && resultedGame.awayGoalCount > 0\n            ? true\n            : false,\n      });\n      oddsSumAway = oddsSumAway + resultedGame.odds_ft_2;\n    }\n\n    let reversedResultsHome = homeResults;\n    let reversedResultsAway = awayResults;\n\n    const allTeamResults = reversedResultsHome\n      .concat(reversedResultsAway)\n      .sort((a, b) => a.dateRaw - b.dateRaw);\n\n    const averageOddsHome = oddsSumHome / teamsHomeResults.length;\n    const averageOddsAway = oddsSumAway / teamsAwayResults.length;\n\n    const teamGoalsHome = reversedResultsHome.map((res) => res.scored);\n\n    const teamGoalsAway = reversedResultsAway.map((res) => res.scored);\n    const teamGoalsAll = allTeamResults.map((res) => res.scored);\n\n    const teamConceededHome = reversedResultsHome.map((res) => res.conceeded);\n    const teamConceededAway = reversedResultsAway.map((res) => res.conceeded);\n    const teamConceededAll = allTeamResults.map((res) => res.conceeded);\n\n    const teamXGForAll = allTeamResults.map((res) => res.XG);\n    const teamXGAgainstAll = allTeamResults.map((res) => res.XGAgainst);\n    const XGSum = teamXGForAll.reduce((a, b) => a + b, 0);\n    const avgXGScored = XGSum / teamXGForAll.length || 0;\n    const XGAgainstSum = teamXGAgainstAll.reduce((a, b) => a + b, 0);\n    const avgXGConceeded = XGAgainstSum / teamXGAgainstAll.length || 0;\n\n    const possession = allTeamResults.map((res) => res.possession);\n    const possessionSum = possession.reduce((a, b) => a + b, 0);\n    const avgPossession = possessionSum / possession.length || 0;\n\n    const dangerousAttacks = allTeamResults.map((res) => res.dangerousAttacks);\n    const dangerousAttacksSum = dangerousAttacks.reduce((a, b) => a + b, 0);\n    const avgDangerousAttacks =\n      dangerousAttacksSum / dangerousAttacks.length || 0;\n\n    const shots = allTeamResults.map((res) => res.shots);\n    const shotsSum = shots.reduce((a, b) => a + b, 0);\n    const avgShots = shotsSum / shots.length || 0;\n\n    const shotsOnTarget = allTeamResults.map((res) => res.sot);\n    const shotsOnTargetSum = shotsOnTarget.reduce((a, b) => a + b, 0);\n    const avgShotsOnTarget = shotsOnTargetSum / shotsOnTarget.length || 0;\n\n    const last5XG = teamXGForAll.slice(4);\n    const last5XGSum = last5XG.reduce((a, b) => a + b, 0);\n    const last5XGAvgFor = last5XGSum / last5XG.length || 0;\n\n    const last5XGAgainst = teamXGAgainstAll.slice(4);\n    const last5XGAgainstSum = last5XGAgainst.reduce((a, b) => a + b, 0);\n    const last5XGAvgAgainst = last5XGAgainstSum / last5XGAgainst.length || 0;\n\n    form.XGOverall = parseFloat(avgXGScored.toFixed(2));\n    form.XGlast5 = parseFloat(last5XGAvgFor.toFixed(2));\n\n    form.XGAgainstAvgOverall = parseFloat(avgXGConceeded.toFixed(2));\n    form.XGAgainstlast5 = parseFloat(last5XGAvgAgainst.toFixed(2));\n\n    form.AveragePossessionOverall = parseFloat(avgPossession.toFixed(1));\n    form.AverageDangerousAttacksOverall = parseFloat(\n      avgDangerousAttacks.toFixed(1)\n    );\n    form.AverageShots = parseFloat(avgShots.toFixed(1));\n    form.AverageShotsOnTargetOverall = parseFloat(avgShotsOnTarget.toFixed(1));\n    const alpha = 0.3;\n    const beta = 0.3;\n\n    let forAndAgainstRollingAv;\n    let forAndAgainstRollingAvHomeOrAway;\n    if (hOrA === \"home\") {\n      form.allGoalsArrayHome = teamGoalsHome;\n      form.allConceededArrayHome = teamConceededHome;\n      const sum = teamGoalsHome.reduce((a, b) => a + b, 0);\n      const sumTwo = teamConceededHome.reduce((a, b) => a + b, 0);\n      form.goalDifferenceHomeOrAway = sum - sumTwo;\n      forAndAgainstRollingAv = await predictGoalsWithExponentialSmoothing(\n        teamGoalsAll,\n        teamConceededAll,\n        alpha\n      );\n      forAndAgainstRollingAvHomeOrAway =\n        await predictGoalsWithExponentialSmoothing(\n          teamGoalsHome,\n          teamConceededHome,\n          beta\n        );\n      console.log(team);\n      console.log(teamGoalsAll);\n      console.log(teamConceededAll);\n      console.log(forAndAgainstRollingAv);\n    } else if (hOrA === \"away\") {\n      form.allGoalsArrayAway = teamGoalsAway;\n      form.allConceededArrayAway = teamConceededAway;\n      const sum = teamGoalsAway.reduce((a, b) => a + b, 0);\n      const sumTwo = teamConceededAway.reduce((a, b) => a + b, 0);\n      form.goalDifferenceHomeOrAway = sum - sumTwo;\n      forAndAgainstRollingAv = await predictGoalsWithExponentialSmoothing(\n        teamGoalsAll,\n        teamConceededAll,\n        alpha\n      );\n      forAndAgainstRollingAvHomeOrAway =\n        await predictGoalsWithExponentialSmoothing(\n          teamGoalsAway,\n          teamConceededAway,\n          beta\n        );\n      console.log(team);\n      console.log(teamGoalsAll);\n      console.log(teamConceededAll);\n      console.log(forAndAgainstRollingAv);\n    }\n\n    let bttsHome = reversedResultsHome.map((res) => res.btts);\n    if (bttsHome.length > 10) {\n      bttsHome = bttsHome.slice(-10);\n    }\n\n    let bttsAway = reversedResultsAway.map((res) => res.btts);\n    if (bttsAway.length > 10) {\n      bttsAway = bttsAway.slice(-10);\n    }\n\n    let bttsAll = allTeamResults.map((res) => res.btts);\n    if (bttsAll.length > 10) {\n      bttsAll = bttsAll.slice(-10);\n    }\n\n    const bttsHomeCount = bttsHome.filter((btts) => btts === true);\n    const bttsHomeString = `${bttsHomeCount.length}/${bttsHome.length}`;\n    const bttsHomePercentage = (bttsHomeCount.length / bttsHome.length) * 100;\n    const bttsAwayCount = bttsAway.filter((btts) => btts === true);\n    const bttsAwayString = `${bttsAwayCount.length}/${bttsAway.length}`;\n    const bttsAwayPercentage = (bttsAwayCount.length / bttsAway.length) * 100;\n    const bttsAllCount = bttsAll.filter((btts) => btts === true);\n    const bttsAllString = `${bttsAllCount.length}/${bttsAll.length}`;\n    const bttsAllPercentage = (bttsAllCount.length / bttsAll.length) * 100;\n\n    let r = 6;\n    let x = 4;\n\n    const teamGoalsHomeRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsHome,\n      teamGoalsHome.length < x ? teamGoalsHome.length : x\n    );\n\n    const teamGoalsAwayRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsAway,\n      teamGoalsAway.length < x ? teamGoalsAway.length : x\n    );\n\n    const teamGoalsAllRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsAll,\n      teamGoalsAll.length < r ? teamGoalsAll.length : r\n    );\n\n    const teamConceededHomeRollingAverage =\n      await predictNextWeightedMovingAverage(\n        teamConceededHome,\n        teamConceededHome.length < x ? teamConceededHome.length : x\n      );\n\n    const teamConceededAwayRollingAverage =\n      await predictNextWeightedMovingAverage(\n        teamConceededAway,\n        teamConceededAway.length < x ? teamConceededAway.length : x\n      );\n\n    const teamGoalsConceededAllRollingAverage =\n      await predictNextWeightedMovingAverage(\n        teamConceededAll,\n        teamConceededAll.length < r ? teamConceededAll.length : r\n      );\n\n    const sum = teamGoalsAll.reduce((a, b) => a + b, 0);\n    const avgScored = sum / teamGoalsAll.length || 0;\n\n    const last5 = teamGoalsAll.slice(4);\n    const last5Sum = last5.reduce((a, b) => a + b, 0);\n    const last5AvgScored = last5Sum / last5.length || 0;\n    const last10 = teamGoalsAll.slice(9);\n    const last10Sum = last10.reduce((a, b) => a + b, 0);\n    const last10AvgScored = last10Sum / last10.length || 0;\n    form.last5Goals = parseFloat(last5AvgScored.toFixed(2));\n    form.last10Goals = parseFloat(last10AvgScored.toFixed(2));\n\n    console.log(last5Sum);\n\n    const sumTwo = teamConceededAll.reduce((a, b) => a + b, 0);\n    const avgConceeded = sumTwo / teamConceededAll.length || 0;\n\n    form.allConceededArrayHome = teamConceededAll;\n    form.goalDifference = sum - sumTwo;\n\n\n// console.log(teamGoalsHomeRollingAverage)\n// console.log(teamGoalsAwayRollingAverage)\n// console.log(teamGoalsAllRollingAverage)\n// console.log(teamConceededHomeRollingAverage)\n// console.log(teamConceededAwayRollingAverage)\n// console.log(teamGoalsConceededAllRollingAverage)\n// console.log(averageOddsHome)\n// console.log(averageOddsAway)\n// console.log(avgScored)\n// console.log(avgConceeded)\n// console.log(bttsAllString)\n// console.log(bttsHomeString)\n// console.log(bttsAwayString)\n// console.log(bttsAllPercentage)\n// console.log(bttsHomePercentage)\n// console.log(bttsAwayPercentage)\n// console.log(forAndAgainstRollingAvHomeOrAway)\n// console.log(forAndAgainstRollingAv)\n\n    return [\n      teamGoalsHomeRollingAverage,\n      teamGoalsAwayRollingAverage,\n      teamGoalsAllRollingAverage,\n      teamConceededHomeRollingAverage,\n      teamConceededAwayRollingAverage,\n      teamGoalsConceededAllRollingAverage,\n      averageOddsHome,\n      averageOddsAway,\n      avgScored,\n      avgConceeded,\n      bttsAllString,\n      bttsHomeString,\n      bttsAwayString,\n      bttsAllPercentage,\n      bttsHomePercentage,\n      bttsAwayPercentage,\n      forAndAgainstRollingAvHomeOrAway,\n      forAndAgainstRollingAv,\n    ];\n  } else {\n    return null;\n  }\n}\n\nvar getEMA = (a, r) =>\n  a.reduce(\n    (p, n, i) =>\n      i\n        ? p.concat((2 * n) / (r + 1) + (p[p.length - 1] * (r - 1)) / (r + 1))\n        : p,\n    [a[0]]\n  );\n\nasync function predictNextWeightedMovingAverage(numbers, windowSize) {\n  const startIndex = numbers.length - windowSize;\n  const window = numbers.slice(startIndex);\n  const weights = Array.from(\n    { length: windowSize },\n    (_, i) => (i + 1) / ((windowSize * (windowSize + 1)) / 2)\n  );\n  const sum = window.reduce((acc, num, i) => acc + num * weights[i], 0);\n  const movingAverage = sum / weights.reduce((acc, w) => acc + w, 0);\n  return parseFloat(movingAverage.toFixed(2));\n}\n\n// Function to calculate the weighted average using exponential smoothing\nasync function calculateWeightedAverage(arr, alpha) {\n  let weightedSum = 0;\n  let totalWeight = 0;\n\n  for (let i = arr.length - 1; i >= 0; i--) {\n    const weight = Math.pow(1 - alpha, arr.length - 1 - i);\n    weightedSum += arr[i] * weight;\n    totalWeight += weight;\n  }\n\n  return weightedSum / totalWeight;\n}\n\n// Function to predict goals scored and conceded for a team with exponential smoothing\nasync function predictGoalsWithExponentialSmoothing(\n  teamGoalsFor,\n  teamGoalsAgainst,\n  alpha\n) {\n  const lambdaFor = await calculateWeightedAverage(teamGoalsFor, alpha);\n  const lambdaAgainst = await calculateWeightedAverage(teamGoalsAgainst, alpha);\n\n  // You can fine-tune these values based on your model and data\n  const predictedGoalsFor = lambdaFor;\n  const predictedGoalsAgainst = lambdaAgainst;\n\n  return {\n    goalsFor: predictedGoalsFor,\n    goalsAgainst: predictedGoalsAgainst,\n  };\n}\n\nexport async function compareStat(statOne, statTwo) {\n  let stat1 = parseFloat(statOne);\n  let stat2 = parseFloat(statTwo);\n  let statDiff;\n  // console.log( await normalizeValues(12, 2, 0, 1))\n  // console.log(await diff(1.8571428571428571, 1.14285714285714285))\n\n  if (statOne !== 0 && statTwo !== 0) {\n    const { normalizedValue1, normalizedValue2 } = await normalizeValues(\n      stat1,\n      stat2,\n      0,\n      1\n    );\n\n    const finalValue1 = normalizedValue1 + 1;\n    const finalValue2 = normalizedValue2 + 1;\n\n    console.log(`finalValue1 ${finalValue1}`);\n    console.log(`finalValue2 ${finalValue2}`);\n\n    statDiff = await diff(finalValue1, finalValue2);\n\n  } else {\n    statDiff = 0;\n  }\n\n  return statDiff;\n}\n\nexport async function getClinicalRating(form) {\n  let rating;\n  let score;\n  switch (true) {\n    case form.dangerousAttackConversion <= 15:\n      rating = \"excellent\";\n      score = 0.8;\n      break;\n\n    case form.dangerousAttackConversion > 15 &&\n      form.dangerousAttackConversion <= 20:\n      rating = \"great\";\n      score = 0.9;\n      break;\n\n    case form.dangerousAttackConversion > 20 &&\n      form.dangerousAttackConversion <= 25:\n      rating = \"very good\";\n      score = 0.95;\n      break;\n\n    case form.dangerousAttackConversion > 25 &&\n      form.dangerousAttackConversion <= 32.5:\n      rating = \"good\";\n      score = 0.98;\n      break;\n\n    case form.dangerousAttackConversion > 30 &&\n      form.dangerousAttackConversion <= 35:\n      rating = \"above average\";\n      score = 0.99;\n      break;\n\n    case form.dangerousAttackConversion > 35 &&\n      form.dangerousAttackConversion <= 40:\n      rating = \"average\";\n      score = 1;\n      break;\n\n    case form.dangerousAttackConversion > 40 &&\n      form.dangerousAttackConversion <= 45:\n      rating = \"below average\";\n      score = 1.01;\n      break;\n\n    case form.dangerousAttackConversion > 45 &&\n      form.dangerousAttackConversion <= 50:\n      rating = \"poor\";\n      score = 1.05;\n      break;\n\n    case form.dangerousAttackConversion > 50 &&\n      form.dangerousAttackConversion <= 55:\n      rating = \"very poor\";\n      score = 1.1;\n      break;\n\n    case form.dangerousAttackConversion > 55 &&\n      form.dangerousAttackConversion <= 60:\n      rating = \"terrible\";\n      score = 1.2;\n      break;\n\n    case form.dangerousAttackConversion > 60:\n      rating = \"awful\";\n      score = 1.3;\n      break;\n\n    default:\n      break;\n  }\n\n  return [rating, score];\n}\n\nexport async function getPointsDifferential(pointsHomeAvg, pointsAwayAvg) {\n  const differential = await diff(pointsHomeAvg, pointsAwayAvg);\n  return parseFloat(differential);\n}\n\nexport async function getPointWeighting(pointsDiff) {\n  let pointsDiffWeightingHome;\n  let pointsDiffWeightingAway;\n\n  switch (true) {\n    case pointsDiff >= 2.5:\n      pointsDiffWeightingHome = 0.3;\n      pointsDiffWeightingAway = -0.3;\n      break;\n    case pointsDiff >= 2 && pointsDiff < 2.5:\n      pointsDiffWeightingHome = 0.2;\n      pointsDiffWeightingAway = -0.2;\n      break;\n    case pointsDiff >= 1.5 && pointsDiff < 2:\n      pointsDiffWeightingHome = 0.15;\n      pointsDiffWeightingAway = -0.15;\n      break;\n    case pointsDiff >= 1 && pointsDiff < 1.5:\n      pointsDiffWeightingHome = 0.1;\n      pointsDiffWeightingAway = -0.1;\n      break;\n    case pointsDiff >= 0.5 && pointsDiff < 1:\n      pointsDiffWeightingHome = 0.05;\n      pointsDiffWeightingAway = -0.05;\n      break;\n    case pointsDiff > -0.5 && pointsDiff < 0.5:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n      break;\n    case pointsDiff <= -0.5 && pointsDiff > -1:\n      pointsDiffWeightingHome = -0.05;\n      pointsDiffWeightingAway = 0.05;\n      break;\n    case pointsDiff <= -1 && pointsDiff > -1.5:\n      pointsDiffWeightingHome = -0.1;\n      pointsDiffWeightingAway = 0.1;\n      break;\n    case pointsDiff <= -1.5 && pointsDiff > -2:\n      pointsDiffWeightingHome = -0.15;\n      pointsDiffWeightingAway = 0.15;\n      break;\n    case pointsDiff <= -2 && pointsDiff > -2.5:\n      pointsDiffWeightingHome = -0.2;\n      pointsDiffWeightingAway = 0.2;\n      break;\n    case pointsDiff <= -2.5:\n      pointsDiffWeightingHome = -0.3;\n      pointsDiffWeightingAway = 0.3;\n      break;\n    default:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n  }\n  return [pointsDiffWeightingHome, pointsDiffWeightingAway];\n}\n\nexport async function compareFormTrend(recentForm, distantForm) {\n  let score;\n  let scoreTotal = 0;\n\n  for (let index = 0; index < recentForm.length; index++) {\n    const recent = recentForm[index];\n    const distant = distantForm[index];\n\n    if (recent > distant) {\n      score = 1.05;\n    } else if (recent === distant) {\n      score = 1;\n    } else if (recent < distant) {\n      score = 0.95;\n    }\n    scoreTotal = scoreTotal + score / recentForm.length;\n  }\n\n  return scoreTotal;\n}\n\nexport async function getPointAverage(pointTotal, games) {\n  return pointTotal / games;\n}\n\nasync function getOddsMultiplier(odds, team) {\n  let multiplier;\n  switch (true) {\n    case odds <= 1.2:\n      multiplier = 1.4;\n      break;\n    case odds <= 1.4:\n      multiplier = 1.3;\n      break;\n    case odds <= 1.6:\n      multiplier = 1.2;\n      break;\n    case odds <= 1.8:\n      multiplier = 1.1;\n      break;\n    case odds < 2:\n      multiplier = 1.05;\n      break;\n\n    // case odds <= 3.5 && odds > 3:\n    //   multiplier = 0.975;\n    //   break;\n    // case odds > 3.5 && odds <= 4:\n    //   multiplier = 0.95;\n    //   break;\n    // case odds > 4 && odds <= 4.5:\n    //   multiplier = 0.9;\n    //   break;\n    // case odds > 4.5 && odds <= 5:\n    //   multiplier = 0.8;\n    //   break;\n    //   case odds > 5:\n    //     multiplier = 0.7;\n    //     break;\n    default:\n      multiplier = 1;\n      break;\n  }\n\n  return multiplier;\n}\n\nasync function poissonDistribution(lambda, k) {\n  const numerator = Math.exp(-lambda) * Math.pow(lambda, k);\n  const denominator = factorial(k);\n  return numerator / denominator;\n}\n\nfunction factorial(n) {\n  if (n === 0 || n === 1) {\n    return 1;\n  }\n  let result = 1;\n  for (let i = 2; i <= n; i++) {\n    result *= i;\n  }\n  return result;\n}\n\nasync function calculateAverageGoals(goalsFor) {\n  const totalGoals = goalsFor.reduce((sum, goals) => sum + goals, 0);\n  return totalGoals / goalsFor.length;\n}\n\nasync function adjustGoalsAvg(goalsAvg, strengthRatio) {\n  return goalsAvg * strengthRatio;\n}\n\nasync function predictScore(\n  goalsForTeam1,\n  goalsAgainstTeam1,\n  goalsForTeam2,\n  goalsAgainstTeam2,\n  team1Metrics,\n  team2Metrics,\n  game\n) {\n  let team1AverageGoalsFor = await calculateAverageGoals(goalsForTeam1);\n  let team1AverageGoalsAgainst = await calculateAverageGoals(goalsAgainstTeam1);\n  let team2AverageGoalsFor = await calculateAverageGoals(goalsForTeam2);\n  let team2AverageGoalsAgainst = await calculateAverageGoals(goalsAgainstTeam2);\n\n  let team1StrengthRatio = team1Metrics.weighting / 2;\n  let team2StrengthRatio = team2Metrics.weighting / 2;\n\n  let adjustedTeam1AverageGoals = await adjustGoalsAvg(\n    team1AverageGoalsFor,\n    team1StrengthRatio\n  );\n  let adjustedTeam2AverageGoals = await adjustGoalsAvg(\n    team2AverageGoalsFor,\n    team2StrengthRatio\n  );\n\n  let adjustedTeam1AverageGoalsAgainst = await adjustGoalsAvg(\n    team1AverageGoalsAgainst,\n    team2StrengthRatio\n  );\n  let adjustedTeam2AverageGoalsAgainst = await adjustGoalsAvg(\n    team2AverageGoalsAgainst,\n    team1StrengthRatio\n  );\n\n  let maxGoals = 5; // Set the maximum number of goals to predict\n\n  const scores = [];\n\n  for (let i = 0; i <= maxGoals; i++) {\n    for (let j = 0; j <= maxGoals; j++) {\n      let team1GoalExpectation =\n        adjustedTeam1AverageGoals *\n        (adjustedTeam2AverageGoalsAgainst / adjustedTeam1AverageGoalsAgainst);\n      let team2GoalExpectation =\n        adjustedTeam2AverageGoals *\n        (adjustedTeam1AverageGoalsAgainst / adjustedTeam2AverageGoalsAgainst);\n\n      if (!isFinite(team1GoalExpectation)) {\n        team1GoalExpectation = 0;\n      }\n\n      if (!isFinite(team2GoalExpectation)) {\n        team2GoalExpectation = 0;\n      }\n\n      const probability =\n        (await poissonDistribution(team1GoalExpectation, i)) *\n        (await poissonDistribution(team2GoalExpectation, j));\n      scores.push({\n        team1Score: i,\n        team2Score: j,\n        probability,\n      });\n    }\n  }\n\n  scores.sort((a, b) => b.probability - a.probability); // Sort scores in descending order by probability\n  const top5Scores = scores.slice(0, 5); // Get the top 5 scores\n\n  console.log(game);\n  console.log(\"Top 5 Score Predictions:\");\n\n  for (const score of top5Scores) {\n    console.log(\n      `Team 1: ${score.team1Score} - Team 2: ${score.team2Score} (${(\n        score.probability * 100\n      ).toFixed(2)}%)`\n    );\n  }\n  return top5Scores;\n}\n\n\nasync function normalizeValues(value1, value2, minRange, maxRange) {\n  if (\n    typeof value1 !== \"number\" ||\n    typeof value2 !== \"number\" ||\n    typeof minRange !== \"number\" ||\n    typeof maxRange !== \"number\"\n  ) {\n    throw new Error(\"All arguments must be numbers.\");\n  }\n\n  // Calculate the absolute values of the inputs\n  const absValue1 = Math.abs(value1);\n  const absValue2 = Math.abs(value2);\n\n  // Calculate the total sum of the absolute values\n  const totalAbs = absValue1 + absValue2;\n\n  // Calculate the normalized values based on the ratio of absolute values\n  const normalizedAbsValue1 =\n    (absValue1 / totalAbs) * (maxRange - minRange) + minRange;\n  const normalizedAbsValue2 =\n    (absValue2 / totalAbs) * (maxRange - minRange) + minRange;\n\n  // Adjust the signs of the normalized values based on the original values\n  const normalizedValue1 =\n    value1 >= 0 ? normalizedAbsValue1 : -normalizedAbsValue1;\n  const normalizedValue2 =\n    value2 >= 0 ? normalizedAbsValue2 : -normalizedAbsValue2;\n\n  return { normalizedValue1, normalizedValue2 };\n}\n\nexport async function compareTeams(homeForm, awayForm, match) {\n  let homeAttackStrength = homeForm.attackingStrength;\n  let homeDefenceStrength = homeForm.defensiveStrength;\n  let homePossessionStrength = homeForm.possessionStrength;\n  let awayAttackStrength = awayForm.attackingStrength;\n  let awayDefenceStrength = awayForm.defensiveStrength;\n  let awayPossessionStrength = awayForm.possessionStrength;\n\n  let homeXGtoActualDiffStrength = await getXGtoActualDifferentialStrength(\n    parseFloat(homeForm.actualToXGDifference)\n  );\n\n  let awayXGtoActualDiffStrength = await getXGtoActualDifferentialStrength(\n    parseFloat(awayForm.actualToXGDifference)\n  );\n\n  const attackStrengthComparison = await compareStat(\n    homeAttackStrength,\n    awayAttackStrength\n  );\n\n  const defenceStrengthComparison = await compareStat(\n    homeDefenceStrength,\n    awayDefenceStrength\n  );\n\n  const possessiontrengthComparison = await compareStat(\n    homePossessionStrength,\n    awayPossessionStrength\n  );\n\n  const xgActualComparison = await compareStat(\n    homeXGtoActualDiffStrength,\n    awayXGtoActualDiffStrength\n  );\n\n  const xgAgainstComparison = await compareStat(\n    homeForm.xgAgainstStrength,\n    awayForm.xgAgainstStrength\n  );\n\n  const homeAwayPointAverageComparison = await compareStat(\n    homeForm.homeOrAwayAverage,\n    awayForm.homeOrAwayAverage\n  );\n\n  const fiveGameComparison = await compareStat(\n    homeForm.last5Points,\n    awayForm.last5Points\n  );\n\n  const oddsComparison = await compareStat(match.awayOdds, match.homeOdds);\n\n  const homeAdvantage = await compareStat(parseFloat(homeForm.homeAttackAdvantage) / 2, 1);\n\n\n  const dangerousAttacksWithConverstionComparison = await compareStat(\n    homeForm.AverageDangerousAttacksOverall *\n      homeForm.dangerousAttackConversion,\n    awayForm.AverageDangerousAttacksOverall * awayForm.dangerousAttackConversion\n  );\n\n  const goalDiffHomeOrAwayComparison = await compareStat(\n    homeForm.goalDifferenceHomeOrAway,\n    awayForm.goalDifferenceHomeOrAway\n  );\n\n  // console.log(match.game)\n  // console.log(attackStrengthComparison)\n  // console.log(defenceStrengthComparison)\n  // console.log(possessiontrengthComparison)\n  // console.log(homeAwayPointAverageComparison)\n  // console.log(goalDiffHomeOrAwayComparison)\n  // console.log(xgActualComparison)\n  // console.log(oddsComparison)\n  // console.log(dangerousAttacksWithConverstionComparison)\n\n\n  let calculation =\n    attackStrengthComparison * 2 +\n    defenceStrengthComparison * 2 +\n    possessiontrengthComparison * 2 +\n    // xgToActualDiffComparison * 1 +\n    // // xgForStrengthRecentComparison * 1 +\n    // // xgAgainstStrengthRecentComparison * 1 +\n    homeAwayPointAverageComparison * 1 +\n    goalDiffHomeOrAwayComparison * 0.5 +\n    xgActualComparison * 1 +\n    // xgForComparison * 1 +\n    // xgAgainstComparison * 1 +\n    oddsComparison * 1 +\n    dangerousAttacksWithConverstionComparison * 1 +\n    homeAdvantage * 1 +\n    fiveGameComparison * 0;\n\n  let homeWinOutcomeProbability =\n    match.homeTeamWinPercentage + match.awayTeamLossPercentage;\n  let awayWinOutcomeProbability =\n    match.homeTeamLossPercentage + match.awayTeamWinPercentage;\n  let drawOutcomeProbability =\n    match.homeTeamDrawPercentage + match.awayTeamDrawPercentage;\n\n\n  if (\n    drawOutcomeProbability > homeWinOutcomeProbability &&\n    drawOutcomeProbability > awayWinOutcomeProbability\n  ) {\n    switch (true) {\n      case drawOutcomeProbability > 100:\n        calculation = calculation / 2;\n        break;\n      default:\n        calculation = calculation * 1;\n        break;\n    }\n  } else {\n    calculation = calculation * 1;\n  }\n\n\n  if (calculation > 0) {\n    if (\n      homeForm.lastGame === \"L\" ||\n      homeForm.last2Points < 2 ||\n      awayForm.last2Points >= 4 ||\n      match.XGdifferentialValueRaw < 0\n    ) {\n      calculation = calculation / 3;\n    }\n  } else if (calculation < 0) {\n    if (\n      awayForm.lastGame === \"L\" ||\n      awayForm.last2Points < 2 ||\n      homeForm.last2Points >= 4 ||\n      match.XGdifferentialValueRaw > 0\n    ) {\n      calculation = calculation / 3;\n    }\n  }\n\n  if (homeForm.averageOddsHome !== null || awayForm.averageOddsAway !== null) {\n    if (calculation > 0 && homeForm.averageOddsHome < match.homeOdds) {\n      calculation = calculation / 1.5;\n    }\n    else if (\n      calculation > 0 &&\n      homeForm.averageOddsHome > match.homeOdds * 1.5\n    ) {\n      calculation = calculation * 1.25;\n    }\n    else {\n      calculation = calculation * 1;\n    }\n\n    if (calculation < 0 && awayForm.averageOddsAway < match.awayOdds) {\n      calculation = calculation / 1.5;\n    }\n    else if (\n      calculation < 0 &&\n      awayForm.averageOddsAway > match.awayOdds * 1.5\n    ) {\n      calculation = calculation * 1.25;\n    }\n    else {\n      calculation = calculation * 1;\n    }\n  }\n  return calculation;\n}\n\nexport async function roundCustom(num, form, otherForm) {\n  let wholeNumber = Math.floor(num);\n  let remainder = num - wholeNumber;\n  const DAConversion = form.AverageDangerousAttacksOverall *\n  form.dangerousAttackConversion\n\n  \nif(DAConversion >= 200){\n  return Math.ceil(num);\n} else {\n  return Math.floor(num);\n}\n  \n\n  // if (remainder > 0.9 && form.clinicalScore < 0.95) {\n  //   return Math.ceil(num);\n  // } else {\n  // }\n\n  // if (remainder > 0.5) {\n  //   return Math.ceil(num);\n  // } else {\n  //   return Math.floor(num);\n  // }\n}\n\n//Calculates scores based on prior XG figures, weighted by odds\nlet i = 0;\nexport async function calculateScore(match, index, divider, calculate) {\n  i++;\n\n  let teams;\n\n  if (\n    calculate === true &&\n    allForm.find(\n      (game) =>\n        game.home.teamName === match.homeTeam &&\n        game.away.teamName === match.awayTeam\n    )\n  ) {\n    teams = [\n      allForm.find((game) => game.home.teamName === match.homeTeam).home,\n      allForm.find((game) => game.away.teamName === match.awayTeam).away,\n    ];\n  } else {\n    calculate = false;\n  }\n\n  let formHome;\n  let formAway;\n\n  if (calculate) {\n    for (let i = 0; i < teams.length; i++) {\n      if (teams[0][index].PlayedHome <= 1 || teams[1][index].PlayedAway <= 1) {\n        index = 2;\n        divider = 10;\n      }\n\n      teams[i][index].lastGame = teams[i][index].LastFiveForm[4];\n      teams[i][index].previousToLastGame = teams[i][index].LastFiveForm[3];\n\n      let last2 = [\n        teams[i][index].lastGame,\n        teams[i][index].previousToLastGame,\n      ];\n\n      teams[i][index].last5Points = getPointsFromLastX(\n        teams[i][index].LastFiveForm\n      );\n\n      teams[i][index].last6Points = getPointsFromLastX(\n        teams[i][index].LastSixForm\n      );\n\n      teams[i][index].last10Points = getPointsFromLastX(\n        teams[i][index].LastTenForm\n      );\n\n      teams[i][index].last2Points = getPointsFromLastX(last2);\n\n      teams[i][index].twoGameAverage = await getPointAverage(\n        teams[i][index].last2Points,\n        2\n      );\n      teams[i][index].threeGameAverage = await getPointAverage(\n        teams[i][index].last3Points,\n        3\n      );\n      teams[i][index].fiveGameAverage = await getPointAverage(\n        teams[i][index].last5Points,\n        5\n      );\n      teams[i][index].sixGameAverage = await getPointAverage(\n        teams[i][index].last6Points,\n        6\n      );\n      teams[i][index].tenGameAverage = await getPointAverage(\n        teams[i][index].last10Points,\n        10\n      );\n\n      if (teams[i][index].formRun) {\n        teams[i][index].lastHomeOrAwayPoints = getPointsFromLastX(\n          teams[i][index].formRun\n        );\n\n        teams[i][index].homeOrAwayAverage = await getPointAverage(\n          teams[i][index].lastHomeOrAwayPoints,\n          teams[i][index].formRun.length\n        );\n      }\n\n      teams[i][0].ScoredAverage = teams[i][0].ScoredOverall / 5;\n      teams[i][1].ScoredAverage = teams[i][1].ScoredOverall / 6;\n      teams[i][2].ScoredAverage = teams[i][2].ScoredOverall / 10;\n\n      teams[i][0].ConcededAverage = teams[i][0].ConcededOverall / 5;\n      teams[i][1].ConcededAverage = teams[i][1].ConcededOverall / 6;\n      teams[i][2].ConcededAverage = teams[i][2].ConcededOverall / 10;\n\n      if (teams[i][1].ScoredAverage === 0) {\n        teams[i][1].ScoredAverage = teams[i][index].ScoredOverall / 10;\n        teams[i][1].ScoredOverall = teams[i][2].ScoredOverall / 2;\n      }\n\n      if (teams[i][1].ConcededAverage === 0) {\n        teams[i][1].ConcededAverage = teams[i][index].ConcededOverall / 10;\n        teams[i][1].ConcededOverall = teams[i][2].ConcededOverall / 2;\n      }\n\n      teams[i][index].ScoredAverageShortTerm = teams[i][0].ScoredOverall / 5;\n      teams[i][index].ConcededAverageShortTerm =\n        teams[i][0].ConcededOverall / 5;\n\n      teams[i][index].longTermAverageGoals = teams[i][2].ScoredOverall / 10;\n      teams[i][index].longTermAverageConceeded =\n        teams[i][2].ConcededOverall / 10;\n\n      match.GoalsInGamesAverageHome =\n        teams[0][0].ScoredAverage + teams[0][0].ConcededAverage;\n\n      match.GoalsInGamesAverageAway =\n        teams[1][0].ScoredAverage + teams[1][0].ConcededAverage;\n\n      let recentGoalDiff =\n        teams[i][index].ScoredAverageShortTerm -\n        teams[i][index].ConcededAverageShortTerm;\n      let distantGoalDiff =\n        teams[i][index].longTermAverageGoals -\n        teams[i][index].longTermAverageConceeded;\n\n      let recentDA = teams[i][0].AverageDangerousAttacksOverall;\n      let distantDA = teams[i][2].AverageDangerousAttacksOverall;\n\n      let recentPosession = teams[i][0].AveragePossessionOverall;\n      let distantPosession = teams[i][2].AveragePossessionOverall;\n\n      let recentCleanSheet = teams[i][0].CleanSheetPercentage;\n      let distantCleanSheet = teams[i][2].CleanSheetPercentage;\n\n      let recentFormArray = [\n        recentGoalDiff,\n        recentDA,\n        recentPosession,\n        recentCleanSheet,\n      ];\n      let distantFormArray = [\n        distantGoalDiff,\n        distantDA,\n        distantPosession,\n        distantCleanSheet,\n      ];\n\n      teams[i][index].formTrendScore = await compareFormTrend(\n        recentFormArray,\n        distantFormArray\n      );\n\n      teams[i][index].expectedGoals = parseFloat(teams[i][index].XG);\n\n      teams[i][index].ScoredAverageShortAndLongTerm =\n        (teams[i][index].ScoredOverall / 10 +\n          teams[i][index].ScoredAverageShortTerm) /\n        2;\n\n      teams[i][index].conceededAverageShortAndLongTerm =\n        (teams[i][index].ConcededOverall / 10 +\n          teams[i][index].ConcededAverageShortTerm) /\n        2;\n\n      teams[i][index].longTermGoalDifference =\n        teams[i][2].ScoredAverage - teams[i][2].ConcededAverage;\n\n      teams[i][index].shortTermGoalDifference =\n        teams[i][0].ScoredAverage - teams[i][0].ConcededAverage;\n\n      teams[i][index].XGdifferential = await diff(\n        teams[i][index].XGOverall,\n        teams[i][index].XGAgainstAvgOverall\n      );\n\n      teams[i][index].XGdifferentialRecent = await diff(\n        teams[i][0].XGOverall,\n        teams[i][0].XGAgainstAvgOverall\n      );\n\n      teams[i][index].actualToXGDifference = await diff(\n        teams[i][index].XGdifferential,\n        teams[i][index].goalDifference\n      );\n\n      teams[i][index].actualToXGDifferenceRecent = await diff(\n        teams[i][index].shortTermGoalDifference,\n        teams[i][index].XGdifferentialRecent\n      );\n\n      if (\n        teams[i][0].XGOverall > teams[i][2].XGOverall &&\n        teams[i][0].XGAgainstAvgOverall < teams[i][2].XGAgainstAvgOverall\n      ) {\n        teams[i][index].improving = true;\n      }\n\n      if (\n        teams[i][0].XGOverall < teams[i][2].XGOverall &&\n        teams[i][0].XGAgainstAvgOverall > teams[i][2].XGAgainstAvgOverall\n      ) {\n        teams[i][index].improving = false;\n      }\n    }\n\n    homeOdds = match.homeOdds;\n    awayOdds = match.awayOdds;\n\n    formHome = teams[0][index];\n    formAway = teams[1][index];\n\n    let formHomeRecent = teams[0][1];\n    let formAwayRecent = teams[1][1];\n\n    let homeTenGameAvg = formHome.last10Points / 10;\n    let awayTenGameAvg = formAway.last10Points / 10;\n\n    let homeTwoGameAvg = formHome.last2Points / 2;\n    let awayTwoGameAvg = formAway.last2Points / 2;\n\n    let pointsDiff10 = await getPointsDifferential(\n      homeTenGameAvg,\n      awayTenGameAvg\n    );\n\n    let pointsDiff2 = await getPointsDifferential(\n      homeTwoGameAvg,\n      awayTwoGameAvg\n    );\n\n    let [last10WeightingHome, last10WeightingAway] = await getPointWeighting(\n      pointsDiff10\n    );\n\n    let [last2WeightingHome, last2WeightingAway] = await getPointWeighting(\n      pointsDiff2\n    );\n\n    formHome.dangerousAttackConversion =\n      (formHome.ScoredAverageShortAndLongTerm /\n        formHome.AverageDangerousAttacks) *\n      100;\n    formAway.dangerousAttackConversion =\n      (formAway.ScoredAverageShortAndLongTerm /\n        formAway.AverageDangerousAttacks) *\n      100;\n\n    [formHome.clinicalRating, formHome.clinicalScore] = await getClinicalRating(\n      formHome\n    );\n    [formAway.clinicalRating, formAway.clinicalScore] = await getClinicalRating(\n      formAway\n    );\n\n    let XGdifferential = await diff(\n      formHome.XGdifferential,\n      formAway.XGdifferential\n    );\n\n    match.XGdifferentialValue = Math.abs(XGdifferential);\n    match.XGdifferentialValueRaw = parseFloat(XGdifferential);\n\n    if (\n      allLeagueResultsArrayOfObjects[match.leagueIndex].fixtures.length > 50 &&\n      match.leagueID !== 7956\n    ) {\n      [\n        formHome.predictedGoalsBasedOnHomeAv,\n        formHome.predictedGoalsBasedOnAwayAv,\n        formHome.allTeamGoalsBasedOnAverages,\n        formHome.predictedGoalsConceededBasedOnHomeAv,\n        formHome.predictedGoalsConceededBasedOnAwayAv,\n        formHome.allTeamGoalsConceededBasedOnAverages,\n        formHome.averageOddsHome,\n        formHome.averageOddsAway,\n        formHome.averageScoredLeague,\n        formHome.averageConceededLeague,\n        formHome.last10btts,\n        formHome.last10bttsHome,\n        formHome.last10bttsAway,\n        match.bttsAllPercentageHome,\n        match.bttsPercentageHomeHome,\n        match.bttsPercentageHomeAway,\n        formHome.forAndAgainstRollingAv,\n        formHome.forAndAgainstRollingAvHomeOrAway,\n      ] = await getPastLeagueResults(match.homeTeam, match, \"home\", formHome);\n\n      [\n        formAway.predictedGoalsBasedOnHomeAv,\n        formAway.predictedGoalsBasedOnAwayAv,\n        formAway.allTeamGoalsBasedOnAverages,\n        formAway.predictedGoalsConceededBasedOnHomeAv,\n        formAway.predictedGoalsConceededBasedOnAwayAv,\n        formAway.allTeamGoalsConceededBasedOnAverages,\n        formAway.averageOddsHome,\n        formAway.averageOddsAway,\n        formAway.averageScoredLeague,\n        formAway.averageConceededLeague,\n        formAway.last10btts,\n        formAway.last10bttsHome,\n        formAway.last10bttsAway,\n        match.bttsAllPercentageAway,\n        match.bttsPercentageAwayHome,\n        match.bttsPercentageAwayAway,\n        formAway.forAndAgainstRollingAv,\n        formAway.forAndAgainstRollingAvHomeOrAway,\n      ] = await getPastLeagueResults(match.awayTeam, match, \"away\", formAway);\n    } else {\n      formHome.predictedGoalsBasedOnHomeAv = formHome.ScoredAverage;\n      formHome.predictedGoalsBasedOnAwayAv = formHome.ConcededAverage;\n      formHome.allTeamGoalsBasedOnAverages = formHome.ScoredAverage;\n      formHome.forAndAgainstRollingAv = {\n        goalsFor: formHome.ScoredAverage,\n        goalsAgainst: formHome.ConcededAverage,\n      };\n      formHome.forAndAgainstRollingAvHomeOrAway = {\n        goalsFor: formHome.ScoredAverage,\n        goalsAgainst: formHome.ConcededAverage,\n      };\n      formHome.predictedGoalsConceededBasedOnHomeAv = formHome.ConcededAverage;\n      formHome.predictedGoalsConceededBasedOnAwayAv = formHome.ConcededAverage;\n      formHome.allTeamGoalsConceededBasedOnAverages = formHome.ConcededAverage;\n      formHome.averageOddsHome = null;\n      formHome.averageOddsAway = null;\n      formHome.averageScoredLeague = null;\n      formHome.averageConceededLeague = null;\n      formHome.goalDifference =\n        formHome.ScoredOverall - formHome.ConcededOverall;\n      formHome.goalDifferenceHomeOrAway =\n        formHome.ScoredOverall - formHome.ConcededOverall;\n      formHome.last10btts = null;\n      formHome.last10bttsHome = null;\n      formHome.last10bttsAway = null;\n      match.bttsAllPercentageHome = null;\n      match.bttsPercentageHomeHome = null;\n      match.bttsPercentageHomeAway = null;\n      formAway.predictedGoalsBasedOnHomeAv = formAway.ScoredAverage;\n      formAway.predictedGoalsBasedOnAwayAv = formAway.ConcededAverage;\n      formAway.allTeamGoalsBasedOnAverages = formAway.ScoredAverage;\n      formAway.forAndAgainstRollingAv = {\n        goalsFor: formAway.ScoredAverage,\n        goalsAgainst: formAway.ConcededAverage,\n      };\n      formAway.forAndAgainstRollingAvHomeOrAway = {\n        goalsFor: formAway.ScoredAverage,\n        goalsAgainst: formAway.ConcededAverage,\n      };\n      formAway.predictedGoalsConceededBasedOnHomeAv = formAway.ConcededAverage;\n      formAway.predictedGoalsConceededBasedOnAwayAv = formAway.ConcededAverage;\n      formAway.allTeamGoalsConceededBasedOnAverages = formAway.ConcededAverage;\n      formAway.averageOddsHome = null;\n      formAway.averageOddsAway = null;\n      formAway.averageScoredLeague = null;\n      formAway.averageConceededLeague = null;\n      formAway.goalDifference =\n        formAway.ScoredOverall - formAway.ConcededOverall;\n      formAway.goalDifferenceHomeOrAway =\n        formAway.ScoredOverall - formAway.ConcededOverall;\n\n      formAway.last10btts = null;\n      formAway.last10bttsHome = null;\n      formAway.last10bttsAway = null;\n      match.bttsAllPercentageAway = null;\n      match.bttsPercentageAwayHome = null;\n      match.bttsPercentageAwayAway = null;\n    }\n\n    if (\n      typeof formHome.homeTeamHomePositionRaw === \"number\" &&\n      typeof formAway.awayTeamAwayPositionRaw === \"number\"\n    ) {\n      formHome.homePositionHomeOnly = parseFloat(\n        formHome.homeTeamHomePositionRaw\n      );\n      formAway.awayPositionAwayOnly = parseFloat(\n        formAway.awayTeamAwayPositionRaw\n      );\n      formHome.homePosition = parseFloat(formHome.homeRawPosition);\n      formAway.awayPosition = parseFloat(formAway.awayRawPosition);\n    } else {\n      formHome.homePositionHomeOnly = \"N/A\";\n      formAway.awayPositionAwayOnly = \"N/A\";\n      formHome.homePosition = \"N/A\";\n      formAway.awayPosition = \"N/A\";\n    }\n\n    formHome.AttackingPotency = (formHome.XG / formHome.AttacksHome) * 100;\n    formAway.AttackingPotency = (formAway.XG / formAway.AttacksAverage) * 100;\n\n    let teamComparisonScore;\n\n    const attackingMetricsHome = {\n      averagePossession: formHome.AveragePossession,\n      averageDangerousAttacks: formHome.AverageDangerousAttacksOverall,\n      averageShots: formHome.AverageShots,\n      averageShotsOnTarget: formHome.AverageShotsOnTarget,\n      averageExpectedGoals: formHome.XGOverall,\n      recentXG: formHome.XGlast5 ? formHome.XGlast5 : formHome.XGOverall,\n      averageGoals:\n        formHome.averageScoredLeague !== null\n          ? formHome.averageScoredLeague\n          : formHome.ScoredAverage,\n    };\n    const attackingMetricsAway = {\n      averagePossession: formAway.AveragePossession,\n      averageDangerousAttacks: formAway.AverageDangerousAttacksOverall,\n      averageShots: formAway.AverageShots,\n      averageShotsOnTarget: formAway.AverageShotsOnTarget,\n      averageExpectedGoals: formAway.XGOverall,\n      recentXG: formAway.XGlast5 ? formAway.XGlast5 : formAway.XGOverall,\n      averageGoals:\n        formAway.averageScoredLeague !== null\n          ? formAway.averageScoredLeague\n          : formAway.ScoredAverage,\n    };\n\n    const defensiveMetricsHome = {\n      CleanSheetPercentage: 100 - formHome.CleanSheetPercentage,\n      averageExpectedGoalsAgainst: formHome.XGAgainstAvgOverall,\n      recentXGAgainst: formHome.XGAgainstlast5 ? formHome.XGAgainstlast5 : formHome.XGAgainstAvgOverall,\n      averageGoalsAgainst:\n        formHome.averageConceededLeague !== null\n          ? formHome.averageConceededLeague\n          : formHome.ConcededAverage,\n    };\n\n    const defensiveMetricsAway = {\n      CleanSheetPercentage: 100 - formAway.CleanSheetPercentage,\n      averageExpectedGoalsAgainst: formAway.XGAgainstAvgOverall,\n      recentXGAgainst: formAway.XGAgainstlast5 ? formAway.XGAgainstlast5 : formAway.XGAgainstAvgOverall,\n      averageGoalsAgainst:\n        formAway.averageConceededLeague !== null\n          ? formAway.averageConceededLeague\n          : formAway.ConcededAverage,\n    };\n\n    formHome.attackingStrength = await calculateAttackingStrength(\n      attackingMetricsHome\n    );\n    formAway.attackingStrength = await calculateAttackingStrength(\n      attackingMetricsAway\n    );\n    formHome.defensiveStrength = await calculateDefensiveStrength(\n      defensiveMetricsHome\n    );\n    formAway.defensiveStrength = await calculateDefensiveStrength(\n      defensiveMetricsAway\n    );\n\n    formHome.possessionStrength = await calculateMetricStrength(\n      \"averagePossession\",\n      formHome.AveragePossessionOverall\n    );\n    formHome.xgForStrength = await calculateMetricStrength(\n      \"xgFor\",\n      formHome.XGOverall\n    );\n    formHome.xgAgainstStrength = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formHome.XGAgainstAvgOverall\n    );\n\n    formAway.possessionStrength = await calculateMetricStrength(\n      \"averagePossession\",\n      formAway.AveragePossessionOverall\n    );\n    formAway.xgForStrength = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.XGOverall\n    );\n    formAway.xgAgainstStrength = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formAway.XGAgainstAvgOverall\n    );\n\n    teamComparisonScore = await compareTeams(formHome, formAway, match);\n\n    if (teamComparisonScore < 0) {\n      formHome.teamStrengthWeighting = 1 + teamComparisonScore / 10;\n      formAway.teamStrengthWeighting = 1 - teamComparisonScore / 10;\n      console.log(`teamComparisonScore : ${teamComparisonScore}`)\n      console.log(`formHome.teamStrengthWeighting : ${formHome.teamStrengthWeighting}`)\n      console.log(`formAway.teamStrengthWeighting : ${formAway.teamStrengthWeighting}`)\n\n    } else if (teamComparisonScore >= 0) {\n      formHome.teamStrengthWeighting = 1 + teamComparisonScore / 10;\n      formAway.teamStrengthWeighting = 1 - teamComparisonScore / 10;\n      console.log(`teamComparisonScore : ${teamComparisonScore}`)\n      console.log(`formHome.teamStrengthWeighting : ${formHome.teamStrengthWeighting}`)\n      console.log(`formAway.teamStrengthWeighting : ${formAway.teamStrengthWeighting}`)\n    }\n\n    teamComparisonScore = teamComparisonScore * 0.4;\n    // teamComparisonScore = 0;\n\n    if (teamComparisonScore > 0.5) {\n      teamComparisonScore = 0.5;\n    } else if (teamComparisonScore < -0.5) {\n      teamComparisonScore = -0.5;\n    }\n    match.teamComparisonScore = teamComparisonScore.toFixed(2);\n    // match.goalWeighting = 1 + parseFloat(match.teamComparisonScore)\n\n    let team1Metrics = {\n      weighting: formHome.teamStrengthWeighting,\n      // Add other relevant metrics here\n    };\n\n    let team2Metrics = {\n      weighting: formAway.teamStrengthWeighting,\n      // Add other relevant metrics here\n    };\n\n    // pass arrays of league goals and conceeded\n    let scorePredictions;\n    if (\n      formHome.allConceededArrayHome !== undefined &&\n      formAway.allConceededArrayAway !== undefined\n    ) {\n      scorePredictions = await predictScore(\n        formHome.allGoalsArrayHome,\n        formHome.allConceededArrayHome,\n        formAway.allGoalsArrayAway,\n        formAway.allConceededArrayAway,\n        team1Metrics,\n        team2Metrics,\n        match.game\n      );\n    }\n\n    let finalHomeGoals;\n    let finalAwayGoals;\n\n    const homeGoalDiff =\n      formHome.ScoredAverageShortAndLongTerm -\n      formHome.conceededAverageShortAndLongTerm;\n    const awayGoalDiff =\n      formAway.ScoredAverageShortAndLongTerm -\n      formAway.conceededAverageShortAndLongTerm;\n\n    formHome.goalsDifferential =\n      parseFloat(await diff(homeGoalDiff, awayGoalDiff)) / 1;\n    formAway.goalsDifferential =\n      parseFloat(await diff(awayGoalDiff, homeGoalDiff)) / 1;\n\n    formHome.rollingAverageGoalsDifferential = parseFloat(\n      formHome.allTeamGoalsBasedOnAverages -\n        formHome.allTeamGoalsConceededBasedOnAverages\n    );\n    formAway.rollingAverageGoalsDifferential = parseFloat(\n      formAway.allTeamGoalsBasedOnAverages -\n        formAway.allTeamGoalsConceededBasedOnAverages\n    );\n\n    let goalCalcHomeShortTerm =\n      (formHome.ScoredAverageShortTerm + formAway.ConcededAverageShortTerm) / 2;\n    let goalCalcAwayShortTerm =\n      (formAway.ScoredAverageShortTerm + formHome.ConcededAverageShortTerm) / 2;\n\n    let homeLeagueOrAllFormAverageGoals =\n      formHome.LeagueAverageGoals !== undefined\n        ? (formHome.LeagueAverageGoals + formAway.LeagueAverageConceded) / 2\n        : goalCalcHomeShortTerm;\n    let awayLeagueOrAllFormAverageGoals =\n      formAway.LeagueAverageGoals !== undefined\n        ? (formAway.LeagueAverageGoals + formHome.LeagueAverageConceded) / 2\n        : goalCalcAwayShortTerm;\n\n    let factorOneHome;\n    let factorOneAway;\n\n\n    factorOneHome =\n      (homeLeagueOrAllFormAverageGoals * 1 +\n        formHome.forAndAgainstRollingAvHomeOrAway.goalsFor * 0.5 +\n        formAway.forAndAgainstRollingAvHomeOrAway.goalsAgainst * 0.5 +\n        formHome.forAndAgainstRollingAv.goalsFor * 0.5 +\n        formAway.forAndAgainstRollingAv.goalsAgainst * 0.5 +\n        formHome.allTeamGoalsBasedOnAverages * 1 +\n        formAway.allTeamGoalsConceededBasedOnAverages * 1 +\n        // formHome.XGOverall * 0.5 +\n        // formAway.XGAgainstAvgOverall * 0.5 +\n        last10WeightingHome * 0 +\n        last2WeightingHome * 0) /\n      5;\n\n\n    factorOneAway =\n      (awayLeagueOrAllFormAverageGoals * 1 +\n        formAway.forAndAgainstRollingAvHomeOrAway.goalsFor * 0.5 +\n        formHome.forAndAgainstRollingAvHomeOrAway.goalsAgainst * 0.5 +\n        formAway.forAndAgainstRollingAv.goalsFor * 0.5 +\n        formHome.forAndAgainstRollingAv.goalsAgainst * 0.5 +\n        formAway.allTeamGoalsBasedOnAverages * 1 +\n        formHome.allTeamGoalsConceededBasedOnAverages * 1 +\n        // formAway.XGOverall * 0.5 +\n        // formHome.XGAgainstAvgOverall * 0.5 +\n        last10WeightingAway * 0 +\n        last2WeightingAway * 0) /\n      5;\n\n\n    // factorOneHome =\n    //   (homeLeagueOrAllFormAverageGoals * 1 +\n    //     // formHome.predictedGoalsBasedOnHomeAv * 0.2 +\n    //     // formAway.predictedGoalsConceededBasedOnAwayAv * 0.2 +\n    //     ((formHome.forAndAgainstRollingAvHomeOrAway.goalsFor +\n    //       formAway.forAndAgainstRollingAvHomeOrAway.goalsAgainst) /\n    //       2) *\n    //       2 +\n    //     formHome.allTeamGoalsBasedOnAverages * 1 +\n    //     formAway.allTeamGoalsConceededBasedOnAverages * 1 +\n    //     // formHome.XGOverall * 0.5 +\n    //     // formAway.XGAgainstAvgOverall * 0.5 +\n    //     last10WeightingHome * 1 +\n    //     last2WeightingHome * 0) /\n    //   5;\n\n    // factorOneAway =\n    //   (awayLeagueOrAllFormAverageGoals * 1 +\n    //     // formAway.predictedGoalsBasedOnAwayAv * 0.2 +\n    //     // formHome.predictedGoalsConceededBasedOnHomeAv * 0.2 +\n    //     ((formAway.forAndAgainstRollingAvHomeOrAway.goalsFor +\n    //       formHome.forAndAgainstRollingAvHomeOrAway.goalsAgainst) /\n    //       2) *\n    //       2 +\n    //     formAway.allTeamGoalsBasedOnAverages * 1 +\n    //     formHome.allTeamGoalsConceededBasedOnAverages * 1 +\n    //     // formAway.XGOverall * 0.5 +\n    //     // formHome.XGAgainstAvgOverall * 0.5 +\n    //     last10WeightingAway * 1 +\n    //     last2WeightingAway * 0) /\n    //   5;\n\n    let factorTwoHome;\n    let factorTwoAway;\n\n    if (\n      scorePredictions !== undefined &&\n      scorePredictions[0].probability !== 1\n    ) {\n      factorTwoHome = scorePredictions[0].team1Score;\n      factorTwoAway = scorePredictions[0].team2Score;\n    } else {\n      factorTwoHome = factorOneHome;\n      factorTwoAway = factorOneAway;\n    }\n\n    let homeComparisonWeighting;\n    let awayComparisonWeighting;\n    match.scoreDiff = await diff(factorOneHome, factorOneAway);\n\n    if (teamComparisonScore > 0) {\n      homeComparisonWeighting = 1 + Math.abs(teamComparisonScore);\n      awayComparisonWeighting = 1 + -Math.abs(teamComparisonScore);\n    } else if (teamComparisonScore < 0) {\n      homeComparisonWeighting = 1 + -Math.abs(teamComparisonScore);\n      awayComparisonWeighting = 1 + Math.abs(teamComparisonScore);\n    } else {\n      homeComparisonWeighting = 1;\n      awayComparisonWeighting = 1;\n    }\n\n    let experimentalHomeGoals =\n      ((factorOneHome * 1 + factorTwoHome * 1) / 2) * 0.9 * homeComparisonWeighting;\n    // (formHome.forAndAgainstRollingAvHomeOrAway.goalsFor + formAway.forAndAgainstRollingAvHomeOrAway.goalsAgainst) / 2\n\n    let experimentalAwayGoals =\n      ((factorOneAway * 1 + factorTwoAway * 1) / 2) * 0.9 * awayComparisonWeighting;\n    // (formAway.forAndAgainstRollingAvHomeOrAway.goalsFor + formHome.forAndAgainstRollingAvHomeOrAway.goalsAgainst) / 2\n\n    let rawFinalHomeGoals = experimentalHomeGoals;\n    let rawFinalAwayGoals = experimentalAwayGoals;\n\n    match.rawFinalHomeGoals = rawFinalHomeGoals;\n    match.rawFinalAwayGoals = rawFinalAwayGoals;\n\n    // if (\n    //   formHome.CleanSheetPercentage > 50 &&\n    //   formAway.CleanSheetPercentage > 50\n    // ) {\n    //   rawFinalHomeGoals = rawFinalHomeGoals - 0.5;\n    //   rawFinalAwayGoals = rawFinalAwayGoals - 0.5;\n    // }\n\n    if (\n      formHome.CleanSheetPercentage < 30 &&\n      formAway.CleanSheetPercentage < 30\n    ) {\n      finalHomeGoals = Math.ceil(rawFinalHomeGoals);\n      finalAwayGoals = Math.ceil(rawFinalAwayGoals);\n    } else if (\n      formHome.CleanSheetPercentage < 35 &&\n      formAway.CleanSheetPercentage < 35 &&\n      rawFinalHomeGoals < 1 &&\n      rawFinalAwayGoals < 1\n    ) {\n      finalHomeGoals = Math.ceil(rawFinalHomeGoals);\n      finalAwayGoals = Math.ceil(rawFinalAwayGoals);\n    } else {\n      finalHomeGoals = Math.floor(rawFinalHomeGoals);\n      finalAwayGoals = Math.floor(rawFinalAwayGoals);\n    }\n\n    // finalHomeGoals = await roundCustom(rawFinalHomeGoals, formHome)\n    // finalAwayGoals = await roundCustom(rawFinalAwayGoals, formAway)\n\n    if (finalHomeGoals > formHome.averageScoredLeague + 1) {\n      finalHomeGoals = Math.round(\n        (finalHomeGoals + formHome.averageScoredLeague) / 2\n      );\n    }\n\n    if (finalAwayGoals > formAway.averageScoredLeague + 1) {\n      finalAwayGoals = Math.round(\n        (finalAwayGoals + formAway.averageScoredLeague) / 2\n      );\n    }\n\n    if (finalAwayGoals < 0) {\n      let difference = Math.abs(\n        parseFloat((await diff(0, finalAwayGoals)) / 2)\n      );\n      rawFinalHomeGoals = rawFinalHomeGoals + difference;\n      finalAwayGoals = 0;\n    }\n\n    if (finalHomeGoals < 0) {\n      let difference = Math.abs(\n        parseFloat((await diff(0, finalHomeGoals)) / 2)\n      );\n      rawFinalAwayGoals = rawFinalAwayGoals + difference;\n      finalHomeGoals = 0;\n    }\n\n    if (match.status !== \"suspended\") {\n      if (finalHomeGoals > finalAwayGoals) {\n        match.prediction = \"homeWin\";\n        homePredictions = homePredictions + 1;\n        if (\n          formHome.lastGame === \"L\" ||\n          formHome.last2Points < 3 ||\n          formAway.last2Points > 3\n        ) {\n          match.includeInMultis = false;\n        } else {\n          match.includeInMultis = true;\n        }\n      } else if (finalAwayGoals > finalHomeGoals) {\n        match.prediction = \"awayWin\";\n        awayPredictions = awayPredictions + 1;\n        if (\n          formAway.lastGame === \"L\" ||\n          formAway.last2Points < 3 ||\n          formHome.last2Points > 3\n        ) {\n          match.includeInMultis = false;\n        } else {\n          match.includeInMultis = true;\n        }\n      } else if (finalHomeGoals === finalAwayGoals) {\n        match.prediction = \"draw\";\n        drawPredictions = drawPredictions + 1;\n      }\n    }\n\n    console.log(`drawPredictions: ${drawPredictions}`);\n\n    if (\n      (XGdifferential > 1 && match.prediction === \"homeWin\") ||\n      (XGdifferential < -1.6 && match.prediction === \"awayWin\")\n    ) {\n      match.XGdifferential = true;\n    } else {\n      match.XGdifferential = false;\n    }\n\n    if (\n      (pointsDiff10 > 1.2 && match.prediction === \"homeWin\") ||\n      (pointsDiff10 < -1.2 && match.prediction === \"awayWin\")\n    ) {\n      match.pointsDifferential = true;\n      match.pointsDifferentialValue = Math.abs(pointsDiff10);\n      match.pointsDifferentialValueRaw = parseFloat(pointsDiff10);\n    } else {\n      match.pointsDiff10 = false;\n      match.pointsDifferentialValue = Math.abs(pointsDiff10);\n      match.pointsDifferentialValueRaw = parseFloat(pointsDiff10);\n    }\n\n    let rollingGoalDiffDifferential = await diff(\n      formHome.rollingAverageGoalsDifferential,\n      formAway.rollingAverageGoalsDifferential\n    );\n\n    if (\n      (rollingGoalDiffDifferential > 1.5 && match.prediction === \"homeWin\") ||\n      (rollingGoalDiffDifferential < -1.5 && match.prediction === \"awayWin\")\n    ) {\n      match.rollingGoalDiff = true;\n      match.rollingGoalDiffValue = rollingGoalDiffDifferential;\n    } else {\n      match.rollingGoalDiff = false;\n      match.rollingGoalDiffValue = rollingGoalDiffDifferential;\n    }\n\n    let dangerousAttacksDifferential = await diff(\n      formHome.AverageDangerousAttacksOverall,\n      formAway.AverageDangerousAttacksOverall\n    );\n\n    if (\n      (dangerousAttacksDifferential > 20 && match.prediction === \"homeWin\") ||\n      (dangerousAttacksDifferential < -20 && match.prediction === \"awayWin\")\n    ) {\n      match.dangerousAttacksDiff = true;\n      match.dangerousAttacksDiffValue = dangerousAttacksDifferential;\n    } else {\n      match.dangerousAttacksDiff = false;\n      match.dangerousAttacksDiffValue = dangerousAttacksDifferential;\n    }\n\n    switch (true) {\n      case match.status !== \"complete\":\n        break;\n      case match.homeGoals > match.awayGoals:\n        match.winner = match.homeTeam;\n        match.outcome = \"homeWin\";\n        homeOutcomes = homeOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formHome.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formAway.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formHome.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formAway.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formHome.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formAway.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formHome.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formAway.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += homeOdds;\n        sumOddsLoss = sumOddsLoss += awayOdds;\n        sumXGForWin = sumXGForWin += formHome.XGOverall;\n        sumXGForLoss = sumXGForLoss += formAway.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formHome.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formAway.XGAgainstAvgOverall;\n        break;\n      case match.homeGoals === match.awayGoals:\n        match.winner = \"draw\";\n        match.outcome = \"draw\";\n        allOutcomes = allOutcomes + 1;\n        allDrawOutcomes = allDrawOutcomes + 1;\n        break;\n      case match.homeGoals < match.awayGoals:\n        match.winner = match.awayTeam;\n        match.outcome = \"awayWin\";\n        allOutcomes = allOutcomes + 1;\n        awayOutcomes = awayOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formAway.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formHome.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formAway.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formHome.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formAway.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formHome.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formAway.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formHome.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += awayOdds;\n        sumOddsLoss = sumOddsLoss += homeOdds;\n        sumXGForWin = sumXGForWin += formAway.XGOverall;\n        sumXGForLoss = sumXGForLoss += formHome.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formAway.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formHome.XGAgainstAvgOverall;\n        break;\n      default:\n        break;\n    }\n\n    console.log(`allDrawOutcomes: ${allDrawOutcomes}`);\n\n    if (match.status === \"complete\") {\n      if (match.prediction === match.outcome) {\n        match.predictionOutcome = \"Won\";\n        winAmount = winAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      } else if (match.prediction !== match.outcome) {\n        match.predictionOutcome = \"Lost\";\n        lossAmount = lossAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      }\n    }\n\n    if (match.status === \"complete\") {\n      if (match.homeGoals + match.awayGoals > 2) {\n        match.over25PredictionOutcome = \"Won\";\n      } else {\n        match.over25PredictionOutcome = \"Lost\";\n      }\n    }\n\n    if (\n      match.status === \"complete\" &&\n      match.homeGoals > 0 &&\n      match.awayGoals > 0\n    ) {\n      match.bttsOutcome = \"bttsWon\";\n    } else {\n      match.bttsOutcome = \"bttsLost\";\n    }\n\n    match.formHome = formHome;\n    match.formAway = formAway;\n\n    let total = parseInt(finalHomeGoals + finalAwayGoals);\n    totalGoals = totalGoals + total;\n\n    let total2 = parseInt(match.homeGoals + match.awayGoals);\n    totalGoals2 = totalGoals2 + total2;\n\n    numberOfGames = numberOfGames + 1;\n\n    if (finalHomeGoals < 0) {\n      finalHomeGoals = 0;\n    }\n\n    if (finalAwayGoals < 0) {\n      finalAwayGoals = 0;\n    }\n\n    if (match.status === \"suspended\") {\n      finalHomeGoals = \"P\";\n      finalAwayGoals = \"P\";\n    }\n\n    if (\n      match.game_week < 0\n      // match.game_week < 3 &&\n    ) {\n      finalHomeGoals = \"-\";\n      finalAwayGoals = \"-\";\n      match.status = \"notEnoughData\";\n    }\n\n    return [\n      finalHomeGoals,\n      finalAwayGoals,\n      rawFinalHomeGoals,\n      rawFinalAwayGoals,\n    ];\n  } else {\n    finalHomeGoals = \"\";\n    finalAwayGoals = \"\";\n    rawFinalHomeGoals = \"\";\n    rawFinalAwayGoals = \"\";\n    match.status = \"void\";\n    match.profit = 0\n  }\n\n  return [finalHomeGoals, finalAwayGoals, rawFinalHomeGoals, rawFinalAwayGoals];\n}\n\nasync function getSuccessMeasure(fixtures) {\n  let sumProfit = 0;\n  let investment = 0;\n  let exactScores = 0;\n  let successCount = 0;\n  let profit = 0;\n  let netProfit = 0;\n  for (let i = 0; i < fixtures.length; i++) {\n    if (fixtures[i].status === \"complete\" && fixtures[i].hasOwnProperty('prediction')) {\n      sumProfit = sumProfit + fixtures[i].profit;\n      investment = investment + 1;\n      netProfit = (sumProfit - investment).toFixed(2);\n      profit = parseFloat(netProfit)\n      if (fixtures[i].exactScore === true) {\n        exactScores = exactScores + 1;\n      }\n      if (fixtures[i].predictionOutcome === \"Won\") {\n        successCount = successCount + 1;\n      }\n    }\n  }\n\n  totalInvestment = totalInvestment + investment\n  totalProfit = totalProfit + profit;\n  let ROI = (profit / investment) * 100;\n  totalROI = (totalProfit / totalInvestment) * 100;\n  console.log(`Total Profit : ${totalProfit}`)\n  console.log(`Total Investment : ${totalInvestment}`)\n  console.log(`Total ROI : ${totalROI}`)\n  var operand = ROI >= 0 ? \"+\" : \"\";\n  var operandTwo = totalROI >= 0 ? \"+\" : \"\";\n  let exactScoreHitRate = ((exactScores / investment) * 100).toFixed(1);\n  let successRate = ((successCount / investment) * 100).toFixed(1);\n\n  if (investment > 0) {\n    ReactDOM.render(\n      <Fragment>\n        <Div\n          className={\"SuccessMeasure\"}\n          text={`ROI for \n            all ${investment} W/D/W \n            outcomes: ${operand} ${ROI.toFixed(2)}%`}\n        />\n        <p>{`Correct W/D/W predictions: ${successCount} (${successRate}%)`}</p>\n        <p>{`Exact scores predicted: ${exactScores} (${exactScoreHitRate}%)`}</p>\n        <Div\n          className={\"SuccessMeasure\"}\n          text={`Cumalative ROI for \n            all ${totalInvestment} match outcomes: ${operandTwo} ${totalROI.toFixed(2)}%`}\n        />\n      </Fragment>,\n      document.getElementById(\"successMeasure2\")\n    );\n  } else {\n    return;\n  }\n}\n\nexport var tips = [];\nexport var allTips = [];\nlet allTipsSorted = [];\nvar newArray = [];\nvar bestBets = [];\nvar price;\nvar Over25Tips = [];\nvar XGDiffTips = [];\nvar rollingDiffTips = [];\nvar dangerousAttacksDiffTips = [];\nvar pointsDiffTips = [];\nvar combinations;\nvar exoticArray = [];\nvar gamesInExotic;\nvar minimumExotic;\nvar exoticStake;\nvar exoticString;\nvar bttsArray = [];\nvar accumulatedOdds = 1;\nlet predictions = [];\n\nexport async function getNewTips(array) {\n  // allTips = [];\n  newArray = [];\n  accumulatedOdds = 1;\n\n  if (array.length > 1 && incrementValue > 0) {\n    array.forEach((tip) => {\n      if (\n        array.indexOf(tip) < incrementValue\n        // tip.goalDifferential >= incrementValue && tip.comparisonScore > 0\n      ) {\n        newArray.push(tip);\n        accumulatedOdds = parseFloat(accumulatedOdds) * parseFloat(tip.rawOdds);\n      }\n    });\n  }\n  await renderTips(newArray);\n}\n\nexport async function getScorePrediction(day, mocked) {\n  let mock = mocked;\n  clicked = true;\n  tips = [];\n  bestBets = [];\n  // price = 0\n  bttsArray = [];\n  Over25Tips = [];\n  XGDiffTips = [];\n  pointsDiffTips = [];\n  rollingDiffTips = [];\n  dangerousAttacksDiffTips = [];\n  allTips = [];\n\n  let index = 2;\n  let divider = 10;\n\n  ReactDOM.render(<div></div>, document.getElementById(\"GeneratePredictions\"));\n\n  await Promise.all(\n    matches.map(async (match) => {\n      // if there are no stored predictions, calculate them based on live data\n      if (match) {\n        console.log(match.game)\n        console.log(match.game_week)\n        console.log(match)\n        switch (true) {\n          case match.status === \"canceled\":\n            match.goalsA = \"P\";\n            match.goalsB = \"P\";\n            await calculateScore(match, index, divider, false);\n            break;\n          case match.leagueID === 6935 || match.leagueID === 7061 || (match.game_week < 3 && match.game_week !== 0):\n            match.goalsA = \"x\";\n            match.goalsB = \"x\";\n            await calculateScore(match, index, divider, false);\n            break;\n          default:\n            [\n              match.goalsA,\n              match.goalsB,\n              match.unroundedGoalsA,\n              match.unroundedGoalsB,\n            ] = await calculateScore(match, index, divider, true);\n            break;\n        }\n      } else {\n        [\n          match.goalsA,\n          match.goalsB,\n          match.unroundedGoalsA,\n          match.unroundedGoalsB,\n        ] = await calculateScore(match, index, divider, true);\n      }\n\n      await getBTTSPotential(\n        match,\n        match.goalsA,\n        match.goalsB,\n        match.unroundedGoalsA,\n        match.unroundedGoalsB\n      );\n\n      let predictionObject;\n      let Over25PredictionObject;\n      let XGPredictionObject;\n      let pointsDiffObject;\n      let rollingDiffObject;\n      let dangerousAttacksDiffObject;\n\n      if (match.status === \"complete\" && match.prediction) {\n        match.outcomeSymbol =\n          match.predictionOutcome === \"Won\" ? \"\\u2714\" : \"\\u2718\";\n        match.over25PredictionOutcomeSymbol =\n          match.over25PredictionOutcome === \"Won\" ? \"\\u2714\" : \"\\u2718\";\n        match.bttsOutcomeSymbol =\n          match.bttsOutcome === \"bttsWon\" ? \"\\u2714\" : \"\\u2718\";\n      } else {\n        match.outcomeSymbol = \"\";\n        match.over25PredictionOutcomeSymbol = \"\";\n        match.bttsOutcomeSymbol = \"\";\n      }\n\n      if (\n        match.unroundedGoalsA - match.unroundedGoalsB > 0.75 &&\n        match.homeOdds !== 0 &&\n        match.fractionHome !== \"N/A\" &&\n        match.includeInMultis !== false\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.status !== \"notEnoughData\" &&\n          match.homeOdds < 3\n        ) {\n          predictionObject = {\n            team: `${match.homeTeam} to win`,\n            game:\n              match.status === \"complete\"\n                ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n                : match.game,\n            odds: match.fractionHome,\n            rawOdds: match.homeOdds,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            outcome: match.predictionOutcome,\n            outcomeSymbol: match.outcomeSymbol,\n            goalDifferential: parseFloat(\n              await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n            ),\n            experimentalCalc: (\n              (match.unroundedGoalsA - match.unroundedGoalsB) *\n              Math.abs(match.teamComparisonScore)\n            ).toFixed(2),\n            XGdifferentialValue: parseFloat(match.XGdifferentialValue),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formHome.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n\n            if (\n              match.unroundedGoalsA - match.unroundedGoalsB >\n              incrementValue\n            ) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      } else if (\n        match.unroundedGoalsB - match.unroundedGoalsA > 2 &&\n        match.awayOdds !== 0 &&\n        match.fractionAway !== \"N/A\" &&\n        match.includeInMultis !== false\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.status !== \"notEnoughData\" &&\n          match.awayOdds < 3.5\n        ) {\n          predictionObject = {\n            team: `${match.awayTeam} to win`,\n            game:\n              match.status === \"complete\"\n                ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n                : match.game,\n            rawOdds: match.awayOdds,\n            odds: match.fractionAway,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            outcome: match.predictionOutcome,\n            outcomeSymbol: match.outcomeSymbol,\n            goalDifferential:\n              parseFloat(\n                await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n              ) - 1,\n            experimentalCalc: (\n              (match.unroundedGoalsB - match.unroundedGoalsA) *\n              Math.abs(match.teamComparisonScore)\n            ).toFixed(2),\n            XGdifferentialValue: parseFloat(match.XGdifferentialValue),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formAway.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n            if (match.unroundedGoalsB - match.unroundedGoalsA > 2) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      }\n\n      if (\n        match.btts === true &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\" &&\n        match.status !== \"notEnoughData\"\n      ) {\n        bttsArray.push(match);\n      }\n      if (\n        match.unroundedGoalsA + match.unroundedGoalsB > 2.5 &&\n        match.goalsA + match.goalsB > 2 &&\n        match.GoalsInGamesAverageHome > 2.5 &&\n        match.GoalsInGamesAverageAway > 2.5\n      ) {\n        Over25PredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: match.homeTeam,\n          decimalOdds: match.homeDoubleChance,\n          rawOdds: match.over25Odds,\n          odds: match.over25Odds,\n          comparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.over25PredictionOutcomeSymbol,\n          doubleChanceOutcome: match.over25PredictionOutcome,\n          goalTotalUnrounded: match.unroundedGoalsA + match.unroundedGoalsB,\n        };\n        Over25Tips.push(Over25PredictionObject);\n      }\n\n      if (\n        match.XGdifferential === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        XGPredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          XGdifferentialValue: match.XGdifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        XGDiffTips.push(XGPredictionObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        XGPredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          XGdifferentialValue: match.XGdifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        XGDiffTips.push(XGPredictionObject);\n      }\n\n      if (\n        match.pointsDifferential === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        pointsDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          pointsDifferentialValue: match.pointsDifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        pointsDiffTips.push(pointsDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        pointsDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          pointsDifferentialValue: match.pointsDifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        pointsDiffTips.push(pointsDiffObject);\n      }\n\n      if (\n        match.rollingGoalDiff === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        rollingDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        rollingDiffTips.push(rollingDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        rollingDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        rollingDiffTips.push(rollingDiffObject);\n      }\n\n      if (\n        match.dangerousAttacksDiff === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        dangerousAttacksDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        dangerousAttacksDiffTips.push(dangerousAttacksDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        dangerousAttacksDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        dangerousAttacksDiffTips.push(dangerousAttacksDiffObject);\n      }\n\n      predictions.push(match);\n    })\n  );\n  ReactDOM.render(\n    <RenderAllFixtures matches={matches} result={true} bool={mock} />,\n    document.getElementById(\"FixtureContainer\")\n  );\n  console.log(matches)\n  await getSuccessMeasure(matches);\n  await getMultis();\n  await getNewTips(allTipsSorted);\n\n  // await renderTips();\n}\n\nasync function getMultis() {\n  allTipsSorted = allTips.sort(function (a, b) {\n    return b.goalDifferential - a.goalDifferential;\n  });\n\n  bestBets.sort(function (a, b) {\n    if (a.goalDifferential === b.goalDifferential) {\n      return b.comparisonScore - a.comparisonScore;\n    } else {\n      return b.goalDifferential > a.goalDifferential ? 1 : -1;\n    }\n  });\n\n  bttsArray.sort(function (a, b) {\n    return b.combinedBTTS - a.combinedBTTS;\n  });\n\n  Over25Tips.sort(function (a, b) {\n    return b.goalTotalUnrounded - a.goalTotalUnrounded;\n  });\n\n  XGDiffTips.sort(function (a, b) {\n    return Math.abs(b.XGdifferentialValue) - Math.abs(a.XGdifferentialValue);\n  });\n\n  pointsDiffTips.sort(function (a, b) {\n    return (\n      Math.abs(b.pointsDifferentialValue) - Math.abs(a.pointsDifferentialValue)\n    );\n  });\n\n  rollingDiffTips.sort(function (a, b) {\n    return Math.abs(b.rollingGoalDiffValue) - Math.abs(a.rollingGoalDiffValue);\n  });\n\n  dangerousAttacksDiffTips.sort(function (a, b) {\n    return (\n      Math.abs(b.dangerousAttacksDiffValue) -\n      Math.abs(a.dangerousAttacksDiffValue)\n    );\n  });\n\n  exoticArray = [];\n  gamesInExotic = 0;\n  exoticStake = 0;\n  exoticString = \"\";\n\n  switch (true) {\n    case allTips.length >= 10:\n      for (let i = 0; i < 10; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 10;\n      minimumExotic = 8;\n      exoticStake = 0.1;\n      exoticString = \"45 8-folds, 10 9-folds and 1 10-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 9:\n      for (let i = 0; i < 9; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 9;\n      minimumExotic = 7;\n      exoticStake = 0.1;\n      exoticString = \"36 7-folds, 9 8-folds and 1 9-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 8:\n      for (let i = 0; i < 8; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 8;\n      minimumExotic = 6;\n      exoticStake = 0.1;\n      exoticString = \"28 6-folds, 8 7-folds and 1 8-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 7:\n      for (let i = 0; i < 7; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 7;\n      minimumExotic = 6;\n      exoticStake = 1;\n      exoticString = \"7 6-folds and 1 7-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 6:\n      for (let i = 0; i < 6; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 6;\n      minimumExotic = 5;\n      exoticStake = 1;\n      exoticString = \"6 5-folds and 1 6-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 5:\n      for (let i = 0; i < 5; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 5;\n      minimumExotic = 4;\n      exoticStake = 1;\n      exoticString = \"5 4-folds and 1 5-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case Over25Tips.length >= 4:\n      for (let i = 0; i < 4; i++) {\n        let game = Over25Tips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 4;\n      minimumExotic = 3;\n      exoticStake = 1;\n      exoticString = \"4 3-folds and 1 4-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    default:\n      break;\n  }\n}\n\nexport function getAccumulatorPrice(priceArray) {\n  var result = 1;\n  for (var i = 0; i < priceArray.length; i++)\n    result = result * priceArray[i].rawOdds;\n\n  return result;\n}\n\nexport function getCoverBetMaxReturns(priceArray, minAccSize, stake) {\n  var total = 0;\n  combinations = 0;\n\n  for (var i = minAccSize; i <= priceArray.length; i++) {\n    var perms = getUniquePermutations(priceArray, i);\n    combinations = combinations + perms.length;\n\n    for (var j = 0; j < perms.length; j++)\n      total += getAccumulatorPrice(perms[j]) * stake;\n  }\n  return parseFloat(total.toFixed(2));\n}\n\nfunction getUniquePermutations(arr, permLength) {\n  if (arr.length <= permLength) return [arr];\n\n  var permutations = [];\n  var newArr = [];\n\n  newArr = arr.slice(0);\n\n  for (var i = 0; i < arr.length; i++) {\n    newArr = arr.slice(0);\n    newArr.splice(i, 1);\n    permutations = twoDimArrayUnion(\n      permutations,\n      getUniquePermutations(newArr, permLength)\n    );\n  }\n  return permutations;\n}\n\nfunction twoDimArrayUnion(arr1, arr2) {\n  for (var i = 0; i < arr2.length; i++) {\n    var duplicate = false;\n\n    for (var j = 0; j < arr1.length; j++)\n      if (arr1[j].length === arr2[i].length)\n        for (var k = 0; k < arr1[j].length; k++)\n          if (arr1[j][k] !== arr2[i][k]) break;\n          else if (k === arr1[j].length - 1) duplicate = true;\n\n    if (!duplicate) arr1.push(arr2[i]);\n  }\n\n  return arr1;\n}\n\nfunction NewlineText(props) {\n  const text = props.text;\n  const newText = text.split(\"\\n\").map((str) => <p>{str}</p>);\n\n  return newText;\n}\n\nasync function renderTips() {\n  if (newArray.length > 0) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <div className=\"BestPredictionsExplainer\">\n                  Add or remove a selection using the buttons below. Predictions\n                  are ordered by confidence in the outcome.\n                </div>\n                {newArray.map((tip) => (\n                  <li key={`${tip.game}acca`}>\n                    <div>\n                      {tip.team}: {tip.odds}{\" \"}\n                      <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                    </div>\n                    <div className=\"TipGame\">{tip.game}</div>\n                  </li>\n                ))}\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  No games fit the criteria\n                </h4>\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  }\n\n  if (exoticArray.length > 4) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Exotic of the day\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  <NewlineText\n                    text={`${gamesInExotic} games: ${exoticString}\\nStake per multi: ${exoticStake} units - ${combinations} combinations\\nTotal stake: ${(\n                      exoticStake * combinations\n                    ).toFixed(2)} unit(s)`}\n                  />\n                  {`Potential winnings: ${price.toFixed(2)} units`}\n                </h4>\n                {exoticArray.map((tip) => (\n                  <li key={tip.team}>\n                    {tip.team}: {tip.odds}{\" \"}\n                    <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                    <div>{tip.game}</div>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Exotic of the day\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  Not enough games for this feature\n                </h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  }\n\n  if (Over25Tips.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Over 2.5 goals tips\"}\n            element={\n              <ul className=\"LongshotPredictions\" id=\"LongshotPredictions\">\n                <h4>Over 2.5 goals</h4>\n                {Over25Tips.map((tip) => (\n                  <li key={tip.team}>\n                    {tip.game} - Odds: {tip.odds}{\" \"}\n                    <span className={`${tip.doubleChanceOutcome}`}>\n                      {tip.outcomeSymbol}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Over 2.5 goals tips\"}\n            element={\n              <ul className=\"LongshotPredictions\" id=\"LongshotPredictions\">\n                <h4>No games fit the criteria</h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  }\n\n  if (bttsArray.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"BTTS games\"}\n            element={\n              <ul className=\"BTTSGames\" id=\"BTTSGames\">\n                <h4>Games with highest chance of BTTS</h4>\n                {bttsArray.map((game) => (\n                  <li key={game.game}>\n                    {`${game.game} odds: ${game.bttsFraction}`}{\" \"}\n                    <span className={game.bttsOutcome}>\n                      {game.bttsOutcomeSymbol}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"BTTS games\"}\n            element={\n              <ul className=\"BTTSGames\" id=\"BTTSGames\">\n                <h4>No games fit the criteria</h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  }\n\n  ReactDOM.render(\n    <Collapsable\n      buttonText={\"XG tips\"}\n      element={\n        <Slider\n          element={\n            XGDiffTips.length > 0 ? (\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>Games with greatest XG Differentials</h4>\n                {XGDiffTips.map((tip) => (\n                  <li key={tip.game}>\n                    {tip.game} | {tip.prediction} {tip.odds}{\" \"}\n                    <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                  </li>\n                ))}\n              </ul>\n            ) : (\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>Games with greatest XG Differentials</h4>\n                <li key={\"noPPGDiff\"}>\n                  Sorry, no games fit this criteria today\n                </li>\n              </ul>\n            )\n          }\n          element2={\n            pointsDiffTips.length > 0 ? (\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>\n                  Games with greatest points per game differentials (last 10)\n                </h4>\n                {pointsDiffTips.map((game) => (\n                  <li key={game.game}>\n                    {game.game} | {game.prediction} {game.odds}{\" \"}\n                    <span className={game.outcome}>{game.outcomeSymbol}</span>\n                  </li>\n                ))}\n              </ul>\n            ) : (\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>\n                  Games with greatest points per game differentials (last 10)\n                </h4>\n                <li key={\"noPPGDiff\"}>\n                  Sorry, no games fit this criteria today\n                </li>\n              </ul>\n            )\n          }\n          element3={\n            rollingDiffTips.length > 0 ? (\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>\n                  Games with greatest rolling goal difference differentials\n                </h4>\n                {rollingDiffTips.map((game) => (\n                  <li key={game.game}>\n                    {game.game} | {game.prediction} {game.odds}{\" \"}\n                    <span className={game.outcome}>{game.outcomeSymbol}</span>\n                  </li>\n                ))}\n              </ul>\n            ) : (\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>\n                  Games with greatest rolling goal difference differentials\n                </h4>\n                <li key={\"noPPGDiff\"}>\n                  Sorry, no games fit this criteria today\n                </li>\n              </ul>\n            )\n          }\n          element4={\n            dangerousAttacksDiffTips.length > 0 ? (\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>\n                  Games with greatest average dangerous attacks differentials\n                </h4>\n                {dangerousAttacksDiffTips.map((game) => (\n                  <li key={game.game}>\n                    {game.game} | {game.prediction} {game.odds}{\" \"}\n                    <span className={game.outcome}>{game.outcomeSymbol}</span>\n                  </li>\n                ))}\n              </ul>\n            ) : (\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>\n                  Games with greatest average dangerous attacks differentials\n                </h4>\n                <li key={\"noPPGDiff\"}>\n                  Sorry, no games fit this criteria today\n                </li>\n              </ul>\n            )\n          }\n          element5={\n            <div className=\"DonationButton\">\n              <h2>Help with running costs</h2>\n              <h4>\n                Monthly costs are rising and each donation helps keep XG Tipping\n                free to use\n              </h4>\n              <StyledKofiButton buttonText=\"No sign up donation\" />\n            </div>\n          }\n        ></Slider>\n      }\n    ></Collapsable>,\n    document.getElementById(\"insights\")\n  );\n}\n","import KofiButton from \"kofi-button\"\n\nexport const StyledKofiButton = (props) => {\n  return (\n    <KofiButton className=\"kofi-button\" color=\"#030061\" title={props.buttonText} kofiID=\"H2H0AX25Z\" />\n  )\n}","import React, { useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { CreateBadge } from \"./createBadge\";\nimport { Button } from \"./Button\";\nexport var toggleState = false;\nexport var setIsOff = false;\n\nconst upArrow = \"\\u{25B2}\";\n\nconst StyledTableCell2 = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"rgba(226, 226, 226, 1)\",\n    color: \"white\",\n    padding: \"0.35em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    textAlign: \"left\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    fontSize: \"1.9em\",\n    textAlign: \"left\",\n    fontFamily: \"inherit\",\n    padding: \"0.5em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"#030061\",\n  },\n}))(TableCell);\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"white\",\n    color: \"#030061\",\n    padding: \"0.5em\",\n    paddingTop: \"1em\",\n    paddingBottom: \"1em\",\n    textAlign: \"center\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    // backgroundColor: \"#030061\",\n    fontSize: \"1.9em\",\n    textAlign: \"center\",\n    fontFamily: \"inherit\",\n    padding: \"0.35em\",\n    paddingTop: \"1em\",\n    paddingBottom: \"1em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"#030061\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#rgba(226, 226, 226, 0.424)\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#rgba(226, 226, 226, 1)\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\nfunction styleForm(formIndicator) {\n  let className;\n  if (formIndicator === \"W\") {\n    className = \"winLeague\";\n  } else if (formIndicator === \"D\") {\n    className = \"drawLeague\";\n  } else if (formIndicator === \"L\") {\n    className = \"lossLeague\";\n  }\n  return className;\n}\n\nexport default function LeagueTable(props) {\n  [toggleState, setIsOff] = useState(false);\n\n  let rows = props.Teams.map((team, i) => (\n    <StyledTableRow key={`${props.Key}row${i}`}>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${i + 1}`}\n      </StyledTableCell>\n      <StyledTableCell2 component=\"th\" scope=\"row\" style={{ width: \"15em\" }}>\n        {`${team.Name}`}\n      </StyledTableCell2>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Played}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Wins}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Draws}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Losses}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.For}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Against}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.GoalDifference}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Points}`}\n      </StyledTableCell>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ textAlign: \"center\" }}\n      >\n        <span className={styleForm(team.Form[0])}>\n          {team.Form[0] !== undefined ? team.Form[0] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[1])}>\n          {team.Form[1] !== undefined ? team.Form[1] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[2])}>\n          {team.Form[2] !== undefined ? team.Form[2] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[3])}>\n          {team.Form[3] !== undefined ? team.Form[3] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[4])}>\n          {team.Form[4] !== undefined ? team.Form[4] : \"\"}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  ));\n\n  const leagueResults = [];\n  let singleResult;\n  if (props.Results) {\n    props.Results.forEach((result) => {\n      singleResult = (\n        <div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_xg}</span>\n            <span className=\"column\">XG</span>\n            <span className=\"column\">{result.team_b_xg}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shots}</span>\n            <span className=\"column\">Shots</span>\n            <span className=\"column\">{result.team_b_shots}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shotsOnTarget}</span>\n            <span className=\"column\">SOT</span>\n            <span className=\"column\">{result.team_b_shotsOnTarget}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_dangerous_attacks}</span>\n            <span className=\"column\">Dangerous Attacks</span>\n            <span className=\"column\">{result.team_b_dangerous_attacks}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_possession}%</span>\n            <span className=\"column\">Possession</span>\n            <span className=\"column\">{result.team_b_possession}%</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_red_cards}</span>\n            <span className=\"column\">Red cards</span>\n            <span className=\"column\">{result.team_b_red_cards}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.odds_ft_1}</span>\n            <span className=\"column\">Odds (pre-match)</span>\n            <span className=\"column\">{result.odds_ft_2}</span>\n          </div>\n        </div>\n      );\n\n      leagueResults.push(\n        <Collapsable\n          classNameButton=\"ResultButton\"\n          buttonText={\n            <div className=\"ResultRowOverview\">\n              <div className=\"columnOverviewHome\">{result.home_name}</div>\n              <span className=\"columnOverviewScore\">\n                {result.homeGoalCount} : {result.awayGoalCount}\n              </span>\n              <div className=\"columnOverviewAway\">{result.away_name}</div>\n            </div>\n          }\n          element={singleResult}\n        />\n      );\n    });\n  }\n\n  const leagueResultsOlder = [];\n  if (props.LastWeeksResults) {\n    props.LastWeeksResults.forEach((result) => {\n      singleResult = (\n        <div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_xg}</span>\n            <span className=\"column\">XG</span>\n            <span className=\"column\">{result.team_b_xg}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shots}</span>\n            <span className=\"column\">Shots</span>\n            <span className=\"column\">{result.team_b_shots}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shotsOnTarget}</span>\n            <span className=\"column\">SOT</span>\n            <span className=\"column\">{result.team_b_shotsOnTarget}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_dangerous_attacks}</span>\n            <span className=\"column\">Dangerous Attacks</span>\n            <span className=\"column\">{result.team_b_dangerous_attacks}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_possession}</span>\n            <span className=\"column\">Possession</span>\n            <span className=\"column\">{result.team_b_possession}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_red_cards}</span>\n            <span className=\"column\">Red cards</span>\n            <span className=\"column\">{result.team_b_red_cards}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.odds_ft_1}</span>\n            <span className=\"column\">Odds (pre-match)</span>\n            <span className=\"column\">{result.odds_ft_2}</span>\n          </div>\n        </div>\n      );\n\n      leagueResultsOlder.push(\n        <Collapsable\n          classNameButton=\"ResultButton\"\n          buttonText={\n            <div className=\"ResultRowOverview\">\n              <div className=\"columnOverviewHome\">{result.home_name}</div>\n              <span className=\"columnOverviewScore\">\n                {result.homeGoalCount} : {result.awayGoalCount}\n              </span>\n              <div className=\"columnOverviewAway\">{result.away_name}</div>\n            </div>\n          }\n          element={singleResult}\n        />\n      );\n    });\n  }\n\n  function getTopScorersTeam(id) {\n    let found = props.Teams.find((team) => team.ID === id);\n    return found.Name;\n  }\n\n  async function sorted(league, value, order) {\n    let sortedByForm;\n    if (order === \"desc\") {\n      sortedByForm = league.sort((a, b) => b[value] - a[value]);\n    } else {\n      sortedByForm = league.sort((a, b) => a[value] - b[value]);\n    }\n    setIsOff(!toggleState);\n    return sortedByForm;\n  }\n\n  if (\n    props.GamesPlayed > 3 &&\n    props.Teams[0].LeagueID !== 7956 &&\n    props.Teams[0].LeagueID !== 6969 &&\n    props.Teams[0].LeagueID !== 7432\n  ) {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table\n            className=\"Table\"\n            aria-label=\"customized table\"\n            key={props.Key}\n            style={{ marginTop: \"2em\", marginBottom: \"1em\" }}\n          >\n            <TableHead>\n              <TableRow>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"Points\", \"desc\")}\n                  >\n                    Pts {upArrow}\n                  </button>\n                </td>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"LastXPoints\", \"desc\")}\n                  >\n                    Last 5 {upArrow}\n                  </button>\n                </td>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n          <h5>{`${props.mostRecentGameweek} results`}</h5>\n          <div className=\"ResultsList\" id=\"ResultsList\">\n            <ul>{leagueResults}</ul>\n          </div>\n          <div className=\"LeagueStatisticsHeader\">League Statistics</div>\n          <div className=\"LeagueStatistics\">\n            <ul className=\"LeagueStatsColumn\">\n              <li>Average home goals: {props.Stats.seasonAVG_home}</li>\n              <li>Average away goals: {props.Stats.seasonAVG_away}</li>\n              <li>BTTS: {props.Stats.seasonBTTSPercentage}%</li>\n              <li>\n                Over 0.5 goals: {props.Stats.seasonOver05Percentage_overall}%\n              </li>\n              <li>\n                Over 1.5 goals: {props.Stats.seasonOver15Percentage_overall}%\n              </li>\n              <li>\n                Over 2.5 goals: {props.Stats.seasonOver25Percentage_overall}%\n              </li>\n              <li>\n                Over 3.5 goals: {props.Stats.seasonOver35Percentage_overall}%\n              </li>\n              <li>\n                Over 4.5 goals: {props.Stats.seasonOver45Percentage_overall}%\n              </li>\n            </ul>\n            <ul className=\"LeagueStatsColumn\">\n              <li>\n                Over 7.5 corners: {props.Stats.over75CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 8.5 corners: {props.Stats.over85CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 9.5 corners: {props.Stats.over95CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 10.5 corners:{\" \"}\n                {props.Stats.over105CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 11.5 corners:{\" \"}\n                {props.Stats.over115CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 12.5 corners:{\" \"}\n                {props.Stats.over125CornersPercentage_overall}%\n              </li>\n              <li>Corners average: {props.Stats.cornersAVG_overall}</li>\n              <li>Cards average: {props.Stats.cardsAVG_overall}</li>\n            </ul>\n            <ul className=\"TopScorersColumn\">\n              <h4>Top scorers</h4>\n              <li>\n                {props.Stats.top_scorers[0].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[0].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[0].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[1].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[1].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[1].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[2].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[2].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[2].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[3].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[3].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[3].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[4].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[4].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[4].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[5].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[5].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[5].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[6].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[6].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[6].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[7].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[7].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[7].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[8].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[8].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[8].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[9].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[9].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[9].goals_overall}\n              </li>\n            </ul>\n          </div>\n        </TableContainer>\n      );\n    }\n  } else if (props.Teams[0].LeagueID === 4340) {\n    return null;\n  } else {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table aria-label=\"customized table\" key={props.Key}>\n            <TableHead>\n              <TableRow>\n                <button\n                  className=\"SortedColumn\"\n                  style={{ textAlign: \"center\" }}\n                  onClick={() => sorted(props.Teams, \"Position\")}\n                >\n                  {upArrow}\n                </button>{\" \"}\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <StyledTableCell>Pts</StyledTableCell>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"LastXPoints\", \"desc\")}\n                  >\n                    Last 5 {upArrow}\n                  </button>\n                </td>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n        </TableContainer>\n      );\n    }\n  }\n}\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { orderedLeagues } from \"../App\";\nimport { getForm } from \"./getForm\";\nimport { Fixture } from \"../components/Fixture\";\nimport { Button } from \"../components/Button\";\nimport { getScorePrediction } from \"../logic/getScorePredictions\";\nimport { ThreeDots } from \"react-loading-icons\";\nimport { selectedOdds } from \"../components/OddsRadio\";\nimport LeagueTable from \"../components/LeagueTable\";\nimport { getPointsFromLastX } from \"../logic/getScorePredictions\";\n\nvar oddslib = require(\"oddslib\");\n\n// require(\"dotenv\").config();\n\nvar fixtureResponse;\nvar fixtureArray = [];\nexport var matches = [];\nexport var resultedMatches = [];\nvar league;\nvar leagueID;\nvar leagueGames = [];\nexport var leagueArray = [];\nvar leagueIdArray = [];\nexport var leagueStatsArray = [];\nexport let leagueInstance;\nexport let groupInstance;\nexport let allLeagueResultsArrayOfObjects = [];\nvar lastThreeFormHome;\nvar lastThreeFormAway;\nvar lastFiveFormHome;\nvar lastFiveFormAway;\nvar lastSixFormHome;\nvar lastSixFormAway;\nvar lastTenFormHome;\nvar lastTenFormAway;\nvar leagueOrAll;\nvar formRunHome;\nvar formRunAway;\nlet WDLinLeagueHome;\nlet WDLinLeagueAway;\nlet HomeAverageGoals;\nlet homeAverageGoals;\nlet HomeAverageConceded;\nlet homeAverageConceded;\nlet AwayAverageGoals;\nlet awayAverageGoals;\nlet AwayAverageConceded;\nlet awayAverageConceded;\n\n// export var [currentDay, month, year] = new Date()\n//   .toLocaleDateString(\"en-US\", { timeZone: \"Europe/London\" })\n//   .split(\"/\");\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nexport let allForm = [];\nexport let tableArray = [];\nexport let worldCupArray = [];\ngroupInstance = [];\nleagueInstance = [];\n\nasync function convertTimestamp(timestamp) {\n  let newDate = new Date(timestamp * 1000);\n  let [day, month, year] = newDate.toLocaleDateString(\"en-US\").split(\"/\");\n\n  let converted = `${year}-${day}-${month}`;\n\n  return converted;\n}\n\nexport async function generateTables(a, leagueIdArray, allResults) {\n  // leagueIdArray = [];\n  tableArray = [];\n  worldCupArray = [];\n  let i = 0;\n  leagueArray.forEach(function (league) {\n    let currentLeagueId = leagueIdArray[i];\n    i++;\n    leagueInstance = [];\n    //Skip MLS which has a weird format\n    if (\n      !league.data.specific_tables[0].groups &&\n      currentLeagueId !== 6969 &&\n      league.data.specific_tables[0].table\n    ) {\n      for (\n        let index = 0;\n        index < league.data.specific_tables[0].table.length;\n        index++\n      ) {\n        let currentTeam = league.data.specific_tables[0].table[index];\n        let last5;\n        if (currentTeam.wdl_record.length < 5) {\n          last5 = currentTeam.wdl_record\n            .slice(`-${currentTeam.wdl_record.length}`)\n            .toUpperCase();\n        } else {\n          last5 = currentTeam.wdl_record.slice(-5).toUpperCase();\n        }\n\n        const team = {\n          LeagueID: currentLeagueId,\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          ID: currentTeam.id,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: last5,\n          LastXPoints: getPointsFromLastX(last5.split(\"\")),\n          Points: currentTeam.points,\n          wdl: currentTeam.wdl_record,\n          seasonGoals: currentTeam.seasonGoals,\n          seasonConceded: currentTeam.seasonConceded,\n        };\n        leagueInstance.push(team);\n      }\n      tableArray.push({ id: currentLeagueId, table: leagueInstance });\n    } else if (currentLeagueId === 7432) {\n      // for (let x = 0; x < league.data.specific_tables[0].groups.length; x++) {\n      // for (\n      //   let index = 0;\n      //   index < league.data.specific_tables[0].groups[x].table.length;\n      //   index++\n      // )\n      league.data.specific_tables[0].groups.forEach((group) => {\n        leagueInstance = [];\n        for (let index = 0; index < group.table.length; index++) {\n          let currentTeam = group.table[index];\n          let last5 = \"N/A\";\n          const team = {\n            LeagueID: currentLeagueId,\n            Position: index + 1,\n            Name: currentTeam.cleanName,\n            ID: currentTeam.id,\n            Played: currentTeam.matchesPlayed,\n            Wins: currentTeam.seasonWins_overall,\n            Draws: currentTeam.seasonDraws_overall,\n            Losses: currentTeam.seasonLosses_overall,\n            For: currentTeam.seasonGoals,\n            Against:\n              currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n            GoalDifference: currentTeam.seasonGoalDifference,\n            Form: last5,\n            LastXPoints: getPointsFromLastX(last5.split(\"\")),\n            Points: currentTeam.points,\n            wdl: currentTeam.wdl_record,\n            seasonGoals: currentTeam.seasonGoals,\n            seasonConceded: currentTeam.seasonConceded,\n          };\n          leagueInstance.push(team);\n        }\n        worldCupArray.push({\n          group: group.name,\n          table: leagueInstance,\n        });\n      });\n    } else if (league.data.league_table === null) {\n      for (\n        let index = 0;\n        index < league.data.all_matches_table_overall.length;\n        index++\n      ) {\n        let currentTeam = league.data.all_matches_table_overall[index];\n        let last5 = \"N/A\";\n        const team = {\n          LeagueID: currentLeagueId,\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          ID: currentTeam.id,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: last5,\n          LastXPoints: getPointsFromLastX(last5.split(\"\")),\n          Points: currentTeam.points,\n          wdl: currentTeam.wdl_record,\n          seasonGoals: currentTeam.seasonGoals,\n          seasonConceded: currentTeam.seasonConceded,\n        };\n        leagueInstance.push(team);\n      }\n\n      tableArray.push({ id: currentLeagueId, table: leagueInstance });\n    }\n  });\n}\n\nasync function getTableLayout(arr, statistics) {\n  let tableArray = [];\n  for (let i = 0; i < arr.length; i++) {\n    tableArray.push(\n      <LeagueTable\n        Teams={arr[i].table}\n        Key={`Group${arr[i].group}`}\n        Stats={statistics}\n        GamesPlayed={statistics.game_week}\n      />\n    );\n  }\n  return tableArray;\n}\n\nasync function sorted(league) {\n  const sortedByForm = league.sort((a, b) => b.LastXPoints - a.LastXPoints);\n  return sortedByForm;\n}\n\nexport async function renderTable(index, results, id) {\n  let league;\n  //World cup table rendering\n\n  // let mostRecentGame = results.fixtures.pop();\n  let mostRecentGame = results.fixtures.pop();\n\n  let mostRecentGameweek = \"Latest\";\n\n  const gameweeksResults = results.fixtures.filter(\n    (games) => games.game_week === mostRecentGame.game_week\n  );\n\n  // const lastGameweeksResults = results.fixtures.filter(\n  //   (games) => games.game_week === mostRecentGameweek - 1\n  // );\n\n  const leagueTable = tableArray.filter((table) => table.id === id);\n\n  league = leagueTable[0].table;\n\n  let statistics;\n  let leagueStatistics = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}leagueStats/${id}`\n  );\n  await leagueStatistics.json().then((stats) => {\n    statistics = stats.data;\n  });\n\n  if (league !== undefined) {\n    ReactDOM.render(\n      <LeagueTable\n        Teams={league}\n        Stats={statistics}\n        Key={`League${index}`}\n        GamesPlayed={statistics.game_week}\n        Results={gameweeksResults}\n        mostRecentGameweek={mostRecentGameweek}\n      />,\n      document.getElementById(`leagueName${id}`)\n    );\n  }\n}\n\nasync function createFixture(match, result, mockBool) {\n  let roundedHomeOdds;\n  let roundedAwayOdds;\n  let roundedBTTSOdds;\n  let homeFraction;\n  let awayFraction;\n  let bttsFraction;\n\n  if (selectedOdds === \"Fractional odds\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      roundedHomeOdds = (Math.round(match.homeOdds * 5) / 5).toFixed(1);\n      roundedAwayOdds = (Math.round(match.awayOdds * 5) / 5).toFixed(1);\n\n      if (roundedHomeOdds < 1.1) {\n        roundedHomeOdds = 1.1;\n      }\n      if (roundedAwayOdds < 1.1) {\n        roundedAwayOdds = 1.1;\n      }\n\n      try {\n        homeFraction = oddslib\n          .from(\"decimal\", roundedHomeOdds)\n          .to(\"fractional\", { precision: 1 });\n        awayFraction = oddslib\n          .from(\"decimal\", roundedAwayOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      roundedBTTSOdds = (Math.round(match.bttsOdds * 5) / 5).toFixed(1);\n\n      if (roundedBTTSOdds < 1.1) {\n        roundedBTTSOdds = 1.1;\n      }\n\n      try {\n        bttsFraction = oddslib\n          .from(\"decimal\", roundedBTTSOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  } else if (selectedOdds === \"Decimal odds\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      homeFraction = match.homeOdds;\n      awayFraction = match.awayOdds;\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      bttsFraction = match.bttsOdds;\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  }\n\n  match.homeTeamWinsPercentage = match.homeTeamWinPercentage;\n  match.homeTeamLossesPercentage = match.homeTeamLossPercentage;\n  match.homeTeamDrawsPercentage = match.homeTeamDrawPercentage;\n\n  match.awayTeamWinsPercentage = match.awayTeamWinPercentage;\n  match.awayTeamLossesPercentage = match.awayTeamLossPercentage;\n  match.awayTeamDrawsPercentage = match.awayTeamDrawPercentage;\n  match.fractionHome = homeFraction;\n  match.fractionAway = awayFraction;\n\n  match.bttsFraction = bttsFraction;\n\n  match.game = match.homeTeam + \" v \" + match.awayTeam;\n\n  // ReactDOM.render(\n  //   <Fixture\n  //     fixtures={matches}\n  //     result={result}\n  //     mock={mockBool}\n  //     className={\"individualFixture\"}\n  //   />,\n  //   document.getElementById(\"FixtureContainer\")\n  // );\n}\n\nexport function RenderAllFixtures(props) {\n  console.log(props);\n  return (\n    <Fixture\n      fixtures={props.matches}\n      result={props.result}\n      mock={false}\n      className={\"individualFixture\"}\n    />\n  );\n}\n//     document.getElementById(\"FixtureContainer\")\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nlet isFunctionRunning = false;\n\nexport async function generateFixtures(\n  day,\n  date,\n  selectedOdds,\n  footyStatsFormattedDate,\n  current,\n  todaysDate\n) {\n  if (!isFunctionRunning) {\n    isFunctionRunning = true;\n    //cleanup if different day is selected\n    ReactDOM.render(\n      <div></div>,\n      document.getElementById(\"GeneratePredictions\")\n    );\n    ReactDOM.render(<div></div>, document.getElementById(\"successMeasure2\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"bestPredictions\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"exoticOfTheDay\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"insights\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"longShots\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"BTTS\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"draws\"));\n\n    const url = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${footyStatsFormattedDate}`;\n    const formUrl = `${process.env.REACT_APP_EXPRESS_SERVER}form/${date}`;\n\n    matches = [];\n    fixtureArray = [];\n\n    league = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${todaysDate}`\n    );\n\n    ReactDOM.render(<div></div>, document.getElementById(\"FixtureContainer\"));\n\n    fixtureResponse = await fetch(url);\n\n    await fixtureResponse.json().then((fixtures) => {\n      fixtureArray = Array.from(fixtures.data);\n    });\n\n    console.log(fixtureArray);\n\n    let form;\n    let formArray = [];\n    allForm = [];\n    var isFormStored;\n    var isStoredLocally;\n    var leaguesStored = false;\n    let storedForm = await fetch(formUrl);\n    if (storedForm.status === 201 || storedForm.status === 200) {\n      await storedForm.json().then((form) => {\n        formArray = Array.from(form.allForm);\n        isFormStored = true;\n        isStoredLocally = true;\n        allForm = formArray;\n      });\n    } else {\n      isFormStored = false;\n      isStoredLocally = false;\n    }\n\n    ReactDOM.render(\n      <div>\n        <div className=\"LoadingText\">\n          Loading all league, fixture & form data, please be patient...\n        </div>\n        <ThreeDots height=\"3em\" fill=\"#030061\" />\n      </div>,\n      document.getElementById(\"Loading\")\n    );\n\n    leagueIdArray = [];\n    for (let i = 0; i < orderedLeagues.length; i++) {\n      leagueID = orderedLeagues[i].element.id;\n      leagueIdArray.push(leagueID);\n    }\n\n    var leaguePositions = [];\n    leagueArray = [];\n\n    console.log(league.status);\n    if (league.status === 200) {\n      console.log(\"Not fetching leagues\");\n      await league.json().then((leagues) => {\n        leagueArray = Array.from(leagues.leagueArray);\n      });\n      let allLeagueResults;\n      updateResults(false);\n\n      allLeagueResults = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}results`\n      );\n\n      await allLeagueResults.json().then((allGames) => {\n        allLeagueResultsArrayOfObjects = Array.from(allGames);\n      });\n      console.log(allLeagueResultsArrayOfObjects);\n\n      leaguesStored = true;\n      generateTables(\n        leagueArray,\n        leagueIdArray,\n        allLeagueResultsArrayOfObjects\n      );\n    } else {\n      allLeagueResultsArrayOfObjects = [];\n      console.log(\"Fetching leagues\");\n      for (let i = 0; i < orderedLeagues.length; i++) {\n        league = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}tables/${orderedLeagues[i].element.id}/${date}`\n        );\n        // eslint-disable-next-line no-loop-func\n        await league.json().then((table) => {\n          leagueArray.push(table);\n        });\n        leaguesStored = false;\n      }\n\n      //set variable for date X amount of days in the past and use that to filter the results\n\n      let startDate = (new Date().getTime() / 1000).toFixed(0);\n      // deduct 3 months\n      let targetDate = startDate - 15778463;\n\n      for (const orderedLeague of orderedLeagues) {\n        let fixtures = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${orderedLeague.element.id}`\n        );\n\n        let games = await fixtures.json();\n        let gamesFiltered = games.data.filter(\n          (game) => game.status === \"complete\"\n        );\n\n        if (current) {\n          let mostRecentResults = gamesFiltered.filter(\n            (game) => game.date_unix > targetDate\n          );\n          gamesFiltered = mostRecentResults;\n        }\n\n        // let mostRecentResults = gamesFiltered.filter(\n        //   (game) => game.date_unix > targetDate\n        // );\n\n        const shortenedResults = gamesFiltered.map(\n          ({\n            home_name,\n            away_name,\n            homeGoalCount,\n            awayGoalCount,\n            date_unix,\n            team_a_xg,\n            team_b_xg,\n            odds_ft_1,\n            odds_ft_2,\n            team_a_shots,\n            team_b_shots,\n            team_a_shotsOnTarget,\n            team_b_shotsOnTarget,\n            team_a_red_cards,\n            team_b_red_cards,\n            team_a_possession,\n            team_b_possession,\n            team_a_dangerous_attacks,\n            team_b_dangerous_attacks,\n            pre_match_teamA_overall_ppg,\n            pre_match_teamB_overall_ppg,\n            game_week,\n          }) => ({\n            home_name,\n            away_name,\n            homeGoalCount,\n            awayGoalCount,\n            date_unix,\n            team_a_xg,\n            team_b_xg,\n            odds_ft_1,\n            odds_ft_2,\n            team_a_shots,\n            team_b_shots,\n            team_a_shotsOnTarget,\n            team_b_shotsOnTarget,\n            team_a_red_cards,\n            team_b_red_cards,\n            team_a_possession,\n            team_b_possession,\n            team_a_dangerous_attacks,\n            team_b_dangerous_attacks,\n            pre_match_teamA_overall_ppg,\n            pre_match_teamB_overall_ppg,\n            game_week,\n          })\n        );\n\n        let leagueObj = {\n          // leagueObject[orderedLeague] = {\n          name: orderedLeague.name,\n          id: orderedLeague.element.id,\n          fixtures: shortenedResults,\n        };\n\n        allLeagueResultsArrayOfObjects.push(leagueObj);\n      }\n      updateResults(true);\n      generateTables(\n        leagueArray,\n        leagueIdArray,\n        allLeagueResultsArrayOfObjects\n      );\n    }\n\n    let teamPositionPrefix;\n\n    async function getPrefix(position) {\n      switch (position) {\n        case 1:\n        case 21:\n        case 31:\n        case 41:\n          teamPositionPrefix = \"st\";\n          break;\n        case 2:\n        case 22:\n        case 32:\n        case 42:\n          teamPositionPrefix = \"nd\";\n          break;\n        case 3:\n        case 23:\n        case 33:\n        case 43:\n          teamPositionPrefix = \"rd\";\n          break;\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18:\n        case 19:\n        case 20:\n        case 24:\n        case 25:\n        case 26:\n        case 27:\n        case 28:\n        case 29:\n        case 30:\n        case 34:\n        case 35:\n        case 36:\n        case 37:\n        case 38:\n        case 39:\n        case 40:\n        case 44:\n        case 45:\n        case 46:\n        case 47:\n        case 48:\n          teamPositionPrefix = \"th\";\n          break;\n        default:\n          break;\n      }\n      return teamPositionPrefix;\n    }\n\n    for (let i = 0; i < leagueArray.length; i++) {\n      let leagueInstance;\n      let homeLeague;\n      let awayLeague;\n\n      if (leagueArray[i].data.league_table !== null) {\n        leagueInstance = leagueArray[i].data.league_table;\n        homeLeague = leagueArray[i].data.all_matches_table_home;\n        awayLeague = leagueArray[i].data.all_matches_table_away;\n      } else {\n        leagueInstance = leagueArray[i].data.all_matches_table_overall;\n        homeLeague = leagueArray[i].data.all_matches_table_home;\n        awayLeague = leagueArray[i].data.all_matches_table_away;\n      }\n\n      for (let x = 0; x < leagueInstance.length; x++) {\n        let regularSeason = leagueArray[i].data.specific_tables.find(\n          (season) =>\n            season.round === \"Regular Season\" ||\n            season.round === \"2023\" ||\n            season.round === \"2023/2024\" ||\n            season.round === \"Apertura\" ||\n            season.round === \"1st Phase\"\n          // season.round === \"North\" ||\n          // season.round === \"South\"\n        );\n        let string;\n\n        if (regularSeason !== undefined && regularSeason.table) {\n          string = regularSeason.table[x];\n          homeLeague = leagueArray[i].data.all_matches_table_home;\n          awayLeague = leagueArray[i].data.all_matches_table_away;\n        } else {\n          string = leagueArray[i].data.all_matches_table_overall[x];\n          homeLeague = leagueArray[i].data.all_matches_table_home;\n          awayLeague = leagueArray[i].data.all_matches_table_away;\n        }\n\n        let stringHome = homeLeague[x];\n        let stringAway = awayLeague[x];\n\n        leaguePositions.push({\n          name: string.cleanName,\n          position: x + 1,\n          rawPosition: x + 1,\n          homeFormName: stringHome ? stringHome.cleanName : string.cleanName,\n          awayFormName: stringAway ? stringAway.cleanName : string.cleanName,\n          homeSeasonWinPercentage: stringHome\n            ? stringHome.seasonWins\n            : string.seasonWins,\n          awaySeasonWinPercentage: stringAway\n            ? stringAway.seasonWins\n            : string.seasonWins,\n          homeSeasonLossPercentage: stringHome\n            ? stringHome.seasonLosses_home\n            : string.seasonLosses_home,\n          awaySeasonLossPercentage: stringAway\n            ? stringAway.seasonLosses_away\n            : string.seasonLosses_away,\n          homeSeasonDrawPercentage: stringHome\n            ? stringHome.seasonDraws\n            : string.seasonDraws,\n          awaySeasonDrawPercentage: stringAway\n            ? stringAway.seasonDraws\n            : string.seasonDraws,\n          homeSeasonMatchesPlayed: stringHome\n            ? stringHome.matchesPlayed\n            : string.matchesPlayed,\n          awaySeasonMatchesPlayed: stringAway\n            ? stringAway.matchesPlayed\n            : string.matchesPlayed,\n          ppg: string.points / string.matchesPlayed,\n          wdl: string.wdl_record ? string.wdl_record : \"\",\n          played: string.matchesPlayed,\n          seasonGoals: string.seasonGoals,\n          seasonConceded: string.seasonConceded,\n        });\n      }\n    }\n\n    let previousLeagueName;\n    const val = \"prediction\";\n    const exists =\n      matches.filter(function (o) {\n        return o.hasOwnProperty(val);\n      }).length > 0;\n\n    console.log(orderedLeagues);\n    for (let i = 0; i < orderedLeagues.length; i++) {\n      leagueID = orderedLeagues[i].element.id;\n      leagueGames = fixtureArray.filter(\n        (game) => game.competition_id === orderedLeagues[i].element.id\n      );\n\n      for (const fixture of leagueGames) {\n        const unixTimestamp = fixture.date_unix;\n        const milliseconds = unixTimestamp * 1000;\n        const dateObject = new Date(milliseconds);\n\n        let match = {};\n        if (orderedLeagues[i].name !== previousLeagueName) {\n          match.leagueName = orderedLeagues[i].name;\n          match.leagueIndex = i;\n          match.leagueID = leagueID;\n        } else {\n          match.leagueName = null;\n          match.leagueIndex = i;\n          match.leagueID = leagueID;\n        }\n        match.id = fixture.id;\n        match.competition_id = fixture.competition_id;\n        match.date = fixture.date_unix;\n        match.time = dateObject.toLocaleString(\"en-GB\", {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n        });\n        match.homeTeam = fixture.home_name;\n        match.awayTeam = fixture.away_name;\n        match.homeOdds = +(fixture.odds_ft_1 + 0.1).toFixed(2);\n        match.awayOdds = +(fixture.odds_ft_2 + 0.1).toFixed(2);\n        match.drawOdds = +(fixture.odds_ft_x + 0.1).toFixed(2);\n        match.homeDoubleChance = fixture.odds_doublechance_1x;\n        match.awayDoubleChance = fixture.odds_doublechance_x2;\n        match.bttsOdds = fixture.odds_btts_yes;\n        match.homeId = fixture.homeID;\n        match.awayId = fixture.awayID;\n        match.form = [];\n        match.homeTeamInfo = [];\n        match.awayTeamInfo = [];\n        match.btts = false;\n\n        previousLeagueName = orderedLeagues[i].name;\n\n        let homeTeaminLeague;\n        let awayTeaminLeague;\n        let teamPositionHome;\n        let teamPositionHomeTable;\n        let teamPositionAwayTable;\n        let homeTeamWinPercentageHome;\n        let awayTeamWinPercentageAway;\n        let homeTeamLossPercentageHome;\n        let awayTeamLossPercentageAway;\n        let homeTeamDrawPercentageHome;\n        let awayTeamDrawPercentageAway;\n        let teamPositionAway;\n        let homePrefix;\n        let homePrefixHomeTable;\n        let awayPrefix;\n        let awayPrefixAwayTable;\n        let homeSeasonPPG;\n        let awaySeasonPPG;\n\n        try {\n          homeTeaminLeague = leaguePositions.find(\n            (team) => team.name === match.homeTeam\n          );\n\n          let homeTeaminHomeLeague = leaguePositions.find(\n            (team) => team.homeFormName === match.homeTeam\n          );\n          teamPositionHome = homeTeaminLeague.position;\n          teamPositionHomeTable = homeTeaminHomeLeague.position;\n\n          WDLinLeagueHome = Array.from(homeTeaminLeague.wdl.toUpperCase());\n          HomeAverageGoals =\n            homeTeaminLeague.seasonGoals / homeTeaminLeague.played;\n          HomeAverageConceded =\n            homeTeaminLeague.seasonConceded / homeTeaminLeague.played;\n\n          homeTeamWinPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonWinPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homeTeamLossPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonLossPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homeTeamDrawPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonDrawPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homePrefix = await getPrefix(teamPositionHome);\n          homePrefixHomeTable = await getPrefix(teamPositionHomeTable);\n\n          homeSeasonPPG = homeTeaminLeague.ppg.toFixed(2);\n        } catch (error) {\n          console.log(error);\n          teamPositionHome = \"N/A\";\n          homePrefix = \"\";\n          homePrefixHomeTable = \"\";\n          homeSeasonPPG = \"N/A\";\n          homeTeaminLeague = {\n            rawPosition: \"N/A\",\n          };\n          WDLinLeagueHome = \"N/A\";\n        }\n\n        try {\n          awayTeaminLeague = leaguePositions.find(\n            (team) => team.name === match.awayTeam\n          );\n\n          let awayTeaminAwayLeague = leaguePositions.find(\n            (team) => team.awayFormName === match.awayTeam\n          );\n\n          teamPositionAway = awayTeaminLeague.position;\n          teamPositionAwayTable = awayTeaminAwayLeague.position;\n\n          WDLinLeagueAway = Array.from(awayTeaminLeague.wdl.toUpperCase());\n          AwayAverageGoals =\n            awayTeaminLeague.seasonGoals / awayTeaminLeague.played;\n          AwayAverageConceded =\n            awayTeaminLeague.seasonConceded / awayTeaminLeague.played;\n\n          awayTeamWinPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonWinPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayTeamLossPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonLossPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayTeamDrawPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonDrawPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayPrefix = await getPrefix(teamPositionAway);\n          awayPrefixAwayTable = await getPrefix(teamPositionAwayTable);\n\n          awaySeasonPPG = awayTeaminLeague.ppg.toFixed(2);\n        } catch (error) {\n          console.log(error);\n          teamPositionAway = \"N/A\";\n          awayPrefix = \"\";\n          awaySeasonPPG = \"N/A\";\n          awayTeaminLeague = {\n            rawPosition: \"N/A\",\n          };\n          WDLinLeagueAway = \"N/A\";\n        }\n\n        if (!isFormStored) {\n          form = await getForm(match);\n\n          let homeFormString5 =\n            form[0].data[0].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString5 =\n            form[1].data[0].stats.additional_info.formRun_overall.toUpperCase();\n          let homeFormString6 =\n            form[0].data[1].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString6 =\n            form[1].data[1].stats.additional_info.formRun_overall.toUpperCase();\n          let homeFormString10 =\n            form[0].data[2].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString10 =\n            form[1].data[2].stats.additional_info.formRun_overall.toUpperCase();\n\n          let homeFormRun =\n            form[0].data[2].stats.additional_info.formRun_home.toUpperCase();\n          let awayFormRun =\n            form[1].data[2].stats.additional_info.formRun_away.toUpperCase();\n\n          if (WDLinLeagueHome.length >= 10) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = WDLinLeagueHome.slice(-6);\n            lastTenFormHome = WDLinLeagueHome.slice(-10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = WDLinLeagueAway.slice(-6);\n            lastTenFormAway = WDLinLeagueAway.slice(-10);\n            leagueOrAll = \"League\";\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else if (WDLinLeagueHome.length >= 6) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = WDLinLeagueHome.slice(-6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = WDLinLeagueAway.slice(-6);\n            lastTenFormAway = Array.from(awayFormString10);\n            leagueOrAll = \"League\";\n\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else if (WDLinLeagueHome.length >= 5) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = Array.from(homeFormString6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = Array.from(awayFormString6);\n            lastTenFormAway = Array.from(awayFormString10);\n            leagueOrAll = \"League\";\n\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else {\n            lastThreeFormHome = [\n              homeFormString5[2],\n              homeFormString5[3],\n              homeFormString5[4],\n            ];\n            lastFiveFormHome = Array.from(homeFormString5);\n            lastSixFormHome = Array.from(homeFormString6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = [\n              awayFormString5[2],\n              awayFormString5[3],\n              awayFormString5[4],\n            ];\n\n            lastFiveFormAway = Array.from(awayFormString5);\n            lastSixFormAway = Array.from(awayFormString6);\n            lastTenFormAway = Array.from(awayFormString10);\n\n            leagueOrAll = \"All\";\n\n            homeAverageGoals = undefined;\n            homeAverageConceded = undefined;\n            awayAverageGoals = undefined;\n            awayAverageConceded = undefined;\n          }\n\n          formRunHome = Array.from(homeFormRun);\n          formRunAway = Array.from(awayFormRun);\n\n          if (\n            teamPositionHome === 0 ||\n            form[0].data[0].season_format !== \"Domestic League\"\n          ) {\n            teamPositionHome = \"N/A\";\n            teamPositionHomeTable = \"N/A\";\n            homePrefix = \"\";\n            homePrefixHomeTable = \"\";\n          }\n\n          if (\n            teamPositionAway === 0 ||\n            form[0].data[0].season_format !== \"Domestic League\"\n          ) {\n            teamPositionAway = \"N/A\";\n            teamPositionAwayTable = \"N/A\";\n            awayPrefix = \"\";\n            awayPrefixAwayTable = \"\";\n          }\n\n          console.log(form[0].data[2]);\n\n          allForm.push({\n            id: match.id,\n            teamIDHome: match.homeId,\n            teamIDAway: match.awayId,\n            leagueId: leagueID,\n            home: {\n              teamName: match.homeTeam,\n              0: {\n                XGOverall: parseFloat(form[0].data[0].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[0].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[0].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[0].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[0].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[0].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[0].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[0].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[0].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[0].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[0].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[0].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[0].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[0].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[0].stats.shotsOnTargetAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[0].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[0].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[0].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[0].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[0].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[0].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[0].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[0].stats.seasonBTTSPercentage_home\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition: homeTeaminLeague.rawPosition\n                  ? homeTeaminLeague.rawPosition\n                  : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n              1: {\n                XGOverall: parseFloat(form[0].data[1].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[1].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[1].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[1].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[1].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[1].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[1].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[1].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[1].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[1].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[1].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[1].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[1].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[1].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[1].stats.shotsOnTargetAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[1].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[1].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[1].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[1].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[1].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[1].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[1].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[1].stats.seasonBTTSPercentage_home\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition: homeTeaminLeague.rawPosition\n                  ? homeTeaminLeague.rawPosition\n                  : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n              2: {\n                XGOverall: parseFloat(form[0].data[2].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[2].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[2].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[2].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[2].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[2].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[2].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[2].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[2].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[2].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[2].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[2].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[2].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[2].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[2].stats.shotsOnTargetAVG_home\n                ),\n                AverageShots: parseFloat(\n                  form[0].data[2].stats.shotsAVG_overall\n                ),\n                AverageShotsHomeOrAway: parseFloat(\n                  form[0].data[2].stats.shotsAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[2].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[2].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[2].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[2].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[2].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[2].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[2].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[2].stats.seasonBTTSPercentage_home\n                ),\n                lastThreeForm: lastThreeFormHome,\n                LastFiveForm: lastFiveFormHome,\n                LastSixForm: lastSixFormHome,\n                LastTenForm: lastTenFormHome,\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition: homeTeaminLeague.rawPosition\n                  ? homeTeaminLeague.rawPosition\n                  : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                SeasonPPG: homeSeasonPPG,\n                WinPercentage: homeTeamWinPercentageHome,\n                LossPercentage: homeTeamLossPercentageHome,\n                DrawPercentage: homeTeamDrawPercentageHome,\n                formRun: formRunHome,\n                goalDifference:\n                  form[0].data[2].stats.seasonGoalDifference_overall,\n                goalDifferenceHomeOrAway:\n                  form[0].data[2].stats.seasonGoalDifference_home,\n                BttsPercentage:\n                  form[0].data[2].stats.seasonBTTSPercentage_overall,\n                BttsPercentageHomeOrAway:\n                  form[0].data[2].stats.seasonBTTSPercentage_home,\n                CardsTotal: form[0].data[2].stats.cardsTotal_overall,\n                CornersAverage: form[0].data[2].stats.cornersAVG_overall,\n                ScoredBothHalvesPercentage:\n                  form[0].data[2].stats.scoredBothHalvesPercentage_overall,\n                LastMatch: await convertTimestamp(\n                  form[0].data[0].last_updated_match_timestamp\n                ),\n                WDLRecord: WDLinLeagueHome,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n            },\n            away: {\n              teamName: match.awayTeam,\n              0: {\n                XGOverall: parseFloat(form[1].data[0].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[0].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[0].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[0].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[0].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[0].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[0].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[0].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[0].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[0].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[0].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[0].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[0].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[0].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[0].stats.shotsOnTargetAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[0].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[0].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[0].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[0].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[0].stats.seasonBTTSPercentage_away\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n              1: {\n                XGOverall: parseFloat(form[1].data[1].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[1].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[1].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[1].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[1].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[1].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[1].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[1].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[1].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[1].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[1].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[1].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[1].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[1].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[1].stats.shotsOnTargetAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[1].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[1].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[1].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[1].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[1].stats.seasonBTTSPercentage_away\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n              2: {\n                XGOverall: parseFloat(form[1].data[2].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[2].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[2].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[2].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[2].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[2].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[2].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[2].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[2].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[2].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[2].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[2].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[2].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[2].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[2].stats.shotsOnTargetAVG_away\n                ),\n                AverageShots: parseFloat(\n                  form[1].data[2].stats.shotsAVG_overall\n                ),\n                AverageShotsHomeOrAway: parseFloat(\n                  form[1].data[2].stats.shotsAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[2].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[2].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[2].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[2].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[2].stats.seasonBTTSPercentage_away\n                ),\n                lastThreeForm: lastThreeFormAway,\n                LastFiveForm: lastFiveFormAway,\n                LastSixForm: lastSixFormAway,\n                LastTenForm: lastTenFormAway,\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                SeasonPPG: awaySeasonPPG,\n                WinPercentage: awayTeamWinPercentageAway,\n                LossPercentage: awayTeamLossPercentageAway,\n                DrawPercentage: awayTeamDrawPercentageAway,\n                formRun: formRunAway,\n                goalDifference:\n                  form[1].data[2].stats.seasonGoalDifference_overall,\n                goalDifferenceHomeOrAway:\n                  form[1].data[2].stats.seasonGoalDifference_away,\n                BttsPercentage:\n                  form[1].data[2].stats.seasonBTTSPercentage_overall,\n                BttsPercentageHomeOrAway:\n                  form[1].data[2].stats.seasonBTTSPercentage_away,\n                CardsTotal: form[1].data[2].stats.cardsTotal_overall,\n                CornersAverage: form[1].data[2].stats.cornersAVG_overall,\n                ScoredBothHalvesPercentage:\n                  form[1].data[2].stats.scoredBothHalvesPercentage_overall,\n                LastMatch: await convertTimestamp(\n                  form[1].data[0].last_updated_match_timestamp\n                ),\n                WDLRecord: WDLinLeagueAway,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n            },\n          });\n        }\n\n        match.homeBadge = fixture.home_image;\n        match.awayBadge = fixture.away_image;\n\n        match.homePpg = fixture.home_ppg.toFixed(2);\n        match.awayPpg = fixture.away_ppg.toFixed(2);\n\n        match.lastFiveFormHome = lastFiveFormHome;\n        match.lastFiveFormAway = lastFiveFormAway;\n\n        match.homeRawPosition = homeTeaminLeague.rawPosition;\n        match.awayRawPosition = awayTeaminLeague.rawPosition;\n\n        match.homeTeamHomePosition = `${teamPositionHomeTable}${homePrefixHomeTable}`;\n        match.awayTeamAwayPosition = `${teamPositionAwayTable}${awayPrefixAwayTable}`;\n\n        match.homeTeamHomePositionRaw = teamPositionHomeTable;\n        match.awayTeamAwayPositionRaw = teamPositionAwayTable;\n\n        match.homeTeamWinPercentage = homeTeamWinPercentageHome;\n        match.awayTeamWinPercentage = awayTeamWinPercentageAway;\n\n        match.homeTeamLossPercentage = homeTeamLossPercentageHome;\n        match.awayTeamLossPercentage = awayTeamLossPercentageAway;\n\n        match.homeTeamDrawPercentage = homeTeamDrawPercentageHome;\n        match.awayTeamDrawPercentage = awayTeamDrawPercentageAway;\n        match.status = fixture.status;\n        match.over25Odds = fixture.odds_ft_over25;\n        match.btts_potential = fixture.btts_potential;\n        match.game = match.homeTeam + \" v \" + match.awayTeam;\n\n        match.homeGoals = fixture.homeGoalCount;\n        match.awayGoals = fixture.awayGoalCount;\n\n        match.expectedGoalsHomeToDate = fixture.team_a_xg_prematch;\n        match.expectedGoalsAwayToDate = fixture.team_b_xg_prematch;\n        match.game_week = fixture.game_week;\n\n        if (match.status !== \"canceled\" || match.status !== \"suspended\") {\n          matches.push(match);\n          await createFixture(match, false);\n        }\n      }\n\n\n      if (matches.length > 0) {\n        ReactDOM.render(\n          <Fragment>\n            <Button\n              text={\"Get Predictions & League stats\"}\n              onClickEvent={() => getScorePrediction(day)}\n              className={\"GeneratePredictions\"}\n            />\n            <div className=\"Version\">Prediction engine v3.0.3</div>\n          </Fragment>,\n          document.getElementById(\"GeneratePredictions\")\n        );\n      }\n\n      // }\n    }\n\n    ReactDOM.render(\n      <div>\n        <div className=\"LoadingText\"></div>\n      </div>,\n      document.getElementById(\"Loading\")\n    );\n\n    async function updateResults(bool) {\n      console.log(\"updating results\");\n      if (bool === true) {\n        await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}results`, {\n          method: \"DELETE\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }).then(async () => {\n          await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}results`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(allLeagueResultsArrayOfObjects),\n          });\n        });\n      }\n    }\n\n    if (!isStoredLocally) {\n      await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}allForm/${date}`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ allForm }),\n      });\n      await updateResults(true);\n    }\n    console.log(leaguesStored);\n    if (!leaguesStored) {\n      await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${todaysDate}`,\n        {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ leagueArray }),\n        }\n      );\n    }\n    // const allFixtures = await RenderAllFixtures(matches, false)\n    ReactDOM.render(\n      <RenderAllFixtures matches={matches} result={false} bool={false} />,\n      document.getElementById(\"FixtureContainer\")\n    );\n    // ReactDOM.render(<RenderAllFixtures matches={matches} bool={false}/>),document.getElementById(\"FixtureContainer\")\n    setTimeout(() => {\n      isFunctionRunning = false;\n    }, 3000);\n  }\n}\n","import React from \"react\";\n\nfunction HeadToHead(props) {\n  return (\n    <ul className={props.className} style={props.style}>\n      <li key=\"Stadium\" className=\"Stadium\" data-cy={props.name + \"Stadium\"}>\n        {`Venue - ${props.stadium}`}\n      </li>\n      <div className=\"KeyStatsOne\">\n      <li key=\"h2h\" className=\"h2h\" data-cy={props.name + \"h2h\"}>\n        {`Matches played: ${props.matches}`}\n      </li>\n      <li key=\"homeWins\" className=\"homeWins\" data-cy={props.name + \"homeWins\"}>\n        {`${props.homeTeam} wins: ${props.homeWins}`}\n      </li>\n      <li key=\"awayWins\" className=\"awayWins\" data-cy={props.name + \"awayWins\"}>\n        {`${props.awayTeam} wins: ${props.awayWins}`}\n      </li>\n      <li key=\"draws\" className=\"draws\" data-cy={props.name + \"draws\"}>\n        {`Draws: ${props.draws}`}\n      </li>\n      </div>\n      <div className=\"KeyStatsTwo\">\n      <li\n        key=\"averageGoals\"\n        className=\"averageGoals\"\n        data-cy={props.name + \"averageGoals\"}\n      >\n        {`Average goals in fixture: ${props.averageGoals}`}\n      </li>\n      <li\n        key=\"bestHomeOdds\"\n        className=\"bestHomeOdds\"\n        data-cy={props.name + \"bestHomeOdds\"}\n      >\n        {`Best oods for home win @: ${props.bestHomeOdds}`}\n      </li>\n      <li\n        key=\"bestAwayOdds\"\n        className=\"bestAwayOdds\"\n        data-cy={props.name + \"bestAwayOdds\"}\n      >\n        {`Best oods for away win @: ${props.bestAwayOdds}`}\n      </li>\n      </div>\n      <li\n        key=\"lastGameDetail\"\n        className=\"LastGameDetail\"\n        data-cy={props.name + \"Last\"}\n      >\n        {`Last meeting - ${props.lastGameStadiumName} ${props.lastGameDate}`}\n      </li>\n      <div className=\"LastGameOverview\">\n        <div\n          key=\"lastGame\"\n          className=\"LastGameHome\"\n          data-cy={props.name + \"LastGame\"}\n        >\n          {`${props.lastGameHomeTeam}`}\n        </div>\n        <span className=\"LastGameScore\">{`${props.lastGameHomeGoals}`}</span>\n        <span className=\"LastGameScore\">{`${props.lastGameAwayGoals}`}</span>\n        <div className=\"LastGameAway\">{`${props.lastGameAwayTeam}`}</div>\n      </div>\n\n      <li\n        key=\"secondToLastGameDetail\"\n        className=\"secondToLastGameDetail\"\n        data-cy={props.name + \"secondToLast\"}\n      >\n        {`Second to last meeting - ${props.secondToLastGameStadiumName} ${props.secondToLastGameDate}`}\n      </li>\n      <div className=\"LastGameOverview\">\n        <div\n          key=\"lastGame\"\n          className=\"LastGameHome\"\n          data-cy={props.name + \"LastGame\"}\n        >\n          {`${props.secondToLastGameHomeTeam}`}\n        </div>\n        <span className=\"LastGameScore\">{`${props.secondToLastGameHomeGoals}`}</span>\n        <span className=\"LastGameScore\">{`${props.secondToLastGameAwayGoals}`}</span>\n        <div className=\"LastGameAway\">\n          {`${props.secondToLastGameAwayTeam}`}\n        </div>\n      </div>\n    </ul>\n  );\n}\n\nexport default HeadToHead;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    // backgroundColor: \"#dedddd\",\n    padding: 10,\n    textAlign: \"center\",\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    // border: \"none\",\n    margin: \"none\",\n    color: 'white',\n    lineHeight: '2em',\n    backgroundColor: '#030061',\n  },\n  body: {\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    padding: 10,\n    color: 'white',\n    // border: \"none\",\n    margin: \"none\",\n    backgroundColor: '#030061',\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#030061\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#030052\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\n\nexport default function CustomizedTables(props) {\n\n\n  return (\n    <TableContainer className=\"StatsTable\">\n      <Table aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Stat</StyledTableCell>\n            <StyledTableCell>H2H history</StyledTableCell>\n            <StyledTableCell>XGTipping forecast</StyledTableCell>\n            <StyledTableCell>Odds (yes)</StyledTableCell>\n            <StyledTableCell>Odds (no)</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        <StyledTableRow key=\"O05\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 0.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o05Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o05Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u05Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O15\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 1.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o15Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o15Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u15Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O25\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 2.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o25Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o25Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u25Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O35\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 3.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o35Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o35Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u35Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"BTTS\" className=\"BTTSStats\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              BTTS %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.BTTSStat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSForecast}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSOdds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSOddsNo}</StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport HeadToHead from \"../components/HeadToHead\";\nimport { Fragment } from \"react\";\nimport CustomizedTables from \"../components/Table\";\n\nexport async function getTeamStats(\n  id,\n  home,\n  away,\n  homeBTTS,\n  homeOnlyBTTS,\n  awayBTTS,\n  awayOnlyBTTS\n) {\n  let identifier = id;\n  let bestHomeOdds;\n  let bestHomeOddsProvider;\n  let bestAwayOdds;\n  let bestAwayOddsProvider;\n\n  let match = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}match/${identifier}`\n  );\n  await match.json().then(async (match) => {\n    let matchArr = match.data.h2h.previous_matches_ids;\n    let previousMatchDetails;\n    let secondToPreviousMatchDetails;\n\n    let oddsComparisonHomeArray = [];\n    let oddsComparisonAwayArray = [];\n\n    if (match.data.odds_comparison) {\n      oddsComparisonHomeArray = match.data.odds_comparison[\"FT Result\"][1];\n      oddsComparisonAwayArray = match.data.odds_comparison[\"FT Result\"][2];\n\n      let sortedHomeOdds = Object.entries(oddsComparisonHomeArray).sort(\n        (a, b) => b[1] - a[1]\n      );\n      let sortedAwayOdds = Object.entries(oddsComparisonAwayArray).sort(\n        (a, b) => b[1] - a[1]\n      );\n\n      bestHomeOddsProvider = sortedHomeOdds[0][0];\n      bestHomeOdds = sortedHomeOdds[0][1];\n      bestAwayOddsProvider = sortedAwayOdds[0][0];\n      bestAwayOdds = sortedAwayOdds[0][1];\n    } else {\n      bestHomeOddsProvider = \"N/A\";\n      bestHomeOdds = \"N/A\";\n      bestAwayOddsProvider = \"N/A\";\n      bestAwayOdds = \"N/A\";\n    }\n\n    async function getBTTSPercentage(\n      homeToal,\n      home,\n      awayTotal,\n      away,\n      fixtureHistory\n    ) {\n      let total = homeToal + home + awayTotal + away + fixtureHistory;\n      return total / 5;\n    }\n\n    async function getFairOdds(impliedProbability) {\n      let impliedProbabilityDivided = impliedProbability / 100;\n      return (1 / impliedProbabilityDivided).toFixed(2);\n    }\n\n    if (match.data.h2h.previous_matches_results.totalMatches > 0) {\n      matchArr.sort((a, b) => b.date_unix - a.date_unix);\n      let lastMatch = matchArr[0].id;\n      let secondMatchExists = true;\n      let secondToLastMatch =\n        matchArr[1] !== undefined ? matchArr[1].id : false;\n\n      let previousMatch = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}match/${lastMatch}`\n      );\n      let dateObject;\n      let date;\n      let date2;\n      await previousMatch.json().then(async (game) => {\n        previousMatchDetails = game.data;\n        const unixTimestamp = previousMatchDetails.date_unix;\n        const milliseconds = unixTimestamp * 1000;\n        dateObject = new Date(milliseconds);\n        date = `${dateObject.getDate()}/${\n          dateObject.getMonth() + 1\n        }/${dateObject.getFullYear()}`;\n\n        let secondToPreviousMatch;\n        let dateObject2;\n\n        if (secondMatchExists !== false) {\n          secondToPreviousMatch = await fetch(\n            `${process.env.REACT_APP_EXPRESS_SERVER}match/${secondToLastMatch}`\n          );\n          await secondToPreviousMatch.json().then((game) => {\n            secondToPreviousMatchDetails = game.data;\n            const unixTimestamp = secondToPreviousMatchDetails.date_unix;\n            const milliseconds = unixTimestamp * 1000;\n            dateObject2 = new Date(milliseconds);\n            date2 = `${dateObject2.getDate()}/${\n              dateObject2.getMonth() + 1\n            }/${dateObject2.getFullYear()}`;\n          });\n        }\n      });\n\n      const BTTSForecast = await getBTTSPercentage(\n        homeBTTS,\n        homeOnlyBTTS,\n        awayBTTS,\n        awayOnlyBTTS,\n        match.data.h2h.betting_stats.bttsPercentage\n      );\n      const fairOddsBTTSYes = await getFairOdds(BTTSForecast);\n      const fairOddsBTTSNo = await getFairOdds(100 - BTTSForecast);\n\n      ReactDOM.render(\n        <Fragment>\n          <h3>Fixture history</h3>\n          <HeadToHead\n            className={\"PreviousMatchStats\"}\n            homeTeam={home}\n            awayTeam={away}\n            stadium={match.data.stadium_name}\n            matches={match.data.h2h.previous_matches_results.totalMatches}\n            homeWins={match.data.h2h.previous_matches_results.team_a_wins}\n            awayWins={match.data.h2h.previous_matches_results.team_b_wins}\n            draws={match.data.h2h.previous_matches_results.draw}\n            averageGoals={match.data.h2h.betting_stats.avg_goals}\n            bestHomeOdds={`${bestHomeOddsProvider} - ${bestHomeOdds}`}\n            bestAwayOdds={`${bestAwayOddsProvider} - ${bestAwayOdds}`}\n            lastGameStadiumName={\n              previousMatchDetails.stadium_name\n                ? previousMatchDetails.stadium_name\n                : \"-\"\n            }\n            lastGameHomeGoals={\n              previousMatchDetails.homeGoalCount !== undefined\n                ? previousMatchDetails.homeGoalCount\n                : \"-\"\n            }\n            lastGameAwayGoals={\n              previousMatchDetails.awayGoalCount !== undefined\n                ? previousMatchDetails.awayGoalCount\n                : \"-\"\n            }\n            lastGameHomeTeam={\n              previousMatchDetails.home_name\n                ? previousMatchDetails.home_name\n                : \"-\"\n            }\n            lastGameAwayTeam={\n              previousMatchDetails.away_name\n                ? previousMatchDetails.away_name\n                : \"-\"\n            }\n            lastGameDate={!isNaN(date) ? date : \"-\"}\n            secondToLastGameStadiumName={\n              secondToPreviousMatchDetails.stadium_name\n                ? secondToPreviousMatchDetails.stadium_name\n                : \"-\"\n            }\n            secondToLastGameHomeGoals={\n              secondToPreviousMatchDetails.homeGoalCount !== undefined\n                ? secondToPreviousMatchDetails.homeGoalCount\n                : \"-\"\n            }\n            secondToLastGameAwayGoals={\n              secondToPreviousMatchDetails.awayGoalCount !== undefined\n                ? secondToPreviousMatchDetails.awayGoalCount\n                : \"-\"\n            }\n            secondToLastGameHomeTeam={\n              secondToPreviousMatchDetails.home_name\n                ? secondToPreviousMatchDetails.home_name\n                : \"-\"\n            }\n            secondToLastGameAwayTeam={\n              secondToPreviousMatchDetails.away_name\n                ? secondToPreviousMatchDetails.away_name\n                : \"-\"\n            }\n            secondToLastGameDate={!isNaN(date2) ? date2 : \"-\"}\n          ></HeadToHead>\n          <CustomizedTables\n            o05Stat={match.data.h2h.betting_stats.over05Percentage}\n            o15Stat={match.data.h2h.betting_stats.over15Percentage}\n            o15Forecast={match.data.o15_potential}\n            o05Odds={match.data.odds_ft_over05}\n            u05Odds={match.data.odds_ft_under05}\n            o15Odds={match.data.odds_ft_over15}\n            u15Odds={match.data.odds_ft_under15}\n            o25Stat={match.data.h2h.betting_stats.over25Percentage}\n            o25Forecast={match.data.o25_potential}\n            o25Odds={match.data.odds_ft_over25}\n            u25Odds={match.data.odds_ft_under25}\n            o35Stat={match.data.h2h.betting_stats.over35Percentage}\n            o35Forecast={match.data.o35_potential}\n            o35Odds={match.data.odds_ft_over35}\n            u35Odds={match.data.odds_ft_under35}\n            BTTSStat={match.data.h2h.betting_stats.bttsPercentage}\n            BTTSForecast={`${BTTSForecast}%`}\n            BTTSOdds={`${match.data.odds_btts_yes}\\n Fair odds: ${fairOddsBTTSYes}`}\n            BTTSOddsNo={`${match.data.odds_btts_no}\\n Fair odds: ${fairOddsBTTSNo}`}\n            CornersStat={\"–\"}\n            CornersForecast={match.data.corners_potential}\n            CornersOdds={match.data.odds_corners_over_105}\n          />\n        </Fragment>,\n        document.getElementById(`H2HStats${identifier}`)\n      );\n    } else {\n      ReactDOM.render(\n        <div>No fixture history found</div>,\n        document.getElementById(`H2HStats${identifier}`)\n      );\n    }\n  });\n}\n","import { parse } from \"dotenv\";\n\nasync function getOverOrUnderText(xgSum) {\n  let overUnderAchievingSum = xgSum;\n  let text;\n  switch (true) {\n    case overUnderAchievingSum > 1.5:\n      text =\n        \"Underachieving drastically against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > 1.25 && overUnderAchievingSum <= 1.5:\n      text =\n        \"Underachieving to a large degree against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > 1 && overUnderAchievingSum <= 1.25:\n      text = \"Underachieving against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > 0.75 && overUnderAchievingSum <= 1:\n      text =\n        \"Underachieving to a small degree against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > 0.4 && overUnderAchievingSum <= 0.75:\n      text =\n        \"Underachieving slighly against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > -0.4 && overUnderAchievingSum <= 0.4:\n      text =\n        \"Roughly tracking on par with their expected goal difference.\";\n      break;\n\n    case overUnderAchievingSum < -0.4 && overUnderAchievingSum >= -0.75:\n      text =\n        \"Overachieving slighly against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum < -0.75 && overUnderAchievingSum >= -1:\n      text =\n        \"Overachieving to a small degree against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum < -1 && overUnderAchievingSum >= -1.25:\n      text = \"Overachieving against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum < -1.25 && overUnderAchievingSum >= -1.5:\n      text =\n        \"Overachieving to a large degree against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum < -1.5:\n      text =\n        \"Overachieving drastically against their expected goal difference.\";\n      break;\n    default:\n      text = \"\";\n      break;\n  }\n  return text;\n}\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nasync function getXGDifferential(xgFor, xgAgainst, goalsFor, goalsAgainst) {\n  let xgDiff = xgFor - xgAgainst;\n  let goalDiff = goalsFor - goalsAgainst;\n  let compareXgAndGoalDiff = await diff(xgDiff, goalDiff);\n\n  return compareXgAndGoalDiff;\n}\n\nasync function getAttackingSummary(goalsRecent, goalsLongTerm) {\n\n  let text;\n  if (goalsRecent >= 3) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Free scoring and improving in front of goal recently.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Free scoring and consistent in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Free scoring but less so recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 3 && goalsRecent >= 2) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text =\n          \"Impressive scoring stats and improving in front of goal recently.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Impressive scoring stats and consistent in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        console.log(goalsRecent)\n        console.log(goalsLongTerm)\n        text = \"Impressive scoring stats but less so recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 2 && goalsRecent >= 1) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Decent scoring stats and improving in front of goal recently.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Decent scoring stats and consistent in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Decent scoring stats but less so recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 1 && goalsRecent > 0) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Poor scoring stats but improving in front of goal recently.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Poor scoring stats and consistently poor in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Poor scoring stats showing no signs of improvement.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent === 0) {\n    switch (true) {\n      case goalsRecent === 0:\n        text = \"Woeful goal stats in recent games.\";\n        break;\n      default:\n        text = \"\";\n        break;\n    }\n  }\n  return text;\n}\n\nasync function getDefenceSummary(cleansheetStat) {\n  let text;\n  switch (true) {\n    case cleansheetStat > 80:\n      text = `Incredibly strong defensively, with ${cleansheetStat}% of their games ending in a cleansheet`;\n      break;\n    case cleansheetStat > 60 && cleansheetStat <= 80:\n      text = `Very strong defensively, with ${cleansheetStat}% of their games ending in a cleansheet`;\n      break;\n    case cleansheetStat > 40 && cleansheetStat <= 60:\n      text = `Defensively impressive, with ${cleansheetStat}% of their games ending in a cleansheet`;\n      break;\n    case cleansheetStat > 20 && cleansheetStat <= 40:\n      text = `Defensively, ${cleansheetStat}% of their games have ended in a cleansheet`;\n      break;\n    case cleansheetStat > 1 && cleansheetStat <= 20:\n      text = `Defensively frail, with only ${cleansheetStat}% of their games ending in a cleansheet`;\n      break;\n      case cleansheetStat === 0:\n        text = `Defensively weak, with ${cleansheetStat}% of their games ending in a cleansheet`;\n        break;\n    default:\n      break;\n  }\n  return text;\n}\n\nasync function GenerateFormSummary(form, lastx, recentForm) {\n  let text;\n  // let six = lastx[2];\n  let ten = lastx[1];\n  let five = lastx[0];\n\n  let xgSum = await getXGDifferential(\n    form.XGOverall,\n    form.XGAgainstAvgOverall,\n    form.ScoredOverall / 10,\n    form.ConcededOverall / 10\n  );\n  let xgText = await getOverOrUnderText(xgSum);\n  let attackString = await getAttackingSummary(\n    form.last5Goals,\n    form.last10Goals\n  );\n  let defenceString = await getDefenceSummary(form.CleanSheetPercentage);\n  let pointsAverageTotal =\n    (parseFloat(five) + parseFloat(ten)) / 2;\n\n  if (pointsAverageTotal >= 2.6) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Outstanding recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Outstanding recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Outstanding recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 2.3) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Excellent recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Excellent recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Excellent recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 2) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Very good recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Very good recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Very good recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 1.7) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Good recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Good recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Good recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 1.4) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Fairly good recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Fairly good recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Fairly good recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 1.1) {\n    console.log(2);\n    switch (true) {\n      case five > ten:\n        text =\n          \"Average recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Average recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Average recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 0.8) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Poor recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Poor recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Poor recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 0.5) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Very poor recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Very poor recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Very poor recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal < 0.5) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Terrible recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Terrible recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Terrible recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else {\n    console.log(pointsAverageTotal);\n  }\n  return text + ` ${xgText} ${attackString} ${defenceString}`;\n}\n\nexport default GenerateFormSummary;\n","// import { light } from \"@material-ui/core/styles/createPalette\";\n// import { toBePartiallyChecked } from \"@testing-library/jest-dom/dist/matchers\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  ArcElement,\n  LineElement,\n  Filler,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Line, Radar, Bar } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  ArcElement,\n  Filler,\n  BarElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport function Chart(props) {\n  console.log(props)\n  let length;\n  let depth;\n\n  if (props.type === \"Points over time\") {\n    length = props.data1.length * 3;\n    depth = 0;\n  } else if (props.type === \"Rolling average points over last 10\") {\n    length = Math.abs(props.height);\n    depth = 0;\n  } else if (Math.abs(props.height) > Math.abs(props.depth)) {\n    length = Math.abs(props.height);\n    depth = -Math.abs(props.height);\n  } else if (Math.abs(props.height) < Math.abs(props.depth)) {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  } else {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  }\n\n  const options = {\n    color: \"black\",\n    responsive: true,\n    aspectRatio: 1.2,\n    maintainAspectRatio: true,\n    layout: {\n      padding: 3,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    scales: {\n      y: {\n        suggestedMin: depth,\n        suggestedMax: length,\n        // suggestedMax: Math.max(...props.data1) > 3 ? Math.max(...props.data1) : 3,\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          font: {\n            size: 12,\n          },\n        },\n      },\n      x: {\n        title: {\n          display: false,\n          text: \"Last X Games\",\n          font: {\n            size: 10,\n          },\n        },\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          display: false,\n          font: {\n            size: 12,\n          },\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 5,\n        },\n      },\n      title: {\n        display: true,\n        text: props.type,\n        font: {\n          size: 14,\n          color: \"black\",\n        },\n      },\n    },\n  };\n\n  const labels = Array.from(props.data1.keys());\n\n  let data = {\n    labels,\n    datasets: [\n      {\n        label: props.team1,\n        font: {\n          color: \"black\",\n        },\n        data: props.data1,\n        borderColor: \"#030061\",\n        borderWidth: 2,\n        backgroundColor: \"#030061\",\n        tension: props.tension,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        borderColor: \"#970d00\",\n        borderWidth: 2,\n        backgroundColor: \"#970d00\",\n        tension: props.tension,\n      },\n    ],\n  };\n\n  return <Line options={options} data={data} />;\n}\n\nexport function RadarChart(props) {\n  const options = {\n    color: \"black\",\n    scales: {\n      r: {\n        angleLines: {\n          display: false,\n        },\n        suggestedMin: 0,\n        suggestedMax: 1,\n        ticks: {\n          precision: 0,\n        },\n        // grid: {\n        //     circular: true,\n        //   }\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 10,\n        },\n      },\n      title: {\n        display: true,\n        text: \"XG Tipping Strength Ratings\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  let data = {\n    labels: [\"Attack\", \"Defence\", \"Ball retention\", \"XG For\", \"XG Against\"],\n    datasets: [\n      {\n        label: props.team1,\n        data: props.data,\n        fill: true,\n        backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n        borderColor: \"#030061\",\n        pointBackgroundColor: \"#030061\",\n        pointBorderColor: \"#fff\",\n        pointHoverBackgroundColor: \"#fff\",\n        pointHoverBorderColor: \"rgb(255, 99, 132)\",\n        borderWidth: 2,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        fill: true,\n        backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n        borderColor: \"#970d00\",\n        pointBackgroundColor: \"#970d00\",\n        pointBorderColor: \"#fff\",\n        pointHoverBackgroundColor: \"#fff\",\n        pointHoverBorderColor: \"rgb(54, 162, 235)\",\n        borderWidth: 2,\n      },\n    ],\n  };\n\n  return <Radar options={options} data={data} />;\n}\n\nexport function BarChart(props) {\n  const datasetOne = props.data1;\n  const datasetTwo = props.data2;\n  const sum = datasetTwo.map(function (num, idx) {\n    return num - datasetOne[idx];\n  });\n\n  const max = Math.max(...sum);\n  const min = Math.min(...sum);\n\n  const largest = findLargestNum(max, min);\n\n  function findLargestNum(numOne, numTwo) {\n    const tempArr = [];\n    const firstNum = Math.abs(numOne);\n    const secondNum = Math.abs(numTwo);\n    tempArr.push(firstNum, secondNum);\n\n    return Math.max(...tempArr);\n  }\n\n  const options = {\n    indexAxis: \"y\",\n    // Elements options apply to all of the options unless overridden in a dataset\n    // In this case, we are setting the border of each horizontal bar to be 2px wide\n    aspectRatio: 1.3,\n    elements: {\n      bar: {\n        borderWidth: 2,\n      },\n    },\n    scales: {\n      x: {\n        min: -4,\n        max: 4,\n        ticks: {\n          display: false,\n        },\n      },\n      y: {\n        ticks: {\n          font: {\n            size: 10,\n          },\n        },\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: false,\n      },\n      title: {\n        display: true,\n        text: \"Comparison - Home Team | Away Team \",\n      },\n    },\n  };\n\n  const labels = [\n    \"Highest Goals\",\n    \"Fewest Conceeded\",\n    \"Last 5 PPG\",\n    \"Highest XG\",\n    \"Fewest XG Conceeded\",\n    \"Shots On Target\",\n    \"Dangerous Attacks\",\n    \"Av. Possession\",\n    \"Home/Away Goal Diff\",\n    \"Corners\",\n  ];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        // label: 'Dataset 1',\n        legend: {\n          display: false,\n        },\n        data: sum,\n        backgroundColor(context) {\n          const index = context.dataIndex;\n          const value = context.dataset.data[index];\n          return value < 0 ? \"#030061\" : \"#970d00\";\n        },\n      },\n    ],\n  };\n\n  return <Bar options={options} data={data} />;\n}\n","import ReactDOM from \"react-dom\";\nimport { Button } from \"../components/Button\";\nimport Stats from \"../components/createStatsDiv\";\nimport Div from \"../components/Div\";\nimport { allForm, allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport { getTeamStats } from \"../logic/getTeamStats\";\nimport { getPointsFromLastX } from \"../logic/getScorePredictions\";\nimport { CreateBadge } from \"../components/createBadge\";\nimport { Fragment } from \"react\";\nimport GenerateFormSummary from \"../logic/compareFormTrend\";\nimport { Chart, RadarChart, BarChart } from \"../components/Chart\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { clicked } from \"../logic/getScorePredictions\";\n\nexport async function calculateAttackingStrength(stats) {\n  console.log(stats);\n\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    // averagePossession: 0.15,\n    averageDangerousAttacks: 0.2,\n    averageShots: 0.1,\n    averageShotsOnTarget: 0.1,\n    averageExpectedGoals: 0.15,\n    recentXG: 0.15,\n    averageGoals: 0.3,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    // averagePossession: { min: 25, max: 75 },\n    averageDangerousAttacks: { min: 30, max: 80 }, // Adjust the max value as needed\n    averageShots: { min: 5, max: 18 }, // Adjust the max value as needed\n    averageShotsOnTarget: { min: 2, max: 9 }, // Adjust the max value as needed\n    averageExpectedGoals: { min: 0, max: 3.5 }, // Adjust the max value as needed\n    recentXGA: { min: 0, max: 3.5 }, // Adjust the max value as needed\n    averageGoals: { min: 0, max: 3.5 }, // Adjust the max value as needed\n  };\n\n  // Normalize each metric value and calculate the weighted sum\n  let weightedSum = 0;\n  for (const metric in stats) {\n    if (\n      stats.hasOwnProperty(metric) &&\n      weights.hasOwnProperty(metric) &&\n      ranges.hasOwnProperty(metric)\n    ) {\n      const normalizedValue =\n        (stats[metric] - ranges[metric].min) /\n        (ranges[metric].max - ranges[metric].min);\n      weightedSum += normalizedValue * weights[metric];\n\n      console.log(normalizedValue)\n    }\n    console.log(\"NOPE\")\n  }\n\n  return parseFloat(weightedSum.toFixed(2));\n}\n\nexport async function calculateDefensiveStrength(stats) {\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    CleanSheetPercentage: 0.3,\n    averageExpectedGoalsAgainst: 0.2,\n    recentXGAgainst: 0.2,\n    averageGoalsAgainst: 0.3,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    CleanSheetPercentage: { min: 0, max: 100 },\n    averageExpectedGoalsAgainst: { min: 0, max: 3.5 }, // Adjust the max value as needed\n    recentXGAgainst: { min: 0, max: 3.5 },\n    averageGoalsAgainst: { min: 0, max: 3.5 }, // Adjust the max value as needed\n  };\n\n  // Normalize each metric value and calculate the weighted sum\n  let weightedSum = 0;\n  for (const metric in stats) {\n    if (\n      stats.hasOwnProperty(metric) &&\n      weights.hasOwnProperty(metric) &&\n      ranges.hasOwnProperty(metric)\n    ) {\n      const normalizedValue =\n        1 -\n        (stats[metric] - ranges[metric].min) /\n          (ranges[metric].max - ranges[metric].min);\n      weightedSum += normalizedValue * weights[metric];\n    }\n  }\n\n  return parseFloat(weightedSum.toFixed(2));\n}\n\nexport async function calculateMetricStrength(metricName, metricValue) {\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    averagePossession: 1,\n    xgFor: 1,\n    xgAgainst: 1,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    averagePossession: { min: 20, max: 80 },\n    xgFor: { min: 0.1, max: 3 },\n    xgAgainst: { min: 0.1, max: 3 },\n  };\n\n  // Ensure the metric is valid and exists in the weights and ranges objects\n  if (\n    !weights.hasOwnProperty(metricName) ||\n    !ranges.hasOwnProperty(metricName)\n  ) {\n    throw new Error(\"Invalid metric name or missing normalization range.\");\n  }\n\n  // Normalize the metric value\n  const normalizedValue =\n    (metricValue - ranges[metricName].min) /\n    (ranges[metricName].max - ranges[metricName].min);\n\n  // Calculate the weighted score\n  const weightedScore = normalizedValue * weights[metricName];\n\n  return parseFloat(weightedScore.toFixed(2));\n}\n\n// export async function getDefenceStrength(goalsAgainst) {\n//   let strength;\n//   switch (true) {\n//     case goalsAgainst >= 2.8:\n//       strength = 1;\n//       break;\n//     case goalsAgainst >= 2.5 && goalsAgainst < 2.8:\n//       strength = 2;\n//       break;\n//     case goalsAgainst >= 2.2 && goalsAgainst < 2.5:\n//       strength = 3;\n//       break;\n//     case goalsAgainst >= 1.9 && goalsAgainst < 2.2:\n//       strength = 4;\n//       break;\n//     case goalsAgainst >= 1.6 && goalsAgainst < 1.9:\n//       strength = 5;\n//       break;\n//     case goalsAgainst >= 1.3 && goalsAgainst < 1.6:\n//       strength = 6;\n//       break;\n//     case goalsAgainst >= 1 && goalsAgainst < 1.3:\n//       strength = 7;\n//       break;\n//     case goalsAgainst >= 0.7 && goalsAgainst < 1:\n//       strength = 8;\n//       break;\n//     case goalsAgainst >= 0.4 && goalsAgainst < 0.7:\n//       strength = 9;\n//       break;\n//     case goalsAgainst < 0.4:\n//       strength = 10;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getPossessionStrength(possession) {\n//   let strength;\n//   switch (true) {\n//     case possession >= 68:\n//       strength = 10;\n//       break;\n//     case possession >= 64 && possession < 68:\n//       strength = 9;\n//       break;\n//     case possession >= 60 && possession < 64:\n//       strength = 8;\n//       break;\n//     case possession >= 56 && possession < 60:\n//       strength = 7;\n//       break;\n//     case possession >= 52 && possession < 56:\n//       strength = 6;\n//       break;\n//     case possession >= 48 && possession < 52:\n//       strength = 5;\n//       break;\n//     case possession >= 44 && possession < 48:\n//       strength = 4;\n//       break;\n//     case possession >= 40 && possession < 44:\n//       strength = 3;\n//       break;\n//     case possession >= 35 && possession < 40:\n//       strength = 2;\n//       break;\n//     case possession < 35:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getShotsStrength(Shots) {\n//   let strength;\n//   switch (true) {\n//     case Shots >= 15:\n//       strength = 10;\n//       break;\n//     case Shots >= 14.25 && Shots < 15:\n//       strength = 9;\n//       break;\n//     case Shots >= 13.5 && Shots < 14.25:\n//       strength = 8;\n//       break;\n//     case Shots >= 12.75 && Shots < 13.5:\n//       strength = 7;\n//       break;\n//     case Shots >= 12 && Shots < 12.75:\n//       strength = 6;\n//       break;\n//     case Shots >= 11.25 && Shots < 12:\n//       strength = 5;\n//       break;\n//     case Shots >= 10.5 && Shots < 11.25:\n//       strength = 4;\n//       break;\n//     case Shots >= 9.75 && Shots < 10.5:\n//       strength = 3;\n//       break;\n//     case Shots >= 9 && Shots < 9.75:\n//       strength = 2;\n//       break;\n//     case Shots < 9:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getShotsStrengthHorA(Shots) {\n//   let strength;\n//   switch (true) {\n//     case Shots >= 19.5:\n//       strength = 10;\n//       break;\n//     case Shots >= 18 && Shots < 19.5:\n//       strength = 9;\n//       break;\n//     case Shots >= 17 && Shots < 18:\n//       strength = 8;\n//       break;\n//     case Shots >= 15.5 && Shots < 17:\n//       strength = 7;\n//       break;\n//     case Shots >= 14 && Shots < 15.5:\n//       strength = 6;\n//       break;\n//     case Shots >= 12.5 && Shots < 14:\n//       strength = 5;\n//       break;\n//     case Shots >= 11 && Shots < 12.5:\n//       strength = 4;\n//       break;\n//     case Shots >= 9.5 && Shots < 11:\n//       strength = 3;\n//       break;\n//     case Shots >= 8 && Shots < 9.5:\n//       strength = 2;\n//       break;\n//     case Shots < 8:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGForStrength(XG) {\n//   let strength;\n//   switch (true) {\n//     case XG >= 2.9:\n//       strength = 10;\n//       break;\n//     case XG >= 2.6 && XG < 2.9:\n//       strength = 9;\n//       break;\n//     case XG >= 2.3 && XG < 2.6:\n//       strength = 8;\n//       break;\n//     case XG >= 2 && XG < 2.3:\n//       strength = 7;\n//       break;\n//     case XG >= 1.7 && XG < 2:\n//       strength = 6;\n//       break;\n//     case XG >= 1.4 && XG < 1.7:\n//       strength = 5;\n//       break;\n//     case XG >= 1.1 && XG < 1.4:\n//       strength = 4;\n//       break;\n//     case XG >= 0.8 && XG < 1.1:\n//       strength = 3;\n//       break;\n//     case XG >= 0.5 && XG < 0.8:\n//       strength = 2;\n//       break;\n//     case XG < 0.5:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGAgainstStrength(XGAgainst) {\n//   let strength;\n//   switch (true) {\n//     case XGAgainst >= 2.9:\n//       strength = 1;\n//       break;\n//     case XGAgainst >= 2.6 && XGAgainst < 2.9:\n//       strength = 2;\n//       break;\n//     case XGAgainst >= 2.3 && XGAgainst < 2.6:\n//       strength = 3;\n//       break;\n//     case XGAgainst >= 2 && XGAgainst < 2.3:\n//       strength = 4;\n//       break;\n//     case XGAgainst >= 1.7 && XGAgainst < 2:\n//       strength = 5;\n//       break;\n//     case XGAgainst >= 1.4 && XGAgainst < 1.7:\n//       strength = 6;\n//       break;\n//     case XGAgainst >= 1.1 && XGAgainst < 1.4:\n//       strength = 7;\n//       break;\n//     case XGAgainst >= 0.8 && XGAgainst < 1.1:\n//       strength = 8;\n//       break;\n//     case XGAgainst >= 0.5 && XGAgainst < 0.8:\n//       strength = 9;\n//       break;\n//     case XGAgainst < 0.5:\n//       strength = 10;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGDifferentialStrength(XGDiff) {\n//   let strength;\n//   switch (true) {\n//     case XGDiff >= 1.5:\n//       strength = 10;\n//       break;\n//     case XGDiff >= 1 && XGDiff < 1.5:\n//       strength = 9;\n//       break;\n//     case XGDiff >= 0.5 && XGDiff < 1:\n//       strength = 8;\n//       break;\n//     case XGDiff >= 0.25 && XGDiff < 0.5:\n//       strength = 7;\n//       break;\n//     case XGDiff > 0 && XGDiff < 0.25:\n//       strength = 6;\n//       break;\n//     case XGDiff <= 0 && XGDiff > -0.25:\n//       strength = 5;\n//       break;\n//     case XGDiff <= -0.25 && XGDiff > -0.5:\n//       strength = 4;\n//       break;\n//     case XGDiff <= -0.5 && XGDiff > -1:\n//       strength = 3;\n//       break;\n//     case XGDiff <= -1 && XGDiff > -1.5:\n//       strength = 2;\n//       break;\n//     case XGDiff <= -1.5:\n//       strength = 1;\n//       break;\n//     default:\n//       console.log(\"default clause triggered\");\n//       break;\n//   }\n//   return strength;\n// }\n\nexport async function getXGtoActualDifferentialStrength(XGDiff) {\n  let strength;\n  switch (true) {\n    case XGDiff >= 1.5:\n      strength = 1;\n      break;\n    case XGDiff >= 1 && XGDiff < 1.5:\n      strength = 2;\n      break;\n    case XGDiff >= 0.5 && XGDiff < 1:\n      strength = 3;\n      break;\n    case XGDiff >= 0.25 && XGDiff < 0.5:\n      strength = 4;\n      break;\n    case XGDiff > 0 && XGDiff < 0.25:\n      strength = 5;\n      break;\n    case XGDiff <= 0 && XGDiff > -0.25:\n      strength = 6;\n      break;\n    case XGDiff <= -0.25 && XGDiff > -0.5:\n      strength = 7;\n      break;\n    case XGDiff <= -0.5 && XGDiff > -1:\n      strength = 8;\n      break;\n    case XGDiff <= -1 && XGDiff > -1.5:\n      strength = 9;\n      break;\n    case XGDiff <= -1.5:\n      strength = 10;\n      break;\n    default:\n      console.log(\"default clause triggered\");\n      break;\n  }\n  return strength;\n}\n\nasync function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nlet rollingGoalDiffTotalHome = [];\nlet rollingGoalDiffTotalAway = [];\n\nexport async function createStatsDiv(game, displayBool) {\n  if (game.status !== \"void\") {\n    // takes the displayBool boolean from the fixture onClick and sets the styling of the stats div from there\n    function styling(testBool) {\n      let bool = testBool;\n      if (bool === true && clicked === true) {\n        // set stats element to display flex\n        return { display: \"block\" };\n      } else {\n        // set stats element to display none\n        return { display: \"none\" };\n      }\n    }\n\n    let style = styling(displayBool);\n\n    let index = 2;\n    let divider = 10;\n\n    let gameStats = allForm.find((match) => match.id === game.id);\n    console.log(gameStats)\n    const gameArrayHome = [];\n    const gameArrayAway = [];\n    const gameArrayHomeTeamHomeGames = [];\n    const gameArrayAwayTeamAwayGames = [];\n    let goalDiffArrayHome;\n    let goalDiffArrayAway;\n    let goalDiffHomeMovingAv = [];\n    let goalDiffAwayMovingAv = [];\n    let latestHomeGoalDiff;\n    let latestAwayGoalDiff;\n\n    var getEMA = (a, r) =>\n      a.reduce(\n        (p, n, i) =>\n          i\n            ? p.concat(\n                (2 * n) / (r + 1) + (p[p.length - 1] * (r - 1)) / (r + 1)\n              )\n            : p,\n        [a[0]]\n      );\n\n    if (displayBool === true) {\n      let fixtures = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${gameStats.leagueId}`\n      );\n\n      await fixtures.json().then((matches) => {\n        const resultHome = matches.data.filter(\n          (game) =>\n            (game.homeID === gameStats.teamIDHome ||\n              game.awayID === gameStats.teamIDHome) &&\n            game.status === \"complete\"\n        );\n\n        const resultHomeOnly = matches.data.filter(\n          (game) =>\n            game.homeID === gameStats.teamIDHome && game.status === \"complete\"\n        );\n\n        resultHomeOnly.sort((a, b) => b.date_unix - a.date_unix);\n\n        for (let i = 0; i < resultHome.length; i++) {\n          let unixTimestamp = resultHome[i].date_unix;\n          let milliseconds = unixTimestamp * 1000;\n          let dateObject = new Date(milliseconds).toLocaleString(\"en-GB\", {\n            timeZone: \"UTC\",\n          });\n\n          let won;\n          let goalsScored;\n          let goalsConceeded;\n\n          if (resultHome[i].winningTeam === gameStats.teamIDHome) {\n            won = \"W\";\n            if (resultHome[i].homeGoalCount > resultHome[i].awayGoalCount) {\n              goalsScored = resultHome[i].homeGoalCount;\n              goalsConceeded = resultHome[i].awayGoalCount;\n            } else {\n              goalsScored = resultHome[i].awayGoalCount;\n              goalsConceeded = resultHome[i].homeGoalCount;\n            }\n          } else if (resultHome[i].winningTeam === -1) {\n            won = \"D\";\n            goalsScored = resultHome[i].awayGoalCount;\n            goalsConceeded = resultHome[i].awayGoalCount;\n          } else {\n            won = \"L\";\n            if (resultHome[i].homeGoalCount > resultHome[i].awayGoalCount) {\n              goalsScored = resultHome[i].awayGoalCount;\n              goalsConceeded = resultHome[i].homeGoalCount;\n            } else {\n              goalsScored = resultHome[i].homeGoalCount;\n              goalsConceeded = resultHome[i].awayGoalCount;\n            }\n          }\n\n          gameArrayHome.push({\n            id: resultHome[i].id,\n            date: dateObject,\n            homeTeam: resultHome[i].home_name,\n            homeGoals: resultHome[i].homeGoalCount,\n            homeXG: resultHome[i].team_a_xg,\n            homeOdds: resultHome[i].odds_ft_1,\n            awayTeam: resultHome[i].away_name,\n            awayGoals: resultHome[i].awayGoalCount,\n            awayXG: resultHome[i].team_b_xg,\n            awayOdds: resultHome[i].odds_ft_2,\n            won: won,\n            homeShots: resultHome[i].team_a_shots,\n            awayShots: resultHome[i].team_b_shots,\n            homeSot: resultHome[i].team_a_shotsOnTarget,\n            awaySot: resultHome[i].team_b_shotsOnTarget,\n            homeRed: resultHome[i].team_a_red_cards,\n            awayRed: resultHome[i].team_b_red_cards,\n            homePossession: resultHome[i].team_a_possession,\n            awayPossession: resultHome[i].team_b_possession,\n            homeDangerousAttacks: resultHome[i].team_a_dangerous_attacks,\n            awayDangerousAttacks: resultHome[i].team_b_dangerous_attacks,\n            homePPG: resultHome[i].pre_match_teamA_overall_ppg,\n            awayPPG: resultHome[i].pre_match_teamB_overall_ppg,\n            unixTimestamp: resultHome[i].date_unix,\n            goalsFor: goalsScored,\n            goalsAgainst: goalsConceeded,\n            btts: resultHome[i].btts === true ? \"\\u2714\" : \"\\u2718\",\n          });\n        }\n\n        for (let i = 0; i < resultHomeOnly.length; i++) {\n          let wonHomeOrAwayOnly;\n\n          if (resultHomeOnly[i].winningTeam === gameStats.teamIDHome) {\n            wonHomeOrAwayOnly = \"W\";\n            gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n          } else if (resultHomeOnly[i].winningTeam === -1) {\n            wonHomeOrAwayOnly = \"D\";\n            gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n          } else {\n            wonHomeOrAwayOnly = \"L\";\n            gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n          }\n        }\n\n        goalDiffArrayHome = gameArrayHome.map(\n          (a) => a.goalsFor - a.goalsAgainst\n        );\n\n        let r = 5;\n\n        goalDiffHomeMovingAv = getEMA(\n          goalDiffArrayHome,\n          goalDiffArrayHome.length < 5 ? goalDiffArrayHome.length : r\n        );\n\n        const cumulativeSumHome = (\n          (sum) => (value) =>\n            (sum += value)\n        )(0);\n\n        gameArrayHome.sort((a, b) => b.unixTimestamp - a.unixTimestamp);\n\n        rollingGoalDiffTotalHome = goalDiffArrayHome.map(cumulativeSumHome);\n\n        const resultAway = matches.data.filter(\n          (game) =>\n            (game.homeID === gameStats.teamIDAway ||\n              game.awayID === gameStats.teamIDAway) &&\n            game.status === \"complete\"\n        );\n\n        const resultAwayOnly = matches.data.filter(\n          (game) =>\n            game.awayID === gameStats.teamIDAway && game.status === \"complete\"\n        );\n\n        resultAwayOnly.sort((a, b) => b.date_unix - a.date_unix);\n\n        for (let i = 0; i < resultAway.length; i++) {\n          let unixTimestamp = resultAway[i].date_unix;\n          let milliseconds = unixTimestamp * 1000;\n          let dateObject = new Date(milliseconds).toLocaleString(\"en-GB\", {\n            timeZone: \"UTC\",\n          });\n\n          let won;\n          let goalsScored;\n          let goalsConceeded;\n          let wonHomeOrAwayOnly;\n          let goalsScoredHomeOrAwayOnly;\n          let goalsConceededHomeOrAwayOnly;\n\n          if (resultAway[i].winningTeam === gameStats.teamIDAway) {\n            won = \"W\";\n            if (resultAway[i].homeGoalCount > resultAway[i].awayGoalCount) {\n              goalsScored = resultAway[i].homeGoalCount;\n              goalsConceeded = resultAway[i].awayGoalCount;\n            } else {\n              goalsScored = resultAway[i].awayGoalCount;\n              goalsConceeded = resultAway[i].homeGoalCount;\n            }\n          } else if (resultAway[i].winningTeam === -1) {\n            won = \"D\";\n            goalsScored = resultAway[i].awayGoalCount;\n            goalsConceeded = resultAway[i].awayGoalCount;\n          } else {\n            won = \"L\";\n            if (resultAway[i].homeGoalCount > resultAway[i].awayGoalCount) {\n              goalsScored = resultAway[i].awayGoalCount;\n              goalsConceeded = resultAway[i].homeGoalCount;\n            } else {\n              goalsScored = resultAway[i].homeGoalCount;\n              goalsConceeded = resultAway[i].awayGoalCount;\n            }\n          }\n\n          gameArrayAway.push({\n            id: resultAway[i].id,\n            date: dateObject,\n            homeTeam: resultAway[i].home_name,\n            homeGoals: resultAway[i].homeGoalCount,\n            homeXG: resultAway[i].team_a_xg,\n            homeOdds: resultAway[i].odds_ft_1,\n            awayTeam: resultAway[i].away_name,\n            awayGoals: resultAway[i].awayGoalCount,\n            awayXG: resultAway[i].team_b_xg,\n            awayOdds: resultAway[i].odds_ft_2,\n            won: won,\n            homeShots: resultAway[i].team_a_shots,\n            awayShots: resultAway[i].team_b_shots,\n            homeSot: resultAway[i].team_a_shotsOnTarget,\n            awaySot: resultAway[i].team_b_shotsOnTarget,\n            homeRed: resultAway[i].team_a_red_cards,\n            awayRed: resultAway[i].team_b_red_cards,\n            homePossession: resultAway[i].team_a_possession,\n            awayPossession: resultAway[i].team_b_possession,\n            homeDangerousAttacks: resultAway[i].team_a_dangerous_attacks,\n            awayDangerousAttacks: resultAway[i].team_b_dangerous_attacks,\n            homePPG: resultAway[i].pre_match_teamA_overall_ppg,\n            awayPPG: resultAway[i].pre_match_teamB_overall_ppg,\n            unixTimestamp: resultAway[i].date_unix,\n            goalsFor: goalsScored,\n            goalsAgainst: goalsConceeded,\n            btts: resultAway[i].btts === true ? \"\\u2714\" : \"\\u2718\",\n          });\n        }\n\n        for (let i = 0; i < resultAwayOnly.length; i++) {\n          let wonHomeOrAwayOnly;\n\n          if (resultAwayOnly[i].winningTeam === gameStats.teamIDAway) {\n            wonHomeOrAwayOnly = \"W\";\n            gameArrayAwayTeamAwayGames.push(wonHomeOrAwayOnly);\n          } else if (resultAwayOnly[i].winningTeam === -1) {\n            wonHomeOrAwayOnly = \"D\";\n            gameArrayAwayTeamAwayGames.push(wonHomeOrAwayOnly);\n          } else {\n            wonHomeOrAwayOnly = \"L\";\n            gameArrayAwayTeamAwayGames.push(wonHomeOrAwayOnly);\n          }\n        }\n\n        goalDiffArrayAway = gameArrayAway.map(\n          (a) => a.goalsFor - a.goalsAgainst\n        );\n\n        goalDiffAwayMovingAv = getEMA(\n          goalDiffArrayAway,\n          goalDiffArrayAway.length < 5 ? goalDiffArrayAway.length : r\n        );\n\n        const cumulativeSumAway = (\n          (sum) => (value) =>\n            (sum += value)\n        )(0);\n\n        gameArrayAway.sort((a, b) => b.unixTimestamp - a.unixTimestamp);\n\n        console.log(gameStats.teamIDAway)\n        console.log(gameArrayAway)\n\n        rollingGoalDiffTotalAway = goalDiffArrayAway.map(cumulativeSumAway);\n\n        latestHomeGoalDiff =\n          goalDiffHomeMovingAv[goalDiffHomeMovingAv.length - 1];\n        latestAwayGoalDiff =\n          goalDiffAwayMovingAv[goalDiffAwayMovingAv.length - 1];\n      });\n    }\n\n    const bttsArrayHome = Array.from(gameArrayHome, (x) => x.btts);\n    const bttsArrayAway = Array.from(gameArrayAway, (x) => x.btts);\n\n    const resultsArrayHome = Array.from(gameArrayHome, (x) => x.won);\n    const resultsArrayAway = Array.from(gameArrayAway, (x) => x.won);\n\n    let homeTeam = gameStats.home.teamName;\n    let awayTeam = gameStats.away.teamName;\n\n    let time = game.time;\n\n    const homeForm = gameStats.home[index];\n    const awayForm = gameStats.away[index];\n\n    homeForm.last3Points = getPointsFromLastX(homeForm.lastThreeForm);\n\n    homeForm.last5Points = getPointsFromLastX(homeForm.LastFiveForm);\n\n    homeForm.last6Points = getPointsFromLastX(homeForm.LastSixForm);\n\n    homeForm.last10Points = getPointsFromLastX(homeForm.LastTenForm);\n\n    awayForm.last3Points = getPointsFromLastX(awayForm.lastThreeForm);\n\n    awayForm.last5Points = getPointsFromLastX(awayForm.LastFiveForm);\n\n    awayForm.last6Points = getPointsFromLastX(awayForm.LastSixForm);\n\n    awayForm.last10Points = getPointsFromLastX(awayForm.LastTenForm);\n\n    async function getPointAverage(pointTotal, games) {\n      return pointTotal / games;\n    }\n\n    // let homeThreeGameAverage = await getPointAverage(\n    //   homeForm.last3Points,\n    //   3\n    // );\n\n    let homeFiveGameAverage = await getPointAverage(homeForm.last5Points, 5);\n\n    let homeSixGameAverage = await getPointAverage(homeForm.last6Points, 6);\n\n    let homeTenGameAverage = await getPointAverage(homeForm.last10Points, 10);\n\n    // let awayThreeGameAverage = await getPointAverage(\n    //   awayForm.last3Points,\n    //   3\n    // );\n\n    let awayFiveGameAverage = await getPointAverage(awayForm.last5Points, 5);\n\n    let awaySixGameAverage = await getPointAverage(awayForm.last6Points, 6);\n\n    let awayTenGameAverage = await getPointAverage(awayForm.last10Points, 10);\n\n    async function getPointsFromGames(formArr) {\n      const pairings = {\n        W: 3,\n        D: 1,\n        L: 0,\n      };\n      let newArr = [];\n      let arrayOfIndividualPoints = [];\n      let sum = 0;\n\n      for (let i = 0; i < formArr.length; i++) {\n        sum = sum + pairings[formArr[i]];\n        newArr.push(sum);\n        arrayOfIndividualPoints.push(pairings[formArr[i]]);\n      }\n      return [newArr, arrayOfIndividualPoints];\n    }\n\n    async function getLastGameResult(lastGame) {\n      let text;\n      switch (true) {\n        case lastGame === \"L\":\n          text = \"Lost\";\n          break;\n        case lastGame === \"D\":\n          text = \"Drew\";\n          break;\n        case lastGame === \"W\":\n          text = \"Won\";\n          break;\n        default:\n          break;\n      }\n      return text;\n    }\n\n    let homeFormTrend = [\n      homeFiveGameAverage.toFixed(2),\n      homeTenGameAverage.toFixed(2),\n    ];\n\n    let awayFormTrend = [\n      awayFiveGameAverage.toFixed(2),\n      awayTenGameAverage.toFixed(2),\n    ];\n\n    let formTextStringHome;\n    let formTextStringAway;\n\n    if (displayBool === true && gameStats.home[2].LeagueOrAll === \"League\") {\n      formTextStringHome = await GenerateFormSummary(\n        gameStats.home[2],\n        homeFormTrend,\n        gameStats.home[0]\n      );\n      formTextStringAway = await GenerateFormSummary(\n        gameStats.away[2],\n        awayFormTrend,\n        gameStats.away[0]\n      );\n    } else {\n      formTextStringHome = \"\";\n      formTextStringAway = \"\";\n    }\n\n    let homeLastGame = await getLastGameResult(homeForm.LastFiveForm[4]);\n    let awayLastGame = await getLastGameResult(awayForm.LastFiveForm[4]);\n\n    // let homeAttackStrength = await getAttackStrength(\n    //   homeForm.ScoredOverall / 10\n    // );\n\n    const attackingMetricsHome = {\n      averagePossession: homeForm.AveragePossession,\n      averageDangerousAttacks: homeForm.AverageDangerousAttacksOverall,\n      averageShots: homeForm.AverageShots,\n      averageShotsOnTarget: homeForm.AverageShotsOnTarget,\n      averageExpectedGoals: homeForm.XGOverall,\n      averageGoals:\n        homeForm.averageScoredLeague !== undefined &&\n        homeForm.averageScoredLeague !== null\n          ? homeForm.averageScoredLeague\n          : homeForm.ScoredOverall / 10,\n    };\n    const attackingMetricsAway = {\n      averagePossession: awayForm.AveragePossession,\n      averageDangerousAttacks: awayForm.AverageDangerousAttacksOverall,\n      averageShots: awayForm.AverageShots,\n      averageShotsOnTarget: awayForm.AverageShotsOnTarget,\n      averageExpectedGoals: awayForm.XGOverall,\n      averageGoals:\n        awayForm.averageScoredLeague !== undefined &&\n        awayForm.averageScoredLeague !== null\n          ? awayForm.averageScoredLeague\n          : awayForm.ScoredOverall / 10,\n    };\n\n    const defensiveMetricsHome = {\n      CleanSheetPercentage: 100 - homeForm.CleanSheetPercentage,\n      averageExpectedGoalsAgainst: homeForm.XGAgainstAvgOverall,\n      averageGoalsAgainst:\n        homeForm.averageConceededLeague !== undefined &&\n        homeForm.averageConceededLeague !== null\n          ? homeForm.averageConceededLeague\n          : homeForm.ConcededOverall / 10,\n    };\n\n    const defensiveMetricsAway = {\n      CleanSheetPercentage: 100 - awayForm.CleanSheetPercentage,\n      averageExpectedGoalsAgainst: awayForm.XGAgainstAvgOverall,\n\n      averageGoalsAgainst:\n        awayForm.averageConceededLeague !== undefined &&\n        awayForm.averageConceededLeague !== null\n          ? awayForm.averageConceededLeague\n          : awayForm.ConcededOverall / 10,\n    };\n\n    let homeAttackStrength;\n    let homeDefenceStrength;\n    let homePossessionStrength;\n    let homeXGForStrength;\n    let homeXGAgainstStrength;\n    let awayAttackStrength;\n    let awayDefenceStrength;\n    let awayPossessionStrength;\n    let awayXGForStrength;\n    let awayXGAgainstStrength;\n\n    if (homeForm.xgForStrength) {\n      console.log(\"not calculating\");\n      homeAttackStrength = homeForm.attackingStrength;\n      homeDefenceStrength = homeForm.defensiveStrength;\n      homePossessionStrength = homeForm.possessionStrength;\n      homeXGForStrength = homeForm.xgForStrength;\n      homeXGAgainstStrength = homeForm.xgAgainstStrength;\n\n      awayAttackStrength = awayForm.attackingStrength;\n      awayDefenceStrength = awayForm.defensiveStrength;\n      awayPossessionStrength = awayForm.possessionStrength;\n      awayXGForStrength = awayForm.xgForStrength;\n      awayXGAgainstStrength = awayForm.xgAgainstStrength;\n    } else {\n      homeAttackStrength = await calculateAttackingStrength(\n        attackingMetricsHome\n      );\n\n      homeDefenceStrength = await calculateDefensiveStrength(\n        defensiveMetricsHome\n      );\n\n      homePossessionStrength = await calculateMetricStrength(\n        \"averagePossession\",\n        homeForm.AveragePossessionOverall\n      );\n\n      homeXGForStrength = await calculateMetricStrength(\n        \"xgFor\",\n        gameStats.home[2].XGOverall\n      );\n\n      homeXGAgainstStrength = await calculateMetricStrength(\n        \"xgAgainst\",\n        3 - gameStats.home[2].XGAgainstAvgOverall\n      );\n\n      awayAttackStrength = await calculateAttackingStrength(\n        attackingMetricsAway\n      );\n      awayDefenceStrength = await calculateDefensiveStrength(\n        defensiveMetricsAway\n      );\n      awayPossessionStrength = await calculateMetricStrength(\n        \"averagePossession\",\n        awayForm.AveragePossessionOverall\n      );\n      awayXGForStrength = await calculateMetricStrength(\n        \"xgFor\",\n        gameStats.away[2].XGOverall\n      );\n\n      awayXGAgainstStrength = await calculateMetricStrength(\n        \"xgAgainst\",\n        3 - gameStats.away[2].XGAgainstAvgOverall\n      );\n    }\n\n    let [formPointsHome, testArrayHome] = await getPointsFromGames(\n      gameStats.home[2].WDLRecord\n    );\n    let [formPointsAway, testArrayAway] = await getPointsFromGames(\n      gameStats.away[2].WDLRecord\n    );\n\n    let rollingGoalDiffHome = [\n      (gameStats.home[0].ScoredOverall - gameStats.home[0].ConcededOverall) /\n        10,\n      (gameStats.home[1].ScoredOverall - gameStats.home[1].ConcededOverall) / 6,\n      (gameStats.home[2].ScoredOverall - gameStats.home[2].ConcededOverall) / 5,\n    ];\n\n    let rollingGoalDiffAway = [\n      (gameStats.away[0].ScoredOverall - gameStats.away[0].ConcededOverall) /\n        10,\n      (gameStats.away[1].ScoredOverall - gameStats.away[1].ConcededOverall) / 6,\n      (gameStats.away[2].ScoredOverall - gameStats.away[2].ConcededOverall) / 5,\n    ];\n\n    const formDataMatch = [];\n\n    formDataMatch.push({\n      btts: game.btts_potential,\n    });\n\n    const formDataHome = [];\n\n    formDataHome.push({\n      name: game.homeTeam,\n      Last5: gameStats.home[2].LastFiveForm,\n      LeagueOrAll: gameStats.home[2].LeagueOrAll,\n      AverageGoals: homeForm.ScoredOverall / 10,\n      AverageConceeded: homeForm.ConcededOverall / 10,\n      AverageXG: homeForm.XGOverall,\n      AverageXGConceded: homeForm.XGAgainstAvgOverall,\n      AveragePossession: homeForm.AveragePossessionOverall,\n      AverageShotsOnTarget: homeForm.AverageShotsOnTargetOverall,\n      AverageDangerousAttacks: homeForm.AverageDangerousAttacksOverall,\n      homeOrAway: \"Home\",\n      leaguePosition: homeForm.LeaguePosition,\n      Last5PPG: homeForm.PPG,\n      SeasonPPG: homeForm.SeasonPPG,\n      lastGame: homeLastGame,\n      formRun: homeForm.formRun,\n      goalDifference: homeForm.goalDifference,\n      goalDifferenceHomeOrAway: homeForm.goalDifferenceHomeOrAway,\n      BttsPercentage: homeForm.BttsPercentage,\n      BttsPercentageHomeOrAway: homeForm.BttsPercentageHomeOrAway,\n      CardsTotal: homeForm.CardsTotal,\n      CornersAverage: homeForm.CornersAverage,\n      ScoredBothHalvesPercentage: homeForm.ScoredBothHalvesPercentage,\n      FormTextStringHome: formTextStringHome,\n      BTTSArray: bttsArrayHome,\n      Results: resultsArrayHome,\n      BTTSAll: homeForm.last10btts,\n      BTTSHorA: homeForm.last10bttsHome,\n    });\n\n    const formDataAway = [];\n\n    formDataAway.push({\n      name: game.awayTeam,\n      Last5: gameStats.away[2].LastFiveForm,\n      LeagueOrAll: gameStats.away[2].LeagueOrAll,\n      AverageGoals: awayForm.ScoredOverall / 10,\n      AverageConceeded: awayForm.ConcededOverall / 10,\n      AverageXG: awayForm.XGOverall,\n      AverageXGConceded: awayForm.XGAgainstAvgOverall,\n      AveragePossession: awayForm.AveragePossessionOverall,\n      AverageShotsOnTarget: awayForm.AverageShotsOnTargetOverall,\n      AverageDangerousAttacks: awayForm.AverageDangerousAttacksOverall,\n      homeOrAway: \"Away\",\n      leaguePosition: awayForm.LeaguePosition,\n      Last5PPG: awayForm.PPG,\n      SeasonPPG: awayForm.SeasonPPG,\n      lastGame: awayLastGame,\n      formRun: awayForm.formRun,\n      goalDifference: awayForm.goalDifference,\n      goalDifferenceHomeOrAway: awayForm.goalDifferenceHomeOrAway,\n      BttsPercentage: awayForm.BttsPercentage,\n      BttsPercentageHomeOrAway: awayForm.BttsPercentageHomeOrAway,\n      CardsTotal: awayForm.CardsTotal,\n      CornersAverage: awayForm.CornersAverage,\n      ScoredBothHalvesPercentage: awayForm.ScoredBothHalvesPercentage,\n      FormTextStringAway: formTextStringAway,\n      BTTSArray: bttsArrayAway,\n      Results: resultsArrayAway,\n      ResultsHomeOrAway: resultsArrayAway,\n      BTTSAll: awayForm.last10btts,\n      BTTSHorA: awayForm.last10bttsAway,\n    });\n\n    let formArrayHome;\n    let formArrayAway;\n    let chartType;\n\n    if (formPointsHome.length > 1) {\n      formArrayHome = formPointsHome;\n      formArrayAway = formPointsAway;\n      chartType = \"Points over time\";\n    } else {\n      formArrayHome = [\n        homeTenGameAverage,\n        homeSixGameAverage,\n        homeFiveGameAverage,\n      ];\n      formArrayAway = [\n        awayTenGameAverage,\n        awaySixGameAverage,\n        awayFiveGameAverage,\n      ];\n      chartType = \"Rolling average points over last 10\";\n    }\n\n    ReactDOM.render(\n      <div style={style}>\n        <div className=\"H2HStats\" id={`H2HStats${game.id}`}></div>\n        <div className=\"TrendsHome\" id={`TrendsHome${game.id}`}></div>\n        <div className=\"TrendsAway\" id={`TrendsAway${game.id}`}></div>\n      </div>,\n      document.getElementById(\"history\" + homeTeam)\n    );\n\n    //This tournament does not have league positions\n    if (game.leagueName === \"Europe UEFA Women's Euro\") {\n      game.homeTeamHomePosition = \"N/A\";\n      game.awayTeamAwayPosition = \"N/A\";\n    }\n\n    function singleResult(game) {\n      return (\n        <div>\n          <div className=\"ResultRowSmall\">\n            <span className=\"column\">{game.homeXG}</span>\n            <span className=\"column\">XG</span>\n            <span className=\"column\">{game.awayXG}</span>\n          </div>\n          <div className=\"ResultRowSmall\">\n            <span className=\"column\">{game.homeShots}</span>\n            <span className=\"column\">Shots</span>\n            <span className=\"column\">{game.awayShots}</span>\n          </div>\n          <div className=\"ResultRowSmall\">\n            <span className=\"column\">{game.homeSot}</span>\n            <span className=\"column\">SOT</span>\n            <span className=\"column\">{game.awaySot}</span>\n          </div>\n          <div className=\"ResultRowSmall\">\n            <span className=\"column\">{game.homeDangerousAttacks}</span>\n            <span className=\"column\">Dangerous Attacks</span>\n            <span className=\"column\">{game.awayDangerousAttacks}</span>\n          </div>\n          <div className=\"ResultRowSmall\">\n            <span className=\"column\">{game.homePossession}%</span>\n            <span className=\"column\">Possession</span>\n            <span className=\"column\">{game.awayPossession}%</span>\n          </div>\n          <div className=\"ResultRowSmall\">\n            <span className=\"column\">{game.homeRed}</span>\n            <span className=\"column\">Red cards</span>\n            <span className=\"column\">{game.awayRed}</span>\n          </div>\n          <div className=\"ResultRowSmall\">\n            <span className=\"column\">{game.homePPG}</span>\n            <span className=\"column\">PPG (pre-match)</span>\n            <span className=\"column\">{game.awayPPG}</span>\n          </div>\n        </div>\n      );\n    }\n\n    const overviewHome = gameArrayHome.slice(0, 10).map((game) => (\n      <div>\n        <Collapsable\n          classNameButton=\"ResultButton\"\n          buttonText={\n            <div className=\"ResultRowOverviewSmall\">\n              <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n              <span className=\"columnOverviewScoreSmall\">\n                {game.homeGoals} : {game.awayGoals}\n              </span>\n              <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n            </div>\n          }\n          element={singleResult(game)}\n        />\n      </div>\n    ));\n\n    const overviewAway = gameArrayAway.slice(0, 10).map((game) => (\n      <div>\n        <Collapsable\n          classNameButton=\"ResultButton\"\n          buttonText={\n            <div className=\"ResultRowOverviewSmall\">\n              <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n              <span className=\"columnOverviewScoreSmall\">\n                {game.homeGoals} : {game.awayGoals}\n              </span>\n              <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n            </div>\n          }\n          element={singleResult(game)}\n        />\n      </div>\n    ));\n\n    function StatsHome() {\n      return (\n        <div className=\"flex-childOne\">\n          <ul style={style}>\n            <Stats\n              style={style}\n              homeOrAway=\"Home\"\n              gameCount={divider}\n              key={formDataHome[0].name}\n              last5={formDataHome[0].Last5}\n              homeOrAwayResults={gameArrayHomeTeamHomeGames}\n              LeagueOrAll={formDataHome[0].LeagueOrAll}\n              className={\"KeyStatsHome\"}\n              name={formDataHome[0].name}\n              goals={\n                homeForm.averageScoredLeague !== undefined &&\n                homeForm.averageScoredLeague !== null\n                  ? homeForm.averageScoredLeague.toFixed(2)\n                  : formDataHome[0].AverageGoals\n              }\n              conceeded={\n                homeForm.averageConceededLeague !== undefined &&\n                homeForm.averageConceededLeague !== null\n                  ? homeForm.averageConceededLeague.toFixed(2)\n                  : formDataHome[0].AverageConceeded\n              }\n              XG={formDataHome[0].AverageXG}\n              XGConceded={formDataHome[0].AverageXGConceded}\n              possession={formDataHome[0].AveragePossession}\n              sot={formDataHome[0].AverageShotsOnTarget}\n              dangerousAttacks={formDataHome[0].AverageDangerousAttacks}\n              leaguePosition={\n                formDataHome[0].leaguePosition\n                  ? formDataHome[0].leaguePosition\n                  : 0\n              }\n              rawPosition={game.homeRawPosition ? game.homeRawPosition : 0}\n              homeOrAwayLeaguePosition={\n                game.homeTeamHomePosition ? game.homeTeamHomePosition : 0\n              }\n              winPercentage={\n                game.homeTeamWinPercentage ? game.homeTeamWinPercentage : 0\n              }\n              lossPercentage={\n                game.homeTeamLossPercentage ? game.homeTeamLossPercentage : 0\n              }\n              drawPercentage={\n                game.homeTeamDrawPercentage ? game.homeTeamDrawPercentage : 0\n              }\n              ppg={formDataHome[0].SeasonPPG}\n              formTrend={[\n                homeTenGameAverage.toFixed(2),\n                homeSixGameAverage.toFixed(2),\n                homeFiveGameAverage.toFixed(2),\n              ]}\n              lastGame={homeLastGame}\n              formRun={formDataHome[0].formRun}\n              goalDifference={formDataHome[0].goalDifference}\n              goalDifferenceHomeOrAway={\n                formDataHome[0].goalDifferenceHomeOrAway\n              }\n              BttsPercentage={formDataHome[0].BttsPercentage}\n              BttsPercentageHomeOrAway={\n                formDataHome[0].BttsPercentageHomeOrAway\n              }\n              BTTSAll={\n                formDataHome[0].BTTSAll\n                  ? formDataHome[0].BTTSAll\n                  : '\"Get Predictions\" first'\n              }\n              BTTSHorA={\n                formDataHome[0].BTTSHorA\n                  ? formDataHome[0].BTTSHorA\n                  : '\"Get Predictions\" first'\n              }\n              BTTSArray={formDataHome[0].BTTSArray}\n              Results={formDataHome[0].Results}\n              ResultsHomeOrAway={formDataHome[0].wonHomeOrAwayOnly}\n              CardsTotal={formDataHome[0].CardsTotal}\n              CornersAverage={formDataHome[0].CornersAverage}\n              ScoredBothHalvesPercentage={\n                formDataHome[0].ScoredBothHalvesPercentage\n              }\n              FormTextString={formDataHome[0].FormTextStringHome}\n            />\n          </ul>\n        </div>\n      );\n    }\n\n    function StatsAway() {\n      return (\n        <div className=\"flex-childTwo\">\n          <ul style={style}>\n            <Stats\n              style={style}\n              homeOrAway=\"Away\"\n              gameCount={divider}\n              key={formDataAway[0].name}\n              last5={formDataAway[0].Last5}\n              homeOrAwayResults={gameArrayAwayTeamAwayGames}\n              LeagueOrAll={formDataAway[0].LeagueOrAll}\n              className={\"KeyStatsAway\"}\n              name={formDataAway[0].name}\n              goals={\n                awayForm.averageScoredLeague !== undefined &&\n                awayForm.averageScoredLeague !== null\n                  ? awayForm.averageScoredLeague.toFixed(2)\n                  : formDataAway[0].AverageGoals\n              }\n              conceeded={\n                awayForm.averageConceededLeague !== undefined &&\n                awayForm.averageConceededLeague !== null\n                  ? awayForm.averageConceededLeague.toFixed(2)\n                  : formDataAway[0].AverageConceeded\n              }\n              XG={formDataAway[0].AverageXG}\n              XGConceded={formDataAway[0].AverageXGConceded}\n              //todo add goal diff and btts percentages\n              possession={formDataAway[0].AveragePossession}\n              rawPosition={game.awayRawPosition ? game.awayRawPosition : 0}\n              sot={formDataAway[0].AverageShotsOnTarget}\n              dangerousAttacks={formDataAway[0].AverageDangerousAttacks}\n              leaguePosition={\n                formDataAway[0].leaguePosition\n                  ? formDataAway[0].leaguePosition\n                  : 0\n              }\n              homeOrAwayLeaguePosition={\n                game.awayTeamAwayPosition ? game.awayTeamAwayPosition : 0\n              }\n              winPercentage={\n                game.awayTeamWinPercentage ? game.awayTeamWinPercentage : 0\n              }\n              lossPercentage={\n                game.awayTeamLossPercentage ? game.awayTeamLossPercentage : 0\n              }\n              drawPercentage={\n                game.awayTeamDrawPercentage ? game.awayTeamDrawPercentage : 0\n              }\n              ppg={formDataAway[0].SeasonPPG}\n              formTrend={[\n                awayTenGameAverage.toFixed(2),\n                awaySixGameAverage.toFixed(2),\n                awayFiveGameAverage.toFixed(2),\n              ]}\n              lastGame={awayLastGame}\n              formRun={formDataAway[0].formRun}\n              goalDifference={formDataAway[0].goalDifference}\n              goalDifferenceHomeOrAway={\n                formDataAway[0].goalDifferenceHomeOrAway\n              }\n              BttsPercentage={formDataAway[0].BttsPercentage}\n              BttsPercentageHomeOrAway={\n                formDataAway[0].BttsPercentageHomeOrAway\n              }\n              BTTSAll={\n                formDataAway[0].BTTSAll\n                  ? formDataAway[0].BTTSAll\n                  : '\"Get Predictions\" first'\n              }\n              BTTSHorA={\n                formDataAway[0].BTTSHorA\n                  ? formDataAway[0].BTTSHorA\n                  : '\"Get Predictions\" first'\n              }\n              BTTSArray={formDataAway[0].BTTSArray}\n              Results={formDataAway[0].Results}\n              CardsTotal={formDataAway[0].CardsTotal}\n              CornersAverage={formDataAway[0].CornersAverage}\n              ScoredBothHalvesPercentage={\n                formDataAway[0].ScoredBothHalvesPercentage\n              }\n              FormTextString={formDataAway[0].FormTextStringAway}\n            />\n          </ul>\n        </div>\n      );\n    }\n\n    ReactDOM.render(\n      <div style={style}>\n        <div className=\"Chart\" id={`Chart${game.id}`} style={style}>\n          <RadarChart\n            data={[\n              homeAttackStrength,\n              homeDefenceStrength,\n              homePossessionStrength,\n              homeXGForStrength,\n              homeXGAgainstStrength,\n            ]}\n            data2={[\n              awayAttackStrength,\n              awayDefenceStrength,\n              awayPossessionStrength,\n              awayXGForStrength,\n              awayXGAgainstStrength,\n            ]}\n            team1={game.homeTeam}\n            team2={game.awayTeam}\n          ></RadarChart>\n          <BarChart\n            data1={[\n              homeForm.averageScoredLeague !== undefined &&\n              homeForm.averageScoredLeague !== null\n                ? homeForm.averageScoredLeague.toFixed(2)\n                : formDataHome[0].AverageGoals,\n              awayForm.averageConceededLeague !== undefined &&\n              awayForm.averageConceededLeague !== null\n                ? awayForm.averageConceededLeague.toFixed(2)\n                : formDataAway[0].AverageConceeded,\n              gameStats.home[0].PPG,\n              formDataHome[0].AverageXG,\n              formDataAway[0].AverageXGConceded,\n              formDataHome[0].AverageShotsOnTarget,\n              formDataHome[0].AverageDangerousAttacks / 7.5,\n              formDataHome[0].AveragePossession / 7.5,\n              formDataHome[0].goalDifferenceHomeOrAway / 5,\n              formDataHome[0].CornersAverage,\n            ]}\n            data2={[\n              awayForm.averageScoredLeague !== undefined &&\n              awayForm.averageScoredLeague !== null\n                ? awayForm.averageScoredLeague.toFixed(2)\n                : formDataAway[0].AverageGoals,\n              homeForm.averageConceededLeague !== undefined &&\n              homeForm.averageConceededLeague !== null\n                ? homeForm.averageConceededLeague.toFixed(2)\n                : formDataHome[0].AverageConceeded,\n              gameStats.away[0].PPG,\n              formDataAway[0].AverageXG,\n              formDataHome[0].AverageXGConceded,\n              formDataAway[0].AverageShotsOnTarget,\n              formDataAway[0].AverageDangerousAttacks / 7.5,\n              formDataAway[0].AveragePossession / 7.5,\n              formDataAway[0].goalDifferenceHomeOrAway / 5,\n              formDataAway[0].CornersAverage,\n            ]}\n          ></BarChart>\n          <Chart\n            height={3}\n            depth={0}\n            data1={formArrayHome}\n            data2={formArrayAway}\n            team1={game.homeTeam}\n            team2={game.awayTeam}\n            type={chartType}\n            tension={0}\n          ></Chart>\n          <Chart\n            height={\n              Math.max(\n                rollingGoalDiffTotalHome[rollingGoalDiffTotalHome.length - 1],\n                rollingGoalDiffTotalAway[rollingGoalDiffTotalAway.length - 1]\n              ) > 2\n                ? Math.max(\n                    rollingGoalDiffTotalHome[\n                      rollingGoalDiffTotalHome.length - 1\n                    ],\n                    rollingGoalDiffTotalAway[\n                      rollingGoalDiffTotalAway.length - 1\n                    ]\n                  )\n                : 2\n            }\n            depth={\n              Math.min(\n                rollingGoalDiffTotalHome[rollingGoalDiffTotalHome.length - 1],\n                rollingGoalDiffTotalAway[rollingGoalDiffTotalAway.length - 1]\n              ) < -2\n                ? Math.min(\n                    rollingGoalDiffTotalHome[\n                      rollingGoalDiffTotalHome.length - 1\n                    ],\n                    rollingGoalDiffTotalAway[\n                      rollingGoalDiffTotalAway.length - 1\n                    ]\n                  )\n                : -2\n            }\n            data1={rollingGoalDiffTotalHome}\n            data2={rollingGoalDiffTotalAway}\n            team1={game.homeTeam}\n            team2={game.awayTeam}\n            type={\"Goal difference over time\"}\n            tension={0.3}\n          ></Chart>\n        </div>\n        <div style={style}>\n          <Div className=\"MatchTime\" text={`Kick off: ${time} GMT`}></Div>\n          <Div\n            text={`Last league games (most recent first)`}\n            className={\"LastGameHeader\"}\n          ></Div>\n        </div>\n        <div className=\"flex-container\">\n          <div className=\"flex-childOneOverviewSmall\">{overviewHome}</div>\n          <div className=\"flex-childTwoOverviewSmall\">{overviewAway}</div>\n        </div>\n        {/* <Collapsable\n          className={\"Detail\"}\n          classNameTwo={\"flex-childOneOverview\"}\n          classNameThree={\"flex-childTwoOverview\"}\n          classNameFlex={\"flex-element\"}\n          classNameButton={\"DetailedFixtures\"}\n          buttonText={\"Detailed results\"}\n          newText={\"Detailed results\"}\n          element={contentHome}\n          elementTwo={contentAway}\n          // style={style}\n        /> */}\n        <div className=\"flex-container\">\n          <StatsHome />\n          <StatsAway />\n        </div>\n        <input type=\"hidden\" name=\"IL_IN_ARTICLE\" />\n        <Button\n          className=\"MoreStats\"\n          onClickEvent={() =>\n            getTeamStats(\n              game.id,\n              game.homeTeam,\n              game.awayTeam,\n              formDataHome[0].BttsPercentage,\n              formDataHome[0].BttsPercentageHomeOrAway,\n              formDataAway[0].BttsPercentage,\n              formDataAway[0].BttsPercentageHomeOrAway\n            )\n          }\n          text={\"Fixture trends\"}\n        ></Button>\n      </div>,\n      document.getElementById(\"stats\" + homeTeam)\n    );\n\n    // ReactDOM.render(\n    //   <Button\n    //     className=\"MoreStats\"\n    //     style={style}\n    //     onClickEvent={() =>\n    //       getTeamStats(\n    //         game.id,\n    //         game.homeTeam,\n    //         game.awayTeam,\n    //         formDataHome[0].BttsPercentage,\n    //         formDataHome[0].BttsPercentageHomeOrAway,\n    //         formDataAway[0].BttsPercentage,\n    //         formDataAway[0].BttsPercentageHomeOrAway\n    //       )\n    //     }\n    //     text={\"Fixture trends\"}\n    //   ></Button>,\n    //   document.getElementById(`H2HStats${game.id}`)\n    // );\n  }\n}\n","import React, { Fragment, useState } from \"react\";\nimport { CreateBadge } from \"./createBadge\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { createStatsDiv } from \"../logic/getStats\";\nimport { renderTable } from \"../logic/getFixtures\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\n\nlet resultValue;\nvar count;\nlet mockValue;\nvar setCount;\n\nfunction toggle(bool) {\n  count = !bool;\n  return count;\n}\n\n// function stylying(bool){\n//   if (bool === true) {\n//     // set stats element to display flex\n//     return { display: \"block\" };\n//   } else {\n//     // set stats element to display none\n//     return { display: \"none\" };\n//   }\n// }\n\nfunction GetDivider(fixture, mock) {\n  const matchStatus = fixture.status;\n  let isPrediction = resultValue;\n\n  if(mockValue === true && matchStatus === \"complete\"){\n    isPrediction = false\n    return (\n      <Fragment>\n        <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n        <div\n          className=\"CorrectScore\"\n          key={fixture.fixture.homeTeam}\n          data-cy={\"score-\" + fixture.fixture.id}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (mockValue === true && matchStatus !== \"complete\") {\n    isPrediction = true\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  }\n  else if (isPrediction === false && matchStatus !== \"complete\") {\n    return (\n      <div className=\"divider\" data-cy={\"divider-\" + fixture.fixture.id}>\n        {\"V\"}\n      </div>\n    );\n  } else if (isPrediction === false && matchStatus === \"complete\") {\n    return (\n      <div\n        className=\"Result\"\n        data-cy={\"result-\" + fixture.fixture.id}\n      >{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n    );\n  } else if (isPrediction === true && matchStatus === \"complete\") {\n    let outcome;\n    let prediction;\n\n    switch (true) {\n      case fixture.fixture.homeGoals > fixture.fixture.awayGoals:\n        outcome = 0;\n        fixture.fixture.winner = fixture.fixture.homeTeam;\n        fixture.fixture.outcome = \"homeWin\";\n        break;\n      case fixture.fixture.homeGoals === fixture.fixture.awayGoals:\n        outcome = 1;\n        fixture.fixture.winner = \"draw\";\n        fixture.fixture.outcome = \"draw\";\n\n        break;\n      case fixture.fixture.homeGoals < fixture.fixture.awayGoals:\n        outcome = 2;\n        fixture.fixture.winner = fixture.fixture.awayTeam;\n        fixture.fixture.outcome = \"awayWin\";\n\n        break;\n      default:\n        break;\n    }\n\n    switch (true) {\n      case fixture.fixture.goalsA > fixture.fixture.goalsB:\n        prediction = 0;\n        break;\n      case fixture.fixture.goalsA === fixture.fixture.goalsB:\n        prediction = 1;\n        break;\n      case fixture.fixture.goalsA < fixture.fixture.goalsB:\n        prediction = 2;\n        break;\n      default:\n        break;\n    }\n    if (outcome === prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        switch (true) {\n          case outcome === 0:\n            fixture.fixture.profit = fixture.fixture.homeOdds;\n            break;\n          case outcome === 1:\n            fixture.fixture.profit = fixture.fixture.drawOdds;\n            break;\n          case outcome === 2:\n            fixture.fixture.profit = fixture.fixture.awayOdds;\n            break;\n          default:\n            break;\n        }\n      } else fixture.fixture.profit = 1;\n\n      if (\n        fixture.fixture.goalsA === fixture.fixture.homeGoals &&\n        fixture.fixture.goalsB === fixture.fixture.awayGoals\n      ) {\n        fixture.fixture.exactScore = true;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"ExactScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      } else {\n        fixture.fixture.exactScore = false;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"CorrectScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      }\n    } else if (outcome !== prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        fixture.fixture.profit = 0;\n      } else {\n        fixture.fixture.profit = 1;\n      }\n      fixture.fixture.exactScore = false;\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"IncorrectScore\"\n            key={fixture.fixture.awayTeam}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    }\n  } else {\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  }\n}\n\nfunction renderLeagueName(fixture, mock) {\n  mockValue = mock\n\n  let name = fixture.leagueName;\n  let id = allLeagueResultsArrayOfObjects.length > 0 ? allLeagueResultsArrayOfObjects[fixture.leagueIndex].id : null\n  if (name === null || mock === true) {\n    return <div></div>;\n  } else {\n    return (\n      <div>\n        <div\n          className=\"leagueName\"\n          id={`league${id}`}\n          key={`leagueName${id}div`}\n          onClick={() =>\n            renderTable(\n              fixture.leagueIndex,\n              allLeagueResultsArrayOfObjects[fixture.leagueIndex],\n              id\n            )\n          }\n        >\n          {fixture.leagueName} &#9776;\n        </div>\n        <div\n          className=\"LeagueTable\"\n          key={`leagueName${id}`}\n          id={`leagueName${id}`}\n        ></div>\n      </div>\n    );\n  }\n}\n\nconst SingleFixture = ({ fixture, count, mock }) => (\n  <div key={fixture.game}>\n    {renderLeagueName(fixture, mock)}\n    <li\n      className={\"individualFixture\"}\n      key={fixture.id}\n      onMouseDown={() => (count = toggle(count))}\n      onClick={() => mock === false ? createStatsDiv(fixture, count) : null}\n      data-cy={fixture.id}\n    >\n      <div className=\"HomeOdds\">{fixture.fractionHome}</div>\n      <div className=\"homeTeam\">{fixture.homeTeam}</div>\n      <GetDivider\n        result={resultValue}\n        status={fixture.status}\n        fixture={fixture}\n      />\n      {/* <div className=\"divider\">{\"V\"}</div> */}\n      <div className=\"awayTeam\">{fixture.awayTeam}</div>\n      <CreateBadge\n        image={fixture.homeBadge}\n        ClassName=\"HomeBadge\"\n        alt=\"Home team badge\"\n        flexShrink={5}\n      />\n      <CreateBadge\n        image={fixture.awayBadge}\n        ClassName=\"AwayBadge\"\n        alt=\"Away team badge\"\n      />\n      <div className=\"AwayOdds\">{fixture.fractionAway}</div>\n    </li>\n    <div id={\"stats\" + fixture.homeTeam} />\n    <div className=\"MatchHistory\" id={\"history\" + fixture.homeTeam} />\n  </div>\n);\n\nconst List = ({ fixtures, mock }) => (\n  <div>\n    <div id=\"Headers\"></div>\n    <ul className=\"FixtureList\" id=\"FixtureList\">\n      {fixtures.map((fixture, i) => (\n        <SingleFixture fixture={fixture} key={fixture.game} count={count} mock={mock}/>\n      ))}\n    </ul>\n  </div>\n);\n\nexport function Fixture(props) {\n  [count, setCount] = useState(false);\n  resultValue = props.result;\n  return <List fixtures={props.fixtures} result={resultValue} count={count} mock={props.mock}/>;\n}\n","import React from \"react\";\n\nfunction DateField(props) {\n  return (\n    <form className=\"DateForm\">\n      <input type=\"date\" id=\"date\" name=\"date\" />\n      <input type=\"submit\" />\n    </form>\n  );\n}\n\nexport default DateField;\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./components/Header\";\nimport { Button } from \"./components/Button\";\nimport OddsRadio from \"./components/OddsRadio\";\nimport { Fixture } from \"./components/Fixture\";\nimport mockedFixtures from \"./data/mockedFixtures.json\";\nimport { selectedOdds } from \"./components/OddsRadio\";\nimport Collapsable from \"./components/CollapsableElement\";\nimport { StyledKofiButton } from \"./components/KofiButton\";\nimport DateField from \"./components/DateForm\";\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  RedditShareButton,\n  RedditIcon,\n  TelegramShareButton,\n  TelegramIcon,\n  TwitterShareButton,\n  TwitterIcon,\n  WhatsappShareButton,\n  WhatsappIcon,\n} from \"react-share\";\n\nimport { generateFixtures } from \"./logic/getFixtures\";\nimport { selectedOption } from \"./components/radio\";\nimport { ThreeDots } from \"react-loading-icons\";\n// import { Toggles } from \"./components/Toggle\";\nimport reactDom from \"react-dom\";\n// require(\"dotenv\").config();\n\nexport const proxyurl = \"https://safe-caverns-99679.herokuapp.com/\";\nexport var fixtureList = [];\nexport let allLeagueData = [];\n\nexport const availableLeagues = [];\nexport var orderedLeagues = [];\n\nconst leagueOrder = [\n  7432, //World Cup 22\n  9660, //premier league 22/23\n  9663, //championship 22/23\n  9582, //league 1 22/23\n  9581, //league 2 22/23\n  9700, //National league 22/23\n  9665, //La Liga 22/23\n  9636, //Scottish Prem 22/23\n  9655, //Bundesliga 22/23\n  9697, //Serie A 22/23\n  9674, //French Prem 22/23\n  7731, //Portagul Prem 22/23\n  9653, //Dutch Prem 22/23\n  9577, //Belgian Pro League 22/23\n  8737, //sweden 23\n  9545, //Danish Prem 22/23\n  8739, //Norway Prem 23\n  7890, //Austrian Prem 22/23\n  7954, //Greek Prem 22/23\n  9553, //Polish prem 22/23\n  9580, //Swiss prem 22/23\n  8741, //Irish Prem 23\n  9675, //Spanish secunda 22/23\n  7864, //Italy serie B 22/23\n  9656, //Bundesliga 2 22/23\n  9741, //German 3rd tier 22/23\n  9621, //French League 2 22/23\n  9637, //Scottish Championship 22/23\n  9639, //Scottish league 1 22/23\n  9638, //Scottish league 2 22/23\n  9890, //Women's prem 23/24\n  8777, //MLS 23\n  9035, //Brazil prem 23\n  8595, //Argentina prem 23\n  // 6935, //Japan 22\n  9525, //Mexico prem 23/24\n  7956, //National league North and South 22/23\n  8008, //Australian A league 22/23\n  8899, //S Korea 23\n];\n\nlet today;\nlet todayFootyStats;\nlet tomorrow;\nlet tomorrowFootyStats;\nlet date;\nlet dateFootyStats;\nlet value;\nlet yesterday;\nlet yesterdayFootyStats;\nlet lastSaturday;\nlet lastSaturdayFootyStats;\nlet historic;\nlet historicFootyStats;\nlet tomorrowsDate;\nlet yesterdaysDate;\nlet saturdayDate;\nlet historicDate;\nlet string;\nlet dateString;\n\n(async function getLeagueList() {\n  let leagueList;\n\n  let i = 0;\n  date = new Date();\n  string = \"Today\";\n\n  async function incrementDate(num, date) {\n    i = i + num;\n    value = i + num;\n    date.setDate(date.getDate() + num);\n    [date, dateFootyStats] = await calculateDate(date);\n    string = dateFootyStats;\n    await renderButtons();\n    // return date;\n  }\n\n  async function decrementDate(num, date) {\n    i = i - num;\n    console.log(i);\n    if (i > -60) {\n      value = i - num;\n      date.setDate(date.getDate() - num);\n      [date, dateFootyStats] = await calculateDate(date);\n      string = dateFootyStats;\n      dateString = date;\n      await renderButtons();\n    }\n  }\n\n  async function calculateDate(dateString) {\n    const day = dateString.getDate();\n    const month = dateString.getMonth() + 1;\n    const year = dateString.getFullYear();\n    return [`${month}${day}${year}`, `${year}-${month}-${day}`];\n  }\n\n  [today, todayFootyStats] = await calculateDate(new Date());\n\n  tomorrowsDate = new Date();\n  tomorrowsDate.setDate(tomorrowsDate.getDate() + 1);\n  [tomorrow, tomorrowFootyStats] = await calculateDate(tomorrowsDate);\n\n  yesterdaysDate = new Date();\n  yesterdaysDate.setDate(yesterdaysDate.getDate() - 1);\n  [yesterday, yesterdayFootyStats] = await calculateDate(yesterdaysDate);\n\n  saturdayDate = new Date();\n  saturdayDate.setDate(\n    saturdayDate.getDate() - ((saturdayDate.getDay() + 6) % 7)\n  );\n  saturdayDate.setDate(saturdayDate.getDate() - 2);\n  [lastSaturday, lastSaturdayFootyStats] = await calculateDate(saturdayDate);\n\n  historicDate = new Date();\n  historicDate.setDate(\n    historicDate.getDate() - ((historicDate.getDay() + 6) % 7)\n  );\n  historicDate.setDate(historicDate.getDate() - 9);\n  [historic, historicFootyStats] = await calculateDate(historicDate);\n\n  leagueList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}leagueList`);\n\n  let leagueArray;\n  await leagueList.json().then((leagues) => {\n    leagueArray = Array.from(leagues.data);\n  });\n\n  for (let i = 0; i < leagueArray.length; i++) {\n    const league = leagueArray[i];\n    const name = leagueArray[i].name;\n\n    for (let x = 0; x < league.season.length; x++) {\n      const element = league.season[x];\n\n      if (element.year === 2023 || element.year === 20232024) {\n        if (element.id !== 4340 && element.id !== 6935 && element.id !== 7061) {\n          availableLeagues.push({ name: name, element });\n        }\n      }\n    }\n\n    async function mapOrder(array, order, key) {\n      array.sort(function (a, b) {\n        var A = a.element[key],\n          B = b.element[key];\n\n        if (order.indexOf(A) > order.indexOf(B)) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n      return array;\n    }\n    //leagues ordered by id\n    orderedLeagues = await mapOrder(availableLeagues, leagueOrder, \"id\");\n  }\n\n  const text =\n    \"Select a day you would like to retrieve fixtures for from the options above\\n A list of games will be returned once the data has loaded\\n Once all fixtures have loaded, click on “Get Predictions” to see XGTipping's forecasted outcomes for every game\\n If a game has completed, the predictions is displayed on the right and the actual result on the left\\n Each individual fixture is tappable/clickable. By doing so, you can access a range of detailed stats, from comparative charts, granular performance measures to previous meetings.\\n All games are subject to the same automated prediction algorithm with the outcome being a score prediction. Factors that determine the tip include the following, amongst others:\\n - Goal differentials\\n - Expected goal differentials \\n - Attack/Defence performance\\n - Form trends over time\\n - Home/Away records\\n - WDL records\\n - Points per game \\n - A range of other comparative factors\\n  –\\n\";\n\n  const text2 =\n    \"A range of tools are available should you wish to use them\\n Build a multi - Use the '+' or '-' buttons to add or remove a game deemed to be one of XGTIpping's highest confidence tips from the day\\n Exotic of the day: A pre-built exotic multi comprising of XGTipping's highest confidence tips\\n BTTS games: Games where both teams to score is deemed a likely outcome\\n Over 2.5 goals tips: Games where over 2.5 goals are most likely to be scored\\n XG tips: Comprises only games where the expected goal differentials between each team are at their greatest. We believe this shows a true disparity in the form of the two opposing teams\\n Tap the 'How to use' option to hide this text\";\n\n  let textJoined = text.concat(text2);\n\n  let newText = textJoined.split(\"\\n\").map((i) => {\n    return <p>{i}</p>;\n  });\n\n  async function renderButtons() {\n    ReactDOM.render(\n      <div className=\"FixtureButtons\">\n        <div className=\"historicResults\">\n          <Button\n            text={\"Last Saturday\"}\n            className=\"HistoricFixturesButton\"\n            onClickEvent={async () =>\n              fixtureList.push(\n                await generateFixtures(\n                  \"lastSaturday\",\n                  lastSaturday,\n                  selectedOdds,\n                  lastSaturdayFootyStats,\n                  false,\n                  today\n                )\n              )\n            }\n          />\n          {/* <Button\n            text={\"Historic predictions\"}\n            className=\"HistoricFixturesButtonRight\"\n            onClickEvent={async () =>\n              fixtureList.push(\n                await generateFixtures(\n                  \"historic\",\n                  historic,\n                  selectedOdds,\n                  historicFootyStats\n                )\n              )\n            }\n          /> */}\n        </div>\n        <Button\n          text={`<`}\n          className=\"FixturesButton\"\n          // onClickEvent={async () =>\n          //   fixtureList.push(\n          //     await generateFixtures(\n          //       \"yesterdaysFixtures\",\n          //       yesterday,\n          //       selectedOdds,\n          //       yesterdayFootyStats\n          //     )\n          //   )\n          // }\n          onClickEvent={async () => await decrementDate(1, date)}\n        />\n        <Button\n          text={dateFootyStats !== undefined ? dateFootyStats : date}\n          className=\"FixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"todaysFixtures\",\n                dateString,\n                selectedOdds,\n                dateFootyStats,\n                false,\n                today\n              )\n            )\n          }\n        />\n        <Button\n          text={`Today`}\n          className=\"FixturesButtonToday\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"todaysFixtures\",\n                today,\n                selectedOdds,\n                todayFootyStats,\n                true,\n                today\n              )\n            )\n          }\n        />\n        <Button\n          text={\"Tomorrow\"}\n          className=\"FixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"tomorrowsFixtures\",\n                tomorrow,\n                selectedOdds,\n                tomorrowFootyStats,\n                true,\n                today\n              )\n            )\n          }\n        />\n      </div>,\n      document.getElementById(\"Buttons\")\n    );\n  }\n\n  ReactDOM.render(\n    <div className=\"FixtureButtons\">\n      <div className=\"historicResults\">\n        <Button\n          text={\"Last Saturday\"}\n          className=\"HistoricFixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"lastSaturday\",\n                lastSaturday,\n                selectedOdds,\n                lastSaturdayFootyStats,\n                false,\n                today\n              )\n            )\n          }\n        />\n        {/* <Button\n          text={\"Historic predictions\"}\n          className=\"HistoricFixturesButtonRight\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"historic\",\n                historic,\n                selectedOdds,\n                historicFootyStats\n              )\n            )\n          }\n        /> */}\n      </div>\n      <Button\n        text={`<`}\n        className=\"FixturesButton\"\n        onClickEvent={async () => await decrementDate(1, date)}\n      />\n      <Button\n        text={`${string}`}\n        className=\"FixturesButtonToday\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"todaysFixtures\",\n              today,\n              selectedOdds,\n              todayFootyStats,\n              true,\n              today\n            )\n          )\n        }\n      />\n      <Button\n        text={\"Tomorrow\"}\n        className=\"FixturesButton\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"tomorrowsFixtures\",\n              tomorrow,\n              selectedOdds,\n              tomorrowFootyStats,\n              true,\n              today\n            )\n          )\n        }\n      />\n    </div>,\n    document.getElementById(\"Buttons\")\n  );\n  ReactDOM.render(\n    <div className=\"OddsRadios\">\n      <OddsRadio value=\"Fractional odds\"></OddsRadio>\n      <OddsRadio value=\"Decimal odds\"></OddsRadio>\n    </div>,\n    document.getElementById(\"Checkbox\")\n  );\n  ReactDOM.render(\n    <Fragment>\n      <Collapsable\n        // className={\"HowToUse\"}\n        buttonText={\"How to use\"}\n        element={newText}\n      />\n    </Fragment>,\n    document.getElementById(\"XGDiff\")\n  );\n\n  // ReactDOM.render(\n  //   <Button\n  //     text={\"Lowest scoring leagues\"}\n  //     className={\"Under25TeamsButton\"}\n  //     onClickEvent={async () => {\n  //       let leagues = await getLowestScoringLeagues();\n  //       const leagueList = [];\n\n  //       leagues.forEach(async (league) =>\n  //         leagueList.push(\n  //           <ul className=\"GlobalStat\">\n  //             <p className=\"TeamName\">\n  //               {league.league} ({league.leagueCountry})\n  //             </p>\n  //             <li>Average goals: {league.averageGoals}</li>\n  //             <li>Under 2.5 goals %: {league.under25Percentage}%</li>\n  //           </ul>\n  //         )\n  //       );\n\n  //       reactDom.render(\n  //         <div>\n  //           <h3>Leagues with the lowest scoring games</h3>\n  //           <ul>{leagueList}</ul>\n  //         </div>,\n  //         document.getElementById(\"Under25Games\")\n  //       );\n  //     }}\n  //   ></Button>,\n  //   document.getElementById(\"Under25Games\")\n  // );\n\n  // ReactDOM.render(\n  //   <Button\n  //     text={\"Highest scoring leagues\"}\n  //     className={\"Over25TeamsButton\"}\n  //     onClickEvent={async () => {\n  //       let leagues = await getHighestScoringLeagues();\n  //       const leagueList = [];\n\n  //       leagues.forEach(async (league) =>\n  //         leagueList.push(\n  //           <ul className=\"GlobalStat\">\n  //             <p className=\"TeamName\">\n  //               {league.league} ({league.leagueCountry})\n  //             </p>\n  //             <li>Average goals: {league.averageGoals}</li>\n  //             <li>Over 2.5 goals %: {league.over25Percentage}%</li>\n  //           </ul>\n  //         )\n  //       );\n\n  //       reactDom.render(\n  //         <div>\n  //           <h3>Leagues with the highest scoring games</h3>\n  //           <ul>{leagueList}</ul>\n  //         </div>,\n  //         document.getElementById(\"Over25Games\")\n  //       );\n  //     }}\n  //   ></Button>,\n  //   document.getElementById(\"Over25Games\")\n  // );\n})();\n\nasync function getHighestScoringLeagues() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}over25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    for (let index = 0; index < 215; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        over25Percentage:\n          leagues.data.top_leagues.data[index].seasonOver25Percentage_overall,\n        division: leagues.data.top_leagues.data[index].division,\n        leagueId: leagues.data.top_leagues.data[index].id,\n      };\n      arr.push(league);\n    }\n  });\n\n  const finalArray = arr.filter(\n    (league) =>\n      leagueOrder.find((element) => element === league.leagueId) &&\n      league.averageGoals >= 2.5\n  );\n\n  let sortedArray = finalArray.sort((a, b) => b.averageGoals - a.averageGoals);\n\n  return sortedArray;\n}\n\nasync function getLowestScoringLeagues() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}under25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    for (let index = 0; index < 215; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        under25Percentage:\n          leagues.data.top_leagues.data[index].seasonUnder25Percentage_overall,\n        leagueId: leagues.data.top_leagues.data[index].id,\n      };\n      arr.push(league);\n    }\n  });\n\n  const finalArray = arr.filter(\n    (league) =>\n      leagueOrder.find((element) => element === league.leagueId) &&\n      league.averageGoals < 2.5\n  );\n\n  let sortedArray = finalArray.sort((a, b) => a.averageGoals - b.averageGoals);\n\n  return sortedArray;\n}\n\nconst welcomeTextUnsplitOne = `Welcome to XGTipping. Your go-to resource for all things football, from predictions, comprehensive head to head stats, results, xg scores, odds, league tables, form, and bespoke multi-builders underpinned by expected goal (XG) data.\\n `;\nlet welcomeTextOne = welcomeTextUnsplitOne.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nconst welcomeTextUnsplitTwo = `XGTipping is completely independent and free to use, relying on a donation model to support running costs. For feedback or feature ideas, get in touch at @TippingXg.`;\nlet welcomeTextTwo = welcomeTextUnsplitTwo.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <a\n        className=\"SocialLink\"\n        href=\"https://www.reddit.com/r/xgtipping/\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        r/xgtipping\n      </a>\n      <div id=\"LoadingContainer\" className=\"LoadingContainer\" />\n      <div id=\"RadioContainer\" className=\"RadioContainer\">\n        <div id=\"RadioText\" />\n        <div id=\"RadioButtons\" />\n      </div>\n      <div id=\"Day\" />\n      <div id=\"Checkbox\" />\n      <div id=\"ExplainerText\" />\n      <div id=\"Loading\" className=\"Loading\"></div>\n      <div id=\"Buttons\" className=\"Buttons\">\n        <ThreeDots className=\"MainLoading\" fill=\"#030061\" />\n        <div>Loading all fixture and form data...</div>\n      </div>\n      <div id=\"GeneratePredictions\" className=\"GeneratePredictions\" />\n      <div id=\"bestPredictions\" className=\"bestPredictions\" />\n      <div id=\"exoticOfTheDay\" className=\"exoticOfTheDay\" />\n      <div id=\"successMeasure2\" />\n      <div id=\"RowOneContainer\" className=\"RowOneContainer\">\n        <div id=\"BTTS\" className=\"RowOne\" />\n        <div id=\"longShots\" className=\"RowOne\" />\n        <div id=\"draws\" className=\"RowOne\" />\n      </div>\n      <div id=\"insights\" />\n      <div id=\"successMeasure\" />\n      <div id=\"tables\" />\n      <div id=\"homeBadge\" />\n      <div id=\"FixtureContainerHeaders\"></div>\n      {/* <StyledKofiButton buttonText=\"Donations\"></StyledKofiButton> */}\n      <div id=\"XGDiff\" />\n      <div id=\"FixtureContainer\">\n      <h6 className=\"WelcomeText\">{welcomeTextOne}</h6>\n        <h6 className=\"GetMatchStatText\">\n          Below is an example of our tips/results overview for you to familiarise yourself with. Get real fixtures using the date buttons, above. When loaded, tap on\n          one to see full match stats\n        </h6>\n        <div className=\"ExplainerContainer\">\n          <span className=\"oddsHomeExplainer\">Home odds</span>\n          <span className=\"emptyHomeTeam\"></span>\n          <span className=\"scoreExplainer\">Result / KO Time</span>\n          <span className=\"predictionExplainer\">Our Prediction</span>\n          <span className=\"emptyAwayTeam\"></span>\n          <span className=\"oddsAwayExplainer\">Away odds</span>\n        </div>\n        <Fixture\n          fixtures={mockedFixtures.matches}\n          // result={false}\n          mock={true}\n          className={\"individualFixture\"}\n        />\n        <div>\n          <h6 className=\"WelcomeText\">{welcomeTextTwo}</h6>\n          <h6 className=\"WelcomeText\">\n            We cover a range of leagues, including\n            <ul className=\"AllLeagues\">\n              <li className=\"League\">Premier League</li>\n              <li className=\"League\">English Football League</li>\n              <li className=\"League\">La Liga</li>\n              <li className=\"League\">Serie A</li>\n              <li className=\"League\">Bundesliga</li>\n              <li className=\"League\">Ligue 1</li>\n              <li className=\"League\">MLS</li>\n              <li className=\"League\">Primeira Liga</li>\n              <li className=\"League\">Loads more...</li>\n            </ul>\n          </h6>\n        </div>\n        <div>\n          <div className=\"DataText\">Raw data from</div>\n          <a\n            className=\"DataLink\"\n            href=\"https://www.footystats.org\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            footystats.org\n          </a>\n        </div>\n        <div className=\"bitcoin\" id=\"bitcoin\">\n          We aim to remain free to use, contributions are always appreciated\n          though:\n          <a\n            href=\"https://www.ko-fi.com/xgtipping\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Donations\n          </a>\n          <span className=\"bitcoinSymbol\">&#x20bf;itcoin address</span>\n          <span className=\"bitcoinAddress\">\n            bc1q7j62txkvhfu0dt3l0s07saze6pjnyzs26wfgp0\n          </span>\n        </div>\n      </div>\n      <div className=\"Social\">\n        <TwitterShareButton\n          url={\"www.xgtipping.com\"}\n          title={\"#XGTipping\"}\n          className=\"ShareButton\"\n          style={{\n            backgroundColor: \"white\",\n            boxShadow: \"none\",\n            padding: \"0.5em\",\n          }}\n        >\n          <TwitterIcon size={\"3em\"} round={true} />\n        </TwitterShareButton>\n        <RedditShareButton\n          url={\"www.xgtipping.com\"}\n          title={\"XGTipping\"}\n          className=\"ShareButton\"\n          style={{\n            backgroundColor: \"white\",\n            boxShadow: \"none\",\n            padding: \"0.5em\",\n          }}\n        >\n          <RedditIcon size={\"3em\"} round={true} />\n        </RedditShareButton>\n        <FacebookShareButton\n          url={\"www.xgtipping.com\"}\n          quote={\"XGTipping - data-driven football predictions\"}\n          className=\"ShareButton\"\n          style={{\n            backgroundColor: \"white\",\n            boxShadow: \"none\",\n            padding: \"0.5em\",\n          }}\n        >\n          <FacebookIcon size={\"3em\"} round={true} />\n        </FacebookShareButton>\n        <WhatsappShareButton\n          url={\"www.xgtipping.com\"}\n          title={\"XGTipping\"}\n          separator=\": \"\n          className=\"ShareButton\"\n          style={{\n            backgroundColor: \"white\",\n            boxShadow: \"none\",\n            padding: \"0.5em\",\n          }}\n        >\n          <WhatsappIcon size={\"3em\"} round={true} />\n        </WhatsappShareButton>\n        <TelegramShareButton\n          url={\"XGTipping\"}\n          title={\"XGTipping\"}\n          className=\"ShareButton\"\n          style={{\n            backgroundColor: \"white\",\n            boxShadow: \"none\",\n            padding: \"0.5em\",\n          }}\n        >\n          <TelegramIcon size={\"3em\"} round={true} />\n        </TelegramShareButton>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nexport var selectedOption = \"5\";\n\nexport var fixtureList = [];\n\nexport class Radio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOption: this.props.value,\n    };\n  }\n\n  handleOptionChange = () => {\n    this.setState({\n      selectedOption: this.props.value,\n    });\n    selectedOption = this.state.selectedOption;\n  };\n\n  render() {\n    return (\n      <section className=\"dark\">\n        <div className={this.props.className}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"lastGames\"\n              checked={this.state.checked}\n              onChange={this.handleOptionChange}\n              data-cy={this.props.value}\n            />\n            <span className=\"design\"></span>\n            <span className=\"text\">Last {this.props.value} games</span>\n          </label>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Radio;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}