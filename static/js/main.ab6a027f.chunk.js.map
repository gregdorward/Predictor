{"version":3,"sources":["components/Header.js","components/Button.js","components/OddsRadio.js","components/KofiButton.js","logic/getForm.js","components/createBadge.js","components/CollapsableElement.js","components/createStatsDiv.js","components/Div.js","components/HeadToHead.js","components/Table.js","logic/getTeamStats.js","components/Increment.js","logic/getScorePredictions.js","logic/getBTTSPotential.js","logic/getStats.js","components/Fixture.js","logic/getFixtures.js","components/LeagueTable.js","components/radio.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Button","props","id","text","variant","type","onClick","onClickEvent","selectedOdds","OddsRadio","handleOptionChange","setState","value","state","this","name","checked","onChange","Component","StyledKofiButton","color","title","kofiID","width","applyColour","colour","getForm","match","teams","homeId","awayId","fixtureForm","i","team","fetch","process","response","json","then","formData","console","log","data","season_format","length","CreateBadge","src","image","ClassName","alt","flexShrink","Collapsable","isOpen","handleOnClick","prevState","style","buttonText","Stats","styleForm","formIndicator","formRun","last5","homeOrAway","goals","conceeded","possession","XG","XGConceded","goalDifference","goalDifferenceHomeOrAway","sot","dangerousAttacks","leaguePosition","homeOrAwayLeaguePosition","winPercentage","toFixed","drawPercentage","lossPercentage","ppg","formTrend","BttsPercentage","BttsPercentageHomeOrAway","CardsTotal","CornersAverage","ScoredBothHalvesPercentage","Div","HeadToHead","stadium","lastGameStadiumName","lastGameDate","lastGameHomeTeam","lastGameHomeGoals","lastGameAwayGoals","lastGameAwayTeam","secondToLastGameStadiumName","secondToLastGameDate","secondToLastGameHomeTeam","secondToLastGameHomeGoals","secondToLastGameAwayGoals","secondToLastGameAwayTeam","matches","homeTeam","homeWins","awayTeam","awayWins","draws","averageGoals","bestHomeOdds","bestAwayOdds","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","white","padding","textAlign","fontSize","fontFamily","border","margin","body","TableCell","StyledTableRow","root","TableRow","CustomizedTables","TableContainer","component","Paper","Table","TableHead","TableBody","scope","align","o05Stat","o05Odds","u05Odds","o15Stat","o15Odds","u15Odds","o25Stat","o25Odds","u25Odds","o35Stat","o35Odds","u35Odds","BTTSStat","BTTSOdds","BTTSOddsNo","getTeamStats","home","away","identifier","matchArr","h2h","previous_matches_ids","oddsComparisonHomeArray","oddsComparisonAwayArray","odds_comparison","sortedHomeOdds","Object","entries","sort","a","b","sortedAwayOdds","bestHomeOddsProvider","bestAwayOddsProvider","previous_matches_results","totalMatches","date_unix","lastMatch","secondToLastMatch","previousMatch","game","previousMatchDetails","unixTimestamp","dateObject","Date","date","getDate","getMonth","getFullYear","secondToPreviousMatch","secondToPreviousMatchDetails","dateObject2","date2","ReactDOM","render","stadium_name","team_a_wins","team_b_wins","draw","betting_stats","avg_goals","homeGoalCount","awayGoalCount","home_name","away_name","over05Percentage","over15Percentage","o15Forecast","o15_potential","odds_ft_over05","odds_ft_under05","odds_ft_over15","odds_ft_under15","over25Percentage","o25Forecast","o25_potential","odds_ft_over25","odds_ft_under25","over35Percentage","o35Forecast","o35_potential","odds_ft_over35","odds_ft_under35","bttsPercentage","BTTSForecast","btts_potential","odds_btts_yes","odds_btts_no","CornersStat","CornersForecast","corners_potential","CornersOdds","odds_corners_over_105","document","getElementById","finalHomeGoals","finalAwayGoals","rawFinalHomeGoals","rawFinalAwayGoals","homeOdds","awayOdds","incrementValue","riskLevel","Increment","IncrementItem","getNewTips","allTips","DecreaseItem","show","getBTTSPotential","allForm","index","homeGoals","awayGoals","findIndex","item","teamName","homeBTTS","BTTSPercentage","awayBTTS","homeG","awayG","homeXG","XGOverall","awayXG","combinedBTTS","bttsFraction","status","btts","bttsChosen","totalGoals","Headers","append","winDAAverage","lossDAAverage","winOddsAverage","lossOddsAverage","winPossessionAverage","lossPossessionAverage","winLast10PPGAverage","lossLast10PPGAverage","winSOTAverage","lossSOTAverage","winXGForAverage","lossXGForAverage","winXGAgainstAverage","lossXGAgainstAverage","sumStatDAWin","sumStatDALoss","sumStatPossessionWin","sumStatPossessionLoss","sumStatSOTWin","sumStatSOTLoss","sumStatPPGLast10Win","sumStatPPGLast10Loss","sumOddsWin","sumOddsLoss","sumXGForWin","sumXGForLoss","sumXGAgainstWin","sumXGAgainstLoss","allWinOutcomes","allLossOutcomes","getPointsFromLastX","lastX","pointsAddition","points","forEach","compareStat","statOne","statTwo","stat1","parseFloat","stat2","statOneNotZero","statTwoNotZero","gap","result","tooCloseToCall","compareDefenceStat","getOverOrUnderAchievingResult","overUnderAchievingSum","correction","getClinicalRating","form","dangerousAttackConversion","rating","score","getPointsDifferential","pointsHomeAvg","pointsAwayAvg","diff","differential","getPointWeighting","pointsDiff","pointsDiffWeightingHome","pointsDiffWeightingAway","compareFormTrend","threeGameAverage","fiveGameAverage","sixGameAverage","tenGameAverage","recentGoalDiff","distantGoalDiff","getPointAverage","pointTotal","games","compareTeams","homeForm","awayForm","awayPoints","overUnderAchievingSumComparison","tooCloseToCallCount","AverageShotsOnTarget","sotComparisonHOrA","AverageShotsOnTargetOverall","sotComparison","CleanSheetPercentage","CleanSheetPercentageComparison","dangerousAttackConversionComparison","goalsPerDangerousAttack","goalsPerDangerousAttackComparison","AverageDangerousAttacks","dangerousAttacksComparisonHOrA","AverageDangerousAttacksOverall","dangerousAttacksComparison","XGdifferential","XGdifferentialComparison","formTrendScore","formTrendScoreComparison","last10Points","last10PointsComparison","twoGameAverage","twoGameAverageComparison","fiveGameAverageComparison","tenGameAverageComparison","SeasonPPG","seasonPPGComparison","AttackingPotency","attackingPotencyComparison","AveragePossession","AveragePossessionComparisonHOrA","goalDiffComparison","goalDiffHOrAComparison","AveragePossessionOverall","AveragePossessionComparison","awayPositionAwayOnly","homePositionHomeOnly","positionComparisonHorA","awayPosition","homePosition","positionComparison","undefined","WinPercentage","winPercentageComparison","DrawPercentage","homeTeamWinPercentage","awayTeamWinPercentage","homeTeamDrawPercentage","awayTeamDrawPercentage","LossPercentage","lossPercentageComparison","awayTeamLossPercentage","homeTeamLossPercentage","OddsComparison","homeOrAwayAverage","homeOrAwayAverageComparison","calculation","homeWinOutcomeProbability","awayWinOutcomeProbability","drawOutcomeProbability","last2Points","wdlRecordComparison","win","loss","compareDefences","rawGoals","conceededAverageShortAndLongTerm","GoalsConceededComparison","roundCustom","num","otherForm","wholeNumber","Math","floor","remainder","ceil","calculateScore","divider","calculate","find","PlayedHome","PlayedAway","lastGame","LastFiveForm","previousToLastGame","last2","last3","last5Points","last6Points","LastSixForm","LastTenForm","last3Points","lastHomeOrAwayPoints","ScoredAverage","ScoredOverall","ConcededAverage","ConcededOverall","ScoredAverageShortTerm","ScoredAverageLongTermHomeOrAway","ConcededAverageShortTerm","ConcededAverageLongTermHomeOrAway","longTermAverageGoals","longTermAverageConceeded","expectedGoals","expectedGoalsConceeded","XGAgainstAverage","expectedGoalsLongTerm","expectedConceededGoalsLongTerm","ScoredAverageShortAndLongTerm","expectedGoalsShortAndLongTerm","finishingScore","goalieRating","goalOverOrUnderAchieving","concededOverOrUnderAchieving","overUnderAchievingSumAttack","overUnderAchievingSumDefence","forecastedXG","forecastedXGConceded","goalsBasedOnAverages","XGAgainstAvgOverall","XGWeighting","improving","formHome","formAway","overOrUnderAttack","trueFormAttack","overOrUnderDefence","trueFormDefence","homeTenGameAvg","awayTenGameAvg","pointsDiff10","last10WeightingHome","last10WeightingAway","clinicalRating","clinicalScore","homeTeamHomePositionRaw","awayTeamAwayPositionRaw","homeRawPosition","awayRawPosition","AttacksHome","AttacksAverage","teamComparisonScore","homeGoalDiff","awayGoalDiff","goalsDifferential","goalCalcHomeOnly","goalCalcAwayOnly","goalCalcHomeShortTerm","goalCalcAwayShortTerm","goalCalcHomeShortAndLongTerm","goalCalcAwayShortAndLongTerm","factorOneHome","factorOneAway","scoreDiff","homeComparisonWeighting","abs","awayComparisonWeighting","difference","rawFinalHomeGoalsAdjusted","rawFinalAwayGoalsAdjusted","round","prediction","XGdifferentialValueRaw","includeInMultis","XGdifferentialValue","winner","outcome","predictionOutcome","doubleChancePredictionOutcome","total","parseInt","total2","getSuccessMeasure","fixtures","sumProfit","investment","exactScores","successCount","profit","netProfit","exactScore","operand","ROI","exactScoreHitRate","successRate","allTipsSorted","price","combinations","gamesInExotic","exoticStake","exoticString","testBool","resultValue","newArray","bestBets","longShotTips","XGDiffTips","exoticArray","bttsArray","accumulatedOdds","predictions","array","tip","indexOf","push","rawOdds","renderTips","getScorePrediction","day","mocked","mock","Promise","all","map","goalsA","goalsB","unroundedGoalsA","unroundedGoalsB","fractionHome","predictionObject","odds","comparisonScore","rawComparisonScore","goalDifferential","experimentalCalc","fractionAway","sortByCalcA","sortByCalcB","homeDoubleChance","longShotPredictionObject","decimalOdds","doubleChanceOutcome","awayDoubleChance","getCoverBetMaxReturns","XGPredictionObject","otherTeam","Fixture","getAccumulatorPrice","priceArray","minAccSize","stake","perms","getUniquePermutations","j","arr","permLength","permutations","newArr","slice","splice","twoDimArrayUnion","arr1","arr2","duplicate","k","NewlineText","split","str","bttsOutcome","toggle","display","getLastGameResult","five","six","ten","gameStats","time","homeFiveGameAverage","homeSixGameAverage","homeTenGameAverage","awayFiveGameAverage","awaySixGameAverage","awayTenGameAverage","homeFormTrend","awayFormTrend","homeLastGame","awayLastGame","formDataHome","Last5","AverageGoals","AverageConceeded","AverageXG","AverageXGConceded","LeaguePosition","Last5PPG","PPG","formDataAway","leagueName","homeTeamHomePosition","awayTeamAwayPosition","gameCount","rawPosition","GetDivider","fixture","matchStatus","isPrediction","drawOdds","renderLeagueName","renderTable","leagueIndex","SingleFixture","pointsAverageDiffBool","pointsAverageDiff","createStatsDiv","homeBadge","awayBadge","newText","List","StyledTableCell2","paddingTop","paddingBottom","LeagueTable","rows","Teams","Position","Name","Played","Wins","Draws","Losses","For","Against","GoalDifference","Points","Form","Key","getTopScorersTeam","ID","GamesPlayed","LeagueID","marginTop","marginBottom","seasonAVG_home","seasonAVG_away","seasonBTTSPercentage","seasonOver05Percentage_overall","seasonOver15Percentage_overall","seasonOver25Percentage_overall","seasonOver35Percentage_overall","seasonOver45Percentage_overall","over75CornersPercentage_overall","over85CornersPercentage_overall","over95CornersPercentage_overall","over105CornersPercentage_overall","over115CornersPercentage_overall","over125CornersPercentage_overall","cornersAVG_overall","cardsAVG_overall","top_scorers","known_as","club_team_id","goals_overall","fixtureResponse","fixtureArray","oddslib","require","config","league","leagueID","leagueInstance","lastFiveFormHome","lastFiveFormAway","lastSixFormHome","lastSixFormAway","lastTenFormHome","lastTenFormAway","formRunHome","formRunAway","leagueGames","leagueArray","leagueIdArray","toLocaleDateString","currentDay","month","year","tomorrowsDate","setDate","tomorrowDay","tomorrowMonth","tomorrowYear","yesterdaysDate","yesterdayDay","yesterdayMonth","yesterdayYear","d","getDay","saturdayDay","saturdayMonth","saturdayYear","historicDate","historicDay","historicMonth","historicYear","saturday","historic","yesterday","today","tomorrow","tableArray","generateTables","currentLeagueId","specific_tables","groups","league_table","all_matches_table_overall","currentTeam","cleanName","matchesPlayed","seasonWins_overall","seasonDraws_overall","seasonLosses_overall","seasonGoals","seasonConceded_home","seasonConceded_away","seasonGoalDifference","table","rawForm","wdl_record","replace","toUpperCase","Array","from","leagueStatistics","stats","statistics","game_week","createFixture","mockBool","roundedHomeOdds","roundedAwayOdds","homeFraction","to","precision","awayFraction","error","bttsOdds","roundedBTTSOdds","homeTeamWinsPercentage","homeTeamLossesPercentage","homeTeamDrawsPercentage","awayTeamWinsPercentage","awayTeamLossesPercentage","awayTeamDrawsPercentage","generateFixtures","radioState","url","method","headers","Accept","storedForm","formArray","isFormStored","isStoredLocally","height","fill","orderedLeagues","element","leaguePositions","leagues","x","string","stringHome","all_matches_table_home","stringAway","all_matches_table_away","position","homeFormName","awayFormName","homeSeasonWinPercentage","seasonWins","awaySeasonWinPercentage","homeSeasonLossPercentage","seasonLosses_home","awaySeasonLossPercentage","seasonLosses_away","homeSeasonDrawPercentage","seasonDraws","awaySeasonDrawPercentage","homeSeasonMatchesPlayed","awaySeasonMatchesPlayed","ppg_overall","filter","competition_id","getPrefix","teamPositionPrefix","previousLeagueName","toLocaleString","hour","minute","odds_ft_1","odds_ft_2","odds_ft_x","odds_doublechance_1x","odds_doublechance_x2","homeID","awayID","homeTeamInfo","awayTeamInfo","homeTeaminLeague","awayTeaminLeague","teamPositionHome","teamPositionHomeTable","teamPositionAwayTable","homeTeamWinPercentageHome","awayTeamWinPercentageAway","homeTeamLossPercentageHome","awayTeamLossPercentageAway","homeTeamDrawPercentageHome","awayTeamDrawPercentageAway","teamPositionAway","homePrefix","homePrefixHomeTable","awayPrefix","awayPrefixAwayTable","homeSeasonPPG","awaySeasonPPG","homeTeaminHomeLeague","awayTeaminAwayLeague","homeFormString5","additional_info","formRun_overall","awayFormString5","homeFormString6","awayFormString6","homeFormString10","awayFormString10","homeFormRun","formRun_home","awayFormRun","formRun_away","xg_for_avg_overall","xg_for_avg_home","seasonScoredNum_overall","seasonScoredAVG_home","seasonMatchesPlayed_home","seasonMatchesPlayed_away","seasonConcededNum_overall","seasonConcededAVG_home","xg_against_avg_overall","xg_against_avg_home","seasonCSPercentage_home","possessionAVG_overall","possessionAVG_home","shotsOnTargetAVG_overall","shotsOnTargetAVG_home","dangerous_attacks_avg_overall","seasonPPG_home","attacks_avg_home","AttacksAway","attacks_avg_away","dangerous_attacks_avg_home","homeAttackAdvantage","homeDefenceAdvantage","seasonBTTSPercentage_home","seasonGoalDifference_overall","seasonGoalDifference_home","seasonBTTSPercentage_overall","cardsTotal_overall","scoredBothHalvesPercentage_overall","xg_for_avg_away","seasonScoredAVG_away","seasonConcededAVG_away","xg_against_avg_away","seasonCSPercentage_away","possessionAVG_away","shotsOnTargetAVG_away","seasonPPG_away","dangerous_attacks_avg_away","seasonBTTSPercentage_away","seasonGoalDifference_away","home_image","away_image","homePpg","home_ppg","homeFormColour","awayPpg","away_ppg","awayFormColour","expectedGoalsHomeToDate","team_a_xg_prematch","expectedGoalsAwayToDate","team_b_xg_prematch","JSON","stringify","selectedOption","fixtureList","availableLeagues","getHighestScoringTeams","teamsList","top_fixtures","country","avg_potential","getMatchTime","teamCountry","timestamp","finalArray","bestO25Bets","sortedArray","getLowestScoringTeams","bestU25Bets","unixTime","leagueList","mapOrder","order","key","A","B","season","leagueOrder","teamList","reactDom","App","href","target","rel","TwitterShareButton","boxShadow","TwitterIcon","size","FacebookShareButton","quote","FacebookIcon","RedditShareButton","RedditIcon","WhatsappShareButton","separator","WhatsappIcon","TelegramShareButton","TelegramIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.ab6a027f.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n      <h1 className=\"HeaderContainer\">XG Tipping</h1>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nexport function Button(props) {\n  return (\n    <div id=\"Button\">\n      <button data-cy={props.text} variant=\"primary\" type=\"button\" onClick={props.onClickEvent} className={props.className}>\n        {props.text}\n      </button>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nexport var selectedOdds = \"Fractional\";\n\n\nexport class OddsRadio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOdds: this.props.value,\n    };\n  }\n\n  handleOptionChange = () => {\n    this.setState({\n      selectedOdds: this.props.value,\n    });\n    selectedOdds = this.state.selectedOdds;\n  };\n\n  render() {\n    return (\n      <section className=\"dark2\">\n        <div className={this.props.className}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"odds\"\n              checked={this.state.checked}\n              onChange={this.handleOptionChange}\n              data-cy={this.props.value}\n            />\n            <span className=\"design\"></span>\n            <span className=\"text\">{this.props.value} odds</span>\n          </label>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default OddsRadio;","import KofiButton from \"kofi-button\"\n\nexport const StyledKofiButton = () => {\n  return (\n    <KofiButton className=\"kofi-button\" color=\"#030061\" title=\"Tip\" kofiID=\"H2H0AX25Z\" width=\"250px\"/>\n  )\n}","export async function applyColour(value) {\n  let colour;\n  switch (true) {\n    case value < 0.49:\n      colour = \"#CD5C5C\";\n      break;\n    case value >= 0.5 && value <= 1:\n      colour = \"#F08080\";\n      break;\n    case value >= 1.01 && value <= 1.25:\n      colour = \"#FFA07A\";\n      break;\n    case value >= 1.26 && value <= 1.5:\n      colour = \"#FFFFE0\";\n      break;\n    case value >= 1.51 && value <= 2:\n      colour = \"#CFDBC5\";\n      break;\n    case value >= 2.01 && value <= 2.5:\n      colour = \"#8AA37B\";\n      break;\n    case value >= 2.51 && value <= 3:\n      colour = \"#3F6826\";\n      break;\n    default:\n      colour = \"white\";\n      break;\n  }\n  return colour;\n}\n\nexport async function getForm(match) {\n  const teams = [match.homeId, match.awayId];\n  const fixtureForm = [];\n\n  for (let i = 0; i < teams.length; i++) {\n    const team = teams[i];\n\n    let response = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}form/${team}`\n    );\n    await response.json().then((formData) => {\n      console.log(formData.data[0].season_format)\n      fixtureForm[i] = formData;\n      console.log(fixtureForm[i])\n    });\n  }\n  return fixtureForm;\n}\n","import React from \"react\";\n\nexport function CreateBadge(props) {\n  return (\n    <img\n      src={`https://cdn.footystats.org/img/${props.image}`}\n      className={props.ClassName}\n      alt={props.alt}\n      flex-shrink={props.flexShrink}\n    />\n  );\n}\n","import React, { Component } from \"react\";\nimport EscapeOutside from \"react-escape-outside\";\n\nclass Collapsable extends Component {\n  state = { isOpen: false };\n\n  handleOnClick = () => {\n    this.setState((prevState) => ({\n      isOpen: !prevState.isOpen,\n    }));\n  };\n\n  render() {\n    return (\n      <div style={this.props.style}>\n        <button className={this.props.className} onClick={this.handleOnClick}>{this.props.buttonText}</button>\n        {this.state.isOpen && (\n          <EscapeOutside className=\"Collapsable\">\n            {this.props.text}\n          </EscapeOutside>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Collapsable;\n","import React, { Fragment } from \"react\";\n\nfunction Stats(props) {\n  function styleForm(formIndicator) {\n    let className;\n    if (formIndicator === \"W\") {\n      className = \"win\";\n    } else if (formIndicator === \"D\") {\n      className = \"draw\";\n    } else if (formIndicator === \"L\") {\n      className = \"loss\";\n    }\n    return className;\n  }\n\n  if (props.formRun) {\n    return (\n      <Fragment>\n        <ul className={props.className} style={props.style}>\n          <li className=\"FormHeader\">All Form (most recent on right)</li>\n          <li key={`last5`} className=\"Form\">\n            <span className={styleForm(props.last5[0])}>{props.last5[0]}</span>\n            <span className={styleForm(props.last5[1])}>{props.last5[1]}</span>\n            <span className={styleForm(props.last5[2])}>{props.last5[2]}</span>\n            <span className={styleForm(props.last5[3])}>{props.last5[3]}</span>\n            <span className={styleForm(props.last5[4])}>{props.last5[4]}</span>\n          </li>\n          <li className=\"FormHeader\">\n            {props.homeOrAway} form (most recent on right)\n          </li>\n          <li key={`last5${props.homeOrAway}`} className=\"FormHomeOrAway\">\n            <span className={styleForm(props.formRun[0])}>\n              {props.formRun[0]}\n            </span>\n            <span className={styleForm(props.formRun[1])}>\n              {props.formRun[1]}\n            </span>\n            <span className={styleForm(props.formRun[2])}>\n              {props.formRun[2]}\n            </span>\n            <span className={styleForm(props.formRun[3])}>\n              {props.formRun[3]}\n            </span>\n            <span className={styleForm(props.formRun[4])}>\n              {props.formRun[4]}\n            </span>\n          </li>\n          <li\n            key=\"TeamScored\"\n            className=\"TeamScored\"\n            data-cy={props.name + \"teamScored\"}\n          >\n            {`Avg goals scored - ${props.goals}`}\n          </li>\n          <li\n            key=\"TeamConceeded\"\n            className=\"TeamConceeded\"\n            data-cy={props.name + \"teamConceded\"}\n          >\n            {`Avg goals conceeded - ${props.conceeded}`}\n          </li>\n          <li\n            key=\"TeamPossession\"\n            className=\"TeamPossession\"\n            data-cy={props.name + \"teamPossession\"}\n          >\n            {`Avg possession - ${props.possession}%`}\n          </li>\n          <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name + \"teamXG\"}>\n            {`Avg XG - ${props.XG}`}\n          </li>\n          <li\n            key=\"TeamXGConceded\"\n            className=\"TeamXGConceded\"\n            data-cy={props.name + \"teamXGConceded\"}\n          >\n            {`Avg XG conceded - ${props.XGConceded}`}\n          </li>\n          <li\n            key=\"goalDifference\"\n            className=\"goalDifference\"\n            data-cy={props.name + \"goalDifference\"}\n          >\n            {`Goal difference : `}\n            <span>{props.goalDifference}</span>\n          </li>\n          <li\n            key=\"goalDifferenceHorA\"\n            className=\"goalDifferenceHorA\"\n            data-cy={props.name + \"goalDifference\"}\n          >\n            {`Goal difference ${props.homeOrAway} : ${props.goalDifferenceHomeOrAway}`}\n          </li>\n          <li\n            key=\"AverageSOT\"\n            className=\"AverageSOT\"\n            data-cy={props.name + \"averageSOT\"}\n          >\n            {`Avg shots on target - ${props.sot}`}\n          </li>\n          <li\n            key=\"DangerousAttacks\"\n            className=\"DangerousAttacks\"\n            data-cy={props.name + \"dangerousAttacks\"}\n          >\n            {`Avg dangerous attacks - ${props.dangerousAttacks}`}\n          </li>\n          <li\n            key=\"LeaguePosition\"\n            className=\"LeaguePosition\"\n            data-cy={props.name + \"leaguePosition\"}\n          >\n            {`League position - ${props.leaguePosition}`}\n          </li>\n\n          <li\n            key=\"LeaguePositionHomeOrAway\"\n            className=\"LeaguePositionHomeOrAway\"\n            data-cy={props.name + \"LeaguePositionHomeOrAway\"}\n          >\n            {`Position (${props.homeOrAway} only) - ${props.homeOrAwayLeaguePosition}`}\n          </li>\n          <li\n            key=\"WinPercentage\"\n            className=\"WinPercentage\"\n            data-cy={props.name + \"WinPercentage\"}\n          >\n            {`${props.homeOrAway} wins - ${props.winPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"DrawPercentage\"\n            className=\"DrawPercentage\"\n            data-cy={props.name + \"DrawPercentage\"}\n          >\n            {`${props.homeOrAway} draws - ${props.drawPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"LossPercentage\"\n            className=\"LossPercentage\"\n            data-cy={props.name + \"LossPercentage\"}\n          >\n            {`${props.homeOrAway} losses - ${props.lossPercentage.toFixed(1)}%`}\n          </li>\n          <li key=\"PPG\" className=\"PPG\" data-cy={props.name + \"PPG\"}>\n            {`Season PPG - ${props.ppg}`}\n          </li>\n          <li\n            key=\"FormTrend10a\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 10 PPG: ${props.formTrend[0]}`}\n          </li>\n          <li\n            key=\"FormTrend10b\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 6 PPG: ${props.formTrend[1]}`}\n          </li>\n          <li\n            key=\"FormTrend10c\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 5 PPG: ${props.formTrend[2]}.`}\n          </li>\n          <li\n            key=\"BttsPercentage\"\n            className=\"BttsPercentage\"\n            data-cy={props.name + \"BttsPercentage\"}\n          >\n            {`BTTS: ${props.BttsPercentage}%`}\n          </li>\n          <li\n            key=\"BttsPercentageHomeOrAway\"\n            className=\"BttsPercentageHomeOrAway\"\n            data-cy={props.name + \"BttsPercentageHomeOrAway\"}\n          >\n            {`BTTS ${props.homeOrAway}: ${props.BttsPercentageHomeOrAway}%`}\n          </li>\n          <li\n            key=\"CardsTotal\"\n            className=\"CardsTotal\"\n            data-cy={props.name + \"CardsTotal\"}\n          >\n            {`Cards total: ${props.CardsTotal}`}\n          </li>\n          <li\n            key=\"CornersAverage\"\n            className=\"CornersAverage\"\n            data-cy={props.name + \"CornersAverage\"}\n          >\n            {`Corners average: ${props.CornersAverage}`}\n          </li>\n          <li\n            key=\"ScoredBothHalvesPercentage\"\n            className=\"ScoredBothHalvesPercentage\"\n            data-cy={props.name + \"ScoredBothHalvesPercentage\"}\n          >\n            {`Scored both halves: ${props.ScoredBothHalvesPercentage}%`}\n          </li>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  } else {\n    return (\n      <Fragment>\n        <ul className={props.className} style={props.style}>\n          <li className=\"FormHeader\">Form (most recent on right)</li>\n          <li key=\"last5\">\n            <span className={styleForm(props.last5[0])}>{props.last5[0]}</span>\n            <span className={styleForm(props.last5[1])}>{props.last5[1]}</span>\n            <span className={styleForm(props.last5[2])}>{props.last5[2]}</span>\n            <span className={styleForm(props.last5[3])}>{props.last5[3]}</span>\n            <span className={styleForm(props.last5[4])}>{props.last5[4]}</span>\n          </li>\n          <li\n            key=\"TeamScored\"\n            className=\"TeamScored\"\n            data-cy={props.name + \"teamScored\"}\n          >\n            {`Avg goals scored - ${props.goals}`}\n          </li>\n          <li\n            key=\"TeamConceeded\"\n            className=\"TeamConceeded\"\n            data-cy={props.name + \"teamConceded\"}\n          >\n            {`Avg goals conceeded - ${props.conceeded}`}\n          </li>\n          <li\n            key=\"TeamPossession\"\n            className=\"TeamPossession\"\n            data-cy={props.name + \"teamPossession\"}\n          >\n            {`Avg possession - ${props.possession}%`}\n          </li>\n          <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name + \"teamXG\"}>\n            {`Avg XG - ${props.XG}`}\n          </li>\n          <li\n            key=\"TeamXGConceded\"\n            className=\"TeamXGConceded\"\n            data-cy={props.name + \"teamXGConceded\"}\n          >\n            {`Avg XG conceded - ${props.XGConceded}`}\n          </li>\n          <li\n            key=\"AverageSOT\"\n            className=\"AverageSOT\"\n            data-cy={props.name + \"averageSOT\"}\n          >\n            {`Avg shots on target - ${props.sot}`}\n          </li>\n          <li\n            key=\"DangerousAttacks\"\n            className=\"DangerousAttacks\"\n            data-cy={props.name + \"dangerousAttacks\"}\n          >\n            {`Avg dangerous attacks - ${props.dangerousAttacks}`}\n          </li>\n          <li\n            key=\"LeaguePosition\"\n            className=\"LeaguePosition\"\n            data-cy={props.name + \"leaguePosition\"}\n          >\n            {`League position - ${props.leaguePosition}`}\n          </li>\n\n          <li\n            key=\"LeaguePositionHomeOrAway\"\n            className=\"LeaguePositionHomeOrAway\"\n            data-cy={props.name + \"LeaguePositionHomeOrAway\"}\n          >\n            {`Position (${props.homeOrAway} only) - ${props.homeOrAwayLeaguePosition}`}\n          </li>\n          <li\n            key=\"WinPercentage\"\n            className=\"WinPercentage\"\n            data-cy={props.name + \"WinPercentage\"}\n          >\n            {`${props.homeOrAway} wins - ${props.winPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"DrawPercentage\"\n            className=\"DrawPercentage\"\n            data-cy={props.name + \"DrawPercentage\"}\n          >\n            {`${props.homeOrAway} draws - ${props.drawPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"LossPercentage\"\n            className=\"LossPercentage\"\n            data-cy={props.name + \"LossPercentage\"}\n          >\n            {`${props.homeOrAway} losses - ${props.lossPercentage.toFixed(1)}%`}\n          </li>\n          <li key=\"PPG\" className=\"PPG\" data-cy={props.name + \"PPG\"}>\n            {`Season PPG - ${props.ppg}`}\n          </li>\n          <li\n            key=\"FormTrend10a\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 10 PPG: ${props.formTrend[0]}`}\n          </li>\n          <li\n            key=\"FormTrend10b\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 6 PPG: ${props.formTrend[1]}`}\n          </li>\n          <li\n            key=\"FormTrend10c\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 5 PPG: ${props.formTrend[2]}.`}\n          </li>\n          <li\n            key=\"BttsPercentage\"\n            className=\"BttsPercentage\"\n            data-cy={props.name + \"BttsPercentage\"}\n          >\n            {`BTTS: ${props.BttsPercentage}%`}\n          </li>\n          <li\n            key=\"BttsPercentageHomeOrAway\"\n            className=\"BttsPercentageHomeOrAway\"\n            data-cy={props.name + \"BttsPercentageHomeOrAway\"}\n          >\n            {`BTTS ${props.homeOrAway}: ${props.BttsPercentageHomeOrAway}%`}\n          </li>\n          <li\n            key=\"CardsTotal\"\n            className=\"CardsTotal\"\n            data-cy={props.name + \"CardsTotal\"}\n          >\n            {`Cards total: ${props.CardsTotal}`}\n          </li>\n          <li\n            key=\"CornersAverage\"\n            className=\"CornersAverage\"\n            data-cy={props.name + \"CornersAverage\"}\n          >\n            {`Corners average: ${props.CornersAverage}`}\n          </li>\n          <li\n            key=\"ScoredBothHalvesPercentage\"\n            className=\"ScoredBothHalvesPercentage\"\n            data-cy={props.name + \"ScoredBothHalvesPercentage\"}\n          >\n            {`Scored both halves: ${props.ScoredBothHalvesPercentage}%`}\n          </li>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Stats;\n","import React from \"react\";\n\nfunction Div(props) {\n  return (\n    <div id={props.id} onClick={props.onClick} style={props.style} className={props.className}>{props.text}</div>\n  );\n}\n\nexport default Div;\n","import React from \"react\";\n\nfunction HeadToHead(props) {\n\n  return (\n    <ul className={props.className} style={props.style}>\n      <li key=\"Stadium\" className=\"Stadium\" data-cy={props.name + \"Stadium\"}>\n        {`Venue - ${props.stadium}`}\n      </li>\n      <li key=\"lastGameDetail\" className=\"LastGameDetail\" data-cy={props.name + \"Last\"}>\n        {`Last meeting - ${props.lastGameStadiumName} ${props.lastGameDate}`}\n      </li>\n      <li key=\"lastGame\" className=\"LastGame\" data-cy={props.name + \"LastGame\"}>\n        {`${props.lastGameHomeTeam} ${props.lastGameHomeGoals} - ${props.lastGameAwayGoals} ${props.lastGameAwayTeam}`}\n      </li>\n      <li key=\"secondToLastGameDetail\" className=\"secondToLastGameDetail\" data-cy={props.name + \"secondToLast\"}>\n        {`Second to last meeting - ${props.secondToLastGameStadiumName} ${props.secondToLastGameDate}`}\n      </li>\n      <li key=\"secondToLastGame\" className=\"LastGame\" data-cy={props.name + \"LastGame\"}>\n        {`${props.secondToLastGameHomeTeam} ${props.secondToLastGameHomeGoals} - ${props.secondToLastGameAwayGoals} ${props.secondToLastGameAwayTeam}`}\n      </li>\n      <li key=\"h2h\" className=\"h2h\" data-cy={props.name + \"h2h\"}>\n        {`Matches played: ${props.matches}`}\n      </li>\n      <li key=\"homeWins\" className=\"homeWins\" data-cy={props.name + \"homeWins\"}>\n        {`${props.homeTeam} wins: ${props.homeWins}`}\n      </li>\n      <li key=\"awayWins\" className=\"awayWins\" data-cy={props.name + \"awayWins\"}>\n        {`${props.awayTeam} wins: ${props.awayWins}`}\n      </li>\n      <li key=\"draws\" className=\"draws\" data-cy={props.name + \"draws\"}>\n        {`Draws: ${props.draws}`}\n      </li>\n      <li key=\"averageGoals\" className=\"averageGoals\" data-cy={props.name + \"averageGoals\"}>\n        {`Average goals in fixture: ${props.averageGoals}`}\n      </li>\n      <li key=\"bestHomeOdds\" className=\"bestHomeOdds\" data-cy={props.name + \"bestHomeOdds\"}>\n        {`Best oods for home win @: ${props.bestHomeOdds}`}\n      </li>\n      <li key=\"bestAwayOdds\" className=\"bestAwayOdds\" data-cy={props.name + \"bestAwayOdds\"}>\n        {`Best oods for away win @: ${props.bestAwayOdds}`}\n      </li>\n    </ul>\n  );\n}\n\nexport default HeadToHead;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#030052\",\n    color: theme.palette.common.white,\n    padding: 10,\n    textAlign: \"center\",\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    border: \"none\",\n    margin: \"none\"\n  },\n  body: {\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    padding: 10,\n    color: \"white\",\n    border: \"none\",\n    margin: \"none\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#030061\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#030052\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\n\nexport default function CustomizedTables(props) {\n\n\n  return (\n    <TableContainer component={Paper} className=\"StatsTable\">\n      <Table aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Stat</StyledTableCell>\n            <StyledTableCell>H2H history</StyledTableCell>\n            <StyledTableCell>Odds (yes)</StyledTableCell>\n            <StyledTableCell>Odds (no)</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        <StyledTableRow key=\"O05\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 0.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o05Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o05Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u05Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O15\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 1.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o15Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o15Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u15Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O25\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 2.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o25Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o25Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u25Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O35\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 3.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o35Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o35Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u35Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"BTTS\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              BTTS %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.BTTSStat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSOdds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSOddsNo}</StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport HeadToHead from \"../components/HeadToHead\";\nimport { Fragment } from \"react\";\nimport CustomizedTables from \"../components/Table\";\n\nexport async function getTeamStats(id, home, away) {\n  console.log(\"EXECUTED\");\n  let identifier = id;\n  let bestHomeOdds;\n  let bestHomeOddsProvider;\n  let bestAwayOdds;\n  let bestAwayOddsProvider\n  \n  let match = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}match/${identifier}`\n  );\n   await match.json().then(async (match) => {\n    console.log(match.data)\n    let matchArr = match.data.h2h.previous_matches_ids\n    let previousMatchDetails;\n    let secondToPreviousMatchDetails;\n\n    let oddsComparisonHomeArray = []\n    let oddsComparisonAwayArray = []\n\n    if(match.data.odds_comparison){\n    oddsComparisonHomeArray = match.data.odds_comparison[\"FT Result\"][1];\n    oddsComparisonAwayArray = match.data.odds_comparison[\"FT Result\"][2];\n\n    let sortedHomeOdds = Object.entries(oddsComparisonHomeArray).sort((a, b) => b[1] - a[1])\n    let sortedAwayOdds = Object.entries(oddsComparisonAwayArray).sort((a, b) => b[1] - a[1])\n\n    bestHomeOddsProvider = sortedHomeOdds[0][0]\n    bestHomeOdds = sortedHomeOdds[0][1]\n    bestAwayOddsProvider = sortedAwayOdds[0][0]\n    bestAwayOdds = sortedAwayOdds[0][1]\n    } else {\n      bestHomeOddsProvider = \"N/A\"\n      bestHomeOdds = \"N/A\"\n      bestAwayOddsProvider = \"N/A\"\n      bestAwayOdds = \"N/A\"\n    }\n\n    if(match.data.h2h.previous_matches_results.totalMatches > 0){\n      matchArr.sort((a, b) => b.date_unix - a.date_unix);\n      let lastMatch = matchArr[0].id\n      let secondToLastMatch = matchArr[1].id\n\n      let previousMatch = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}match/${lastMatch}`\n      );\n      let dateObject;\n      let date;\n      let date2;\n      await previousMatch.json().then(async (game) => {\n        previousMatchDetails = game.data\n        console.log(previousMatchDetails)\n        const unixTimestamp = previousMatchDetails.date_unix;\n        const milliseconds = unixTimestamp * 1000;\n        dateObject = new Date(milliseconds);\n         date = `${dateObject.getDate()}/${dateObject.getMonth()+1}/${dateObject.getFullYear()}`\n\n         let secondToPreviousMatch = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}match/${secondToLastMatch}`\n        );\n        let dateObject2;\n        await secondToPreviousMatch.json().then((game) => {\n          secondToPreviousMatchDetails = game.data\n          console.log(secondToPreviousMatchDetails)\n          const unixTimestamp = secondToPreviousMatchDetails.date_unix;\n          const milliseconds = unixTimestamp * 1000;\n          dateObject2 = new Date(milliseconds);\n          date2 = `${dateObject2.getDate()}/${dateObject2.getMonth()+1}/${dateObject2.getFullYear()}`\n        })\n  \n      })\n\n      ReactDOM.render(\n        <Fragment>\n          <h3>Fixture history</h3>\n          <HeadToHead\n            className={\"PreviousMatchStats\"}\n            homeTeam={home}\n            awayTeam={away}\n            stadium={match.data.stadium_name}\n            matches={match.data.h2h.previous_matches_results.totalMatches}\n            homeWins={match.data.h2h.previous_matches_results.team_a_wins}\n            awayWins={match.data.h2h.previous_matches_results.team_b_wins}\n            draws={match.data.h2h.previous_matches_results.draw}\n            averageGoals={match.data.h2h.betting_stats.avg_goals}\n            bestHomeOdds = {`${bestHomeOddsProvider} - ${bestHomeOdds}`}\n            bestAwayOdds = {`${bestAwayOddsProvider} - ${bestAwayOdds}`}\n            lastGameStadiumName={previousMatchDetails.stadium_name}\n            lastGameHomeGoals={previousMatchDetails.homeGoalCount}\n            lastGameAwayGoals={previousMatchDetails.awayGoalCount}\n            lastGameHomeTeam={previousMatchDetails.home_name}\n            lastGameAwayTeam={previousMatchDetails.away_name}\n            lastGameDate={date}\n            secondToLastGameStadiumName={secondToPreviousMatchDetails.stadium_name}\n            secondToLastGameHomeGoals={secondToPreviousMatchDetails.homeGoalCount}\n            secondToLastGameAwayGoals={secondToPreviousMatchDetails.awayGoalCount}\n            secondToLastGameHomeTeam={secondToPreviousMatchDetails.home_name}\n            secondToLastGameAwayTeam={secondToPreviousMatchDetails.away_name}\n            secondToLastGameDate={date2}\n          ></HeadToHead>\n          <CustomizedTables\n            o05Stat={match.data.h2h.betting_stats.over05Percentage}\n            o15Stat={match.data.h2h.betting_stats.over15Percentage}\n            o15Forecast={match.data.o15_potential}\n            o05Odds={match.data.odds_ft_over05}\n            u05Odds={match.data.odds_ft_under05}\n            o15Odds={match.data.odds_ft_over15}\n            u15Odds={match.data.odds_ft_under15}\n            o25Stat={match.data.h2h.betting_stats.over25Percentage}\n            o25Forecast={match.data.o25_potential}\n            o25Odds={match.data.odds_ft_over25}\n            u25Odds={match.data.odds_ft_under25}\n            o35Stat={match.data.h2h.betting_stats.over35Percentage}\n            o35Forecast={match.data.o35_potential}\n            o35Odds={match.data.odds_ft_over35}\n            u35Odds={match.data.odds_ft_under35}\n            BTTSStat={match.data.h2h.betting_stats.bttsPercentage}\n            BTTSForecast={match.data.btts_potential}\n            BTTSOdds={match.data.odds_btts_yes}\n            BTTSOddsNo={match.data.odds_btts_no}\n            CornersStat={\"–\"}\n            CornersForecast={match.data.corners_potential}\n            CornersOdds={match.data.odds_corners_over_105}\n          />\n        </Fragment>,\n        document.getElementById(`H2HStats${identifier}`)\n      );\n    } else {\n      ReactDOM.render(\n        <Fragment>\n          <h3>Fixture history</h3>\n          <HeadToHead\n            className={\"PreviousMatchStats\"}\n            homeTeam={home}\n            awayTeam={away}\n            stadium={match.data.stadium_name}\n            matches={match.data.h2h.previous_matches_results.totalMatches}\n            homeWins={match.data.h2h.previous_matches_results.team_a_wins}\n            awayWins={match.data.h2h.previous_matches_results.team_b_wins}\n            draws={match.data.h2h.previous_matches_results.draw}\n            averageGoals={match.data.h2h.betting_stats.avg_goals}\n            lastGameStadiumName=\"N/A\"\n            lastGameHomeGoals=\"previous\"\n            lastGameAwayGoals=\"match\"\n            lastGameHomeTeam=\"No\"\n            lastGameAwayTeam=\"data\"\n            lastGameDate=\"\"\n            secondToLastGameStadiumName=\"N/A\"\n            secondToLastGameHomeGoals=\"previous\"\n            secondToLastGameAwayGoals=\"match\"\n            secondToLastGameHomeTeam=\"No\"\n            secondToLastGameAwayTeam=\"data\"\n            secondToLastGameDate=\"\"\n          ></HeadToHead>\n          <CustomizedTables\n            o15Stat={match.data.h2h.betting_stats.over15Percentage}\n            o15Forecast={match.data.o15_potential}\n            o15Odds={match.data.odds_ft_over15}\n            o25Stat={match.data.h2h.betting_stats.over25Percentage}\n            o25Forecast={match.data.o25_potential}\n            o25Odds={match.data.odds_ft_over25}\n            BTTSStat={match.data.h2h.betting_stats.bttsPercentage}\n            BTTSForecast={match.data.btts_potential}\n            BTTSOdds={match.data.odds_btts_yes}\n            CornersStat={\"–\"}\n            CornersForecast={match.data.corners_potential}\n            CornersOdds={match.data.odds_corners_over_105}\n          />\n        </Fragment>,\n        document.getElementById(`H2HStats${identifier}`)\n      );\n    }\n\n\n  });\n}\n","import React, { Component, Fragment } from \"react\";\nimport { getNewTips } from \"../logic/getScorePredictions\"\nimport {allTips} from \"../logic/getScorePredictions\"\nexport var incrementValue = 3;\n\nexport var riskLevel = 10;\n\nclass Increment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      incrementValue,\n      riskLevel,\n      show: true,\n    };\n  }\n\n  IncrementItem = () => {\n    if(incrementValue > 1){\n    this.setState({ incrementValue: this.state.incrementValue - 1 });\n    this.setState({ riskLevel: this.state.riskLevel - 1 });\n    incrementValue = (this.state.incrementValue - 1);\n    riskLevel = this.state.riskLevel - 1;\n    }\n    getNewTips(allTips)\n  };\n  DecreaseItem = () => {\n    if(incrementValue > 0){\n      this.setState({ incrementValue: this.state.incrementValue + 1 });\n      this.setState({ riskLevel: this.state.riskLevel + 1 });\n      incrementValue = (this.state.incrementValue + 1);\n      riskLevel = this.state.riskLevel + 1;\n    }\n    getNewTips(allTips)\n  };\n\n  render() {\n    return (\n      <Fragment>\n          <button className=\"IncrementButton\" onClick={this.IncrementItem}>\n            -\n          </button>\n          <button className=\"DecrementButton\" onClick={this.DecreaseItem}>\n            +\n          </button>\n      </Fragment>\n\n    );\n  }\n}\n\nexport default Increment;\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { matches, diff } from \"./getFixtures\";\nimport { Fixture } from \"../components/Fixture\";\nimport Div from \"../components/Div\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { allForm } from \"../logic/getFixtures\";\nimport Increment from \"../components/Increment\";\nimport { incrementValue } from \"../components/Increment\";\nimport { getBTTSPotential } from \"../logic/getBTTSPotential\";\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nlet finalHomeGoals;\nlet finalAwayGoals;\nlet rawFinalHomeGoals;\nlet rawFinalAwayGoals;\nlet homeOdds;\nlet awayOdds;\nlet totalGoals = 0;\nlet totalGoals2 = 0;\nlet numberOfGames = 0;\nlet drawPredictions = 0;\nlet homePredictions = 0;\nlet awayPredictions = 0;\nlet allOutcomes = 0;\nlet homeOutcomes = 0;\nlet awayOutcomes = 0;\nlet winAmount = 0;\nlet lossAmount = 0;\nlet sumStatDAWin = 0;\nlet sumStatDALoss = 0;\nlet sumStatPossessionWin = 0;\nlet sumStatPossessionLoss = 0;\nlet sumStatSOTWin = 0;\nlet sumStatSOTLoss = 0;\nlet sumStatPPGLast10Win = 0;\nlet sumStatPPGLast10Loss = 0;\nlet sumOddsWin = 0;\nlet sumOddsLoss = 0;\nlet sumXGForWin = 0;\nlet sumXGForLoss = 0;\nlet sumXGAgainstWin = 0;\nlet sumXGAgainstLoss = 0;\nlet allWinOutcomes = 0;\nlet allLossOutcomes = 0;\nlet allDrawOutcomes = 0;\nlet winDAAverage;\nlet lossDAAverage;\nlet winOddsAverage;\nlet lossOddsAverage;\nlet winPossessionAverage;\nlet lossPossessionAverage;\nlet winLast10PPGAverage;\nlet lossLast10PPGAverage;\nlet winSOTAverage;\nlet lossSOTAverage;\nlet winXGForAverage;\nlet lossXGForAverage;\nlet winXGAgainstAverage;\nlet lossXGAgainstAverage;\n\nexport var renderPredictions;\n\nexport function getPointsFromLastX(lastX) {\n  let points = 0;\n  let pointsAddition;\n\n  lastX.forEach((game) => {\n    switch (true) {\n      case game === \"W\":\n        pointsAddition = 3;\n        break;\n      case game === \"D\":\n        pointsAddition = 1;\n        break;\n      case game === \"L\":\n        pointsAddition = 0;\n        break;\n      default:\n        break;\n    }\n\n    points = points + pointsAddition;\n  });\n  return points;\n}\n\nexport async function compareStat(statOne, statTwo) {\n  let stat1 = parseFloat(statOne);\n  let stat2 = parseFloat(statTwo);\n  let result;\n  let tooCloseToCall;\n  let gap;\n  let statOneNotZero = stat1 + 0.1;\n  let statTwoNotZero = stat2 + 0.1;\n\n  if (stat1 > stat2) {\n    gap = statOneNotZero / statTwoNotZero;\n  } else if (stat1 < stat2) {\n    gap = statTwoNotZero / statOneNotZero;\n  } else {\n    gap = 0;\n  }\n\n  if (gap >= 2) {\n    switch (true) {\n      case stat1 === stat2:\n        result = 0;\n        tooCloseToCall = 1;\n        break;\n      case stat1 > stat2:\n        result = 0.5;\n        tooCloseToCall = -0.4;\n        break;\n      case stat1 < stat2:\n        result = -0.5;\n        tooCloseToCall = -0.4;\n        break;\n      default:\n        break;\n    }\n  } else if (gap >= 1.6 && gap < 2) {\n    switch (true) {\n      case stat1 === stat2:\n        result = 0;\n        tooCloseToCall = 1;\n        break;\n      case stat1 > stat2:\n        result = 0.25;\n        tooCloseToCall = -0.15;\n        break;\n      case stat1 < stat2:\n        result = -0.25;\n        tooCloseToCall = -0.15;\n        break;\n      default:\n        break;\n    }\n  } else if (gap >= 1.3 && gap < 1.6) {\n    switch (true) {\n      case stat1 === stat2:\n        result = 0;\n        tooCloseToCall = 1;\n        break;\n      case stat1 > stat2:\n        result = 0.1;\n        tooCloseToCall = -0.1;\n        break;\n      case stat1 < stat2:\n        result = -0.1;\n        tooCloseToCall = -0.1;\n        break;\n      default:\n        break;\n    }\n  } else if (gap >= 1.1 && gap < 1.3) {\n    switch (true) {\n      case stat1 === stat2:\n        result = 0;\n        tooCloseToCall = 1;\n        break;\n      case stat1 > stat2:\n        result = 0.05;\n        tooCloseToCall = 0.1;\n        break;\n      case stat1 < stat2:\n        result = -0.05;\n        tooCloseToCall = 0.1;\n        break;\n      default:\n        break;\n    }\n  } else if (gap >= 1 && gap < 1.1) {\n    switch (true) {\n      case stat1 === stat2:\n        result = 0;\n        tooCloseToCall = 1;\n        break;\n      case stat1 > stat2:\n        result = 0.02;\n        tooCloseToCall = 0.5;\n        break;\n      case stat1 < stat2:\n        result = -0.02;\n        tooCloseToCall = 0.5;\n        break;\n      default:\n        break;\n    }\n  } else if (gap === 1) {\n    tooCloseToCall = 1;\n  } else {\n    result = 0;\n    tooCloseToCall = 0;\n  }\n\n  return [result, tooCloseToCall];\n}\n\nexport async function compareDefenceStat(statOne, statTwo) {\n  let stat1 = parseFloat(statOne);\n  let stat2 = parseFloat(statTwo);\n  let result;\n\n  switch (true) {\n    case stat1 === stat2:\n      result = 0;\n      break;\n    case stat1 > stat2:\n      result = 0.5;\n      break;\n    default:\n      result = 0;\n  }\n\n  return result;\n}\n\nexport async function getOverOrUnderAchievingResult(\n  index,\n  overUnderAchievingSum\n) {\n  let result;\n  let correction;\n\n  switch (true) {\n    case index === 0:\n      switch (true) {\n        case overUnderAchievingSum <= -1.2:\n          result = \"Overachieving drastically\";\n          correction = -0.4;\n          break;\n        case overUnderAchievingSum < -0.45 && overUnderAchievingSum > -1.2:\n          result = \"Overachieving\";\n          correction = -0.2;\n          break;\n        case overUnderAchievingSum < -0.1 && overUnderAchievingSum >= -0.45:\n          result = \"Overachieving slightly\";\n          correction = -0.1;\n          break;\n        case overUnderAchievingSum > 0.1 && overUnderAchievingSum <= 0.45:\n          result = \"Underachieving slightly\";\n          correction = 0.1;\n          break;\n        case overUnderAchievingSum > 0.45 && overUnderAchievingSum < 1.2:\n          result = \"Underachieving\";\n          correction = 0.2;\n          break;\n        case overUnderAchievingSum >= 1.2:\n          result = \"Underachieving drastically\";\n          correction = 0.4;\n          break;\n        default:\n          result = \"onPar\";\n          correction = 0;\n          break;\n      }\n\n      break;\n\n    case index === 1:\n      switch (true) {\n        case overUnderAchievingSum <= -0.9:\n          result = \"Overachieving drastically\";\n          correction = -0.4;\n          break;\n        case overUnderAchievingSum < -0.45 && overUnderAchievingSum > -0.9:\n          result = \"Overachieving\";\n          correction = -0.2;\n          break;\n        case overUnderAchievingSum < -0.1 && overUnderAchievingSum >= -0.45:\n          result = \"Overachieving slightly\";\n          correction = -0.1;\n          break;\n        case overUnderAchievingSum > 0.1 && overUnderAchievingSum <= 0.45:\n          result = \"Underachieving slightly\";\n          correction = 0.1;\n          break;\n        case overUnderAchievingSum > 0.45 && overUnderAchievingSum < 0.9:\n          result = \"Underachieving\";\n          correction = 0.2;\n          break;\n        case overUnderAchievingSum >= 0.9:\n          result = \"Underachieving drastically\";\n          correction = 0.4;\n          break;\n        default:\n          result = \"onPar\";\n          correction = 0;\n          break;\n      }\n\n      break;\n\n    case index === 2:\n      switch (true) {\n        case overUnderAchievingSum <= -1:\n          result = \"Overachieving drastically\";\n          correction = -0.4;\n          break;\n        case overUnderAchievingSum < -0.45 && overUnderAchievingSum > -1:\n          result = \"Overachieving\";\n          correction = -0.2;\n          break;\n        case overUnderAchievingSum < -0.2 && overUnderAchievingSum >= -0.45:\n          result = \"Overachieving slightly\";\n          correction = -0.1;\n          break;\n        case overUnderAchievingSum > 0.2 && overUnderAchievingSum <= 0.45:\n          result = \"Underachieving slightly\";\n          correction = 0.1;\n          break;\n        case overUnderAchievingSum > 0.45 && overUnderAchievingSum < 1:\n          result = \"Underachieving\";\n          correction = 0.2;\n          break;\n        case overUnderAchievingSum >= 1:\n          result = \"Underachieving drastically\";\n          correction = 0.4;\n          break;\n        default:\n          result = \"onPar\";\n          correction = 0;\n          break;\n      }\n\n      break;\n    default:\n      break;\n  }\n  return [result, correction];\n}\n\nexport async function getClinicalRating(form) {\n  let rating;\n  let score;\n  switch (true) {\n    case form.dangerousAttackConversion <= 15:\n      rating = \"excellent\";\n      score = 0.8;\n      break;\n\n    case form.dangerousAttackConversion > 15 &&\n      form.dangerousAttackConversion <= 20:\n      rating = \"great\";\n      score = 0.9;\n      break;\n\n    case form.dangerousAttackConversion > 20 &&\n      form.dangerousAttackConversion <= 25:\n      rating = \"very good\";\n      score = 0.95;\n      break;\n\n    case form.dangerousAttackConversion > 25 &&\n      form.dangerousAttackConversion <= 32.5:\n      rating = \"good\";\n      score = 0.98;\n      break;\n\n    case form.dangerousAttackConversion > 30 &&\n      form.dangerousAttackConversion <= 35:\n      rating = \"above average\";\n      score = 0.99;\n      break;\n\n    case form.dangerousAttackConversion > 35 &&\n      form.dangerousAttackConversion <= 40:\n      rating = \"average\";\n      score = 1;\n      break;\n\n    case form.dangerousAttackConversion > 40 &&\n      form.dangerousAttackConversion <= 45:\n      rating = \"below average\";\n      score = 1.01;\n      break;\n\n    case form.dangerousAttackConversion > 45 &&\n      form.dangerousAttackConversion <= 50:\n      rating = \"poor\";\n      score = 1.05;\n      break;\n\n    case form.dangerousAttackConversion > 50 &&\n      form.dangerousAttackConversion <= 55:\n      rating = \"very poor\";\n      score = 1.1;\n      break;\n\n    case form.dangerousAttackConversion > 55 &&\n      form.dangerousAttackConversion <= 60:\n      rating = \"terrible\";\n      score = 1.2;\n      break;\n\n    case form.dangerousAttackConversion > 60:\n      rating = \"awful\";\n      score = 1.3;\n      break;\n\n    default:\n      break;\n  }\n\n  return [rating, score];\n}\n\nexport async function getPointsDifferential(pointsHomeAvg, pointsAwayAvg) {\n  const differential = await diff(pointsHomeAvg, pointsAwayAvg);\n  return parseFloat(differential);\n}\n\nexport async function getPointWeighting(pointsDiff) {\n  let pointsDiffWeightingHome;\n  let pointsDiffWeightingAway;\n\n  switch (true) {\n    case pointsDiff >= 2.5:\n      pointsDiffWeightingHome = 0.6;\n      pointsDiffWeightingAway = -0.1;\n      break;\n    case pointsDiff >= 2 && pointsDiff < 2.5:\n      pointsDiffWeightingHome = 0.4;\n      pointsDiffWeightingAway = -0.1;\n      break;\n    case pointsDiff >= 1.5 && pointsDiff < 2:\n      pointsDiffWeightingHome = 0.3;\n      pointsDiffWeightingAway = -0.1;\n      break;\n    case pointsDiff >= 1 && pointsDiff < 1.5:\n      pointsDiffWeightingHome = 0.2;\n      pointsDiffWeightingAway = 0;\n      break;\n    case pointsDiff >= 0.5 && pointsDiff < 1:\n      pointsDiffWeightingHome = 0.1;\n      pointsDiffWeightingAway = 0;\n      break;\n    case pointsDiff > -0.5 && pointsDiff < 0.5:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n      break;\n    case pointsDiff <= -0.5 && pointsDiff > -1:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0.1;\n      break;\n    case pointsDiff <= -1 && pointsDiff > -1.5:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0.2;\n      break;\n    case pointsDiff <= -1.5 && pointsDiff > -2:\n      pointsDiffWeightingHome = -0.1;\n      pointsDiffWeightingAway = 0.3;\n      break;\n    case pointsDiff <= -2 && pointsDiff > -2.5:\n      pointsDiffWeightingHome = -0.1;\n      pointsDiffWeightingAway = 0.4;\n      break;\n    case pointsDiff <= -2.5:\n      pointsDiffWeightingHome = -0.1;\n      pointsDiffWeightingAway = 0.6;\n      break;\n    default:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n  }\n  return [pointsDiffWeightingHome, pointsDiffWeightingAway];\n}\n\nexport async function compareFormTrend(\n  threeGameAverage,\n  fiveGameAverage,\n  sixGameAverage,\n  tenGameAverage,\n  recentGoalDiff,\n  distantGoalDiff\n) {\n  let score;\n\n  if (fiveGameAverage > 2.5) {\n    switch (true) {\n      case fiveGameAverage > tenGameAverage:\n        score = 20;\n        break;\n      case fiveGameAverage === tenGameAverage:\n        score = 19;\n        break;\n      case fiveGameAverage < tenGameAverage:\n        score = 15;\n        break;\n      default:\n        break;\n    }\n  } else if (fiveGameAverage <= 2.5 && fiveGameAverage > 2) {\n    switch (true) {\n      case fiveGameAverage > tenGameAverage:\n        score = 17;\n        break;\n      case fiveGameAverage === tenGameAverage:\n        score = 16;\n        break;\n      case fiveGameAverage < tenGameAverage:\n        score = 14;\n        break;\n      default:\n        break;\n    }\n  } else if (fiveGameAverage <= 2 && fiveGameAverage > 1.5) {\n    switch (true) {\n      case fiveGameAverage > tenGameAverage:\n        score = 14;\n        break;\n      case fiveGameAverage === tenGameAverage:\n        score = 13;\n        break;\n      case fiveGameAverage < tenGameAverage:\n        score = 11;\n        break;\n      default:\n        break;\n    }\n    if (fiveGameAverage + 1 < tenGameAverage) {\n      score = score - 2;\n    }\n  } else if (fiveGameAverage <= 1.5 && fiveGameAverage > 1) {\n    switch (true) {\n      case fiveGameAverage > tenGameAverage:\n        score = 11;\n        break;\n      case fiveGameAverage === tenGameAverage:\n        score = 10;\n        break;\n      case fiveGameAverage < tenGameAverage:\n        score = 8;\n        break;\n      default:\n        break;\n    }\n    if (fiveGameAverage + 1 < tenGameAverage) {\n      score = score - 2;\n    }\n  } else if (fiveGameAverage <= 1 && fiveGameAverage > 0.5) {\n    switch (true) {\n      case fiveGameAverage > tenGameAverage:\n        score = 8;\n        break;\n      case fiveGameAverage === tenGameAverage:\n        score = 7;\n        break;\n      case fiveGameAverage < tenGameAverage:\n        score = 3;\n        break;\n      default:\n        break;\n    }\n    if (fiveGameAverage + 1 < tenGameAverage) {\n      score = score - 2;\n    }\n  } else if (fiveGameAverage <= 0.5) {\n    switch (true) {\n      case fiveGameAverage > tenGameAverage:\n        score = 3;\n        break;\n      case fiveGameAverage === tenGameAverage:\n        score = 2;\n        break;\n      case fiveGameAverage < tenGameAverage:\n        score = 1;\n        break;\n      default:\n        break;\n    }\n    // if (fiveGameAverage + 1 < tenGameAverage) {\n    //   score = 1;\n    // }\n  }\n\n  // if (fiveGameAverage > 1) {\n  //   if (\n  //     threeGameAverage >= sixGameAverage &&\n  //     sixGameAverage >= tenGameAverage\n  //   ) {\n  //     improving = true;\n  //   } else if (recentGoalDiff < distantGoalDiff) {\n  //     improving = false;\n  //   } else if (recentGoalDiff - 1 > distantGoalDiff) {\n  //     improving = true;\n  //   } else {\n  //     improving = false;\n  //   }\n  // }\n\n  return score;\n}\n\nexport async function getPointAverage(pointTotal, games) {\n  return pointTotal / games;\n}\n\nexport async function compareTeams(homeForm, awayForm, match) {\n  let sotComparisonHOrA;\n  let sotComparison;\n  let CleanSheetPercentageComparison;\n  let dangerousAttackConversionComparison;\n  let goalsPerDangerousAttackComparison;\n  let dangerousAttacksComparisonHOrA;\n  let dangerousAttacksComparison;\n  let XGdifferentialComparison;\n  let formTrendScoreComparison;\n  let last10PointsComparison;\n  let twoGameAverageComparison;\n  let fiveGameAverageComparison;\n  let tenGameAverageComparison;\n  let seasonPPGComparison;\n  let attackingPotencyComparison;\n  let AveragePossessionComparisonHOrA;\n  let AveragePossessionComparison;\n  let positionComparison;\n  let positionComparisonHorA;\n  let winPercentageComparison;\n  let lossPercentageComparison;\n  let OddsComparison;\n  let homeOrAwayAverageComparison;\n  let overUnderAchievingSumComparison;\n  let goalDiffComparison;\n  let goalDiffHOrAComparison;\n\n  let tooCloseToCall = 0;\n  let awayPoints = 0;\n  let tooCloseToCallCount;\n\n  if (\n    homeForm.overUnderAchievingSum < -0.5 ||\n    awayForm.overUnderAchievingSum < -0.5 ||\n    homeForm.overUnderAchievingSum > 0.5 ||\n    awayForm.overUnderAchievingSum > 0.5\n  ) {\n    [overUnderAchievingSumComparison, tooCloseToCallCount] = await compareStat(\n      parseFloat(homeForm.overUnderAchievingSum),\n      parseFloat(awayForm.overUnderAchievingSum)\n    );\n    tooCloseToCall = tooCloseToCall + tooCloseToCallCount;\n  } else {\n    overUnderAchievingSumComparison = 0;\n  }\n\n  [sotComparisonHOrA, tooCloseToCallCount] = await compareStat(\n    homeForm.AverageShotsOnTarget,\n    awayForm.AverageShotsOnTarget\n  );\n\n  tooCloseToCall = tooCloseToCall + tooCloseToCallCount;\n\n  [sotComparison, tooCloseToCallCount] = await compareStat(\n    homeForm.AverageShotsOnTargetOverall,\n    awayForm.AverageShotsOnTargetOverall\n  );\n\n  tooCloseToCall = tooCloseToCall + tooCloseToCallCount;\n\n  [CleanSheetPercentageComparison, tooCloseToCallCount] = await compareStat(\n    homeForm.CleanSheetPercentage,\n    awayForm.CleanSheetPercentage\n  );\n\n  tooCloseToCall = tooCloseToCall + tooCloseToCallCount;\n\n  [dangerousAttackConversionComparison, tooCloseToCallCount] =\n    await compareStat(\n      awayForm.dangerousAttackConversion,\n      homeForm.dangerousAttackConversion\n    );\n\n  tooCloseToCall = tooCloseToCall + tooCloseToCallCount;\n\n  [goalsPerDangerousAttackComparison, tooCloseToCallCount] = await compareStat(\n    homeForm.goalsPerDangerousAttack,\n    awayForm.goalsPerDangerousAttack\n  );\n\n  tooCloseToCall = tooCloseToCall + tooCloseToCallCount;\n\n  [dangerousAttacksComparisonHOrA, tooCloseToCallCount] = await compareStat(\n    homeForm.AverageDangerousAttacks,\n    awayForm.AverageDangerousAttacks\n  );\n\n  tooCloseToCall = tooCloseToCall + tooCloseToCallCount;\n\n  [dangerousAttacksComparison, tooCloseToCallCount] = await compareStat(\n    homeForm.AverageDangerousAttacksOverall,\n    awayForm.AverageDangerousAttacksOverall\n  );\n\n  tooCloseToCall = tooCloseToCall + tooCloseToCallCount;\n\n  [XGdifferentialComparison, tooCloseToCallCount] = await compareStat(\n    homeForm.XGdifferential,\n    awayForm.XGdifferential\n  );\n\n  tooCloseToCall = tooCloseToCall + tooCloseToCallCount;\n\n  [formTrendScoreComparison, tooCloseToCallCount] = await compareStat(\n    homeForm.formTrendScore,\n    awayForm.formTrendScore\n  );\n\n  tooCloseToCall = tooCloseToCall + tooCloseToCallCount;\n\n  [last10PointsComparison, tooCloseToCallCount] = await compareStat(\n    homeForm.last10Points,\n    awayForm.last10Points\n  );\n\n  tooCloseToCall = tooCloseToCall + tooCloseToCallCount;\n\n  [twoGameAverageComparison, tooCloseToCallCount] = await compareStat(\n    homeForm.twoGameAverage,\n    awayForm.twoGameAverage\n  );\n\n  tooCloseToCall = tooCloseToCall + tooCloseToCallCount;\n\n  [fiveGameAverageComparison, tooCloseToCallCount] = await compareStat(\n    homeForm.fiveGameAverage,\n    awayForm.fiveGameAverage\n  );\n\n  tooCloseToCall = tooCloseToCall + tooCloseToCallCount;\n\n  [tenGameAverageComparison, tooCloseToCallCount] = await compareStat(\n    homeForm.tenGameAverage,\n    awayForm.tenGameAverage\n  );\n\n  tooCloseToCall = tooCloseToCall + tooCloseToCallCount;\n\n  if (homeForm.SeasonPPG !== \"N/A\" && awayForm.SeasonPPG !== \"N/A\") {\n    [seasonPPGComparison, tooCloseToCallCount] = await compareStat(\n      parseFloat(homeForm.SeasonPPG),\n      parseFloat(awayForm.SeasonPPG)\n    );\n  } else seasonPPGComparison = last10PointsComparison;\n\n  tooCloseToCall = tooCloseToCall + tooCloseToCallCount;\n\n  [attackingPotencyComparison, tooCloseToCallCount] = await compareStat(\n    homeForm.AttackingPotency,\n    awayForm.AttackingPotency\n  );\n\n  tooCloseToCall = tooCloseToCall + tooCloseToCallCount;\n\n  [AveragePossessionComparisonHOrA, tooCloseToCallCount] = await compareStat(\n    homeForm.AveragePossession - 10,\n    awayForm.AveragePossession - 10\n  );\n\n  tooCloseToCall = tooCloseToCall + tooCloseToCallCount;\n\n  [goalDiffComparison, tooCloseToCallCount] = await compareStat(\n    homeForm.goalDifference + 20,\n    awayForm.goalDifference + 20\n  );\n\n  tooCloseToCall = tooCloseToCall + tooCloseToCallCount;\n\n  [goalDiffHOrAComparison, tooCloseToCallCount] = await compareStat(\n    homeForm.goalDifferenceHomeOrAway + 20,\n    awayForm.goalDifferenceHomeOrAway + 20\n  );\n\n  tooCloseToCall = tooCloseToCall + tooCloseToCallCount;\n\n  [AveragePossessionComparison, tooCloseToCallCount] = await compareStat(\n    homeForm.AveragePossessionOverall - 10,\n    awayForm.AveragePossessionOverall - 10\n  );\n\n  tooCloseToCall = tooCloseToCall + tooCloseToCallCount;\n\n  if (\n    typeof awayForm.awayPositionAwayOnly === \"number\" &&\n    typeof homeForm.homePositionHomeOnly === \"number\"\n  ) {\n    [positionComparisonHorA, tooCloseToCallCount] = await compareStat(\n      awayForm.awayPositionAwayOnly + 10,\n      homeForm.homePositionHomeOnly + 10\n    );\n  } else {\n    [positionComparisonHorA, tooCloseToCallCount] = await compareStat(\n      homeForm.tenGameAverage,\n      awayForm.tenGameAverage\n    );\n  }\n\n  tooCloseToCall = tooCloseToCall + tooCloseToCallCount;\n\n  if (\n    typeof awayForm.awayPosition === \"number\" &&\n    typeof homeForm.homePosition === \"number\"\n  ) {\n    [positionComparison, tooCloseToCallCount] = await compareStat(\n      awayForm.awayPosition + 10,\n      homeForm.homePosition + 10\n    );\n  } else {\n    [positionComparison, tooCloseToCallCount] = await compareStat(\n      homeForm.tenGameAverage,\n      awayForm.tenGameAverage\n    );\n  }\n\n  let winPercH;\n  let winPercA;\n  let drawPercH;\n  let drawPercA;\n\n  if (homeForm.WinPercentage !== undefined) {\n    [winPercentageComparison, tooCloseToCallCount] = await compareStat(\n      homeForm.WinPercentage + 40,\n      awayForm.WinPercentage + 40\n    );\n    winPercH = homeForm.WinPercentage;\n    winPercA = awayForm.WinPercentage;\n    drawPercH = homeForm.DrawPercentage;\n    drawPercA = awayForm.DrawPercentage;\n  } else {\n    [winPercentageComparison, tooCloseToCallCount] = await compareStat(\n      match.homeTeamWinPercentage + 40,\n      match.awayTeamWinPercentage + 40\n    );\n    winPercH = match.homeTeamWinPercentage;\n    winPercA = match.awayTeamWinPercentage;\n    drawPercH = match.homeTeamDrawPercentage;\n    drawPercA = match.awayTeamDrawPercentage;\n  }\n\n  if (homeForm.LossPercentage !== undefined) {\n    [lossPercentageComparison, tooCloseToCallCount] = await compareStat(\n      awayForm.LossPercentage + 40,\n      homeForm.LossPercentage + 40\n    );\n  } else {\n    [lossPercentageComparison, tooCloseToCallCount] = await compareStat(\n      match.awayTeamLossPercentage + 40,\n      match.homeTeamLossPercentage + 40\n    );\n  }\n\n  [OddsComparison, tooCloseToCallCount] = await compareStat(\n    match.awayOdds,\n    match.homeOdds\n  );\n\n  tooCloseToCall = tooCloseToCall + tooCloseToCallCount;\n\n  if (homeForm.homeOrAwayAverage) {\n    [homeOrAwayAverageComparison, tooCloseToCallCount] = await compareStat(\n      homeForm.homeOrAwayAverage + 1,\n      awayForm.homeOrAwayAverage + 1\n    );\n\n    tooCloseToCall = tooCloseToCall + tooCloseToCallCount;\n  } else {\n    [homeOrAwayAverageComparison, tooCloseToCallCount] = await compareStat(\n      1,\n      1\n    );\n\n    tooCloseToCall = tooCloseToCall + tooCloseToCallCount;\n  }\n\n  let calculation =\n    OddsComparison * 2 +\n    positionComparison * 3 +\n    positionComparisonHorA * 2 +\n    twoGameAverageComparison * 1 +\n    tenGameAverageComparison * 0 +\n    XGdifferentialComparison * 20 +\n    seasonPPGComparison * 1 +\n    formTrendScoreComparison * 1 +\n    fiveGameAverageComparison * 3 +\n    dangerousAttacksComparisonHOrA * 0 +\n    dangerousAttacksComparison * 0 +\n    sotComparison * 1 +\n    sotComparisonHOrA * 0 +\n    CleanSheetPercentageComparison * 0 +\n    dangerousAttackConversionComparison * 0 +\n    goalsPerDangerousAttackComparison * 0 +\n    attackingPotencyComparison * 0 +\n    AveragePossessionComparison * 0 +\n    AveragePossessionComparisonHOrA * 0 +\n    winPercentageComparison * 2 +\n    lossPercentageComparison * 2 +\n    homeOrAwayAverageComparison * 1 +\n    overUnderAchievingSumComparison * 2 +\n    goalDiffComparison * 3 +\n    goalDiffHOrAComparison * 2;\n\n  match.tooCloseToCall = tooCloseToCall;\n\n  let homeWinOutcomeProbability =\n    match.homeTeamWinPercentage + match.awayTeamLossPercentage;\n  let awayWinOutcomeProbability =\n    match.homeTeamLossPercentage + match.awayTeamWinPercentage;\n  let drawOutcomeProbability =\n    match.homeTeamDrawPercentage + match.awayTeamDrawPercentage;\n\n  if (calculation > 0) {\n    switch (true) {\n      case homeWinOutcomeProbability - 25 > awayWinOutcomeProbability &&\n        homeWinOutcomeProbability - 25 > drawOutcomeProbability:\n        calculation = calculation * 2;\n        break;\n      case awayWinOutcomeProbability - 25 > homeWinOutcomeProbability &&\n        awayWinOutcomeProbability - 25 > drawOutcomeProbability:\n        calculation = calculation / 2;\n        break;\n      case drawOutcomeProbability - 20 > awayWinOutcomeProbability &&\n        drawOutcomeProbability - 20 > homeWinOutcomeProbability:\n        calculation = calculation - 1;\n        break;\n      default:\n        calculation = calculation - 0.5;\n        break;\n    }\n  } else if (calculation < 0) {\n    switch (true) {\n      case homeWinOutcomeProbability - 25 > awayWinOutcomeProbability &&\n        homeWinOutcomeProbability - 25 > drawOutcomeProbability:\n        calculation = calculation / 2;\n        break;\n      case awayWinOutcomeProbability - 25 > homeWinOutcomeProbability &&\n        awayWinOutcomeProbability - 25 > drawOutcomeProbability:\n        calculation = calculation * 2;\n        break;\n      case drawOutcomeProbability - 20 > awayWinOutcomeProbability &&\n        drawOutcomeProbability - 20 > homeWinOutcomeProbability:\n        calculation = calculation + 1;\n        break;\n      default:\n        calculation = calculation + 0.5;\n        break;\n    }\n  }\n\n  // if (calculation > 0) {\n  //   switch (true) {\n  //     case winPercA + drawPercA === 100:\n  //       calculation = calculation / 8;\n  //       break;\n  //     case winPercA + drawPercA >= 90 && winPercA + drawPercA < 100:\n  //       calculation = calculation / 7;\n  //       break;\n  //     case winPercA + drawPercA >= 80 && winPercA + drawPercA < 90:\n  //       calculation = calculation / 6;\n  //       break;\n  //     case winPercA + drawPercA >= 70 && winPercA + drawPercA < 80:\n  //       calculation = calculation / 5;\n  //       break;\n  //     case winPercA + drawPercA >= 60 && winPercA + drawPercA < 70:\n  //       calculation = calculation / 3;\n  //       break;\n  //     case winPercA + drawPercA >= 50 && winPercA + drawPercA < 60:\n  //       calculation = calculation / 2;\n  //       break;\n  //     case winPercA + drawPercA >= 40 && winPercA + drawPercA < 50:\n  //       calculation = calculation / 1.5;\n  //       break;\n  //     case winPercA + drawPercA >= 30 && winPercA + drawPercA < 40:\n  //       calculation = calculation / 1.05;\n  //       break;\n  //     case winPercA + drawPercA >= 20 && winPercA + drawPercA < 30:\n  //       calculation = calculation / 1;\n  //       break;\n  //     case winPercA + drawPercA >= 10 && winPercA + drawPercA < 20:\n  //       calculation = calculation * 2;\n  //       break;\n  //     case winPercA + drawPercA >= 0 && winPercA + drawPercA < 10:\n  //       calculation = calculation * 3;\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  // } else if (calculation < 0) {\n  //   switch (true) {\n  //     case winPercH + drawPercH === 100:\n  //       calculation = calculation / 8;\n  //       break;\n  //     case winPercH + drawPercH >= 90 && winPercH + drawPercH < 100:\n  //       calculation = calculation / 7;\n  //       break;\n  //     case winPercH + drawPercH >= 80 && winPercH + drawPercH < 90:\n  //       calculation = calculation / 6;\n  //       break;\n  //     case winPercH + drawPercH >= 70 && winPercH + drawPercH < 80:\n  //       calculation = calculation / 5;\n  //       break;\n  //     case winPercH + drawPercH >= 60 && winPercH + drawPercH < 70:\n  //       calculation = calculation / 3;\n  //       break;\n  //     case winPercH + drawPercH >= 50 && winPercH + drawPercH < 60:\n  //       calculation = calculation / 2;\n  //       break;\n  //     case winPercH + drawPercH >= 40 && winPercH + drawPercH < 50:\n  //       calculation = calculation / 1.5;\n  //       break;\n  //     case winPercH + drawPercH >= 30 && winPercH + drawPercH < 40:\n  //       calculation = calculation / 1.05;\n  //       break;\n  //     case winPercH + drawPercH >= 20 && winPercH + drawPercH < 30:\n  //       calculation = calculation * 1;\n  //       break;\n  //     case winPercH + drawPercH >= 10 && winPercH + drawPercH < 20:\n  //       calculation = calculation * 2;\n  //       break;\n  //     case winPercH + drawPercH >= 0 && winPercH + drawPercH < 10:\n  //       calculation = calculation * 3;\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  // }\n\n  // // adjust calculation based on better team's win and draw percentages\n  // if (calculation > 0) {\n  //   switch (true) {\n  //     case winPercH >= 90 && winPercH <= 100:\n  //       calculation = calculation * 4;\n  //       break;\n  //     case winPercH >= 80 && winPercH < 90:\n  //       calculation = calculation * 3.5;\n  //       break;\n  //     case winPercH >= 70 && winPercH < 80:\n  //       calculation = calculation * 3;\n  //       break;\n  //     case homeForm.homeOrAwayAverage > 2.5:\n  //       calculation = calculation * 2.5;\n  //       break;\n  //     case winPercH >= 60 && winPercH < 70:\n  //       calculation = calculation * 2;\n  //       break;\n  //     case winPercH >= 50 && winPercH < 60:\n  //       calculation = calculation * 1.5;\n  //       break;\n  //     case winPercH >= 40 && winPercH < 50:\n  //       calculation = calculation * 1.25;\n  //       break;\n  //     case winPercH >= 30 && winPercH < 40:\n  //       calculation = calculation * 1;\n  //       break;\n  //     case winPercH >= 20 && winPercH < 30:\n  //       calculation = calculation * 0.75;\n  //       break;\n  //     case winPercH >= 10 && winPercH < 20:\n  //       calculation = calculation * 0.5;\n  //       break;\n  //     case winPercH >= 0 && winPercH < 10:\n  //       calculation = calculation * 0.25;\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  // } else if (calculation < 0) {\n  //   switch (true) {\n  //     case winPercA >= 90 && winPercA <= 100:\n  //       calculation = calculation * 4;\n  //       break;\n  //     case winPercA >= 80 && winPercA < 90:\n  //       calculation = calculation * 3.5;\n  //       break;\n  //     case winPercA >= 70 && winPercA < 80:\n  //       calculation = calculation * 3;\n  //       break;\n  //     case awayForm.homeOrAwayAverage > 2.5:\n  //       calculation = calculation * 2.5;\n  //       break;\n  //     case winPercA >= 60 && winPercA < 70:\n  //       calculation = calculation * 2;\n  //       break;\n  //     case winPercA >= 50 && winPercA < 60:\n  //       calculation = calculation * 1.5;\n  //       break;\n  //     case winPercA >= 40 && winPercA < 50:\n  //       calculation = calculation * 1.25;\n  //       break;\n  //     case winPercA >= 30 && winPercA < 40:\n  //       calculation = calculation * 1;\n  //       break;\n  //     case winPercA >= 20 && winPercA < 30:\n  //       calculation = calculation * 0.75;\n  //       break;\n  //     case winPercA >= 10 && winPercA < 20:\n  //       calculation = calculation * 0.5;\n  //       break;\n  //     case winPercA >= 0 && winPercA < 10:\n  //       calculation = calculation * 0.25;\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  // }\n\n  if (calculation > 0) {\n    switch (true) {\n      case homeForm.last2Points <= 1:\n        calculation = calculation / 5;\n        break;\n      case homeForm.last2Points === 2:\n        calculation = calculation / 2.5;\n        break;\n      case homeForm.homeOrAwayAverage < 1:\n        calculation = calculation / 3;\n        break;\n      case awayForm.homeOrAwayAverage > 2.5:\n        calculation = calculation / 2;\n        break;\n      default:\n        break;\n    }\n  } else if (calculation < 0) {\n    switch (true) {\n      case awayForm.last2Points <= 1:\n        calculation = calculation / 5;\n        break;\n      case awayForm.last2Points === 2:\n        calculation = calculation / 2.5;\n        break;\n      case awayForm.homeOrAwayAverage < 1:\n        calculation = calculation / 3;\n        break;\n      case homeForm.homeOrAwayAverage > 2.5:\n        calculation = calculation / 2;\n        break;\n      default:\n        break;\n    }\n  }\n\n  if (tooCloseToCall >= 1) {\n    calculation = calculation / tooCloseToCall;\n  }\n\n\n\n  if(tooCloseToCall < -1){\n    calculation = calculation * 2\n  }\n\n  console.log(match.game);\n  console.log(tooCloseToCall);\n  console.log(calculation);\n\n  return [calculation, tooCloseToCall, awayPoints];\n}\n\nexport async function wdlRecordComparison(win, loss) {\n  let result;\n\n  if (win === 0) {\n    result = 0.5;\n  } else if (loss === 0) {\n    result = 1.5;\n  } else {\n    switch (true) {\n      case win / loss > 2.5:\n        result = 1.2;\n        break;\n      case win / loss > 1.5:\n        result = 1.05;\n        break;\n      case win / loss > 1:\n        result = 1.01;\n        break;\n      case win / loss === 1:\n        result = 1;\n        break;\n      case win / loss < 0.4:\n        result = 0.8;\n        break;\n      case win / loss < 0.67:\n        result = 0.95;\n        break;\n      case win / loss < 1:\n        result = 0.99;\n        break;\n      default:\n        break;\n    }\n  }\n\n  return result;\n}\n\nexport async function compareDefences(form, rawGoals, name) {\n  let CleanSheetPercentageComparison;\n  let GoalsConceededComparison;\n\n  CleanSheetPercentageComparison = await compareDefenceStat(\n    form.CleanSheetPercentage,\n    70\n  );\n\n  GoalsConceededComparison = await compareDefenceStat(\n    0.51,\n    form.conceededAverageShortAndLongTerm\n  );\n\n  console.log(name)\n\n  let calculation = CleanSheetPercentageComparison + GoalsConceededComparison;\n  let goals = rawGoals - calculation;\n\n  console.log(form)\n  console.log(calculation)\n  console.log(goals)\n\n\n  return goals;\n}\n\nexport async function roundCustom(num, form, otherForm) {\n  let wholeNumber = Math.floor(num);\n  let remainder = num - wholeNumber;\n\n  if (form.XGOverall - 0.25 > num && remainder > 0.6) {\n    return Math.ceil(num);\n  } else {\n    return Math.floor(num);\n  }\n\n  // if (wholeNumber !== 0) {\n  //   // if (form.clinicalScore < 1) {\n  //   //   return Math.round(num);\n  //   // }\n  //   if (\n  //     form.overUnderAchievingSumAttack > 0.25 &&\n  //     otherForm.overUnderAchievingSumDefence < -0.25\n  //   ) {\n  //     return Math.ceil(num);\n  //   } else if (\n  //     form.overUnderAchievingSumAttack < -0.25 &&\n  //     otherForm.overUnderAchievingSumDefence > 0.25\n  //   ) {\n  //     return Math.floor(num);\n  //   } else if (remainder > 0.75) {\n  //     return Math.ceil(num);\n  //   } else {\n  //     return Math.floor(num);\n  //   }\n  // } else if (wholeNumber === 0) {\n  //   // if (form.clinicalScore < 1) {\n  //   //   return Math.round(num);\n  //   // }\n  //   if (\n  //     form.overUnderAchievingSumAttack > 0.25 &&\n  //     otherForm.overUnderAchievingSumDefence < -0.25\n  //   ) {\n  //     return Math.ceil(num);\n  //   } else if (\n  //     form.overUnderAchievingSumAttack < -0.25 &&\n  //     otherForm.overUnderAchievingSumDefence > 0.25\n  //   ) {\n  //     return Math.floor(num);\n  //   } else if (remainder > 0.75) {\n  //     return Math.ceil(num);\n  //   } else {\n  //     return Math.floor(num);\n  //   }\n  // } else {\n  //   return Math.floor(num);\n  // }\n}\n\n//Calculates scores based on prior XG figures, weighted by odds\nexport async function calculateScore(match, index, divider) {\n  let teams;\n  let calculate = true;\n\n  if (\n    allForm.find(\n      (game) =>\n        game.home.teamName === match.homeTeam &&\n        game.away.teamName === match.awayTeam\n    )\n  ) {\n    teams = [\n      allForm.find((game) => game.home.teamName === match.homeTeam).home,\n      allForm.find((game) => game.away.teamName === match.awayTeam).away,\n    ];\n  } else {\n    calculate = false;\n  }\n\n  let formHome;\n  let formAway;\n\n  if (calculate) {\n    for (let i = 0; i < teams.length; i++) {\n      if (teams[0][index].PlayedHome <= 1 || teams[1][index].PlayedAway <= 1) {\n        index = 2;\n        divider = 10;\n      }\n\n      teams[i][index].lastGame = teams[i][index].LastFiveForm[4];\n      teams[i][index].previousToLastGame = teams[i][index].LastFiveForm[3];\n\n      let last2 = [\n        teams[i][index].lastGame,\n        teams[i][index].previousToLastGame,\n      ];\n\n      let last3 = [\n        teams[i][index].lastGame,\n        teams[i][index].previousToLastGame,\n        teams[i][index].LastFiveForm[2],\n      ];\n\n      teams[i][index].last5Points = getPointsFromLastX(\n        teams[i][index].LastFiveForm\n      );\n\n      teams[i][index].last6Points = getPointsFromLastX(\n        teams[i][index].LastSixForm\n      );\n\n      teams[i][index].last10Points = getPointsFromLastX(\n        teams[i][index].LastTenForm\n      );\n\n      teams[i][index].last3Points = getPointsFromLastX(last3);\n\n      teams[i][index].last2Points = getPointsFromLastX(last2);\n\n      teams[i][index].twoGameAverage = await getPointAverage(\n        teams[i][index].last2Points,\n        2\n      );\n      teams[i][index].threeGameAverage = await getPointAverage(\n        teams[i][index].last3Points,\n        3\n      );\n      teams[i][index].fiveGameAverage = await getPointAverage(\n        teams[i][index].last5Points,\n        5\n      );\n      teams[i][index].sixGameAverage = await getPointAverage(\n        teams[i][index].last6Points,\n        6\n      );\n      teams[i][index].tenGameAverage = await getPointAverage(\n        teams[i][index].last10Points,\n        10\n      );\n\n      if (teams[i][index].formRun) {\n        teams[i][index].lastHomeOrAwayPoints = getPointsFromLastX(\n          teams[i][index].formRun\n        );\n\n        teams[i][index].homeOrAwayAverage = await getPointAverage(\n          teams[i][index].lastHomeOrAwayPoints,\n          teams[i][index].formRun.length\n        );\n      }\n\n      let scoredAverageNotZero = 0.01;\n      let conceededAverageNotZero = 0.01;\n\n      if (teams[i][index].ScoredAverage === 0) {\n        teams[i][index].ScoredAverage = scoredAverageNotZero;\n        teams[i][0].ScoredOverall = scoredAverageNotZero;\n      }\n\n      if (teams[i][index].ConcededAverage === 0) {\n        teams[i][index].ConcededAverage = conceededAverageNotZero;\n        teams[i][0].ConcededOverall = conceededAverageNotZero;\n      }\n\n      teams[i][index].ScoredAverageShortTerm = teams[i][0].ScoredOverall / 5;\n      teams[i][index].ScoredAverageLongTermHomeOrAway =\n        teams[i][2].ScoredAverage;\n      teams[i][index].ConcededAverageShortTerm =\n        teams[i][0].ConcededOverall / 5;\n      teams[i][index].ConcededAverageLongTermHomeOrAway =\n        teams[i][2].ConcededAverage;\n\n      teams[i][index].longTermAverageGoals = teams[i][2].ScoredAverage;\n      teams[i][index].longTermAverageConceeded = teams[i][2].ConcededAverage;\n\n      let recentGoalDiff =\n        teams[i][index].ScoredAverageShortTerm -\n        teams[i][index].ConcededAverageShortTerm;\n      let distantGoalDiff =\n        teams[i][index].longTermAverageGoals -\n        teams[i][index].longTermAverageConceeded;\n\n      teams[i][index].formTrendScore = await compareFormTrend(\n        teams[i][index].threeGameAverage,\n        teams[i][index].fiveGameAverage,\n        teams[i][index].sixGameAverage,\n        teams[i][index].tenGameAverage,\n        teams[i][index].lastGame,\n        recentGoalDiff,\n        distantGoalDiff\n      );\n\n      teams[i][index].expectedGoals = parseFloat(teams[i][index].XG);\n      teams[i][index].expectedGoalsConceeded = parseFloat(\n        teams[i][index].XGAgainstAverage\n      );\n\n      teams[i][index].expectedGoalsLongTerm = parseFloat(teams[i][2].XG);\n\n      teams[i][index].expectedConceededGoalsLongTerm = parseFloat(\n        teams[i][index].XGAgainstAverage\n      );\n\n      teams[i][index].ScoredAverageShortAndLongTerm =\n        (teams[i][index].ScoredOverall / 10 +\n          teams[i][index].ScoredAverageShortTerm) /\n        2;\n\n      teams[i][index].expectedGoalsShortAndLongTerm =\n        (teams[i][index].expectedGoalsLongTerm +\n          teams[i][index].expectedGoals) /\n        2;\n\n      teams[i][index].conceededAverageShortAndLongTerm =\n        (teams[i][index].ConcededOverall / 10 +\n          teams[i][index].ConcededAverageShortTerm) /\n        2;\n\n      teams[i][index].finishingScore = parseFloat(\n        teams[i][index].XG - teams[i][index].ScoredAverage\n      );\n\n      teams[i][index].goalieRating = parseFloat(\n        teams[i][index].ConcededAverage - teams[i][index].XGAgainstAverage\n      );\n\n      let goalOverOrUnderAchieving = parseFloat(\n        await diff(teams[i][index].finishingScore, 0)\n      );\n\n      let concededOverOrUnderAchieving = parseFloat(\n        await diff(teams[i][index].goalieRating, 0)\n      );\n\n      teams[i][index].overUnderAchievingSumAttack = goalOverOrUnderAchieving;\n\n      teams[i][index].overUnderAchievingSumDefence =\n        concededOverOrUnderAchieving;\n\n      teams[i][index].overUnderAchievingSum =\n        goalOverOrUnderAchieving + concededOverOrUnderAchieving;\n\n      teams[i][index].forecastedXG = parseFloat(teams[i][index].ScoredAverage);\n\n      teams[i][index].forecastedXGConceded = parseFloat(\n        teams[i][index].ConcededAverage\n      );\n\n      teams[0][index].goalsBasedOnAverages = parseFloat(\n        (teams[0][index].forecastedXG + teams[1][index].forecastedXGConceded) /\n          2\n      );\n\n      teams[1][index].goalsBasedOnAverages = parseFloat(\n        (teams[1][index].forecastedXG + teams[0][index].forecastedXGConceded) /\n          2\n      );\n\n      teams[i][index].XGdifferential =\n        teams[i][index].XGOverall - teams[i][index].XGAgainstAvgOverall;\n\n      switch (true) {\n        case teams[i][index].XGdifferential > 1:\n          teams[i][index].XGWeighting = 6;\n          break;\n        case teams[i][index].XGdifferential <= 1 &&\n          teams[i][index].XGdifferential > 0.5:\n          teams[i][index].XGWeighting = 5;\n          break;\n        case teams[i][index].XGdifferential <= 0.5 &&\n          teams[i][index].XGdifferential > 0:\n          teams[i][index].XGWeighting = 4;\n          break;\n        case teams[i][index].XGdifferential >= -0.5 &&\n          teams[i][index].XGdifferential < 0:\n          teams[i][index].XGWeighting = 3;\n          break;\n        case teams[i][index].XGdifferential >= -1 &&\n          teams[i][index].XGdifferential < -0.5:\n          teams[i][index].XGWeighting = 2;\n          break;\n        case teams[i][index].XGdifferential < -1:\n          teams[i][index].XGWeighting = 1;\n          break;\n        default:\n          teams[i][index].XGWeighting = 1;\n          break;\n      }\n\n      if (\n        teams[i][0].XGOverall > teams[i][2].XGOverall &&\n        teams[i][0].XGAgainstAvgOverall < teams[i][2].XGAgainstAvgOverall\n      ) {\n        teams[i][index].improving = true;\n      }\n\n      if (\n        teams[i][0].XGOverall < teams[i][2].XGOverall &&\n        teams[i][0].XGAgainstAvgOverall > teams[i][2].XGAgainstAvgOverall\n      ) {\n        teams[i][index].improving = false;\n      }\n    }\n\n    homeOdds = match.homeOdds;\n    awayOdds = match.awayOdds;\n\n    formHome = teams[0][index];\n    formAway = teams[1][index];\n\n    [formHome.overOrUnderAttack, formHome.trueFormAttack] =\n      await getOverOrUnderAchievingResult(\n        index,\n        formHome.overUnderAchievingSumAttack\n      );\n\n    [formHome.overOrUnderDefence, formHome.trueFormDefence] =\n      await getOverOrUnderAchievingResult(\n        index,\n        formHome.overUnderAchievingSumDefence\n      );\n\n    [formAway.overOrUnderAttack, formAway.trueFormAttack] =\n      await getOverOrUnderAchievingResult(\n        index,\n        formAway.overUnderAchievingSumAttack\n      );\n\n    [formAway.overOrUnderDefence, formAway.trueFormDefence] =\n      await getOverOrUnderAchievingResult(\n        index,\n        formAway.overUnderAchievingSumDefence\n      );\n\n    let homeTenGameAvg = formHome.last10Points / 10;\n    let awayTenGameAvg = formAway.last10Points / 10;\n\n    let pointsDiff10 = await getPointsDifferential(\n      homeTenGameAvg,\n      awayTenGameAvg\n    );\n\n    let [last10WeightingHome, last10WeightingAway] = await getPointWeighting(\n      pointsDiff10\n    );\n\n    formHome.dangerousAttackConversion =\n      formHome.AverageDangerousAttacks / formHome.ScoredAverageShortAndLongTerm;\n    formAway.dangerousAttackConversion =\n      formAway.AverageDangerousAttacks / formAway.ScoredAverageShortAndLongTerm;\n\n    formHome.goalsPerDangerousAttack =\n      formHome.ScoredAverageShortAndLongTerm / formHome.AverageDangerousAttacks;\n    formAway.goalsPerDangerousAttack =\n      formAway.ScoredAverageShortAndLongTerm / formAway.AverageDangerousAttacks;\n\n    [formHome.clinicalRating, formHome.clinicalScore] = await getClinicalRating(\n      formHome\n    );\n    [formAway.clinicalRating, formAway.clinicalScore] = await getClinicalRating(\n      formAway\n    );\n\n    let XGdifferential = await diff(\n      formHome.XGdifferential,\n      formAway.XGdifferential\n    );\n\n    if (\n      typeof formHome.homeTeamHomePositionRaw === \"number\" &&\n      typeof formAway.awayTeamAwayPositionRaw === \"number\"\n    ) {\n      formHome.homePositionHomeOnly = parseFloat(\n        formHome.homeTeamHomePositionRaw\n      );\n      formAway.awayPositionAwayOnly = parseFloat(\n        formAway.awayTeamAwayPositionRaw\n      );\n      formHome.homePosition = parseFloat(formHome.homeRawPosition);\n      formAway.awayPosition = parseFloat(formAway.awayRawPosition);\n    } else {\n      formHome.homePositionHomeOnly = \"N/A\";\n      formAway.awayPositionAwayOnly = \"N/A\";\n      formHome.homePosition = \"N/A\";\n      formAway.awayPosition = \"N/A\";\n    }\n\n    formHome.AttackingPotency = (formHome.XG / formHome.AttacksHome) * 100;\n    formAway.AttackingPotency = (formAway.XG / formAway.AttacksAverage) * 100;\n\n    let teamComparisonScore;\n\n    [teamComparisonScore] = await compareTeams(formHome, formAway, match);\n    teamComparisonScore = teamComparisonScore * 0.5;\n    if (teamComparisonScore > 1.75) {\n      teamComparisonScore = 1.75;\n    } else if (teamComparisonScore < -1.75) {\n      teamComparisonScore = -1.75;\n    }\n\n    match.teamComparisonScore = teamComparisonScore;\n\n    const homeTeamWDLRecord = await wdlRecordComparison(\n      match.homeTeamWinPercentage,\n      match.homeTeamLossPercentage\n    );\n    const awayTeamWDLRecord = await wdlRecordComparison(\n      match.awayTeamWinPercentage,\n      match.homeTeamLossPercentage\n    );\n\n    let finalHomeGoals;\n    let finalAwayGoals;\n\n    const homeGoalDiff =\n      formHome.ScoredAverageShortAndLongTerm -\n      formHome.conceededAverageShortAndLongTerm;\n    const awayGoalDiff =\n      formAway.ScoredAverageShortAndLongTerm -\n      formAway.conceededAverageShortAndLongTerm;\n\n    formHome.goalsDifferential =\n      parseFloat(await diff(homeGoalDiff, awayGoalDiff)) / 1;\n    formAway.goalsDifferential =\n      parseFloat(await diff(awayGoalDiff, homeGoalDiff)) / 1;\n\n    let goalCalcHomeOnly =\n      (formHome.ScoredAverageLongTermHomeOrAway +\n        formAway.ConcededAverageLongTermHomeOrAway) /\n      2;\n    let goalCalcAwayOnly =\n      (formAway.ScoredAverageLongTermHomeOrAway +\n        formHome.ConcededAverageLongTermHomeOrAway) /\n      2;\n\n    let goalCalcHomeShortTerm =\n      (formHome.ScoredAverageShortTerm + formAway.ConcededAverageShortTerm) / 2;\n    let goalCalcAwayShortTerm =\n      (formAway.ScoredAverageShortTerm + formHome.ConcededAverageShortTerm) / 2;\n\n    let goalCalcHomeShortAndLongTerm =\n      (formHome.ScoredAverageShortAndLongTerm +\n        formAway.conceededAverageShortAndLongTerm) /\n      2;\n    let goalCalcAwayShortAndLongTerm =\n      (formAway.ScoredAverageShortAndLongTerm +\n        formHome.conceededAverageShortAndLongTerm) /\n      2;\n\n    let factorOneHome =\n      (goalCalcHomeShortTerm * 0 +\n        goalCalcHomeShortAndLongTerm * 1 +\n        goalCalcHomeOnly * 0 +\n        formAway.expectedConceededGoalsLongTerm * 0 +\n        formHome.expectedGoalsLongTerm * 0 +\n        formAway.conceededAverageShortAndLongTerm * 1 +\n        last10WeightingHome * 1 +\n        formHome.goalsDifferential * 0) /\n      2;\n\n    let factorOneAway =\n      (goalCalcAwayShortTerm * 0 +\n        goalCalcAwayShortAndLongTerm * 1 +\n        goalCalcAwayOnly * 0 +\n        formHome.expectedConceededGoalsLongTerm * 0 +\n        formAway.expectedGoalsLongTerm * 0 +\n        formHome.conceededAverageShortAndLongTerm * 1 +\n        last10WeightingAway * 1 +\n        formAway.goalsDifferential * 0) /\n      2;\n\n    let homeComparisonWeighting;\n    let awayComparisonWeighting;\n    match.scoreDiff = await diff(factorOneHome, factorOneAway);\n\n        console.log(match.game)\n        console.log(match.scoreDiff)\n\n    if (teamComparisonScore > 0) {\n      homeComparisonWeighting = 1 + Math.abs(teamComparisonScore);\n      awayComparisonWeighting = 1 + -Math.abs(teamComparisonScore);\n    } else if (teamComparisonScore < 0) {\n      homeComparisonWeighting = 1 + -Math.abs(teamComparisonScore);\n      awayComparisonWeighting = 1 + Math.abs(teamComparisonScore);\n    } else {\n      homeComparisonWeighting = 1;\n      awayComparisonWeighting = 1;\n    }\n\n    let experimentalHomeGoals = factorOneHome * 0.85 * homeComparisonWeighting;\n    // *\n    // homeTeamWDLRecord;\n\n    let experimentalAwayGoals = factorOneAway * 0.85 * awayComparisonWeighting;\n    // *\n    // awayTeamWDLRecord;\n\n    let rawFinalHomeGoals = experimentalHomeGoals;\n    let rawFinalAwayGoals = experimentalAwayGoals;\n\n    match.rawFinalHomeGoals = rawFinalHomeGoals;\n    match.rawFinalAwayGoals = rawFinalAwayGoals;\n\n    console.log(match.game)\n    console.log(match)\n\n    if (\n      formHome.CleanSheetPercentage < 30 &&\n      formAway.CleanSheetPercentage < 30\n    ) {\n      rawFinalHomeGoals = rawFinalHomeGoals + 0.5;\n      rawFinalAwayGoals = rawFinalAwayGoals + 0.5;\n    } else if (\n      formHome.CleanSheetPercentage > 60 &&\n      formAway.CleanSheetPercentage > 60\n    ) {\n      rawFinalHomeGoals = rawFinalHomeGoals - 0.5;\n      rawFinalAwayGoals = rawFinalAwayGoals - 0.5;\n    }\n\n    if (rawFinalAwayGoals < 0) {\n      let difference = parseFloat((await diff(0, rawFinalAwayGoals)) / 10);\n      rawFinalHomeGoals = rawFinalHomeGoals + difference;\n      rawFinalAwayGoals = 0;\n    }\n\n    if (rawFinalHomeGoals < 0) {\n      let difference = parseFloat((await diff(0, rawFinalHomeGoals)) / 10);\n      rawFinalAwayGoals = rawFinalAwayGoals + difference;\n      rawFinalHomeGoals = 0;\n    }\n\n    if (formHome.improving === true && formAway.improving === false) {\n      rawFinalHomeGoals = rawFinalHomeGoals + 0.5;\n      rawFinalAwayGoals = rawFinalAwayGoals - 0.5;\n    } else if (formAway.improving === true && formHome.improving === false) {\n      rawFinalHomeGoals = rawFinalHomeGoals - 0.5;\n      rawFinalAwayGoals = rawFinalAwayGoals + 0.5;\n    }\n    console.log(match.game)\n    console.log(rawFinalHomeGoals)\n    console.log(rawFinalAwayGoals)\n\n    if (\n      (rawFinalHomeGoals + 1) / (formHome.ScoredAverage + 1) > 1.2 &&\n      (rawFinalHomeGoals + 1) / (formAway.ConcededAverage + 1) > 1.2\n    ) {\n      rawFinalHomeGoals = rawFinalHomeGoals - 1;\n    } else if (\n      (rawFinalHomeGoals + 1) / (formHome.ScoredAverage + 1) < 0.833 &&\n      (rawFinalHomeGoals + 1) / (formAway.ConcededAverage + 1) < 0.833\n    ) {\n      rawFinalHomeGoals = rawFinalHomeGoals + 1;\n    }\n\n    if (\n      (rawFinalAwayGoals + 1) / (formAway.ScoredAverage + 1) > 1.2 &&\n      (rawFinalAwayGoals + 1) / (formHome.ConcededAverage + 1) > 1.2\n    ) {\n      rawFinalAwayGoals = rawFinalAwayGoals - 1;\n    } else if (\n      (finalAwayGoals + 1) / (formAway.ScoredAverage + 1) < 0.833 &&\n      (finalAwayGoals + 1) / (formHome.ConcededAverage + 1) < 0.833\n    ) {\n      rawFinalAwayGoals = rawFinalAwayGoals + 1;\n    }\n\n    console.log(match.game)\n    console.log(rawFinalHomeGoals)\n    console.log(rawFinalAwayGoals)\n\n    let rawFinalHomeGoalsAdjusted;\n    let rawFinalAwayGoalsAdjusted;\n\n    rawFinalHomeGoalsAdjusted = await compareDefences(\n      formAway,\n      rawFinalHomeGoals,\n      match.awayTeam\n    );\n\n    rawFinalAwayGoalsAdjusted = await compareDefences(\n      formHome,\n      rawFinalAwayGoals,\n      match.homeTeam\n    );\n\n    console.log(match.game)\n    console.log(rawFinalHomeGoalsAdjusted)\n    console.log(rawFinalAwayGoalsAdjusted)\n\n    finalHomeGoals = await roundCustom(\n      rawFinalHomeGoalsAdjusted,\n      formHome,\n      formAway\n    );\n\n    finalAwayGoals = await roundCustom(\n      rawFinalAwayGoalsAdjusted,\n      formAway,\n      formHome\n    );\n\n    // finalHomeGoals =  Math.round(rawFinalHomeGoalsAdjusted)\n\n    // finalAwayGoals =  Math.round(rawFinalAwayGoalsAdjusted)\n\n    // if ((finalHomeGoals + 1) / (formHome.ScoredAverage + 1) > 1.5 && (finalHomeGoals + 1) / (formAway.ConcededAverage + 1) > 1.5) {\n    //   finalHomeGoals = finalHomeGoals - 1;\n    // }\n    // else if ((finalHomeGoals + 1) / (formHome.ScoredAverage + 1) < 0.25 && (finalHomeGoals + 1) / (formAway.ConcededAverage + 1) < 0.25){\n    //   finalHomeGoals = finalHomeGoals + 1;\n    // }\n\n    // if ((finalAwayGoals + 1) / (formAway.ScoredAverage + 1) > 1.5 && (finalAwayGoals + 1) / (formHome.ConcededAverage + 1) > 1.5) {\n    //   finalAwayGoals = finalAwayGoals - 1;\n    // }\n    // else if ((finalAwayGoals + 1) / (formAway.ScoredAverage + 1) < 0.25 && (finalAwayGoals + 1) / (formHome.ConcededAverage + 1) < 0.25){\n    //   finalAwayGoals = finalAwayGoals + 1;\n    // }\n\n    if (finalHomeGoals > 5) {\n      finalHomeGoals = Math.round(\n        (finalHomeGoals + formHome.expectedGoals) / 2\n      );\n    }\n\n    if (finalAwayGoals > 5) {\n      finalAwayGoals = Math.round(\n        (finalAwayGoals + formAway.expectedGoals) / 2\n      );\n    }\n\n    if (finalHomeGoals > finalAwayGoals) {\n      match.prediction = \"homeWin\";\n      homePredictions = homePredictions + 1;\n      if (\n        formHome.lastGame === \"L\" ||\n        formHome.last3Points < 3 ||\n        formAway.lastGame === \"W\" ||\n        match.XGdifferentialValueRaw < 0\n      ) {\n        match.includeInMultis = false;\n      } else {\n        match.includeInMultis = true;\n      }\n    } else if (finalAwayGoals > finalHomeGoals) {\n      match.prediction = \"awayWin\";\n      awayPredictions = awayPredictions + 1;\n      if (\n        formAway.lastGame === \"L\" ||\n        formAway.last3Points < 3 ||\n        formHome.lastGame === \"W\" ||\n        match.XGdifferentialValueRaw > 0\n      ) {\n        match.includeInMultis = false;\n      } else {\n        match.includeInMultis = true;\n      }\n    } else if (finalHomeGoals === finalAwayGoals) {\n      match.prediction = \"draw\";\n      drawPredictions = drawPredictions + 1;\n    }\n\n    if (\n      (XGdifferential > 0.85 && match.prediction === \"homeWin\") ||\n      (XGdifferential < -1.6 && match.prediction === \"awayWin\")\n    ) {\n      match.XGdifferential = true;\n      match.XGdifferentialValue = Math.abs(XGdifferential);\n      match.XGdifferentialValueRaw = parseFloat(XGdifferential);\n    } else {\n      match.XGdifferential = false;\n      match.XGdifferentialValue = Math.abs(XGdifferential);\n      match.XGdifferentialValueRaw = parseFloat(XGdifferential);\n    }\n\n    switch (true) {\n      case match.homeGoals > match.awayGoals:\n        match.winner = match.homeTeam;\n        match.outcome = \"homeWin\";\n        homeOutcomes = homeOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formHome.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formAway.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formHome.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formAway.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formHome.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formAway.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formHome.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formAway.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += homeOdds;\n        sumOddsLoss = sumOddsLoss += awayOdds;\n\n        sumXGForWin = sumXGForWin += formHome.XGOverall;\n        sumXGForLoss = sumXGForLoss += formAway.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formHome.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formAway.XGAgainstAvgOverall;\n\n        break;\n      case match.homeGoals === match.awayGoals:\n        match.winner = \"draw\";\n        match.outcome = \"draw\";\n        allOutcomes = allOutcomes + 1;\n        allDrawOutcomes = allDrawOutcomes + 1;\n        break;\n      case match.homeGoals < match.awayGoals:\n        match.winner = match.awayTeam;\n        match.outcome = \"awayWin\";\n        allOutcomes = allOutcomes + 1;\n        awayOutcomes = awayOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formAway.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formHome.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formAway.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formHome.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formAway.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formHome.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formAway.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formHome.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += awayOdds;\n        sumOddsLoss = sumOddsLoss += homeOdds;\n\n        sumXGForWin = sumXGForWin += formAway.XGOverall;\n        sumXGForLoss = sumXGForLoss += formHome.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formAway.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formHome.XGAgainstAvgOverall;\n        break;\n      default:\n        break;\n    }\n\n    winDAAverage = (sumStatDAWin / allWinOutcomes).toFixed(2);\n    lossDAAverage = (sumStatDALoss / allLossOutcomes).toFixed(2);\n    winPossessionAverage = (sumStatPossessionWin / allWinOutcomes).toFixed(2);\n    lossPossessionAverage = (sumStatPossessionLoss / allLossOutcomes).toFixed(\n      2\n    );\n    winLast10PPGAverage = (sumStatPPGLast10Win / allWinOutcomes).toFixed(2);\n    lossLast10PPGAverage = (sumStatPPGLast10Loss / allLossOutcomes).toFixed(2);\n    winSOTAverage = (sumStatSOTWin / allWinOutcomes).toFixed(2);\n    lossSOTAverage = (sumStatSOTLoss / allLossOutcomes).toFixed(2);\n    winOddsAverage = (sumOddsWin / allWinOutcomes).toFixed(2);\n    lossOddsAverage = (sumOddsLoss / allLossOutcomes).toFixed(2);\n    winXGForAverage = (sumXGForWin / allWinOutcomes).toFixed(2);\n    lossXGForAverage = (sumXGForLoss / allLossOutcomes).toFixed(2);\n    winXGAgainstAverage = (sumXGAgainstWin / allWinOutcomes).toFixed(2);\n    lossXGAgainstAverage = (sumXGAgainstLoss / allLossOutcomes).toFixed(2);\n\n    if (match.status === \"complete\") {\n      if (match.prediction === match.outcome) {\n        match.predictionOutcome = \"Won\";\n        winAmount = winAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      } else if (match.prediction !== match.outcome) {\n        match.predictionOutcome = \"Lost\";\n        lossAmount = lossAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      }\n    }\n\n    if (match.status === \"complete\") {\n      if (match.predictionOutcome === \"Won\" || match.outcome === \"draw\") {\n        match.doubleChancePredictionOutcome = \"Won\";\n      } else if (match.prediction !== \"Won\" && match.outcome !== \"draw\") {\n        match.doubleChancePredictionOutcome = \"Lost\";\n      }\n    }\n\n    match.formHome = formHome;\n    match.formAway = formAway;\n\n    let total = parseInt(finalHomeGoals + finalAwayGoals);\n    totalGoals = totalGoals + total;\n\n    let total2 = parseInt(match.homeGoals + match.awayGoals);\n    totalGoals2 = totalGoals2 + total2;\n\n    numberOfGames = numberOfGames + 1;\n\n    if (finalHomeGoals < 0) {\n      finalHomeGoals = 0;\n    }\n\n    if (finalAwayGoals < 0) {\n      finalAwayGoals = 0;\n    }\n\n    if (match.status === \"suspended\") {\n      finalHomeGoals = \"P\";\n      finalAwayGoals = \"P\";\n    }\n\n    return [\n      finalHomeGoals,\n      finalAwayGoals,\n      rawFinalHomeGoals,\n      rawFinalAwayGoals,\n    ];\n  } else {\n    finalHomeGoals = \"\";\n    finalAwayGoals = \"\";\n    rawFinalHomeGoals = \"\";\n    rawFinalAwayGoals = \"\";\n    match.status = \"void\";\n  }\n\n  return [finalHomeGoals, finalAwayGoals, rawFinalHomeGoals, rawFinalAwayGoals];\n}\n\nasync function getSuccessMeasure(fixtures) {\n  let sumProfit = 0;\n  let investment = 0;\n  let exactScores = 0;\n  let successCount = 0;\n  let netProfit;\n\n  for (let i = 0; i < fixtures.length; i++) {\n    if (fixtures[i].status === \"complete\") {\n      sumProfit = sumProfit + fixtures[i].profit;\n      investment = investment + 1;\n      netProfit = (sumProfit - investment).toFixed(2);\n      if (fixtures[i].exactScore === true) {\n        exactScores = exactScores + 1;\n      }\n      if (fixtures[i].predictionOutcome === \"Won\") {\n        successCount = successCount + 1;\n      }\n    }\n  }\n\n  let ROI = (netProfit / investment) * 100;\n  var operand = ROI >= 0 ? \"+\" : \"\";\n  let exactScoreHitRate = ((exactScores / investment) * 100).toFixed(1);\n  let successRate = ((successCount / investment) * 100).toFixed(1);\n\n  if (investment > 0) {\n    ReactDOM.render(\n      <Fragment>\n        <Div\n          className={\"SuccessMeasure\"}\n          text={`ROI for \n            all ${investment} W/D/W \n            outcomes: ${operand} ${ROI.toFixed(2)}%`}\n        />\n        <p>{`Correct W/D/W predictions: ${successCount} (${successRate}%)`}</p>\n        <p>{`Exact scores predicted: ${exactScores} (${exactScoreHitRate}%)`}</p>\n      </Fragment>,\n      document.getElementById(\"successMeasure\")\n    );\n  } else {\n    return;\n  }\n}\n\nexport var tips = [];\nexport var allTips = [];\nlet allTipsSorted;\nvar newArray = [];\nvar bestBets = [];\nvar price;\nvar longShotTips = [];\nvar XGDiffTips = [];\nvar combinations;\nvar exoticArray = [];\nvar gamesInExotic;\nvar minimumExotic;\nvar exoticStake;\nvar exoticString;\nvar bttsArray = [];\nvar accumulatedOdds = 1;\nlet predictions = [];\n\nexport async function getNewTips(array) {\n  newArray = [];\n  accumulatedOdds = 1;\n\n  if (array.length > 1 && incrementValue > 0) {\n    array.forEach((tip) => {\n      if (\n        array.indexOf(tip) < incrementValue\n        // tip.goalDifferential >= incrementValue && tip.comparisonScore > 0\n      ) {\n        newArray.push(tip);\n        accumulatedOdds = parseFloat(accumulatedOdds) * parseFloat(tip.rawOdds);\n      }\n    });\n  }\n  await renderTips(newArray);\n}\n\nexport async function getScorePrediction(day, mocked) {\n  let mock = mocked;\n  tips = [];\n  bestBets = [];\n  // price = 0\n  bttsArray = [];\n  longShotTips = [];\n  XGDiffTips = [];\n\n  let index = 2;\n  let divider = 10;\n\n  ReactDOM.render(<div />, document.getElementById(\"Buttons\"));\n\n  await Promise.all(\n    matches.map(async (match) => {\n      // if there are no stored predictions, calculate them based on live data\n      if (match) {\n        switch (true) {\n          case match.status === \"canceled\":\n            match.goalsA = \"P\";\n            match.goalsB = \"P\";\n            break;\n          default:\n            [\n              match.goalsA,\n              match.goalsB,\n              match.unroundedGoalsA,\n              match.unroundedGoalsB,\n            ] = await calculateScore(match, index, divider, match.id);\n            break;\n        }\n      } else {\n        [\n          match.goalsA,\n          match.goalsB,\n          match.unroundedGoalsA,\n          match.unroundedGoalsB,\n        ] = await calculateScore(match, index, divider, match.id);\n      }\n\n      await getBTTSPotential(allForm, match, index, match.goalsA, match.goalsB);\n\n      let predictionObject;\n      let longShotPredictionObject;\n      let XGPredictionObject;\n\n      if (\n        match.unroundedGoalsA - match.unroundedGoalsB > 0.75 &&\n        match.homeOdds !== 0 &&\n        match.fractionHome !== \"N/A\" &&\n        match.includeInMultis !== false\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.homeOdds < 3\n        ) {\n          predictionObject = {\n            team: `${match.homeTeam} to win`,\n            odds: match.fractionHome,\n            rawOdds: match.homeOdds,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            formTrend: match.formHome.improving,\n            outcome: match.predictionOutcome,\n            goalDifferential: parseFloat(\n              await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n            ),\n            experimentalCalc:\n              (match.unroundedGoalsA - match.unroundedGoalsB) *\n              Math.abs(match.teamComparisonScore),\n            XGdifferentialValue: parseFloat(match.XGdifferentialValue),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formHome.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n\n            if (\n              match.unroundedGoalsA - match.unroundedGoalsB > incrementValue &&\n              match.formHome.improving === true &&\n              match.formAway.improving === false &&\n              predictionObject.rawComparisonScore > 11\n            ) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      } else if (\n        match.unroundedGoalsB - match.unroundedGoalsA > 1.75 &&\n        match.awayOdds !== 0 &&\n        match.fractionAway !== \"N/A\" &&\n        match.includeInMultis !== false\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.awayOdds < 3.5\n        ) {\n          predictionObject = {\n            team: `${match.awayTeam} to win`,\n            rawOdds: match.awayOdds,\n            odds: match.fractionAway,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            formTrend: match.formAway.improving,\n            outcome: match.predictionOutcome,\n            goalDifferential: parseFloat(\n              await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n            ),\n            experimentalCalc:\n              (match.unroundedGoalsB - match.unroundedGoalsA) *\n              Math.abs(match.teamComparisonScore),\n            XGdifferentialValue: parseFloat(match.XGdifferentialValue),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formAway.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n            if (\n              match.unroundedGoalsB - match.unroundedGoalsA > 2 &&\n              match.formHome.improving === false &&\n              match.formAway.improving === true &&\n              predictionObject.rawComparisonScore < -11\n            ) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      }\n\n      allTipsSorted = allTips.sort(function (a, b) {\n        let sortByCalcA = a.comparisonScore * a.XGdifferentialValue;\n        let sortByCalcB = b.comparisonScore * b.XGdifferentialValue;\n\n        if (sortByCalcA === sortByCalcB) {\n          return b.XGdifferentialValue - a.XGdifferentialValue;\n        } else {\n          return sortByCalcB > sortByCalcA ? 1 : -1;\n        }\n      });\n\n      bestBets.sort(function (a, b) {\n        if (a.goalDifferential === b.goalDifferential) {\n          return b.comparisonScore - a.comparisonScore;\n        } else {\n          return b.goalDifferential > a.goalDifferential ? 1 : -1;\n        }\n      });\n\n      if (\n        match.btts === true &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        bttsArray.push(match);\n\n        bttsArray.sort(function (a, b) {\n          return b.totalGoals - a.totalGoals;\n        });\n      }\n\n      if (\n        match.unroundedGoalsA > match.unroundedGoalsB &&\n        match.homeDoubleChance >= 1.4 &&\n        match.goalsA > match.goalsB\n      ) {\n        longShotPredictionObject = {\n          team: match.homeTeam,\n          decimalOdds: match.homeDoubleChance,\n          rawOdds: match.homeOdds,\n          odds: match.fractionHome,\n          comparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          doubleChanceOutcome: match.doubleChancePredictionOutcome,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        if (\n          match.prediction !== \"draw\" &&\n          longShotPredictionObject.comparisonScore > 0.1\n        ) {\n          longShotTips.push(longShotPredictionObject);\n        }\n      } else if (\n        match.unroundedGoalsA < match.unroundedGoalsB &&\n        match.awayDoubleChance >= 1.4 &&\n        match.goalsB > match.goalsA\n      ) {\n        longShotPredictionObject = {\n          team: match.awayTeam,\n          decimalOdds: match.awayDoubleChance,\n          rawOdds: match.awayOdds,\n          odds: match.fractionAway,\n          comparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          doubleChanceOutcome: match.doubleChancePredictionOutcome,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        if (\n          match.prediction !== \"draw\" &&\n          longShotPredictionObject.comparisonScore < -0.1\n        ) {\n          longShotTips.push(longShotPredictionObject);\n        }\n      }\n\n      longShotTips.sort(function (a, b) {\n        return b.goalDifferential - a.goalDifferential;\n      });\n\n      exoticArray = [];\n      gamesInExotic = 0;\n      exoticStake = 0;\n      exoticString = \"\";\n\n      switch (true) {\n        case XGDiffTips.length >= 10:\n          for (let i = 0; i < 10; i++) {\n            let game = XGDiffTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 10;\n          minimumExotic = 8;\n          exoticStake = 0.1;\n          exoticString = \"45 8-folds, 10 9-folds and 1 10-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case XGDiffTips.length >= 9:\n          for (let i = 0; i < 9; i++) {\n            let game = XGDiffTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 9;\n          minimumExotic = 7;\n          exoticStake = 0.1;\n          exoticString = \"36 7-folds, 9 8-folds and 1 9-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n\n        case XGDiffTips.length >= 8:\n          for (let i = 0; i < 8; i++) {\n            let game = XGDiffTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 8;\n          minimumExotic = 6;\n          exoticStake = 0.1;\n          exoticString = \"28 6-folds, 8 7-folds and 1 8-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case XGDiffTips.length >= 7:\n          for (let i = 0; i < 7; i++) {\n            let game = XGDiffTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 7;\n          minimumExotic = 6;\n          exoticStake = 1;\n          exoticString = \"7 6-folds and 1 7-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case allTips.length >= 10:\n          for (let i = 0; i < 10; i++) {\n            let game = allTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 10;\n          minimumExotic = 8;\n          exoticStake = 0.1;\n          exoticString = \"45 8-folds, 10 9-folds and 1 10-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case allTips.length >= 9:\n          for (let i = 0; i < 9; i++) {\n            let game = allTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 9;\n          minimumExotic = 7;\n          exoticStake = 0.1;\n          exoticString = \"36 7-folds, 9 8-folds and 1 9-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case allTips.length >= 8:\n          for (let i = 0; i < 8; i++) {\n            let game = allTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 8;\n          minimumExotic = 6;\n          exoticStake = 0.1;\n          exoticString = \"28 6-folds, 8 7-folds and 1 8-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case allTips.length >= 7:\n          for (let i = 0; i < 7; i++) {\n            let game = allTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 7;\n          minimumExotic = 6;\n          exoticStake = 1;\n          exoticString = \"7 6-folds and 1 7-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case allTips.length >= 6:\n          for (let i = 0; i < 6; i++) {\n            let game = allTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 6;\n          minimumExotic = 5;\n          exoticStake = 1;\n          exoticString = \"6 5-folds and 1 6-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case allTips.length >= 5:\n          for (let i = 0; i < 5; i++) {\n            let game = allTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 5;\n          minimumExotic = 4;\n          exoticStake = 1;\n          exoticString = \"5 4-folds and 1 5-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case longShotTips.length >= 4:\n          for (let i = 0; i < 4; i++) {\n            let game = longShotTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 4;\n          minimumExotic = 3;\n          exoticStake = 1;\n          exoticString = \"4 3-folds and 1 4-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        default:\n          break;\n      }\n\n      if (match.XGdifferential === true && match.prediction === \"homeWin\") {\n        XGPredictionObject = {\n          game: match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          formTrend: match.formHome.improving,\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          XGdifferentialValue: match.XGdifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n          experimentalCalc:\n            (match.unroundedGoalsA - match.unroundedGoalsB) *\n            Math.abs(match.teamComparisonScore),\n        };\n        XGDiffTips.push(XGPredictionObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\"\n      ) {\n        XGPredictionObject = {\n          game: match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          formTrend: match.formAway.improving,\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          XGdifferentialValue: match.XGdifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n          experimentalCalc:\n            (match.unroundedGoalsB - match.unroundedGoalsA) *\n            Math.abs(match.teamComparisonScore),\n        };\n        XGDiffTips.push(XGPredictionObject);\n      }\n\n      XGDiffTips.sort(function (a, b) {\n        return b.XGdifferentialValue - a.XGdifferentialValue;\n      });\n\n      if (mock !== true) {\n        ReactDOM.render(\n          <Fixture\n            fixtures={matches}\n            result={true}\n            mock={mock}\n            className={`individualFixture`}\n          />,\n          document.getElementById(\"FixtureContainer\")\n        );\n      } else if (mock === true) {\n        ReactDOM.render(\n          <Fixture\n            fixtures={matches}\n            result={true}\n            mock={mock}\n            className={\"individualFixture\"}\n          />,\n          document.getElementById(\"FixtureContainer\")\n        );\n      }\n\n      predictions.push(match);\n    })\n  );\n  await getSuccessMeasure(matches);\n\n  await getNewTips(allTipsSorted);\n\n  // await renderTips();\n}\n\nexport function getAccumulatorPrice(priceArray) {\n  var result = 1;\n  for (var i = 0; i < priceArray.length; i++)\n    result = result * priceArray[i].rawOdds;\n\n  return result;\n}\n\nexport function getCoverBetMaxReturns(priceArray, minAccSize, stake) {\n  var total = 0;\n  combinations = 0;\n\n  for (var i = minAccSize; i <= priceArray.length; i++) {\n    var perms = getUniquePermutations(priceArray, i);\n    combinations = combinations + perms.length;\n\n    for (var j = 0; j < perms.length; j++)\n      total += getAccumulatorPrice(perms[j]) * stake;\n  }\n  return parseFloat(total.toFixed(2));\n}\n\nfunction getUniquePermutations(arr, permLength) {\n  if (arr.length <= permLength) return [arr];\n\n  var permutations = [];\n  var newArr = [];\n\n  newArr = arr.slice(0);\n\n  for (var i = 0; i < arr.length; i++) {\n    newArr = arr.slice(0);\n    newArr.splice(i, 1);\n    permutations = twoDimArrayUnion(\n      permutations,\n      getUniquePermutations(newArr, permLength)\n    );\n  }\n  return permutations;\n}\n\nfunction twoDimArrayUnion(arr1, arr2) {\n  for (var i = 0; i < arr2.length; i++) {\n    var duplicate = false;\n\n    for (var j = 0; j < arr1.length; j++)\n      if (arr1[j].length === arr2[i].length)\n        for (var k = 0; k < arr1[j].length; k++)\n          if (arr1[j][k] !== arr2[i][k]) break;\n          else if (k === arr1[j].length - 1) duplicate = true;\n\n    if (!duplicate) arr1.push(arr2[i]);\n  }\n\n  return arr1;\n}\n\nfunction NewlineText(props) {\n  const text = props.text;\n  const newText = text.split(\"\\n\").map((str) => <p>{str}</p>);\n\n  return newText;\n}\n\nasync function renderTips() {\n  if (newArray.length > 0) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            className={\"PredictionsOfTheDay\"}\n            text={\n              <ul className=\"BestPredictions\">\n                <div className=\"BestPredictionsExplainer\">\n                  Add or remove a selection using the buttons below. Predictions\n                  are ordered by confidence in the outcome.\n                </div>\n                {newArray.map((tip) => (\n                  <li className={tip.outcome} key={tip.team}>\n                    {tip.team}: {tip.odds}\n                  </li>\n                ))}\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            className={\"PredictionsOfTheDay\"}\n            text={\n              <ul className=\"BestPredictions\">\n                <div className=\"BestPredictionsExplainer\">\n                  No games fit the criteria (try tapping the + button)\n                </div>\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  }\n\n  if (exoticArray.length > 4) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Exotic of the day\"}\n            className={\"PredictionsOfTheDay\"}\n            text={\n              <ul className=\"BestPredictions\">\n                <div className=\"BestPredictionsExplainer\">\n                  <NewlineText\n                    text={`${gamesInExotic} games: ${exoticString}\\nStake per multi: ${exoticStake} units - ${combinations} combinations\\nTotal stake: ${(\n                      exoticStake * combinations\n                    ).toFixed(2)} unit(s)`}\n                  />\n                  {`Potential winnings: ${price.toFixed(2)} units`}\n                </div>\n                {exoticArray.map((tip) => (\n                  <li className={tip.outcome} key={tip.team}>\n                    {tip.team}: {tip.odds}\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Exotic of the day\"}\n            className={\"PredictionsOfTheDay\"}\n            text={\n              <ul className=\"BestPredictions\">\n                <div className=\"BestPredictionsExplainer\">\n                  Not enough games for this feature\n                </div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  }\n\n  if (longShotTips.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Double chance tips\"}\n            text={\n              <ul className=\"LongshotPredictions\">\n                <lh>Double chance (Win or Draw - decimal odds only)</lh>\n                {longShotTips.map((tip) => (\n                  <li className={`${tip.doubleChanceOutcome}1`} key={tip.team}>\n                    {tip.team} to win or draw: {tip.decimalOdds}\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Double chance tips\"}\n            text={\n              <ul className=\"LongshotPredictions\">\n                <lh>No games fit the criteria</lh>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  }\n\n  if (XGDiffTips.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"XG Tips\"}\n            text={\n              <ul className=\"XGDiffTips\">\n                <lh>Games with greatest XG Differentials</lh>\n                {XGDiffTips.map((tip) => (\n                  <li className={tip.outcome} key={tip.game}>\n                    {tip.game} | {tip.prediction} {tip.odds}\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"draws\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"XG Tips\"}\n            text={\n              <ul className=\"XGDiffTips\">\n                <lh>No games fit the criteria</lh>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"draws\")\n    );\n  }\n\n  if (bttsArray.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            className={\"BTTSGames\"}\n            buttonText={\"BTTS games\"}\n            text={\n              <ul className=\"BTTSGames\">\n                <lh>Games with highest chance of BTTS</lh>\n                {bttsArray.map((game) => (\n                  <li className={game.bttsOutcome} key={game.game}>\n                    {`${game.game} odds: ${game.bttsFraction}`}\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            className={\"BTTSGames\"}\n            buttonText={\"BTTS games\"}\n            text={\n              <ul className=\"BTTSGames\">\n                <lh>No games fit the criteria</lh>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  }\n\n  if (allWinOutcomes > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Insights\"}\n            className=\"Insights\"\n            text={\n              <div>\n                <lh className=\"InsightsExplainer\">\n                  Average stats for winning/losing teams prior to this gameweek\n                </lh>\n                <div className=\"InsightsContainer\">\n                  <ul className=\"InsightsHome\">\n                    <lh className=\"WinningTeams\">Winning teams</lh>\n                    <li>{winOddsAverage} odds</li>\n                    <li>{winXGForAverage} XG For</li>\n                    <li>{winXGAgainstAverage} XG Against</li>\n                    <li>{winLast10PPGAverage} ppg (last 10)</li>\n                    <li>{winPossessionAverage}% possession</li>\n                    <li>{winSOTAverage} shots on target</li>\n                    <li>{winDAAverage} dangerous attacks</li>\n                  </ul>\n                  <ul className=\"InsightsAway\">\n                    <lh className=\"LosingTeams\">Losing teams</lh>\n                    <li>{lossOddsAverage} odds</li>\n                    <li>{lossXGForAverage} XG For</li>\n                    <li>{lossXGAgainstAverage} XG Against</li>\n                    <li>{lossLast10PPGAverage} ppg (last 10)</li>\n                    <li>{lossPossessionAverage}% possession</li>\n                    <li>{lossSOTAverage} shots on target</li>\n                    <li>{lossDAAverage} dangerous attacks</li>\n                  </ul>\n                </div>\n              </div>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"insights\")\n    );\n  }\n\n  // ReactDOM.render(\n  //   <div className=\"pointsGapExplainer\">\n  //     * games with greatest XG differentials\n  //   </div>,\n  //   document.getElementById(\"XGDiff\")\n  // );\n}\n","export async function getBTTSPotential(allForm, match, index, homeGoals, awayGoals) {\n\n  let homeTeam = match.homeTeam;\n  let awayTeam = match.awayTeam;\n\n\n  let home = allForm.findIndex(function (item, i) {\n    return item.home.teamName === homeTeam;\n  });\n\n  let away = allForm.findIndex(function (item, i) {\n    return item.away.teamName === awayTeam;\n  });\n  if(home !== -1 && away !== -1){\n\n\n  let homeBTTS = allForm[home].home[index].BTTSPercentage;\n  let awayBTTS = allForm[away].away[index].BTTSPercentage;\n  let homeG = homeGoals;\n  let awayG = awayGoals;\n\n\n  let homeXG = allForm[home].home[index].XGOverall;\n  let awayXG = allForm[away].away[index].XGOverall;\n\n\n  match.combinedBTTS = (homeBTTS + awayBTTS) / 2;\n\nif(match.bttsFraction !== \"N/A\" && match.status !== \"suspended\" && match.status !== \"canceled\"){\n  if (\n    match.combinedBTTS > 60 &&\n    match.awayOdds < 3.5 &&\n    match.awayOdds > 1.4 &&\n    homeXG >= 1.1 &&\n    awayXG >= 1.1 &&\n    homeG >= 1 &&\n    awayG >= 1\n  ) {\n    match.btts = true;\n    match.bttsChosen = true;\n    match.totalGoals = match.rawFinalHomeGoals + match.rawFinalAwayGoals\n  } else {\n    match.btts = false;\n    match.bttsChosen = false;\n  }\n}\n  \n  }\n  return match;\n}\n\n","import ReactDOM from \"react-dom\";\nimport { Button } from \"../components/Button\";\nimport Stats from \"../components/createStatsDiv\";\nimport Div from \"../components/Div\";\nimport { allForm } from \"../logic/getFixtures\";\nimport { getTeamStats } from \"../logic/getTeamStats\";\nimport { getPointsFromLastX } from \"../logic/getScorePredictions\";\n\nlet testBool;\n\nexport async function createStatsDiv(game, mock) {\n  if (game.status !== \"void\") {\n    let bool = mock;\n\n    if (bool !== true) {\n      let radioSelected = 10;\n\n      function toggle() {\n        testBool = testBool ? false : true;\n        if (testBool === true) {\n          // set stats element to display flex\n          return { display: \"block\" };\n        } else {\n          // set stats element to display none\n          return { display: \"none\" };\n        }\n      }\n\n      let style = toggle();\n\n      let index;\n      let divider;\n      if (radioSelected === 5) {\n        index = 0;\n        divider = 5;\n      } else if (radioSelected === 6) {\n        index = 1;\n        divider = 6;\n      } else if (radioSelected === 10) {\n        index = 2;\n        divider = 10;\n      }\n\n      let gameStats = allForm.find((match) => match.id === game.id);\n\n      let homeTeam = gameStats.home.teamName;\n      let awayTeam = gameStats.away.teamName;\n\n      let time = game.time;\n\n      gameStats.home[index].last5Points = getPointsFromLastX(\n        gameStats.home[index].LastFiveForm\n      );\n\n      gameStats.home[index].last6Points = getPointsFromLastX(\n        gameStats.home[index].LastSixForm\n      );\n\n      gameStats.home[index].last10Points = getPointsFromLastX(\n        gameStats.home[index].LastTenForm\n      );\n\n      gameStats.away[index].last5Points = getPointsFromLastX(\n        gameStats.away[index].LastFiveForm\n      );\n\n      gameStats.away[index].last6Points = getPointsFromLastX(\n        gameStats.away[index].LastSixForm\n      );\n\n      gameStats.away[index].last10Points = getPointsFromLastX(\n        gameStats.away[index].LastTenForm\n      );\n\n      async function getPointAverage(pointTotal, games) {\n        return pointTotal / games;\n      }\n\n      let homeFiveGameAverage = await getPointAverage(\n        gameStats.home[index].last5Points,\n        5\n      );\n      let homeSixGameAverage = await getPointAverage(\n        gameStats.home[index].last6Points,\n        6\n      );\n      let homeTenGameAverage = await getPointAverage(\n        gameStats.home[index].last10Points,\n        10\n      );\n\n      let awayFiveGameAverage = await getPointAverage(\n        gameStats.away[index].last5Points,\n        5\n      );\n      let awaySixGameAverage = await getPointAverage(\n        gameStats.away[index].last6Points,\n        6\n      );\n      let awayTenGameAverage = await getPointAverage(\n        gameStats.away[index].last10Points,\n        10\n      );\n\n      async function getLastGameResult(lastGame) {\n        let text;\n        switch (true) {\n          case lastGame === \"L\":\n            text = \"Lost\";\n            break;\n          case lastGame === \"D\":\n            text = \"Drew\";\n            break;\n          case lastGame === \"W\":\n            text = \"Won\";\n            break;\n          default:\n            break;\n        }\n        return text;\n      }\n\n      async function compareFormTrend(five, six, ten) {\n        let text;\n        if (five >= 2.5) {\n          switch (true) {\n            case five > six && six > ten:\n              text =\n                \"Outstanding recent form with solid improvement over last 10 games\";\n              break;\n            case five > six && six < ten:\n              text =\n                \"Outstanding recent form which has improved with some inconsistency over last 10 games\";\n              break;\n            case five === six && six > ten:\n              text =\n                \"Outstanding recent form with most improvement in the last 6\";\n              break;\n            case five === six && six < ten:\n              text = \"Outstanding recent form with a slight dip in the last 6\";\n              break;\n            case five === six && six === ten:\n              text = \"Consistently outstanding form over the last 10\";\n              break;\n            case five < six && six === ten:\n              text =\n                \"Outstanding recent form but slightly worsening in the last 5\";\n              break;\n            case five < six && six > ten:\n              text =\n                \"Outstanding recent form but slightly fluctuating over the last 10\";\n              break;\n            case five < six && six < ten:\n              text = \"Outstanding recent form but beginning to worsen recently\";\n              break;\n            default:\n              break;\n          }\n        } else if (five < 2.5 && five >= 2) {\n          switch (true) {\n            case five > six && six > ten:\n              text =\n                \"Very good recent form with solid improvement over last 10 games\";\n              break;\n            case five > six && six < ten:\n              text =\n                \"Very good recent form which has improved with some inconsistency over last 10 games\";\n              break;\n            case five === six && six > ten:\n              text =\n                \"Very good recent form with most improvement in the last 6\";\n              break;\n            case five === six && six < ten:\n              text = \"Very good recent form with a slight dip in the last 6\";\n              break;\n            case five === six && six === ten:\n              text = \"Very good outstanding form over the last 10\";\n              break;\n            case five < six && six === ten:\n              text =\n                \"Very good recent form but slightly worsening in the last 5\";\n              break;\n            case five < six && six > ten:\n              text =\n                \"Very good recent form but slightly fluctuating over the last 10\";\n              break;\n            case five < six && six < ten:\n              text = \"Very good recent form but beginning to worsen recently\";\n              break;\n            default:\n              break;\n          }\n        } else if (five < 2 && five >= 1.5) {\n          switch (true) {\n            case five > six && six > ten:\n              text =\n                \"Good recent form with solid improvement over last 10 games\";\n              break;\n            case five > six && six < ten:\n              text =\n                \"Good recent form which has improved with some inconsistency over last 10 games\";\n              break;\n            case five === six && six > ten:\n              text = \"Good recent form with most improvement in the last 6\";\n              break;\n            case five === six && six < ten:\n              text = \"Good recent form with a slight dip in the last 6\";\n              break;\n            case five === six && six === ten:\n              text = \"Good outstanding form over the last 10\";\n              break;\n            case five < six && six === ten:\n              text = \"Good recent form but slightly worsening in the last 5\";\n              break;\n            case five < six && six > ten:\n              text =\n                \"Good recent form but slightly fluctuating over the last 10\";\n              break;\n            case five < six && six < ten:\n              text = \"Good recent form but worsening consistently\";\n              break;\n            default:\n              break;\n          }\n        } else if (five < 1.5 && five >= 1) {\n          switch (true) {\n            case five > six && six > ten:\n              text =\n                \"Average recent form with solid improvement over last 10 games\";\n              break;\n            case five > six && six < ten:\n              text =\n                \"Average recent form which has improved with some inconsistency over last 10 games\";\n              break;\n            case five === six && six > ten:\n              text = \"Average recent form with most improvement in the last 6\";\n              break;\n            case five === six && six < ten:\n              text = \"Average recent form with a slight dip in the last 6\";\n              break;\n            case five === six && six === ten:\n              text = \"Consistently average form over the last 10\";\n              break;\n            case five < six && six === ten:\n              text = \"Average recent form but slightly worsening in the last 5\";\n              break;\n            case five < six && six > ten:\n              text =\n                \"Average recent form, slightly fluctuating over the last 10\";\n              break;\n            case five < six && six < ten:\n              text = \"Average recent form, declining consistently\";\n              break;\n            default:\n              break;\n          }\n        } else if (five < 1 && five >= 0.5) {\n          switch (true) {\n            case five > six && six > ten:\n              text =\n                \"Poor recent form with gradual improvement over last 10 games\";\n              break;\n            case five > six && six < ten:\n              text =\n                \"Poor recent form but improving with some inconsistency over last 10 games\";\n              break;\n            case five === six && six > ten:\n              text =\n                \"Poor recent form with some improvement shown in the last 6\";\n              break;\n            case five === six && six < ten:\n              text = \"Poor recent form with a dip in the last 6\";\n              break;\n            case five === six && six === ten:\n              text = \"Consistently poor form over the last 10\";\n              break;\n            case five < six && six === ten:\n              text = \"Poor recent form, slightly worsening in the last 5\";\n              break;\n            case five < six && six > ten:\n              text = \"Poor recent form, slightly fluctuating over the last 10\";\n              break;\n            case five < six && six < ten:\n              text = \"Poor recent form, declining consistently\";\n              break;\n            default:\n              text = \"Poor recent form\";\n              break;\n          }\n        } else if (five < 0.5) {\n          switch (true) {\n            case five > six && six > ten:\n              text =\n                \"Terrible recent form with gradual improvement over last 10 games\";\n              break;\n            case five > six && six < ten:\n              text =\n                \"Terrible recent form with a slight improvement in the last 5\";\n              break;\n            case five === six && six > ten:\n              text =\n                \"Terrible recent form but improving slightly in the last 6\";\n              break;\n            case five === six && six < ten:\n              text = \"Terrible recent form with a dip in the last 6\";\n              break;\n            case five === six && six === ten:\n              text = \"Consistently terrible form over the last 10\";\n              break;\n            case five < six && six === ten:\n              text = \"Terrible recent form, worsening further in the last 5\";\n              break;\n            case five < six && six > ten:\n              text =\n                \"Terrible recent form, slightly fluctuating over the last 10\";\n              break;\n            case five < six && six < ten:\n              text = \"Terrible recent form, declining consistently\";\n              break;\n            default:\n              break;\n          }\n        }\n        return text;\n      }\n\n      let homeFormTrend = await compareFormTrend(\n        homeFiveGameAverage,\n        homeSixGameAverage,\n        homeTenGameAverage\n      );\n      let awayFormTrend = await compareFormTrend(\n        awayFiveGameAverage,\n        awaySixGameAverage,\n        awayTenGameAverage\n      );\n      let homeLastGame = await getLastGameResult(\n        gameStats.home[index].LastFiveForm[4]\n      );\n      let awayLastGame = await getLastGameResult(\n        gameStats.away[index].LastFiveForm[4]\n      );\n\n      const formDataMatch = [];\n\n      formDataMatch.push({\n        btts: game.btts_potential,\n      });\n\n      const formDataHome = [];\n\n      formDataHome.push({\n        name: game.homeTeam,\n        Last5: gameStats.home[index].LastFiveForm,\n        AverageGoals: gameStats.home[index].ScoredOverall / 10,\n        AverageConceeded: gameStats.home[index].ConcededOverall / 10,\n        AverageXG: gameStats.home[index].XGOverall,\n        AverageXGConceded: gameStats.home[index].XGAgainstAvgOverall,\n        AveragePossession: gameStats.home[index].AveragePossessionOverall,\n        AverageShotsOnTarget: gameStats.home[index].AverageShotsOnTargetOverall,\n        AverageDangerousAttacks:\n          gameStats.home[index].AverageDangerousAttacksOverall,\n        homeOrAway: \"Home\",\n        leaguePosition: gameStats.home[index].LeaguePosition,\n        Last5PPG: gameStats.home[index].PPG,\n        SeasonPPG: gameStats.home[index].SeasonPPG,\n        formTrend: homeFormTrend,\n        lastGame: homeLastGame,\n        formRun: gameStats.home[index].formRun,\n        goalDifference: gameStats.home[index].goalDifference,\n        goalDifferenceHomeOrAway:\n          gameStats.home[index].goalDifferenceHomeOrAway,\n        BttsPercentage: gameStats.home[index].BttsPercentage,\n        BttsPercentageHomeOrAway:\n          gameStats.home[index].BttsPercentageHomeOrAway,\n        CardsTotal: gameStats.home[index].CardsTotal,\n        CornersAverage: gameStats.home[index].CornersAverage,\n        ScoredBothHalvesPercentage:\n          gameStats.home[index].ScoredBothHalvesPercentage,\n      });\n\n      const formDataAway = [];\n\n      formDataAway.push({\n        name: game.awayTeam,\n        Last5: gameStats.away[index].LastFiveForm,\n        AverageGoals: gameStats.away[index].ScoredOverall / 10,\n        AverageConceeded: gameStats.away[index].ConcededOverall / 10,\n        AverageXG: gameStats.away[index].XGOverall,\n        AverageXGConceded: gameStats.away[index].XGAgainstAvgOverall,\n        AveragePossession: gameStats.away[index].AveragePossessionOverall,\n        AverageShotsOnTarget: gameStats.away[index].AverageShotsOnTargetOverall,\n        AverageDangerousAttacks:\n          gameStats.away[index].AverageDangerousAttacksOverall,\n        homeOrAway: \"Away\",\n        leaguePosition: gameStats.away[index].LeaguePosition,\n        Last5PPG: gameStats.away[index].PPG,\n        SeasonPPG: gameStats.away[index].SeasonPPG,\n        formTrend: awayFormTrend,\n        lastGame: awayLastGame,\n        formRun: gameStats.away[index].formRun,\n        goalDifference: gameStats.away[index].goalDifference,\n        goalDifferenceHomeOrAway:\n          gameStats.away[index].goalDifferenceHomeOrAway,\n        BttsPercentage: gameStats.away[index].BttsPercentage,\n        BttsPercentageHomeOrAway:\n          gameStats.away[index].BttsPercentageHomeOrAway,\n        CardsTotal: gameStats.away[index].CardsTotal,\n        CornersAverage: gameStats.away[index].CornersAverage,\n        ScoredBothHalvesPercentage:\n          gameStats.away[index].ScoredBothHalvesPercentage,\n      });\n      ReactDOM.render(\n        <div style={style}>\n          <Div className=\"MatchTime\" text={`Kick off: ${time} GMT`}></Div>\n          <Div\n            className=\"FormExplainer\"\n            text={`(Form stats based on last 10 games)`}\n          ></Div>\n        </div>,\n        document.getElementById(\"stats\" + homeTeam)\n      );\n\n      ReactDOM.render(\n        <div style={style}>\n          <div className=\"H2HStats\" id={`H2HStats${game.id}`}></div>\n          <div className=\"TrendsHome\" id={`TrendsHome${game.id}`}></div>\n          <div className=\"TrendsAway\" id={`TrendsAway${game.id}`}></div>\n        </div>,\n        document.getElementById(\"history\" + homeTeam)\n      );\n\n      //This tournament does not have league positions\n      if (game.leagueName === \"Europe UEFA Women's Euro\") {\n        game.homeTeamHomePosition = \"N/A\";\n        game.awayTeamAwayPosition = \"N/A\";\n      }\n\n      ReactDOM.render(\n        <Stats\n          style={style}\n          homeOrAway=\"Home\"\n          gameCount={divider}\n          key={formDataHome[0].name}\n          last5={formDataHome[0].Last5}\n          className={formDataHome[0].homeOrAway}\n          name={formDataHome[0].name}\n          goals={formDataHome[0].AverageGoals}\n          conceeded={formDataHome[0].AverageConceeded}\n          XG={formDataHome[0].AverageXG}\n          XGConceded={formDataHome[0].AverageXGConceded}\n          possession={formDataHome[0].AveragePossession}\n          sot={formDataHome[0].AverageShotsOnTarget}\n          dangerousAttacks={formDataHome[0].AverageDangerousAttacks}\n          leaguePosition={\n            formDataHome[0].leaguePosition ? formDataHome[0].leaguePosition : 0\n          }\n          rawPosition={game.homeRawPosition ? game.homeRawPosition : 0}\n          homeOrAwayLeaguePosition={\n            game.homeTeamHomePosition ? game.homeTeamHomePosition : 0\n          }\n          winPercentage={\n            game.homeTeamWinPercentage ? game.homeTeamWinPercentage : 0\n          }\n          lossPercentage={\n            game.homeTeamLossPercentage ? game.homeTeamLossPercentage : 0\n          }\n          drawPercentage={\n            game.homeTeamDrawPercentage ? game.homeTeamDrawPercentage : 0\n          }\n          ppg={formDataHome[0].SeasonPPG}\n          formTrend={[\n            homeTenGameAverage.toFixed(2),\n            homeSixGameAverage.toFixed(2),\n            homeFiveGameAverage.toFixed(2),\n          ]}\n          lastGame={homeLastGame}\n          formRun={formDataHome[0].formRun}\n          goalDifference={formDataHome[0].goalDifference}\n          goalDifferenceHomeOrAway={formDataHome[0].goalDifferenceHomeOrAway}\n          BttsPercentage={formDataHome[0].BttsPercentage}\n          BttsPercentageHomeOrAway={formDataHome[0].BttsPercentageHomeOrAway}\n          CardsTotal={formDataHome[0].CardsTotal}\n          CornersAverage={formDataHome[0].CornersAverage}\n          ScoredBothHalvesPercentage={\n            formDataHome[0].ScoredBothHalvesPercentage\n          }\n        />,\n        document.getElementById(\"home\" + homeTeam)\n      );\n\n      ReactDOM.render(\n        <Stats\n          style={style}\n          homeOrAway=\"Away\"\n          gameCount={divider}\n          key={formDataAway[0].name}\n          last5={formDataAway[0].Last5}\n          className={formDataAway[0].homeOrAway}\n          name={formDataAway[0].name}\n          goals={formDataAway[0].AverageGoals}\n          conceeded={formDataAway[0].AverageConceeded}\n          XG={formDataAway[0].AverageXG}\n          XGConceded={formDataAway[0].AverageXGConceded}\n          //todo add goal diff and btts percentages\n          possession={formDataAway[0].AveragePossession}\n          rawPosition={game.awayRawPosition ? game.awayRawPosition : 0}\n          sot={formDataAway[0].AverageShotsOnTarget}\n          dangerousAttacks={formDataAway[0].AverageDangerousAttacks}\n          leaguePosition={\n            formDataAway[0].leaguePosition ? formDataAway[0].leaguePosition : 0\n          }\n          homeOrAwayLeaguePosition={\n            game.awayTeamAwayPosition ? game.awayTeamAwayPosition : 0\n          }\n          winPercentage={\n            game.awayTeamWinPercentage ? game.awayTeamWinPercentage : 0\n          }\n          lossPercentage={\n            game.awayTeamLossPercentage ? game.awayTeamLossPercentage : 0\n          }\n          drawPercentage={\n            game.awayTeamDrawPercentage ? game.awayTeamDrawPercentage : 0\n          }\n          ppg={formDataAway[0].SeasonPPG}\n          formTrend={[\n            awayTenGameAverage.toFixed(2),\n            awaySixGameAverage.toFixed(2),\n            awayFiveGameAverage.toFixed(2),\n          ]}\n          lastGame={awayLastGame}\n          formRun={formDataAway[0].formRun}\n          goalDifference={formDataAway[0].goalDifference}\n          goalDifferenceHomeOrAway={formDataAway[0].goalDifferenceHomeOrAway}\n          BttsPercentage={formDataAway[0].BttsPercentage}\n          BttsPercentageHomeOrAway={formDataAway[0].BttsPercentageHomeOrAway}\n          CardsTotal={formDataAway[0].CardsTotal}\n          CornersAverage={formDataAway[0].CornersAverage}\n          ScoredBothHalvesPercentage={\n            formDataAway[0].ScoredBothHalvesPercentage\n          }\n        />,\n        document.getElementById(\"away\" + awayTeam)\n      );\n\n      ReactDOM.render(\n        <Button\n          className=\"MoreStats\"\n          style={style}\n          onClickEvent={() =>\n            getTeamStats(game.id, game.homeTeam, game.awayTeam)\n          }\n          text={\"More detail\"}\n        ></Button>,\n        document.getElementById(`H2HStats${game.id}`)\n      );\n    }\n  }\n}\n","import React, { Fragment } from \"react\";\nimport { CreateBadge } from \"./createBadge\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { createStatsDiv } from \"../logic/getStats\";\nimport { renderTable } from \"../logic/getFixtures\";\n\nlet resultValue;\nconst text =\n  \"XG Tipping formulates predictions based on recent form data ranging from points per game to each teams attacking potency\\n Expected Goals in previous matches are used to determine whether teams might be over or underperforming and predictions are weighted as such\\n Once all fixtures have loaded, click on “Get Predictions”\\n Predictions are displayed on the right and the results on the left\\n Click on an individual fixture for detailed stats for both teams.\";\n\nfunction GetDivider(fixture) {\n  const matchStatus = fixture.status;\n  const isPrediction = resultValue;\n\n  if (isPrediction === false && matchStatus !== \"complete\") {\n    return (\n      <div className=\"divider\" data-cy={\"divider-\" + fixture.fixture.id}>\n        {\"V\"}\n      </div>\n    );\n  } else if (isPrediction === false && matchStatus === \"complete\") {\n    return (\n      <div\n        className=\"Result\"\n        data-cy={\"result-\" + fixture.fixture.id}\n      >{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n    );\n  } else if (isPrediction === true && matchStatus === \"complete\") {\n    let outcome;\n    let prediction;\n\n    switch (true) {\n      case fixture.fixture.homeGoals > fixture.fixture.awayGoals:\n        outcome = 0;\n        fixture.fixture.winner = fixture.fixture.homeTeam;\n        fixture.fixture.outcome = \"homeWin\";\n        break;\n      case fixture.fixture.homeGoals === fixture.fixture.awayGoals:\n        outcome = 1;\n        fixture.fixture.winner = \"draw\";\n        fixture.fixture.outcome = \"draw\";\n\n        break;\n      case fixture.fixture.homeGoals < fixture.fixture.awayGoals:\n        outcome = 2;\n        fixture.fixture.winner = fixture.fixture.awayTeam;\n        fixture.fixture.outcome = \"awayWin\";\n\n        break;\n      default:\n        break;\n    }\n\n    switch (true) {\n      case fixture.fixture.goalsA > fixture.fixture.goalsB:\n        prediction = 0;\n        break;\n      case fixture.fixture.goalsA === fixture.fixture.goalsB:\n        prediction = 1;\n        break;\n      case fixture.fixture.goalsA < fixture.fixture.goalsB:\n        prediction = 2;\n        break;\n      default:\n        break;\n    }\n\n    if (fixture.fixture.homeGoals > 0 && fixture.fixture.awayGoals > 0) {\n      fixture.fixture.bttsOutcome = \"bttsWon\";\n    } else {\n      fixture.fixture.bttsOutcome = \"bttsLost\";\n    }\n\n    if (outcome === prediction) {\n      // console.log(fixture.fixture.game);\n      if (fixture.fixture.homeOdds !== 0) {\n        switch (true) {\n          case outcome === 0:\n            fixture.fixture.profit = fixture.fixture.homeOdds;\n            break;\n          case outcome === 1:\n            fixture.fixture.profit = fixture.fixture.drawOdds;\n            break;\n          case outcome === 2:\n            fixture.fixture.profit = fixture.fixture.awayOdds;\n            break;\n          default:\n            break;\n        }\n      } else fixture.fixture.profit = 1;\n\n      if (\n        fixture.fixture.goalsA === fixture.fixture.homeGoals &&\n        fixture.fixture.goalsB === fixture.fixture.awayGoals\n      ) {\n        fixture.fixture.exactScore = true;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"ExactScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      } else {\n        fixture.fixture.exactScore = false;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"CorrectScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      }\n      // console.log(`profit ${fixture.fixture.profit}`);\n    } else if (outcome !== prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        fixture.fixture.profit = 0;\n      } else {\n        fixture.fixture.profit = 1;\n      }\n      // console.log(fixture.fixture.game);\n      // console.log(`profit ${fixture.fixture.profit}`);\n      fixture.fixture.exactScore = false;\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"IncorrectScore\"\n            key={fixture.fixture.awayTeam}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    }\n  } else {\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  }\n}\n\nfunction getStyle(pointsAverageDiffBool) {\nif(pointsAverageDiffBool === true){\n  return \"individualFixtureGap\"\n} else {\n  return \"individualFixture\";\n}\n}\n\nfunction renderLeagueName(fixture) {\n  let name = fixture.leagueName;\n  if (name === null) {\n    return <div></div>;\n  } else {\n    return (\n      <div>\n        <div\n          className=\"leagueName\"\n          key={`leagueName${fixture.leagueIndex}div`}\n          onClick={() => renderTable(fixture.leagueIndex)}\n        >\n          {fixture.leagueName} &#9776;\n        </div>\n        <div\n          className=\"LeagueTable\"\n          key={`leagueName${fixture.leagueIndex}`}\n          id={`leagueName${fixture.leagueIndex}`}\n        ></div>\n      </div>\n    );\n  }\n}\n\nconst SingleFixture = ({ fixture }) => (\n  <div key={fixture.game}>\n    {renderLeagueName(fixture)}\n    <li\n      className={getStyle(fixture.pointsAverageDiff)}\n      key={fixture.id}\n      onClick={() => createStatsDiv(fixture)}\n      data-cy={fixture.id}\n    >\n      <div className=\"HomeOdds\">{fixture.fractionHome}</div>\n      <div className=\"homeTeam\">{fixture.homeTeam}</div>\n      <GetDivider\n        result={resultValue}\n        status={fixture.status}\n        fixture={fixture}\n      />\n      {/* <div className=\"divider\">{\"V\"}</div> */}\n      <div className=\"awayTeam\">{fixture.awayTeam}</div>\n      <CreateBadge\n        image={fixture.homeBadge}\n        ClassName=\"HomeBadge\"\n        alt=\"Home team badge\"\n        flexShrink={5}\n      />\n      <CreateBadge\n        image={fixture.awayBadge}\n        ClassName=\"AwayBadge\"\n        alt=\"Away team badge\"\n      />\n      <div className=\"AwayOdds\">{fixture.fractionAway}</div>\n    </li>\n    <div className=\"StatsDiv\">\n      <div id={\"stats\" + fixture.homeTeam}></div>\n      <Fragment>\n        <div\n          className=\"StatsContainer\"\n          data-cy={\"StatsContainer-\" + fixture.id}\n        >\n          <div className=\"HomeStats\" id={\"home\" + fixture.homeTeam}></div>\n          <div className=\"AwayStats\" id={\"away\" + fixture.awayTeam}></div>\n        </div>\n      </Fragment>\n      <div className=\"MatchHistory\" id={\"history\" + fixture.homeTeam}></div>\n    </div>\n  </div>\n);\n\nlet newText = text.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nconst List = ({ fixtures }) => (\n  <div>\n    <Fragment>\n      <Collapsable\n        className={\"HowToUse\"}\n        buttonText={\"Show / Hide help\"}\n        text={newText}\n      />\n    </Fragment>\n    <div id=\"Headers\"></div>\n    <ul className=\"FixtureList\" id=\"FixtureList\">\n      {fixtures.map((fixture, i) => (\n        <SingleFixture fixture={fixture} key={fixture.game}/>\n      ))}\n    </ul>\n  </div>\n);\n\nexport function Fixture(props) {\n  resultValue = props.result;\n\n  return <List fixtures={props.fixtures} result={resultValue} />;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { orderedLeagues } from \"../App\";\nimport { getForm, applyColour } from \"./getForm\";\nimport { Fixture } from \"../components/Fixture\";\nimport { Button } from \"../components/Button\";\nimport { getScorePrediction } from \"../logic/getScorePredictions\";\nimport { ThreeDots } from \"react-loading-icons\";\nimport { selectedOdds } from \"../components/OddsRadio\";\nimport LeagueTable from \"../components/LeagueTable\";\n\nvar oddslib = require(\"oddslib\");\n\nrequire(\"dotenv\").config();\n\nvar fixtureResponse;\nvar fixtureArray;\nexport const matches = [];\nexport const resultedMatches = [];\nvar league;\nvar leagueID;\nvar leagueGames = [];\nexport var leagueArray = [];\nvar leagueIdArray = [];\nexport var leagueStatsArray = [];\nexport let leagueInstance;\nvar lastFiveFormHome;\nvar lastFiveFormAway;\nvar lastSixFormHome;\nvar lastSixFormAway;\nvar lastTenFormHome;\nvar lastTenFormAway;\nvar formRunHome;\nvar formRunAway;\n\nexport const [currentDay, month, year] = new Date()\n  .toLocaleDateString(\"en-US\")\n  .split(\"/\");\nlet tomorrowsDate = new Date();\ntomorrowsDate.setDate(new Date().getDate() + 1);\nlet [tomorrowDay, tomorrowMonth, tomorrowYear] = tomorrowsDate\n  .toLocaleDateString(\"en-US\")\n  .split(\"/\");\n\nlet yesterdaysDate = new Date();\nyesterdaysDate.setDate(new Date().getDate() - 1);\nlet [yesterdayDay, yesterdayMonth, yesterdayYear] = yesterdaysDate\n  .toLocaleDateString(\"en-US\")\n  .split(\"/\");\n\nvar d = new Date();\n\n// set to Monday of this week\nd.setDate(d.getDate() - ((d.getDay() + 6) % 7));\n\n// set to Saturday just gone\nd.setDate(d.getDate() - 2);\n\nlet [saturdayDay, saturdayMonth, saturdayYear] = d\n  .toLocaleDateString(\"en-US\")\n  .split(\"/\");\n\nvar historicDate = new Date();\n\n// set to Monday of this week\nhistoricDate.setDate(\n  historicDate.getDate() - ((historicDate.getDay() + 6) % 7)\n);\n\n// set to Saturday prior to last\nhistoricDate.setDate(historicDate.getDate() - 9);\n\nlet [historicDay, historicMonth, historicYear] = historicDate\n  .toLocaleDateString(\"en-US\")\n  .split(\"/\");\n\nexport const saturday = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${saturdayYear}-${saturdayDay}-${saturdayMonth}`;\nexport const historic = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${historicYear}-${historicDay}-${historicMonth}`;\nexport const yesterday = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${yesterdayYear}-${yesterdayDay}-${yesterdayMonth}`;\nexport const today = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${year}-${currentDay}-${month}`;\nexport const tomorrow = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${tomorrowYear}-${tomorrowDay}-${tomorrowMonth}`;\n\nexport function getRadioState(state) {\n  let radioState = state;\n  return radioState;\n}\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nexport let allForm = [];\nexport let tableArray = [];\nleagueInstance = [];\n\nexport async function generateTables(a, leagueIdArray) {\n  let i = 0;\n  leagueArray.forEach(function (league) {\n    let currentLeagueId = leagueIdArray[i];\n    i++;\n    leagueInstance = [];\n    if (!league.data.specific_tables[0].groups) {\n      for (\n        let index = 0;\n        index < league.data.specific_tables[0].table.length;\n        index++\n      ) {\n        let currentTeam = league.data.specific_tables[0].table[index];\n        let last5 = currentTeam.wdl_record.slice(-5);\n        let rawForm = last5.replace(/,/g, \"\").toUpperCase();\n        let form = Array.from(rawForm);\n\n        const team = {\n          LeagueID: currentLeagueId,\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          ID: currentTeam.id,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: `${form[0]}${form[1]}${form[2]}${form[3]}${form[4]}`,\n          Points: currentTeam.points,\n        };\n        leagueInstance.push(team);\n      }\n      tableArray.push(leagueInstance);\n    } else if (league.data.league_table === null) {\n      for (\n        let index = 0;\n        index < league.data.all_matches_table_overall.length;\n        index++\n      ) {\n        let currentTeam = league.data.all_matches_table_overall[index];\n        let last5 = \"N/A\";\n        const team = {\n          LeagueID: currentLeagueId,\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          ID: currentTeam.id,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: last5,\n          Points: currentTeam.points,\n        };\n        leagueInstance.push(team);\n      }\n      tableArray.push(leagueInstance);\n    }\n  });\n}\n\nexport async function renderTable(index) {\n  let league = tableArray[index];\n  let statistics;\n  let leagueStatistics = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}leagueStats/${league[0].LeagueID}`\n  );\n  await leagueStatistics.json().then((stats) => {\n    statistics = stats.data;\n  });\n\n  if (league !== undefined) {\n    ReactDOM.render(\n      <LeagueTable\n        Teams={league}\n        Stats={statistics}\n        Key={`League${index}`}\n        GamesPlayed={statistics.game_week}\n      />,\n      document.getElementById(`leagueName${index}`)\n    );\n  }\n}\n\nasync function createFixture(match, result, mockBool) {\n  let roundedHomeOdds;\n  let roundedAwayOdds;\n  let roundedBTTSOdds;\n  let homeFraction;\n  let awayFraction;\n  let bttsFraction;\n\n  if (selectedOdds === \"Fractional\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      roundedHomeOdds = (Math.round(match.homeOdds * 5) / 5).toFixed(1);\n      roundedAwayOdds = (Math.round(match.awayOdds * 5) / 5).toFixed(1);\n\n      if (roundedHomeOdds < 1.1) {\n        roundedHomeOdds = 1.1;\n      }\n      if (roundedAwayOdds < 1.1) {\n        roundedAwayOdds = 1.1;\n      }\n\n      try {\n        homeFraction = oddslib\n          .from(\"decimal\", roundedHomeOdds)\n          .to(\"fractional\", { precision: 1 });\n        awayFraction = oddslib\n          .from(\"decimal\", roundedAwayOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      roundedBTTSOdds = (Math.round(match.bttsOdds * 5) / 5).toFixed(1);\n\n      if (roundedBTTSOdds < 1.1) {\n        roundedBTTSOdds = 1.1;\n      }\n\n      try {\n        bttsFraction = oddslib\n          .from(\"decimal\", roundedBTTSOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  } else if (selectedOdds === \"Decimal\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      homeFraction = match.homeOdds;\n      awayFraction = match.awayOdds;\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      bttsFraction = match.bttsOdds;\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  }\n\n  match.homeTeamWinsPercentage = match.homeTeamWinPercentage;\n  match.homeTeamLossesPercentage = match.homeTeamLossPercentage;\n  match.homeTeamDrawsPercentage = match.homeTeamDrawPercentage;\n\n  match.awayTeamWinsPercentage = match.awayTeamWinPercentage;\n  match.awayTeamLossesPercentage = match.awayTeamLossPercentage;\n  match.awayTeamDrawsPercentage = match.awayTeamDrawPercentage;\n  match.fractionHome = homeFraction;\n  match.fractionAway = awayFraction;\n\n  match.bttsFraction = bttsFraction;\n\n  match.game = match.homeTeam + \" v \" + match.awayTeam;\n\n  if (mockBool !== true) {\n    ReactDOM.render(\n      <Fixture\n        fixtures={matches}\n        result={result}\n        mock={mockBool}\n        className={\"individualFixture\"}\n      />,\n      document.getElementById(\"FixtureContainer\")\n    );\n  } else if (mockBool === true) {\n    ReactDOM.render(\n      <Fixture\n        fixtures={matches}\n        result={result}\n        mock={mockBool}\n        className={\"individualFixture\"}\n      />,\n      document.getElementById(\"FixtureContainer\")\n    );\n  }\n}\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nexport async function generateFixtures(day, radioState, selectedOdds) {\n  let url;\n  switch (day) {\n    case \"lastSaturday\":\n      url = saturday;\n      break;\n    case \"historic\":\n      url = historic;\n      break;\n    case \"yesterdaysFixtures\":\n      url = yesterday;\n      break;\n    case \"todaysFixtures\":\n      url = today;\n      break;\n    case \"tomorrowsFixtures\":\n      url = tomorrow;\n      break;\n    default:\n      break;\n  }\n\n  fixtureResponse = await fetch(url);\n\n  await fixtureResponse.json().then((fixtures) => {\n    fixtureArray = Array.from(fixtures.data);\n  });\n\n  let form;\n  let formArray;\n  var isFormStored;\n  var isStoredLocally;\n  let storedForm = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}form${day}`,\n    {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n      },\n    }\n  );\n  if (storedForm.status === 201) {\n    await storedForm.json().then((form) => {\n      formArray = Array.from(form.allForm);\n      isFormStored = true;\n      isStoredLocally = false;\n      allForm = formArray;\n    });\n  } else if (storedForm.status === 200) {\n    await storedForm.json().then((form) => {\n      formArray = Array.from(form.allForm);\n      isFormStored = true;\n      isStoredLocally = false;\n      allForm = formArray;\n    });\n  } else {\n    isFormStored = false;\n    isStoredLocally = false;\n  }\n\n  ReactDOM.render(\n    <div>\n      <div className=\"LoadingText\">Loading all league data</div>\n      <ThreeDots height=\"3em\" fill=\"#030061\" />\n    </div>,\n    document.getElementById(\"Buttons\")\n  );\n\n  for (let i = 0; i < orderedLeagues.length; i++) {\n    leagueID = orderedLeagues[i].element.id;\n    leagueIdArray.push(leagueID);\n  }\n\n  league = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${currentDay}${month}${year}`\n  );\n\n  var leaguePositions = [];\n  if (league.status === 200) {\n    await league.json().then((leagues) => {\n      leagueArray = Array.from(leagues.leagueArray);\n    });\n    generateTables(leagueArray, leagueIdArray);\n  } else {\n    for (let i = 0; i < orderedLeagues.length; i++) {\n      league = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}tables/${orderedLeagues[i].element.id}/${currentDay}${month}${year}`\n      );\n      // eslint-disable-next-line no-loop-func\n      await league.json().then((table) => {\n        leagueArray.push(table);\n      });\n      generateTables(leagueArray, leagueIdArray);\n    }\n  }\n\n  for (let i = 0; i < leagueArray.length; i++) {\n    for (\n      let x = 0;\n      x < leagueArray[i].data.all_matches_table_overall.length;\n      x++\n    ) {\n      let string = leagueArray[i].data.all_matches_table_overall[x];\n      let stringHome = leagueArray[i].data.all_matches_table_home[x];\n      let stringAway = leagueArray[i].data.all_matches_table_away[x];\n\n      leaguePositions.push({\n        name: string.cleanName,\n        position: string.position,\n        rawPosition: x + 1,\n        homeFormName: stringHome ? stringHome.cleanName : string.cleanName,\n        awayFormName: stringAway ? stringAway.cleanName : string.cleanName,\n        homeSeasonWinPercentage: stringHome\n          ? stringHome.seasonWins\n          : string.seasonWins,\n        awaySeasonWinPercentage: stringAway\n          ? stringAway.seasonWins\n          : string.seasonWins,\n        homeSeasonLossPercentage: stringHome\n          ? stringHome.seasonLosses_home\n          : string.seasonLosses_home,\n        awaySeasonLossPercentage: stringAway\n          ? stringAway.seasonLosses_away\n          : string.seasonLosses_away,\n        homeSeasonDrawPercentage: stringHome\n          ? stringHome.seasonDraws\n          : string.seasonDraws,\n        awaySeasonDrawPercentage: stringAway\n          ? stringAway.seasonDraws\n          : string.seasonDraws,\n        homeSeasonMatchesPlayed: stringHome\n          ? stringHome.matchesPlayed\n          : string.matchesPlayed,\n        awaySeasonMatchesPlayed: stringAway\n          ? stringAway.matchesPlayed\n          : string.matchesPlayed,\n        ppg: string.ppg_overall,\n      });\n    }\n  }\n\n  let previousLeagueName;\n\n  for (let i = 0; i < orderedLeagues.length; i++) {\n    leagueID = orderedLeagues[i].element.id;\n    leagueGames = fixtureArray.filter(\n      (game) => game.competition_id === orderedLeagues[i].element.id\n    );\n\n    for (const fixture of leagueGames) {\n      const unixTimestamp = fixture.date_unix;\n      const milliseconds = unixTimestamp * 1000;\n      const dateObject = new Date(milliseconds);\n\n      let match = {};\n      if (orderedLeagues[i].name !== previousLeagueName) {\n        match.leagueName = orderedLeagues[i].name;\n        match.leagueIndex = i;\n      } else {\n        match.leagueName = null;\n      }\n      match.id = fixture.id;\n      match.competition_id = fixture.competition_id;\n      match.time = dateObject.toLocaleString(\"en-GB\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      });\n      match.homeTeam = fixture.home_name;\n      match.awayTeam = fixture.away_name;\n      match.homeOdds = fixture.odds_ft_1;\n      match.awayOdds = fixture.odds_ft_2;\n      match.drawOdds = fixture.odds_ft_x;\n      match.homeDoubleChance = fixture.odds_doublechance_1x;\n      match.awayDoubleChance = fixture.odds_doublechance_x2;\n      match.bttsOdds = fixture.odds_btts_yes;\n      match.homeId = fixture.homeID;\n      match.awayId = fixture.awayID;\n      match.form = [];\n      match.homeTeamInfo = [];\n      match.awayTeamInfo = [];\n      match.btts = false;\n\n      previousLeagueName = orderedLeagues[i].name;\n\n      let homeTeaminLeague;\n      let awayTeaminLeague;\n      let teamPositionHome;\n      let teamPositionHomeTable;\n      let teamPositionAwayTable;\n      let homeTeamWinPercentageHome;\n      let awayTeamWinPercentageAway;\n      let homeTeamLossPercentageHome;\n      let awayTeamLossPercentageAway;\n      let homeTeamDrawPercentageHome;\n      let awayTeamDrawPercentageAway;\n      let teamPositionAway;\n      let teamPositionPrefix;\n      let homePrefix;\n      let homePrefixHomeTable;\n      let awayPrefix;\n      let awayPrefixAwayTable;\n      let homeSeasonPPG;\n      let awaySeasonPPG;\n\n      async function getPrefix(position) {\n        switch (position) {\n          case 1:\n          case 21:\n          case 31:\n            teamPositionPrefix = \"st\";\n            break;\n          case 2:\n          case 22:\n          case 32:\n            teamPositionPrefix = \"nd\";\n            break;\n          case 3:\n          case 23:\n          case 33:\n            teamPositionPrefix = \"rd\";\n            break;\n          case 4:\n          case 5:\n          case 6:\n          case 7:\n          case 8:\n          case 9:\n          case 10:\n          case 11:\n          case 12:\n          case 13:\n          case 14:\n          case 15:\n          case 16:\n          case 17:\n          case 18:\n          case 19:\n          case 20:\n          case 24:\n          case 25:\n          case 26:\n          case 27:\n          case 28:\n          case 29:\n          case 30:\n          case 34:\n          case 35:\n          case 36:\n          case 37:\n          case 38:\n          case 39:\n          case 40:\n            teamPositionPrefix = \"th\";\n            break;\n          default:\n            break;\n        }\n        return teamPositionPrefix;\n      }\n\n      try {\n        homeTeaminLeague = leaguePositions.find(\n          (team) => team.name === match.homeTeam\n        );\n\n        let homeTeaminHomeLeague = leaguePositions.find(\n          (team) => team.homeFormName === match.homeTeam\n        );\n\n        teamPositionHome = homeTeaminLeague.position;\n        teamPositionHomeTable = homeTeaminHomeLeague.position;\n\n        homeTeamWinPercentageHome =\n          (homeTeaminHomeLeague.homeSeasonWinPercentage /\n            homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n          100;\n\n        homeTeamLossPercentageHome =\n          (homeTeaminHomeLeague.homeSeasonLossPercentage /\n            homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n          100;\n\n        homeTeamDrawPercentageHome =\n          (homeTeaminHomeLeague.homeSeasonDrawPercentage /\n            homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n          100;\n\n        homePrefix = await getPrefix(teamPositionHome);\n        homePrefixHomeTable = await getPrefix(teamPositionHomeTable);\n\n        homeSeasonPPG = homeTeaminLeague.ppg.toFixed(2);\n      } catch (error) {\n        console.log(error);\n        teamPositionHome = \"N/A\";\n        homePrefix = \"\";\n        homePrefixHomeTable = \"\";\n        homeSeasonPPG = \"N/A\";\n        homeTeaminLeague = {\n          rawPosition: \"N/A\",\n        };\n      }\n\n      try {\n        awayTeaminLeague = leaguePositions.find(\n          (team) => team.name === match.awayTeam\n        );\n\n        let awayTeaminAwayLeague = leaguePositions.find(\n          (team) => team.awayFormName === match.awayTeam\n        );\n\n        teamPositionAway = awayTeaminLeague.position;\n        teamPositionAwayTable = awayTeaminAwayLeague.position;\n\n        awayTeamWinPercentageAway =\n          (awayTeaminAwayLeague.awaySeasonWinPercentage /\n            awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n          100;\n\n        awayTeamLossPercentageAway =\n          (awayTeaminAwayLeague.awaySeasonLossPercentage /\n            awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n          100;\n\n        awayTeamDrawPercentageAway =\n          (awayTeaminAwayLeague.awaySeasonDrawPercentage /\n            awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n          100;\n\n        awayPrefix = await getPrefix(teamPositionAway);\n        awayPrefixAwayTable = await getPrefix(teamPositionAwayTable);\n\n        awaySeasonPPG = awayTeaminLeague.ppg.toFixed(2);\n      } catch (error) {\n        console.log(error);\n        teamPositionAway = \"N/A\";\n        awayPrefix = \"\";\n        awaySeasonPPG = \"N/A\";\n        awayTeaminLeague = {\n          rawPosition: \"N/A\",\n        };\n      }\n\n      if (!isFormStored) {\n        form = await getForm(match);\n\n        // if (\n        //   form[0].data[0].stats.additional_info &&\n        //   form[1].data[0].stats.additional_info\n        // ) {\n\n        //   //get the last 5 games stats from a big block of text\n        //   var homeExtract = form[0].data[0].stats.additional_info.replace(\n        //     /[\"']/g,\n        //     \"\"\n        //   );\n\n        //   var slug = homeExtract.split(\",53:\").pop().toUpperCase();\n        let homeFormString5 =\n          form[0].data[0].stats.additional_info.formRun_overall.toUpperCase();\n        let awayFormString5 =\n          form[1].data[0].stats.additional_info.formRun_overall.toUpperCase();\n        let homeFormString6 =\n          form[0].data[1].stats.additional_info.formRun_overall.toUpperCase();\n        let awayFormString6 =\n          form[1].data[1].stats.additional_info.formRun_overall.toUpperCase();\n        let homeFormString10 =\n          form[0].data[2].stats.additional_info.formRun_overall.toUpperCase();\n        let awayFormString10 =\n          form[1].data[2].stats.additional_info.formRun_overall.toUpperCase();\n\n        let homeFormRun =\n          form[0].data[2].stats.additional_info.formRun_home.toUpperCase();\n        let awayFormRun =\n          form[1].data[2].stats.additional_info.formRun_away.toUpperCase();\n\n        lastFiveFormHome = Array.from(homeFormString5);\n        lastSixFormHome = Array.from(homeFormString6);\n        lastTenFormHome = Array.from(homeFormString10);\n        lastFiveFormAway = Array.from(awayFormString5);\n        lastSixFormAway = Array.from(awayFormString6);\n        lastTenFormAway = Array.from(awayFormString10);\n        formRunHome = Array.from(homeFormRun);\n        formRunAway = Array.from(awayFormRun);\n\n        if (\n          teamPositionHome === 0 ||\n          form[0].data[0].season_format !== \"Domestic League\"\n        ) {\n          teamPositionHome = \"N/A\";\n          teamPositionHomeTable = \"N/A\";\n          homePrefix = \"\";\n          homePrefixHomeTable = \"\";\n        }\n\n        if (\n          teamPositionAway === 0 ||\n          form[0].data[0].season_format !== \"Domestic League\"\n        ) {\n          teamPositionAway = \"N/A\";\n          teamPositionAwayTable = \"N/A\";\n          awayPrefix = \"\";\n          awayPrefixAwayTable = \"\";\n        }\n        // } else {\n        //   lastFiveFormHome = \"N/A\"\n        //   lastFiveFormAway = \"N/A\"\n        // }\n\n        allForm.push({\n          id: match.id,\n          home: {\n            teamName: match.homeTeam,\n            0: {\n              XGOverall: parseFloat(form[0].data[0].stats.xg_for_avg_overall),\n              XG: parseFloat(form[0].data[0].stats.xg_for_avg_home),\n              ScoredOverall: parseFloat(\n                form[0].data[0].stats.seasonScoredNum_overall\n              ),\n              ScoredAverage: parseFloat(\n                form[0].data[0].stats.seasonScoredAVG_home\n              ),\n              PlayedHome: parseFloat(\n                form[0].data[0].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[0].data[0].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[0].data[0].stats.seasonConcededNum_overall\n              ),\n              ConcededAverage: parseFloat(\n                form[0].data[0].stats.seasonConcededAVG_home\n              ),\n              XGAgainstAvgOverall: parseFloat(\n                form[0].data[0].stats.xg_against_avg_overall\n              ),\n              XGAgainstAverage: parseFloat(\n                form[0].data[0].stats.xg_against_avg_home\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[0].data[0].stats.seasonCSPercentage_home\n              ),\n              AveragePossessionOverall: parseFloat(\n                form[0].data[0].stats.possessionAVG_overall\n              ),\n              AveragePossession: parseFloat(\n                form[0].data[0].stats.possessionAVG_home\n              ),\n              AverageShotsOnTargetOverall: parseFloat(\n                form[0].data[0].stats.shotsOnTargetAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[0].data[0].stats.shotsOnTargetAVG_home\n              ),\n              AverageDangerousAttacksOverall: parseFloat(\n                form[0].data[0].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[0].data[0].stats.seasonPPG_home),\n              AttacksHome: parseFloat(form[0].data[0].stats.attacks_avg_home),\n              AttacksAway: parseFloat(form[0].data[0].stats.attacks_avg_away),\n              AverageDangerousAttacks: parseFloat(\n                form[0].data[0].stats.dangerous_attacks_avg_home\n              ),\n              homeAttackAdvantage: parseFloat(\n                form[0].data[0].stats.homeAttackAdvantage\n              ),\n              homeDefenceAdvantage: parseFloat(\n                form[0].data[0].stats.homeDefenceAdvantage\n              ),\n              BTTSPercentage: parseInt(\n                form[0].data[0].stats.seasonBTTSPercentage_home\n              ),\n              LastFiveForm: lastFiveFormHome,\n              LastSixForm: lastSixFormHome,\n              LastTenForm: lastTenFormHome,\n              LeaguePosition: `${teamPositionHome}${homePrefix}`,\n              homeRawPosition: homeTeaminLeague.rawPosition\n                ? homeTeaminLeague.rawPosition\n                : 0,\n              homeTeamHomePositionRaw: teamPositionHomeTable,\n              SeasonPPG: homeSeasonPPG,\n            },\n            1: {\n              XGOverall: parseFloat(form[0].data[1].stats.xg_for_avg_overall),\n              XG: parseFloat(form[0].data[1].stats.xg_for_avg_home),\n              ScoredOverall: parseFloat(\n                form[0].data[1].stats.seasonScoredNum_overall\n              ),\n              ScoredAverage: parseFloat(\n                form[0].data[1].stats.seasonScoredAVG_home\n              ),\n              PlayedHome: parseFloat(\n                form[0].data[1].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[0].data[1].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[0].data[1].stats.seasonConcededNum_overall\n              ),\n              ConcededAverage: parseFloat(\n                form[0].data[1].stats.seasonConcededAVG_home\n              ),\n              XGAgainstAvgOverall: parseFloat(\n                form[0].data[1].stats.xg_against_avg_overall\n              ),\n              XGAgainstAverage: parseFloat(\n                form[0].data[1].stats.xg_against_avg_home\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[0].data[1].stats.seasonCSPercentage_home\n              ),\n              AveragePossessionOverall: parseFloat(\n                form[0].data[1].stats.possessionAVG_overall\n              ),\n              AveragePossession: parseFloat(\n                form[0].data[1].stats.possessionAVG_home\n              ),\n              AverageShotsOnTargetOverall: parseFloat(\n                form[0].data[1].stats.shotsOnTargetAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[0].data[1].stats.shotsOnTargetAVG_home\n              ),\n              AverageDangerousAttacksOverall: parseFloat(\n                form[0].data[1].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[0].data[1].stats.seasonPPG_home),\n              AttacksHome: parseFloat(form[0].data[1].stats.attacks_avg_home),\n              AttacksAway: parseFloat(form[0].data[1].stats.attacks_avg_away),\n              AverageDangerousAttacks: parseFloat(\n                form[0].data[1].stats.dangerous_attacks_avg_home\n              ),\n              homeAttackAdvantage: parseFloat(\n                form[0].data[1].stats.homeAttackAdvantage\n              ),\n              homeDefenceAdvantage: parseFloat(\n                form[0].data[1].stats.homeDefenceAdvantage\n              ),\n              BTTSPercentage: parseInt(\n                form[0].data[1].stats.seasonBTTSPercentage_home\n              ),\n              LastFiveForm: lastFiveFormHome,\n              LastSixForm: lastSixFormHome,\n              LastTenForm: lastTenFormHome,\n              LeaguePosition: `${teamPositionHome}${homePrefix}`,\n              homeRawPosition: homeTeaminLeague.rawPosition\n                ? homeTeaminLeague.rawPosition\n                : 0,\n              homeTeamHomePositionRaw: teamPositionHomeTable,\n              SeasonPPG: homeSeasonPPG,\n            },\n            2: {\n              XGOverall: parseFloat(form[0].data[2].stats.xg_for_avg_overall),\n              XG: parseFloat(form[0].data[2].stats.xg_for_avg_home),\n              ScoredOverall: parseFloat(\n                form[0].data[2].stats.seasonScoredNum_overall\n              ),\n              ScoredAverage: parseFloat(\n                form[0].data[2].stats.seasonScoredAVG_home\n              ),\n              PlayedHome: parseFloat(\n                form[0].data[2].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[0].data[2].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[0].data[2].stats.seasonConcededNum_overall\n              ),\n              ConcededAverage: parseFloat(\n                form[0].data[2].stats.seasonConcededAVG_home\n              ),\n              XGAgainstAvgOverall: parseFloat(\n                form[0].data[2].stats.xg_against_avg_overall\n              ),\n              XGAgainstAverage: parseFloat(\n                form[0].data[2].stats.xg_against_avg_home\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[0].data[2].stats.seasonCSPercentage_home\n              ),\n              AveragePossessionOverall: parseFloat(\n                form[0].data[2].stats.possessionAVG_overall\n              ),\n              AveragePossession: parseFloat(\n                form[0].data[2].stats.possessionAVG_home\n              ),\n              AverageShotsOnTargetOverall: parseFloat(\n                form[0].data[2].stats.shotsOnTargetAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[0].data[2].stats.shotsOnTargetAVG_home\n              ),\n              AverageDangerousAttacksOverall: parseFloat(\n                form[0].data[2].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[0].data[2].stats.seasonPPG_home),\n              AttacksHome: parseFloat(form[0].data[2].stats.attacks_avg_home),\n              AttacksAway: parseFloat(form[0].data[2].stats.attacks_avg_away),\n              AverageDangerousAttacks: parseFloat(\n                form[0].data[2].stats.dangerous_attacks_avg_home\n              ),\n              homeAttackAdvantage: parseFloat(\n                form[0].data[2].stats.homeAttackAdvantage\n              ),\n              homeDefenceAdvantage: parseFloat(\n                form[0].data[2].stats.homeDefenceAdvantage\n              ),\n              BTTSPercentage: parseInt(\n                form[0].data[2].stats.seasonBTTSPercentage_home\n              ),\n              LastFiveForm: lastFiveFormHome,\n              LastSixForm: lastSixFormHome,\n              LastTenForm: lastTenFormHome,\n              LeaguePosition: `${teamPositionHome}${homePrefix}`,\n              homeRawPosition: homeTeaminLeague.rawPosition\n                ? homeTeaminLeague.rawPosition\n                : 0,\n              homeTeamHomePositionRaw: teamPositionHomeTable,\n              SeasonPPG: homeSeasonPPG,\n              WinPercentage: homeTeamWinPercentageHome,\n              LossPercentage: homeTeamLossPercentageHome,\n              DrawPercentage: homeTeamDrawPercentageHome,\n              formRun: formRunHome,\n              goalDifference:\n                form[0].data[2].stats.seasonGoalDifference_overall,\n              goalDifferenceHomeOrAway:\n                form[0].data[2].stats.seasonGoalDifference_home,\n              BttsPercentage:\n                form[0].data[2].stats.seasonBTTSPercentage_overall,\n              BttsPercentageHomeOrAway:\n                form[0].data[2].stats.seasonBTTSPercentage_home,\n              CardsTotal: form[0].data[2].stats.cardsTotal_overall,\n              CornersAverage: form[0].data[2].stats.cornersAVG_overall,\n              ScoredBothHalvesPercentage:\n                form[0].data[2].stats.scoredBothHalvesPercentage_overall,\n            },\n          },\n          away: {\n            teamName: match.awayTeam,\n            0: {\n              XGOverall: parseFloat(form[1].data[0].stats.xg_for_avg_overall),\n              XG: parseFloat(form[1].data[0].stats.xg_for_avg_away),\n              ScoredOverall: parseFloat(\n                form[1].data[0].stats.seasonScoredNum_overall\n              ),\n              ScoredAverage: parseFloat(\n                form[1].data[0].stats.seasonScoredAVG_away\n              ),\n              PlayedHome: parseFloat(\n                form[1].data[0].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[1].data[0].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[1].data[0].stats.seasonConcededNum_overall\n              ),\n              ConcededAverage: parseFloat(\n                form[1].data[0].stats.seasonConcededAVG_away\n              ),\n              XGAgainstAvgOverall: parseFloat(\n                form[1].data[0].stats.xg_against_avg_overall\n              ),\n              XGAgainstAverage: parseFloat(\n                form[1].data[0].stats.xg_against_avg_away\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[1].data[0].stats.seasonCSPercentage_away\n              ),\n              AveragePossessionOverall: parseFloat(\n                form[1].data[0].stats.possessionAVG_overall\n              ),\n              AveragePossession: parseFloat(\n                form[1].data[0].stats.possessionAVG_away\n              ),\n              AverageShotsOnTargetOverall: parseFloat(\n                form[1].data[0].stats.shotsOnTargetAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[1].data[0].stats.shotsOnTargetAVG_away\n              ),\n              AverageDangerousAttacksOverall: parseFloat(\n                form[1].data[0].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[1].data[0].stats.seasonPPG_away),\n              AttacksAverage: parseFloat(\n                form[1].data[0].stats.attacks_avg_away\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[1].data[0].stats.dangerous_attacks_avg_away\n              ),\n              BTTSPercentage: parseInt(\n                form[1].data[0].stats.seasonBTTSPercentage_away\n              ),\n              LastFiveForm: lastFiveFormAway,\n              LastSixForm: lastSixFormAway,\n              LastTenForm: lastTenFormAway,\n              LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n              awayRawPosition: awayTeaminLeague.rawPosition\n                ? awayTeaminLeague.rawPosition\n                : 0,\n              awayTeamAwayPositionRaw: teamPositionAwayTable,\n              SeasonPPG: awaySeasonPPG,\n            },\n            1: {\n              XGOverall: parseFloat(form[1].data[1].stats.xg_for_avg_overall),\n              XG: parseFloat(form[1].data[1].stats.xg_for_avg_away),\n              ScoredOverall: parseFloat(\n                form[1].data[1].stats.seasonScoredNum_overall\n              ),\n              ScoredAverage: parseFloat(\n                form[1].data[1].stats.seasonScoredAVG_away\n              ),\n              PlayedHome: parseFloat(\n                form[1].data[1].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[1].data[1].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[1].data[1].stats.seasonConcededNum_overall\n              ),\n              ConcededAverage: parseFloat(\n                form[1].data[1].stats.seasonConcededAVG_away\n              ),\n              XGAgainstAvgOverall: parseFloat(\n                form[1].data[1].stats.xg_against_avg_overall\n              ),\n              XGAgainstAverage: parseFloat(\n                form[1].data[1].stats.xg_against_avg_away\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[1].data[1].stats.seasonCSPercentage_away\n              ),\n              AveragePossessionOverall: parseFloat(\n                form[1].data[1].stats.possessionAVG_overall\n              ),\n              AveragePossession: parseFloat(\n                form[1].data[1].stats.possessionAVG_away\n              ),\n              AverageShotsOnTargetOverall: parseFloat(\n                form[1].data[1].stats.shotsOnTargetAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[1].data[1].stats.shotsOnTargetAVG_away\n              ),\n              AverageDangerousAttacksOverall: parseFloat(\n                form[1].data[1].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[1].data[1].stats.seasonPPG_away),\n              AttacksAverage: parseFloat(\n                form[1].data[1].stats.attacks_avg_away\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[1].data[1].stats.dangerous_attacks_avg_away\n              ),\n              BTTSPercentage: parseInt(\n                form[1].data[1].stats.seasonBTTSPercentage_away\n              ),\n              LastFiveForm: lastFiveFormAway,\n              LastSixForm: lastSixFormAway,\n              LastTenForm: lastTenFormAway,\n              LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n              awayRawPosition: awayTeaminLeague.rawPosition\n                ? awayTeaminLeague.rawPosition\n                : 0,\n              awayTeamAwayPositionRaw: teamPositionAwayTable,\n              SeasonPPG: awaySeasonPPG,\n            },\n            2: {\n              XGOverall: parseFloat(form[1].data[2].stats.xg_for_avg_overall),\n              XG: parseFloat(form[1].data[2].stats.xg_for_avg_away),\n              ScoredOverall: parseFloat(\n                form[1].data[2].stats.seasonScoredNum_overall\n              ),\n              ScoredAverage: parseFloat(\n                form[1].data[2].stats.seasonScoredAVG_away\n              ),\n              PlayedHome: parseFloat(\n                form[1].data[2].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[1].data[2].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[1].data[2].stats.seasonConcededNum_overall\n              ),\n              ConcededAverage: parseFloat(\n                form[1].data[2].stats.seasonConcededAVG_away\n              ),\n              XGAgainstAvgOverall: parseFloat(\n                form[1].data[2].stats.xg_against_avg_overall\n              ),\n              XGAgainstAverage: parseFloat(\n                form[1].data[2].stats.xg_against_avg_away\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[1].data[2].stats.seasonCSPercentage_away\n              ),\n              AveragePossessionOverall: parseFloat(\n                form[1].data[2].stats.possessionAVG_overall\n              ),\n              AveragePossession: parseFloat(\n                form[1].data[2].stats.possessionAVG_away\n              ),\n              AverageShotsOnTargetOverall: parseFloat(\n                form[1].data[2].stats.shotsOnTargetAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[1].data[2].stats.shotsOnTargetAVG_away\n              ),\n              AverageDangerousAttacksOverall: parseFloat(\n                form[1].data[2].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[1].data[2].stats.seasonPPG_away),\n              AttacksAverage: parseFloat(\n                form[1].data[2].stats.attacks_avg_away\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[1].data[2].stats.dangerous_attacks_avg_away\n              ),\n              BTTSPercentage: parseInt(\n                form[1].data[2].stats.seasonBTTSPercentage_away\n              ),\n              LastFiveForm: lastFiveFormAway,\n              LastSixForm: lastSixFormAway,\n              LastTenForm: lastTenFormAway,\n              LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n              awayRawPosition: awayTeaminLeague.rawPosition\n                ? awayTeaminLeague.rawPosition\n                : 0,\n              awayTeamAwayPositionRaw: teamPositionAwayTable,\n              SeasonPPG: awaySeasonPPG,\n              WinPercentage: awayTeamWinPercentageAway,\n              LossPercentage: awayTeamLossPercentageAway,\n              DrawPercentage: awayTeamDrawPercentageAway,\n              formRun: formRunAway,\n              goalDifference:\n                form[1].data[2].stats.seasonGoalDifference_overall,\n              goalDifferenceHomeOrAway:\n                form[1].data[2].stats.seasonGoalDifference_away,\n              BttsPercentage:\n                form[1].data[2].stats.seasonBTTSPercentage_overall,\n              BttsPercentageHomeOrAway:\n                form[1].data[2].stats.seasonBTTSPercentage_away,\n              CardsTotal: form[1].data[2].stats.cardsTotal_overall,\n              CornersAverage: form[1].data[2].stats.cornersAVG_overall,\n              ScoredBothHalvesPercentage:\n                form[1].data[2].stats.scoredBothHalvesPercentage_overall,\n            },\n          },\n        });\n      }\n\n      match.homeBadge = fixture.home_image;\n      match.awayBadge = fixture.away_image;\n\n      match.homePpg = fixture.home_ppg.toFixed(2);\n      match.homeFormColour = await applyColour(match.homePpg);\n\n      match.awayPpg = fixture.away_ppg.toFixed(2);\n      match.awayFormColour = await applyColour(match.awayPpg);\n\n      match.lastFiveFormHome = lastFiveFormHome;\n      match.lastFiveFormAway = lastFiveFormAway;\n\n      match.homeRawPosition = homeTeaminLeague.rawPosition;\n      match.awayRawPosition = awayTeaminLeague.rawPosition;\n\n      match.homeTeamHomePosition = `${teamPositionHomeTable}${homePrefixHomeTable}`;\n      match.awayTeamAwayPosition = `${teamPositionAwayTable}${awayPrefixAwayTable}`;\n\n      match.homeTeamHomePositionRaw = teamPositionHomeTable;\n      match.awayTeamAwayPositionRaw = teamPositionAwayTable;\n\n      match.homeTeamWinPercentage = homeTeamWinPercentageHome;\n      match.awayTeamWinPercentage = awayTeamWinPercentageAway;\n\n      match.homeTeamLossPercentage = homeTeamLossPercentageHome;\n      match.awayTeamLossPercentage = awayTeamLossPercentageAway;\n\n      match.homeTeamDrawPercentage = homeTeamDrawPercentageHome;\n      match.awayTeamDrawPercentage = awayTeamDrawPercentageAway;\n\n      match.status = fixture.status;\n\n      match.btts_potential = fixture.btts_potential;\n      match.game = match.homeTeam + \" v \" + match.awayTeam;\n\n      match.homeGoals = fixture.homeGoalCount;\n      match.awayGoals = fixture.awayGoalCount;\n\n      match.expectedGoalsHomeToDate = fixture.team_a_xg_prematch;\n      match.expectedGoalsAwayToDate = fixture.team_b_xg_prematch;\n\n      if (match.status !== \"canceled\" || match.status !== \"suspended\") {\n        matches.push(match);\n        await createFixture(match, false);\n      }\n    }\n    // }\n    ReactDOM.render(\n      <Button\n        text={\"Generate predictions\"}\n        onClickEvent={() => getScorePrediction(day)}\n      />,\n      document.getElementById(\"Buttons\")\n    );\n  }\n  if (!isStoredLocally) {\n    await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}allForm${day}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ allForm }),\n    });\n  }\n  await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${currentDay}${month}${year}`,\n    {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ leagueArray }),\n    }\n  );\n\n  // await fetch(\n  //   `${process.env.REACT_APP_EXPRESS_SERVER}leagueStats/${currentDay}${month}${year}`,\n  //   {\n  //     method: \"POST\",\n  //     headers: {\n  //       Accept: \"application/json\",\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify({ leagueStatsArray }),\n  //   }\n  // );\n}\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst StyledTableCell2 = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#030061\",\n    color: \"white\",\n    padding: \"0.35em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    textAlign: \"left\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    fontSize: \"1.9em\",\n    textAlign: \"left\",\n    fontFamily: \"inherit\",\n    padding: \"0.35em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"white\",\n  },\n}))(TableCell);\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#030061\",\n    color: \"white\",\n    padding: \"0.35em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    textAlign: \"center\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    // backgroundColor: \"#030061\",\n    fontSize: \"1.9em\",\n    textAlign: \"center\",\n    fontFamily: \"inherit\",\n    padding: \"0.35em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"white\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#030061\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#030052\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\nfunction styleForm(formIndicator) {\n  let className;\n  if (formIndicator === \"W\") {\n    className = \"winLeague\";\n  } else if (formIndicator === \"D\") {\n    className = \"drawLeague\";\n  } else if (formIndicator === \"L\") {\n    className = \"lossLeague\";\n  }\n  return className;\n}\n\nexport default function LeagueTable(props) {\n  let rows = props.Teams.map((team, i) => (\n    <StyledTableRow key={`${props.Key}row${i}`}>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Position}`}\n      </StyledTableCell>\n      <StyledTableCell2 component=\"th\" scope=\"row\">\n        {`${team.Name}`}\n      </StyledTableCell2>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Played}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Wins}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Draws}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Losses}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.For}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Against}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.GoalDifference}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Points}`}\n      </StyledTableCell>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ textAlign: \"center\" }}\n      >\n        <span className={styleForm(team.Form[0])}>{team.Form[0]}</span>\n        <span className={styleForm(team.Form[1])}>{team.Form[1]}</span>\n        <span className={styleForm(team.Form[2])}>{team.Form[2]}</span>\n        <span className={styleForm(team.Form[3])}>{team.Form[3]}</span>\n        <span className={styleForm(team.Form[4])}>{team.Form[4]}</span>\n      </StyledTableCell>\n    </StyledTableRow>\n  ));\n\n  function getTopScorersTeam(id) {\n    let found = props.Teams.find((team) => team.ID === id);\n    return found.Name;\n  }\n\n  if (\n    props.GamesPlayed > 3 &&\n    props.Teams[0].LeagueID !== 4340 &&\n    props.Teams[0].LeagueID !== 6969\n  ) {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table\n            className=\"Table\"\n            aria-label=\"customized table\"\n            key={props.Key}\n            style={{ marginTop: \"2em\", marginBottom: \"1em\" }}\n          >\n            <TableHead>\n              <TableRow>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <StyledTableCell>Pts</StyledTableCell>\n                <StyledTableCell style={{ textAlign: \"center\" }}>\n                  Last 5\n                </StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n          <div className=\"LeagueStatisticsHeader\">League Statistics</div>\n          <div className=\"LeagueStatistics\">\n            <ul className=\"LeagueStatsColumn\">\n              <li>Average home goals: {props.Stats.seasonAVG_home}</li>\n              <li>Average away goals: {props.Stats.seasonAVG_away}</li>\n              <li>BTTS: {props.Stats.seasonBTTSPercentage}%</li>\n              <li>\n                Over 0.5 goals: {props.Stats.seasonOver05Percentage_overall}%\n              </li>\n              <li>\n                Over 1.5 goals: {props.Stats.seasonOver15Percentage_overall}%\n              </li>\n              <li>\n                Over 2.5 goals: {props.Stats.seasonOver25Percentage_overall}%\n              </li>\n              <li>\n                Over 3.5 goals: {props.Stats.seasonOver35Percentage_overall}%\n              </li>\n              <li>\n                Over 4.5 goals: {props.Stats.seasonOver45Percentage_overall}%\n              </li>\n            </ul>\n            <ul className=\"LeagueStatsColumn\">\n              <li>\n                Over 7.5 corners: {props.Stats.over75CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 8.5 corners: {props.Stats.over85CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 9.5 corners: {props.Stats.over95CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 10.5 corners:{\" \"}\n                {props.Stats.over105CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 11.5 corners:{\" \"}\n                {props.Stats.over115CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 12.5 corners:{\" \"}\n                {props.Stats.over125CornersPercentage_overall}%\n              </li>\n              <li>Corners average: {props.Stats.cornersAVG_overall}</li>\n              <li>Cards average: {props.Stats.cardsAVG_overall}</li>\n            </ul>\n            <ul className=\"TopScorersColumn\">\n              <h4>Top scorers</h4>\n              <li>\n                {props.Stats.top_scorers[0].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[0].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[0].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[1].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[1].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[1].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[2].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[2].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[2].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[3].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[3].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[3].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[4].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[4].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[4].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[5].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[5].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[5].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[6].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[6].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[6].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[7].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[7].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[7].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[8].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[8].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[8].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[9].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[9].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[9].goals_overall}\n              </li>\n            </ul>\n          </div>\n        </TableContainer>\n      );\n    }\n  } else if (props.Teams[0].LeagueID === 4340) {\n    return null;\n  } else {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table aria-label=\"customized table\" key={props.Key}>\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>P</StyledTableCell>\n                <StyledTableCell>Team</StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <StyledTableCell>Pts</StyledTableCell>\n                <StyledTableCell style={{ textAlign: \"center\" }}>\n                  Form\n                </StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n        </TableContainer>\n      );\n    }\n  }\n}\n","import React, { Component } from \"react\";\nexport var selectedOption = \"5\";\n\nexport var fixtureList = [];\n\nexport class Radio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOption: this.props.value,\n    };\n  }\n\n  handleOptionChange = () => {\n    this.setState({\n      selectedOption: this.props.value,\n    });\n    selectedOption = this.state.selectedOption;\n  };\n\n  render() {\n    return (\n      <section className=\"dark\">\n        <div className={this.props.className}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"lastGames\"\n              checked={this.state.checked}\n              onChange={this.handleOptionChange}\n              data-cy={this.props.value}\n            />\n            <span className=\"design\"></span>\n            <span className=\"text\">Last {this.props.value} games</span>\n          </label>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Radio;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./components/Header\";\nimport { Button } from \"./components/Button\";\nimport OddsRadio from \"./components/OddsRadio\";\nimport { selectedOdds } from \"./components/OddsRadio\";\nimport { StyledKofiButton } from \"./components/KofiButton\";\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  RedditShareButton,\n  RedditIcon,\n  TelegramShareButton,\n  TelegramIcon,\n  TwitterShareButton,\n  TwitterIcon,\n  WhatsappShareButton,\n  WhatsappIcon,\n} from \"react-share\";\n\nimport { generateFixtures } from \"./logic/getFixtures\";\nimport { selectedOption } from \"./components/radio\";\nimport { ThreeDots } from \"react-loading-icons\";\nimport reactDom from \"react-dom\";\nrequire(\"dotenv\").config();\n\nexport const proxyurl = \"https://safe-caverns-99679.herokuapp.com/\";\nexport var fixtureList = [];\nexport let allLeagueData = [];\n\nexport const availableLeagues = [];\nexport var orderedLeagues = [];\n\nasync function getHighestScoringTeams() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}over25`);\n  let arr = [];\n  let bestO25Bets;\n  await teamsList.json().then(async (teams) => {\n    console.log(teams.data);\n    for (let index = 0; index < 50; index++) {\n      const game = {\n        game: teams.data.top_fixtures.data[index].name,\n        teamCountry: teams.data.top_fixtures.data[index].country,\n        odds: teams.data.top_fixtures.data[index].odds_ft_over25,\n        averageGoals: teams.data.top_fixtures.data[index].avg_potential,\n        timestamp: await getMatchTime(\n          teams.data.top_fixtures.data[index].date_unix\n        ),\n      };\n      arr.push(game);\n    }\n\n    const finalArray = arr.filter(\n      (country) =>\n        country.teamCountry === \"England\" ||\n        country.teamCountry === \"Germany\" ||\n        country.teamCountry === \"Italy\" ||\n        country.teamCountry === \"France\" ||\n        country.teamCountry === \"Spain\"\n    );\n\n    bestO25Bets = finalArray.filter((game) => game.odds > 1.5);\n  });\n\n  let sortedArray = bestO25Bets.sort((a, b) => b.averageGoals - a.averageGoals);\n\n  return sortedArray;\n}\n\nasync function getLowestScoringTeams() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}under25`);\n  let arr = [];\n  let bestU25Bets;\n  await teamsList.json().then(async (teams) => {\n    console.log(teams.data);\n    for (let index = 0; index < 50; index++) {\n      const game = {\n        game: teams.data.top_fixtures.data[index].name,\n        teamCountry: teams.data.top_fixtures.data[index].country,\n        odds: teams.data.top_fixtures.data[index].odds_ft_under25,\n        averageGoals: teams.data.top_fixtures.data[index].avg_potential,\n        timestamp: await getMatchTime(\n          teams.data.top_fixtures.data[index].date_unix\n        ),\n      };\n      arr.push(game);\n    }\n\n    const finalArray = arr.filter(\n      (country) =>\n        country.teamCountry === \"England\" ||\n        country.teamCountry === \"Germany\" ||\n        country.teamCountry === \"Italy\" ||\n        country.teamCountry === \"France\" ||\n        country.teamCountry === \"Spain\"\n    );\n\n    bestU25Bets = finalArray.filter((game) => game.odds > 1.5);\n  });\n  let sortedArray = bestU25Bets.sort((a, b) => a.averageGoals - b.averageGoals);\n\n  return sortedArray;\n}\n\nasync function getMatchTime(unixTime) {\n  let milliseconds = unixTime * 1000;\n  let dateObject = new Date(milliseconds);\n\n  let time = dateObject.toLocaleString(\"en-GB\");\n  return time;\n}\n\n(async function getLeagueList() {\n  let leagueList;\n\n  leagueList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}leagueList`);\n\n  // ReactDOM.render(\n  //   <div className=\"LoadingText\">\n  //     Loading form data. This might take a while if you're the first user\n  //     today...\n  //   </div>,\n  //   document.getElementById(\"RadioButtons\")\n  // );\n\n  let leagueArray;\n  await leagueList.json().then((leagues) => {\n    leagueArray = Array.from(leagues.data);\n  });\n\n  for (let i = 0; i < leagueArray.length; i++) {\n    const league = leagueArray[i];\n    const name = leagueArray[i].name;\n\n    for (let x = 0; x < league.season.length; x++) {\n      const element = league.season[x];\n\n      if (element.year === 2022 || element.year === 20222023) {\n        if (element.id !== 5784) {\n          availableLeagues.push({ name: name, element });\n        }\n      }\n    }\n\n    async function mapOrder(array, order, key) {\n      array.sort(function (a, b) {\n        var A = a.element[key],\n          B = b.element[key];\n\n        if (order.indexOf(A) > order.indexOf(B)) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n      return array;\n    }\n\n    //leagues ordered by id\n    var leagueOrder = [\n      6135, //premier league 21/22\n      6089, //championship\n      6017, //league 1 21/22\n      6015, //league 2 21/22\n      6088, //National league 21/22\n      6211, //\n      5992, //Scottish Prem 21/22\n      6192, //\n      7608, //Serie A 22/23\n      7500, //French Prem 22/23\n      6117, //Portagul Prem 21/22\n      7482, //Dutch Prem 22/23\n      7544, //Belgian Pro League 22/23\n      7064, //sweden 22\n      7426, //Danish Prem 22/23\n      7048, //Norway Prem 21\n      6008, //Austrian Prem 21\n      6282, //Greek Prem 21\n      7428, //Polish prem 22/23\n      6967, //Irish Prem 22\n      4340, //Womens Euros 22\n      7592, //Spanish secunda 22/23\n      6205, //Italy serie B 21/22\n      7499, //Bundesliga 2 22/23\n      7591, //German 3rd tier 22/23\n      7501, //French League 2 22/23\n      7498, //Scottish Championship 22/23\n      7505, //Scottish league 1 22/23\n      7506, //Scottish league 2 22/23\n      6173, //Women's prem 21/22\n      6969, //MLS 22\n      6639, //Australian A league 21/22\n      7097, //Brazil prem 22\n      6935, //Japan 22\n      7061, //S Korea 22\n      7425, //Mexico prem 22/23\n      6083, //National league North and South 21/22\n    ];\n\n    orderedLeagues = await mapOrder(availableLeagues, leagueOrder, \"id\");\n  }\n\n  // ReactDOM.render(\n  //   <div className=\"LastXGames\">\n  //     <Radio\n  //       value=\"5\"\n  //       label=\"form based on last 5 games\"\n  //       className=\"FormRadio\"\n  //     />\n  //     <Radio\n  //       value=\"6\"\n  //       label=\"form based on last 6 games\"\n  //       className=\"FormRadio\"\n  //     />\n  //     <Radio\n  //       value=\"10\"\n  //       label=\"form based on last 10 games\"\n  //       className=\"FormRadio\"\n  //     />\n  //   </div>,\n  //   document.getElementById(\"RadioButtons\")\n  // );\n\n  // ReactDOM.render(\n  //   <TextBlock\n  //     text=\"Select how many games you would like to fetch form data for\"\n  //     className=\"RadioText\"\n  //   />,\n  //   document.getElementById(\"RadioText\")\n  // );\n\n  ReactDOM.render(\n    <div className=\"FixtureButtons\">\n      <div className=\"historicResults\">\n        <Button\n          text={\"Last Saturday\"}\n          className=\"HistoricFixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"lastSaturday\",\n                selectedOption,\n                selectedOdds\n              )\n            )\n          }\n        />\n        <Button\n          text={\"Historic predictions\"}\n          className=\"HistoricFixturesButtonRight\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\"historic\", selectedOption, selectedOdds)\n            )\n          }\n        />\n      </div>\n      <Button\n        text={\"Yesterday\"}\n        className=\"FixturesButton\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"yesterdaysFixtures\",\n              selectedOption,\n              selectedOdds\n            )\n          )\n        }\n      />\n      <Button\n        text={\"Today\"}\n        className=\"FixturesButton\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"todaysFixtures\",\n              selectedOption,\n              selectedOdds\n            )\n          )\n        }\n      />\n      <Button\n        text={\"Tomorrow\"}\n        className=\"FixturesButton\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"tomorrowsFixtures\",\n              selectedOption,\n              selectedOdds\n            )\n          )\n        }\n      />\n    </div>,\n    document.getElementById(\"Buttons\")\n  );\n  ReactDOM.render(\n    <div className=\"OddsRadios\">\n      <OddsRadio value=\"Fractional\"></OddsRadio>\n      <OddsRadio value=\"Decimal\"></OddsRadio>\n    </div>,\n    document.getElementById(\"Checkbox\")\n  );\n\n  ReactDOM.render(\n    <Button\n      text={\"Best value for under 2.5 goals\"}\n      className={\"Under25TeamsButton\"}\n      onClickEvent={async () => {\n        let games = await getLowestScoringTeams();\n        const teamList = [];\n\n        games.forEach(async (game) =>\n          teamList.push(\n            <ul className=\"GlobalStat\">\n              <p className=\"TeamName\">\n                {game.game} ({game.teamCountry})\n              </p>\n              <li>{game.timestamp}</li>\n              <li>Average combined goals: {game.averageGoals}</li>\n              <li>Odds under 2.5 goals: {game.odds}</li>\n            </ul>\n          )\n        );\n\n        reactDom.render(\n          <div>\n            <h3>Games featuring low scoring teams with high value odds</h3>\n            <ul>{teamList}</ul>\n          </div>,\n          document.getElementById(\"Under25Games\")\n        );\n      }}\n    ></Button>,\n    document.getElementById(\"Under25Games\")\n  );\n\n  ReactDOM.render(\n    <Button\n      text={\"Best value for over 2.5 goals\"}\n      className={\"Over25TeamsButton\"}\n      onClickEvent={async () => {\n        let games = await getHighestScoringTeams();\n        const teamList = [];\n\n        games.forEach(async (game) =>\n          teamList.push(\n            <ul className=\"GlobalStat\">\n              <p className=\"TeamName\">\n                {game.game} ({game.teamCountry})\n              </p>\n              <li>{game.timestamp}</li>\n              <li>Average combined goals: {game.averageGoals}</li>\n              <li>Odds over 2.5 goals: {game.odds}</li>\n            </ul>\n          )\n        );\n\n        reactDom.render(\n          <div>\n            <h3>Games featuring high scoring teams with high value odds</h3>\n            <ul>{teamList}</ul>\n          </div>,\n          document.getElementById(\"Over25Games\")\n        );\n      }}\n    ></Button>,\n    document.getElementById(\"Over25Games\")\n  );\n})();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <a\n        className=\"SocialLink\"\n        href=\"https://www.reddit.com/r/xgtipping/\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        r/xgtipping\n      </a>\n      <div id=\"LoadingContainer\" className=\"LoadingContainer\" />\n      <div id=\"RadioContainer\" className=\"RadioContainer\">\n        <div id=\"RadioText\" />\n        <div id=\"RadioButtons\" />\n      </div>\n      <div id=\"Day\" />\n      <div id=\"Checkbox\" />\n      <div id=\"Buttons\" className=\"Buttons\">\n        <ThreeDots className=\"MainLoading\" fill= \"#030061\"/>\n        <div>Loading all fixture and form data...</div>\n      </div>\n      <div id=\"bestPredictions\" className=\"bestPredictions\" />\n      <div id=\"exoticOfTheDay\" className=\"exoticOfTheDay\" />\n      <div id=\"RowOneContainer\" className=\"RowOneContainer\">\n        <div id=\"BTTS\" className=\"RowOne\" />\n        <div id=\"longShots\" className=\"RowOne\" />\n        <div id=\"draws\" className=\"RowOne\" />\n      </div>\n      <div id=\"insights\" />\n      <div id=\"successMeasure\" />\n      <div id=\"tables\" />\n      <div id=\"homeBadge\" />\n      <div id=\"FixtureContainerHeaders\"></div>\n      <StyledKofiButton></StyledKofiButton>\n      <div id=\"XGDiff\"/>\n      <div id=\"FixtureContainer\">\n        <div>\n          <div className=\"WelcomeText\">\n            Global fixtures and predictions from 30+ league competitions,\n            including\n          </div>\n          <ul className=\"AllLeagues\">\n            <li className=\"League\">Premier League</li>\n            <li className=\"League\">La Liga</li>\n            <li className=\"League\">Serie A</li>\n            <li className=\"League\">Bundesliga</li>\n            <li className=\"League\">Ligue 1</li>\n            <li className=\"League\">MLS</li>\n            <li className=\"League\">Primeira Liga</li>\n          </ul>\n          <div className=\"DataText\">Raw data from</div>\n          <a\n            className=\"DataLink\"\n            href=\"https://www.footystats.org\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            footystats.org\n          </a>\n        </div>\n      </div>\n      <div id=\"Over25Games\" className=\"Over25Games\"></div>\n      <div id=\"Under25Games\" className=\"Under25Games\"></div>\n      <div className=\"Social\">\n        <TwitterShareButton\n          url={\"www.xgtipping.com\"}\n          title={\"#XGTipping\"}\n          className=\"ShareButton\"\n          style={{ backgroundColor: \"#e2e2e26c\", boxShadow: \"none\" }}\n        >\n          <TwitterIcon size={\"3em\"} round={true} />\n        </TwitterShareButton>\n        <FacebookShareButton\n          url={\"www.xgtipping.com\"}\n          quote={\"XGTipping - data-driven football predictions\"}\n          className=\"ShareButton\"\n          style={{ backgroundColor: \"#e2e2e26c\", boxShadow: \"none\" }}\n        >\n          <FacebookIcon size={\"3em\"} round={true} />\n        </FacebookShareButton>\n        <RedditShareButton\n          url={\"www.xgtipping.com\"}\n          title={\"XGTipping\"}\n          className=\"ShareButton\"\n          style={{ backgroundColor: \"#e2e2e26c\", boxShadow: \"none\" }}\n        >\n          <RedditIcon size={\"3em\"} round={true} />\n        </RedditShareButton>\n        <WhatsappShareButton\n          url={\"www.xgtipping.com\"}\n          title={\"XGTipping\"}\n          separator=\": \"\n          className=\"ShareButton\"\n          style={{ backgroundColor: \"#e2e2e26c\", boxShadow: \"none\" }}\n        >\n          <WhatsappIcon size={\"3em\"} round={true} />\n        </WhatsappShareButton>\n        <TelegramShareButton\n          url={\"XGTipping\"}\n          title={\"XGTipping\"}\n          className=\"ShareButton\"\n          style={{ backgroundColor: \"#e2e2e26c\", boxShadow: \"none\" }}\n        >\n          <TelegramIcon size={\"3em\"} round={true} />\n        </TelegramShareButton>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}