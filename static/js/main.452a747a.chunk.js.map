{"version":3,"sources":["components/Button.js","components/OddsRadio.js","components/createBadge.js","components/createStatsDiv.js","components/Div.js","logic/getForm.js","components/Slider.js","components/CollapsableElement.js","components/CollapsableStats.js","components/Increment.js","logic/getBTTSPotential.js","components/Carousel.js","components/SliderDiff.js","firebase.js","logic/hasUserPaid.js","logic/authProvider.js","logic/getScorePredictions.js","components/TeamOfTheSeason.js","components/LeagueTable.js","logic/getFixtures.js","components/Table.js","logic/compareFormTrend.js","components/Chart.js","components/SofaScore.js","logic/getStats.js","logic/dataSlice.js","logic/store.js","components/GameStats.js","components/Fixture.js","components/Contact.js","components/Login.js","components/ProtectedContent.js","App.js","components/images/xg-tipping-high-resolution-logo-transparent.png","components/Logo.js","reportWebVitals.js","components/Team.js","components/Success.js","components/Cancel.js","components/PasswordReset.js","components/CancelSubscription.js","logic/getStatsInsights.js","components/Over25.js","components/Under25.js","components/HighestScoringTeams.js","components/HighestScoringFixtures.js","components/BTTSFixtures.js","components/BTTSTeams.js","index.js"],"names":["Button","props","id","text","variant","type","onClick","onClickEvent","className","disabled","style","selectedOdds","OddsRadio","handleOptionChange","setState","value","state","this","name","checked","onChange","Component","CreateBadge","image","ClassName","src","alt","flexShrink","Stats","styleForm","formIndicator","styleBTTS","BTTSBoolean","clicked","formRun","Results","homeOrAway","ResultsHorA","homeOrAwayResults","BTTSArray","StyleOfPlay","StyleOfPlayHomeOrAway","undefined","goals","conceeded","possession","XG","XGConceded","XGSwing","toFixed","goalDifference","goalDifferenceHomeOrAway","sot","dangerousAttacks","leaguePosition","homeOrAwayLeaguePosition","winPercentage","ppg","formTrend","CardsTotal","CornersAverage","Div","getForm","match","teams","homeId","awayId","fixtureForm","i","team","fetch","process","response","json","then","formData","lastMatchTimestamp","last_updated_match_timestamp","length","rangeValue","Slide","useState","range","setRange","fractionalValue","setFractionalValue","useEffect","roundedValueOne","Math","round","roundedValueTwo","fractionalOne","oddslib","from","to","precision","fractionalTwo","error","console","log","sx","width","color","event","newValue","valueLabelDisplay","step","min","max","valueLabelFormat","index","Collapsable","transitionTime","trigger","classNameButton","buttonText","classNameFlex","classNameTwo","element","classNameThree","elementTwo","CollapsableStats","children","incrementValue","riskLevel","Increment","IncrementItem","getNewTips","allTips","DecreaseItem","show","getBTTSPotential","homeGoals","awayGoals","directnessHome","directnessAway","homeBTTS","bttsAllPercentageHome","homeOnlyBTTS","bttsPercentageHomeHome","awayOnlyBTTS","bttsPercentageAwayAway","awayBTTS","bttsAllPercentageAway","homeG","awayG","combinedBTTS","bttsFraction","status","awayOdds","btts","bttsChosen","totalGoals","rawFinalHomeGoals","rawFinalAwayGoals","SwiperCore","use","EffectCoverflow","Pagination","Slider","effect","autoHeight","grabCursor","centeredSlides","slidesPerView","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","pagination","clickable","element2","element3","element4","element5","minimumXG","minimumGD","minimumGDHorA","minimumLast6","SlideDiff","setValue","useCase","marks","parseFloat","lower","upper","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","REACT_APP_FIREBASE_MEASUREMENT_ID","app","initializeApp","auth","getAuth","db","getFirestore","checkUserPaidStatus","uid","Error","userRef","doc","getDoc","userSnap","exists","data","isPaidUser","userDetail","finalHomeGoals","finalAwayGoals","homeOdds","AuthContext","createContext","AuthProvider","user","setUser","setIsPaidUser","loading","setLoading","unsubscribe","onAuthStateChanged","currentUser","userData","isPaid","Provider","Headers","append","paid","drawPredictions","sumStatDAWin","sumStatDALoss","sumStatPossessionWin","sumStatPossessionLoss","sumStatSOTWin","sumStatSOTLoss","sumStatPPGLast10Win","sumStatPPGLast10Loss","sumOddsWin","sumOddsLoss","sumXGForWin","sumXGForLoss","sumXGAgainstWin","sumXGAgainstLoss","allDrawOutcomes","totalROI","totalInvestment","totalProfit","convertTimestamp","timestamp","newDate","Date","toLocaleDateString","split","day","month","year","converted","getPointsFromLastX","lastX","pointsAddition","points","forEach","game","getPastLeagueResults","hOrA","form","completeData","date","allLeagueResultsArrayOfObjects","leagueIndex","fixtures","addTotalsToRecord","record","totalW","W","reduce","sum","totalD","D","totalL","L","xg","scored","ceil","floor","teamsHomeResults","filter","fixture","home_name","item","date_unix","sort","a","b","teamsAwayResults","away_name","recordAgainstIndividualStyles","recordAgainstIndividualStylesHome","recordAgainstIndividualStylesAway","homeResults","awayResults","oddsSumHome","oddsSumAway","favouriteCount","underdogCount","winningFavouriteCount","drawingFavouriteCount","beatenFavouriteCount","winningUnderdogCount","drawingUnderdogCount","beatenUnderdogCount","resultedGame","game_week","homeGoalCount","pre_match_teamA_overall_ppg","pre_match_teamB_overall_ppg","team_a_xg","awayGoalCount","team_b_xg","team_a_possession","team_a_shots","team_a_shotsOnTarget","team_b_shotsOnTarget","team_a_dangerous_attacks","team_a_corners","odds_ft_1","odds_ft_2","homeTeam","gameweek","homePPGPreMatch","awayPPGPreMatch","awayTeam","XGAgainst","shots","sotAgainst","corners","dateRaw","oddsHome","oddsAway","result","push","team_b_possession","team_b_shots","team_b_dangerous_attacks","team_b_corners","reversedResultsHome","reversedResultsAway","y","allClearFavouriteResultsHome","allClearFavouriteResultsAway","simlarGameResultsHome","concat","allSlightFavouriteResultsHome","allSlightFavouriteResultsAway","allTossupResultsHome","allTossupResultsAway","allUnderdogResultsHome","allUnderdogResultsAway","allMassiveUnderdogResultsHome","allMassiveUnderdogResultsAway","z","simlarGameResultsAway","allTeamResultsUnordered","allTeamResults","pointsWeighted","teamResult","odds","gamesPlayed","allTeamResultsHome","allTeamResultsAway","allTeamResultsLast6","slice","points6","map","res","pointsSum6","avPoints6","points5","pointsSum5","avPoints5","pointsAll","pointsSumAll","avPointsAll","resultsAll","resultsHome","resultsAway","LastFiveForm","LastSixForm","LastTenForm","avScoredLast5","avScoredLast5Sum","avConceededLast5","avConceededLast5Sum","avDALast5","avDALast5Sum","avSOTLast5","avSOTLast5Sum","avSOTAgainstLast5","avSOTAgainstLast5Sum","avShotsLast5","avShotsLast5Sum","avCornersLast5","avCornersLast5Sum","avPosessionLast5","avPosessionLast5Sum","avXGLast5","avXGLast5Sum","avXGAgainstLast5","avXGAgainstLast5Sum","averageOddsHome","averageOddsAway","oddsReliabilityWin","oddsReliabilityDraw","oddsReliabilityLose","oddsReliabilityWinAsUnderdog","oddsReliabilityDrawAsUnderdog","oddsReliabilityLoseAsUnderdog","reliableIndicator","unreliableIndicator","predictabilityScore","reliabilityString","teamGoalsHome","teamGoalsAway","teamGoalsAll","teamConceededHome","teamConceededAway","teamConceededAll","teamXGForAll","teamXGAgainstAll","teamXGForAllRecentAtStart","teamXGAgainstAllRecentAtStart","teamXGForHome","teamXGAgainstHome","teamXGForAway","teamXGAgainstAway","XGSum","avgXGScored","XGAgainstSum","avgXGConceeded","shortTermXGDiff","longTermXGDiff","XGChangeRecently","possessionSum","avgPossession","possessionHome","possessionSumHome","avgPossessionHome","possessionAway","possessionSumAway","avgPossessionAway","dangerousAttacksSum","avgDangerousAttacks","dangerousAttacksHome","dangerousAttacksSumHome","avgDangerousAttacksHome","dangerousAttacksAway","dangerousAttacksSumAway","avgDangerousAttacksAway","shotsSum","avgShots","shotsHome","shotsSumHome","avgShotsHome","shotsAway","shotsSumAway","avgShotsAway","shotsOnTarget","shotsOnTargetSum","avgShotsOnTarget","shotsOnTargetHome","shotsOnTargetSumHome","avgShotsOnTargetHome","shotsOnTargetAway","shotsOnTargetSumAway","avgShotsOnTargetAway","directnessRating","directnessRatingHome","directnessRatingAway","shotsOnTargetAgainst","shotsOnTargetSumAgainst","avgShotsOnTargetAgainst","shotsOnTargetAgainstHome","shotsOnTargetSumAgainstHome","avgShotsOnTargetAgainstHome","shotsOnTargetAgainstAway","shotsOnTargetSumAgainstAway","avgShotsOnTargetAgainstAway","cornersSum","cornersAv","cornersHome","cornersSumHome","cornersAvHome","cornersAway","cornersSumAway","cornersAvAway","last5XG","last5XGSum","last5XGAvgFor","last5XGHome","last5XGSumHome","last5XGAvgForHome","last5XGAway","last5XGSumAway","last5XGAvgForAway","XGSumHome","avgXGScoredHome","XGSumAway","avgXGScoredAway","XGAgainstSumHome","avgXGConceededHome","XGAgainstSumAway","avgXGConceededAway","last5XGAgainst","last5XGAgainstSum","last5XGAvgAgainst","last5XGAgainstHome","last5XGAgainstSumHome","last5XGAvgAgainstHome","last5XGAgainstAway","last5XGAgainstSumAway","last5XGAvgAgainstAway","XGDiffNonAverage","XGDiffNonAverageLast5","XGOverall","XGlast5","shotsLast5Arr","shotsLast5Sum","avgShotsLast5","shotsHomeArr","shotsHomeSum","shotsAwayArr","shotsAwaySum","avgShotValue","avgShotValueLast5","avgShotValueHome","avgShotValueAway","XGAgainstAvgOverall","XGAgainstlast5","AveragePossessionOverall","AverageDangerousAttacksOverall","AverageCorners","AverageShotsOnTargetOverall","AverageShotsOnTargetAgainstOverall","alpha","beta","allGoalsArrayHomeRecent","allConceededArrayHomeRecent","allGoalsArrayHome","allConceededArrayHome","allGoalsArrayHomeOnly","allConceededArrayHomeOnly","sumTwo","predictGoalsWithExponentialSmoothing","reverse","forAndAgainstRollingAv","forAndAgainstRollingAvHomeOrAway","allGoalsArrayAwayRecent","allConceededArrayAwayRecent","allGoalsArrayAway","allConceededArrayAway","allGoalsArrayAwayOnly","allConceededArrayAwayOnly","bttsHome","bttsAway","bttsAll","bttsHomeCount","bttsHomeString","bttsHomePercentage","bttsAwayCount","bttsAwayString","bttsAwayPercentage","bttsAllCount","bttsAllString","bttsAllPercentage","r","x","predictNextWeightedMovingAverage","teamGoalsHomeRollingAverage","teamGoalsAwayRollingAverage","xgAndScored","xgAgainstAndConceeded","xgAndScoredHome","xgAgainstAndConceededHome","xgAndScoredAway","xgAgainstAndConceededAway","RoundedXGForV2","RoundedXGAgainstV2","RoundedXGForHomeV2","RoundedXGAgainstHomeV2","RoundedXGForAwayV2","RoundedXGAgainstAwayV2","XGPrediction","XGPredictionHome","XGPredictionAway","teamConceededHomeRollingAverage","teamConceededAwayRollingAverage","avgScored","sumHome","avgScoredHome","sumAway","avgScoredAway","last5","last5Sum","last5AvgScored","last5Home","last5SumHome","last5AvgScoredHome","last5Away","last5SumAway","last5AvgScoredAway","last5Conceeded","last5ConceededSum","last5AvgConceeded","last5ConceededHome","last5ConceededSumHome","last5AvgConceededHome","last5ConceededAway","last5ConceededSumAway","last5AvgConceededAway","last10","last10Sum","last10AvgScored","last10Conceeded","last10ConceededSum","last10AvgConceeded","last5Goals","last5GoalsConceeded","last5GoalDiff","last10Goals","last10GoalsConceeded","last10GoalDiff","teamGoalsAllRollingAverage","teamGoalsConceededAllRollingAverage","avgConceeded","teamConceededHomeOnlySum","teamConceededAvgHomeOnly","teamConceededAwayOnlySum","teamConceededAvgAwayOnly","teamName","numbers","windowSize","startIndex","window","weights","Array","_","acc","num","movingAverage","w","calculateWeightedAverage","arr","weightedSum","totalWeight","weight","pow","teamGoalsFor","teamGoalsAgainst","lambdaFor","lambdaAgainst","predictedGoalsFor","predictedGoalsAgainst","goalsFor","goalsAgainst","calculateDifference","num1","num2","comparison","metricOne","metricTwo","stat1","stat2","statDiff","getClinicalRating","dangerousAttackConversion","rating","score","getPointsDifferential","pointsHomeAvg","pointsAwayAvg","diff","differential","compareFormTrend","recentForm","distantForm","scoreTotal","recent","distant","getPointAverage","pointTotal","games","generateGoals","homeForm","awayForm","avgHomeGoals","avgAwayGoals","homeExpectedScore","attackingMetrics","defensiveMetrics","awayExpectedScore","adjustToHome","CleanSheetPercentage","adjustToAway","finalScore","attackingStrength","defensiveStrengthScoreGeneration","homeAttackVsAwayDefenceComparison","awayAttackVsHomeDefenceComparison","defensiveStrength","attackingStrengthLast5","defensiveStrengthScoreGenerationLast5","homeAttackVsAwayDefenceComparisonLast5","awayAttackVsHomeDefenceComparisonLast5","attackingStrengthHomeOnly","defensiveStrengthScoreGenerationAwayOnly","homeAttackVsAwayDefenceComparisonHomeOnly","attackingStrengthAwayOnly","defensiveStrengthScoreGenerationHomeOnly","awayAttackVsHomeDefenceComparisonAwayOnly","oddsComparisonHome","oddsComparisonAway","XGRating","XGRatingHomeComparison","XGRatingAwayComparison","abs","calculatePlayingStyle","calculateScore","divider","calculate","allForm","find","home","away","PlayedHome","PlayedAway","lastHomeOrAwayPoints","homeOrAwayAverage","ScoredAverage","ScoredOverall","ConcededAverage","ConcededOverall","ScoredAverageShortTerm","ConcededAverageShortTerm","longTermAverageGoals","longTermAverageConceeded","recentGoalDiff","distantGoalDiff","recentDA","distantDA","recentPosession","distantPosession","recentCleanSheet","distantCleanSheet","recentFormArray","distantFormArray","formTrendScore","expectedGoals","ScoredAverageShortAndLongTerm","conceededAverageShortAndLongTerm","longTermGoalDifference","shortTermGoalDifference","XGdifferential","formHome","formAway","last2Points","clinicalRating","clinicalScore","XGdifferentialValue","XGdifferentialValueRaw","leagueID","predictedGoalsBasedOnHomeAv","predictedGoalsBasedOnAwayAv","allTeamGoalsBasedOnAverages","predictedGoalsConceededBasedOnHomeAv","predictedGoalsConceededBasedOnAwayAv","allTeamGoalsConceededBasedOnAverages","averageScoredLeague","averageConceededLeague","last10btts","last10bttsHome","last10bttsAway","bttsPercentageHomeAway","bttsPercentageAwayHome","homeTeamHomePositionRaw","awayTeamAwayPositionRaw","homePositionHomeOnly","awayPositionAwayOnly","homePosition","homeRawPosition","awayPosition","awayRawPosition","improving","pointsDiff6","AttackingPotency","AttacksHome","AttacksAverage","lastGame","previousToLastGame","attackingMetricsHome","AverageShotsOnTarget","Corners","attackingMetricsHomeLast5","AverageShots","attackingMetricsHomeOnly","attackingMetricsAwayOnly","attackingMetricsAway","attackingMetricsAwayLast5","defensiveMetricsHome","defensiveMetricsHomeLast5","defensiveMetricsAway","defensiveMetricsAwayLast5","defensiveMetricsHomeOnly","defensiveMetricsAwayOnly","calculateAttackingStrength","attackingStrengthScoreGeneration","calculateDefensiveStrength","defensiveStrengthLast5","defensiveStrengthHomeOnly","defensiveStrengthAwayOnly","calculateMetricStrength","possessionStrength","possessionStrengthLast5","possessionStrengthHomeOnly","possessionStrengthAwayOnly","XGdifferentialRecent","actualToXGDifferenceRecent","directnessOverall","directnessOverallLast5","directnessHomeOnly","directnessAwayOnly","directnessOverallStrength","directnessOverallStrengthLast5","directnessHomeStrength","directnessAwayStrength","shootingAccuracy","shootingAccuracyLast5","shootingAccuracyHomeOnly","shootingAccuracyAwayOnly","accuracyOverallStrength","accuracyOverallStrengthLast5","accuracyHomeStrength","accuracyAwayStrength","xgForStrength","xgForStrengthLast5","xgForStrengthHomeOnly","xgAgainstStrength","xgAgainstStrengthLast5","xgAgainstStrengthHomeOnly","xgForStrengthAwayOnly","xgAgainstStrengthAwayOnly","styleOfPlayOverall","styleOfPlayHome","styleOfPlayAway","parseInt","actualToXGDifference","teamGoalsCalc","homeGoalDiff","awayGoalDiff","goalsDifferential","rollingAverageGoalsDifferential","GoalsInGamesAverageHome","GoalsInGamesAverageAway","factorOneHome","factorOneAway","scoreDiff","experimentalHomeGoals","experimentalAwayGoals","prediction","includeInMultis","pointsDifferential","pointsDifferentialValue","pointsDifferentialValueRaw","rollingGoalDiffDifferential","rollingGoalDiff","rollingGoalDiffValue","dangerousAttacksDifferential","dangerousAttacksDiff","dangerousAttacksDiffValue","winner","outcome","last10Points","predictionOutcome","over25PredictionOutcome","bttsOutcome","total","total2","drawOdds","omit","last10PointDiffHomePerspective","last6PointDiffAwayPerspective","XGDiffBetweenTeamsHomePerspective","XGDiffBetweenTeamsAwayPerspective","goalDiffHomeOrAwayComparison","goalDifferenceComparison","profit","specificLeagueResults","getSuccessMeasure","sumProfit","investment","exactScores","successCount","netProfit","hasOwnProperty","exactScore","leagueName","leagueDesc","league","netLeagueProfit","ROI","ReactDOM","render","Object","entries","document","getElementById","price","combinations","gamesInExotic","exoticStake","exoticString","allTipsSorted","newArray","bestBets","Over25Tips","XGDiffTips","rollingDiffTips","dangerousAttacksDiffTips","pointsDiffTips","exoticArray","bttsArray","accumulatedOdds","predictions","array","tip","indexOf","rawOdds","renderTips","getScorePrediction","mocked","mock","Promise","all","matches","goalsA","goalsB","unroundedGoalsA","unroundedGoalsB","outcomeSymbol","over25PredictionOutcomeSymbol","bttsOutcomeSymbol","fractionHome","teamComparisonScore","predictionObject","comparisonScore","rawComparisonScore","goalDifferential","experimentalCalc","fractionAway","Over25PredictionObject","decimalOdds","homeDoubleChance","over25Odds","doubleChanceOutcome","goalTotalUnrounded","XGPredictionObject","otherTeam","pointsDiffObject","rollingDiffObject","dangerousAttacksDiffObject","RenderAllFixtures","bool","getMultis","getCoverBetMaxReturns","getAccumulatorPrice","priceArray","minAccSize","stake","perms","getUniquePermutations","j","permLength","permutations","newArr","splice","twoDimArrayUnion","arr1","arr2","duplicate","k","NewlineText","str","open","TeamOfTheSeason","roundId","setRoundId","seasonId","fetchRoundId","roundsResponse","roundsData","rounds","firstRoundId","height","frameBorder","scrolling","title","fontSize","fontFamily","textAlign","target","href","rel","toggleState","setIsOff","StyledTableCell2","withStyles","theme","head","backgroundColor","padding","paddingTop","paddingBottom","margin","body","TableCell","StyledTableCell","StyledTableRow","root","TableRow","LeagueTable","singleResult","rows","Teams","component","scope","Name","Played","Wins","Draws","Losses","For","Against","GoalDifference","Points","Form","Key","leagueResults","team_a_red_cards","team_b_red_cards","leagueResultsOlder","getTopScorersTeam","ID","sorted","order","sortedByForm","LastWeeksResults","LeagueID","TableContainer","Paper","Table","marginTop","marginBottom","TableHead","TableBody","seasonAVG_home","seasonAVG_away","seasonBTTSPercentage","seasonOver05Percentage_overall","seasonOver15Percentage_overall","seasonOver25Percentage_overall","seasonOver35Percentage_overall","seasonOver45Percentage_overall","over75CornersPercentage_overall","over85CornersPercentage_overall","over95CornersPercentage_overall","over105CornersPercentage_overall","over115CornersPercentage_overall","over125CornersPercentage_overall","cornersAVG_overall","cardsAVG_overall","top_scorers","known_as","club_team_id","goals_overall","fixtureResponse","leagueInstance","lastThreeFormHome","lastThreeFormAway","lastFiveFormHome","lastFiveFormAway","lastSixFormHome","lastSixFormAway","lastTenFormHome","lastTenFormAway","leagueOrAll","formRunHome","formRunAway","WDLinLeagueHome","WDLinLeagueAway","HomeAverageGoals","homeAverageGoals","HomeAverageConceded","homeAverageConceded","AwayAverageGoals","awayAverageGoals","AwayAverageConceded","awayAverageConceded","require","fixtureArray","arrayOfGames","leagueGames","leagueArray","leagueIdArray","tableArray","worldCupArray","generateTables","allResults","currentLeagueId","specific_tables","groups","table","currentTeam","wdl_record","toUpperCase","Position","cleanName","matchesPlayed","seasonWins_overall","seasonDraws_overall","seasonLosses_overall","seasonGoals","seasonConceded_home","seasonConceded_away","seasonGoalDifference","LastXPoints","wdl","seasonConceded","group","league_table","all_matches_table_overall","results","nowInSeconds","now","twoWeeksAgo","mostRecentGames","leagueTable","leagueStatistics","stats","statistics","GamesPlayed","createFixture","mockBool","roundedHomeOdds","roundedAwayOdds","homeFraction","awayFraction","bttsOdds","roundedBTTSOdds","homeTeamWinsPercentage","homeTeamWinPercentage","homeTeamLossesPercentage","homeTeamLossPercentage","homeTeamDrawsPercentage","homeTeamDrawPercentage","awayTeamWinsPercentage","awayTeamWinPercentage","awayTeamLossesPercentage","awayTeamLossPercentage","awayTeamDrawsPercentage","awayTeamDrawPercentage","capped","originalLength","Fixture","isFunctionRunning","generateFixtures","footyStatsFormattedDate","current","todaysDate","dateSS","getPrefix","position","teamPositionPrefix","updateResults","method","headers","Accept","JSON","stringify","fill","url","formUrl","formArray","leaguesStored","storedForm","isFormStored","isStoredLocally","orderedLeagues","leaguePositions","allLeagueResults","leagues","allGames","sofaScore","events","time","startTimestamp","homeScore","display","awayScore","startDate","getTime","targetDate","orderedLeague","gamesFiltered","gamesShortened","pager","current_page","max_page","page2","page2Data","gamesConcat","gamesConcatFiltered","mostRecentResults","shortenedResults","home_ppg","away_ppg","leagueObj","homeLeague","awayLeague","all_matches_table_home","all_matches_table_away","regularSeason","season","string","stringHome","stringAway","rawPosition","homeFormName","awayFormName","homeSeasonWinPercentage","seasonWins","awaySeasonWinPercentage","homeSeasonLossPercentage","seasonLosses_home","awaySeasonLossPercentage","seasonLosses_away","homeSeasonDrawPercentage","seasonDraws","awaySeasonDrawPercentage","homeSeasonMatchesPlayed","awaySeasonMatchesPlayed","played","competition_id","unixTimestamp","dateObject","previousLeagueName","toLocaleString","hour","minute","refereeID","odds_ft_x","odds_doublechance_1x","awayDoubleChance","odds_doublechance_x2","odds_btts_yes","homeID","awayID","homeTeamInfo","awayTeamInfo","homeTeaminLeague","awayTeaminLeague","teamPositionHome","teamPositionHomeTable","teamPositionAwayTable","homeTeamWinPercentageHome","awayTeamWinPercentageAway","homeTeamLossPercentageHome","awayTeamLossPercentageAway","homeTeamDrawPercentageHome","awayTeamDrawPercentageAway","teamPositionAway","homePrefix","homePrefixHomeTable","awayPrefix","awayPrefixAwayTable","homeSeasonPPG","awaySeasonPPG","homeTeaminHomeLeague","awayTeaminAwayLeague","homeFormString5","additional_info","formRun_overall","awayFormString5","homeFormString6","awayFormString6","homeFormString10","awayFormString10","homeFormRun","formRun_home","awayFormRun","formRun_away","season_format","xg_for_avg_overall","xg_for_avg_home","seasonScoredNum_overall","seasonScoredAVG_home","seasonMatchesPlayed_home","seasonMatchesPlayed_away","seasonConcededNum_overall","seasonConcededAVG_home","xg_against_avg_overall","xg_against_avg_home","seasonCSPercentage_overall","possessionAVG_overall","possessionAVG_home","shotsOnTargetAVG_overall","shotsOnTargetAVG_home","shotsAVG_overall","shotsAVG_home","dangerous_attacks_avg_overall","seasonPPG_overall","attacks_avg_home","attacks_avg_away","dangerous_attacks_avg_home","homeAttackAdvantage","homeDefenceAdvantage","seasonBTTSPercentage_home","seasonGoalDifference_overall","seasonGoalDifference_home","seasonBTTSPercentage_overall","cardsTotal_overall","scoredBothHalvesPercentage_overall","XGAgainstAverage","AveragePossession","AverageShotsHomeOrAway","PPG","AttacksAway","AverageDangerousAttacks","BTTSPercentage","lastThreeForm","LeagueOrAll","LeaguePosition","SeasonPPG","WinPercentage","LossPercentage","DrawPercentage","BttsPercentage","BttsPercentageHomeOrAway","ScoredBothHalvesPercentage","LastMatch","WDLRecord","LeagueAverageGoals","LeagueAverageConceded","xg_for_avg_away","seasonScoredAVG_away","seasonConcededAVG_away","xg_against_avg_away","possessionAVG_away","shotsOnTargetAVG_away","shotsAVG_away","dangerous_attacks_avg_away","seasonBTTSPercentage_away","seasonGoalDifference_away","teamIDHome","teamIDAway","leagueId","homeBadge","home_image","awayBadge","away_image","homePpg","awayPpg","homeTeamHomePosition","awayTeamAwayPosition","odds_ft_over25","btts_potential","stadium","stadium_name","expectedGoalsHomeToDate","team_a_xg_prematch","expectedGoalsAwayToDate","team_b_xg_prematch","setTimeout","lineHeight","border","GenerateFormSummary","Chart","data1","options","responsive","aspectRatio","maintainAspectRatio","layout","elements","point","radius","scales","suggestedMin","suggestedMax","grid","borderWidth","borderColor","ticks","font","size","plugins","legend","labels","boxHeight","keys","datasets","label","team1","tension","team2","data2","MultilineChart","data3","hidden","data4","DoughnutChart","rotation","hoverOffset","cutout","circumference","RadarChart","angleLines","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","BarChart","datasetOne","idx","numOne","numTwo","tempArr","firstNum","secondNum","findLargestNum","indexAxis","bar","tooltip","enabled","context","dataIndex","dataset","BarChartTwo","subtitle","bottom","barThickness","ChartJS","register","CategoryScale","LinearScale","RadialLinearScale","PointElement","ArcElement","Filler","BarElement","LineElement","Title","Tooltip","Legend","SubTitle","SofaLineupsWidget","differenceInSeconds","minutes","iframeSrc","currentTime","maxWidth","frameborder","metric","ranges","normalizedValue","normValue","metricName","metricValue","averagePossession","xgFor","xgAgainst","accuracyOverall","weightedScore","initialState","dataHome","localStorage","getItem","dataAway","dataHomeDef","dataAwayDef","homeDetails","awayDetails","fixtureDetails","dataSlice","createSlice","reducers","setData","action","payload","actions","store","configureStore","reducer","dataReducer","GameStats","resultValue","count","mockValue","displayBool","isLoading","setIsLoading","aiMatchPreview","setAiMatchPreview","setPaid","setHasCompleteData","gameStats","goalDiffArrayHome","goalDiffArrayAway","xgDiffArrayHome","xgDiffArrayAway","rollingGoalDiffTotalHome","rollingGoalDiffTotalAway","rollingXGDiffTotalHome","rollingXGDiffTotalAway","matchingGame","setMatchingGame","setId","setTeam1","setTeam2","setTimestamp","setHomeGoals","setAwayGoals","homeAttackStrength","setHomeAttackStrength","homeDefenceStrength","setHomeDefenceStrength","homePossessionStrength","setHomePossessionStrength","homeXGForStrength","setHomeXGForStrength","homeXGAgainstStrength","setHomeXGAgainstStrength","homeDirectnessStrength","setHomeDirectnessStrength","homeAccuracyOverallStrength","setHomeAccuracyOverallStrength","awayAttackStrength","setAwayAttackStrength","awayDefenceStrength","setAwayDefenceStrength","awayPossessionStrength","setAwayPossessionStrength","awayXGForStrength","setAwayXGForStrength","awayXGAgainstStrength","setAwayXGAgainstStrength","awayDirectnessStrength","setAwayDirectnessStrength","awayAccuracyOverallStrength","setAwayAccuracyOverallStrength","homeFiveGameAverage","setHomeFiveGameAverage","homeSixGameAverage","setHomeSixGameAverage","homeTenGameAverage","setHomeTenGameAverage","awayFiveGameAverage","setAwayFiveGameAverage","awaySixGameAverage","setAwaySixGameAverage","awayTenGameAverage","setAwayTenGameAverage","homeAttackStrengthLast5","homeOnlyAttackStrength","homeDefenceStrengthLast5","homeOnlyDefenceStrength","homePossessionStrengthLast5","homeOnlyPossessionStrength","homeXGForStrengthLast5","homeOnlyXGForStrength","homeXGAgainstStrengthLast5","homeOnlyXGAgainstStrength","homeDirectnessStrengthLast5","homeOnlyDirectnessStrength","homeAccuracyOverallStrengthLast5","homeOnlyAccuracyOverallStrength","awayAttackStrengthLast5","awayOnlyAttackStrength","awayDefenceStrengthLast5","awayOnlyDefenceStrength","awayPossessionStrengthLast5","awayOnlyPossessionStrength","awayXGForStrengthLast5","awayOnlyXGForStrength","awayXGAgainstStrengthLast5","awayOnlyXGAgainstStrength","awayDirectnessStrengthLast5","awayOnlyDirectnessStrength","awayAccuracyOverallStrengthLast5","awayOnlyAccuracyOverallStrength","gameArrayHomeTeamHomeGames","gameArrayAwayTeamAwayGames","firstRenderDone","setFirstRenderDone","gameArrayHome","gameArrayAway","pos","resultHome","resultHomeOnly","resultAway","resultAwayOnly","timeZone","won","goalsScored","goalsConceeded","homeXG","awayXG","homeShots","awayShots","homeSot","awaySot","homeRed","awayRed","homePossession","awayPossession","homeDangerousAttacks","awayDangerousAttacks","homePPG","awayPPG","wonHomeOrAwayOnly","wonAwayOrAwayOnly","getGameIdByHomeTeam","homeTeamName","matchingGames","includes","getRefStats","refId","compId","ok","refData","dataArray","isArray","filteredObject","distilledRefData","appearances_overall","full_name","cards_per_match_overall","goals_per_match_overall","min_per_card_overall","nationality","over25_cards_percentage_overall","over35_cards_percentage_overall","penalties_given_per_match_overall","red_cards_overall","StatsHomeComponent","formDataHome","gameCount","Last5","homePPGAv","lossPercentage","drawPercentage","FavouriteRecord","StatsAwayComponent","formDataAway","awayPPGAv","gameInfo","fetchMatchingGame","toString","bttsArrayHome","bttsArrayAway","overviewHome","overviewAway","AverageGoals","AverageConceeded","AverageXG","AverageXGConceded","Last5PPG","getPointsFromGames","formArr","pairings","arrayOfIndividualPoints","last3Points","last5Points","last6Points","homePPGame","awayPPGame","formArrayHome","formArrayAway","chartType","showAIInsights","setShowAIInsights","paymentStatus","checkPaymentStatus","alert","warn","attackH","defenceH","attackA","defenceA","possH","possA","XGForH","XGForA","XGAgH","XGAgA","accuracyHome","accuracyAway","home5GA","home6GA","home10GA","away5GA","away6GA","away10GA","tenGameAv","fiveGameAv","fetchData","generateAIInsights","useCallback","gameId","AIPayload","referee","awayTeamName","homeLeaguePosition","awayLeaguePosition","homeTeamResults","homeAttackingStats","homeAttackingStatsLast5","homeAttackingStatsHomeOnly","homeDefensiveStats","homeDefensiveStatsLast5","homeDefensiveStatsHomeOnly","awayTeamResults","awayAttackingStats","awayAttackingStatsLast5","awayAttackingStatsAwayOnly","awayDefensiveStats","awayDefensiveStatsLast5","awayDefensiveStatsAwayOnly","jsonData","formatAIPreview","join","AIOutput","useMemo","formattedText","matchPreview1","formattedText2","matchPreview2","opinionOnXGTippingPrediction","summary","formPointsHome","formPointsAway","GetDivider","matchStatus","isPrediction","renderLeagueName","renderTable","SingleFixture","dispatch","useDispatch","showGameStats","setShowGameStats","StoreData","homeTeamBadge","awayTeamBadge","setItem","key1","key2","onMouseDown","handleButtonClick","List","StripePolicies","userIsPaid","Login","email","setEmail","password","setPassword","isLogin","setIsLogin","setError","showPassword","setShowPassword","handleAuth","e","preventDefault","signInWithEmailAndPassword","userCredential","createUserWithEmailAndPassword","setDoc","message","onSubmit","placeholder","required","location","getCurrentUser","resolve","reject","loggedIn","today","todayFootyStats","todaySS","tomorrow","tomorrowFootyStats","tomorrowSS","dateFootyStats","lastSaturday","lastSaturdayFootyStats","lastSaturdaySS","tomorrowsDate","yesterdaysDate","saturdayDate","historicDate","dateString","Logo","myImage","fixtureList","availableLeagues","leagueOrder","decrementDate","calculateDate","convertTimestampForSofaScore","renderButtons","loginStatus","getFullYear","String","getMonth","padStart","getDate","setDate","getDay","textJoined","newText","leagueList","mapOrder","key","A","B","stripePromise","loadStripe","handleCheckout","priceId","stripe","session","redirectToCheckout","sessionId","welcomeTextOne","welcomeTextTwo","AppContent","useContext","getLeagueList","mockedFixtures","TwitterShareButton","TwitterIcon","RedditShareButton","RedditIcon","FacebookShareButton","quote","FacebookIcon","WhatsappShareButton","separator","WhatsappIcon","TelegramShareButton","TelegramIcon","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","TeamPage","dataState","storedFixtureDetailsJson","responseHome","responseAway","indexHome","findIndex","indexAway","test","scoredOverallHome","playedHomeOnly","scoredOverallHomeOnly","seasonScoredNum_home","conceededOverallHome","conceededOverallHomeOnly","seasonConcededNum_home","PPGOverallHome","PPGOverallHomeOnly","seasonPPG_home","leaguePosition_overallHome","leaguePosition_overall","leaguePosition_HomeOnly","leaguePosition_home","averageAttendance","average_attendance_home","BTTSPercentage_overallHome","BTTSAndWinPercentage_Home","BTTS_and_win_percentage_overall","BTTSAndLosePercentage_Home","BTTS_and_lose_percentage_overall","BTTSBothHalvesHome","BTTS_both_halves_percentage_overall","GoalDifferenceHT_overall_Home","GoalDifferenceHT_overall","GD_2hg_overall_Home","gd_2hg_overall","leadingAtHTPercentage_overallHome","leadingAtHTPercentage_overall","seasonOver15Percentage_overallHome","seasonOver25Percentage_overallHome","seasonOver35Percentage_overallHome","seasonOver45Percentage_overallHome","scoredBothHalvesPercentage_overallHome","shots_on_target_per_goals_scored_overallHome","shots_on_target_per_goals_scored_overall","cornersTotalAVG_overallHome","cornersTotalAVG_overall","cardsAVG_overallHome","foulsAVG_overallHome","foulsAVG_overall","penalties_won_per_match_overallHome","penalties_won_per_match_overall","penalty_in_a_match_percentage_overallHome","penalty_in_a_match_percentage_overall","scoredOverallAway","playedAwayOnly","scoredOverallAwayOnly","seasonScoredNum_away","conceededOverallAway","conceededOverallAwayOnly","seasonConcededNum_away","PPGOverallAway","PPGOverallAwayOnly","seasonPPG_away","leaguePosition_overallAway","leaguePosition_AwayOnly","leaguePosition_away","BTTSPercentage_overallAway","BTTSAndWinPercentage_Away","BTTSAndLosePercentage_Away","BTTSBothHalvesAway","GoalDifferenceHT_overall_Away","GD_2hg_overall_Away","leadingAtHTPercentage_overallAway","seasonOver15Percentage_overallAway","seasonOver25Percentage_overallAway","seasonOver35Percentage_overallAway","seasonOver45Percentage_overallAway","scoredBothHalvesPercentage_overallAway","shots_on_target_per_goals_scored_overallAway","cornersTotalAVG_overallAway","cardsAVG_overallAway","foulsAVG_overallAway","penalties_won_per_match_overallAway","penalty_in_a_match_percentage_overallAway","storedDataHome","useSelector","jsonDataHome","parse","propertyNamesHome","storedDataHomeDef","jsonDataHomeDef","propertyNamesHomeDef","storedDataallTeamResultsHome","jsonDataallTeamResultsHome","propertyNamesallTeamResultsHome","values","jsonHomeDetails","storedDataAway","jsonDataAway","propertyNamesAway","storedDataAwayDef","jsonDataAwayDef","propertyNamesAwayDef","storedDataallTeamResultsAway","jsonDataallTeamResultsAway","propertyNamesallTeamResultsAway","jsonAwayDetails","storedFixtureDetails","stacked","SuccessPage","CancelPage","PasswordReset","setMessage","handleReset","sendPasswordResetEmail","CancelSubscription","fetchSubscriptionStatus","handleCancelSubscription","getHighestScoringLeagues","teamsList","top_leagues","leagueCountry","country","averageGoals","seasonAVG_overall","over25Percentage","division","domestic_scale","getLowestScoringLeagues","under25Percentage","seasonUnder25Percentage_overall","getHighestScoringTeams","top_teams","next_match_team","teamCountry","toLocaleTimeString","getHighestScoringFixtures","fixturesList","top_fixtures","avg_potential","progress","avgGoals","getBTTSFixtures","getBTTSTeams","next_match_date","seasonMatchesPlayed_overall","bttsPercentage","opponent","palette","common","white","hover","Over25","setLeagues","fetchLeagues","allowedCountries","filteredLeagues","header","align","Under25","HighestScoringTeams","setTeams","fetchTeams","filteredTeams","HighestScoringFixtures","setGames","fetchGames","filteredGames","BTTSFixtures","BTTSTeams","Team","exact"],"mappings":"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CA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MAEA,OAyVF,cAFC,OAED,mCA1QO,mBAMuB,EAWbC,EAAa,EAabC,EAAa,sBA+BbC,EAA4B,MA8B5BC,EAAa,6EArFA,OAqFA,aAkF3B,OAlF2B,kCAA5B,WAA6BC,GAAW,2EACtC/4B,IAASC,OACP,sBAAK54B,UAAU,iBAAgB,UAC7B,6BAAK0xD,IACL,qBAAK1xD,UAAU,kBAAiB,SAC9B,cAACR,EAAM,CACLG,KAAM,gBACNK,UAAU,yBACVD,aAAY,gCAAE,wFACD,OADC,KACZoxD,GAAW,SACHhoB,GACJ,eACAsnB,GACAtwD,EACAuwD,IACA,EACAR,GACAS,IACD,iDATSz7C,KAAI,gEActB,cAAC1V,EAAM,CACLG,KAAI,IACJK,UAAU,iBACVD,aAAY,gCAAE,wGAAkBuxD,EAAc,EAAG7gD,IAAK,qFAExD,cAACjR,EAAM,CACLG,UAAyBuC,IAAnBsuD,GAA+BA,GAAiB//C,GACtDzQ,UAAU,iBACVD,aAAY,gCAAE,wFACD,OADC,KACZoxD,GAAW,SACHhoB,GACJ,iBACA6nB,GACA7wD,EACAqwD,IACA,EACAN,GACA3mB,IACD,iDATSr0B,KAAI,8DAapB,cAAC1V,EAAM,CACLG,KAAI,QACJK,UAAU,sBACVD,aAAY,gCAAE,wFACD,OADC,KACZoxD,GAAW,SACHhoB,GACJ,iBACA+mB,GACA/vD,EACAgwD,IACA,EACAD,GACAE,IACD,iDATSl7C,KAAI,8DAapB,cAAC1V,EAAM,CACLG,KAAM,WACNK,UAAU,iBACVD,aAAY,gCAAE,wFACD,OADC,KACZoxD,GAAW,SACHhoB,GACJ,oBACAknB,GACAlwD,EACAmwD,IACA,EACAJ,GACAK,IACD,iDATSr7C,KAAI,iEActB6jB,SAASC,eAAe,YACxB,4CACH,uBAlFcy4B,EAAa,yDApB3B,OAoB2B,kCA9B5B,WAA4CniD,GAAS,yFAOZ,OANnCC,E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","file":"static/js/main.452a747a.chunk.js","sourcesContent":["import React from \"react\";\n\nexport function Button(props) {\n  return (\n    <div id=\"Button\">\n      <button data-cy={props.text} variant=\"primary\" type=\"button\" onClick={props.onClickEvent} className={props.className} disabled={props.disabled} style={props.style}>\n        {props.text}\n      </button>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nexport var selectedOdds = \"Fractional odds\";\n\nexport class OddsRadio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOdds: this.props.value,\n    };\n  }\n\n  handleOptionChange = () => {\n    this.setState({\n      selectedOdds: this.props.value,\n    });\n    selectedOdds = this.state.selectedOdds;\n  };\n\n  render() {\n    return (\n      <section className=\"dark2\">\n        <div className={this.props.className}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"odds\"\n              checked={this.state.checked}\n              onChange={this.handleOptionChange}\n              data-cy={this.props.value}\n              className=\"Hidden\"\n            />\n            <span className=\"design\"></span>\n            <span className=\"text\">{this.props.value}</span>\n          </label>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default OddsRadio;\n","import React from \"react\";\n\nexport function CreateBadge(props) {\n\n  if(props.image === \"-\"){\n    return (\n      <div className={props.ClassName} />\n    );\n  } else {\n    return (\n      <img\n        src={`https://cdn.footystats.org/img/${props.image}`}\n        className={props.ClassName}\n        alt={props.alt}\n        flex-shrink={props.flexShrink}\n      />\n    );\n  }\n}\n","import React, { Fragment } from \"react\";\n\nfunction Stats(props) {\n  let shouldOpen = props.clicked;\n\n  function styleForm(formIndicator) {\n    let className;\n    if (formIndicator === \"W\") {\n      className = \"win\";\n    } else if (formIndicator === \"D\") {\n      className = \"draw\";\n    } else if (formIndicator === \"L\") {\n      className = \"loss\";\n    }\n    return className;\n  }\n\n  function styleBTTS(BTTSBoolean) {\n    let className;\n    if (BTTSBoolean === \"\\u2714\") {\n      className = \"BTTSTrue\";\n    } else if (BTTSBoolean === \"\\u2718\") {\n      className = \"BTTSFalse\";\n    }\n    return className;\n  }\n\n\n\n\n  if (props.formRun) {\n    return (\n      <Fragment>\n        <ul className={props.className ? props.className : \"\"} style={props.style ? props.style : {}}>\n          <li className=\"FormHeader\">League results (most recent on right)</li>\n          <li key={`last5League`} className=\"last5League\">\n            <span className={styleForm(props.Results && props.Results[5] ? props.Results[5] : \"\")}>\n              {props.Results && props.Results[5] ? props.Results[5] : \"\"}\n            </span>\n            <span className={styleForm(props.Results && props.Results[5] ? props.Results[5] : \"\")}>\n              {props.Results && props.Results[4] ? props.Results[4] : \"\"}\n            </span>\n            <span className={styleForm(props.Results && props.Results[3] ? props.Results[3] : \"\")}>\n              {props.Results && props.Results[3] ? props.Results[3] : \"\"}\n            </span>\n            <span className={styleForm(props.Results && props.Results[2] ? props.Results[2] : \"\")}>\n              {props.Results && props.Results[2] ? props.Results[2] : \"\"}\n            </span>\n            <span className={styleForm(props.Results && props.Results[1] ? props.Results[1] : \"\")}>\n              {props.Results && props.Results[1] ? props.Results[1] : \"\"}\n            </span>\n            <span className={styleForm(props.Results && props.Results[0] ? props.Results[0] : \"\")}>\n              {props.Results && props.Results[0] ? props.Results[0] : \"\"}\n            </span>\n          </li>\n          <li className=\"FormHeader\">\n            {props.homeOrAway ? props.homeOrAway : \"N/A\"} form (most recent on right)\n          </li>\n          <li key={`last5${props.homeOrAwayResults ? props.homeOrAwayResults : \"default\"}`} className=\"FormHomeOrAway\">\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[5] ? props.ResultsHorA[5] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[5] ? props.ResultsHorA[5] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[4] ? props.ResultsHorA[4] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[4] ? props.ResultsHorA[4] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[3] ? props.ResultsHorA[3] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[3] ? props.ResultsHorA[3] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[2] ? props.ResultsHorA[2] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[2] ? props.ResultsHorA[2] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[1] ? props.ResultsHorA[1] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[1] ? props.ResultsHorA[1] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[0] ? props.ResultsHorA[0] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[0] ? props.ResultsHorA[0] : \"\"}\n            </span>\n          </li>\n          <li\n            key=\"BTTSArrayHomeOrAway\"\n            className=\"BTTSArrayHomeOrAway\"\n            data-cy={props.name ? props.name + \"BTTSArrayHomeOrAway\" : \"BTTSArrayHomeOrAway\"}\n          >\n            <div className=\"BTTSResults\">{props.BTTSArray ? `BTTS` : ``}</div>\n            <span className={styleBTTS(props.BTTSArray && props.BTTSArray[5] ? props.BTTSArray[5] : \"\")}>\n              {props.BTTSArray && props.BTTSArray[5] ? props.BTTSArray[5] : \"\"}\n            </span>\n            <span className={styleBTTS(props.BTTSArray && props.BTTSArray[4] ? props.BTTSArray[4] : \"\")}>\n              {props.BTTSArray && props.BTTSArray[4] ? props.BTTSArray[4] : \"\"}\n            </span>\n            <span className={styleBTTS(props.BTTSArray && props.BTTSArray[3] ? props.BTTSArray[3] : \"\")}>\n              {props.BTTSArray && props.BTTSArray[3] ? props.BTTSArray[3] : \"\"}\n            </span>\n            <span className={styleBTTS(props.BTTSArray && props.BTTSArray[2] ? props.BTTSArray[2] : \"\")}>\n              {props.BTTSArray && props.BTTSArray[2] ? props.BTTSArray[2] : \"\"}\n            </span>\n            <span className={styleBTTS(props.BTTSArray && props.BTTSArray[1] ? props.BTTSArray[1] : \"\")}>\n              {props.BTTSArray && props.BTTSArray[1] ? props.BTTSArray[1] : \"\"}\n            </span>\n            <span className={styleBTTS(props.BTTSArray && props.BTTSArray[0] ? props.BTTSArray[0] : \"\")}>\n              {props.BTTSArray && props.BTTSArray[0] ? props.BTTSArray[0] : \"\"}\n            </span>\n          </li>\n          <div className=\"FormSummaries\">\n            {/* <li className=\"FormSummaryHome\">{props.FormTextString ? props.FormTextString : \"The below stats are only available to paying customers\"}</li> */}\n            <li className=\"StyleOfPlay\">{`Style - ${props.StyleOfPlay ? props.StyleOfPlay : \"N/A\"}`}</li>\n            <li className=\"StyleOfPlay\">{`${props.homeOrAway ? props.homeOrAway : \"N/A\"} style - ${props.StyleOfPlayHomeOrAway ? props.StyleOfPlayHomeOrAway : \"N/A\"}`}</li>\n            {/* <li className=\"FavouriteSummaryHome\">{props.FavouriteRecord ? props.FavouriteRecord : \"Graphs also only available to paying customers\"}</li> */}\n          </div>\n          <div className=\"AllStats\">\n            <li\n              key=\"TeamScored\"\n              className=\"TeamScored\"\n              data-cy={props.name ? props.name + \"teamScored\" : \"teamScored\"}\n            >\n              {`Avg goals scored - ${props.goals !== undefined ? props.goals : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamConceeded\"\n              className=\"TeamConceeded\"\n              data-cy={props.name ? props.name + \"teamConceded\" : \"teamConceded\"}\n            >\n              {`Avg goals conceeded - ${props.conceeded !== undefined ? props.conceeded : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamPossession\"\n              className=\"TeamPossession\"\n              data-cy={props.name ? props.name + \"teamPossession\" : \"teamPossession\"}\n            >\n              {`Avg possession - ${props.possession !== undefined ? props.possession : \"N/A\"}%`}\n            </li>\n            <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name ? props.name + \"teamXG\" : \"teamXG\"}>\n              {`Avg XG - ${props.XG !== undefined ? props.XG : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamXGConceded\"\n              className=\"TeamXGConceded\"\n              data-cy={props.name ? props.name + \"teamXGConceded\" : \"teamXGConceded\"}\n            >\n              {`Avg XG conceded - ${props.XGConceded !== undefined ? props.XGConceded : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamXGSwing\"\n              className=\"TeamXGSwing\"\n              data-cy={props.name ? props.name + \"teamXGSwing\" : \"teamXGSwing\"}\n            >\n              {`XG difference swing (last 5): ${\n                props.XGSwing !== undefined ? props.XGSwing.toFixed(2) : \"N/A\"\n              }`}\n            </li>\n            <li\n              key=\"goalDifference\"\n              className=\"goalDifference\"\n              data-cy={props.name ? props.name + \"goalDifference\" : \"goalDifference\"}\n            >\n              {`Goal difference : `}\n              <span>{props.goalDifference !== undefined ? props.goalDifference : \"N/A\"}</span>\n            </li>\n            <li\n              key=\"goalDifferenceHorA\"\n              className=\"goalDifferenceHorA\"\n              data-cy={props.name ? props.name + \"goalDifference\" : \"goalDifference\"}\n            >\n              {`Goal difference ${props.homeOrAway ? props.homeOrAway : \"N/A\"} : ${\n                props.goalDifferenceHomeOrAway !== undefined ? props.goalDifferenceHomeOrAway : \"N/A\"\n              }`}\n            </li>\n            <li\n              key=\"AverageSOT\"\n              className=\"AverageSOT\"\n              data-cy={props.name ? props.name + \"averageSOT\" : \"averageSOT\"}\n            >\n              {`Avg shots on target - ${props.sot !== undefined ? props.sot : \"N/A\"}`}\n            </li>\n            <li\n              key=\"DangerousAttacks\"\n              className=\"DangerousAttacks\"\n              data-cy={props.name ? props.name + \"dangerousAttacks\" : \"dangerousAttacks\"}\n            >\n              {`Avg dangerous attacks - ${props.dangerousAttacks !== undefined ? props.dangerousAttacks : \"N/A\"}`}\n            </li>\n            <li\n              key=\"LeaguePosition\"\n              className=\"LeaguePosition\"\n              data-cy={props.name ? props.name + \"leaguePosition\" : \"leaguePosition\"}\n            >\n              {`League position - ${\n                props.leaguePosition !== undefined ? props.leaguePosition : \"N/A\"\n              }`}\n            </li>\n            <li\n              key=\"LeaguePositionHomeOrAway\"\n              className=\"LeaguePositionHomeOrAway\"\n              data-cy={props.name ? props.name + \"LeaguePositionHomeOrAway\" : \"LeaguePositionHomeOrAway\"}\n            >\n              {`Position (${props.homeOrAway ? props.homeOrAway : \"N/A\"} only) - ${\n                props.homeOrAwayLeaguePosition !== undefined ? props.homeOrAwayLeaguePosition : \"N/A\"\n              }`}\n            </li>\n            <li\n              key=\"WinPercentage\"\n              className=\"WinPercentage\"\n              data-cy={props.name ? props.name + \"WinPercentage\" : \"WinPercentage\"}\n            >\n              {props.homeOrAway && props.winPercentage !== undefined && props.winPercentage !== \"N/A\" ? `${props.homeOrAway} PPG - ${props.winPercentage.toFixed(2)}` : \"N/A\"}\n            </li>\n            <li key=\"PPG\" className=\"PPG\" data-cy={props.name ? props.name + \"PPG\" : \"PPG\"}>\n              {`Season PPG - ${props.ppg !== undefined ? props.ppg : \"N/A\"}`}\n            </li>\n            <li\n              key=\"FormTrend10a\"\n              className=\"FormTrend\"\n              data-cy={props.name ? props.name + \"FormTrend10\" : \"FormTrend10\"}\n            >\n              {`Last 10 PPG: ${props.formTrend && props.formTrend[0] !== undefined ? props.formTrend[0] : \"N/A\"}`}\n            </li>\n            <li\n              key=\"FormTrend10b\"\n              className=\"FormTrend\"\n              data-cy={props.name ? props.name + \"FormTrend10\" : \"FormTrend10\"}\n            >\n              {`Last 6 PPG: ${props.formTrend && props.formTrend[1] !== undefined ? props.formTrend[1] : \"N/A\"}`}\n            </li>\n            <li\n              key=\"FormTrend10c\"\n              className=\"FormTrend\"\n              data-cy={props.name ? props.name + \"FormTrend10\" : \"FormTrend10\"}\n            >\n              {`Last 5 PPG: ${props.formTrend && props.formTrend[2] !== undefined ? props.formTrend[2] : \"N/A\"}.`}\n            </li>\n            <li\n              key=\"CardsTotal\"\n              className=\"CardsTotal\"\n              data-cy={props.name ? props.name + \"CardsTotal\" : \"CardsTotal\"}\n            >\n              {`Cards total: ${props.CardsTotal !== undefined ? props.CardsTotal : \"N/A\"}`}\n            </li>\n            <li\n              key=\"CornersAverage\"\n              className=\"CornersAverage\"\n              data-cy={props.name ? props.name + \"CornersAverage\" : \"CornersAverage\"}\n            >\n              {`Corners average: ${props.CornersAverage !== undefined ? props.CornersAverage : \"N/A\"}`}\n            </li>\n          </div>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  } else {\n    return (\n      <Fragment>\n        <ul className={props.className ? props.className : \"\"} style={props.style ? props.style : {}}>\n          <div className=\"FormSummaries\">\n            {/* <li className=\"FormSummaryHome\">{props.FormTextString ? props.FormTextString : \"The below stats are available to paying customers only\"}</li> */}\n            {/* <li className=\"FavouriteSummaryAway\">{props.FavouriteRecord ? props.FavouriteRecord : \"Graphs also only available to paying customers\"}</li> */}\n          </div>\n          <div className=\"AllStats\">\n            <li\n              key=\"TeamScored\"\n              className=\"TeamScored\"\n              data-cy={props.name ? props.name + \"teamScored\" : \"teamScored\"}\n            >\n              {`Avg goals scored - ${props.goals !== undefined ? props.goals : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamConceeded\"\n              className=\"TeamConceeded\"\n              data-cy={props.name ? props.name + \"teamConceded\" : \"teamConceded\"}\n            >\n              {`Avg goals conceeded - ${props.conceeded !== undefined ? props.conceeded : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamPossession\"\n              className=\"TeamPossession\"\n              data-cy={props.name ? props.name + \"teamPossession\" : \"teamPossession\"}\n            >\n              {`Avg possession - ${props.possession !== undefined ? props.possession : \"N/A\"}%`}\n            </li>\n            <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name ? props.name + \"teamXG\" : \"teamXG\"}>\n              {`Avg XG - ${props.XG !== undefined ? props.XG : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamXGConceded\"\n              className=\"TeamXGConceded\"\n              data-cy={props.name ? props.name + \"teamXGConceded\" : \"teamXGConceded\"}\n            >\n              {`Avg XG conceded - ${props.XGConceded !== undefined ? props.XGConceded : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamXGSwing\"\n              className=\"TeamXGSwing\"\n              data-cy={props.name ? props.name + \"teamXGSwing\" : \"teamXGSwing\"}\n            >\n              {`XG difference swing (last 5): ${\n                props.XGSwing !== undefined ? props.XGSwing.toFixed(2) : \"N/A\"\n              }`}\n            </li>\n            <li\n              key=\"AverageSOT\"\n              className=\"AverageSOT\"\n              data-cy={props.name ? props.name + \"averageSOT\" : \"averageSOT\"}\n            >\n              {`Avg shots on target - ${props.sot !== undefined ? props.sot : \"N/A\"}`}\n            </li>\n            <li\n              key=\"DangerousAttacks\"\n              className=\"DangerousAttacks\"\n              data-cy={props.name ? props.name + \"dangerousAttacks\" : \"dangerousAttacks\"}\n            >\n              {`Avg dangerous attacks - ${props.dangerousAttacks !== undefined ? props.dangerousAttacks : \"N/A\"}`}\n            </li>\n            <li\n              key=\"LeaguePosition\"\n              className=\"LeaguePosition\"\n              data-cy={props.name ? props.name + \"leaguePosition\" : \"leaguePosition\"}\n            >\n              {`League position - ${\n                props.leaguePosition !== undefined ? props.leaguePosition : \"N/A\"\n              }`}\n            </li>\n            <li\n              key=\"LeaguePositionHomeOrAway\"\n              className=\"LeaguePositionHomeOrAway\"\n              data-cy={props.name ? props.name + \"LeaguePositionHomeOrAway\" : \"LeaguePositionHomeOrAway\"}\n            >\n              {`Position (${props.homeOrAway ? props.homeOrAway : \"N/A\"} only) - ${\n                props.homeOrAwayLeaguePosition !== undefined ? props.homeOrAwayLeaguePosition : \"N/A\"\n              }`}\n            </li>\n            <li\n              key=\"WinPercentage\"\n              className=\"WinPercentage\"\n              data-cy={props.name ? props.name + \"WinPercentage\" : \"WinPercentage\"}\n            >\n              {props.homeOrAway && props.winPercentage !== undefined\n                ? `${props.homeOrAway} PPG - ${props.winPercentage.toFixed(2)}`\n                : \"N/A\"}\n            </li>\n            <li key=\"PPG\" className=\"PPG\" data-cy={props.name ? props.name + \"PPG\" : \"PPG\"}>\n              {`Season PPG - ${props.ppg !== undefined ? props.ppg : \"N/A\"}`}\n            </li>\n            <li\n              key=\"FormTrend10a\"\n              className=\"FormTrend\"\n              data-cy={props.name ? props.name + \"FormTrend10\" : \"FormTrend10\"}\n            >\n              {`Last 10 PPG: ${props.formTrend && props.formTrend[0] !== undefined ? props.formTrend[0] : \"N/A\"}`}\n            </li>\n            <li\n              key=\"FormTrend10b\"\n              className=\"FormTrend\"\n              data-cy={props.name ? props.name + \"FormTrend10\" : \"FormTrend10\"}\n            >\n              {`Last 6 PPG: ${props.formTrend && props.formTrend[1] !== undefined ? props.formTrend[1] : \"N/A\"}`}\n            </li>\n            <li\n              key=\"FormTrend10c\"\n              className=\"FormTrend\"\n              data-cy={props.name ? props.name + \"FormTrend10\" : \"FormTrend10\"}\n            >\n              {`Last 5 PPG: ${props.formTrend && props.formTrend[2] !== undefined ? props.formTrend[2] : \"N/A\"}.`}\n            </li>\n            <li\n              key=\"CardsTotal\"\n              className=\"CardsTotal\"\n              data-cy={props.name ? props.name + \"CardsTotal\" : \"CardsTotal\"}\n            >\n              {`Cards total: ${props.CardsTotal !== undefined ? props.CardsTotal : \"N/A\"}`}\n            </li>\n            <li\n              key=\"CornersAverage\"\n              className=\"CornersAverage\"\n              data-cy={props.name ? props.name + \"CornersAverage\" : \"CornersAverage\"}\n            >\n              {`Corners average: ${props.CornersAverage !== undefined ? props.CornersAverage : \"N/A\"}`}\n            </li>\n          </div>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Stats;\n","import React from \"react\";\n\nfunction Div(props) {\n  return (\n    <div id={props.id} onClick={props.onClick} style={props.style} className={props.className}>{props.text}</div>\n  );\n}\n\nexport default Div;\n","export async function getForm(match) {\n  const teams = [match.homeId, match.awayId];\n  const fixtureForm = [];\n\n  for (let i = 0; i < teams.length; i++) {\n    const team = teams[i];\n\n    let response = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}formTeam/${team}`\n    );\n    await response.json().then((formData) => {\n      formData.lastMatchTimestamp = formData.last_updated_match_timestamp\n      fixtureForm[i] = formData;\n    });\n  }\n  return fixtureForm;\n}\n","import React, { useState, useEffect } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport { selectedOdds } from \"../components/OddsRadio\";\nimport oddslib from \"oddslib\";\nexport let rangeValue = [1, 10];\n\nexport const Slide = (props) => {\n  const [range, setRange] = useState([1.1, 10]);\n  const [fractionalValue, setFractionalValue] = useState([\"1/9\", \"10/1\"]);\n\n  useEffect(() => {\n    if (selectedOdds === \"Fractional odds\") {\n      let roundedValueOne = (Math.round(range[0] * 5) / 5).toFixed(1);\n      let roundedValueTwo = (Math.round(range[1] * 5) / 5).toFixed(1);\n\n      try {\n        const fractionalOne = oddslib\n          .from(\"decimal\", roundedValueOne)\n          .to(\"fractional\", { precision: 1 });\n        const fractionalTwo = oddslib\n          .from(\"decimal\", roundedValueTwo)\n          .to(\"fractional\", { precision: 1 });\n        setFractionalValue([fractionalOne, fractionalTwo]);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [range]);\n\n  const handleChange = (event, newValue) => {\n    setRange(newValue);\n    rangeValue = newValue;\n  };\n\n  return (\n    <Slider\n      aria-label=\"Always visible\"\n      value={range}\n      sx={{\n        width: \"90%\",\n        color: \"#030061\",\n      }}\n      onChange={handleChange}\n      valueLabelDisplay=\"auto\"\n      step={0.1}\n      min={1.1}\n      max={10}\n      valueLabelFormat={(value, index) =>\n        selectedOdds === \"Fractional odds\" ? fractionalValue[index] : value\n      }\n    />\n  );\n};\n","import React from \"react\";\nimport Collapsible from \"react-collapsible\";\n\nconst Collapsable = (props) => {\n  return (\n    <Collapsible transitionTime={300} trigger={<button className={props.classNameButton}>{props.buttonText}</button>} className={props.className? props.className: \"Collapsable\"}>\n      <div className={props.classNameFlex? props.classNameFlex: \"\"}>\n      <span className={props.classNameTwo? props.classNameTwo: props.buttonText} style={props.style} key={`123${props.buttonText}`}>{props.element}</span>\n      <span className={props.classNameThree? props.classNameTwo: props.buttonText} key={`456${props.buttonText}`}>{props.elementTwo}</span>\n      </div>\n    </Collapsible>\n  );\n};\n\n\nexport default Collapsable;","import React from \"react\";\nimport Collapsible from \"react-collapsible\";\n\nconst CollapsableStats = (props) => {\n  return (\n    <Collapsible transitionTime={300} trigger={<button className={props.classNameButton}>{props.buttonText}</button>} className={props.className? props.className: \"Collapsable\"}>\n      <div className={props.classNameFlex? props.classNameFlex: \"\"}>\n      {props.children}\n      </div>\n    </Collapsible>\n  );\n};\n\n\nexport default CollapsableStats;","import React, { Component, Fragment } from \"react\";\nimport { getNewTips } from \"../logic/getScorePredictions\"\nimport {allTips} from \"../logic/getScorePredictions\"\nexport var incrementValue = 3;\n\nexport var riskLevel = 10;\n\nclass Increment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      incrementValue,\n      riskLevel,\n      show: true,\n    };\n  }\n\n  IncrementItem = () => {\n    if(incrementValue > 1){\n    this.setState({ incrementValue: this.state.incrementValue - 1 });\n    this.setState({ riskLevel: this.state.riskLevel - 1 });\n    incrementValue = (this.state.incrementValue - 1);\n    riskLevel = this.state.riskLevel - 1;\n    }\n    getNewTips(allTips)\n  };\n  DecreaseItem = () => {\n    if(incrementValue > 0){\n      this.setState({ incrementValue: this.state.incrementValue + 1 });\n      this.setState({ riskLevel: this.state.riskLevel + 1 });\n      incrementValue = (this.state.incrementValue + 1);\n      riskLevel = this.state.riskLevel + 1;\n    }\n    getNewTips(allTips)\n  };\n\n  render() {\n    return (\n      <Fragment>\n          <button className=\"IncrementButton\" onClick={this.IncrementItem}>\n            -\n          </button>\n          <button className=\"DecrementButton\" onClick={this.DecreaseItem}>\n            +\n          </button>\n      </Fragment>\n\n    );\n  }\n}\n\nexport default Increment;\n","export async function getBTTSPotential(\n  match,\n  homeGoals,\n  awayGoals,\n  directnessHome,\n  directnessAway\n) {\n  const homeBTTS = match.bttsAllPercentageHome;\n  const homeOnlyBTTS = match.bttsPercentageHomeHome;\n  const awayOnlyBTTS = match.bttsPercentageAwayAway;\n  const awayBTTS = match.bttsAllPercentageAway;\n  const homeG = homeGoals;\n  const awayG = awayGoals;\n\n  match.combinedBTTS = (homeBTTS + awayBTTS) / 2;\n\n  if (\n    match.bttsFraction !== \"N/A\" &&\n    match.status !== \"suspended\" &&\n    match.status !== \"canceled\"\n  ) {\n    if (\n      homeBTTS > 50 &&\n      awayBTTS > 50 &&\n      homeOnlyBTTS > 50 &&\n      awayOnlyBTTS > 50 &&\n      match.awayOdds < 4 &&\n      match.awayOdds > 1.3 &&\n      homeG >= 1 &&\n      awayG >= 1 &&\n      directnessHome < 11 &&\n      directnessAway < 11\n    ) {\n      match.btts = true;\n      match.bttsChosen = true;\n      match.totalGoals = match.rawFinalHomeGoals + match.rawFinalAwayGoals;\n    } else {\n      match.btts = false;\n      match.bttsChosen = false;\n    }\n  }\n  return match;\n}\n","import SwiperCore, { EffectCoverflow, Pagination } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/swiper-bundle.min.css\";\nimport \"swiper/swiper.min.css\";\n\nSwiperCore.use([EffectCoverflow, Pagination]);\n\nexport const Slider = (props) => {\n  return (\n    <Swiper\n      effect={\"coverflow\"}\n      autoHeight={true}\n      grabCursor={true}\n      centeredSlides={true}\n      slidesPerView={1}\n      coverflowEffect={{\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: false,\n      }}\n      pagination={{ clickable: true }}\n      className=\"mySwiper\"\n    >\n      <SwiperSlide>\n       {props.element}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element2}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element3}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element4}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element5}\n      </SwiperSlide>\n    </Swiper>\n  );\n};\n","import React, { useState } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nexport let minimumXG = 0;\nexport let minimumGD = 0;\nexport let minimumGDHorA = 0;\nexport let minimumLast6 = 0;\n\nfunction SlideDiff(props) {\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n\n    switch (true) {\n      case props.useCase === \"xg\":\n        minimumXG = newValue;\n        break;\n      case props.useCase === \"gd\":\n        minimumGD = newValue;\n        break;\n      case props.useCase === \"gdHorA\":\n        minimumGDHorA = newValue;\n        break;\n      case props.useCase === \"last10\":\n        minimumLast6 = newValue;\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Slider\n      aria-label=\"Always visible\"\n      value={value}\n      sx={{\n        width: \"90%\",\n        color: \"#030061\",\n      }}\n      onChange={handleChange}\n      step={1}\n      marks={props.marks}\n      valueLabelDisplay=\"auto\"\n      min={parseFloat(props.lower)}\n      max={parseFloat(props.upper)}\n    />\n  );\n}\n\nexport default SlideDiff;\n","import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\napiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId:process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\nconsole.log(process.env.REACT_APP_FIREBASE_API_KEY);  // Add this to confirm it's available\n\nconst app = initializeApp(firebaseConfig);\n\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);","import { db } from \"../firebase\";\nimport { doc, getDoc } from \"firebase/firestore\";\n\nexport async function checkUserPaidStatus(uid) {\n  if (!uid) throw new Error(\"User UID is required\");\n\n  const userRef = doc(db, \"users\", uid);\n  const userSnap = await getDoc(userRef);\n  \n  if (userSnap.exists()) {\n    return userSnap.data().isPaidUser;\n  } else {\n    return false;\n  }\n}\n","import { createContext, useContext, useState, useEffect } from \"react\";\nimport { auth, db } from \"../firebase\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { ThreeDots } from \"react-loading-icons\";\n\nconst AuthContext = createContext();\n\nexport let userDetail;\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isPaidUser, setIsPaidUser] = useState(false);\n  const [loading, setLoading] = useState(true); // Add a loading state\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (currentUser) => {\n      setUser(currentUser);\n      userDetail = currentUser;\n\n      if (currentUser) {\n        // Check Firestore for subscription status using currentUser.email or uid\n        // (Adjust the document reference as needed)\n        const userRef = doc(db, \"users\", currentUser.uid);\n        const userSnap = await getDoc(userRef);\n        if (userSnap.exists()) {\n          const userData = userSnap.data();\n\n          const isPaid = userData.isPaidUser;\n          currentUser.isPaid = isPaid\n          if (isPaid === true) {\n            setIsPaidUser(isPaid === true);\n            console.log(isPaid)\n          } else {\n            setIsPaidUser(false);\n          }\n        } else {\n          console.log(\"User document does not exist in Firestore.\");\n          setIsPaidUser(false);\n        }\n      }\n\n      setLoading(false); // Auth state has been determined\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  // Until loading is complete, return a loading indicator (or null)\n  if (loading) {\n    return <ThreeDots />;\n  }\n\n  return (\n    <AuthContext.Provider value={{ user, isPaidUser }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Hook to access authentication data\nexport const useAuth = () => useContext(AuthContext);\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { matches, diff } from \"./getFixtures\";\nimport { RenderAllFixtures } from \"../logic/getFixtures\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport CollapsableStats from \"../components/CollapsableStats\";\nimport { allForm } from \"../logic/getFixtures\";\nimport Increment from \"../components/Increment\";\nimport { incrementValue } from \"../components/Increment\";\nimport { getBTTSPotential } from \"../logic/getBTTSPotential\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport { Slider } from \"../components/Carousel\";\nimport {\n  calculateAttackingStrength,\n  calculateDefensiveStrength,\n  calculateMetricStrength,\n} from \"./getStats\";\nimport { rangeValue } from \"../components/Slider\";\nimport {\n  minimumGD,\n  minimumXG,\n  minimumLast6,\n  minimumGDHorA,\n} from \"../components/SliderDiff\";\nimport { checkUserPaidStatus } from \"../logic/hasUserPaid\";\nimport { userDetail } from \"../logic/authProvider\";\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nlet finalHomeGoals;\nlet finalAwayGoals;\nlet rawFinalHomeGoals;\nlet rawFinalAwayGoals;\nlet homeOdds;\nlet awayOdds;\nlet totalGoals = 0;\nlet totalGoals2 = 0;\nlet numberOfGames = 0;\nlet drawPredictions = 0;\nlet homePredictions = 0;\nlet awayPredictions = 0;\nlet drawAIPredictions = 0;\nlet homeAIPredictions = 0;\nlet awayAIPredictions = 0;\nlet allOutcomes = 0;\nlet homeOutcomes = 0;\nlet awayOutcomes = 0;\nlet winAmount = 0;\nlet lossAmount = 0;\nlet AIwinAmount = 0;\nlet AIlossAmount = 0;\nlet sumStatDAWin = 0;\nlet sumStatDALoss = 0;\nlet sumStatPossessionWin = 0;\nlet sumStatPossessionLoss = 0;\nlet sumStatSOTWin = 0;\nlet sumStatSOTLoss = 0;\nlet sumStatPPGLast10Win = 0;\nlet sumStatPPGLast10Loss = 0;\nlet sumOddsWin = 0;\nlet sumOddsLoss = 0;\nlet sumXGForWin = 0;\nlet sumXGForLoss = 0;\nlet sumXGAgainstWin = 0;\nlet sumXGAgainstLoss = 0;\nlet allWinOutcomes = 0;\nlet allLossOutcomes = 0;\nlet allDrawOutcomes = 0;\nlet totalROI = 0;\nlet totalInvestment = 0;\nlet totalProfit = 0;\nlet totalAIROI = 0;\nlet totalAIInvestment = 0;\nlet totalAIProfit = 0;\nexport let formObjectHome;\nexport let formObjectAway;\nexport let clicked = false;\nlet paid;\n\nexport var renderPredictions;\n\nasync function convertTimestamp(timestamp) {\n  let newDate = new Date(timestamp * 1000);\n  let [day, month, year] = newDate.toLocaleDateString(\"en-US\").split(\"/\");\n\n  let converted = `${year}-${day}-${month}`;\n\n  return converted;\n}\n\nexport function getPointsFromLastX(lastX) {\n  let points = 0;\n  let pointsAddition;\n\n  try {\n    lastX.forEach((game) => {\n      switch (true) {\n        case game === \"W\":\n          pointsAddition = 3;\n          break;\n        case game === \"D\":\n          pointsAddition = 1;\n          break;\n        case game === \"L\":\n          pointsAddition = 0;\n          break;\n        default:\n          break;\n      }\n\n      points = points + pointsAddition;\n    });\n    return points;\n  } catch (error) {\n    console.log(error);\n    return \"N/A\";\n  }\n}\n\nasync function getPastLeagueResults(team, game, hOrA, form) {\n  form.completeData = true;\n  let date = game.date;\n  if (allLeagueResultsArrayOfObjects[game.leagueIndex].fixtures.length > 10) {\n    let teamsHomeResults = allLeagueResultsArrayOfObjects[\n      game.leagueIndex\n    ].fixtures.filter((fixture) => fixture.home_name === team);\n\n    teamsHomeResults = teamsHomeResults\n      .filter(function (item) {\n        return item.date_unix < date - 86400;\n      })\n      .sort((a, b) => a.date_unix - b.date_unix);\n\n    let teamsAwayResults = allLeagueResultsArrayOfObjects[\n      game.leagueIndex\n    ].fixtures.filter((fixture) => fixture.away_name === team);\n\n    teamsAwayResults = teamsAwayResults\n      .filter(function (item) {\n        return item.date_unix < date - 86400;\n      })\n      .sort((a, b) => a.date_unix - b.date_unix);\n\n    async function addTotalsToRecord(record) {\n      // Calculate the total for each array and add as a new property\n      record.totalW =\n        record.W.reduce((sum, value) => sum + value, 0) / record.W.length;\n      record.totalD =\n        record.D.reduce((sum, value) => sum + value, 0) / record.D.length;\n      record.totalL =\n        record.L.reduce((sum, value) => sum + value, 0) / record.L.length;\n\n      return record; // Return the updated object\n    }\n\n    form.recordAgainstIndividualStyles = {\n      W: [],\n      D: [],\n      L: [],\n    };\n\n    form.recordAgainstIndividualStylesHome = {\n      W: [],\n      D: [],\n      L: [],\n    };\n\n    form.recordAgainstIndividualStylesAway = {\n      W: [],\n      D: [],\n      L: [],\n    };\n\n    let homeResults = [];\n    let awayResults = [];\n    let oddsSumHome = 0;\n    let oddsSumAway = 0;\n    let favouriteCount = 0;\n    let underdogCount = 0;\n    let winningFavouriteCount = 0;\n    let drawingFavouriteCount = 0;\n    let beatenFavouriteCount = 0;\n    let winningUnderdogCount = 0;\n    let drawingUnderdogCount = 0;\n    let beatenUnderdogCount = 0;\n\n    for (let index = 0; index < teamsHomeResults.length; index++) {\n      const resultedGame = teamsHomeResults[index];\n      homeResults.push({\n        homeTeam: resultedGame.home_name,\n        gameweek: resultedGame.game_week,\n        homeGoals: resultedGame.homeGoalCount,\n        homePPGPreMatch: resultedGame.pre_match_teamA_overall_ppg,\n        awayPPGPreMatch: resultedGame.pre_match_teamB_overall_ppg,\n        XG:\n          resultedGame.team_a_xg === -1 || resultedGame.team_a_xg > 7\n            ? resultedGame.homeGoalCount\n            : resultedGame.team_a_xg,\n        awayTeam: resultedGame.away_name,\n        awayGoals: resultedGame.awayGoalCount,\n        XGAgainst:\n          resultedGame.team_b_xg === -1 || resultedGame.team_b_xg > 7\n            ? resultedGame.awayGoalCount\n            : resultedGame.team_b_xg,\n        possession:\n          resultedGame.team_a_possession === -1\n            ? 50\n            : resultedGame.team_a_possession,\n        scored: resultedGame.homeGoalCount,\n        conceeded: resultedGame.awayGoalCount,\n        shots:\n          resultedGame.team_a_shots === -1 ? 12 : resultedGame.team_a_shots,\n        sot:\n          resultedGame.team_a_shotsOnTarget === -1\n            ? 5\n            : resultedGame.team_a_shotsOnTarget,\n        sotAgainst:\n          resultedGame.team_b_shotsOnTarget === -1\n            ? 5\n            : resultedGame.team_b_shotsOnTarget,\n        dangerousAttacks:\n          resultedGame.team_a_dangerous_attacks === -1\n            ? 50\n            : resultedGame.team_a_dangerous_attacks,\n        corners:\n          resultedGame.team_a_corners === -1 ? 6 : resultedGame.team_a_corners,\n        date: await convertTimestamp(resultedGame.date_unix),\n        dateRaw: resultedGame.date_unix,\n        oddsHome: resultedGame.odds_ft_1,\n        oddsAway: resultedGame.odds_ft_2,\n        btts:\n          resultedGame.homeGoalCount > 0 && resultedGame.awayGoalCount > 0\n            ? true\n            : false,\n        points:\n          resultedGame.homeGoalCount > resultedGame.awayGoalCount\n            ? 3\n            : resultedGame.homeGoalCount < resultedGame.awayGoalCount\n            ? 0\n            : 1,\n        result:\n          resultedGame.homeGoalCount > resultedGame.awayGoalCount\n            ? \"W\"\n            : resultedGame.homeGoalCount < resultedGame.awayGoalCount\n            ? \"L\"\n            : \"D\",\n      });\n\n      const directnessHome =\n        (resultedGame.team_a_possession === -1\n          ? 50\n          : 100 - resultedGame.team_a_possession) /\n        (resultedGame.team_b_shotsOnTarget === 0 ||\n        resultedGame.team_b_shotsOnTarget === -1\n          ? 5\n          : resultedGame.team_b_shotsOnTarget);\n\n      switch (true) {\n        case resultedGame.homeGoalCount > resultedGame.awayGoalCount:\n          form.recordAgainstIndividualStyles.W.push(directnessHome);\n          form.recordAgainstIndividualStylesHome.W.push(directnessHome);\n          break;\n        case resultedGame.homeGoalCount < resultedGame.awayGoalCount:\n          form.recordAgainstIndividualStyles.L.push(directnessHome);\n          form.recordAgainstIndividualStylesHome.L.push(directnessHome);\n\n          break;\n        case resultedGame.homeGoalCount === resultedGame.awayGoalCount:\n          form.recordAgainstIndividualStyles.D.push(directnessHome);\n          form.recordAgainstIndividualStylesHome.D.push(directnessHome);\n          break;\n        default:\n          break;\n      }\n\n      oddsSumHome = oddsSumHome + resultedGame.odds_ft_1;\n      favouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2\n          ? favouriteCount + 1\n          : favouriteCount + 0;\n      winningFavouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? winningFavouriteCount + 1\n          : winningFavouriteCount + 0;\n      drawingFavouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingFavouriteCount + 1\n          : drawingFavouriteCount + 0;\n      beatenFavouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? beatenFavouriteCount + 1\n          : beatenFavouriteCount + 0;\n\n      underdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2\n          ? underdogCount + 1\n          : underdogCount + 0;\n      winningUnderdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? winningUnderdogCount + 1\n          : winningUnderdogCount + 0;\n      drawingUnderdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingUnderdogCount + 1\n          : drawingUnderdogCount + 0;\n      beatenUnderdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? beatenUnderdogCount + 1\n          : beatenUnderdogCount + 0;\n    }\n    for (let index = 0; index < teamsAwayResults.length; index++) {\n      const resultedGame = teamsAwayResults[index];\n      awayResults.push({\n        homeTeam: resultedGame.home_name,\n        gameweek: resultedGame.game_week,\n        homeGoals: resultedGame.homeGoalCount,\n        homePPGPreMatch: resultedGame.pre_match_teamA_overall_ppg,\n        awayPPGPreMatch: resultedGame.pre_match_teamB_overall_ppg,\n        XG:\n          resultedGame.team_b_xg === -1 || resultedGame.team_b_xg > 7\n            ? resultedGame.awayGoalCount\n            : resultedGame.team_b_xg,\n        awayTeam: resultedGame.away_name,\n        awayGoals: resultedGame.awayGoalCount,\n        XGAgainst:\n          resultedGame.team_a_xg === -1 || resultedGame.team_a_xg > 7\n            ? resultedGame.homeGoalCount\n            : resultedGame.team_a_xg,\n        possession:\n          resultedGame.team_b_possession === -1\n            ? 50\n            : resultedGame.team_b_possession,\n        scored: resultedGame.awayGoalCount,\n        conceeded: resultedGame.homeGoalCount,\n        shots:\n          resultedGame.team_b_shots === -1 ? 12 : resultedGame.team_b_shots,\n        sot:\n          resultedGame.team_b_shotsOnTarget === -1\n            ? 5\n            : resultedGame.team_b_shotsOnTarget,\n        sotAgainst:\n          resultedGame.team_a_shotsOnTarget === -1\n            ? 5\n            : resultedGame.team_a_shotsOnTarget,\n        dangerousAttacks:\n          resultedGame.team_b_dangerous_attacks === -1\n            ? 50\n            : resultedGame.team_b_dangerous_attacks,\n        corners:\n          resultedGame.team_b_corners === -1 ? 6 : resultedGame.team_b_corners,\n        date: await convertTimestamp(resultedGame.date_unix),\n        dateRaw: resultedGame.date_unix,\n        oddsHome: resultedGame.odds_ft_1,\n        oddsAway: resultedGame.odds_ft_2,\n        btts:\n          resultedGame.homeGoalCount > 0 && resultedGame.awayGoalCount > 0\n            ? true\n            : false,\n        points:\n          resultedGame.homeGoalCount > resultedGame.awayGoalCount\n            ? 0\n            : resultedGame.homeGoalCount < resultedGame.awayGoalCount\n            ? 3\n            : 1,\n        result:\n          resultedGame.homeGoalCount > resultedGame.awayGoalCount\n            ? \"L\"\n            : resultedGame.homeGoalCount < resultedGame.awayGoalCount\n            ? \"W\"\n            : \"D\",\n      });\n\n      const directnessAway =\n        (resultedGame.team_b_possession === -1\n          ? 50\n          : 100 - resultedGame.team_b_possession) /\n        (resultedGame.team_a_shotsOnTarget === 0 ||\n        resultedGame.team_a_shotsOnTarget === -1\n          ? 5\n          : resultedGame.team_a_shotsOnTarget);\n\n      switch (true) {\n        case resultedGame.homeGoalCount > resultedGame.awayGoalCount:\n          form.recordAgainstIndividualStyles.L.push(directnessAway);\n          form.recordAgainstIndividualStylesAway.L.push(directnessAway);\n          break;\n        case resultedGame.homeGoalCount < resultedGame.awayGoalCount:\n          form.recordAgainstIndividualStyles.W.push(directnessAway);\n          form.recordAgainstIndividualStylesAway.W.push(directnessAway);\n          break;\n        case resultedGame.homeGoalCount === resultedGame.awayGoalCount:\n          form.recordAgainstIndividualStyles.D.push(directnessAway);\n          form.recordAgainstIndividualStylesAway.D.push(directnessAway);\n          break;\n        default:\n          break;\n      }\n\n      oddsSumAway = oddsSumAway + resultedGame.odds_ft_2;\n      favouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2\n          ? favouriteCount + 1\n          : favouriteCount + 0;\n      winningFavouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? winningFavouriteCount + 1\n          : winningFavouriteCount + 0;\n      drawingFavouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingFavouriteCount + 1\n          : drawingFavouriteCount + 0;\n      beatenFavouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? beatenFavouriteCount + 1\n          : beatenFavouriteCount + 0;\n\n      underdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2\n          ? underdogCount + 1\n          : underdogCount + 0;\n      winningUnderdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? winningUnderdogCount + 1\n          : winningUnderdogCount + 0;\n      drawingUnderdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingUnderdogCount + 1\n          : drawingUnderdogCount + 0;\n      beatenUnderdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? beatenUnderdogCount + 1\n          : beatenUnderdogCount + 0;\n    }\n\n    await addTotalsToRecord(form.recordAgainstIndividualStyles);\n\n    let reversedResultsHome = homeResults;\n    let reversedResultsAway = awayResults;\n\n    homeResults.sort((a, b) => a.dateRaw - b.dateRaw);\n\n    awayResults.sort((a, b) => a.dateRaw - b.dateRaw);\n\n    // console.log(form.teamName)\n    // console.log(homeResults)\n    // console.log(awayResults)\n\n    if (game.homeTeam === team) {\n      let y = game.homeOdds;\n      //Clear fav\n      if (y <= 1.5) {\n        const allClearFavouriteResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 1.45\n        );\n        const allClearFavouriteResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 1.45\n        );\n\n        form.simlarGameResultsHome = allClearFavouriteResultsHome\n          .concat(allClearFavouriteResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //fav\n      else if (y <= 2.1) {\n        const allSlightFavouriteResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 2.1 && fixture.oddsHome > 1.45\n        );\n        const allSlightFavouriteResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 2.1 && fixture.oddsAway > 1.45\n        );\n        game.simlarGameResultsHome = allSlightFavouriteResultsHome\n          .concat(allSlightFavouriteResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //Tossup\n      else if (y <= 2.75) {\n        const allTossupResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 2.75 && fixture.oddsHome > 2.1\n        );\n        const allTossupResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 2.75 && fixture.oddsAway > 2.1\n        );\n        game.simlarGameResultsHome = allTossupResultsHome\n          .concat(allTossupResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //Underdog\n      else if (y <= 4) {\n        const allUnderdogResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 4 && fixture.oddsHome > 2.75\n        );\n        const allUnderdogResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 4 && fixture.oddsAway > 2.75\n        );\n        game.simlarGameResultsHome = allUnderdogResultsHome\n          .concat(allUnderdogResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //MassiveUnderdog\n      else if (y > 4) {\n        const allMassiveUnderdogResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome > 4\n        );\n        const allMassiveUnderdogResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway > 4\n        );\n        game.simlarGameResultsHome = allMassiveUnderdogResultsHome\n          .concat(allMassiveUnderdogResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n    } else if (game.awayTeam === team) {\n      let z = game.awayOdds;\n      //Clear fav\n      if (z <= 1.5) {\n        const allClearFavouriteResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 1.45\n        );\n        const allClearFavouriteResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 1.45\n        );\n\n        game.simlarGameResultsAway = allClearFavouriteResultsHome\n          .concat(allClearFavouriteResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //fav\n      else if (z <= 2.1) {\n        const allSlightFavouriteResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 2.1 && fixture.oddsHome > 1.45\n        );\n        const allSlightFavouriteResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 2.1 && fixture.oddsAway > 1.45\n        );\n        game.simlarGameResultsAway = allSlightFavouriteResultsHome\n          .concat(allSlightFavouriteResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //Tossup\n      else if (z <= 2.75) {\n        const allTossupResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 2.75 && fixture.oddsHome > 2.1\n        );\n        const allTossupResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 2.75 && fixture.oddsAway > 2.1\n        );\n        game.simlarGameResultsAway = allTossupResultsHome\n          .concat(allTossupResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //Underdog\n      else if (z <= 4) {\n        const allUnderdogResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 4 && fixture.oddsHome > 2.75\n        );\n        const allUnderdogResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 4 && fixture.oddsAway > 2.75\n        );\n        game.simlarGameResultsAway = allUnderdogResultsHome\n          .concat(allUnderdogResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //MassiveUnderdog\n      else if (z > 4) {\n        const allMassiveUnderdogResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome > 4.5\n        );\n        const allMassiveUnderdogResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway > 4.5\n        );\n        game.simlarGameResultsAway = allMassiveUnderdogResultsHome\n          .concat(allMassiveUnderdogResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n    }\n\n    const allTeamResultsUnordered =\n      reversedResultsHome.concat(reversedResultsAway);\n    const allTeamResults = allTeamResultsUnordered.sort(\n      (a, b) => a.dateRaw - b.dateRaw\n    );\n\n    // console.log(form.teamName);\n    // console.log(allTeamResults);\n\n    let points = 0;\n    let pointsWeighted = 0;\n\n    allTeamResults.forEach((teamResult) => {\n      points = points + teamResult.points;\n      pointsWeighted = pointsWeighted + teamResult.points * teamResult.odds;\n    });\n\n    form.pointsWeighted = pointsWeighted;\n    form.points = points;\n    form.gamesPlayed = allTeamResults.length;\n\n    const allTeamResultsHome = reversedResultsHome.sort(\n      (b, a) => a.dateRaw - b.dateRaw\n    );\n    const allTeamResultsAway = reversedResultsAway.sort(\n      (b, a) => a.dateRaw - b.dateRaw\n    );\n\n    form.allTeamResults = allTeamResults.sort((b, a) => a.dateRaw - b.dateRaw);\n    form.allTeamResultsLast6 = form.allTeamResults.slice(0, 6);\n\n    const points6 = allTeamResults.map((res) => res.points).slice(0, 6);\n    const pointsSum6 = points6.reduce((a, b) => a + b, 0);\n    form.avPoints6 = pointsSum6 / points6.length;\n    form.pointsSum6 = pointsSum6;\n\n    const points5 = allTeamResults.map((res) => res.points).slice(0, 5);\n    const pointsSum5 = points5.reduce((a, b) => a + b, 0);\n    form.avPoints5 = pointsSum5 / points5.length;\n\n    const pointsAll = allTeamResults.map((res) => res.points);\n    const pointsSumAll = pointsAll.reduce((a, b) => a + b, 0);\n    form.avPointsAll = pointsSumAll / pointsAll.length;\n\n    const resultsAll = allTeamResults.map((res) => res.result);\n    const resultsHome = allTeamResultsHome.map((res) => res.result);\n    const resultsAway = allTeamResultsAway.map((res) => res.result);\n\n    form.LastFiveForm = resultsAll.slice(0, 5);\n    form.LastSixForm = resultsAll.slice(0, 6);\n    form.LastTenForm = resultsAll.slice(0, 10);\n\n    form.resultsAll = resultsAll.slice(0, 6);\n    form.resultsHome = resultsHome.slice(0, 6);\n    form.resultsAway = resultsAway.slice(0, 6);\n\n    // console.log(form.teamName)\n    // console.log(form)\n\n    const avScoredLast5 = allTeamResults.map((res) => res.scored).slice(0, 5);\n    const avScoredLast5Sum = avScoredLast5.reduce((a, b) => a + b, 0);\n    form.avScoredLast5 = avScoredLast5Sum / avScoredLast5.length;\n    const avConceededLast5 = allTeamResults\n      .map((res) => res.conceeded)\n      .slice(0, 5);\n    const avConceededLast5Sum = avConceededLast5.reduce((a, b) => a + b, 0);\n    form.avConceededLast5 = avConceededLast5Sum / avConceededLast5.length;\n    const avDALast5 = allTeamResults\n      .map((res) => res.dangerousAttacks)\n      .slice(0, 5);\n    const avDALast5Sum = avDALast5.reduce((a, b) => a + b, 0);\n    form.avDALast5 = avDALast5Sum / avDALast5.length;\n    const avSOTLast5 = allTeamResults.map((res) => res.sot).slice(0, 5);\n    const avSOTLast5Sum = avSOTLast5.reduce((a, b) => a + b, 0);\n    form.avSOTLast5 = avSOTLast5Sum / avSOTLast5.length;\n    const avSOTAgainstLast5 = allTeamResults\n      .map((res) => res.sotAgainst)\n      .slice(0, 5);\n    const avSOTAgainstLast5Sum = avSOTAgainstLast5.reduce((a, b) => a + b, 0);\n    form.avSOTAgainstLast5 = avSOTAgainstLast5Sum / avSOTAgainstLast5.length;\n    const avShotsLast5 = allTeamResults.map((res) => res.shots).slice(0, 5);\n    const avShotsLast5Sum = avShotsLast5.reduce((a, b) => a + b, 0);\n    form.avShotsLast5 = avShotsLast5Sum / avShotsLast5.length;\n    const avCornersLast5 = allTeamResults.map((res) => res.corners).slice(0, 5);\n    const avCornersLast5Sum = avCornersLast5.reduce((a, b) => a + b, 0);\n    form.avCornersLast5 = avCornersLast5Sum / avCornersLast5.length;\n    const avPosessionLast5 = allTeamResults\n      .map((res) => res.possession)\n      .slice(0, 6);\n    const avPosessionLast5Sum = avPosessionLast5.reduce((a, b) => a + b, 0);\n    form.avPosessionLast5 = avPosessionLast5Sum / avPosessionLast5.length;\n    const avXGLast5 = allTeamResults.map((res) => res.XG).slice(0, 5);\n    const avXGLast5Sum = avXGLast5.reduce((a, b) => a + b, 0);\n    form.avXGLast5 = avXGLast5Sum / avXGLast5.length;\n    const avXGAgainstLast5 = allTeamResults\n      .map((res) => res.XGAgainst)\n      .slice(0, 5);\n\n    const avXGAgainstLast5Sum = avXGAgainstLast5.reduce((a, b) => a + b, 0);\n    form.avXGAgainstLast5 = avXGAgainstLast5Sum / avXGAgainstLast5.length;\n\n    const averageOddsHome = oddsSumHome / teamsHomeResults.length;\n    const averageOddsAway = oddsSumAway / teamsAwayResults.length;\n    form.favouriteCount = favouriteCount;\n    form.winningFavouriteCount = winningFavouriteCount;\n    form.drawingFavouriteCount = drawingFavouriteCount;\n    form.beatenFavouriteCount = beatenFavouriteCount;\n\n    form.underdogCount = underdogCount;\n    form.winningUnderdogCount = winningUnderdogCount;\n    form.drawingUnderdogCount = drawingUnderdogCount;\n    form.beatenUnderdogCount = beatenUnderdogCount;\n\n    form.oddsReliabilityWin =\n      favouriteCount > 0\n        ? (form.winningFavouriteCount / form.favouriteCount) * 100\n        : 0;\n    form.oddsReliabilityDraw =\n      favouriteCount > 0\n        ? (form.drawingFavouriteCount / form.favouriteCount) * 100\n        : 0;\n    form.oddsReliabilityLose =\n      favouriteCount > 0\n        ? (form.beatenFavouriteCount / form.favouriteCount) * 100\n        : 0;\n\n    form.oddsReliabilityWinAsUnderdog =\n      underdogCount > 0\n        ? (form.winningUnderdogCount / form.underdogCount) * 100\n        : 0;\n    form.oddsReliabilityDrawAsUnderdog =\n      underdogCount > 0\n        ? (form.drawingUnderdogCount / form.underdogCount) * 100\n        : 0;\n    form.oddsReliabilityLoseAsUnderdog =\n      underdogCount > 0\n        ? (form.beatenUnderdogCount / form.underdogCount) * 100\n        : 0;\n\n    form.reliableIndicator =\n      form.winningFavouriteCount + form.beatenUnderdogCount;\n    form.unreliableIndicator =\n      form.beatenFavouriteCount +\n      form.drawingFavouriteCount +\n      form.winningUnderdogCount +\n      form.drawingUnderdogCount;\n\n    form.predictabilityScore =\n      form.reliableIndicator / form.unreliableIndicator;\n\n    let reliabilityString;\n\n    switch (true) {\n      case form.predictabilityScore < 0.3:\n        reliabilityString =\n          \"Odds have been an extremely unreliable indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 0.3 && form.predictabilityScore < 0.8:\n        reliabilityString =\n          \"Odds have been an unreliable indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 0.8 && form.predictabilityScore < 1.2:\n        reliabilityString =\n          \"Odds have been a decent indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 1.2 && form.predictabilityScore < 1.7:\n        reliabilityString =\n          \"Odds have been a good indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 1.7 && form.predictabilityScore < 2.2:\n        reliabilityString =\n          \"Odds have been a very good indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 2.2:\n        reliabilityString =\n          \"Odds have been an excellent indicator of actual performance so far this season\";\n        break;\n      default:\n        break;\n    }\n\n    form.reliabilityString = reliabilityString;\n\n    const teamGoalsHome = reversedResultsHome.map((res) => res.scored);\n\n    const teamGoalsAway = awayResults.map((res) => res.scored);\n    const teamGoalsAll = allTeamResults.map((res) => res.scored);\n    const teamConceededHome = homeResults.map((res) => res.conceeded);\n    const teamConceededAway = awayResults.map((res) => res.conceeded);\n    const teamConceededAll = allTeamResults.map((res) => res.conceeded);\n\n    const teamXGForAll = allTeamResults.map((res) => res.XG);\n    const teamXGAgainstAll = allTeamResults.map((res) => res.XGAgainst);\n    const teamXGForAllRecentAtStart = teamXGForAll;\n    const teamXGAgainstAllRecentAtStart = teamXGAgainstAll;\n\n    const teamXGForHome = homeResults.map((res) => res.XG);\n    const teamXGAgainstHome = homeResults.map((res) => res.XGAgainst);\n    const teamXGForAway = awayResults.map((res) => res.XG);\n    const teamXGAgainstAway = awayResults.map((res) => res.XGAgainst);\n\n    const XGSum = teamXGForAll.reduce((a, b) => a + b, 0);\n    const avgXGScored = XGSum / teamXGForAll.length || 0;\n    const XGAgainstSum = teamXGAgainstAll.reduce((a, b) => a + b, 0);\n    const avgXGConceeded = XGAgainstSum / teamXGAgainstAll.length || 0;\n\n    const shortTermXGDiff = form.avXGLast5 - form.avXGAgainstLast5;\n    const longTermXGDiff = avgXGScored - avgXGConceeded;\n\n    form.XGChangeRecently = shortTermXGDiff - longTermXGDiff;\n\n    const possession = allTeamResults.map((res) => res.possession);\n    const possessionSum = possession.reduce((a, b) => a + b, 0);\n    const avgPossession = possessionSum / possession.length || 0;\n\n    const possessionHome = homeResults.map((res) => res.possession);\n    const possessionSumHome = possessionHome.reduce((a, b) => a + b, 0);\n    form.avgPossessionHome = possessionSumHome / possessionHome.length || 0;\n\n    const possessionAway = awayResults.map((res) => res.possession);\n    const possessionSumAway = possessionAway.reduce((a, b) => a + b, 0);\n    form.avgPossessionAway = possessionSumAway / possessionAway.length || 0;\n\n    const dangerousAttacks = allTeamResults.map((res) => res.dangerousAttacks);\n    const dangerousAttacksSum = dangerousAttacks.reduce((a, b) => a + b, 0);\n    const avgDangerousAttacks =\n      dangerousAttacksSum / dangerousAttacks.length || 0;\n\n    const dangerousAttacksHome = homeResults.map((res) => res.dangerousAttacks);\n    const dangerousAttacksSumHome = dangerousAttacksHome.reduce(\n      (a, b) => a + b,\n      0\n    );\n    form.avgDangerousAttacksHome =\n      dangerousAttacksSumHome / dangerousAttacksHome.length || 0;\n\n    const dangerousAttacksAway = awayResults.map((res) => res.dangerousAttacks);\n    const dangerousAttacksSumAway = dangerousAttacksAway.reduce(\n      (a, b) => a + b,\n      0\n    );\n    form.avgDangerousAttacksAway =\n      dangerousAttacksSumAway / dangerousAttacksAway.length || 0;\n\n    const shots = allTeamResults.map((res) => res.shots);\n    const shotsSum = shots.reduce((a, b) => a + b, 0);\n    const avgShots = shotsSum / shots.length || 0;\n    form.avgShots = avgShots;\n\n    const shotsHome = homeResults.map((res) => res.shots);\n    const shotsSumHome = shotsHome.reduce((a, b) => a + b, 0);\n    form.avgShotsHome = shotsSumHome / shotsHome.length || 0;\n\n    const shotsAway = awayResults.map((res) => res.shots);\n    const shotsSumAway = shotsAway.reduce((a, b) => a + b, 0);\n    form.avgShotsAway = shotsSumAway / shotsAway.length || 0;\n\n    const shotsOnTarget = allTeamResults.map((res) => res.sot);\n    const shotsOnTargetSum = shotsOnTarget.reduce((a, b) => a + b, 0);\n    const avgShotsOnTarget = shotsOnTargetSum / shotsOnTarget.length || 0;\n\n    const shotsOnTargetHome = homeResults.map((res) => res.sot);\n    const shotsOnTargetSumHome = shotsOnTargetHome.reduce((a, b) => a + b, 0);\n    form.avgShotsOnTargetHome =\n      shotsOnTargetSumHome / shotsOnTargetHome.length || 0;\n\n    const shotsOnTargetAway = awayResults.map((res) => res.sot);\n    const shotsOnTargetSumAway = shotsOnTargetAway.reduce((a, b) => a + b, 0);\n    form.avgShotsOnTargetAway =\n      shotsOnTargetSumAway / shotsOnTargetAway.length || 0;\n\n    form.directnessRating = avgPossession / avgShotsOnTarget;\n    form.directnessRatingHome =\n      form.avgPossessionHome / form.avgShotsOnTargetHome;\n    form.directnessRatingAway =\n      form.avgPossessionAway / form.avgShotsOnTargetAway;\n\n    const shotsOnTargetAgainst = allTeamResults.map((res) => res.sotAgainst);\n    const shotsOnTargetSumAgainst = shotsOnTargetAgainst.reduce(\n      (a, b) => a + b,\n      0\n    );\n    const avgShotsOnTargetAgainst =\n      shotsOnTargetSumAgainst / shotsOnTargetAgainst.length || 0;\n\n    const shotsOnTargetAgainstHome = homeResults.map((res) => res.sotAgainst);\n    const shotsOnTargetSumAgainstHome = shotsOnTargetAgainstHome.reduce(\n      (a, b) => a + b,\n      0\n    );\n    form.avgShotsOnTargetAgainstHome =\n      shotsOnTargetSumAgainstHome / shotsOnTargetAgainstHome.length || 0;\n\n    const shotsOnTargetAgainstAway = awayResults.map((res) => res.sotAgainst);\n    const shotsOnTargetSumAgainstAway = shotsOnTargetAgainstAway.reduce(\n      (a, b) => a + b,\n      0\n    );\n    form.avgShotsOnTargetAgainstAway =\n      shotsOnTargetSumAgainstAway / shotsOnTargetAgainstAway.length || 0;\n\n    const corners = allTeamResults.map((res) => res.corners);\n    const cornersSum = corners.reduce((a, b) => a + b, 0);\n    const cornersAv = cornersSum / corners.length || 0;\n\n    const cornersHome = homeResults.map((res) => res.corners);\n    const cornersSumHome = cornersHome.reduce((a, b) => a + b, 0);\n    form.cornersAvHome = cornersSumHome / cornersHome.length || 0;\n\n    const cornersAway = awayResults.map((res) => res.corners);\n    const cornersSumAway = cornersAway.reduce((a, b) => a + b, 0);\n    form.cornersAvAway = cornersSumAway / cornersAway.length || 0;\n\n    const last5XG = teamXGForAllRecentAtStart.slice(0, 5);\n    const last5XGSum = last5XG.reduce((a, b) => a + b, 0);\n    const last5XGAvgFor = last5XGSum / last5XG.length || 0;\n\n    const last5XGHome = teamXGForHome.slice(0, 5);\n    const last5XGSumHome = last5XGHome.reduce((a, b) => a + b, 0);\n    form.last5XGAvgForHome = last5XGSumHome / last5XGHome.length || 0;\n\n    const last5XGAway = teamXGForAway.slice(0, 5);\n    const last5XGSumAway = last5XGAway.reduce((a, b) => a + b, 0);\n    form.last5XGAvgForAway = last5XGSumAway / last5XGAway.length || 0;\n\n    const XGSumHome = teamXGForHome.reduce((a, b) => a + b, 0);\n    form.avgXGScoredHome = XGSumHome / teamXGForHome.length || 0;\n\n    const XGSumAway = teamXGForAway.reduce((a, b) => a + b, 0);\n    form.avgXGScoredAway = XGSumAway / teamXGForAway.length || 0;\n\n    const XGAgainstSumHome = teamXGAgainstHome.reduce((a, b) => a + b, 0);\n    form.avgXGConceededHome = XGAgainstSumHome / teamXGAgainstHome.length || 0;\n\n    const XGAgainstSumAway = teamXGAgainstAway.reduce((a, b) => a + b, 0);\n    form.avgXGConceededAway = XGAgainstSumAway / teamXGAgainstAway.length || 0;\n\n    const last5XGAgainst = teamXGAgainstAllRecentAtStart.slice(0, 5);\n    const last5XGAgainstSum = last5XGAgainst.reduce((a, b) => a + b, 0);\n    const last5XGAvgAgainst = last5XGAgainstSum / last5XGAgainst.length || 0;\n\n    const last5XGAgainstHome = teamXGForHome.slice(0, 5);\n    const last5XGAgainstSumHome = last5XGAgainstHome.reduce((a, b) => a + b, 0);\n    form.last5XGAvgAgainstHome =\n      last5XGAgainstSumHome / last5XGAgainstHome.length || 0;\n\n    const last5XGAgainstAway = teamXGForAway.slice(0, 5);\n    const last5XGAgainstSumAway = last5XGAgainstAway.reduce((a, b) => a + b, 0);\n    form.last5XGAvgAgainstAway =\n      last5XGAgainstSumAway / last5XGAgainstAway.length || 0;\n\n    form.XGDiffNonAverage = XGSum - XGAgainstSum;\n    form.XGDiffNonAverageLast5 = last5XGSum - last5XGAgainstSum;\n\n    form.XGOverall = parseFloat(avgXGScored.toFixed(2));\n    form.XGlast5 = parseFloat(last5XGAvgFor.toFixed(2));\n\n    const shotsLast5Arr = shots.slice(0, 5);\n    const shotsLast5Sum = shotsLast5Arr.reduce((a, b) => a + b, 0);\n    const avgShotsLast5 = shotsLast5Sum / shotsLast5Arr.length || 0;\n    form.avgShotsLast5 = avgShotsLast5;\n\n    const shotsHomeArr = shotsHome.slice(0, 5);\n    const shotsHomeSum = shotsHomeArr.reduce((a, b) => a + b, 0);\n    const avgShotsHome = shotsHomeSum / shotsHomeArr.length || 0;\n    form.avgShotsHome = avgShotsHome;\n\n    const shotsAwayArr = shotsAway.slice(0, 5);\n    const shotsAwaySum = shotsAwayArr.reduce((a, b) => a + b, 0);\n    const avgShotsAway = shotsAwaySum / shotsAwayArr.length || 0;\n    form.avgShotsAway = avgShotsAway;\n\n    form.avgShotValue = (form.XGOverall / form.avgShots) * 100;\n    form.avgShotValueLast5 = (form.XGlast5 / form.avgShotsLast5) * 100;\n    form.avgShotValueHome = (form.avgXGScoredHome / form.avgShotsHome) * 100;\n    form.avgShotValueAway = (form.avgXGScoredAway / form.avgShotsAway) * 100;\n\n    form.XGAgainstAvgOverall = parseFloat(avgXGConceeded.toFixed(2));\n    form.XGAgainstlast5 = parseFloat(last5XGAvgAgainst.toFixed(2));\n\n    form.AveragePossessionOverall = parseFloat(avgPossession.toFixed(1));\n    form.AverageDangerousAttacksOverall = parseFloat(\n      avgDangerousAttacks.toFixed(1)\n    );\n    form[\"Average Shots\"] = parseFloat(avgShots.toFixed(1));\n    form.AverageCorners = parseFloat(cornersAv.toFixed(1));\n    form.AverageShotsOnTargetOverall = parseFloat(avgShotsOnTarget.toFixed(1));\n    form.AverageShotsOnTargetAgainstOverall = parseFloat(\n      avgShotsOnTargetAgainst.toFixed(1)\n    );\n    const alpha = 0.4;\n    const beta = 0.2;\n\n    let forAndAgainstRollingAv;\n    let forAndAgainstRollingAvHomeOrAway;\n\n    if (hOrA === \"home\") {\n      form.allGoalsArrayHomeRecent = teamGoalsAll.slice(0, 20);\n      form.allConceededArrayHomeRecent = teamConceededAll.slice(0, 20);\n      form.allGoalsArrayHome = teamGoalsAll;\n      form.allConceededArrayHome = teamConceededAll;\n      form.allGoalsArrayHomeOnly = teamGoalsHome;\n      form.allConceededArrayHomeOnly = teamConceededHome;\n      const sum = teamGoalsHome.reduce((a, b) => a + b, 0);\n      const sumTwo = teamConceededHome.reduce((a, b) => a + b, 0);\n      form.goalDifferenceHomeOrAway = sum - sumTwo;\n\n      forAndAgainstRollingAv = await predictGoalsWithExponentialSmoothing(\n        form.allGoalsArrayHome.reverse(),\n        form.allConceededArrayHome.reverse(),\n        alpha\n      );\n\n      forAndAgainstRollingAvHomeOrAway =\n        await predictGoalsWithExponentialSmoothing(\n          form.allGoalsArrayHomeOnly.reverse(),\n          form.allConceededArrayHomeOnly.reverse(),\n          beta\n        );\n    } else if (hOrA === \"away\") {\n      form.allGoalsArrayAwayRecent = teamGoalsAll.slice(0, 20);\n      form.allConceededArrayAwayRecent = teamConceededAll.slice(0, 20);\n      form.allGoalsArrayAway = teamGoalsAll;\n      form.allConceededArrayAway = teamConceededAll;\n      form.allGoalsArrayAwayOnly = teamGoalsAway;\n      form.allConceededArrayAwayOnly = teamConceededAway;\n      const sum = teamGoalsAway.reduce((a, b) => a + b, 0);\n      const sumTwo = teamConceededAway.reduce((a, b) => a + b, 0);\n      form.goalDifferenceHomeOrAway = sum - sumTwo;\n      forAndAgainstRollingAv = await predictGoalsWithExponentialSmoothing(\n        form.allGoalsArrayAway.reverse(),\n        form.allConceededArrayAway.reverse(),\n        alpha\n      );\n\n      forAndAgainstRollingAvHomeOrAway =\n        await predictGoalsWithExponentialSmoothing(\n          form.allGoalsArrayAwayOnly,\n          form.allConceededArrayAwayOnly,\n          beta\n        );\n    }\n\n    let bttsHome = homeResults.map((res) => res.btts);\n    if (bttsHome.length > 10) {\n      bttsHome = bttsHome.slice(-10);\n    }\n\n    let bttsAway = awayResults.map((res) => res.btts);\n    if (bttsAway.length > 10) {\n      bttsAway = bttsAway.slice(-10);\n    }\n\n    let bttsAll = allTeamResults.map((res) => res.btts);\n    if (bttsAll.length > 10) {\n      bttsAll = bttsAll.slice(-10);\n    }\n\n    const bttsHomeCount = bttsHome.filter((btts) => btts === true);\n    const bttsHomeString = `${bttsHomeCount.length}/${bttsHome.length}`;\n    const bttsHomePercentage = (\n      (bttsHomeCount.length / bttsHome.length) *\n      100\n    ).toFixed(0);\n\n    const bttsAwayCount = bttsAway.filter((btts) => btts === true);\n    const bttsAwayString = `${bttsAwayCount.length}/${bttsAway.length}`;\n    const bttsAwayPercentage = (\n      (bttsAwayCount.length / bttsAway.length) *\n      100\n    ).toFixed(0);\n    const bttsAllCount = bttsAll.filter((btts) => btts === true);\n    const bttsAllString = `${bttsAllCount.length}/${bttsAll.length}`;\n    const bttsAllPercentage = (\n      (bttsAllCount.length / bttsAll.length) *\n      100\n    ).toFixed(0);\n    form.bttsAllPercentage = bttsAllPercentage;\n    form.bttsHomePercentage = bttsHomePercentage;\n    form.bttsAwayPercentage = bttsAwayPercentage;\n\n    let r = 10;\n    let x = 10;\n\n    const teamGoalsHomeRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsHome,\n      teamGoalsHome.length < x ? teamGoalsHome.length : x\n    );\n\n    const teamGoalsAwayRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsAway,\n      teamGoalsAway.length < x ? teamGoalsAway.length : x\n    );\n\n    function roundXG(xg, scored) {\n      if (scored >= xg) {\n        // Round up to the nearest integer if scored is greater or equal\n        return Math.ceil(xg);\n      } else {\n        // Round down to the nearest integer if scored is less\n        return Math.floor(xg);\n      }\n    }\n    // console.log(form.teamName)\n    // console.log(allTeamResults)\n    const xgAndScored = allTeamResults.map((res) => ({\n      XG: res.XG,\n      scored: res.scored,\n    }));\n    const xgAgainstAndConceeded = allTeamResults.map((res) => ({\n      XG: res.XGAgainst,\n      conceeded: res.conceeded,\n    }));\n\n    console.log(homeResults);\n    const xgAndScoredHome = homeResults.map((res) => ({\n      XG: res.XG,\n      scored: res.scored,\n    }));\n    const xgAgainstAndConceededHome = homeResults.map((res) => ({\n      XG: res.XGAgainst,\n      conceeded: res.conceeded,\n    }));\n    const xgAndScoredAway = awayResults.map((res) => ({\n      XG: res.XG,\n      scored: res.scored,\n    }));\n    const xgAgainstAndConceededAway = awayResults.map((res) => ({\n      XG: res.XGAgainst,\n      conceeded: res.conceeded,\n    }));\n\n    const RoundedXGForV2 = xgAndScored.map(\n      ({ XG }) => XG\n      // roundXG(XG, scored, form)\n    );\n    const RoundedXGAgainstV2 = xgAgainstAndConceeded.map(\n      ({ XG }) => XG\n      // roundXG(XG, conceeded, form)\n    );\n    const RoundedXGForHomeV2 = xgAndScoredHome.map(\n      ({ XG }) => XG\n      // roundXG(XG, scored, form)\n    );\n    const RoundedXGAgainstHomeV2 = xgAgainstAndConceededHome.map(\n      ({ XG }) => XG\n      // roundXG(XG, conceeded, form)\n    );\n    const RoundedXGForAwayV2 = xgAndScoredAway.map(\n      ({ XG }) => XG\n      // roundXG(XG, scored, form)\n    );\n    const RoundedXGAgainstAwayV2 = xgAgainstAndConceededAway.map(\n      ({ XG }) => XG\n      // roundXG(XG, conceeded, form)\n    );\n    const RoundedXGFor = teamXGForAll.map((xg) => Math.round(xg));\n    const RoundedXGAgainst = teamXGAgainstAll.map((xg) => Math.round(xg));\n    const RoundedXGForHome = teamXGForHome.map((xg) => Math.round(xg));\n    const RoundedXGAgainstHome = teamXGAgainstHome.map((xg) => Math.round(xg));\n    const RoundedXGForAway = teamXGForAway.map((xg) => Math.round(xg));\n    const RoundedXGAgainstAway = teamXGAgainstAway.map((xg) => Math.round(xg));\n\n    RoundedXGForV2.reverse();\n    RoundedXGAgainstV2.reverse();\n    RoundedXGForHomeV2.reverse();\n    RoundedXGAgainstHomeV2.reverse();\n    RoundedXGForAwayV2.reverse();\n    RoundedXGAgainstAwayV2.reverse();\n    // RoundedXGForAway.reverse()\n    // RoundedXGAgainstAway.reverse()\n\n    form.XGPrediction = await predictGoalsWithExponentialSmoothing(\n      RoundedXGForV2,\n      RoundedXGAgainstV2,\n      alpha\n    );\n\n    form.XGPredictionHome = await predictGoalsWithExponentialSmoothing(\n      RoundedXGForHomeV2,\n      RoundedXGAgainstHomeV2,\n      beta\n    );\n\n    form.XGPredictionAway = await predictGoalsWithExponentialSmoothing(\n      RoundedXGForAwayV2,\n      RoundedXGAgainstAwayV2,\n      beta\n    );\n\n    const teamConceededHomeRollingAverage =\n      await predictNextWeightedMovingAverage(\n        teamConceededHome,\n        teamConceededHome.length < x ? teamConceededHome.length : x\n      );\n\n    const teamConceededAwayRollingAverage =\n      await predictNextWeightedMovingAverage(\n        teamConceededAway,\n        teamConceededAway.length < x ? teamConceededAway.length : x\n      );\n\n    const sum = teamGoalsAll.reduce((a, b) => a + b, 0);\n    const avgScored = sum / teamGoalsAll.length || 0;\n    form.avgScored = parseFloat(avgScored.toFixed(2));\n\n    const sumHome = teamGoalsHome.reduce((a, b) => a + b, 0);\n    const avgScoredHome = sumHome / teamGoalsHome.length || 0;\n    form.avgScoredHome = parseFloat(avgScoredHome.toFixed(2));\n\n    const sumAway = teamGoalsAway.reduce((a, b) => a + b, 0);\n    const avgScoredAway = sumAway / teamGoalsAway.length || 0;\n    form.avgScoredAway = parseFloat(avgScoredAway.toFixed(2));\n\n    const last5 = teamGoalsAll.reverse().slice(0, 5);\n    const last5Sum = last5.reduce((a, b) => a + b, 0);\n    const last5AvgScored = parseFloat(last5Sum / last5.length || 0);\n\n    const last5Home = teamGoalsHome.slice(0, 5);\n    const last5SumHome = last5Home.reduce((a, b) => a + b, 0);\n    form.last5AvgScoredHome = parseFloat(last5SumHome / last5Home.length || 0);\n\n    const last5Away = teamGoalsAway.slice(0, 5);\n    const last5SumAway = last5Away.reduce((a, b) => a + b, 0);\n    form.last5AvgScoredAway = parseFloat(last5SumAway / last5Away.length || 0);\n\n    const last5Conceeded = teamConceededAll.reverse().slice(0, 5);\n    const last5ConceededSum = last5Conceeded.reduce((a, b) => a + b, 0);\n    const last5AvgConceeded = parseFloat(\n      last5ConceededSum / last5Conceeded.length || 0\n    );\n\n    const last5ConceededHome = teamConceededHome.slice(0, 5);\n    const last5ConceededSumHome = last5ConceededHome.reduce((a, b) => a + b, 0);\n    form.last5AvgConceededHome = parseFloat(\n      last5ConceededSumHome / last5ConceededHome.length || 0\n    );\n\n    const last5ConceededAway = teamConceededAway.slice(0, 5);\n    const last5ConceededSumAway = last5ConceededAway.reduce((a, b) => a + b, 0);\n    form.last5AvgConceededAway = parseFloat(\n      last5ConceededSumAway / last5ConceededAway.length || 0\n    );\n\n    const last10 = teamGoalsAll.slice(0, 10);\n    const last10Sum = last10.reduce((a, b) => a + b, 0);\n    const last10AvgScored = parseFloat(last10Sum / last10.length || 0);\n\n    const last10Conceeded = teamConceededAll.slice(0, 10);\n    const last10ConceededSum = last10Conceeded.reduce((a, b) => a + b, 0);\n    const last10AvgConceeded = parseFloat(\n      last10ConceededSum / last10Conceeded.length || 0\n    );\n\n    form.last5Goals = parseFloat(last5AvgScored.toFixed(2));\n    form.last5GoalsConceeded = parseFloat(last5AvgConceeded.toFixed(2));\n    form.last5GoalDiff = form.last5Goals - form.last5GoalsConceeded;\n    form.last10Goals = parseFloat(last10AvgScored.toFixed(2));\n    form.last10GoalsConceeded = parseFloat(last10AvgConceeded.toFixed(2));\n    form.last10GoalDiff = form.last10Goals - form.last10GoalsConceeded;\n\n    const teamGoalsAllRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsAll,\n      teamGoalsAll.length < r ? teamGoalsAll.length : r\n    );\n\n    const teamGoalsConceededAllRollingAverage =\n      await predictNextWeightedMovingAverage(\n        last10Conceeded,\n        last10Conceeded.length < 10 ? last10Conceeded.length : 10\n      );\n\n    const sumTwo = teamConceededAll.reduce((a, b) => a + b, 0);\n    const avgConceeded = sumTwo / teamConceededAll.length || 0;\n    form.avgConceeded = parseFloat(avgConceeded.toFixed(2));\n\n    const teamConceededHomeOnlySum = teamConceededHome.reduce(\n      (a, b) => a + b,\n      0\n    );\n    const teamConceededAvgHomeOnly =\n      teamConceededHomeOnlySum / teamConceededHome.length || 0;\n    form.teamConceededAvgHomeOnly = teamConceededAvgHomeOnly;\n\n    const teamConceededAwayOnlySum = teamConceededAway.reduce(\n      (a, b) => a + b,\n      0\n    );\n    const teamConceededAvgAwayOnly =\n      teamConceededAwayOnlySum / teamConceededAway.length || 0;\n    form.teamConceededAvgAwayOnly = teamConceededAvgAwayOnly;\n\n    form.goalDifference = sum - sumTwo;\n\n    // console.log(teamGoalsHomeRollingAverage)\n    // console.log(teamGoalsAwayRollingAverage)\n    // console.log(teamGoalsAllRollingAverage)\n    // console.log(teamConceededHomeRollingAverage)\n    // console.log(teamConceededAwayRollingAverage)\n    // console.log(teamGoalsConceededAllRollingAverage)\n    // console.log(averageOddsHome)\n    // console.log(averageOddsAway)\n    // console.log(avgScored)\n    // console.log(avgConceeded)\n    // console.log(form.XGPrediction)\n    // console.log(forAndAgainstRollingAvHomeOrAway)\n    // console.log(forAndAgainstRollingAv)\n\n    return [\n      teamGoalsHomeRollingAverage,\n      teamGoalsAwayRollingAverage,\n      teamGoalsAllRollingAverage,\n      teamConceededHomeRollingAverage,\n      teamConceededAwayRollingAverage,\n      teamGoalsConceededAllRollingAverage,\n      averageOddsHome,\n      averageOddsAway,\n      avgScored,\n      avgConceeded,\n      bttsAllString,\n      bttsHomeString,\n      bttsAwayString,\n      bttsAllPercentage,\n      bttsHomePercentage,\n      bttsAwayPercentage,\n      forAndAgainstRollingAvHomeOrAway,\n      forAndAgainstRollingAv,\n    ];\n  } else {\n    console.log(form.teamName);\n    return null;\n  }\n}\n\nasync function predictNextWeightedMovingAverage(numbers, windowSize) {\n  const startIndex = numbers.length - windowSize;\n  const window = numbers.slice(startIndex);\n  const weights = Array.from(\n    { length: windowSize },\n    (_, i) => (i + 1) / ((windowSize * (windowSize + 1)) / 2)\n  );\n  const sum = window.reduce((acc, num, i) => acc + num * weights[i], 0);\n  const movingAverage = sum / weights.reduce((acc, w) => acc + w, 0);\n  return parseFloat(movingAverage.toFixed(2));\n}\n\n// // Function to cap goals at a maximum value\n// function capGoals(goals, maxGoals = 4) {\n//   return Math.min(goals, maxGoals);\n// }\n\n// Function to calculate the weighted average using exponential smoothing\nasync function calculateWeightedAverage(arr, alpha) {\n  let weightedSum = 0;\n  let totalWeight = 0;\n\n  for (let i = arr.length - 1; i >= 0; i--) {\n    const weight = Math.pow(1 - alpha, arr.length - 1 - i);\n    weightedSum += arr[i] * weight;\n    totalWeight += weight;\n  }\n\n  return weightedSum / totalWeight;\n}\n\n// Function to predict goals scored and conceded for a team with exponential smoothing\nasync function predictGoalsWithExponentialSmoothing(\n  teamGoalsFor,\n  teamGoalsAgainst,\n  alpha\n) {\n  const lambdaFor = await calculateWeightedAverage(teamGoalsFor, alpha);\n  const lambdaAgainst = await calculateWeightedAverage(teamGoalsAgainst, alpha);\n\n  // You can fine-tune these values based on your model and data\n  const predictedGoalsFor = lambdaFor;\n  const predictedGoalsAgainst = lambdaAgainst;\n\n  return {\n    goalsFor: predictedGoalsFor,\n    goalsAgainst: predictedGoalsAgainst,\n  };\n}\n\nasync function calculateDifference(num1, num2) {\n  return num1 >= num2 ? num1 - num2 : -(num2 - num1);\n}\n\nexport async function comparison(metricOne, metricTwo) {\n  let stat1 = parseFloat(metricOne);\n  let stat2 = parseFloat(metricTwo);\n  let statDiff;\n\n  statDiff = await calculateDifference(stat1, stat2);\n\n  return parseFloat(statDiff);\n}\n\nexport async function compareStat(statOne, statTwo) {\n  let stat1 = parseFloat(statOne);\n  let stat2 = parseFloat(statTwo);\n  let statDiff;\n  // console.log( await normalizeValues(12, 2, 0, 1))\n  // console.log(await diff(1.8571428571428571, 1.14285714285714285))\n\n  if (stat1 === 0) {\n    stat1 = stat1 + 1;\n    stat2 = stat2 + 1;\n  }\n  if (stat2 === 0) {\n    stat2 = stat2 + 1;\n    stat2 = stat2 + 1;\n  }\n\n  const { normalizedValue1, normalizedValue2 } = await normalizeValues(\n    stat1,\n    stat2,\n    0,\n    1\n  );\n\n  const finalValue1 = normalizedValue1;\n  const finalValue2 = normalizedValue2;\n\n  statDiff = await diff(finalValue1, finalValue2);\n\n  // if (statDiff > 0.3 || statDiff < -0.3) {\n  //   // console.log(statDiff)\n  // } else {\n  //   statDiff = 0;\n  // }\n  return statDiff;\n}\n\nexport async function getClinicalRating(form) {\n  let rating;\n  let score;\n  switch (true) {\n    case form.dangerousAttackConversion <= 15:\n      rating = \"excellent\";\n      score = 0.8;\n      break;\n\n    case form.dangerousAttackConversion > 15 &&\n      form.dangerousAttackConversion <= 20:\n      rating = \"great\";\n      score = 0.9;\n      break;\n\n    case form.dangerousAttackConversion > 20 &&\n      form.dangerousAttackConversion <= 25:\n      rating = \"very good\";\n      score = 0.95;\n      break;\n\n    case form.dangerousAttackConversion > 25 &&\n      form.dangerousAttackConversion <= 32.5:\n      rating = \"good\";\n      score = 0.98;\n      break;\n\n    case form.dangerousAttackConversion > 30 &&\n      form.dangerousAttackConversion <= 35:\n      rating = \"above average\";\n      score = 0.99;\n      break;\n\n    case form.dangerousAttackConversion > 35 &&\n      form.dangerousAttackConversion <= 40:\n      rating = \"average\";\n      score = 1;\n      break;\n\n    case form.dangerousAttackConversion > 40 &&\n      form.dangerousAttackConversion <= 45:\n      rating = \"below average\";\n      score = 1.01;\n      break;\n\n    case form.dangerousAttackConversion > 45 &&\n      form.dangerousAttackConversion <= 50:\n      rating = \"poor\";\n      score = 1.05;\n      break;\n\n    case form.dangerousAttackConversion > 50 &&\n      form.dangerousAttackConversion <= 55:\n      rating = \"very poor\";\n      score = 1.1;\n      break;\n\n    case form.dangerousAttackConversion > 55 &&\n      form.dangerousAttackConversion <= 60:\n      rating = \"terrible\";\n      score = 1.2;\n      break;\n\n    case form.dangerousAttackConversion > 60:\n      rating = \"awful\";\n      score = 1.3;\n      break;\n\n    default:\n      break;\n  }\n\n  return [rating, score];\n}\n\nexport async function getPointsDifferential(pointsHomeAvg, pointsAwayAvg) {\n  const differential = await diff(pointsHomeAvg, pointsAwayAvg);\n  return parseFloat(differential);\n}\n\nexport async function getPointWeighting(pointsDiff) {\n  let pointsDiffWeightingHome;\n  let pointsDiffWeightingAway;\n\n  switch (true) {\n    case pointsDiff >= 2.5:\n      pointsDiffWeightingHome = 0.3;\n      pointsDiffWeightingAway = -0.3;\n      break;\n    case pointsDiff >= 2 && pointsDiff < 2.5:\n      pointsDiffWeightingHome = 0.2;\n      pointsDiffWeightingAway = -0.2;\n      break;\n    case pointsDiff >= 1.5 && pointsDiff < 2:\n      pointsDiffWeightingHome = 0.15;\n      pointsDiffWeightingAway = -0.15;\n      break;\n    case pointsDiff >= 1 && pointsDiff < 1.5:\n      pointsDiffWeightingHome = 0.1;\n      pointsDiffWeightingAway = -0.1;\n      break;\n    case pointsDiff >= 0.5 && pointsDiff < 1:\n      pointsDiffWeightingHome = 0.05;\n      pointsDiffWeightingAway = -0.05;\n      break;\n    case pointsDiff > -0.5 && pointsDiff < 0.5:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n      break;\n    case pointsDiff <= -0.5 && pointsDiff > -1:\n      pointsDiffWeightingHome = -0.05;\n      pointsDiffWeightingAway = 0.05;\n      break;\n    case pointsDiff <= -1 && pointsDiff > -1.5:\n      pointsDiffWeightingHome = -0.1;\n      pointsDiffWeightingAway = 0.1;\n      break;\n    case pointsDiff <= -1.5 && pointsDiff > -2:\n      pointsDiffWeightingHome = -0.15;\n      pointsDiffWeightingAway = 0.15;\n      break;\n    case pointsDiff <= -2 && pointsDiff > -2.5:\n      pointsDiffWeightingHome = -0.2;\n      pointsDiffWeightingAway = 0.2;\n      break;\n    case pointsDiff <= -2.5:\n      pointsDiffWeightingHome = -0.3;\n      pointsDiffWeightingAway = 0.3;\n      break;\n    default:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n  }\n  return [pointsDiffWeightingHome, pointsDiffWeightingAway];\n}\n\nexport async function compareFormTrend(recentForm, distantForm) {\n  let score;\n  let scoreTotal = 0;\n\n  for (let index = 0; index < recentForm.length; index++) {\n    const recent = recentForm[index];\n    const distant = distantForm[index];\n\n    if (recent > distant) {\n      score = 1.05;\n    } else if (recent === distant) {\n      score = 1;\n    } else if (recent < distant) {\n      score = 0.95;\n    }\n    scoreTotal = scoreTotal + score / recentForm.length;\n  }\n\n  return scoreTotal;\n}\n\nexport async function getPointAverage(pointTotal, games) {\n  return pointTotal / games;\n}\n\nasync function poissonDistribution(lambda, k) {\n  const numerator = Math.exp(-lambda) * Math.pow(lambda, k);\n  const denominator = factorial(k);\n  return numerator / denominator;\n}\n\nfunction factorial(n) {\n  if (n === 0 || n === 1) {\n    return 1;\n  }\n  let result = 1;\n  for (let i = 2; i <= n; i++) {\n    result *= i;\n  }\n  return result;\n}\n\nasync function calculateAverageGoals(goalsFor) {\n  const totalGoals = goalsFor.reduce((sum, goals) => sum + goals, 0);\n  return totalGoals / goalsFor.length;\n}\n\nasync function adjustGoalsAvg(goalsAvg, strengthRatio) {\n  return goalsAvg * strengthRatio;\n}\n\nasync function normalizeDifference(value1, value2) {\n  // Calculate the absolute difference between the two values\n  const difference = Math.abs(value1 - value2);\n\n  // Define a fixed maximum possible difference (you can adjust this value based on your needs)\n  const maxDifference = 25; // Adjust this based on your expected data\n\n  // Normalize the difference to a 0-1 range\n  const normalizedDifference = difference / maxDifference;\n\n  // Map to range 0.25 to 1.75 inversely for value1 and value2\n  const scaleMin = 0.8;\n  const scaleMax = 1.2;\n\n  // The multiplier now stretches across the 0.25 to 1.75 range (difference is 1.5)\n  const multiplier = 0.2;\n\n  let value1Normalized, value2Normalized;\n\n  if (value1 > value2) {\n    value1Normalized = 1 + normalizedDifference * multiplier; // Closer to 1.75\n    value2Normalized = 1 - normalizedDifference * multiplier; // Closer to 0.25\n  } else if (value1 < value2) {\n    value1Normalized = 1 - normalizedDifference * multiplier; // Closer to 0.25\n    value2Normalized = 1 + normalizedDifference * multiplier; // Closer to 1.75\n  } else {\n    // If the values are equal, normalize both to 1\n    value1Normalized = 1;\n    value2Normalized = 1;\n  }\n\n  return {\n    value1Normalized: Math.max(scaleMin, Math.min(value1Normalized, scaleMax)),\n    value2Normalized: Math.max(scaleMin, Math.min(value2Normalized, scaleMax)),\n  };\n}\n\nasync function predictScore(\n  goalsForTeam1,\n  goalsAgainstTeam1,\n  goalsForTeam2,\n  goalsAgainstTeam2,\n  team1Metrics,\n  team2Metrics,\n  game\n) {\n  let team1AverageGoalsFor = await calculateAverageGoals(goalsForTeam1);\n  let team1AverageGoalsAgainst = await calculateAverageGoals(goalsAgainstTeam1);\n  let team2AverageGoalsFor = await calculateAverageGoals(goalsForTeam2);\n  let team2AverageGoalsAgainst = await calculateAverageGoals(goalsAgainstTeam2);\n\n  let team1StrengthRatio = 1;\n  let team2StrengthRatio = 1;\n\n  let adjustedTeam1AverageGoals = await adjustGoalsAvg(\n    team1AverageGoalsFor,\n    team1StrengthRatio\n  );\n  let adjustedTeam2AverageGoals = await adjustGoalsAvg(\n    team2AverageGoalsFor,\n    team2StrengthRatio\n  );\n\n  let adjustedTeam1AverageGoalsAgainst = await adjustGoalsAvg(\n    team1AverageGoalsAgainst,\n    team2StrengthRatio\n  );\n  let adjustedTeam2AverageGoalsAgainst = await adjustGoalsAvg(\n    team2AverageGoalsAgainst,\n    team1StrengthRatio\n  );\n\n  let maxGoals = 5; // Set the maximum number of goals to predict\n\n  const scores = [];\n\n  for (let i = 0; i <= maxGoals; i++) {\n    for (let j = 0; j <= maxGoals; j++) {\n      let team1GoalExpectation =\n        (adjustedTeam1AverageGoals + adjustedTeam2AverageGoalsAgainst) / 2;\n      // (adjustedTeam2AverageGoalsAgainst / adjustedTeam1AverageGoalsAgainst);\n      let team2GoalExpectation =\n        (adjustedTeam2AverageGoals + adjustedTeam1AverageGoalsAgainst) / 2;\n      // (adjustedTeam1AverageGoalsAgainst / adjustedTeam2AverageGoalsAgainst);\n\n      if (!isFinite(team1GoalExpectation)) {\n        team1GoalExpectation = 0;\n      }\n\n      if (!isFinite(team2GoalExpectation)) {\n        team2GoalExpectation = 0;\n      }\n\n      const probability =\n        (await poissonDistribution(team1GoalExpectation, i)) *\n        (await poissonDistribution(team2GoalExpectation, j));\n      scores.push({\n        team1Score: i,\n        team2Score: j,\n        probability,\n      });\n    }\n  }\n\n  scores.sort((a, b) => b.probability - a.probability); // Sort scores in descending order by probability\n  const top5Scores = scores.slice(0, 5); // Get the top 5 scores\n\n  // for (const score of top5Scores) {\n  //   console.log(\n  //     `Team 1: ${score.team1Score} - Team 2: ${score.team2Score} (${(\n  //       score.probability * 100\n  //     ).toFixed(2)}%)`\n  //   );\n  // }\n  return top5Scores;\n}\n\nasync function normalizeValues(value1, value2, minRange, maxRange) {\n  if (\n    typeof value1 !== \"number\" ||\n    typeof value2 !== \"number\" ||\n    typeof minRange !== \"number\" ||\n    typeof maxRange !== \"number\"\n  ) {\n    throw new Error(\"All arguments must be numbers.\");\n  }\n\n  // Calculate the absolute values of the inputs\n\n  const absValue1 = Math.abs(value1);\n  const absValue2 = Math.abs(value2);\n\n  // Calculate the total sum of the absolute values\n  const totalAbs = absValue1 + absValue2;\n\n  // Calculate the normalized values based on the ratio of absolute values\n  const normalizedAbsValue1 =\n    (absValue1 / totalAbs) * (maxRange - minRange) + minRange;\n  const normalizedAbsValue2 =\n    (absValue2 / totalAbs) * (maxRange - minRange) + minRange;\n\n  // Adjust the signs of the normalized values based on the original values\n  const normalizedValue1 =\n    value1 >= 0 ? normalizedAbsValue1 : -normalizedAbsValue1;\n  const normalizedValue2 =\n    value2 >= 0 ? normalizedAbsValue2 : -normalizedAbsValue2;\n\n  return { normalizedValue1, normalizedValue2 };\n}\n\nasync function findClosestProperty(obj, number) {\n  let closestProperty = null;\n  let smallestDifference = Infinity;\n\n  for (const [key, value] of Object.entries(obj)) {\n    const difference = Math.abs(number - value);\n    if (difference < smallestDifference) {\n      smallestDifference = difference;\n      closestProperty = key;\n    }\n  }\n\n  return closestProperty;\n}\n\nexport async function generateGoals(homeForm, awayForm, match) {\n  const avgHomeGoals = (homeForm.forAndAgainstRollingAv.goalsFor - homeForm.forAndAgainstRollingAv.goalsAgainst) / 2;\n  // const avgHomeXG = (homeForm.XGPredictionHome.goalsFor + awayForm.XGPredictionAway.goalsAgainst) / 2;\n  // const avgXGH = (homeForm.XGPrediction.goalsFor + awayForm.XGPrediction.goalsAgainst) / 2;\n\n  let homeGoals = avgHomeGoals;\n\n  // ((homeForm.XGPrediction.goalsFor + awayForm.XGPrediction.goalsAgainst) / 2 +\n  //   (homeForm.XGPredictionHome.goalsFor +\n  //     awayForm.XGPredictionAway.goalsAgainst) /\n  //     2) /\n  // 2;\n  const avgAwayGoals = (awayForm.forAndAgainstRollingAv.goalsFor - awayForm.forAndAgainstRollingAv.goalsAgainst) / 2;\n  // const avgAwayXG = (awayForm.XGPredictionAway.goalsFor + homeForm.XGPredictionHome.goalsAgainst) / 2;\n  // const avgXGA = (awayForm.XGPrediction.goalsFor + homeForm.XGPrediction.goalsAgainst) / 2;\n\n  let awayGoals = avgAwayGoals;\n\n\n\n  let homeExpectedScore = homeForm.attackingMetrics[\"Average Expected Goals\"] - awayForm.defensiveMetrics[\"Average XG Against\"];\n  let awayExpectedScore = awayForm.attackingMetrics[\"Average Expected Goals\"] - homeForm.defensiveMetrics[\"Average XG Against\"];\n  let goalDifference = homeExpectedScore - awayExpectedScore\n  let adjustToHome = Math.round(homeForm.CleanSheetPercentage / 50);\n  let adjustToAway = Math.round(awayForm.CleanSheetPercentage / 50) * -1;\n  let finalScore = Math.round(goalDifference + adjustToHome + adjustToAway)\n\n  const homeAttackVsAwayDefenceComparison = await comparison(\n    homeForm.attackingStrength,\n    awayForm.defensiveStrengthScoreGeneration\n  );\n\n  const awayAttackVsHomeDefenceComparison = await comparison(\n    awayForm.attackingStrength,\n    homeForm.defensiveStrengthScoreGeneration\n  );\n\n  const homeOverallVsAwayOverallComparison = await comparison(\n    homeForm.attackingStrength + homeForm.defensiveStrength,\n    awayForm.attackingStrength + awayForm.defensiveStrength\n  );\n\n  const awayOverallVsHomeOverallComparison = await comparison(\n    awayForm.attackingStrength + awayForm.defensiveStrength,\n    homeForm.attackingStrength + homeForm.defensiveStrength\n  );\n\n  const homeAttackVsAwayDefenceComparisonLast5 = await comparison(\n    homeForm.attackingStrengthLast5,\n    awayForm.defensiveStrengthScoreGenerationLast5\n  );\n  const awayAttackVsHomeDefenceComparisonLast5 = await comparison(\n    awayForm.attackingStrengthLast5,\n    homeForm.defensiveStrengthScoreGenerationLast5\n  );\n\n  const homeAttackVsAwayDefenceComparisonHomeOnly = await comparison(\n    homeForm.attackingStrengthHomeOnly,\n    awayForm.defensiveStrengthScoreGenerationAwayOnly\n  );\n  const awayAttackVsHomeDefenceComparisonAwayOnly = await comparison(\n    awayForm.attackingStrengthAwayOnly,\n    homeForm.defensiveStrengthScoreGenerationHomeOnly\n  );\n\n  const pointsComparisonHome = await comparison(\n    homeForm.avPoints6,\n    awayForm.avPoints6\n  );\n\n  const pointsComparisonAway = await comparison(\n    awayForm.avPoints6,\n    homeForm.avPoints6\n  );\n\n  const oddsComparisonHome = await comparison(match.awayOdds, match.homeOdds);\n  const oddsComparisonAway = await comparison(match.homeOdds, match.awayOdds);\n\n  homeForm.XGRating =\n    homeForm.attackingStrength +\n    homeForm.defensiveStrengthScoreGeneration +\n    homeForm.attackingStrengthLast5 +\n    homeForm.defensiveStrengthScoreGenerationLast5 +\n    homeForm.attackingStrengthHomeOnly +\n    homeForm.defensiveStrengthScoreGenerationHomeOnly;\n\n  awayForm.XGRating =\n    awayForm.attackingStrength +\n    awayForm.defensiveStrengthScoreGeneration +\n    awayForm.attackingStrengthLast5 +\n    awayForm.defensiveStrengthScoreGenerationLast5 +\n    awayForm.attackingStrengthAwayOnly +\n    awayForm.defensiveStrengthScoreGenerationAwayOnly;\n\n  const XGRatingHomeComparison = await comparison(\n    homeForm.XGRating,\n    awayForm.XGRating\n  );\n\n  const XGRatingAwayComparison = await comparison(\n    awayForm.XGRating,\n    homeForm.XGRating\n  );\n\n  const weighedPointsComparisonHome = await comparison(\n    homeForm.pointsWeighted,\n    homeForm.points\n  );\n\n  const weighedPointsComparisonAway = await comparison(\n    awayForm.pointsWeighted,\n    awayForm.points\n  );\n\n  homeGoals =\n    homeGoals +\n    homeAttackVsAwayDefenceComparison * 2.5 +\n    XGRatingHomeComparison * 0 +\n    homeAttackVsAwayDefenceComparisonLast5 * 2 +\n    0.25 +\n    homeAttackVsAwayDefenceComparisonHomeOnly * 0 +\n    // weighedPointsComparisonHome * 0.005 +\n    oddsComparisonHome * 0.05;\n\n  awayGoals =\n    awayGoals +\n    awayAttackVsHomeDefenceComparison * 2.5 +\n    XGRatingAwayComparison * 0 +\n    awayAttackVsHomeDefenceComparisonLast5 * 2 +\n    awayAttackVsHomeDefenceComparisonAwayOnly * 0 +\n    // weighedPointsComparisonAway * 0.005 +\n    oddsComparisonAway * 0.05;\n\n    // ROI for all 145 W/D/W outcomes: + 13.30%\n    // Correct W/D/W predictions: 75 (51.7%)\n    \n    // Exact scores predicted: 16 (11.0%)\n    \n    // Cumulative ROI for all 1408 match outcomes: +3.69%\n\n    if(finalScore > 0){\n      homeGoals = homeGoals + 0.5\n      awayGoals = awayGoals + -Math.abs(0.5)\n    } else if(finalScore < 0){\n      awayGoals = awayGoals + -Math.abs(0.5)\n      awayGoals = awayGoals + 0.5\n    }\n\n  //PLACEHOLDER\n\n  // if (homeForm.actualToXGDifference > 0.5) {\n  //   homeGoals = homeGoals + homeForm.actualToXGDifference / 20;\n  // } else if (homeForm.actualToXGDifference < -0.5) {\n  //   homeGoals = homeGoals + homeForm.actualToXGDifference / 20;\n  // }\n\n  // if (awayForm.actualToXGDifference > 0.5) {\n  //   awayGoals = awayGoals + awayForm.actualToXGDifference / 20;\n  // } else if (awayForm.actualToXGDifference < -0.5) {\n  //   awayGoals = awayGoals + awayForm.actualToXGDifference / 20;\n  // }\n\n  // if (homeForm.lastGame === \"L\" && homeForm.previousToLastGame === \"L\") {\n  //   homeGoals = homeGoals * 0.5;\n  // } else if (awayForm.lastGame === \"L\" && awayForm.previousToLastGame === \"L\") {\n  //   awayGoals = awayGoals * 0.5;\n  // } else if (homeForm.lastGame === \"L\") {\n  //   homeGoals = homeGoals * 0.8;\n  // } else if (awayForm.lastGame === \"L\") {\n  //   awayGoals = awayGoals * 0.8;\n  // }\n\n  // if (homeForm.improving === true && awayForm.improving === false) {\n  //   homeGoals = homeGoals * 1.25;\n  //   awayGoals = awayGoals * 0.75;\n  // } else if (homeForm.improving === false && awayForm.improving === true) {\n  //   homeGoals = homeGoals * 0.75;\n  //   awayGoals = awayGoals * 1.25;\n  // }\n\n  // const homeRecordAgainstSimilarStyles = await findClosestProperty(homeForm.recordAgainstIndividualStylesHome, awayForm.directnessRatingAway); // Outputs: \"totalL\"\n  // const awayRecordAgainstSimilarStyles = await findClosestProperty(awayForm.recordAgainstIndividualStylesAway, homeForm.directnessRating); // Outputs: \"totalL\"\n\n  // if(homeRecordAgainstSimilarStyles === \"totalW\" && awayRecordAgainstSimilarStyles === \"totalL\"){\n  //   homeGoals = homeGoals * 1.5;\n  //   awayGoals = awayGoals * 0.5;\n  // } else if(homeRecordAgainstSimilarStyles === \"totalL\" && awayRecordAgainstSimilarStyles === \"totalW\"){\n  //   homeGoals = homeGoals * 0.5;\n  //   awayGoals = awayGoals * 1.5;\n  // }\n\n  // console.log(match.game)\n  // console.log(homeRecordAgainstSimilarStyles)\n  // console.log(awayRecordAgainstSimilarStyles)\n  // if(homeForm.last5Points > homeForm.last10Points){\n  //   homeGoals = homeGoals + 0.1;\n  //   awayGoals = awayGoals - 0.1;\n\n  // } else if (awayForm.last5Points > awayForm.last10Points){\n  //   awayGoals = awayGoals + 0.1;\n  //   homeGoals = homeGoals - 0.1;\n  // }\n\n  // Cumalative ROI for all 2193 match outcomes: + 4.18%\n\n  // if (homeGoals < 0 && awayGoals < 0) {\n  //   if (homeGoals < awayGoals) {\n  //     homeGoals = homeGoals + awayGoals / 5;\n  //     awayGoals = awayGoals - homeGoals / 5;\n  //   } else if (homeGoals > awayGoals) {\n  //     homeGoals = homeGoals - awayGoals / 5;\n  //     awayGoals = awayGoals + homeGoals / 5;\n  //   }\n  // } else if (homeGoals < 0) {\n  //   awayGoals = awayGoals + Math.abs(homeGoals) / 2;\n  // } else if (awayGoals < 0) {\n  //   homeGoals = homeGoals + Math.abs(awayGoals) / 2;\n  // }\n\n  return [homeGoals, awayGoals];\n}\n\nexport async function compareTeams(homeForm, awayForm, match) {\n  // let homeAttackStrength = homeForm.attackingStrength;\n  // let homeDefenceStrength = homeForm.defensiveStrength;\n  // let homePossessionStrength = homeForm.possessionStrength;\n  // let awayAttackStrength = awayForm.attackingStrength;\n  // let awayDefenceStrength = awayForm.defensiveStrength;\n  // let awayPossessionStrength = awayForm.possessionStrength;\n  // let homeAttackStrengthLast5 = homeForm.attackingStrengthLast5;\n  // let homeDefenceStrengthLast5 = homeForm.defensiveStrengthLast5;\n  // let homePossessionStrengthLast5 = homeForm.possessionStrengthLast5;\n  // let awayAttackStrengthLast5 = awayForm.attackingStrengthLast5;\n  // let awayDefenceStrengthLast5 = awayForm.defensiveStrengthLast5;\n  // let awayPossessionStrengthLast5 = awayForm.possessionStrengthLast5;\n  // let homeAttackStrengthHome = homeForm.attackingStrengthHomeOnly;\n  // let homeDefenceStrengthHome = homeForm.defensiveStrengthHomeOnly;\n  // let homePossessionStrengthHome = homeForm.possessionStrengthHomeOnly;\n  // let awayAttackStrengthAway = awayForm.attackingStrengthAwayOnly;\n  // let awayDefenceStrengthAway = awayForm.defensiveStrengthAwayOnly;\n  // let awayPossessionStrengthAway = awayForm.possessionStrengthAwayOnly;\n  // const attackStrengthComparison = await compareStat(\n  //   homeAttackStrength,\n  //   awayAttackStrength\n  // );\n  // const attackStrengthHAComparison = await compareStat(\n  //   homeAttackStrengthHome,\n  //   awayAttackStrengthAway\n  // );\n  // const defenceStrengthComparison = await compareStat(\n  //   homeDefenceStrength,\n  //   awayDefenceStrength\n  // );\n  // const defenceStrengthHAComparison = await compareStat(\n  //   homeDefenceStrengthHome,\n  //   awayDefenceStrengthAway\n  // );\n  // const attackStrengthComparisonLast5 = await compareStat(\n  //   homeAttackStrengthLast5,\n  //   awayAttackStrengthLast5\n  // );\n  // const defenceStrengthComparisonLast5 = await compareStat(\n  //   homeDefenceStrengthLast5,\n  //   awayDefenceStrengthLast5\n  // );\n  // const possessiontrengthComparison = await compareStat(\n  //   homePossessionStrength,\n  //   awayPossessionStrength\n  // );\n  // const possessiontrengthComparisonLast5 = await compareStat(\n  //   homePossessionStrengthLast5,\n  //   awayPossessionStrengthLast5\n  // );\n  // const possessionHAStrengthComparison = await compareStat(\n  //   homePossessionStrengthHome,\n  //   awayPossessionStrengthAway\n  // );\n  // // const xgActualComparison = await compareStat(\n  // //   homeForm.actualToXGDifference,\n  // //   awayForm.actualToXGDifference\n  // // );\n  // // const XGComparison = await compareStat(\n  // //   homeForm.XGDiffNonAverage,\n  // //   awayForm.XGDiffNonAverage\n  // // );\n  // // const XGComparisonLast5 = await compareStat(\n  // //   homeForm.XGDiffNonAverageLast5,\n  // //   awayForm.XGDiffNonAverageLast5\n  // // )\n  // const homeAwayPointAverageComparison = await compareStat(\n  //   homeForm.homeOrAwayAverage,\n  //   awayForm.homeOrAwayAverage\n  // );\n  // // const fiveGameComparison = await compareStat(\n  // //   homeForm.last5Points,\n  // //   awayForm.last5Points\n  // // );\n  // // const last5GDComparison = await compareStat(\n  // //   homeForm.last5GoalDiff,\n  // //   awayForm.last5GoalDiff\n  // // )\n  // let oddsComparison = await compareStat(match.awayOdds, match.homeOdds);\n  // // const homeAdvantage = await compareStat(\n  // //   parseFloat(homeForm.homeAttackAdvantage) / 2,\n  // //   1\n  // // );\n  // // const dangerousAttacksWithConverstionComparison = await compareStat(\n  // //   homeForm.AverageDangerousAttacksOverall *\n  // //     homeForm.dangerousAttackConversion,\n  // //   awayForm.AverageDangerousAttacksOverall * awayForm.dangerousAttackConversion\n  // // );\n  // match.goalDiffHomeOrAwayComparison =\n  //   parseFloat(homeForm.goalDifferenceHomeOrAway) -\n  //   parseFloat(awayForm.goalDifferenceHomeOrAway);\n  // match.goalDifferenceComparison =\n  //   parseFloat(homeForm.goalDifference) - parseFloat(awayForm.goalDifference);\n  // const goalDiffHomeOrAwayComparison = await compareStat(\n  //   homeForm.goalDifferenceHomeOrAway,\n  //   awayForm.goalDifferenceHomeOrAway\n  // );\n  // const overallDirectnessComparison = await compareStat(\n  //   homeForm.directnessOverallStrength,\n  //   awayForm.directnessOverallStrength\n  // );\n  // // const hOrADirectnessComparison = await compareStat(\n  // //   homeForm.directnessHomeOnly,\n  // //   awayForm.directnessAwayOnly\n  // // );\n  // const accuracyComparison = await compareStat(\n  //   homeForm.accuracyOverallStrength,\n  //   awayForm.accuracyOverallStrength\n  // );\n  // const accuracyComparisonLast5 = await compareStat(\n  //   homeForm.accuracyOverallStrengthLast5,\n  //   awayForm.accuracyOverallStrengthLast5\n  // );\n  // // console.log(match.game)\n  // // console.log(attackStrengthComparison);\n  // // console.log(defenceStrengthComparison);\n  // // console.log(possessiontrengthComparison);\n  // // console.log(attackStrengthComparisonLast5);\n  // // console.log(defenceStrengthComparisonLast5);\n  // // console.log(attackStrengthHAComparison);\n  // // console.log(defenceStrengthHAComparison);\n  // // console.log(homeAwayPointAverageComparison);\n  // // console.log(goalDiffHomeOrAwayComparison);\n  // // // console.log(oddsComparison);\n  // // console.log(overallDirectnessComparison);\n  // // console.log(accuracyComparisonLast5);\n  // // console.log(accuracyComparison);\n  // // let calculation =\n  // //   attackStrengthComparison * 0 +\n  // //   attackStrengthComparisonLast5 * 0 +\n  // //   attackStrengthHAComparison * 1 +\n  // //   defenceStrengthComparison * 0 +\n  // //   defenceStrengthComparisonLast5 * 0 +\n  // //   defenceStrengthHAComparison * 1 +\n  // //   possessiontrengthComparison * 0 +\n  // //   possessionHAStrengthComparison * 0 +\n  // //   possessiontrengthComparisonLast5 * 1 +\n  // //   // xgToActualDiffComparison * 1 +\n  // //   // xgForStrengthRecentComparison * 1 +\n  // //   // xgAgainstStrengthRecentComparison * 1 +\n  // //   homeAwayPointAverageComparison * 5 +\n  // //   goalDiffHomeOrAwayComparison * 0 +\n  // //   // xgActualComparison * 0 +\n  // //   // xgForComparison * 1 +\n  // //   // xgAgainstComparison * 1 +\n  // //   // XGComparison * 0 +\n  // //   oddsComparison * 2 +\n  // //   // dangerousAttacksWithConverstionComparison * 0.05 +\n  // //   overallDirectnessComparison * 0 +\n  // //   // hOrADirectnessComparison * 0 +\n  // //   accuracyComparisonLast5 * 0 +\n  // //   accuracyComparison * 0;\n  // // // console.log(match.game)\n  // // // console.log(calculation)\n  // let calculation =\n  //   attackStrengthComparisonLast5 * 2 +\n  //   attackStrengthHAComparison * 1 +\n  //   defenceStrengthComparisonLast5 * 2 +\n  //   defenceStrengthHAComparison * 1 +\n  //   possessionHAStrengthComparison * 1 +\n  //   possessiontrengthComparisonLast5 * 1 +\n  //   possessiontrengthComparison * 1 +\n  //   // xgToActualDiffComparison * 1 +\n  //   // xgForStrengthRecentComparison * 1 +\n  //   // xgAgainstStrengthRecentComparison * 1 +\n  //   homeAwayPointAverageComparison * 2 +\n  //   goalDiffHomeOrAwayComparison * 0 +\n  //   // xgActualComparison * 1 +\n  //   // xgForComparison * 1 +\n  //   // xgAgainstComparison * 1 +\n  //   oddsComparison * 0 +\n  //   // dangerousAttacksWithConverstionComparison * 0.05 +\n  //   overallDirectnessComparison * 0 +\n  //   accuracyComparison * 1;\n  // let homeWinOutcomeProbability =\n  //   match.homeTeamWinPercentage + match.awayTeamLossPercentage;\n  // let awayWinOutcomeProbability =\n  //   match.homeTeamLossPercentage + match.awayTeamWinPercentage;\n  // let drawOutcomeProbability =\n  //   match.homeTeamDrawPercentage + match.awayTeamDrawPercentage;\n  // if (\n  //   drawOutcomeProbability > homeWinOutcomeProbability &&\n  //   drawOutcomeProbability > awayWinOutcomeProbability\n  // ) {\n  //   switch (true) {\n  //     case drawOutcomeProbability > 100:\n  //       calculation = calculation / 3;\n  //       break;\n  //     default:\n  //       calculation = calculation * 1;\n  //       break;\n  //   }\n  // } else {\n  //   calculation = calculation * 1;\n  // }\n  // if (calculation > 0) {\n  //   if (\n  //     homeForm.lastGame === \"L\" ||\n  //     homeForm.last2Points < 2 ||\n  //     awayForm.last2Points >= 5 ||\n  //     match.XGdifferentialValueRaw < 0\n  //   ) {\n  //     calculation = calculation / 2;\n  //   }\n  // } else if (calculation < 0) {\n  //   if (\n  //     awayForm.lastGame === \"L\" ||\n  //     awayForm.last2Points < 2 ||\n  //     homeForm.last2Points >= 5 ||\n  //     match.XGdifferentialValueRaw > 0\n  //   ) {\n  //     calculation = calculation / 2;\n  //   }\n  // }\n  // // if (homeForm.averageOddsHome !== null || awayForm.averageOddsAway !== null) {\n  // //   if (\n  // //     calculation > 0 &&\n  // //     homeForm.averageOddsHome < match.homeOdds &&\n  // //     awayForm.averageOddsAway > match.awayOdds\n  // //   ) {\n  // //     calculation = calculation / 2;\n  // //   } else if (\n  // //     calculation > 0 &&\n  // //     homeForm.averageOddsHome > match.homeOdds &&\n  // //     awayForm.averageOddsAway < match.awayOdds\n  // //   ) {\n  // //     calculation = calculation * 1.25;\n  // //   } else {\n  // //     calculation = calculation * 1;\n  // //   }\n  // //   if (\n  // //     calculation < 0 &&\n  // //     awayForm.averageOddsAway < match.awayOdds &&\n  // //     homeForm.averageOddsHome > match.homeOdds\n  // //   ) {\n  // //     calculation = calculation / 2;\n  // //   } else if (\n  // //     calculation < 0 &&\n  // //     awayForm.averageOddsAway > match.awayOdds &&\n  // //     homeForm.averageOddsHome < match.homeOdds\n  // //   ) {\n  // //     calculation = calculation * 1.25;\n  // //   } else {\n  // //     calculation = calculation * 1;\n  // //   }\n  // // }\n  // if (\n  //   calculation > 0 &&\n  //   homeForm.improving === true &&\n  //   awayForm.improving === false\n  // ) {\n  //   console.log(homeForm);\n  //   calculation = calculation * 1.5;\n  // } else if (\n  //   calculation < 0 &&\n  //   awayForm.improving === true &&\n  //   awayForm.improving === false\n  // ) {\n  //   calculation = calculation * 1.5;\n  // } else if (\n  //   calculation > 0 &&\n  //   homeForm.improving === false &&\n  //   awayForm.improving === true\n  // ) {\n  //   calculation = calculation / 2;\n  // } else if (\n  //   calculation < 0 &&\n  //   awayForm.improving === false &&\n  //   homeForm.improving === true\n  // ) {\n  //   calculation = calculation / 2;\n  // }\n  // // if (\n  // //   (calculation < 0 && homeForm.oddsReliabilityWin < 50) ||\n  // //   (calculation < 0 && awayForm.oddsReliabilityWinAsUnderdog > 45)\n  // // ) {\n  // //   calculation = calculation / 2;\n  // // } else if (\n  // //   (calculation > 0 && awayForm.oddsReliabilityWin < 50) ||\n  // //   (calculation > 0 && homeForm.oddsReliabilityWinAsUnderdog > 45)\n  // // ) {\n  // //   calculation = calculation / 2;\n  // // }\n  // // if (calculation < 0 && homeForm.predictabilityScore < 0.3) {\n  // //   calculation = calculation / 2;\n  // // } else if (calculation > 0 && awayForm.predictabilityScore < 0.3) {\n  // //   calculation = calculation / 2;\n  // // }\n  // return calculation;\n}\n\nasync function calculatePlayingStyle(points, possession) {\n  let style;\n\n  switch (true) {\n    case possession > 60:\n      switch (true) {\n        case points > 12:\n          style = \"Extremely controlling and patient\";\n          break;\n        case points > 9.5:\n          style = \"Highly controlling, slow and patient\";\n          break;\n        case points > 8.5:\n          style = \"Balanced and controlling possession\";\n          break;\n        case points > 6:\n          style = \"Attacking and controlling possession\";\n          break;\n        case points > 3:\n          style = \"Extremely attacking control approach\";\n          break;\n        default:\n          style = \"N/A\";\n          break;\n      }\n      break;\n\n    case possession > 50:\n      switch (true) {\n        case points > 12:\n          style = \"Passive, inefficient possession play\";\n          break;\n        case points > 9:\n          style = \"Patient, possession-based approach\";\n          break;\n        case points > 8:\n          style = \"Balanced with some possession focus\";\n          break;\n        case points > 5:\n          style = \"Direct control, effective possession\";\n          break;\n        case points > 3:\n          style = \"Extremely direct attacking approach\";\n          break;\n        default:\n          style = \"N/A\";\n          break;\n      }\n      break;\n\n    case possession > 40:\n      switch (true) {\n        case points > 12:\n          style = \"Low control with wasteful transitions\";\n          break;\n        case points > 10:\n          style = \"Wasteful transitional countering play\";\n          break;\n        case points > 7.5:\n          style = \"Counter attacking and quick build up\";\n          break;\n        case points > 5:\n          style = \"Direct and precise transitional play\";\n          break;\n        case points > 3:\n          style = \"Extremely effective transition focus\";\n          break;\n        default:\n          style = \"N/A\";\n          break;\n      }\n      break;\n\n    case possession > 20:\n      switch (true) {\n        case points > 13:\n          style = \"Concede possession, highly inefficient\";\n          break;\n        case points > 10:\n          style = \"Defensive with inefficient transitions\";\n          break;\n        case points > 7:\n          style = \"Counter attacking and very direct play\";\n          break;\n        case points > 4:\n          style = \"Extremely counter attacking transitions\";\n          break;\n        case points > 2:\n          style = \"Extremely direct, efficient countering\";\n          break;\n        default:\n          style = \"N/A\";\n          break;\n      }\n      break;\n\n    default:\n      style = \"N/A\";\n      break;\n  }\n\n  return style;\n}\n\nexport async function roundCustom(num, form, otherForm) {\n  let wholeNumber = Math.floor(num);\n  let remainder = num - wholeNumber;\n  let goals;\n\n  // switch (true) {\n  //   case remainder >= 0.9:\n  //     switch (true) {\n  //       default:\n  //         goals = Math.round(num);\n  //         break;\n  //     }\n  //     break;\n  //   case remainder >= 0.8 && remainder < 0.9:\n  //     switch (true) {\n  //       case form.actualToXGDifference >= 0:\n  //         goals = Math.ceil(num);\n  //         break;\n  //       case form.actualToXGDifference < 0:\n  //         goals = Math.floor(num);\n  //         break;\n  //       default:\n  //         goals = Math.round(num);\n  //         break;\n  //     }\n  //     break;\n  //   case remainder >= 0.6 && remainder < 0.8:\n  //     switch (true) {\n  //       case form.actualToXGDifference >= 10:\n  //         goals = Math.ceil(num);\n  //         break;\n  //       case form.actualToXGDifference < 10:\n  //         goals = Math.floor(num);\n  //         break;\n  //       default:\n  //         goals = Math.round(num);\n  //         break;\n  //     }\n  //     break;\n  //   case remainder >= 0.5 && remainder < 0.6:\n  //     switch (true) {\n  //       case form.actualToXGDifference >= 20:\n  //         goals = Math.ceil(num);\n  //         break;\n  //       case form.actualToXGDifference < 20:\n  //         goals = Math.floor(num);\n  //         break;\n  //       default:\n  //         goals = Math.round(num);\n  //         break;\n  //     }\n  //     break;\n  //   default:\n  //     goals = Math.floor(num);\n  //     break;\n  // }\n\n  if (remainder > 0.9) {\n    goals = Math.ceil(num);\n  } else {\n    goals = Math.floor(num);\n  }\n\n  return goals;\n}\n\n//Calculates scores based on prior XG figures, weighted by odds\nlet i = 0;\n\nexport async function calculateScore(match, index, divider, calculate) {\n  i++;\n\n  let teams;\n\n  if (\n    calculate === true &&\n    allForm.find(\n      (game) =>\n        game.home.teamName === match.homeTeam &&\n        game.away.teamName === match.awayTeam\n    )\n  ) {\n    teams = [\n      allForm.find((game) => game.home.teamName === match.homeTeam).home,\n      allForm.find((game) => game.away.teamName === match.awayTeam).away,\n    ];\n  } else {\n    calculate = false;\n  }\n\n  let formHome;\n  let formAway;\n\n  if (calculate) {\n    for (let i = 0; i < teams.length; i++) {\n      if (teams[0][index].PlayedHome <= 1 || teams[1][index].PlayedAway <= 1) {\n        index = 2;\n        divider = 10;\n      }\n\n      if (teams[i][index].formRun) {\n        teams[i][index].lastHomeOrAwayPoints = getPointsFromLastX(\n          teams[i][index].formRun\n        );\n\n        teams[i][index].homeOrAwayAverage = await getPointAverage(\n          teams[i][index].lastHomeOrAwayPoints,\n          teams[i][index].formRun.length\n        );\n      }\n\n      teams[i][0].ScoredAverage = teams[i][0].ScoredOverall / 5;\n      teams[i][1].ScoredAverage = teams[i][1].ScoredOverall / 6;\n      teams[i][2].ScoredAverage = teams[i][2].ScoredOverall / 10;\n\n      teams[i][0].ConcededAverage = teams[i][0].ConcededOverall / 5;\n      teams[i][1].ConcededAverage = teams[i][1].ConcededOverall / 6;\n      teams[i][2].ConcededAverage = teams[i][2].ConcededOverall / 10;\n\n      if (teams[i][1].ScoredAverage === 0) {\n        teams[i][1].ScoredAverage = teams[i][index].ScoredOverall / 10;\n        teams[i][1].ScoredOverall = teams[i][2].ScoredOverall / 2;\n      }\n\n      if (teams[i][1].ConcededAverage === 0) {\n        teams[i][1].ConcededAverage = teams[i][index].ConcededOverall / 10;\n        teams[i][1].ConcededOverall = teams[i][2].ConcededOverall / 2;\n      }\n\n      teams[i][index].ScoredAverageShortTerm = teams[i][0].ScoredOverall / 5;\n      teams[i][index].ConcededAverageShortTerm =\n        teams[i][0].ConcededOverall / 5;\n\n      teams[i][index].longTermAverageGoals = teams[i][2].ScoredOverall / 10;\n      teams[i][index].longTermAverageConceeded =\n        teams[i][2].ConcededOverall / 10;\n\n      let recentGoalDiff =\n        teams[i][index].ScoredAverageShortTerm -\n        teams[i][index].ConcededAverageShortTerm;\n      let distantGoalDiff =\n        teams[i][index].longTermAverageGoals -\n        teams[i][index].longTermAverageConceeded;\n\n      let recentDA = teams[i][0].AverageDangerousAttacksOverall;\n      let distantDA = teams[i][2].AverageDangerousAttacksOverall;\n\n      let recentPosession = teams[i][0].AveragePossessionOverall;\n      let distantPosession = teams[i][2].AveragePossessionOverall;\n\n      let recentCleanSheet = teams[i][0].CleanSheetPercentage;\n      let distantCleanSheet = teams[i][2].CleanSheetPercentage;\n\n      let recentFormArray = [\n        recentGoalDiff,\n        recentDA,\n        recentPosession,\n        recentCleanSheet,\n      ];\n      let distantFormArray = [\n        distantGoalDiff,\n        distantDA,\n        distantPosession,\n        distantCleanSheet,\n      ];\n\n      teams[i][index].formTrendScore = await compareFormTrend(\n        recentFormArray,\n        distantFormArray\n      );\n\n      teams[i][index].expectedGoals = parseFloat(teams[i][index].XG);\n\n      teams[i][index].ScoredAverageShortAndLongTerm =\n        (teams[i][index].ScoredOverall / 10 +\n          teams[i][index].ScoredAverageShortTerm) /\n        2;\n\n      teams[i][index].conceededAverageShortAndLongTerm =\n        (teams[i][index].ConcededOverall / 10 +\n          teams[i][index].ConcededAverageShortTerm) /\n        2;\n\n      teams[i][index].longTermGoalDifference =\n        teams[i][2].ScoredAverage - teams[i][2].ConcededAverage;\n\n      teams[i][index].shortTermGoalDifference =\n        teams[i][0].ScoredAverage - teams[i][0].ConcededAverage;\n\n      teams[i][index].XGdifferential = await diff(\n        teams[i][index].XGOverall,\n        teams[i][index].XGAgainstAvgOverall\n      );\n    }\n\n    homeOdds = match.homeOdds;\n    awayOdds = match.awayOdds;\n    console.log(teams);\n\n    formHome = teams[0][index];\n    formAway = teams[1][index];\n\n    // if (\n    //   (formHome.XGOverall - formHome.XGAgainstAvgOverall) < (formHome.last5XG - formHome.XGAgainstlast5)\n    // ) {\n    //   formHome.improving = true;\n    // } else {\n    //   formHome.improving = false;\n    // }\n\n    // if (\n    //   (formAway.XGOverall - formAway.XGAgainstAvgOverall) < (formAway.last5XG - formAway.XGAgainstlast5)\n    // ) {\n    //   formAway.improving = true;\n    // } else {\n    //   formAway.improving = false;\n    // }\n\n    let homeTwoGameAvg = formHome.last2Points / 2;\n    let awayTwoGameAvg = formAway.last2Points / 2;\n\n    // let [last10WeightingHome, last10WeightingAway] = await getPointWeighting(\n    //   pointsDiff10\n    // );\n\n    // let [last2WeightingHome, last2WeightingAway] = await getPointWeighting(\n    //   pointsDiff2\n    // );\n\n    formHome.dangerousAttackConversion =\n      (formHome.ScoredAverageShortAndLongTerm /\n        formHome.AverageDangerousAttacksOverall) *\n      100;\n    formAway.dangerousAttackConversion =\n      (formAway.ScoredAverageShortAndLongTerm /\n        formAway.AverageDangerousAttacksOverall) *\n      100;\n\n    [formHome.clinicalRating, formHome.clinicalScore] = await getClinicalRating(\n      formHome\n    );\n    [formAway.clinicalRating, formAway.clinicalScore] = await getClinicalRating(\n      formAway\n    );\n\n    let XGdifferential = await diff(\n      formHome.XGdifferential,\n      formAway.XGdifferential\n    );\n\n    formHome.teamName = match.homeTeam;\n    formAway.teamName = match.awayTeam;\n\n    match.XGdifferentialValue = Math.abs(XGdifferential);\n    match.XGdifferentialValueRaw = parseFloat(XGdifferential);\n    if (\n      allLeagueResultsArrayOfObjects[match.leagueIndex].fixtures.length > 10 &&\n      match.leagueID !== 7956\n    ) {\n      [\n        formHome.predictedGoalsBasedOnHomeAv,\n        formHome.predictedGoalsBasedOnAwayAv,\n        formHome.allTeamGoalsBasedOnAverages,\n        formHome.predictedGoalsConceededBasedOnHomeAv,\n        formHome.predictedGoalsConceededBasedOnAwayAv,\n        formHome.allTeamGoalsConceededBasedOnAverages,\n        formHome.averageOddsHome,\n        formHome.averageOddsAway,\n        formHome.averageScoredLeague,\n        formHome.averageConceededLeague,\n        formHome.last10btts,\n        formHome.last10bttsHome,\n        formHome.last10bttsAway,\n        match.bttsAllPercentageHome,\n        match.bttsPercentageHomeHome,\n        match.bttsPercentageHomeAway,\n        formHome.forAndAgainstRollingAvHomeOrAway,\n        formHome.forAndAgainstRollingAv,\n      ] = await getPastLeagueResults(match.homeTeam, match, \"home\", formHome);\n\n      [\n        formAway.predictedGoalsBasedOnHomeAv,\n        formAway.predictedGoalsBasedOnAwayAv,\n        formAway.allTeamGoalsBasedOnAverages,\n        formAway.predictedGoalsConceededBasedOnHomeAv,\n        formAway.predictedGoalsConceededBasedOnAwayAv,\n        formAway.allTeamGoalsConceededBasedOnAverages,\n        formAway.averageOddsHome,\n        formAway.averageOddsAway,\n        formAway.averageScoredLeague,\n        formAway.averageConceededLeague,\n        formAway.last10btts,\n        formAway.last10bttsHome,\n        formAway.last10bttsAway,\n        match.bttsAllPercentageAway,\n        match.bttsPercentageAwayHome,\n        match.bttsPercentageAwayAway,\n        formAway.forAndAgainstRollingAvHomeOrAway,\n        formAway.forAndAgainstRollingAv,\n      ] = await getPastLeagueResults(match.awayTeam, match, \"away\", formAway);\n    } else {\n      formHome.completeData = false;\n      formHome.predictedGoalsBasedOnHomeAv = formHome.ScoredAverage;\n      formHome.predictedGoalsBasedOnAwayAv = formHome.ConcededAverage;\n      formHome.allTeamGoalsBasedOnAverages = formHome.ScoredAverage;\n      formHome.forAndAgainstRollingAv = {\n        goalsFor: formHome.ScoredAverage,\n        goalsAgainst: formHome.ConcededAverage,\n      };\n      formHome.forAndAgainstRollingAvHomeOrAway = {\n        goalsFor: formHome.ScoredAverage,\n        goalsAgainst: formHome.ConcededAverage,\n      };\n      formHome.predictedGoalsConceededBasedOnHomeAv = formHome.ConcededAverage;\n      formHome.predictedGoalsConceededBasedOnAwayAv = formHome.ConcededAverage;\n      formHome.allTeamGoalsConceededBasedOnAverages = formHome.ConcededAverage;\n      formHome.averageOddsHome = null;\n      formHome.averageOddsAway = null;\n      formHome.averageScoredLeague = null;\n      formHome.averageConceededLeague = null;\n      formHome.goalDifference =\n        formHome.ScoredOverall - formHome.ConcededOverall;\n      formHome.goalDifferenceHomeOrAway =\n        formHome.ScoredOverall - formHome.ConcededOverall;\n      formHome.last10btts = null;\n      formHome.last10bttsHome = null;\n      formHome.last10bttsAway = null;\n      formHome.allTeamResults = [];\n      formHome.resultsAll = [];\n      formHome.resultsHome = [];\n      formHome.resultsAway = [];\n      match.bttsAllPercentageHome = \"\";\n      match.bttsPercentageHomeHome = \"\";\n      match.bttsPercentageHomeAway = \"\";\n      formAway.completeData = false;\n      formAway.predictedGoalsBasedOnHomeAv = formAway.ScoredAverage;\n      formAway.predictedGoalsBasedOnAwayAv = formAway.ConcededAverage;\n      formAway.allTeamGoalsBasedOnAverages = formAway.ScoredAverage;\n      formAway.forAndAgainstRollingAv = {\n        goalsFor: formAway.ScoredAverage,\n        goalsAgainst: formAway.ConcededAverage,\n      };\n      formAway.forAndAgainstRollingAvHomeOrAway = {\n        goalsFor: formAway.ScoredAverage,\n        goalsAgainst: formAway.ConcededAverage,\n      };\n      formAway.predictedGoalsConceededBasedOnHomeAv = formAway.ConcededAverage;\n      formAway.predictedGoalsConceededBasedOnAwayAv = formAway.ConcededAverage;\n      formAway.allTeamGoalsConceededBasedOnAverages = formAway.ConcededAverage;\n      formAway.averageOddsHome = null;\n      formAway.averageOddsAway = null;\n      formAway.averageScoredLeague = null;\n      formAway.averageConceededLeague = null;\n      formAway.goalDifference =\n        formAway.ScoredOverall - formAway.ConcededOverall;\n      formAway.goalDifferenceHomeOrAway =\n        formAway.ScoredOverall - formAway.ConcededOverall;\n\n      formAway.last10btts = null;\n      formAway.last10bttsHome = null;\n      formAway.last10bttsAway = null;\n      formAway.allTeamResults = [];\n      formAway.resultsAll = [];\n      formAway.resultsHome = [];\n      formAway.resultsAway = [];\n      match.bttsAllPercentageAway = \"\";\n      match.bttsPercentageAwayHome = \"\";\n      match.bttsPercentageAwayAway = \"\";\n    }\n\n    match.directnessRatingHome = formHome.directnessRatingHome;\n    match.directnessRatingAway = formAway.directnessRatingAway;\n\n    if (\n      typeof formHome.homeTeamHomePositionRaw === \"number\" &&\n      typeof formAway.awayTeamAwayPositionRaw === \"number\"\n    ) {\n      formHome.homePositionHomeOnly = parseFloat(\n        formHome.homeTeamHomePositionRaw\n      );\n      formAway.awayPositionAwayOnly = parseFloat(\n        formAway.awayTeamAwayPositionRaw\n      );\n      formHome.homePosition = parseFloat(formHome.homeRawPosition);\n      formAway.awayPosition = parseFloat(formAway.awayRawPosition);\n    } else {\n      formHome.homePositionHomeOnly = \"N/A\";\n      formAway.awayPositionAwayOnly = \"N/A\";\n      formHome.homePosition = \"N/A\";\n      formAway.awayPosition = \"N/A\";\n    }\n\n    if (formHome.last10Goals && formAway.last10Goals !== 0) {\n      if (\n        formHome.last5Goals - formHome.last5GoalsConceeded >\n        formHome.last10Goals - formHome.last10GoalsConceeded\n      ) {\n        formHome.improving = true;\n      } else {\n        formHome.improving = false;\n      }\n\n      if (\n        formAway.last5Goals - formAway.last5GoalsConceeded >\n        formAway.last10Goals - formAway.last10GoalsConceeded\n      ) {\n        formAway.improving = true;\n      } else {\n        formAway.improving = false;\n      }\n    }\n\n    let pointsDiff6 = await getPointsDifferential(\n      formHome.avPoints6,\n      formAway.avPoints6\n    );\n\n    formHome.AttackingPotency = (formHome.XG / formHome.AttacksHome) * 100;\n    formAway.AttackingPotency = (formAway.XG / formAway.AttacksAverage) * 100;\n\n    formHome.lastGame = formHome.resultsAll[0];\n    formHome.previousToLastGame = formHome.resultsAll[1];\n\n    formAway.lastGame = formAway.resultsAll[0];\n    formAway.previousToLastGame = formAway.resultsAll[1];\n\n    let teamComparisonScore;\n\n    const attackingMetricsHome = {\n      \"Average Dangerous Attacks\": formHome.AverageDangerousAttacksOverall,\n      \"Average Shots\": formHome.avgShots,\n      \"Average Shots On Target\": formHome.AverageShotsOnTargetOverall\n        ? formHome.AverageShotsOnTargetOverall\n        : formHome.AverageShotsOnTarget,\n      \"Average Expected Goals\": formHome.XGOverall\n        ? formHome.XGOverall\n        : formHome.expectedGoals,\n      \"Recent XG\": formHome.XGlast5 ? formHome.XGlast5 : formHome.XGOverall,\n      \"Average Goals\": formHome.avgScored\n        ? formHome.avgScored\n        : formHome.ScoredAverage,\n      Corners: formHome.AverageCorners\n        ? formHome.AverageCorners\n        : formHome.CornersAverage,\n    };\n\n    const attackingMetricsHomeLast5 = {\n      \"Average Dangerous Attacks\": formHome.avDALast5\n        ? formHome.avDALast5\n        : formHome.AverageDangerousAttacksOverall,\n      \"Average Shots\": formHome.avShotsLast5\n        ? formHome.avShotsLast5\n        : formHome.AverageShots,\n      \"Average Shot Value\": formHome.avgShotValueLast5,\n      \"Average Shots On Target\": formHome.avSOTLast5\n        ? formHome.avSOTLast5\n        : formHome.AverageShotsOnTarget,\n      \"Average Expected Goals\": formHome.XGlast5\n        ? formHome.XGlast5\n        : formHome.XGOverall,\n      \"Recent XG\": formHome.XGlast5 ? formHome.XGlast5 : formHome.XGOverall,\n      \"Average Goals\": formHome.avScoredLast5\n        ? formHome.avScoredLast5\n        : formHome.ScoredAverage,\n      Corners: formHome.avCornersLast5\n        ? formHome.avCornersLast5\n        : formHome.CornersAverage,\n    };\n\n    const attackingMetricsHomeOnly = {\n      \"Average Dangerous Attacks\": formHome.avgDangerousAttacksHome\n        ? formHome.avgDangerousAttacksHome\n        : formHome.AverageDangerousAttacksOverall,\n      \"Average Shots\": formHome.avgShotsHome\n        ? formHome.avgShotsHome\n        : formHome.AverageShots,\n      \"Average Shot Value\": formHome.avgShotValueHome,\n      \"Average Shots On Target\": formHome.avgShotsOnTargetHome\n        ? formHome.avgShotsOnTargetHome\n        : formHome.AverageShotsOnTarget,\n      \"Average Expected Goals\": formHome.avgXGScoredHome\n        ? formHome.avgXGScoredHome\n        : formHome.XGOverall,\n      \"Recent XG\": formHome.last5XGAvgForHome\n        ? formHome.last5XGAvgForHome\n        : formHome.XGOverall,\n      \"Average Goals\": formHome.avgScoredHome\n        ? formHome.avgScoredHome\n        : formHome.ScoredAverage,\n      Corners: formHome.cornersAvHome\n        ? formHome.cornersAvHome\n        : formHome.CornersAverage,\n    };\n\n    const attackingMetricsAwayOnly = {\n      \"Average Dangerous Attacks\": formAway.avgDangerousAttacksAway\n        ? formAway.avgDangerousAttacksAway\n        : formAway.AverageDangerousAttacksOverall,\n      \"Average Shots\": formAway.avgShotsAway\n        ? formAway.avgShotsAway\n        : formAway.AverageShots,\n      \"Average Shot Value\": formAway.avgShotValueAway,\n      \"Average Shots On Target\": formAway.avgShotsOnTargetAway\n        ? formAway.avgShotsOnTargetAway\n        : formAway.AverageShotsOnTarget,\n      \"Average Expected Goals\": formAway.avgXGScoredAway\n        ? formAway.avgXGScoredAway\n        : formAway.XGOverall,\n      \"Recent XG\": formAway.last5XGAvgForAway\n        ? formAway.last5XGAvgForAway\n        : formAway.XGOverall,\n      \"Average Goals\": formAway.avgScoredAway\n        ? formAway.avgScoredAway\n        : formAway.ScoredAverage,\n      Corners: formAway.cornersAvAway\n        ? formAway.cornersAvAway\n        : formAway.CornersAverage,\n    };\n\n    const attackingMetricsAway = {\n      \"Average Dangerous Attacks\": formAway.AverageDangerousAttacksOverall,\n      \"Average Shots\": formAway.avgShots,\n      \"Average Shot Value\": formAway.avgShotValue,\n      \"Average Shots On Target\": formAway.AverageShotsOnTargetOverall\n        ? formAway.AverageShotsOnTargetOverall\n        : formAway.AverageShotsOnTarget,\n      \"Average Expected Goals\": formAway.XGOverall\n        ? formAway.XGOverall\n        : formAway.expectedGoals,\n      \"Recent XG\": formAway.XGlast5 ? formAway.XGlast5 : formAway.XGOverall,\n      \"Average Goals\": formAway.avgScored\n        ? formAway.avgScored\n        : formAway.ScoredAverage,\n      Corners: formAway.AverageCorners\n        ? formAway.AverageCorners\n        : formAway.CornersAverage,\n    };\n\n    const attackingMetricsAwayLast5 = {\n      \"Average Dangerous Attacks\": formAway.avDALast5\n        ? formAway.avDALast5\n        : formAway.AverageDangerousAttacksOverall,\n      \"Average Shots\": formAway.avShotsLast5\n        ? formAway.avShotsLast5\n        : formAway.AverageShots,\n      \"Average Shot Value\": formAway.avgShotValueLast5,\n      \"Average Shots On Target\": formAway.avSOTLast5\n        ? formAway.avSOTLast5\n        : formAway.AverageShotsOnTarget,\n      \"Average Expected Goals\": formAway.XGlast5\n        ? formAway.XGlast5\n        : formAway.XGOverall,\n      \"Recent XG\": formAway.XGlast5 ? formAway.XGlast5 : formAway.XGOverall,\n      \"Average Goals\": formAway.avScoredLast5\n        ? formAway.avScoredLast5\n        : formAway.ScoredAverage,\n      Corners: formAway.avCornersLast5\n        ? formAway.avCornersLast5\n        : formAway.CornersAverage,\n    };\n\n    const defensiveMetricsHome = {\n      \"Average XG Against\": formHome.XGAgainstAvgOverall\n        ? formHome.XGAgainstAvgOverall\n        : formHome.XGAgainstAvgOverall,\n      \"Recent XG Against\": formHome.XGAgainstlast5\n        ? formHome.XGAgainstlast5\n        : formHome.XGAgainstAvgOverall,\n      \"Average Goals Against\": formHome.avgConceeded\n        ? formHome.avgConceeded\n        : formHome.ConcededAverage,\n      \"Average SOT Against\": formHome.AverageShotsOnTargetAgainstOverall\n        ? formHome.AverageShotsOnTargetAgainstOverall\n        : 5,\n    };\n\n    const defensiveMetricsHomeLast5 = {\n      \"Average XG Against\": formHome.XGAgainstlast5\n        ? formHome.XGAgainstlast5\n        : formHome.XGAgainstAvgOverall,\n      \"Recent XG Against\": formHome.avXGAgainstLast5\n        ? formHome.avXGAgainstLast5\n        : formHome.XGAgainstAvgOverall,\n      \"Average Goals Against\": formHome.avConceededLast5\n        ? formHome.avConceededLast5\n        : formHome.ConcededAverage,\n      \"Average SOT Against\": formHome.avSOTAgainstLast5\n        ? formHome.avSOTAgainstLast5\n        : 5,\n    };\n\n    const defensiveMetricsAway = {\n      \"Average XG Against\": formAway.XGAgainstAvgOverall\n        ? formAway.XGAgainstAvgOverall\n        : formAway.XGAgainstAvgOverall,\n      \"Recent XG Against\": formAway.XGAgainstlast5\n        ? formAway.XGAgainstlast5\n        : formAway.XGAgainstAvgOverall,\n      \"Average Goals Against\": formAway.avgConceeded\n        ? formAway.avgConceeded\n        : formAway.ConcededAverage,\n      \"Average SOT Against\": formAway.AverageShotsOnTargetAgainstOverall\n        ? formAway.AverageShotsOnTargetAgainstOverall\n        : 5,\n    };\n\n    const defensiveMetricsAwayLast5 = {\n      \"Average XG Against\": formAway.XGAgainstlast5\n        ? formAway.XGAgainstlast5\n        : formAway.XGAgainstAvgOverall,\n      \"Recent XG Against\": formAway.avXGAgainstLast5\n        ? formAway.avXGAgainstLast5\n        : formAway.XGAgainstAvgOverall,\n      \"Average Goals Against\": formAway.avConceededLast5\n        ? formAway.avConceededLast5\n        : formAway.ConcededAverage,\n      \"Average SOT Against\": formAway.avSOTAgainstLast5\n        ? formAway.avSOTAgainstLast5\n        : 5,\n    };\n\n    const defensiveMetricsHomeOnly = {\n      \"Average XG Against\": formHome.avgXGConceededHome\n        ? formHome.avgXGConceededHome\n        : formHome.XGAgainstAvgOverall,\n      \"Recent XG Against\": formHome.last5XGAvgAgainstHome\n        ? formHome.last5XGAvgAgainstHome\n        : formHome.XGAgainstAvgOverall,\n      \"Average Goals Against\": formHome.teamConceededAvgHomeOnly\n        ? formHome.teamConceededAvgHomeOnly\n        : formHome.ConcededAverage,\n      \"Average SOT Against\": formHome.avgShotsOnTargetAgainstHome\n        ? formHome.avgShotsOnTargetAgainstHome\n        : 5,\n    };\n\n    const defensiveMetricsAwayOnly = {\n      \"Average XG Against\": formAway.avgXGConceededAway\n        ? formAway.avgXGConceededAway\n        : formAway.XGAgainstAvgOverall,\n      \"Recent XG Against\": formAway.last5XGAvgAgainstAway\n        ? formAway.last5XGAvgAgainstAway\n        : formAway.XGAgainstAvgOverall,\n      \"Average Goals Against\": formAway.teamConceededAvgAwayOnly\n        ? formAway.teamConceededAvgAwayOnly\n        : formAway.ConcededAverage,\n      \"Average SOT Against\": formAway.avgShotsOnTargetAgainstAway\n        ? formAway.avgShotsOnTargetAgainstAway\n        : 5,\n    };\n\n    formHome.attackingMetrics = attackingMetricsHome;\n    formHome.defensiveMetrics = defensiveMetricsHome;\n    formHome.attackingMetricsHomeLast5 = attackingMetricsHomeLast5;\n    formHome.defensiveMetricsHomeLast5 = defensiveMetricsHomeLast5;\n    formHome.attackingMetricsHomeOnly = attackingMetricsHomeOnly;\n    formHome.defensiveMetricsHomeOnly = defensiveMetricsHomeOnly;\n\n    formAway.attackingMetrics = attackingMetricsAway;\n    formAway.defensiveMetrics = defensiveMetricsAway;\n    formAway.attackingMetricsAwayLast5 = attackingMetricsAwayLast5;\n    formAway.defensiveMetricsAwayLast5 = defensiveMetricsAwayLast5;\n    formAway.attackingMetricsAwayOnly = attackingMetricsAwayOnly;\n    formAway.defensiveMetricsAwayOnly = defensiveMetricsAwayOnly;\n\n    formHome.attackingStrength = await calculateAttackingStrength(\n      attackingMetricsHome\n    );\n\n    formHome.attackingStrengthScoreGeneration =\n      await calculateAttackingStrength(attackingMetricsHome);\n\n    formHome.attackingStrengthLast5 = await calculateAttackingStrength(\n      attackingMetricsHomeLast5\n    );\n\n    formHome.attackingStrengthHomeOnly = await calculateAttackingStrength(\n      attackingMetricsHomeOnly\n    );\n\n    formAway.attackingStrength = await calculateAttackingStrength(\n      attackingMetricsAway\n    );\n\n    formAway.attackingStrengthLast5 = await calculateAttackingStrength(\n      attackingMetricsAwayLast5\n    );\n\n    formAway.attackingStrengthAwayOnly = await calculateAttackingStrength(\n      attackingMetricsAwayOnly\n    );\n\n    formHome.defensiveStrength = await calculateDefensiveStrength(\n      defensiveMetricsHome\n    );\n\n    formHome.defensiveStrengthScoreGeneration =\n      await calculateDefensiveStrength(defensiveMetricsHome, 0.7);\n\n    formHome.defensiveStrengthLast5 = await calculateDefensiveStrength(\n      defensiveMetricsHomeLast5\n    );\n\n    formHome.defensiveStrengthScoreGenerationLast5 =\n      await calculateDefensiveStrength(defensiveMetricsHomeLast5, 0.7);\n\n    formHome.defensiveStrengthHomeOnly = await calculateDefensiveStrength(\n      defensiveMetricsHomeOnly\n    );\n\n    formHome.defensiveStrengthScoreGenerationHomeOnly =\n      await calculateDefensiveStrength(defensiveMetricsHomeOnly, 0.7);\n\n    formAway.defensiveStrength = await calculateDefensiveStrength(\n      defensiveMetricsAway\n    );\n\n    formAway.defensiveStrengthScoreGeneration =\n      await calculateDefensiveStrength(defensiveMetricsAway, 0.7);\n\n    formAway.defensiveStrengthLast5 = await calculateDefensiveStrength(\n      defensiveMetricsAwayLast5\n    );\n\n    formAway.defensiveStrengthScoreGenerationLast5 =\n      await calculateDefensiveStrength(defensiveMetricsAwayLast5, 0.7);\n\n    formAway.defensiveStrengthAwayOnly = await calculateDefensiveStrength(\n      defensiveMetricsAwayOnly\n    );\n\n    formAway.defensiveStrengthScoreGenerationAwayOnly =\n      await calculateDefensiveStrength(defensiveMetricsAwayOnly, 0.7);\n\n    formHome.possessionStrength = await calculateMetricStrength(\n      \"averagePossession\",\n      formHome.AveragePossessionOverall\n        ? formHome.AveragePossessionOverall\n        : formHome.AveragePossessionOverall\n    );\n\n    formHome.possessionStrengthLast5 = await calculateMetricStrength(\n      \"averagePossession\",\n      formHome.avPosessionLast5\n        ? formHome.avPosessionLast5\n        : formHome.AveragePossessionOverall\n    );\n\n    formHome.possessionStrengthHomeOnly = await calculateMetricStrength(\n      \"averagePossession\",\n      formHome.avgPossessionHome\n        ? formHome.avgPossessionHome\n        : formHome.AveragePossessionOverall\n    );\n\n    formAway.possessionStrengthLast5 = await calculateMetricStrength(\n      \"averagePossession\",\n      formAway.avPosessionLast5\n        ? formAway.avPosessionLast5\n        : formAway.AveragePossessionOverall\n    );\n\n    formAway.possessionStrength = await calculateMetricStrength(\n      \"averagePossession\",\n      formAway.AveragePossessionOverall\n        ? formAway.AveragePossessionOverall\n        : formAway.AveragePossessionOverall\n    );\n\n    formAway.possessionStrengthAwayOnly = await calculateMetricStrength(\n      \"averagePossession\",\n      formAway.avgPossessionAway\n        ? formAway.avgPossessionAway\n        : formAway.AveragePossessionOverall\n    );\n\n    formHome.XGdifferentialRecent = await diff(\n      formHome.XGlast5,\n      formHome.XGAgainstlast5\n    );\n\n    formHome.actualToXGDifferenceRecent = await diff(\n      formHome.XGdifferentialRecent,\n      formHome.last5GoalDiff\n    );\n\n    formAway.XGdifferentialRecent = await diff(\n      formAway.XGlast5,\n      formAway.XGAgainstlast5\n    );\n\n    formAway.actualToXGDifferenceRecent = await diff(\n      formAway.XGdifferentialRecent,\n      formAway.last5GoalDiff\n    );\n\n    formHome.directnessOverall =\n      (formHome.AverageShots / formHome.AveragePossessionOverall) * 10;\n\n    formHome.directnessOverallLast5 =\n      (formHome.avShotsLast5 / formHome.avPosessionLast5) * 10;\n\n    formAway.directnessOverallLast5 =\n      (formAway.avShotsLast5 / formAway.avPosessionLast5) * 10;\n\n    formHome.directnessHomeOnly =\n      (formHome.avgShotsHome / formHome.avgPossessionHome) * 10;\n\n    formAway.directnessOverall =\n      (formAway.AverageShots / formAway.AveragePossessionOverall) * 10;\n\n    formAway.directnessAwayOnly =\n      (formAway.avgShotsAway / formAway.avgPossessionAway) * 10;\n\n    formHome.directnessOverallStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formHome.directnessOverall\n    );\n\n    formHome.directnessOverallStrengthLast5 = await calculateMetricStrength(\n      \"directnessOverall\",\n      formHome.directnessOverallLast5\n    );\n\n    formHome.directnessHomeStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formHome.directnessHomeOnly\n    );\n\n    formAway.directnessOverallStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formAway.directnessOverall\n    );\n\n    formAway.directnessOverallStrengthLast5 = await calculateMetricStrength(\n      \"directnessOverall\",\n      formAway.directnessOverallLast5\n    );\n\n    formAway.directnessAwayStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formAway.directnessAwayOnly\n    );\n\n    formHome.shootingAccuracy =\n      (formHome.AverageShotsOnTargetOverall\n        ? formHome.AverageShotsOnTargetOverall / formHome.avgShots\n        : formHome.AverageShotsOnTarget / formHome.avgShots) *\n      formHome.AverageShotsOnTargetOverall\n        ? formHome.AverageShotsOnTargetOverall\n        : formHome.AverageShotsOnTarget;\n\n    formHome.shootingAccuracyLast5 =\n      (formHome.avSOTLast5 / formHome.avShotsLast5) * formHome.avSOTLast5;\n\n    formAway.shootingAccuracyLast5 =\n      (formAway.avSOTLast5 / formAway.avShotsLast5) * formAway.avSOTLast5;\n\n    formHome.shootingAccuracyHomeOnly =\n      (formHome.avgShotsOnTargetHome / formHome.avgShotsHome) *\n      formHome.avgShotsOnTargetHome;\n\n    formAway.shootingAccuracy =\n      (formAway.AverageShotsOnTargetOverall\n        ? formAway.AverageShotsOnTargetOverall / formAway.avgShots\n        : formAway.AverageShotsOnTarget / formAway.avgShots) *\n      formAway.AverageShotsOnTargetOverall\n        ? formAway.AverageShotsOnTargetOverall\n        : formAway.AverageShotsOnTarget;\n\n    formAway.shootingAccuracyAwayOnly =\n      (formAway.avgShotsOnTargetAway / formAway.avgShotsAway) *\n      formAway.avgShotsOnTargetAway;\n\n    formHome.accuracyOverallStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formHome.avgShotValue\n    );\n\n    formHome.accuracyOverallStrengthLast5 = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formHome.avgShotValueLast5\n    );\n\n    formHome.accuracyHomeStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formHome.avgShotValueHome\n    );\n\n    formAway.accuracyOverallStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formAway.avgShotValue\n    );\n\n    formAway.accuracyOverallStrengthLast5 = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formAway.avgShotValueLast5\n    );\n\n    formAway.accuracyAwayStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formAway.avgShotValueAway\n    );\n\n    formHome.xgForStrength = await calculateMetricStrength(\n      \"xgFor\",\n      formHome.XGOverall\n    );\n\n    formHome.xgForStrengthLast5 = await calculateMetricStrength(\n      \"xgFor\",\n      formHome.XGlast5\n    );\n\n    formHome.xgForStrengthHomeOnly = await calculateMetricStrength(\n      \"xgFor\",\n      formHome.avgXGScoredHome\n    );\n\n    formHome.xgAgainstStrength = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formHome.XGAgainstAvgOverall\n    );\n\n    formHome.xgAgainstStrengthLast5 = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formHome.XGAgainstlast5\n    );\n\n    formHome.xgAgainstStrengthHomeOnly = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formHome.avgXGConceededHome\n    );\n\n    formAway.xgForStrength = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.XGOverall\n    );\n\n    formAway.xgForStrengthLast5 = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.last5XGAvgFor\n    );\n\n    formAway.xgForStrengthLast5 = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.XGlast5\n    );\n\n    formAway.xgForStrengthAwayOnly = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.avgXGScoredAway\n    );\n\n    formAway.xgAgainstStrength = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formAway.XGAgainstAvgOverall\n    );\n\n    formAway.xgAgainstStrengthLast5 = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formAway.XGAgainstlast5\n    );\n\n    formAway.xgAgainstStrengthAwayOnly = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formAway.avgXGConceededAway\n    );\n\n    formHome.styleOfPlayOverall = await calculatePlayingStyle(\n      formHome.directnessRating,\n      formHome.AveragePossessionOverall\n    );\n    formHome.styleOfPlayHome = await calculatePlayingStyle(\n      formHome.directnessRatingHome,\n      formHome.avgPossessionHome\n    );\n\n    formAway.styleOfPlayOverall = await calculatePlayingStyle(\n      formAway.directnessRating,\n      formAway.AveragePossessionOverall\n    );\n    formAway.styleOfPlayAway = await calculatePlayingStyle(\n      formAway.directnessRatingAway,\n      formAway.avgPossessionAway\n    );\n\n    formHome.actualToXGDifference = parseInt(\n      await diff(formHome.XGDiffNonAverage, formHome.goalDifference)\n    );\n\n    formAway.actualToXGDifference = parseInt(\n      await diff(formAway.XGDiffNonAverage, formAway.goalDifference)\n    );\n\n    // teamComparisonScore = await compareTeams(formHome, formAway, match);\n\n    [formHome.teamGoalsCalc, formAway.teamGoalsCalc] = await generateGoals(\n      formHome,\n      formAway,\n      match\n    );\n\n    // teamComparisonScore = teamComparisonScore * 0.3;\n    // LEAVE\n\n    // if (teamComparisonScore > 0.45) {\n    //   teamComparisonScore = 0.45;\n    // } else if (teamComparisonScore < -0.45) {\n    //   teamComparisonScore = -0.45;\n    // }\n\n    // if (teamComparisonScore < 0) {\n    //   formHome.teamStrengthWeighting = 1 + teamComparisonScore / 1;\n    //   formAway.teamStrengthWeighting = 1 - teamComparisonScore / 1;\n    // } else if (teamComparisonScore >= 0) {\n    //   formHome.teamStrengthWeighting = 1 + teamComparisonScore / 1;\n    //   formAway.teamStrengthWeighting = 1 - teamComparisonScore / 1;\n    // }\n\n    // teamComparisonScore = 0;\n\n    // match.teamComparisonScore = teamComparisonScore.toFixed(2);\n    // match.goalWeighting = 1 + parseFloat(match.teamComparisonScore)\n\n    // let team1Metrics = {\n    //   weighting: formHome.teamGoalsCalc,\n    //   odds: match.homeOdds,\n    //   XGRating: formHome.XGRating,\n    //   actualToXGDifference: formHome.actualToXGDifference,\n    //   // Add other relevant metrics here\n    // };\n\n    // let team2Metrics = {\n    //   weighting: formAway.teamGoalsCalc,\n    //   odds: match.awayOdds,\n    //   XGRating: formAway.XGRating,\n    //   actualToXGDifference: formAway.actualToXGDifference,\n    //   // Add other relevant metrics here\n    // };\n\n    // // pass arrays of league goals and conceeded\n    // let scorePredictions;\n    // let scorePredictionsHA;\n    // let scorePredictionsRecent;\n\n    // if (\n    //   formHome.allConceededArrayHome !== undefined &&\n    //   formAway.allConceededArrayAway !== undefined\n    // ) {\n    //   scorePredictionsRecent = await predictScore(\n    //     formHome.allGoalsArrayHomeRecent,\n    //     formHome.allConceededArrayHomeRecent,\n    //     formAway.allGoalsArrayAwayRecent,\n    //     formAway.allConceededArrayAwayRecent,\n    //     team1Metrics,\n    //     team2Metrics,\n    //     match.game\n    //   );\n    //   scorePredictionsHA = await predictScore(\n    //     formHome.allGoalsArrayHomeOnly,\n    //     formHome.allConceededArrayHomeOnly,\n    //     formAway.allGoalsArrayAwayOnly,\n    //     formAway.allConceededArrayAwayOnly,\n    //     team1Metrics,\n    //     team2Metrics,\n    //     match.game\n    //   );\n    //   scorePredictions = await predictScore(\n    //     formHome.allGoalsArrayHome,\n    //     formHome.allConceededArrayHome,\n    //     formAway.allGoalsArrayAway,\n    //     formAway.allConceededArrayAway,\n    //     team1Metrics,\n    //     team2Metrics,\n    //     match.game\n    //   );\n    // }\n\n    let finalHomeGoals;\n    let finalAwayGoals;\n\n    const homeGoalDiff =\n      formHome.ScoredAverageShortAndLongTerm -\n      formHome.conceededAverageShortAndLongTerm;\n    const awayGoalDiff =\n      formAway.ScoredAverageShortAndLongTerm -\n      formAway.conceededAverageShortAndLongTerm;\n\n    formHome.goalsDifferential =\n      parseFloat(await diff(homeGoalDiff, awayGoalDiff)) / 1;\n    formAway.goalsDifferential =\n      parseFloat(await diff(awayGoalDiff, homeGoalDiff)) / 1;\n\n    formHome.rollingAverageGoalsDifferential = parseFloat(\n      formHome.allTeamGoalsBasedOnAverages -\n        formHome.allTeamGoalsConceededBasedOnAverages\n    );\n    formAway.rollingAverageGoalsDifferential = parseFloat(\n      formAway.allTeamGoalsBasedOnAverages -\n        formAway.allTeamGoalsConceededBasedOnAverages\n    );\n\n    match.GoalsInGamesAverageHome =\n      formHome.avScoredLast5 + formHome.avConceededLast5;\n\n    match.GoalsInGamesAverageAway =\n      formAway.avScoredLast5 + formAway.avConceededLast5;\n\n    let factorOneHome;\n    let factorOneAway;\n\n    factorOneHome =\n      // homeLeagueOrAllFormAverageGoals * 1 +\n      // formHome.last5Goals * 0.5 +\n      // formAway.last5GoalsConceeded * 0.5 +\n      (formHome.forAndAgainstRollingAvHomeOrAway.goalsFor * 2 +\n        formAway.forAndAgainstRollingAvHomeOrAway.goalsAgainst * 2 +\n        formHome.forAndAgainstRollingAv.goalsFor * 0 +\n        formAway.forAndAgainstRollingAv.goalsAgainst * 0 +\n        formHome.allTeamGoalsBasedOnAverages * 0 +\n        formAway.allTeamGoalsConceededBasedOnAverages * 0) /\n      // formHome.XGOverall * 1 +\n      // formAway.XGAgainstAvgOverall * 1 +\n\n      8;\n\n    factorOneAway =\n      // awayLeagueOrAllFormAverageGoals * 1 +\n      // formAway.last5Goals * 0.5 +\n      // formHome.last5GoalsConceeded * 0.5 +\n      (formAway.forAndAgainstRollingAvHomeOrAway.goalsFor * 2 +\n        formHome.forAndAgainstRollingAvHomeOrAway.goalsAgainst * 2 +\n        formAway.forAndAgainstRollingAv.goalsFor * 0 +\n        formHome.forAndAgainstRollingAv.goalsAgainst * 0 +\n        formAway.allTeamGoalsBasedOnAverages * 0 +\n        formHome.allTeamGoalsConceededBasedOnAverages * 0) /\n      // formAway.XGOverall * 1 +\n      // formHome.XGAgainstAvgOverall * 1 +\n      8;\n\n    // let factorTwoHome;\n    // let factorTwoAway;\n\n    // // if (\n    //   scorePredictions !== undefined &&\n    //   scorePredictions[0].probability !== 1\n    // ) {\n    //   factorTwoHome =\n    //     // scorePredictions[0].team1Score +\n    //     // scorePredictionsRecent[0].team1Score +\n    //     scorePredictionsHA[0].team1Score / 2;\n    //   factorTwoAway =\n    //     // scorePredictions[0].team2Score +\n    //     // scorePredictionsRecent[0].team2Score +\n    //     scorePredictionsHA[0].team2Score / 2;\n    // } else {\n    //   factorTwoHome = factorOneHome;\n    //   factorTwoAway = factorOneAway;\n    // }\n\n    let homeComparisonWeighting;\n    let awayComparisonWeighting;\n    match.scoreDiff = await diff(factorOneHome, factorOneAway);\n\n    if (teamComparisonScore > 0) {\n      homeComparisonWeighting = 1 + Math.abs(teamComparisonScore);\n      awayComparisonWeighting = 1 + -Math.abs(teamComparisonScore);\n    } else if (teamComparisonScore < 0) {\n      homeComparisonWeighting = 1 + -Math.abs(teamComparisonScore);\n      awayComparisonWeighting = 1 + Math.abs(teamComparisonScore);\n    } else {\n      homeComparisonWeighting = 1;\n      awayComparisonWeighting = 1;\n    }\n\n    // ROI\n    // Cumalative ROI for all 1402 match outcomes: + 7.58%\n\n    // const adjustmentHome =\n    //   formHome.avgShotValue > 10.5\n    //     ? parseFloat(formHome.actualToXGDifferenceRecent * 0.25)\n    //     : parseFloat(formHome.actualToXGDifferenceRecent * 0.5);\n    // const adjustmentAway =\n    //   formAway.twoGameAverage > 10.5\n    //     ? parseFloat(formAway.actualToXGDifferenceRecent * 0.25)\n    //     : parseFloat(formAway.actualToXGDifferenceRecent * 0.5);\n\n    // const homeAdj = formHome.actualToXGDifferenceRecent / 2;\n    // const awayAdj = formAway.actualToXGDifferenceRecent / 2;\n\n    // let experimentalHomeGoals = formHome.teamGoalsCalc;\n\n    // console.log(match.game)\n    // console.log(formHome)\n    // console.log(formAway)\n\n    let experimentalHomeGoals = formHome.teamGoalsCalc;\n    // factorOneHome * 1 +\n    // (formHome.avXGLast5 +\n    //   formAway.avXGAgainstLast5 +\n    //   // formHome.predictedGoalsBasedOnHomeAv +\n    //   // formAway.predictedGoalsConceededBasedOnAwayAv +\n    //   // formHome.XGPredictionHome.goalsFor +\n    //   // formAway.XGPredictionAway.goalsAgainst +\n    //   formHome.teamGoalsCalc * 4) /\n    // +\n    // formHome.forAndAgainstRollingAvHomeOrAway.goalsFor * 1 +\n    // formAway.forAndAgainstRollingAvHomeOrAway.goalsAgainst * 1 +\n    // formHome.forAndAgainstRollingAv.goalsFor * 1 +\n    // formAway.forAndAgainstRollingAv.goalsAgainst * 1\n    // 6;\n    // + homeAdj;\n\n    // (factorOneHome * homeComparisonWeighting +\n    //   (formHome.teamGoalsCalc * 2) +\n    //   factorTwoHome) /\n    // 4;\n    // (formHome.forAndAgainstRollingAvHomeOrAway.goalsFor + formAway.forAndAgainstRollingAvHomeOrAway.goalsAgainst) / 2\n\n    // let experimentalAwayGoals = formAway.teamGoalsCalc;\n    let experimentalAwayGoals = formAway.teamGoalsCalc;\n    // // factorOneAway * 1 +\n    // (formAway.avXGLast5 +\n    //   formHome.avXGAgainstLast5 +\n    //   // formAway.predictedGoalsBasedOnAwayAv +\n    //   // formHome.predictedGoalsConceededBasedOnHomeAv +\n    //   // formAway.XGPredictionAway.goalsFor +\n    //   // formHome.XGPredictionHome.goalsAgainst +\n    //   formAway.teamGoalsCalc * 4) /\n    // +\n    // formAway.forAndAgainstRollingAvHomeOrAway.goalsFor * 1 +\n    // formHome.forAndAgainstRollingAvHomeOrAway.goalsAgainst * 1 +\n    // formAway.forAndAgainstRollingAv.goalsFor * 1 +\n    // formHome.forAndAgainstRollingAv.goalsAgainst * 1\n    // 6;\n    // + awayAdj;\n\n    // console.log(experimentalHomeGoals);\n    // console.log(adjustmentHome);\n\n    // (factorOneAway * awayComparisonWeighting +\n    //   (formAway.teamGoalsCalc * 2) +\n    //   factorTwoAway) /\n    // 4;\n    // (formAway.forAndAgainstRollingAvHomeOrAway.goalsFor + formHome.forAndAgainstRollingAvHomeOrAway.goalsAgainst) / 2\n\n    let rawFinalHomeGoals = experimentalHomeGoals;\n    let rawFinalAwayGoals = experimentalAwayGoals;\n\n    // if(rawFinalHomeGoals < 0){\n    //   rawFinalHomeGoals = 0\n    // }\n\n    // if(rawFinalAwayGoals < 0){\n    //   rawFinalAwayGoals = 0\n    // }\n\n    match.rawFinalHomeGoals = rawFinalHomeGoals;\n    match.rawFinalAwayGoals = rawFinalAwayGoals;\n\n    if (rawFinalHomeGoals < 0) {\n      rawFinalHomeGoals = 0.01;\n    }\n\n    if (rawFinalAwayGoals < 0) {\n      rawFinalAwayGoals = 0.01;\n    }\n\n    // if (\n    //   formHome.CleanSheetPercentage < 30 &&\n    //   formAway.CleanSheetPercentage < 30\n    // ) {\n    //   finalHomeGoals = Math.ceil(rawFinalHomeGoals);\n    //   finalAwayGoals = Math.ceil(rawFinalAwayGoals);\n    // } else {\n    //   finalHomeGoals = Math.floor(rawFinalHomeGoals);\n    //   finalAwayGoals = Math.floor(rawFinalAwayGoals);\n    // }\n\n    // if(rawFinalHomeGoals > formHome.avgScored && rawFinalAwayGoals > formAway.avgScored){\n    //   rawFinalHomeGoals -= Math.abs(-1)\n    //   rawFinalAwayGoals -= Math.abs(-1)\n    // }\n\n    finalHomeGoals = Math.floor(rawFinalHomeGoals);\n    finalAwayGoals = Math.floor(rawFinalAwayGoals);\n\n    // finalHomeGoals = rawFinalHomeGoals;\n    // finalAwayGoals = rawFinalAwayGoals;\n\n    // finalHomeGoals = await roundCustom(rawFinalHomeGoals, formHome, formAway);\n    // finalAwayGoals = await roundCustom(rawFinalAwayGoals, formAway, formHome);\n\n    // if (finalHomeGoals > formHome.avgScored + 2) {\n    //   finalHomeGoals = Math.round((finalHomeGoals + formHome.avgScored) / 2);\n    // }\n\n    // if (finalAwayGoals > formAway.avgScored + 2) {\n    //   finalAwayGoals = Math.round((finalAwayGoals + formAway.avgScored) / 2);\n    // }\n\n    // if (finalAwayGoals < 0) {\n    //   let difference = Math.abs(\n    //     parseFloat((await diff(0, finalAwayGoals)) / 2)\n    //   );\n    //   rawFinalHomeGoals = rawFinalHomeGoals + difference;\n    //   finalAwayGoals = 0;\n    // }\n\n    // if (finalHomeGoals < 0) {\n    //   let difference = Math.abs(\n    //     parseFloat((await diff(0, finalHomeGoals)) / 2)\n    //   );\n    //   rawFinalAwayGoals = rawFinalAwayGoals + difference;\n    //   finalHomeGoals = 0;\n    // }\n\n    if (match.status !== \"suspended\") {\n      if (finalHomeGoals > finalAwayGoals) {\n        match.prediction = \"homeWin\";\n        homePredictions = homePredictions + 1;\n        if (\n          formHome.lastGame === \"L\" ||\n          formHome.last2Points < 3 ||\n          formAway.last2Points > 4 ||\n          formHome.oddsReliabilityWin < 50\n        ) {\n          match.includeInMultis = false;\n        } else {\n          match.includeInMultis = true;\n        }\n      } else if (finalAwayGoals > finalHomeGoals) {\n        match.prediction = \"awayWin\";\n        awayPredictions = awayPredictions + 1;\n        if (\n          formAway.lastGame === \"L\" ||\n          formAway.last2Points < 3 ||\n          formHome.last2Points > 4 ||\n          formAway.oddsReliabilityWin < 50\n        ) {\n          match.includeInMultis = false;\n        } else {\n          match.includeInMultis = true;\n        }\n      } else if (finalHomeGoals === finalAwayGoals) {\n        match.prediction = \"draw\";\n        drawPredictions = drawPredictions + 1;\n      }\n    }\n\n    // console.log(match)\n    // if (match.status !== \"suspended\" && match.AIHomeGoals) {\n    //   if (match.AIHomeGoals > match.AIAwayGoals) {\n    //     match.AIprediction = \"homeWin\";\n    //     homeAIPredictions = homeAIPredictions + 1;\n    //   } else if (match.AIAwayGoals > match.AIHomeGoals) {\n    //     match.AIprediction = \"awayWin\";\n    //     awayAIPredictions = awayAIPredictions + 1;\n    //   } else if (finalHomeGoals === finalAwayGoals) {\n    //     match.prediction = \"draw\";\n    //     drawAIPredictions = drawAIPredictions + 1;\n    //   }\n    // }\n\n    console.log(`drawPredictions: ${drawPredictions}`);\n    // console.log(`draw AI Predictions: ${drawAIPredictions}`);\n\n    if (\n      (XGdifferential > 1 && match.prediction === \"homeWin\") ||\n      (XGdifferential < -1.6 && match.prediction === \"awayWin\")\n    ) {\n      match.XGdifferential = true;\n    } else {\n      match.XGdifferential = false;\n    }\n\n    if (\n      (pointsDiff6 > 1.2 && match.prediction === \"homeWin\") ||\n      (pointsDiff6 < -1.2 && match.prediction === \"awayWin\")\n    ) {\n      match.pointsDifferential = true;\n      match.pointsDifferentialValue = Math.abs(pointsDiff6);\n      match.pointsDifferentialValueRaw = parseFloat(pointsDiff6);\n    } else {\n      match.pointsDifferential = false;\n      match.pointsDifferentialValue = Math.abs(pointsDiff6);\n      match.pointsDifferentialValueRaw = parseFloat(pointsDiff6);\n    }\n\n    let rollingGoalDiffDifferential = await diff(\n      formHome.rollingAverageGoalsDifferential,\n      formAway.rollingAverageGoalsDifferential\n    );\n\n    if (\n      (rollingGoalDiffDifferential > 1.5 && match.prediction === \"homeWin\") ||\n      (rollingGoalDiffDifferential < -1.5 && match.prediction === \"awayWin\")\n    ) {\n      match.rollingGoalDiff = true;\n      match.rollingGoalDiffValue = rollingGoalDiffDifferential;\n    } else {\n      match.rollingGoalDiff = false;\n      match.rollingGoalDiffValue = rollingGoalDiffDifferential;\n    }\n\n    let dangerousAttacksDifferential = await diff(\n      formHome.AverageDangerousAttacksOverall,\n      formAway.AverageDangerousAttacksOverall\n    );\n\n    if (\n      (dangerousAttacksDifferential > 20 && match.prediction === \"homeWin\") ||\n      (dangerousAttacksDifferential < -20 && match.prediction === \"awayWin\")\n    ) {\n      match.dangerousAttacksDiff = true;\n      match.dangerousAttacksDiffValue = dangerousAttacksDifferential;\n    } else {\n      match.dangerousAttacksDiff = false;\n      match.dangerousAttacksDiffValue = dangerousAttacksDifferential;\n    }\n\n    switch (true) {\n      case match.status !== \"complete\":\n        break;\n      case match.homeGoals > match.awayGoals:\n        match.winner = match.homeTeam;\n        match.outcome = \"homeWin\";\n        homeOutcomes = homeOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formHome.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formAway.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formHome.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formAway.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formHome.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formAway.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formHome.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formAway.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += homeOdds;\n        sumOddsLoss = sumOddsLoss += awayOdds;\n        sumXGForWin = sumXGForWin += formHome.XGOverall;\n        sumXGForLoss = sumXGForLoss += formAway.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formHome.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formAway.XGAgainstAvgOverall;\n        break;\n      case match.homeGoals === match.awayGoals:\n        match.winner = \"draw\";\n        match.outcome = \"draw\";\n        allOutcomes = allOutcomes + 1;\n        allDrawOutcomes = allDrawOutcomes + 1;\n        break;\n      case match.homeGoals < match.awayGoals:\n        match.winner = match.awayTeam;\n        match.outcome = \"awayWin\";\n        allOutcomes = allOutcomes + 1;\n        awayOutcomes = awayOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formAway.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formHome.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formAway.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formHome.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formAway.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formHome.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formAway.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formHome.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += awayOdds;\n        sumOddsLoss = sumOddsLoss += homeOdds;\n        sumXGForWin = sumXGForWin += formAway.XGOverall;\n        sumXGForLoss = sumXGForLoss += formHome.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formAway.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formHome.XGAgainstAvgOverall;\n        break;\n      default:\n        break;\n    }\n\n    console.log(`allDrawOutcomes: ${allDrawOutcomes}`);\n\n    if (match.status === \"complete\") {\n      if (match.prediction === match.outcome) {\n        match.predictionOutcome = \"Won\";\n        winAmount = winAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      } else if (match.prediction !== match.outcome) {\n        match.predictionOutcome = \"Lost\";\n        lossAmount = lossAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      }\n    }\n\n    // if (match.status === \"complete\") {\n    //   if (match.AIprediction === match.outcome) {\n    //     match.predictionOutcome = \"Won\";\n    //     AIwinAmount = AIwinAmount + 1;\n    //     if (match.outcome === \"draw\") {\n    //     }\n    //   } else if (match.AIprediction !== match.outcome) {\n    //     match.predictionOutcome = \"Lost\";\n    //     AIlossAmount = AIlossAmount + 1;\n    //     if (match.outcome === \"draw\") {\n    //     }\n    //   }\n    // }\n\n    if (match.status === \"complete\") {\n      if (match.homeGoals + match.awayGoals > 2) {\n        match.over25PredictionOutcome = \"Won\";\n      } else {\n        match.over25PredictionOutcome = \"Lost\";\n      }\n    }\n\n    if (\n      match.status === \"complete\" &&\n      match.homeGoals > 0 &&\n      match.awayGoals > 0\n    ) {\n      match.bttsOutcome = \"bttsWon\";\n    } else {\n      match.bttsOutcome = \"bttsLost\";\n    }\n\n    match.formHome = formHome;\n    match.formAway = formAway;\n\n    // formObjectHome = formHome;\n    // formObjectAway = formAway;\n\n    // console.log(formObjectHome)\n    // console.log(formObjectAway)\n\n    let total = parseInt(finalHomeGoals + finalAwayGoals);\n    totalGoals = totalGoals + total;\n\n    let total2 = parseInt(match.homeGoals + match.awayGoals);\n    totalGoals2 = totalGoals2 + total2;\n\n    numberOfGames = numberOfGames + 1;\n\n    if (finalHomeGoals < 0) {\n      finalHomeGoals = 0;\n    }\n\n    if (finalAwayGoals < 0) {\n      finalAwayGoals = 0;\n    }\n\n    if (match.status === \"suspended\") {\n      finalHomeGoals = \"P\";\n      finalAwayGoals = \"P\";\n    }\n\n    if (\n      finalHomeGoals > finalAwayGoals &&\n      (match.homeOdds < rangeValue[0] || match.homeOdds > rangeValue[1])\n    ) {\n      match.omit = true;\n    } else if (\n      finalAwayGoals > finalHomeGoals &&\n      (match.awayOdds < rangeValue[0] || match.awayOdds > rangeValue[1])\n    ) {\n      match.omit = true;\n    } else if (\n      finalHomeGoals === finalAwayGoals &&\n      (match.drawOdds < rangeValue[0] || match.drawOdds > rangeValue[1])\n    ) {\n      match.omit = true;\n    }\n\n    const last10PointDiffHomePerspective = Math.abs(\n      formHome.pointsSum6 - formAway.pointsSum6\n    );\n\n    const last6PointDiffAwayPerspective = Math.abs(\n      formAway.pointsSum6 - formHome.pointsSum6\n    );\n\n    const XGDiffBetweenTeamsHomePerspective = Math.abs(\n      formHome.XGDiffNonAverage - formAway.XGDiffNonAverage\n    );\n    const XGDiffBetweenTeamsAwayPerspective = Math.abs(\n      formAway.XGDiffNonAverage - formHome.XGDiffNonAverage\n    );\n\n    match.goalDiffHomeOrAwayComparison =\n      parseFloat(formHome.goalDifferenceHomeOrAway) -\n      parseFloat(formAway.goalDifferenceHomeOrAway);\n\n    match.goalDifferenceComparison =\n      parseFloat(formHome.goalDifference) - parseFloat(formAway.goalDifference);\n\n    switch (true) {\n      case finalHomeGoals > finalAwayGoals:\n        if (minimumXG !== 0 && XGDiffBetweenTeamsHomePerspective < minimumXG) {\n          match.omit = true;\n        }\n        if (\n          minimumLast6 !== 0 &&\n          last10PointDiffHomePerspective < minimumLast6\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGDHorA !== 0 &&\n          match.goalDiffHomeOrAwayComparison < minimumGDHorA\n        ) {\n          match.omit = true;\n        }\n        if (minimumGD !== 0 && match.goalDifferenceComparison < minimumGD) {\n          match.omit = true;\n        }\n        break;\n      case finalHomeGoals < finalAwayGoals:\n        if (minimumXG !== 0 && XGDiffBetweenTeamsAwayPerspective < minimumXG) {\n          match.omit = true;\n        }\n        if (\n          minimumLast6 !== 0 &&\n          last6PointDiffAwayPerspective < minimumLast6\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGDHorA !== 0 &&\n          Math.abs(match.goalDiffHomeOrAwayComparison) < minimumGDHorA\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGD !== 0 &&\n          Math.abs(match.goalDifferenceComparison) < minimumGD\n        ) {\n          match.omit = true;\n        }\n        break;\n      case finalHomeGoals === finalAwayGoals:\n        if (\n          minimumXG !== 0 &&\n          Math.abs(XGDiffBetweenTeamsHomePerspective) < minimumXG\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumLast6 !== 0 &&\n          last10PointDiffHomePerspective < minimumLast6\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGDHorA !== 0 &&\n          Math.abs(match.goalDiffHomeOrAwayComparison) < minimumGDHorA\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGD !== 0 &&\n          Math.abs(match.goalDifferenceComparison) < minimumGD\n        ) {\n          match.omit = true;\n        }\n        break;\n      default:\n        break;\n    }\n\n    if (\n      (match.game_week < 4 && match.game_week >= 0) ||\n      match.omit === true\n      // match.game_week < 3 &&\n    ) {\n      finalHomeGoals = \"-\";\n      finalAwayGoals = \"-\";\n      match.status = \"notEnoughData\";\n    }\n\n    return [\n      finalHomeGoals,\n      finalAwayGoals,\n      rawFinalHomeGoals,\n      rawFinalAwayGoals,\n    ];\n  } else {\n    finalHomeGoals = \"\";\n    finalAwayGoals = \"\";\n    rawFinalHomeGoals = \"\";\n    rawFinalAwayGoals = \"\";\n    match.status = \"notEnoughData\";\n    match.profit = 0;\n  }\n\n  return [finalHomeGoals, finalAwayGoals, rawFinalHomeGoals, rawFinalAwayGoals];\n}\n\nlet specificLeagueResults = {}; // Initialize outside the function to persist data\n\nasync function getSuccessMeasure(fixtures) {\n  let sumProfit = 0;\n  let investment = 0;\n  let exactScores = 0;\n  let successCount = 0;\n  let profit = 0;\n  let netProfit = 0;\n\n  for (let i = 0; i < fixtures.length; i++) {\n    if (\n      fixtures[i].status === \"complete\" &&\n      fixtures[i].hasOwnProperty(\"prediction\") &&\n      fixtures[i].omit !== true\n    ) {\n      sumProfit += fixtures[i].profit;\n      investment += 1;\n      netProfit = (sumProfit - investment).toFixed(2);\n      profit = parseFloat(netProfit);\n\n      if (fixtures[i].exactScore === true) {\n        exactScores += 1;\n      }\n      if (fixtures[i].predictionOutcome === \"Won\") {\n        successCount += 1;\n      }\n\n      // Handle league-specific results\n      const leagueName = fixtures[i].leagueDesc || \"Unknown League\";\n\n      if (!specificLeagueResults[leagueName]) {\n        specificLeagueResults[leagueName] = {\n          totalProfit: 0,\n          totalInvestment: 0,\n          totalROI: 0,\n          exactScores: 0,\n          successCount: 0,\n        };\n      }\n\n      // Update the league-specific results\n      const league = specificLeagueResults[leagueName];\n      league.totalProfit += fixtures[i].profit;\n      league.totalInvestment += 1;\n      league.exactScores += fixtures[i].exactScore ? 1 : 0;\n      league.successCount += fixtures[i].predictionOutcome === \"Won\" ? 1 : 0;\n\n      // Calculate ROI for the league\n      const netLeagueProfit = league.totalProfit - league.totalInvestment;\n      league.totalROI = (\n        (netLeagueProfit / league.totalInvestment) *\n        100\n      ).toFixed(2);\n    }\n  }\n\n  // Update cumulative totals\n  totalInvestment += investment;\n  totalProfit += profit;\n  const ROI = (profit / investment) * 100;\n  totalROI = (totalProfit / totalInvestment) * 100;\n\n  console.log(`Total Investment: ${totalInvestment}`);\n  console.log(`Total Profit: ${totalProfit}`);\n  console.log(typeof totalProfit);\n  console.log(`Total Investment: ${totalInvestment}`);\n  console.log(`Total ROI: ${totalROI}`);\n  console.log(typeof totalROI);\n\n  let isPaid;\n  if (userDetail) {\n    isPaid = userDetail.isPaid;\n  }\n  console.log(isPaid);\n  if (investment > 0 && isPaid) {\n    ReactDOM.render(\n      <Fragment>\n        <h3 className={\"SuccessMeasureText\"}>\n          ROI for all {investment} W/D/W outcomes: {ROI >= 0 ? \"+\" : \" \"}{\" \"}\n          {ROI.toFixed(2)}%\n        </h3>\n        <p>{`Correct W/D/W predictions: ${successCount} (${(\n          (successCount / investment) *\n          100\n        ).toFixed(1)}%)`}</p>\n        <p>{`Exact scores predicted: ${exactScores} (${(\n          (exactScores / investment) *\n          100\n        ).toFixed(1)}%)`}</p>\n        <p className=\"SuccessMeasureText\">\n          Cumulative ROI for all {totalInvestment} match outcomes:{\" \"}\n          {totalROI >= 0 ? \"+\" : \"\"}\n          {totalROI.toFixed(2)}%\n        </p>\n        <CollapsableStats buttonText=\"ROI by League\">\n          {Object.entries(specificLeagueResults)\n            .sort(([, a], [, b]) => b.totalROI - a.totalROI) // Sort by ROI in descending order\n            .map(([leagueName, league]) => {\n              return (\n                <div className=\"SuccessMeasure\" key={leagueName}>\n                  <h3\n                    className={`${\n                      league.totalROI >= 0\n                        ? \"ProfitableLeague\"\n                        : \"NonProfitableLeague\"\n                    }`}\n                  >\n                    {leagueName}: ROI {league.totalROI >= 0 ? \"+\" : \" \"}\n                    {league.totalROI}%\n                  </h3>\n                  <p>\n                    Successful Predictions: {league.successCount} /{\" \"}\n                    {specificLeagueResults[leagueName].totalInvestment} :{\" \"}\n                    {(\n                      (league.successCount /\n                        specificLeagueResults[leagueName].totalInvestment) *\n                      100\n                    ).toFixed(2)}\n                    %\n                  </p>\n                  <p>\n                    Exact Scores: {league.exactScores} /{\" \"}\n                    {specificLeagueResults[leagueName].totalInvestment} :{\" \"}\n                    {(\n                      (league.exactScores /\n                        specificLeagueResults[leagueName].totalInvestment) *\n                      100\n                    ).toFixed(2)}\n                  </p>\n                </div>\n              );\n            })}\n        </CollapsableStats>\n      </Fragment>,\n      document.getElementById(\"successMeasure2\")\n    );\n  } else if (!isPaid) {\n    ReactDOM.render(\n      <Fragment>\n        <p>{`Correct W/D/W predictions: ${successCount} / ${investment} (${(\n          (successCount / investment) *\n          100\n        ).toFixed(1)}%)`}</p>\n        <p>Full ROI stats available when fixtures are uncapped</p>\n      </Fragment>,\n      document.getElementById(\"successMeasure2\")\n    );\n  } else {\n    return;\n  }\n}\n\n// async function getAISuccessMeasure(fixtures) {\n//   let sumProfit = 0;\n//   let investment = 0;\n//   let exactScores = 0;\n//   let successCount = 0;\n//   let profit = 0;\n//   let netProfit = 0;\n\n//   for (let i = 0; i < fixtures.length; i++) {\n//     if (\n//       fixtures[i].status === \"complete\" &&\n//       fixtures[i].hasOwnProperty(\"AIprediction\") &&\n//       fixtures[i].omit !== true\n//     ) {\n//       sumProfit += fixtures[i].profit;\n//       investment += 1;\n//       netProfit = (sumProfit - investment).toFixed(2);\n//       profit = parseFloat(netProfit);\n\n//       if (fixtures[i].exactScore === true) {\n//         exactScores += 1;\n//       }\n//       if (fixtures[i].predictionOutcome === \"Won\") {\n//         successCount += 1;\n//       }\n//     }\n//   }\n//   console.log(`AI Profit / loss = ${profit}`)\n//   console.log(`AI exact scores = ${exactScores}`)\n\n// }\n\nexport var tips = [];\nexport var allTips = [];\nlet allTipsSorted = [];\nvar newArray = [];\nvar bestBets = [];\nvar price;\nvar Over25Tips = [];\nvar XGDiffTips = [];\nvar rollingDiffTips = [];\nvar dangerousAttacksDiffTips = [];\nvar pointsDiffTips = [];\nvar combinations;\nvar exoticArray = [];\nvar gamesInExotic;\nvar minimumExotic;\nvar exoticStake;\nvar exoticString;\nvar bttsArray = [];\nvar accumulatedOdds = 1;\nlet predictions = [];\n\nexport async function getNewTips(array) {\n  // allTips = [];\n  newArray = [];\n  accumulatedOdds = 1;\n\n  if (array.length > 1 && incrementValue > 0) {\n    array.forEach((tip) => {\n      if (\n        array.indexOf(tip) < incrementValue\n        // tip.goalDifferential >= incrementValue && tip.comparisonScore > 0\n      ) {\n        newArray.push(tip);\n        accumulatedOdds = parseFloat(accumulatedOdds) * parseFloat(tip.rawOdds);\n      }\n    });\n  }\n  await renderTips(newArray);\n}\n\nexport async function getScorePrediction(day, mocked) {\n  let mock = mocked;\n  clicked = true;\n  tips = [];\n  bestBets = [];\n  // price = 0\n  bttsArray = [];\n  Over25Tips = [];\n  XGDiffTips = [];\n  pointsDiffTips = [];\n  rollingDiffTips = [];\n  dangerousAttacksDiffTips = [];\n  allTips = [];\n\n  let index = 2;\n  let divider = 10;\n\n  ReactDOM.render(<div></div>, document.getElementById(\"GeneratePredictions\"));\n\n  await Promise.all(\n    matches.map(async (match) => {\n      // if there are no stored predictions, calculate them based on live data\n      if (match) {\n        switch (true) {\n          case match.status === \"canceled\":\n            match.goalsA = \"P\";\n            match.goalsB = \"P\";\n            match.completeData = false;\n            await calculateScore(match, index, divider, false);\n            break;\n          case match.leagueID === 6935 ||\n            match.leagueID === 7061 ||\n            (match.game_week < 3 && match.game_week !== 0):\n            match.goalsA = \"x\";\n            match.goalsB = \"x\";\n            match.completeData = false;\n            await calculateScore(match, index, divider, true);\n            break;\n          default:\n            [\n              match.goalsA,\n              match.goalsB,\n              match.unroundedGoalsA,\n              match.unroundedGoalsB,\n              match.completeData = true,\n            ] = await calculateScore(match, index, divider, true);\n            break;\n        }\n      } else {\n        [\n          match.goalsA,\n          match.goalsB,\n          match.unroundedGoalsA,\n          match.unroundedGoalsB,\n        ] = await calculateScore(match, index, divider, true);\n      }\n\n      await getBTTSPotential(\n        match,\n        match.goalsA,\n        match.goalsB,\n        match.directnessRatingHome,\n        match.directnessRatingAway\n      );\n\n      let predictionObject;\n      let Over25PredictionObject;\n      let XGPredictionObject;\n      let pointsDiffObject;\n      let rollingDiffObject;\n      let dangerousAttacksDiffObject;\n\n      if (match.status === \"complete\" && match.prediction) {\n        match.outcomeSymbol =\n          match.predictionOutcome === \"Won\" ? \"\\u2714\" : \"\\u2718\";\n        match.over25PredictionOutcomeSymbol =\n          match.over25PredictionOutcome === \"Won\" ? \"\\u2714\" : \"\\u2718\";\n        match.bttsOutcomeSymbol =\n          match.bttsOutcome === \"bttsWon\" ? \"\\u2714\" : \"\\u2718\";\n      } else {\n        match.outcomeSymbol = \"\";\n        match.over25PredictionOutcomeSymbol = \"\";\n        match.bttsOutcomeSymbol = \"\";\n      }\n\n      //STICK\n\n      if (\n        match.unroundedGoalsA - match.unroundedGoalsB > 0.65 &&\n        match.homeOdds !== 0 &&\n        match.fractionHome !== \"N/A\" &&\n        match.includeInMultis !== false &&\n        match.omit !== true\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.status !== \"notEnoughData\" &&\n          match.homeOdds < 3\n        ) {\n          predictionObject = {\n            team: `${match.homeTeam} to win`,\n            game:\n              match.status === \"complete\"\n                ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n                : match.game,\n            odds: match.fractionHome,\n            rawOdds: match.homeOdds,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            outcome: match.predictionOutcome,\n            outcomeSymbol: match.outcomeSymbol,\n            goalDifferential: parseFloat(\n              await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n            ),\n            experimentalCalc: (\n              (match.unroundedGoalsA - match.unroundedGoalsB) *\n              Math.abs(match.teamComparisonScore)\n            ).toFixed(2),\n            XGdifferentialValue: parseFloat(match.XGdifferentialValue),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formHome.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n\n            if (\n              match.unroundedGoalsA - match.unroundedGoalsB >\n              incrementValue\n            ) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      } else if (\n        match.unroundedGoalsB - match.unroundedGoalsA > 1.75 &&\n        match.awayOdds !== 0 &&\n        match.fractionAway !== \"N/A\" &&\n        match.includeInMultis !== false &&\n        match.omit !== true\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.status !== \"notEnoughData\" &&\n          match.awayOdds < 3.5\n        ) {\n          predictionObject = {\n            team: `${match.awayTeam} to win`,\n            game:\n              match.status === \"complete\"\n                ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n                : match.game,\n            rawOdds: match.awayOdds,\n            odds: match.fractionAway,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            outcome: match.predictionOutcome,\n            outcomeSymbol: match.outcomeSymbol,\n            goalDifferential:\n              parseFloat(\n                await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n              ) - 1,\n            experimentalCalc: (\n              (match.unroundedGoalsB - match.unroundedGoalsA) *\n              Math.abs(match.teamComparisonScore)\n            ).toFixed(2),\n            XGdifferentialValue: parseFloat(match.XGdifferentialValue),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formAway.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n            if (match.unroundedGoalsB - match.unroundedGoalsA > 2) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      }\n\n      if (\n        match.btts === true &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\" &&\n        match.status !== \"notEnoughData\"\n      ) {\n        bttsArray.push(match);\n      }\n      if (\n        match.unroundedGoalsA + match.unroundedGoalsB > 4 &&\n        match.goalsA + match.goalsB > 2 &&\n        match.GoalsInGamesAverageHome > 3 &&\n        match.GoalsInGamesAverageAway > 3\n      ) {\n        Over25PredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: match.homeTeam,\n          decimalOdds: match.homeDoubleChance,\n          rawOdds: match.over25Odds,\n          odds: match.over25Odds,\n          comparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.over25PredictionOutcomeSymbol,\n          doubleChanceOutcome: match.over25PredictionOutcome,\n          goalTotalUnrounded: match.unroundedGoalsA + match.unroundedGoalsB,\n        };\n        Over25Tips.push(Over25PredictionObject);\n      }\n\n      if (\n        match.XGdifferential === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        XGPredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          XGdifferentialValue: match.XGdifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        XGDiffTips.push(XGPredictionObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        XGPredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          XGdifferentialValue: match.XGdifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        XGDiffTips.push(XGPredictionObject);\n      }\n\n      if (\n        match.pointsDifferential === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        pointsDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          pointsDifferentialValue: match.pointsDifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        pointsDiffTips.push(pointsDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        pointsDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          pointsDifferentialValue: match.pointsDifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        pointsDiffTips.push(pointsDiffObject);\n      }\n\n      if (\n        match.rollingGoalDiff === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        rollingDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        rollingDiffTips.push(rollingDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        rollingDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        rollingDiffTips.push(rollingDiffObject);\n      }\n\n      if (\n        match.dangerousAttacksDiff === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        dangerousAttacksDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        dangerousAttacksDiffTips.push(dangerousAttacksDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        dangerousAttacksDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        dangerousAttacksDiffTips.push(dangerousAttacksDiffObject);\n      }\n\n      predictions.push(match);\n    })\n  );\n  ReactDOM.render(\n    <RenderAllFixtures matches={matches} result={true} bool={mock} />,\n    document.getElementById(\"FixtureContainer\")\n  );\n  await getSuccessMeasure(matches);\n  await getMultis();\n  await getNewTips(allTipsSorted);\n\n  // await renderTips();\n}\n\nasync function getMultis() {\n  allTipsSorted = allTips.sort(function (a, b) {\n    return b.goalDifferential - a.goalDifferential;\n  });\n\n  bestBets.sort(function (a, b) {\n    if (a.goalDifferential === b.goalDifferential) {\n      return b.comparisonScore - a.comparisonScore;\n    } else {\n      return b.goalDifferential > a.goalDifferential ? 1 : -1;\n    }\n  });\n\n  bttsArray.sort(function (a, b) {\n    return b.combinedBTTS - a.combinedBTTS;\n  });\n\n  Over25Tips.sort(function (a, b) {\n    return b.goalTotalUnrounded - a.goalTotalUnrounded;\n  });\n\n  XGDiffTips.sort(function (a, b) {\n    return Math.abs(b.XGdifferentialValue) - Math.abs(a.XGdifferentialValue);\n  });\n\n  pointsDiffTips.sort(function (a, b) {\n    return (\n      Math.abs(b.pointsDifferentialValue) - Math.abs(a.pointsDifferentialValue)\n    );\n  });\n\n  rollingDiffTips.sort(function (a, b) {\n    return Math.abs(b.rollingGoalDiffValue) - Math.abs(a.rollingGoalDiffValue);\n  });\n\n  dangerousAttacksDiffTips.sort(function (a, b) {\n    return (\n      Math.abs(b.dangerousAttacksDiffValue) -\n      Math.abs(a.dangerousAttacksDiffValue)\n    );\n  });\n\n  exoticArray = [];\n  gamesInExotic = 0;\n  exoticStake = 0;\n  exoticString = \"\";\n\n  switch (true) {\n    case allTips.length >= 10:\n      for (let i = 0; i < 10; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 10;\n      minimumExotic = 8;\n      exoticStake = 0.1;\n      exoticString = \"45 8-folds, 10 9-folds and 1 10-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 9:\n      for (let i = 0; i < 9; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 9;\n      minimumExotic = 7;\n      exoticStake = 0.1;\n      exoticString = \"36 7-folds, 9 8-folds and 1 9-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 8:\n      for (let i = 0; i < 8; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 8;\n      minimumExotic = 6;\n      exoticStake = 0.1;\n      exoticString = \"28 6-folds, 8 7-folds and 1 8-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 7:\n      for (let i = 0; i < 7; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 7;\n      minimumExotic = 6;\n      exoticStake = 1;\n      exoticString = \"7 6-folds and 1 7-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 6:\n      for (let i = 0; i < 6; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 6;\n      minimumExotic = 5;\n      exoticStake = 1;\n      exoticString = \"6 5-folds and 1 6-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 5:\n      for (let i = 0; i < 5; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 5;\n      minimumExotic = 4;\n      exoticStake = 1;\n      exoticString = \"5 4-folds and 1 5-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case Over25Tips.length >= 4:\n      for (let i = 0; i < 4; i++) {\n        let game = Over25Tips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 4;\n      minimumExotic = 3;\n      exoticStake = 1;\n      exoticString = \"4 3-folds and 1 4-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    default:\n      break;\n  }\n}\n\nexport function getAccumulatorPrice(priceArray) {\n  var result = 1;\n  for (var i = 0; i < priceArray.length; i++)\n    result = result * priceArray[i].rawOdds;\n\n  return result;\n}\n\nexport function getCoverBetMaxReturns(priceArray, minAccSize, stake) {\n  var total = 0;\n  combinations = 0;\n\n  for (var i = minAccSize; i <= priceArray.length; i++) {\n    var perms = getUniquePermutations(priceArray, i);\n    combinations = combinations + perms.length;\n\n    for (var j = 0; j < perms.length; j++)\n      total += getAccumulatorPrice(perms[j]) * stake;\n  }\n  return parseFloat(total.toFixed(2));\n}\n\nfunction getUniquePermutations(arr, permLength) {\n  if (arr.length <= permLength) return [arr];\n\n  var permutations = [];\n  var newArr = [];\n\n  newArr = arr.slice(0);\n\n  for (var i = 0; i < arr.length; i++) {\n    newArr = arr.slice(0);\n    newArr.splice(i, 1);\n    permutations = twoDimArrayUnion(\n      permutations,\n      getUniquePermutations(newArr, permLength)\n    );\n  }\n  return permutations;\n}\n\nfunction twoDimArrayUnion(arr1, arr2) {\n  for (var i = 0; i < arr2.length; i++) {\n    var duplicate = false;\n\n    for (var j = 0; j < arr1.length; j++)\n      if (arr1[j].length === arr2[i].length)\n        for (var k = 0; k < arr1[j].length; k++)\n          if (arr1[j][k] !== arr2[i][k]) break;\n          else if (k === arr1[j].length - 1) duplicate = true;\n\n    if (!duplicate) arr1.push(arr2[i]);\n  }\n\n  return arr1;\n}\n\nfunction NewlineText(props) {\n  const text = props.text;\n  const newText = text.split(\"\\n\").map((str) => <p>{str}</p>);\n\n  return newText;\n}\n\nasync function renderTips() {\n  if (userDetail) {\n    paid = await checkUserPaidStatus(userDetail.uid);\n  } else {\n    paid = false;\n  }\n\n  console.log(paid);\n  if (newArray.length > 0) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <div className=\"BestPredictionsExplainer\">\n                  Add or remove a selection using the buttons below. Predictions\n                  are ordered by confidence in the outcome.\n                </div>\n                {newArray.map((tip) => (\n                  <li key={`${tip.game}acca`}>\n                    <div>\n                      {tip.team}: {tip.odds}{\" \"}\n                      <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                    </div>\n                    <div className=\"TipGame\">{tip.game}</div>\n                  </li>\n                ))}\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  No games fit the criteria\n                </h4>\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  }\n\n  if (exoticArray.length > 4) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Exotic of the day\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  <NewlineText\n                    text={`${gamesInExotic} games: ${exoticString}\\nStake per multi: ${exoticStake} units - ${combinations} combinations\\nTotal stake: ${(\n                      exoticStake * combinations\n                    ).toFixed(2)} unit(s)`}\n                  />\n                  {`Potential winnings: ${price.toFixed(2)} units`}\n                </h4>\n                {exoticArray.map((tip) => (\n                  <li key={tip.team}>\n                    {tip.team}: {tip.odds}{\" \"}\n                    <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                    <div>{tip.game}</div>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Exotic of the day\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  Not enough games for this feature\n                </h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  }\n\n  if (Over25Tips.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Over 2.5 goals tips\"}\n            element={\n              <ul className=\"LongshotPredictions\" id=\"LongshotPredictions\">\n                <h4>Over 2.5 goals</h4>\n                {Over25Tips.map((tip) => (\n                  <li key={tip.team}>\n                    {tip.game} - Odds: {tip.odds}{\" \"}\n                    <span className={`${tip.doubleChanceOutcome}`}>\n                      {tip.outcomeSymbol}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Over 2.5 goals tips\"}\n            element={\n              <ul className=\"LongshotPredictions\" id=\"LongshotPredictions\">\n                <h4>No games fit the criteria</h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  }\n\n  if (bttsArray.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"BTTS games\"}\n            element={\n              <ul className=\"BTTSGames\" id=\"BTTSGames\">\n                <h4>Games with highest chance of BTTS</h4>\n                {bttsArray.map((game) => (\n                  <li key={game.game}>\n                    {`${game.game} odds: ${game.bttsFraction}`}{\" \"}\n                    <span className={game.bttsOutcome}>\n                      {game.bttsOutcomeSymbol}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"BTTS games\"}\n            element={\n              <ul className=\"BTTSGames\" id=\"BTTSGames\">\n                <h4>No games fit the criteria</h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  }\n\n  ReactDOM.render(\n    <div>\n      <Collapsable\n        buttonText={\"XG tips\"}\n        element={\n          <Slider\n            element={\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>Games with greatest XG Differentials</h4>\n                {paid ? (\n                  XGDiffTips.length > 0 ? (\n                    XGDiffTips.map((tip) => (\n                      <li key={tip.game}>\n                        {tip.game} | {tip.prediction} {tip.odds}{\" \"}\n                        <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                      </li>\n                    ))\n                  ) : (\n                    <li key=\"noGames\">\n                      Sorry, no games fit this criteria today\n                    </li>\n                  )\n                ) : (\n                  <li key=\"premiumOnly\">Premium members only</li>\n                )}\n              </ul>\n            }\n            element2={\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>\n                  Games with greatest points per game differentials (last 6)\n                </h4>\n                {paid ? (\n                  pointsDiffTips.length > 0 ? (\n                    pointsDiffTips.map((game) => (\n                      <li key={game.game}>\n                        {game.game} | {game.prediction} {game.odds}{\" \"}\n                        <span className={game.outcome}>\n                          {game.outcomeSymbol}\n                        </span>\n                      </li>\n                    ))\n                  ) : (\n                    <li key=\"noGames\">\n                      Sorry, no games fit this criteria today\n                    </li>\n                  )\n                ) : (\n                  <li key=\"premiumOnly\">Premium members only</li>\n                )}\n              </ul>\n            }\n            element3={\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>\n                  Games with greatest rolling goal difference differentials\n                </h4>\n                {paid ? (\n                  rollingDiffTips.length > 0 ? (\n                    rollingDiffTips.map((game) => (\n                      <li key={game.game}>\n                        {game.game} | {game.prediction} {game.odds}{\" \"}\n                        <span className={game.outcome}>\n                          {game.outcomeSymbol}\n                        </span>\n                      </li>\n                    ))\n                  ) : (\n                    <li key=\"noGames\">\n                      Sorry, no games fit this criteria today\n                    </li>\n                  )\n                ) : (\n                  <li key=\"premiumOnly\">Premium members only</li>\n                )}\n              </ul>\n            }\n            element4={\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>\n                  Games with greatest average dangerous attacks differentials\n                </h4>\n                {paid ? (\n                  dangerousAttacksDiffTips.length > 0 ? (\n                    dangerousAttacksDiffTips.map((game) => (\n                      <li key={game.game}>\n                        {game.game} | {game.prediction} {game.odds}{\" \"}\n                        <span className={game.outcome}>\n                          {game.outcomeSymbol}\n                        </span>\n                      </li>\n                    ))\n                  ) : (\n                    <li key=\"noGames\">\n                      Sorry, no games fit this criteria today\n                    </li>\n                  )\n                ) : (\n                  <li key=\"premiumOnly\">Premium members only</li>\n                )}\n              </ul>\n            }\n          ></Slider>\n        }\n      ></Collapsable>\n      {(minimumGD !== 0 ||\n        minimumXG !== 0 ||\n        minimumLast6 !== 0 ||\n        minimumGDHorA !== 0) && (\n        <div className=\"FiltersSelected\">\n          <h4>Filters selected:</h4>\n          <ul className=\"FiltersSelectedList\">\n            <li>Minimum goal difference spread: {minimumGD}</li>\n            <li>\n              Minimum goal difference spread (home or away only):{\" \"}\n              {minimumGDHorA}\n            </li>\n            <li>Minimum XG difference spread: {minimumXG}</li>\n            <li>Minimum PPG difference spread: {minimumLast6}</li>\n            <li>\n              Odds range: {rangeValue[0]} - {rangeValue[1]}\n            </li>\n          </ul>\n        </div>\n      )}\n    </div>,\n    document.getElementById(\"insights\")\n  );\n\n  ReactDOM.render(\n    <Fragment>\n      <Collapsable\n        buttonText={\"Extras\"}\n        element={\n          <div>\n            <button\n              className=\"SecondaryButtons\"\n              onClick={() => {\n                window.open(\"https://www.xgtipping.com/#/bttsteams\");\n              }}\n            >\n              Both teams to score teams\n            </button>\n            <button\n              className=\"SecondaryButtons\"\n              onClick={() => {\n                window.open(\"https://www.xgtipping.com/#/bttsfixtures\");\n              }}\n              disabled={!paid}\n            >\n              Both teams to score fixtures\n            </button>\n            <button\n              className=\"SecondaryButtons\"\n              onClick={() => {\n                if (paid)\n                  window.open(\"https://www.xgtipping.com/#/fixtureshigh\");\n              }}\n              disabled={!paid}\n            >\n              Over 2.5 goals fixtures\n            </button>\n            <button\n              className=\"SecondaryButtons\"\n              onClick={() => {\n                if (paid) window.open(\"https://www.xgtipping.com/#/o25\");\n              }}\n              disabled={!paid}\n            >\n              Highest scoring leagues\n            </button>\n            <button\n              className=\"SecondaryButtons\"\n              onClick={() => {\n                if (paid) window.open(\"https://www.xgtipping.com/#/u25\");\n              }}\n              disabled={!paid}\n            >\n              Lowest scoring leagues\n            </button>\n            <button\n              className=\"SecondaryButtons\"\n              onClick={() => {\n                if (paid) window.open(\"https://www.xgtipping.com/#/teamshigh\");\n              }}\n              disabled={!paid}\n            >\n              Highest scoring teams\n            </button>\n          </div>\n        }\n      />\n    </Fragment>,\n    document.getElementById(\"highLowLeagues\")\n  );\n}\n","import React, { useState, useEffect } from 'react';\n\nconst TeamOfTheSeason = () => {\n  const [roundId, setRoundId] = useState(null);\n  const seasonId = 61627; // Update this dynamically if needed\n  const baseUrl = \"https://widgets.sofascore.com/embed/unique-tournament/17\";\n\n  useEffect(() => {\n    const fetchRoundId = async () => {\n      try {\n        \n        // Fetch rounds data to get the correct round ID\n        const roundsResponse = await fetch(\n          `https://www.sofascore.com/api/v1/unique-tournament/17/season/${seasonId}/team-of-the-week/rounds`\n        );\n        const roundsData = await roundsResponse.json();\n\n        // Get the round ID from the first round in the data\n        if (roundsData.rounds?.length > 0) {\n          const firstRoundId = roundsData.rounds[0]?.id; // Grabbing the id from index 0\n          setRoundId(firstRoundId); // Set the roundId state\n        } else {\n          console.error(\"No rounds data found.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching SofaScore API:\", error);\n      }\n    };\n\n    fetchRoundId();\n  }, [seasonId]);\n\n  return (\n    <div className='TeamOfTheSeason'>\n      {roundId ? (\n        <iframe\n          width=\"100%\"\n          height=\"523\"\n          // style={{ display: 'block', maxWidth: '700px' }}\n          src={`${baseUrl}/season/${seasonId}/round/${roundId}/teamOfTheWeek?widgetBackground=Gray&showCompetitionLogo=true&widgetTitle=Premier%20League&v=2`}\n          frameBorder=\"0\"\n          scrolling=\"no\"\n          title=\"SofaScore Team of the Week\"\n        ></iframe>\n      ) : (\n        <p>Loading Team of the Week...</p>\n      )}\n      <div style={{ fontSize: '12px', fontFamily: 'Arial, sans-serif', textAlign: 'left' }}>\n        <a target=\"_blank\" href=\"https://www.sofascore.com/\" rel=\"noreferrer\">\n          Team of the Week provided by SofaScore\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default TeamOfTheSeason;\n","import React, { useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport TeamOfTheWeek from \"../components/TeamOfTheWeek\";\nimport TeamOfTheSeason from \"../components/TeamOfTheSeason\";\n\nexport var toggleState = false;\nexport var setIsOff = false;\n\nconst upArrow = \"\\u{25B2}\";\n\nconst StyledTableCell2 = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"rgba(226, 226, 226, 1)\",\n    color: \"white\",\n    padding: \"0.35em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    textAlign: \"left\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    fontSize: \"1.9em\",\n    textAlign: \"left\",\n    fontFamily: \"inherit\",\n    padding: \"0.5em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"#030061\",\n  },\n}))(TableCell);\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"white\",\n    color: \"#030061\",\n    padding: \"0.5em\",\n    paddingTop: \"1em\",\n    paddingBottom: \"1em\",\n    textAlign: \"center\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    // backgroundColor: \"#030061\",\n    fontSize: \"1.9em\",\n    textAlign: \"center\",\n    fontFamily: \"inherit\",\n    padding: \"0.35em\",\n    paddingTop: \"1em\",\n    paddingBottom: \"1em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"#030061\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#rgba(226, 226, 226, 0.424)\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#rgba(226, 226, 226, 1)\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\nfunction styleForm(formIndicator) {\n  let className;\n  if (formIndicator === \"W\") {\n    className = \"winLeague\";\n  } else if (formIndicator === \"D\") {\n    className = \"drawLeague\";\n  } else if (formIndicator === \"L\") {\n    className = \"lossLeague\";\n  }\n  return className;\n}\n\nexport default function LeagueTable(props) {\n  [toggleState, setIsOff] = useState(false);\n  console.log(props)\n\n  let rows = props.Teams.map((team, i) => (\n    <StyledTableRow key={`${props.Key}row${i}`}>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${i + 1}`}\n      </StyledTableCell>\n      <StyledTableCell2 component=\"th\" scope=\"row\" style={{ width: \"15em\" }}>\n        {`${team.Name}`}\n      </StyledTableCell2>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Played}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Wins}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Draws}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Losses}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.For}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Against}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.GoalDifference}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Points}`}\n      </StyledTableCell>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ textAlign: \"center\" }}\n      >\n        <span className={styleForm(team.Form[0])}>\n          {team.Form[0] !== undefined ? team.Form[0] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[1])}>\n          {team.Form[1] !== undefined ? team.Form[1] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[2])}>\n          {team.Form[2] !== undefined ? team.Form[2] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[3])}>\n          {team.Form[3] !== undefined ? team.Form[3] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[4])}>\n          {team.Form[4] !== undefined ? team.Form[4] : \"\"}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  ));\n\n  const leagueResults = [];\n  let singleResult;\n  if (props.Results) {\n    props.Results.forEach((result) => {\n      singleResult = (\n        <div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_xg}</span>\n            <span className=\"column\">XG</span>\n            <span className=\"column\">{result.team_b_xg}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shots}</span>\n            <span className=\"column\">Shots</span>\n            <span className=\"column\">{result.team_b_shots}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shotsOnTarget}</span>\n            <span className=\"column\">SOT</span>\n            <span className=\"column\">{result.team_b_shotsOnTarget}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_dangerous_attacks}</span>\n            <span className=\"column\">Dangerous Attacks</span>\n            <span className=\"column\">{result.team_b_dangerous_attacks}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_possession}%</span>\n            <span className=\"column\">Possession</span>\n            <span className=\"column\">{result.team_b_possession}%</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_red_cards}</span>\n            <span className=\"column\">Red cards</span>\n            <span className=\"column\">{result.team_b_red_cards}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.odds_ft_1}</span>\n            <span className=\"column\">Odds (pre-match)</span>\n            <span className=\"column\">{result.odds_ft_2}</span>\n          </div>\n        </div>\n      );\n\n      leagueResults.push(\n        <Collapsable\n          classNameButton=\"ResultButton\"\n          buttonText={\n            <div className=\"ResultRowOverview\">\n              <div className=\"columnOverviewHome\">{result.home_name}</div>\n              <span className=\"columnOverviewScore\">\n                {result.homeGoalCount} : {result.awayGoalCount}\n              </span>\n              <div className=\"columnOverviewAway\">{result.away_name}</div>\n            </div>\n          }\n          element={singleResult}\n        />\n      );\n    });\n  }\n\n  const leagueResultsOlder = [];\n  if (props.LastWeeksResults) {\n    props.LastWeeksResults.forEach((result) => {\n      singleResult = (\n        <div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_xg}</span>\n            <span className=\"column\">XG</span>\n            <span className=\"column\">{result.team_b_xg}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shots}</span>\n            <span className=\"column\">Shots</span>\n            <span className=\"column\">{result.team_b_shots}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shotsOnTarget}</span>\n            <span className=\"column\">SOT</span>\n            <span className=\"column\">{result.team_b_shotsOnTarget}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_dangerous_attacks}</span>\n            <span className=\"column\">Dangerous Attacks</span>\n            <span className=\"column\">{result.team_b_dangerous_attacks}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_possession}</span>\n            <span className=\"column\">Possession</span>\n            <span className=\"column\">{result.team_b_possession}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_red_cards}</span>\n            <span className=\"column\">Red cards</span>\n            <span className=\"column\">{result.team_b_red_cards}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.odds_ft_1}</span>\n            <span className=\"column\">Odds (pre-match)</span>\n            <span className=\"column\">{result.odds_ft_2}</span>\n          </div>\n        </div>\n      );\n\n      leagueResultsOlder.push(\n        <Collapsable\n          classNameButton=\"ResultButton\"\n          buttonText={\n            <div className=\"ResultRowOverview\">\n              <div className=\"columnOverviewHome\">{result.home_name}</div>\n              <span className=\"columnOverviewScore\">\n                {result.homeGoalCount} : {result.awayGoalCount}\n              </span>\n              <div className=\"columnOverviewAway\">{result.away_name}</div>\n            </div>\n          }\n          element={singleResult}\n        />\n      );\n    });\n  }\n\n  function getTopScorersTeam(id) {\n    let found = props.Teams.find((team) => team.ID === id);\n    return found.Name;\n  }\n\n  async function sorted(league, value, order) {\n    let sortedByForm;\n    if (order === \"desc\") {\n      sortedByForm = league.sort((a, b) => b[value] - a[value]);\n    } else {\n      sortedByForm = league.sort((a, b) => a[value] - b[value]);\n    }\n    setIsOff(!toggleState);\n    return sortedByForm;\n  }\n\n  if (\n    // props.GamesPlayed > 3 &&\n    props.Teams[0].LeagueID !== 13973 && //MLS\n    props.Teams[0].LeagueID !== 12933 &&//UKNorth&South\n    props.Teams[0].LeagueID !== 12327 && //Europa\n    props.Teams[0].LeagueID !== 12321 //ChampionsLeague\n\n  ) {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table\n            className=\"Table\"\n            aria-label=\"customized table\"\n            key={props.Key}\n            style={{ marginTop: \"2em\", marginBottom: \"1em\" }}\n          >\n            <TableHead>\n              <TableRow>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"Points\", \"desc\")}\n                  >\n                    Pts {upArrow}\n                  </button>\n                </td>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"LastXPoints\", \"desc\")}\n                  >\n                    Last 5 {upArrow}\n                  </button>\n                </td>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n          <h5>{`Results from last 2 weeks`}</h5>\n          <div className=\"ResultsList\" id=\"ResultsList\">\n            <ul>{leagueResults}</ul>\n          </div>\n          {props.Teams[0].LeagueID === 12325 && <TeamOfTheSeason />} {/* Conditional render */}\n          <div className=\"LeagueStatisticsHeader\">League Statistics</div>\n          <div className=\"LeagueStatistics\">\n          <ul className=\"LeagueStatsColumn\">\n              <li>Average home goals: {props.Stats.seasonAVG_home}</li>\n              <li>Average away goals: {props.Stats.seasonAVG_away}</li>\n              <li>BTTS: {props.Stats.seasonBTTSPercentage}%</li>\n              <li>\n                Over 0.5 goals: {props.Stats.seasonOver05Percentage_overall}%\n              </li>\n              <li>\n                Over 1.5 goals: {props.Stats.seasonOver15Percentage_overall}%\n              </li>\n              <li>\n                Over 2.5 goals: {props.Stats.seasonOver25Percentage_overall}%\n              </li>\n              <li>\n                Over 3.5 goals: {props.Stats.seasonOver35Percentage_overall}%\n              </li>\n              <li>\n                Over 4.5 goals: {props.Stats.seasonOver45Percentage_overall}%\n              </li>\n            </ul>\n            <ul className=\"LeagueStatsColumn\">\n              <li>\n                Over 7.5 corners: {props.Stats.over75CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 8.5 corners: {props.Stats.over85CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 9.5 corners: {props.Stats.over95CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 10.5 corners:{\" \"}\n                {props.Stats.over105CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 11.5 corners:{\" \"}\n                {props.Stats.over115CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 12.5 corners:{\" \"}\n                {props.Stats.over125CornersPercentage_overall}%\n              </li>\n              <li>Corners average: {props.Stats.cornersAVG_overall}</li>\n              <li>Cards average: {props.Stats.cardsAVG_overall}</li>\n            </ul>\n            <ul className=\"TopScorersColumn\">\n              <h4>Top scorers</h4>\n              <li>\n                {props.Stats.top_scorers[0].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[0].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[0].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[1].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[1].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[1].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[2].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[2].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[2].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[3].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[3].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[3].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[4].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[4].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[4].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[5].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[5].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[5].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[6].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[6].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[6].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[7].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[7].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[7].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[8].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[8].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[8].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[9].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[9].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[9].goals_overall}\n              </li>\n            </ul>\n          </div>\n        </TableContainer>\n      );\n    }\n  } else if (props.Teams[0].LeagueID === 4340) {\n    return null;\n  } else if (\n    props.Teams[0].LeagueID === 13973 && //MLS\n    props.Teams[0].LeagueID === 12933 &&//UKNorth&South\n    props.Teams[0].LeagueID === 12327 && //Europa\n    props.Teams[0].LeagueID === 12321 //ChampionsLeague\n  ) {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <div className=\"LeagueStatisticsHeader\">League Statistics</div>\n          {/* <TeamOfTheWeek></TeamOfTheWeek>\n          <TeamOfTheSeason></TeamOfTheSeason> */}\n          <div className=\"LeagueStatistics\">\n            <ul className=\"LeagueStatsColumn\">\n              <li>Average home goals: {props.Stats.seasonAVG_home}</li>\n              <li>Average away goals: {props.Stats.seasonAVG_away}</li>\n              <li>BTTS: {props.Stats.seasonBTTSPercentage}%</li>\n              <li>\n                Over 0.5 goals: {props.Stats.seasonOver05Percentage_overall}%\n              </li>\n              <li>\n                Over 1.5 goals: {props.Stats.seasonOver15Percentage_overall}%\n              </li>\n              <li>\n                Over 2.5 goals: {props.Stats.seasonOver25Percentage_overall}%\n              </li>\n              <li>\n                Over 3.5 goals: {props.Stats.seasonOver35Percentage_overall}%\n              </li>\n              <li>\n                Over 4.5 goals: {props.Stats.seasonOver45Percentage_overall}%\n              </li>\n            </ul>\n            <ul className=\"LeagueStatsColumn\">\n              <li>\n                Over 7.5 corners: {props.Stats.over75CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 8.5 corners: {props.Stats.over85CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 9.5 corners: {props.Stats.over95CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 10.5 corners:{\" \"}\n                {props.Stats.over105CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 11.5 corners:{\" \"}\n                {props.Stats.over115CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 12.5 corners:{\" \"}\n                {props.Stats.over125CornersPercentage_overall}%\n              </li>\n              <li>Corners average: {props.Stats.cornersAVG_overall}</li>\n              <li>Cards average: {props.Stats.cardsAVG_overall}</li>\n            </ul>\n            <ul className=\"TopScorersColumn\">\n              <h4>Top scorers</h4>\n              <li>\n                {props.Stats.top_scorers[0].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[0].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[0].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[1].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[1].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[1].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[2].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[2].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[2].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[3].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[3].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[3].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[4].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[4].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[4].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[5].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[5].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[5].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[6].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[6].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[6].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[7].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[7].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[7].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[8].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[8].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[8].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[9].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[9].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[9].goals_overall}\n              </li>\n            </ul>\n          </div>\n        </TableContainer>\n      );\n    }\n  }\n}\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { orderedLeagues } from \"../App\";\nimport { getForm } from \"./getForm\";\nimport { Fixture } from \"../components/Fixture\";\nimport { Button } from \"../components/Button\";\nimport { Slide } from \"../components/Slider\";\nimport { getScorePrediction } from \"../logic/getScorePredictions\";\nimport { ThreeDots } from \"react-loading-icons\";\nimport { selectedOdds } from \"../components/OddsRadio\";\nimport LeagueTable from \"../components/LeagueTable\";\nimport { getPointsFromLastX } from \"../logic/getScorePredictions\";\nimport SlideDiff from \"../components/SliderDiff\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { userDetail } from \"./authProvider\";\n\n\nvar oddslib = require(\"oddslib\");\n\n// require(\"dotenv\").config();\n\nvar fixtureResponse;\nvar fixtureArray = [];\nexport var matches = [];\nexport var resultedMatches = [];\nexport let arrayOfGames = [];\n\nvar league;\nvar leagueID;\nvar leagueGames = [];\nexport var leagueArray = [];\nvar leagueIdArray = [];\nexport var leagueStatsArray = [];\nexport let leagueInstance;\nexport let groupInstance;\nexport let allLeagueResultsArrayOfObjects = [];\nvar lastThreeFormHome;\nvar lastThreeFormAway;\nvar lastFiveFormHome;\nvar lastFiveFormAway;\nvar lastSixFormHome;\nvar lastSixFormAway;\nvar lastTenFormHome;\nvar lastTenFormAway;\nvar leagueOrAll;\nvar formRunHome;\nvar formRunAway;\nlet WDLinLeagueHome;\nlet WDLinLeagueAway;\nlet HomeAverageGoals;\nlet homeAverageGoals;\nlet HomeAverageConceded;\nlet homeAverageConceded;\nlet AwayAverageGoals;\nlet awayAverageGoals;\nlet AwayAverageConceded;\nlet awayAverageConceded;\nlet paid = false;\n\n// export var [currentDay, month, year] = new Date()\n//   .toLocaleDateString(\"en-US\", { timeZone: \"Europe/London\" })\n//   .split(\"/\");\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nexport let allForm = [];\nexport let tableArray = [];\nexport let worldCupArray = [];\ngroupInstance = [];\nleagueInstance = [];\n\nasync function convertTimestamp(timestamp) {\n  let newDate = new Date(timestamp);\n  let [day, month, year] = newDate.toLocaleDateString(\"en-US\").split(\"/\");\n\n  let converted = `${year}-${day}-${month}`;\n\n  return converted;\n}\n\n\nexport async function generateTables(a, leagueIdArray, allResults) {\n  // leagueIdArray = [];\n  tableArray = [];\n  worldCupArray = [];\n  let i = 0;\n  leagueArray.forEach(function (league) {\n    let currentLeagueId = leagueIdArray[i];\n    i++;\n    leagueInstance = [];\n    //Skip MLS which has a weird format\n    if (\n      !league.data.specific_tables[0].groups &&\n      currentLeagueId !== 6969 &&\n      league.data.specific_tables[0].table\n    ) {\n      for (\n        let index = 0;\n        index < league.data.specific_tables[0].table.length;\n        index++\n      ) {\n        let currentTeam = league.data.specific_tables[0].table[index];\n        let last5;\n        if (currentTeam.wdl_record.length < 5) {\n          last5 = currentTeam.wdl_record\n            .slice(`-${currentTeam.wdl_record.length}`)\n            .toUpperCase();\n        } else {\n          last5 = currentTeam.wdl_record.slice(-5).toUpperCase();\n        }\n\n        const team = {\n          LeagueID: currentLeagueId,\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          ID: currentTeam.id,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: last5,\n          LastXPoints: getPointsFromLastX(last5.split(\"\")),\n          Points: currentTeam.points,\n          wdl: currentTeam.wdl_record,\n          seasonGoals: currentTeam.seasonGoals,\n          seasonConceded: currentTeam.seasonConceded,\n        };\n        leagueInstance.push(team);\n      }\n      tableArray.push({ id: currentLeagueId, table: leagueInstance });\n    } else if (currentLeagueId === 11084) {\n      // for (let x = 0; x < league.data.specific_tables[0].groups.length; x++) {\n      // for (\n      //   let index = 0;\n      //   index < league.data.specific_tables[0].groups[x].table.length;\n      //   index++\n      // )\n      league.data.specific_tables[0].groups.forEach((group) => {\n        leagueInstance = [];\n        for (let index = 0; index < group.table.length; index++) {\n          let currentTeam = group.table[index];\n          let last5 = \"N/A\";\n          const team = {\n            LeagueID: currentLeagueId,\n            Position: index + 1,\n            Name: currentTeam.cleanName,\n            ID: currentTeam.id,\n            Played: currentTeam.matchesPlayed,\n            Wins: currentTeam.seasonWins_overall,\n            Draws: currentTeam.seasonDraws_overall,\n            Losses: currentTeam.seasonLosses_overall,\n            For: currentTeam.seasonGoals,\n            Against:\n              currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n            GoalDifference: currentTeam.seasonGoalDifference,\n            Form: last5,\n            LastXPoints: getPointsFromLastX(last5.split(\"\")),\n            Points: currentTeam.points,\n            wdl: currentTeam.wdl_record,\n            seasonGoals: currentTeam.seasonGoals,\n            seasonConceded: currentTeam.seasonConceded,\n          };\n          leagueInstance.push(team);\n        }\n        worldCupArray.push({\n          group: group.name,\n          table: leagueInstance,\n        });\n      });\n    } else if (league.data.league_table === null) {\n      for (\n        let index = 0;\n        index < league.data.all_matches_table_overall.length;\n        index++\n      ) {\n        let currentTeam = league.data.all_matches_table_overall[index];\n        let last5 = \"N/A\";\n        const team = {\n          LeagueID: currentLeagueId,\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          ID: currentTeam.id,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: last5,\n          LastXPoints: getPointsFromLastX(last5.split(\"\")),\n          Points: currentTeam.points,\n          wdl: currentTeam.wdl_record,\n          seasonGoals: currentTeam.seasonGoals,\n          seasonConceded: currentTeam.seasonConceded,\n        };\n        leagueInstance.push(team);\n      }\n\n      tableArray.push({ id: currentLeagueId, table: leagueInstance });\n    }\n  });\n}\n\nexport async function renderTable(index, results, id) {\n  let league;\n  //World cup table rendering\n\n  // let mostRecentGame = results.fixtures.pop();\n  console.log(results.fixtures)\n  const nowInSeconds = Math.floor(Date.now() / 1000); // Current time in seconds\n  const twoWeeksAgo = nowInSeconds - 14 * 24 * 60 * 60; // Two week ago in seconds  console.log(oneWeekAgo)\n  // 1740576517073\n  // 1723230000\n  let mostRecentGames = results.fixtures.filter(result => result.date_unix >= twoWeeksAgo);\n\n  // let mostRecentGameweek = \"Latest\";\n\n  // const gameweeksResults = results.fixtures.filter(\n  //   (games) => games.game_week === mostRecentGame.game_week\n  // );\n\n  // const lastGameweeksResults = results.fixtures.filter(\n  //   (games) => games.game_week === mostRecentGameweek - 1\n  // );\n\n  const leagueTable = tableArray.filter((table) => table.id === id);\n\n  league = leagueTable[0].table;\n\n  let statistics;\n  let leagueStatistics = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}leagueStats/${id}`\n  );\n  await leagueStatistics.json().then((stats) => {\n    statistics = stats.data;\n  });\n\n\n  if (league !== undefined) {\n    ReactDOM.render(\n      <LeagueTable\n        Teams={league}\n        Stats={statistics}\n        Key={`League${index}`}\n        GamesPlayed={statistics.game_week}\n        Results={mostRecentGames}\n        // mostRecentGameweek={mostRecentGameweek}\n      />,\n      document.getElementById(`leagueName${id}`)\n    );\n  }\n}\n\nasync function createFixture(match, result, mockBool) {\n  let roundedHomeOdds;\n  let roundedAwayOdds;\n  let roundedBTTSOdds;\n  let homeFraction;\n  let awayFraction;\n  let bttsFraction;\n\n  if (selectedOdds === \"Fractional odds\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      roundedHomeOdds = (Math.round(match.homeOdds * 5) / 5).toFixed(1);\n      roundedAwayOdds = (Math.round(match.awayOdds * 5) / 5).toFixed(1);\n\n      if (roundedHomeOdds < 1.1) {\n        roundedHomeOdds = 1.1;\n      }\n      if (roundedAwayOdds < 1.1) {\n        roundedAwayOdds = 1.1;\n      }\n\n      if (match.homeOdds === 0.1 && match.awayOdds === 0.1) {\n        match.homeOdds = 3;\n        roundedHomeOdds = 3;\n        match.awayOdds = 3;\n        roundedAwayOdds = 3;\n      }\n\n      try {\n        homeFraction = oddslib\n          .from(\"decimal\", roundedHomeOdds)\n          .to(\"fractional\", { precision: 1 });\n        awayFraction = oddslib\n          .from(\"decimal\", roundedAwayOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      roundedBTTSOdds = (Math.round(match.bttsOdds * 5) / 5).toFixed(1);\n\n      if (roundedBTTSOdds < 1.1) {\n        roundedBTTSOdds = 1.1;\n      }\n\n      try {\n        bttsFraction = oddslib\n          .from(\"decimal\", roundedBTTSOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  } else if (selectedOdds === \"Decimal odds\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      homeFraction = match.homeOdds;\n      awayFraction = match.awayOdds;\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      bttsFraction = match.bttsOdds;\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  }\n\n  match.omit = false;\n  match.homeTeamWinsPercentage = match.homeTeamWinPercentage;\n  match.homeTeamLossesPercentage = match.homeTeamLossPercentage;\n  match.homeTeamDrawsPercentage = match.homeTeamDrawPercentage;\n\n  match.awayTeamWinsPercentage = match.awayTeamWinPercentage;\n  match.awayTeamLossesPercentage = match.awayTeamLossPercentage;\n  match.awayTeamDrawsPercentage = match.awayTeamDrawPercentage;\n  match.fractionHome = homeFraction;\n  match.fractionAway = awayFraction;\n\n  match.bttsFraction = bttsFraction;\n\n  match.game = match.homeTeam + \" v \" + match.awayTeam;\n\n  // ReactDOM.render(\n  //   <Fixture\n  //     fixtures={matches}\n  //     result={result}\n  //     mock={mockBool}\n  //     className={\"individualFixture\"}\n  //   />,\n  //   document.getElementById(\"FixtureContainer\")\n  // );\n}\n\nexport function RenderAllFixtures(props) {\n  let matches;\n  let capped = false;\n  let paid = false;\n  if(userDetail){\n    paid = userDetail.isPaid\n  }\n  const originalLength = props.matches.length\n  if(paid === true){\n    matches = props.matches\n  } else {\n    if(originalLength > 15){\n      matches = props.matches.slice(0,15)\n      capped = true;\n    } else {\n      matches = props.matches\n    }\n  }\n  console.log(paid)\n\n  return (\n    <Fixture\n      fixtures={matches}\n      result={props.result}\n      mock={false}\n      className={\"individualFixture\"}\n      paid={paid}\n      capped={capped}\n      originalLength={originalLength}\n    />\n  );\n}\n//     document.getElementById(\"FixtureContainer\")\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nlet isFunctionRunning = false;\n\nexport async function generateFixtures(\n  day,\n  date,\n  selectedOdds,\n  footyStatsFormattedDate,\n  current,\n  todaysDate,\n  dateSS\n) {\n  if (!isFunctionRunning) {\n    isFunctionRunning = true;\n    // const randomInt = Math.random() * 10\n\n    // if(randomInt >= 7){\n    //   alert(\"XGTipping is now serving over 2000 users a month,1 relying on donations to cover increasing running costs. If you can afford to do so and like what we do, please, help us stay subscription fee today by tapping to Donation button at the bottom of the page\")\n    // }\n\n    ReactDOM.render(\n      <div>\n        <div className=\"LoadingText\">\n          Loading all league, fixture & form data, please be patient...\n        </div>\n        <ThreeDots height=\"3em\" fill=\"#030061\" />\n      </div>,\n      document.getElementById(\"Loading\")\n    );\n\n    //cleanup if different day is selected\n    ReactDOM.render(\n      <div></div>,\n      document.getElementById(\"GeneratePredictions\")\n    );\n    ReactDOM.render(<div></div>, document.getElementById(\"successMeasure2\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"bestPredictions\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"exoticOfTheDay\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"insights\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"longShots\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"BTTS\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"draws\"));\n\n    const url = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${footyStatsFormattedDate}`;\n    const formUrl = `${process.env.REACT_APP_EXPRESS_SERVER}form/${date}`;\n\n    matches = [];\n    fixtureArray = [];\n\n    league = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${todaysDate}`\n    );\n\n    ReactDOM.render(<div></div>, document.getElementById(\"FixtureContainer\"));\n\n    fixtureResponse = await fetch(url);\n\n    await fixtureResponse.json().then((fixtures) => {\n      fixtureArray = Array.from(fixtures.data);\n    });\n\n    let form;\n    let formArray = [];\n    allForm = [];\n    var isFormStored;\n    var isStoredLocally;\n    var leaguesStored = false;\n    let storedForm = await fetch(formUrl);\n    if (storedForm.status === 201 || storedForm.status === 200) {\n      await storedForm.json().then((form) => {\n        formArray = Array.from(form.allForm);\n        isFormStored = true;\n        isStoredLocally = true;\n        allForm = formArray;\n      });\n    } else {\n      isFormStored = false;\n      isStoredLocally = false;\n    }\n\n    leagueIdArray = [];\n    for (let i = 0; i < orderedLeagues.length; i++) {\n      leagueID = orderedLeagues[i].element.id;\n      leagueIdArray.push(leagueID);\n    }\n\n    var leaguePositions = [];\n    leagueArray = [];\n\n    let allLeagueResults;\n\n    allLeagueResults = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}results`\n    );\n\n    if(league.status === 200){\n      leaguesStored = true;\n      console.log(\"leagues fetched from s3\")\n    }\n\n    if (league.status === 200 && allLeagueResults.status === 201) {\n      console.log(\"Not fetching leagues\");\n      await league.json().then((leagues) => {\n        leagueArray = Array.from(leagues.leagueArray);\n      });\n      updateResults(false);\n\n      await allLeagueResults.json().then((allGames) => {\n        allLeagueResultsArrayOfObjects = Array.from(allGames);\n      });\n\n      leaguesStored = true;\n      generateTables(\n        leagueArray,\n        leagueIdArray,\n        allLeagueResultsArrayOfObjects\n      );\n      arrayOfGames = []\n\n      const sofaScore = await fetch(`https://www.sofascore.com/api/v1/sport/football/scheduled-events/${dateSS}`)\n      await sofaScore.json().then((games) => {\n        games.events.forEach((game) => {\n          arrayOfGames.push({\n            homeTeam: game.homeTeam.name,\n            awayTeam: game.awayTeam.name,\n            id: game.id,\n            time: game.startTimestamp,\n            homeGoals: game.homeScore.display != undefined ? game.homeScore.display : \"-\",\n            awayGoals: game.awayScore.display != undefined ? game.awayScore.display : \"-\"\n          })\n        })\n      })\n\n      const sofaScoreLeagues = await fetch('')\n    } else {\n      allLeagueResultsArrayOfObjects = [];\n      console.log(\"Fetching leagues\");\n      for (let i = 0; i < orderedLeagues.length; i++) {\n        league = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}tables/${orderedLeagues[i].element.id}/${todaysDate}`\n        );\n        // eslint-disable-next-line no-loop-func\n        await league.json().then((table) => {\n          leagueArray.push(table);\n        });\n        leaguesStored = false;\n      }\n\n      //set variable for date X amount of days in the past and use that to filter the results\n\n      let startDate = (new Date().getTime() / 1000).toFixed(0);\n      // deduct 3 months\n      let targetDate = startDate - 23778463;\n\n      for (const orderedLeague of orderedLeagues) {\n        let fixtures = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${orderedLeague.element.id}`\n        );\n\n        let games = await fixtures.json();\n        let gamesFiltered;\n        let gamesShortened;\n        if (games.pager.current_page < games.pager.max_page) {\n          const page2 = await fetch(\n            `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${orderedLeague.element.id}&page=2`\n          );\n          let page2Data = await page2.json();\n\n          const gamesConcat = games.data.concat(page2Data.data);\n          const gamesConcatFiltered = gamesConcat.filter((game) => game.status === \"complete\");\n\n          let mostRecentResults = gamesConcatFiltered.filter(\n            (game) => game.date_unix > targetDate\n          );\n          let sorted = mostRecentResults.sort((a, b) => a.date_unix - b.date_unix);\n          gamesShortened = sorted.slice(-600);\n          gamesFiltered = gamesShortened;\n        } else {\n\n          gamesFiltered = games.data.filter(\n            (game) => game.status === \"complete\"\n          );\n\n          if (current) {\n            let mostRecentResults = gamesFiltered.filter(\n              (game) => game.date_unix > targetDate\n            );\n            gamesFiltered = mostRecentResults.slice(-600);\n          }\n        }\n\n        // let mostRecentResults = gamesFiltered.filter(\n        //   (game) => game.date_unix > targetDate\n        // );\n\n        const shortenedResults = gamesFiltered.map(\n          ({\n            home_name,\n            away_name,\n            homeGoalCount,\n            awayGoalCount,\n            home_ppg,\n            away_ppg,\n            date_unix,\n            team_a_xg,\n            team_b_xg,\n            odds_ft_1,\n            odds_ft_2,\n            team_a_shots,\n            team_b_shots,\n            team_a_corners,\n            team_b_corners,\n            team_a_shotsOnTarget,\n            team_b_shotsOnTarget,\n            team_a_red_cards,\n            team_b_red_cards,\n            team_a_possession,\n            team_b_possession,\n            team_a_dangerous_attacks,\n            team_b_dangerous_attacks,\n            pre_match_teamA_overall_ppg,\n            pre_match_teamB_overall_ppg,\n            game_week,\n          }) => ({\n            home_name,\n            away_name,\n            homeGoalCount,\n            awayGoalCount,\n            home_ppg,\n            away_ppg,\n            date_unix,\n            team_a_xg,\n            team_b_xg,\n            odds_ft_1,\n            odds_ft_2,\n            team_a_shots,\n            team_b_shots,\n            team_a_corners,\n            team_b_corners,\n            team_a_shotsOnTarget,\n            team_b_shotsOnTarget,\n            team_a_red_cards,\n            team_b_red_cards,\n            team_a_possession,\n            team_b_possession,\n            team_a_dangerous_attacks,\n            team_b_dangerous_attacks,\n            pre_match_teamA_overall_ppg,\n            pre_match_teamB_overall_ppg,\n            game_week,\n          })\n        );\n\n        let leagueObj = {\n          // leagueObject[orderedLeague] = {\n          name: orderedLeague.name,\n          id: orderedLeague.element.id,\n          fixtures: shortenedResults,\n        };\n\n        allLeagueResultsArrayOfObjects.push(leagueObj);\n      }\n      updateResults(true);\n      generateTables(\n        leagueArray,\n        leagueIdArray,\n        allLeagueResultsArrayOfObjects\n      );\n    }\n\n    let teamPositionPrefix;\n\n    async function getPrefix(position) {\n      switch (position) {\n        case 1:\n        case 21:\n        case 31:\n        case 41:\n          teamPositionPrefix = \"st\";\n          break;\n        case 2:\n        case 22:\n        case 32:\n        case 42:\n          teamPositionPrefix = \"nd\";\n          break;\n        case 3:\n        case 23:\n        case 33:\n        case 43:\n          teamPositionPrefix = \"rd\";\n          break;\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18:\n        case 19:\n        case 20:\n        case 24:\n        case 25:\n        case 26:\n        case 27:\n        case 28:\n        case 29:\n        case 30:\n        case 34:\n        case 35:\n        case 36:\n        case 37:\n        case 38:\n        case 39:\n        case 40:\n        case 44:\n        case 45:\n        case 46:\n        case 47:\n        case 48:\n          teamPositionPrefix = \"th\";\n          break;\n        default:\n          break;\n      }\n      return teamPositionPrefix;\n    }\n\n    for (let i = 0; i < leagueArray.length; i++) {\n      let leagueInstance;\n      let homeLeague;\n      let awayLeague;\n\n      if (leagueArray[i].data.league_table !== null) {\n        leagueInstance = leagueArray[i].data.league_table;\n        homeLeague = leagueArray[i].data.all_matches_table_home;\n        awayLeague = leagueArray[i].data.all_matches_table_away;\n      } else {\n        leagueInstance = leagueArray[i].data.all_matches_table_overall;\n        homeLeague = leagueArray[i].data.all_matches_table_home;\n        awayLeague = leagueArray[i].data.all_matches_table_away;\n      }\n\n      for (let x = 0; x < leagueInstance.length; x++) {\n        let regularSeason = leagueArray[i].data.specific_tables.find(\n          (season) =>\n            season.round === \"Regular Season\" ||\n            season.round === \"2025\" ||\n            season.round === \"2024/2025\" ||\n            season.round === \"Apertura\" ||\n            season.round === \"1st Phase\"\n          // season.round === \"North\" ||\n          // season.round === \"South\"\n        );\n        let string;\n\n        if (regularSeason !== undefined && regularSeason.table) {\n          string = regularSeason.table[x];\n          homeLeague = leagueArray[i].data.all_matches_table_home;\n          awayLeague = leagueArray[i].data.all_matches_table_away;\n        } else {\n          string = leagueArray[i].data.all_matches_table_overall[x];\n          homeLeague = leagueArray[i].data.all_matches_table_home;\n          awayLeague = leagueArray[i].data.all_matches_table_away;\n        }\n\n        let stringHome = homeLeague[x];\n        let stringAway = awayLeague[x];\n\n\n        if(string){\n          leaguePositions.push({\n            name: string.cleanName,\n            position: x + 1,\n            rawPosition: x + 1,\n            homeFormName: stringHome ? stringHome.cleanName : string.cleanName,\n            awayFormName: stringAway ? stringAway.cleanName : string.cleanName,\n            homeSeasonWinPercentage: stringHome\n              ? stringHome.seasonWins\n              : string.seasonWins,\n            awaySeasonWinPercentage: stringAway\n              ? stringAway.seasonWins\n              : string.seasonWins,\n            homeSeasonLossPercentage: stringHome\n              ? stringHome.seasonLosses_home\n              : string.seasonLosses_home,\n            awaySeasonLossPercentage: stringAway\n              ? stringAway.seasonLosses_away\n              : string.seasonLosses_away,\n            homeSeasonDrawPercentage: stringHome\n              ? stringHome.seasonDraws\n              : string.seasonDraws,\n            awaySeasonDrawPercentage: stringAway\n              ? stringAway.seasonDraws\n              : string.seasonDraws,\n            homeSeasonMatchesPlayed: stringHome\n              ? stringHome.matchesPlayed\n              : string.matchesPlayed,\n            awaySeasonMatchesPlayed: stringAway\n              ? stringAway.matchesPlayed\n              : string.matchesPlayed,\n            ppg: string.points / string.matchesPlayed,\n            wdl: string.wdl_record ? string.wdl_record : \"\",\n            played: string.matchesPlayed,\n            seasonGoals: string.seasonGoals,\n            seasonConceded: string.seasonConceded,\n          });\n        }\n      }\n    }\n\n    let previousLeagueName;\n\n    for (let i = 0; i < orderedLeagues.length; i++) {\n      leagueID = orderedLeagues[i].element.id;\n      leagueGames = fixtureArray.filter(\n        (game) => game.competition_id === orderedLeagues[i].element.id\n      );\n\n      for (const fixture of leagueGames) {\n        const unixTimestamp = fixture.date_unix;\n        const milliseconds = unixTimestamp * 1000;\n        const dateObject = new Date(milliseconds);\n\n        let match = {};\n        if (orderedLeagues[i].name !== previousLeagueName) {\n          match.leagueName = orderedLeagues[i].name;\n          match.leagueDesc = orderedLeagues[i].name;\n          match.leagueIndex = i;\n          match.leagueID = leagueID;\n        } else {\n          match.leagueName = null;\n          match.leagueDesc = orderedLeagues[i].name;\n          match.leagueIndex = i;\n          match.leagueID = leagueID;\n        }\n        match.id = fixture.id;\n        match.competition_id = fixture.competition_id;\n        match.date = fixture.date_unix;\n        match.time = dateObject.toLocaleString(\"en-GB\", {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n        });\n        match.homeTeam = fixture.home_name;\n        match.awayTeam = fixture.away_name;\n        match.refereeID = fixture.refereeID;\n        match.homeOdds = +fixture.odds_ft_1.toFixed(2);\n        match.awayOdds = +fixture.odds_ft_2.toFixed(2);\n        match.drawOdds = +fixture.odds_ft_x.toFixed(2);\n        match.homeDoubleChance = fixture.odds_doublechance_1x;\n        match.awayDoubleChance = fixture.odds_doublechance_x2;\n        match.bttsOdds = fixture.odds_btts_yes;\n        match.homeId = fixture.homeID;\n        match.awayId = fixture.awayID;\n        match.form = [];\n        match.homeTeamInfo = [];\n        match.awayTeamInfo = [];\n        match.btts = false;\n\n        previousLeagueName = orderedLeagues[i].name;\n\n        let homeTeaminLeague;\n        let awayTeaminLeague;\n        let teamPositionHome;\n        let teamPositionHomeTable;\n        let teamPositionAwayTable;\n        let homeTeamWinPercentageHome;\n        let awayTeamWinPercentageAway;\n        let homeTeamLossPercentageHome;\n        let awayTeamLossPercentageAway;\n        let homeTeamDrawPercentageHome;\n        let awayTeamDrawPercentageAway;\n        let teamPositionAway;\n        let homePrefix;\n        let homePrefixHomeTable;\n        let awayPrefix;\n        let awayPrefixAwayTable;\n        let homeSeasonPPG;\n        let awaySeasonPPG;\n\n        try {\n          homeTeaminLeague = leaguePositions.find(\n            (team) => team.name === match.homeTeam\n          );\n\n          let homeTeaminHomeLeague = leaguePositions.find(\n            (team) => team.homeFormName === match.homeTeam\n          );\n\n          teamPositionHome = homeTeaminLeague.position;\n          teamPositionHomeTable = homeTeaminHomeLeague.position;\n\n          WDLinLeagueHome = Array.from(homeTeaminLeague.wdl.toUpperCase());\n          HomeAverageGoals =\n            homeTeaminLeague.seasonGoals / homeTeaminLeague.played;\n          HomeAverageConceded =\n            homeTeaminLeague.seasonConceded / homeTeaminLeague.played;\n\n          homeTeamWinPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonWinPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homeTeamLossPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonLossPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homeTeamDrawPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonDrawPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homePrefix = await getPrefix(teamPositionHome);\n          homePrefixHomeTable = await getPrefix(teamPositionHomeTable);\n\n          homeSeasonPPG = homeTeaminLeague.ppg.toFixed(2);\n        } catch (error) {\n          console.log(error);\n          teamPositionHome = \"N/A\";\n          homePrefix = \"\";\n          homePrefixHomeTable = \"\";\n          homeSeasonPPG = \"N/A\";\n          homeTeaminLeague = {\n            rawPosition: \"N/A\",\n          };\n          WDLinLeagueHome = [];\n        }\n\n        try {\n          awayTeaminLeague = leaguePositions.find(\n            (team) => team.name === match.awayTeam\n          );\n\n          let awayTeaminAwayLeague = leaguePositions.find(\n            (team) => team.awayFormName === match.awayTeam\n          );\n\n          teamPositionAway = awayTeaminLeague.position;\n          teamPositionAwayTable = awayTeaminAwayLeague.position;\n\n          WDLinLeagueAway = Array.from(awayTeaminLeague.wdl.toUpperCase());\n          AwayAverageGoals =\n            awayTeaminLeague.seasonGoals / awayTeaminLeague.played;\n          AwayAverageConceded =\n            awayTeaminLeague.seasonConceded / awayTeaminLeague.played;\n\n          awayTeamWinPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonWinPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayTeamLossPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonLossPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayTeamDrawPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonDrawPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayPrefix = await getPrefix(teamPositionAway);\n          awayPrefixAwayTable = await getPrefix(teamPositionAwayTable);\n\n          awaySeasonPPG = awayTeaminLeague.ppg.toFixed(2);\n        } catch (error) {\n          console.log(error);\n          teamPositionAway = \"N/A\";\n          awayPrefix = \"\";\n          awaySeasonPPG = \"N/A\";\n          awayTeaminLeague = {\n            rawPosition: \"N/A\",\n          };\n          WDLinLeagueAway = [];\n        }\n\n        if (!isFormStored) {\n          form = await getForm(match);\n\n          let homeFormString5 =\n            form[0].data[0].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString5 =\n            form[1].data[0].stats.additional_info.formRun_overall.toUpperCase();\n          let homeFormString6 =\n            form[0].data[1].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString6 =\n            form[1].data[1].stats.additional_info.formRun_overall.toUpperCase();\n          let homeFormString10 =\n            form[0].data[2].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString10 =\n            form[1].data[2].stats.additional_info.formRun_overall.toUpperCase();\n\n          let homeFormRun =\n            form[0].data[2].stats.additional_info.formRun_home.toUpperCase();\n          let awayFormRun =\n            form[1].data[2].stats.additional_info.formRun_away.toUpperCase();\n\n          if (WDLinLeagueHome.length >= 10) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = WDLinLeagueHome.slice(-6);\n            lastTenFormHome = WDLinLeagueHome.slice(-10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = WDLinLeagueAway.slice(-6);\n            lastTenFormAway = WDLinLeagueAway.slice(-10);\n            leagueOrAll = \"League\";\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else if (WDLinLeagueHome.length >= 6) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = WDLinLeagueHome.slice(-6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = WDLinLeagueAway.slice(-6);\n            lastTenFormAway = Array.from(awayFormString10);\n            leagueOrAll = \"League\";\n\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else if (WDLinLeagueHome.length >= 5) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = Array.from(homeFormString6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = Array.from(awayFormString6);\n            lastTenFormAway = Array.from(awayFormString10);\n            leagueOrAll = \"League\";\n\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else {\n            lastThreeFormHome = [\n              homeFormString5[2],\n              homeFormString5[3],\n              homeFormString5[4],\n            ];\n            lastFiveFormHome = Array.from(homeFormString5);\n            lastSixFormHome = Array.from(homeFormString6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = [\n              awayFormString5[2],\n              awayFormString5[3],\n              awayFormString5[4],\n            ];\n\n            lastFiveFormAway = Array.from(awayFormString5);\n            lastSixFormAway = Array.from(awayFormString6);\n            lastTenFormAway = Array.from(awayFormString10);\n\n            leagueOrAll = \"All\";\n\n            homeAverageGoals = undefined;\n            homeAverageConceded = undefined;\n            awayAverageGoals = undefined;\n            awayAverageConceded = undefined;\n          }\n\n          formRunHome = Array.from(homeFormRun);\n          formRunAway = Array.from(awayFormRun);\n\n          if (\n            teamPositionHome === 0 ||\n            form[0].data[0].season_format !== \"Domestic League\"\n          ) {\n            teamPositionHome = \"N/A\";\n            teamPositionHomeTable = \"N/A\";\n            homePrefix = \"\";\n            homePrefixHomeTable = \"\";\n          }\n\n          if (\n            teamPositionAway === 0 ||\n            form[0].data[0].season_format !== \"Domestic League\"\n          ) {\n            teamPositionAway = \"N/A\";\n            teamPositionAwayTable = \"N/A\";\n            awayPrefix = \"\";\n            awayPrefixAwayTable = \"\";\n          }\n          allForm.push({\n            id: match.id,\n            teamIDHome: match.homeId,\n            teamIDAway: match.awayId,\n            leagueId: leagueID,\n            home: {\n              teamName: match.homeTeam,\n              0: {\n                // XGOverall: parseFloat(form[0].data[0].stats.xg_for_avg_overall),\n                // XG: parseFloat(form[0].data[0].stats.xg_for_avg_home),\n                // ScoredOverall: parseFloat(\n                //   form[0].data[0].stats.seasonScoredNum_overall\n                // ),\n                // ScoredAverage: parseFloat(\n                //   form[0].data[0].stats.seasonScoredAVG_home\n                // ),\n                // PlayedHome: parseFloat(\n                //   form[0].data[0].stats.seasonMatchesPlayed_home\n                // ),\n                // PlayedAway: parseFloat(\n                //   form[0].data[0].stats.seasonMatchesPlayed_away\n                // ),\n                // ConcededOverall: parseFloat(\n                //   form[0].data[0].stats.seasonConcededNum_overall\n                // ),\n                // ConcededAverage: parseFloat(\n                //   form[0].data[0].stats.seasonConcededAVG_home\n                // ),\n                // XGAgainstAvgOverall: parseFloat(\n                //   form[0].data[0].stats.xg_against_avg_overall\n                // ),\n                // XGAgainstAverage: parseFloat(\n                //   form[0].data[0].stats.xg_against_avg_home\n                // ),\n                // CleanSheetPercentage: parseFloat(\n                //   form[0].data[0].stats.seasonCSPercentage_overall\n                // ),\n                // AveragePossessionOverall: parseFloat(\n                //   form[0].data[0].stats.possessionAVG_overall\n                // ),\n                // AveragePossession: parseFloat(\n                //   form[0].data[0].stats.possessionAVG_home\n                // ),\n                // AverageShotsOnTargetOverall: parseFloat(\n                //   form[0].data[0].stats.shotsOnTargetAVG_overall\n                // ),\n                // AverageShotsOnTarget: parseFloat(\n                //   form[0].data[0].stats.shotsOnTargetAVG_home\n                // ),\n                // AverageDangerousAttacksOverall: parseFloat(\n                //   form[0].data[0].stats.dangerous_attacks_avg_overall\n                // ),\n                // PPG: parseFloat(form[0].data[0].stats.seasonPPG_overall),\n                // AttacksHome: parseFloat(form[0].data[0].stats.attacks_avg_home),\n                // AttacksAway: parseFloat(form[0].data[0].stats.attacks_avg_away),\n                // AverageDangerousAttacks: parseFloat(\n                //   form[0].data[0].stats.dangerous_attacks_avg_home\n                // ),\n                // homeAttackAdvantage: parseFloat(\n                //   form[0].data[0].stats.homeAttackAdvantage\n                // ),\n                // homeDefenceAdvantage: parseFloat(\n                //   form[0].data[0].stats.homeDefenceAdvantage\n                // ),\n                // BTTSPercentage: parseInt(\n                //   form[0].data[0].stats.seasonBTTSPercentage_home\n                // ),\n                // LeagueOrAll: leagueOrAll,\n                // LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                // homeRawPosition: homeTeaminLeague.rawPosition !== undefined\n                //   ? homeTeaminLeague.rawPosition\n                //   : 0,\n                // homeTeamHomePositionRaw: teamPositionHomeTable,\n                // LeagueAverageGoals: homeAverageGoals,\n                // LeagueAverageConceded: homeAverageConceded,\n              },\n              1: {\n                // XGOverall: parseFloat(form[0].data[1].stats.xg_for_avg_overall),\n                // XG: parseFloat(form[0].data[1].stats.xg_for_avg_home),\n                // ScoredOverall: parseFloat(\n                //   form[0].data[1].stats.seasonScoredNum_overall\n                // ),\n                // ScoredAverage: parseFloat(\n                //   form[0].data[1].stats.seasonScoredAVG_home\n                // ),\n                // PlayedHome: parseFloat(\n                //   form[0].data[1].stats.seasonMatchesPlayed_home\n                // ),\n                // PlayedAway: parseFloat(\n                //   form[0].data[1].stats.seasonMatchesPlayed_away\n                // ),\n                // ConcededOverall: parseFloat(\n                //   form[0].data[1].stats.seasonConcededNum_overall\n                // ),\n                // ConcededAverage: parseFloat(\n                //   form[0].data[1].stats.seasonConcededAVG_home\n                // ),\n                // XGAgainstAvgOverall: parseFloat(\n                //   form[0].data[1].stats.xg_against_avg_overall\n                // ),\n                // XGAgainstAverage: parseFloat(\n                //   form[0].data[1].stats.xg_against_avg_home\n                // ),\n                // CleanSheetPercentage: parseFloat(\n                //   form[0].data[1].stats.seasonCSPercentage_overall\n                // ),\n                // AveragePossessionOverall: parseFloat(\n                //   form[0].data[1].stats.possessionAVG_overall\n                // ),\n                // AveragePossession: parseFloat(\n                //   form[0].data[1].stats.possessionAVG_home\n                // ),\n                // AverageShotsOnTargetOverall: parseFloat(\n                //   form[0].data[1].stats.shotsOnTargetAVG_overall\n                // ),\n                // AverageShotsOnTarget: parseFloat(\n                //   form[0].data[1].stats.shotsOnTargetAVG_home\n                // ),\n                // AverageDangerousAttacksOverall: parseFloat(\n                //   form[0].data[1].stats.dangerous_attacks_avg_overall\n                // ),\n                // PPG: parseFloat(form[0].data[1].stats.seasonPPG_overall),\n                // AttacksHome: parseFloat(form[0].data[1].stats.attacks_avg_home),\n                // AttacksAway: parseFloat(form[0].data[1].stats.attacks_avg_away),\n                // AverageDangerousAttacks: parseFloat(\n                //   form[0].data[1].stats.dangerous_attacks_avg_home\n                // ),\n                // homeAttackAdvantage: parseFloat(\n                //   form[0].data[1].stats.homeAttackAdvantage\n                // ),\n                // homeDefenceAdvantage: parseFloat(\n                //   form[0].data[1].stats.homeDefenceAdvantage\n                // ),\n                // BTTSPercentage: parseInt(\n                //   form[0].data[1].stats.seasonBTTSPercentage_home\n                // ),\n                // LeagueOrAll: leagueOrAll,\n                // LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                // homeRawPosition: homeTeaminLeague.rawPosition !== undefined\n                //   ? homeTeaminLeague.rawPosition\n                //   : 0,\n                // homeTeamHomePositionRaw: teamPositionHomeTable,\n                // LeagueAverageGoals: homeAverageGoals,\n                // LeagueAverageConceded: homeAverageConceded,\n              },\n              2: {\n                XGOverall: parseFloat(form[0].data[2].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[2].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[2].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[2].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[2].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[2].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[2].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[2].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[2].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[2].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[2].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[2].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[2].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[2].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[2].stats.shotsOnTargetAVG_home\n                ),\n                AverageShots: parseFloat(\n                  form[0].data[2].stats.shotsAVG_overall\n                ),\n                AverageShotsHomeOrAway: parseFloat(\n                  form[0].data[2].stats.shotsAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[2].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[2].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[2].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[2].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[2].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[2].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[2].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[2].stats.seasonBTTSPercentage_home\n                ),\n                lastThreeForm: lastThreeFormHome !== undefined ? lastThreeFormHome.reverse() : \"N/A\",\n                LastFiveForm: lastFiveFormHome !== undefined ? lastFiveFormHome.reverse() : \"N/A\", \n                LastSixForm: lastSixFormHome !== undefined ? lastSixFormHome.reverse() : \"N/A\",\n                LastTenForm: lastTenFormHome !== undefined ? lastTenFormHome.reverse() : \"N/A\",\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition: homeTeaminLeague.rawPosition !== undefined\n                  ? homeTeaminLeague.rawPosition\n                  : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                SeasonPPG: homeSeasonPPG,\n                WinPercentage: homeTeamWinPercentageHome,\n                LossPercentage: homeTeamLossPercentageHome,\n                DrawPercentage: homeTeamDrawPercentageHome,\n                formRun: formRunHome,\n                goalDifference:\n                  form[0].data[2].stats.seasonGoalDifference_overall,\n                goalDifferenceHomeOrAway:\n                  form[0].data[2].stats.seasonGoalDifference_home,\n                BttsPercentage:\n                  form[0].data[2].stats.seasonBTTSPercentage_overall,\n                BttsPercentageHomeOrAway:\n                  form[0].data[2].stats.seasonBTTSPercentage_home,\n                CardsTotal: form[0].data[2].stats.cardsTotal_overall,\n                CornersAverage: form[0].data[2].stats.cornersAVG_overall,\n                ScoredBothHalvesPercentage:\n                  form[0].data[2].stats.scoredBothHalvesPercentage_overall,\n                LastMatch: await convertTimestamp(\n                  form[0].data[0].last_updated_match_timestamp\n                ),\n                WDLRecord: WDLinLeagueHome,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n            },\n            away: {\n              teamName: match.awayTeam,\n              0: {\n                // XGOverall: parseFloat(form[1].data[0].stats.xg_for_avg_overall),\n                // XG: parseFloat(form[1].data[0].stats.xg_for_avg_away),\n                // ScoredOverall: parseFloat(\n                //   form[1].data[0].stats.seasonScoredNum_overall\n                // ),\n                // ScoredAverage: parseFloat(\n                //   form[1].data[0].stats.seasonScoredAVG_away\n                // ),\n                // PlayedHome: parseFloat(\n                //   form[1].data[0].stats.seasonMatchesPlayed_home\n                // ),\n                // PlayedAway: parseFloat(\n                //   form[1].data[0].stats.seasonMatchesPlayed_away\n                // ),\n                // ConcededOverall: parseFloat(\n                //   form[1].data[0].stats.seasonConcededNum_overall\n                // ),\n                // ConcededAverage: parseFloat(\n                //   form[1].data[0].stats.seasonConcededAVG_away\n                // ),\n                // XGAgainstAvgOverall: parseFloat(\n                //   form[1].data[0].stats.xg_against_avg_overall\n                // ),\n                // XGAgainstAverage: parseFloat(\n                //   form[1].data[0].stats.xg_against_avg_away\n                // ),\n                // CleanSheetPercentage: parseFloat(\n                //   form[1].data[0].stats.seasonCSPercentage_overall\n                // ),\n                // AveragePossessionOverall: parseFloat(\n                //   form[1].data[0].stats.possessionAVG_overall\n                // ),\n                // AveragePossession: parseFloat(\n                //   form[1].data[0].stats.possessionAVG_away\n                // ),\n                // AverageShotsOnTargetOverall: parseFloat(\n                //   form[1].data[0].stats.shotsOnTargetAVG_overall\n                // ),\n                // AverageShotsOnTarget: parseFloat(\n                //   form[1].data[0].stats.shotsOnTargetAVG_away\n                // ),\n                // AverageDangerousAttacksOverall: parseFloat(\n                //   form[1].data[0].stats.dangerous_attacks_avg_overall\n                // ),\n                // PPG: parseFloat(form[1].data[0].stats.seasonPPG_overall),\n                // AttacksAverage: parseFloat(\n                //   form[1].data[0].stats.attacks_avg_away\n                // ),\n                // AverageDangerousAttacks: parseFloat(\n                //   form[1].data[0].stats.dangerous_attacks_avg_away\n                // ),\n                // BTTSPercentage: parseInt(\n                //   form[1].data[0].stats.seasonBTTSPercentage_away\n                // ),\n                // LeagueOrAll: leagueOrAll,\n                // LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                // awayRawPosition: awayTeaminLeague.rawPosition\n                //   ? awayTeaminLeague.rawPosition\n                //   : 0,\n                // awayTeamAwayPositionRaw: teamPositionAwayTable,\n                // LeagueAverageGoals: awayAverageGoals,\n                // LeagueAverageConceded: awayAverageConceded,\n              },\n              1: {\n                // XGOverall: parseFloat(form[1].data[1].stats.xg_for_avg_overall),\n                // XG: parseFloat(form[1].data[1].stats.xg_for_avg_away),\n                // ScoredOverall: parseFloat(\n                //   form[1].data[1].stats.seasonScoredNum_overall\n                // ),\n                // ScoredAverage: parseFloat(\n                //   form[1].data[1].stats.seasonScoredAVG_away\n                // ),\n                // PlayedHome: parseFloat(\n                //   form[1].data[1].stats.seasonMatchesPlayed_home\n                // ),\n                // PlayedAway: parseFloat(\n                //   form[1].data[1].stats.seasonMatchesPlayed_away\n                // ),\n                // ConcededOverall: parseFloat(\n                //   form[1].data[1].stats.seasonConcededNum_overall\n                // ),\n                // ConcededAverage: parseFloat(\n                //   form[1].data[1].stats.seasonConcededAVG_away\n                // ),\n                // XGAgainstAvgOverall: parseFloat(\n                //   form[1].data[1].stats.xg_against_avg_overall\n                // ),\n                // XGAgainstAverage: parseFloat(\n                //   form[1].data[1].stats.xg_against_avg_away\n                // ),\n                // CleanSheetPercentage: parseFloat(\n                //   form[1].data[1].stats.seasonCSPercentage_overall\n                // ),\n                // AveragePossessionOverall: parseFloat(\n                //   form[1].data[1].stats.possessionAVG_overall\n                // ),\n                // AveragePossession: parseFloat(\n                //   form[1].data[1].stats.possessionAVG_away\n                // ),\n                // AverageShotsOnTargetOverall: parseFloat(\n                //   form[1].data[1].stats.shotsOnTargetAVG_overall\n                // ),\n                // AverageShotsOnTarget: parseFloat(\n                //   form[1].data[1].stats.shotsOnTargetAVG_away\n                // ),\n                // AverageDangerousAttacksOverall: parseFloat(\n                //   form[1].data[1].stats.dangerous_attacks_avg_overall\n                // ),\n                // PPG: parseFloat(form[1].data[1].stats.seasonPPG_overall),\n                // AttacksAverage: parseFloat(\n                //   form[1].data[1].stats.attacks_avg_away\n                // ),\n                // AverageDangerousAttacks: parseFloat(\n                //   form[1].data[1].stats.dangerous_attacks_avg_away\n                // ),\n                // BTTSPercentage: parseInt(\n                //   form[1].data[1].stats.seasonBTTSPercentage_away\n                // ),\n                // LeagueOrAll: leagueOrAll,\n                // LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                // awayRawPosition: awayTeaminLeague.rawPosition\n                //   ? awayTeaminLeague.rawPosition\n                //   : 0,\n                // awayTeamAwayPositionRaw: teamPositionAwayTable,\n                // LeagueAverageGoals: awayAverageGoals,\n                // LeagueAverageConceded: awayAverageConceded,\n              },\n              2: {\n                XGOverall: parseFloat(form[1].data[2].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[2].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[2].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[2].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[2].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[2].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[2].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[2].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[2].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[2].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[2].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[2].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[2].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[2].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[2].stats.shotsOnTargetAVG_away\n                ),\n                AverageShots: parseFloat(\n                  form[1].data[2].stats.shotsAVG_overall\n                ),\n                AverageShotsHomeOrAway: parseFloat(\n                  form[1].data[2].stats.shotsAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[2].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[2].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[2].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[2].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[2].stats.seasonBTTSPercentage_away\n                ),\n                lastThreeForm: lastThreeFormAway !== undefined ? lastThreeFormAway.reverse() : \"N/A\",\n                LastFiveForm: lastFiveFormAway !== undefined ? lastFiveFormAway.reverse() : \"N/A\", \n                LastSixForm: lastSixFormAway !== undefined ? lastSixFormAway.reverse() : \"N/A\",\n                LastTenForm: lastTenFormAway !== undefined ? lastTenFormAway.reverse() : \"N/A\",\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                SeasonPPG: awaySeasonPPG,\n                WinPercentage: awayTeamWinPercentageAway,\n                LossPercentage: awayTeamLossPercentageAway,\n                DrawPercentage: awayTeamDrawPercentageAway,\n                formRun: formRunAway,\n                goalDifference:\n                  form[1].data[2].stats.seasonGoalDifference_overall,\n                goalDifferenceHomeOrAway:\n                  form[1].data[2].stats.seasonGoalDifference_away,\n                BttsPercentage:\n                  form[1].data[2].stats.seasonBTTSPercentage_overall,\n                BttsPercentageHomeOrAway:\n                  form[1].data[2].stats.seasonBTTSPercentage_away,\n                CardsTotal: form[1].data[2].stats.cardsTotal_overall,\n                CornersAverage: form[1].data[2].stats.cornersAVG_overall,\n                ScoredBothHalvesPercentage:\n                  form[1].data[2].stats.scoredBothHalvesPercentage_overall,\n                LastMatch: await convertTimestamp(\n                  form[1].data[0].last_updated_match_timestamp\n                ),\n                WDLRecord: WDLinLeagueAway,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n            },\n          });\n        }\n\n        match.homeBadge = fixture.home_image;\n        match.awayBadge = fixture.away_image;\n\n        match.homePpg = fixture.home_ppg.toFixed(2);\n        match.awayPpg = fixture.away_ppg.toFixed(2);\n\n        match.lastFiveFormHome = lastFiveFormHome;\n        match.lastFiveFormAway = lastFiveFormAway;\n\n        match.homeRawPosition = homeTeaminLeague.rawPosition;\n        match.awayRawPosition = awayTeaminLeague.rawPosition;\n\n        match.homeTeamHomePosition = `${teamPositionHomeTable}${homePrefixHomeTable}`;\n        match.awayTeamAwayPosition = `${teamPositionAwayTable}${awayPrefixAwayTable}`;\n\n        match.homeTeamHomePositionRaw = teamPositionHomeTable;\n        match.awayTeamAwayPositionRaw = teamPositionAwayTable;\n\n        match.homeTeamWinPercentage = homeTeamWinPercentageHome;\n        match.awayTeamWinPercentage = awayTeamWinPercentageAway;\n\n        match.homeTeamLossPercentage = homeTeamLossPercentageHome;\n        match.awayTeamLossPercentage = awayTeamLossPercentageAway;\n\n        match.homeTeamDrawPercentage = homeTeamDrawPercentageHome;\n        match.awayTeamDrawPercentage = awayTeamDrawPercentageAway;\n        match.status = fixture.status;\n        match.over25Odds = fixture.odds_ft_over25;\n        match.btts_potential = fixture.btts_potential;\n        match.game = match.homeTeam + \" v \" + match.awayTeam;\n        match.stadium = fixture.stadium_name;\n        match.homeGoals = fixture.homeGoalCount;\n        match.awayGoals = fixture.awayGoalCount;\n\n        match.expectedGoalsHomeToDate = fixture.team_a_xg_prematch;\n        match.expectedGoalsAwayToDate = fixture.team_b_xg_prematch;\n        match.game_week = fixture.game_week;\n\n        if (match.status !== \"canceled\" || match.status !== \"suspended\") {\n          matches.push(match);\n          await createFixture(match, false);\n        }\n      }\n\n      if (matches.length > 0) {\n        ReactDOM.render(\n          <Fragment>\n            <Button\n              text={\"Get Predictions & League stats\"}\n              onClickEvent={() => getScorePrediction(day)}\n              className={\"GeneratePredictions\"}\n            />\n            <div className=\"Version\">Prediction engine v1.3.1 (07/03/25)</div>\n            <Collapsable\n              buttonText={\"Filters\"}\n              element={\n                <div className=\"FilterContainer\">\n                  <h6>\n                    Use the below filters to remove predictions that don't meet\n                    the set criteria. These will be greyed out and not included\n                    in multi-builders and ROI stats\n                  </h6>\n                  <h6>Goals for/against differential filter (BETA)</h6>\n                  <div>\n                    I'm looking for tips where the goal differential between\n                    teams is at least...\n                  </div>\n                  <SlideDiff\n                    value=\"0\"\n                    text=\"all games\"\n                    useCase=\"gd\"\n                    lower=\"0\"\n                    upper=\"30\"\n                  ></SlideDiff>\n                  <h6>\n                    Goals for/against home or away differential filter (BETA)\n                  </h6>\n                  <div>\n                    I'm looking for tips where the goal differential (home or\n                    away only) between teams is at least...\n                  </div>\n                  <SlideDiff\n                    value=\"0\"\n                    text=\"all games\"\n                    useCase=\"gdHorA\"\n                    lower=\"0\"\n                    upper=\"30\"\n                  ></SlideDiff>\n                  <Fragment>\n                    <h6>XG for/against differential filter (BETA)</h6>\n                    <div>\n                      I'm looking for tips where the XG differential between\n                      teams is at least...\n                    </div>\n                    <SlideDiff\n                      value=\"0\"\n                      text=\"all games\"\n                      useCase=\"xg\"\n                      lower=\"0\"\n                      upper=\"30\"\n                    ></SlideDiff>\n                  </Fragment>\n                  <Fragment>\n                    <h6>Last 6 points differential filter (BETA)</h6>\n                    <div>\n                      I'm looking for tips where the points differential between\n                      teams is at least...\n                    </div>\n                    <SlideDiff\n                      value=\"0\"\n                      text=\"all games\"\n                      useCase=\"last10\"\n                      lower=\"0\"\n                      upper=\"18\"\n                    ></SlideDiff>\n                  </Fragment>\n                  <Fragment>\n                    <h6>Choose your risk profile</h6>\n                    <div>\n                      I'm looking for tips where the odds are between...\n                    </div>\n                    <Slide value=\"1\" text=\"all games\"></Slide>\n                  </Fragment>\n                </div>\n              }\n            />\n            ,\n          </Fragment>,\n          document.getElementById(\"GeneratePredictions\")\n        );\n      }\n\n      // }\n    }\n\n    ReactDOM.render(\n      <div>\n        <div className=\"LoadingText\"></div>\n      </div>,\n      document.getElementById(\"Loading\")\n    );\n\n    async function updateResults(bool) {\n      console.log(\"updating results\");\n      if (allLeagueResultsArrayOfObjects.length > 0 && bool === true) {\n        await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}results`, {\n          method: \"DELETE\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }).then(async () => {\n          await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}results`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(allLeagueResultsArrayOfObjects),\n          });\n        });\n      } else {\n        console.log(\"EMPTY RESULTS\");\n      }\n    }\n\n    if (!isStoredLocally) {\n      await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}allForm/${date}`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ allForm }),\n      });\n      await updateResults(true);\n    }\n    if (!leaguesStored) {\n      await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${todaysDate}`,\n        {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ leagueArray }),\n        }\n      );\n    }\n\n    // const allFixtures = await RenderAllFixtures(matches, false)\n    ReactDOM.render(\n      <RenderAllFixtures matches={matches} result={false} bool={false} />,\n      document.getElementById(\"FixtureContainer\")\n    );\n    // ReactDOM.render(<RenderAllFixtures matches={matches} bool={false}/>),document.getElementById(\"FixtureContainer\")\n    setTimeout(() => {\n      isFunctionRunning = false;\n    }, 3000);\n  }\n}\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    // backgroundColor: \"#dedddd\",\n    padding: 10,\n    textAlign: \"center\",\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    // border: \"none\",\n    margin: \"none\",\n    color: 'white',\n    lineHeight: '2em',\n    backgroundColor: '#030061',\n  },\n  body: {\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    padding: \"1em\",\n    color: 'white',\n    border: \"none\",\n    margin: \"em\",\n    backgroundColor: '#030061',\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#030061\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#030052\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\n\nexport default function CustomizedTables(props) {\n\n\n  return (\n    <TableContainer className=\"StatsTable\">\n      <Table aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Stat</StyledTableCell>\n            <StyledTableCell>H2H history</StyledTableCell>\n            <StyledTableCell>XGTipping forecast</StyledTableCell>\n            <StyledTableCell>Odds (yes)</StyledTableCell>\n            <StyledTableCell>Odds (no)</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        <StyledTableRow key=\"O05\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 0.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o05Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o05Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u05Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O15\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 1.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o15Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o15Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u15Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O25\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 2.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o25Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o25Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u25Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O35\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 3.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o35Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o35Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u35Odds}</StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","async function getOverOrUnderText(xgSum) {\n  let overUnderAchievingSum = xgSum;\n  let text;\n  switch (true) {\n    case overUnderAchievingSum > 1.5:\n      text = \"Underachieving drastically against expected goals.\";\n      break;\n    case overUnderAchievingSum > 1.25 && overUnderAchievingSum <= 1.5:\n      text = \"Underachieving significantly against expected goals.\";\n      break;\n    case overUnderAchievingSum > 1 && overUnderAchievingSum <= 1.25:\n      text = \"Underachieving moderately against expected goals.\";\n      break;\n    case overUnderAchievingSum > 0.75 && overUnderAchievingSum <= 1:\n      text = \"Underachieving slightly against expected goals.\";\n      break;\n    case overUnderAchievingSum > 0.4 && overUnderAchievingSum <= 0.75:\n      text = \"Underachieving very slightly against expected goals.\";\n      break;\n    case overUnderAchievingSum > -0.4 && overUnderAchievingSum <= 0.4:\n      text = \"Roughly matching expected goal difference overall.\";\n      break;\n    case overUnderAchievingSum < -0.4 && overUnderAchievingSum >= -0.75:\n      text = \"Overachieving very slightly against expected goals.\";\n      break;\n    case overUnderAchievingSum < -0.75 && overUnderAchievingSum >= -1:\n      text = \"Overachieving slightly against expected goals overall.\";\n      break;\n    case overUnderAchievingSum < -1 && overUnderAchievingSum >= -1.25:\n      text = \"Overachieving moderately against expected goals.\";\n      break;\n    case overUnderAchievingSum < -1.25 && overUnderAchievingSum >= -1.5:\n      text = \"Overachieving significantly against expected goals.\";\n      break;\n    case overUnderAchievingSum < -1.5:\n      text = \"Overachieving drastically against expected goals.\";\n      break;\n    default:\n      text = \"\";\n      break;\n  }\n  \n  return text;\n}\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nasync function getXGDifferential(xgFor, xgAgainst, goalsFor, goalsAgainst) {\n  let xgDiff = xgFor - xgAgainst;\n  let goalDiff = goalsFor - goalsAgainst;\n  let compareXgAndGoalDiff = await diff(xgDiff, goalDiff);\n\n  return compareXgAndGoalDiff;\n}\n\nasync function getAttackingSummary(goalsRecent, goalsLongTerm) {\n\n  let text;\n  if (goalsRecent >= 3) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Free-scoring and improving recently in front of goal.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Free-scoring and consistent recently in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Free-scoring overall, but less so recently in games.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 3 && goalsRecent >= 2) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Impressive scoring; improving recently in front of goal.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Impressive scoring; consistent recently in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Impressive scoring, but less impressive in recent games.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 2 && goalsRecent >= 1) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Decent scoring; improving recently in front of goal.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Decent scoring; consistent recently in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Decent scoring, but less impressive in recent games.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 1 && goalsRecent > 0) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Poor scoring, but signs of improvement in recent games.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Poor scoring and consistently so in most recent games.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Poor scoring with no improvement in most recent games.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent === 0) {\n    switch (true) {\n      case goalsRecent === 0:\n        text = \"Woeful scoring; no goals scored recently at all.\";\n        break;\n      default:\n        text = \"\";\n        break;\n    }\n  }\n  return text;  \n}\n\nasync function getDefenceSummary(cleansheetStat) {\n  let text;\n  switch (true) {\n    case cleansheetStat > 80:\n      text = `Rock solid at the back; ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    case cleansheetStat > 60 && cleansheetStat <= 80:\n      text = `Very strong defensively; ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    case cleansheetStat > 40 && cleansheetStat <= 60:\n      text = `Defensively impressive; ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    case cleansheetStat > 20 && cleansheetStat <= 40:\n      text = `Average at the back; only ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    case cleansheetStat > 1 && cleansheetStat <= 20:\n      text = `Defensively frail; only ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    case cleansheetStat === 0:\n      text = `Defensively shambolic; ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    default:\n      break;\n  }  \n  return text;\n}\n\nasync function GenerateFormSummary(form, last10, last5) {\n  let text;\n  // let six = lastx[2];\n  let ten = last10;\n  let five = last5;\n  // console.log(ten)\n  // console.log(five)\n\n  let xgSum = await getXGDifferential(\n    form.XGOverall,\n    form.XGAgainstAvgOverall,\n    form.ScoredOverall / 10,\n    form.ConcededOverall / 10\n  );\n  let xgText = await getOverOrUnderText(xgSum);\n  let attackString = await getAttackingSummary(\n    form.last5Goals,\n    form.last10Goals\n  );\n  let defenceString = await getDefenceSummary(form.CleanSheetPercentage);\n  let pointsAverageTotal =\n    (parseFloat(five) + parseFloat(ten)) / 2;\n\n    if (pointsAverageTotal >= 2.6) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Outstanding recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Outstanding recent form, consistent over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Outstanding recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 2.3) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Excellent recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Excellent recent form, consistent over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Excellent recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 2) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Very good recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Very good recent form, consistent over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Very good recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 1.7) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Good recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Good recent form, consistent over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Good recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 1.4) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Decent recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Decent recent form, consistent over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Decent recent form, worsened in last 5 fixtures.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 1.1) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Average recent form; improving over last 5 fixtures.\";\n          break;\n        case five === ten:\n          text =\n            \"Average recent form, consistent over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Average recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 0.8) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Poor recent form; improving over last 5 fixtures.\";\n          break;\n        case five === ten:\n          text =\n            \"Poor recent form, consistent over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Poor recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 0.5) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Very poor recent form; improving over last 5 fixtures.\";\n          break;\n        case five === ten:\n          text =\n            \"Very poor recent form, consistent over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Very poor recent form, worsening still in last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal < 0.5) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Terrible recent form; improving over last 5 fixtures.\";\n          break;\n        case five === ten:\n          text =\n            \"Terrible recent form, consistent over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Terrible recent form, worsening still in last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else {\n      console.log(pointsAverageTotal);\n    }\n  \n  return text + ` ${xgText} ${attackString} ${defenceString}`;\n}\n\nexport default GenerateFormSummary;\n","// import { light } from \"@material-ui/core/styles/createPalette\";\n// import { toBePartiallyChecked } from \"@testing-library/jest-dom/dist/matchers\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  ArcElement,\n  LineElement,\n  Filler,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  SubTitle,\n} from \"chart.js\";\nimport { Line, Radar, Bar, Doughnut } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  ArcElement,\n  Filler,\n  BarElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  SubTitle\n);\n\nexport function Chart(props) {\n  let length;\n  let depth;\n\n  if (props.type === \"Points over time\") {\n    length = props.data1.length * 3;\n    depth = 0;\n  } else if (props.type === \"Rolling average points over last 10\") {\n    length = Math.abs(props.height);\n    depth = 0;\n  } else if (Math.abs(props.height) > Math.abs(props.depth)) {\n    length = Math.abs(props.height);\n    depth = -Math.abs(props.height);\n  } else if (Math.abs(props.height) < Math.abs(props.depth)) {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  } else {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  }\n\n  const options = {\n    color: \"#030061\",\n    responsive: true,\n    aspectRatio: 1.2,\n    maintainAspectRatio: true,\n    layout: {\n      padding: 3,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    scales: {\n      y: {\n        suggestedMin: depth,\n        suggestedMax: length,\n        // suggestedMax: Math.max(...props.data1) > 3 ? Math.max(...props.data1) : 3,\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          font: {\n            size: 12,\n          },\n        },\n      },\n      x: {\n        title: {\n          display: false,\n          text: \"Last X Games\",\n          font: {\n            size: 14,\n          },\n        },\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          display: false,\n          font: {\n            size: 14,\n          },\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 5,\n        },\n      },\n      title: {\n        display: true,\n        text: props.type,\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  const labels = Array.from(props.data1.keys());\n\n  let data = {\n    labels,\n    datasets: [\n      {\n        label: props.team1,\n        font: {\n          color: \"black\",\n        },\n        data: props.data1,\n        borderColor: \"#030061\",\n        borderWidth: 3,\n        backgroundColor: \"#030061\",\n        tension: props.tension,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        borderColor: \"#970d00\",\n        borderWidth: 3,\n        backgroundColor: \"#970d00\",\n        tension: props.tension,\n      }\n    ],\n  };\n\n  return <Line options={options} data={data} />;\n}\n\nexport function MultilineChart(props) {\n  let length;\n  let depth;\n\n  if (props.type === \"Points over time\") {\n    length = props.data1.length * 3;\n    depth = 0;\n  } else if (props.type === \"Rolling average points over last 10\") {\n    length = Math.abs(props.height);\n    depth = 0;\n  } else if (Math.abs(props.height) > Math.abs(props.depth)) {\n    length = Math.abs(props.height);\n    depth = -Math.abs(props.height);\n  } else if (Math.abs(props.height) < Math.abs(props.depth)) {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  } else {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  }\n\n  const options = {\n    color: \"#030061\",\n    responsive: true,\n    aspectRatio: 1.2,\n    maintainAspectRatio: true,\n    layout: {\n      padding: 3,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    scales: {\n      y: {\n        suggestedMin: depth,\n        suggestedMax: length,\n        // suggestedMax: Math.max(...props.data1) > 3 ? Math.max(...props.data1) : 3,\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          font: {\n            size: 12,\n          },\n        },\n      },\n      x: {\n        title: {\n          display: false,\n          text: \"Last X Games\",\n          font: {\n            size: 14,\n          },\n        },\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          display: false,\n          font: {\n            size: 14,\n          },\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 5,\n        },\n      },\n      title: {\n        display: true,\n        text: props.type,\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  const labels = Array.from(props.data1.keys());\n\n  let data = {\n    labels,\n    datasets: [\n      {\n        label: props.team1,\n        font: {\n          color: \"black\",\n        },\n        data: props.data1,\n        borderColor: \"#030061\",\n        borderWidth: 3,\n        backgroundColor: \"#030061\",\n        tension: props.tension,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        borderColor: \"#970d00\",\n        borderWidth: 3,\n        backgroundColor: \"#970d00\",\n        tension: props.tension,\n      },\n      {\n        label: `${props.team1} XG Diff`,\n        font: {\n          color: \"black\",\n        },\n        data: props.data3,\n        borderColor: \"#0600d6\",\n        borderWidth: 3,\n        backgroundColor: \"#0600d6\",\n        tension: props.tension,\n        hidden: true,\n      },\n      {\n        label: `${props.team2} XG Diff`,\n        font: {\n          color: \"black\",\n        },\n        data: props.data4,\n        borderColor: \"#be1000\",\n        borderWidth: 3,\n        backgroundColor: \"#be1000\",\n        tension: props.tension,\n        hidden: true,\n      },\n    ],\n  };\n\n  return <Line options={options} data={data} />;\n}\n\n\nexport function DoughnutChart(props) {\n  const options = {\n    color: \"#030061\",\n\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 10,\n          color: \"#030061\",\n        },\n      },\n      title: {\n        display: true,\n        text: \"XG Tipping Form Comparison\",\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  const data = {\n    labels: [props.homeTeam, props.awayTeam],\n    datasets: [\n      {\n        data: props.data,\n        backgroundColor: [\"#030061\", \"#970d00\"],\n        rotation: 270,\n        hoverOffset: 4,\n        cutout: \"75%\",\n        circumference: 180,\n      },\n    ],\n  };\n\n  const config = {\n    type: \"doughnut\",\n    data: data,\n  };\n\n  return <Doughnut options={options} data={data} />;\n}\n\nexport function RadarChart(props) {\n  const options = {\n    color: \"#030061\",\n    scales: {\n      r: {\n        angleLines: {\n          display: false,\n        },\n        suggestedMin: 0,\n        suggestedMax: 1,\n        ticks: {\n          precision: 0,\n          display: false,\n        },\n        // grid: {\n        //     circular: true,\n        //   }\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 10,\n          color: \"#030061\",\n        },\n      },\n      title: {\n        display: true,\n        text: props.title,\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  let data = {\n    labels: [\n      \"Attack rating\",\n      \"Defence rating\",\n      \"Ball retention\",\n      \"XG For\",\n      \"XG Against\",\n      \"Directness\",\n      \"Attacking precision\",\n    ],\n    datasets: [\n      {\n        label: props.team1,\n        data: props.data,\n        fill: true,\n        backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n        borderColor: \"#030061\",\n        pointBackgroundColor: \"#030061\",\n        pointBorderColor: \"#fff\",\n        pointHoverBackgroundColor: \"#fff\",\n        pointHoverBorderColor: \"rgb(255, 99, 132)\",\n        borderWidth: 2,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        fill: true,\n        backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n        borderColor: \"#970d00\",\n        pointBackgroundColor: \"#970d00\",\n        pointBorderColor: \"#fff\",\n        pointHoverBackgroundColor: \"#fff\",\n        pointHoverBorderColor: \"rgb(54, 162, 235)\",\n        borderWidth: 2,\n      },\n    ],\n  };\n\n  return <Radar options={options} data={data} />;\n}\n\nexport function BarChart(props) {\n  const datasetOne = props.data1;\n  const datasetTwo = props.data2;\n  const sum = datasetTwo.map(function (num, idx) {\n    return num - datasetOne[idx];\n  });\n\n  const max = Math.max(...sum);\n  const min = Math.min(...sum);\n\n  const largest = findLargestNum(max, min);\n\n  function findLargestNum(numOne, numTwo) {\n    const tempArr = [];\n    const firstNum = Math.abs(numOne);\n    const secondNum = Math.abs(numTwo);\n    tempArr.push(firstNum, secondNum);\n\n    return Math.max(...tempArr);\n  }\n\n  const options = {\n    color: \"#030061\",\n    indexAxis: \"y\",\n    // Elements options apply to all of the options unless overridden in a dataset\n    // In this case, we are setting the border of each horizontal bar to be 2px wide\n    aspectRatio: 1.3,\n    elements: {\n      bar: {\n        borderWidth: 2,\n      },\n    },\n    scales: {\n      x: {\n        min: -4,\n        max: 4,\n        ticks: {\n          display: false,\n        },\n      },\n      y: {\n        ticks: {\n          font: {\n            size: 10,\n          },\n        },\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: false,\n      },\n      title: {\n        display: true,\n        text: props.text,\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  const labels = [\n    \"Highest Goals\",\n    \"Fewest Conceeded\",\n    \"PPG\",\n    \"Highest XG\",\n    \"Fewest XG Conceeded\",\n    \"Shots On Target\",\n    \"Dangerous Attacks\",\n    \"Av. Possession\",\n    \"Home/Away Goal Diff\",\n    \"Corners\",\n  ];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        // label: 'Dataset 1',\n        legend: {\n          display: false,\n        },\n        data: sum,\n        backgroundColor(context) {\n          const index = context.dataIndex;\n          const value = context.dataset.data[index];\n          return value < 0 ? \"#030061\" : \"#970d00\";\n        },\n      },\n    ],\n  };\n\n  return <Bar options={options} data={data} />;\n}\n\nexport function BarChartTwo(props) {\n  const dataset = [props.data1, props.data2]\n\n  const options = {\n    color: \"#030061\",\n    indexAxis: \"x\",\n    // Elements options apply to all of the options unless overridden in a dataset\n    // In this case, we are setting the border of each horizontal bar to be 2px wide\n    aspectRatio: 1.3,\n    elements: {\n      bar: {\n        borderWidth: 2,\n      },\n    },\n    scales: {\n      y: {\n        min: -0.8,\n        max: 0.8,\n        ticks: {\n          display: true,\n          font: {\n            size: 10,\n          },\n        },\n      },\n      // y: {\n      //   suggestedMin: -0.8,\n      //   suggestedMax: 0.8,\n      //   ticks: {\n      //     font: {\n      //       size: 10,\n      //     },\n      //   },\n      // },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: true,\n      },\n      title: {\n        display: true,\n        text: [props.text],\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n      subtitle: {\n        display: true,\n        text: \"Green - Improving | Red - Worsening\",\n        color: \"#030061\",\n        font: {\n          size: 12,\n        },\n        padding: {\n          bottom: 10,\n        },\n      },\n    },\n  };\n\n  const labels = [\n    props.homeTeam,\n    props.awayTeam,\n  ];\n\n  const data = {\n    labels: labels,\n    datasets: [\n      {\n        legend: {\n          display: false,\n        },\n        // label: \"XG Recent Swing\",\n        data: dataset,\n        ticks: {\n          font: {\n            size: 14,\n          },\n        },\n        barThickness: 120,\n        backgroundColor(context) {\n          const index = context.dataIndex;\n          const value = context.dataset.data[index];\n          return value < 0 ? \"#730a00\" : \"#016001\";\n        },\n      },\n    ],\n  };\n\n  return <Bar options={options} data={data} />;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SofaLineupsWidget = ({ id, team1, team2, time, homeGoals, awayGoals }) => {\n  const iframeSrc = `https://widgets.sofascore.com/embed/lineups?id=${id}&widgetTheme=light`;\n\n  let differenceInSeconds, minutes\n  const currentTime = new Date().getTime() / 1000;\n  // Calculate the difference in seconds\n    if(time > 0){\n        differenceInSeconds = time - currentTime;\n        minutes = Math.floor(differenceInSeconds / 60);\n    } else {\n        minutes = -99999999\n    }\n\n\n\n  if(team1 === \"N/A\") {\n    return <h6>No lineups available for this match yet</h6>\n  } else if (minutes > 60) {\n    return (\n      <div>\n        <h6>Predicted lineups</h6>\n        <iframe\n          id={`sofa-lineups-embed-${id}`}\n          src={iframeSrc}\n          style={{\n            height: \"786px\",\n            maxWidth: \"800px\",\n            width: \"100%\",\n            border: \"0\",\n          }}\n          scrolling=\"no\"\n          title=\"SofaScore Lineups\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n      </div>\n    );\n  } else if (minutes < 60 && minutes > 0) {\n    return (\n      <div>\n        <h6>Lineups</h6>\n        <iframe\n          id={`sofa-lineups-embed-${id}`}\n          src={iframeSrc}\n          style={{\n            height: \"786px\",\n            maxWidth: \"800px\",\n            width: \"100%\",\n            border: \"0\",\n          }}\n          scrolling=\"no\"\n          title=\"SofaScore Lineups\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n      </div>\n    );\n  } else if (minutes < 0) {\n    return (\n      <div>\n        <div className=\"CurrentScore\">Score: {`${team1}: ${homeGoals} - ${team2}: ${awayGoals}`}</div>\n        <span>Score not live updated</span>\n        <h6 className=\"AttackingMomentum\">Live attacking momentum and goals</h6>\n        <iframe\n          width=\"100%\"\n          height=\"286\"\n          src={`https://widgets.sofascore.com/embed/attackMomentum?id=${id}&widgetTheme=light`}\n          frameborder=\"0\"\n          scrolling=\"no\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n        <h6>Lineups and in-play ratings</h6>\n        <iframe\n          id={`sofa-lineups-embed-${id}`}\n          src={iframeSrc}\n          style={{\n            height: \"786px\",\n            maxWidth: \"800px\",\n            width: \"100%\",\n            border: \"0\",\n          }}\n          scrolling=\"no\"\n          title=\"SofaScore Lineups\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n      </div>\n    );\n  }\n  else {\n    return <h6>{`Lineups coming in approximately ${minutes - 60} minutes`}</h6>;\n  }\n};\n\n\nSofaLineupsWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  team1: PropTypes.string.isRequired,\n  team2: PropTypes.string.isRequired,\n};\n\nexport default SofaLineupsWidget;\n","import ReactDOM from \"react-dom\";\nimport { Button } from \"../components/Button\";\nimport Stats from \"../components/createStatsDiv\";\nimport Div from \"../components/Div\";\nimport { allForm } from \"../logic/getFixtures\";\nimport { getTeamStats } from \"../logic/getTeamStats\";\nimport { getPointsFromLastX } from \"../logic/getScorePredictions\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport GenerateFormSummary from \"../logic/compareFormTrend\";\nimport {\n  Chart,\n  MultilineChart,\n  RadarChart,\n  BarChart,\n  BarChartTwo,\n  DoughnutChart,\n} from \"../components/Chart\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { clicked } from \"../logic/getScorePredictions\";\nimport SofaLineupsWidget from \"../components/SofaScore\";\nimport { arrayOfGames } from \"../logic/getFixtures\";\nimport { userDetail } from \"../logic/authProvider\";\nimport { checkUserPaidStatus } from \"../logic/hasUserPaid\";\nimport {generateAIInsights} from \"../logic/getAIStats\"\n\nexport async function getPointAverage(pointTotal, games) {\n  return pointTotal / games;\n}\n\n\nexport async function calculateAttackingStrength(stats) {\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    // averagePossession: 0.15,\n    \"Average Dangerous Attacks\": 0.05,\n    \"Average Shots\": 0.05,\n    \"Average Shots On Target\": 0.15,\n    \"Average Expected Goals\": 0.15,\n    \"Recent XG\": 0.15,\n    \"Average Goals\": 0.3,\n    Corners: 0,\n    \"Average Shot Value\": 0.1,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    // averagePossession: { min: 25, max: 75 },\n    \"Average Dangerous Attacks\": { min: 25, max: 75 }, // Adjust the max value as needed\n    \"Average Shots\": { min: 4, max: 25 }, // Adjust the max value as needed\n    \"Average Shots On Target\": { min: 3, max: 7 }, // Adjust the max value as needed\n    \"Average Expected Goals\": { min: 0.75, max: 2.25 }, // Adjust the max value as needed\n    \"Recent XG\": { min: 0.5, max: 2.25 }, // Adjust the max value as needed\n    \"Average Goals\": { min: 0, max: 3 }, // Adjust the max value as needed\n    Corners: { min: 2, max: 9 },\n    \"Average Shot Value\": { min: 8.5, max: 13 },\n  };\n\n  // Normalize each metric value and calculate the weighted sum\n  let weightedSum = 0;\n  for (const metric in stats) {\n    if (\n      stats.hasOwnProperty(metric) &&\n      weights.hasOwnProperty(metric) &&\n      ranges.hasOwnProperty(metric)\n    ) {\n      const normalizedValue = Math.max(\n        0,\n        Math.min(\n          1,\n          (stats[metric] - ranges[metric].min) /\n            (ranges[metric].max - ranges[metric].min)\n        )\n      );\n      weightedSum += normalizedValue * weights[metric];\n    } else {\n      console.log(metric);\n    }\n  }\n\n  return parseFloat(weightedSum.toFixed(2));\n}\n\nexport async function calculateDefensiveStrength(stats, normalizedValue = 1) {\n  let normValue = normalizedValue;\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    \"Average XG Against\": 0.2,\n    \"Recent XG Against\": 0.3,\n    \"Average Goals Against\": 0.4,\n    \"Average SOT Against\": 0.1,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    \"Average XG Against\": { min: 0.5, max: 2.25 }, // Adjust the max value as needed\n    \"Recent XG Against\": { min: 0.75, max: 2.25 },\n    \"Average Goals Against\": { min: 0, max: 3 }, // Adjust the max value as needed\n    \"Average SOT Against\": { min: 3, max: 7 },\n  };\n\n  // Normalize each metric value and calculate the weighted sum\n  let weightedSum = 0;\n  for (const metric in stats) {\n    if (\n      stats.hasOwnProperty(metric) &&\n      weights.hasOwnProperty(metric) &&\n      ranges.hasOwnProperty(metric)\n    ) {\n      // Normalize the value and clamp it between 0 and 1\n      let normalizedValue =\n        (stats[metric] - ranges[metric].min) /\n        (ranges[metric].max - ranges[metric].min);\n      normalizedValue = Math.max(0, Math.min(1, normalizedValue));\n\n      // Reverse logic for defensive strength: better defense, lower metric value\n      let val = normValue - normalizedValue;\n\n      // Add the weighted value to the weightedSum\n      weightedSum += val * weights[metric];\n    }\n  }\n\n  return parseFloat(weightedSum.toFixed(2));\n}\n\nexport async function calculateMetricStrength(metricName, metricValue) {\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    averagePossession: 1,\n    xgFor: 1,\n    xgAgainst: 1,\n    directnessOverall: 1,\n    accuracyOverall: 1,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    averagePossession: { min: 20, max: 80 },\n    xgFor: { min: 0.25, max: 2.75 },\n    xgAgainst: { min: 0.25, max: 2.75 },\n    directnessOverall: { min: 0.5, max: 7 },\n    accuracyOverall: { min: 6, max: 14 },\n  };\n\n  // Ensure the metric is valid and exists in the weights and ranges objects\n  if (\n    !weights.hasOwnProperty(metricName) ||\n    !ranges.hasOwnProperty(metricName)\n  ) {\n    throw new Error(\"Invalid metric name or missing normalization range.\");\n  }\n\n  // Normalize the metric value\n  const normalizedValue =\n    (metricValue - ranges[metricName].min) /\n    (ranges[metricName].max - ranges[metricName].min);\n\n  // Calculate the weighted score\n  const weightedScore = normalizedValue * weights[metricName];\n\n  return parseFloat(weightedScore.toFixed(2));\n}\n\n// export async function getDefenceStrength(goalsAgainst) {\n//   let strength;\n//   switch (true) {\n//     case goalsAgainst >= 2.8:\n//       strength = 1;\n//       break;\n//     case goalsAgainst >= 2.5 && goalsAgainst < 2.8:\n//       strength = 2;\n//       break;\n//     case goalsAgainst >= 2.2 && goalsAgainst < 2.5:\n//       strength = 3;\n//       break;\n//     case goalsAgainst >= 1.9 && goalsAgainst < 2.2:\n//       strength = 4;\n//       break;\n//     case goalsAgainst >= 1.6 && goalsAgainst < 1.9:\n//       strength = 5;\n//       break;\n//     case goalsAgainst >= 1.3 && goalsAgainst < 1.6:\n//       strength = 6;\n//       break;\n//     case goalsAgainst >= 1 && goalsAgainst < 1.3:\n//       strength = 7;\n//       break;\n//     case goalsAgainst >= 0.7 && goalsAgainst < 1:\n//       strength = 8;\n//       break;\n//     case goalsAgainst >= 0.4 && goalsAgainst < 0.7:\n//       strength = 9;\n//       break;\n//     case goalsAgainst < 0.4:\n//       strength = 10;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getPossessionStrength(possession) {\n//   let strength;\n//   switch (true) {\n//     case possession >= 68:\n//       strength = 10;\n//       break;\n//     case possession >= 64 && possession < 68:\n//       strength = 9;\n//       break;\n//     case possession >= 60 && possession < 64:\n//       strength = 8;\n//       break;\n//     case possession >= 56 && possession < 60:\n//       strength = 7;\n//       break;\n//     case possession >= 52 && possession < 56:\n//       strength = 6;\n//       break;\n//     case possession >= 48 && possession < 52:\n//       strength = 5;\n//       break;\n//     case possession >= 44 && possession < 48:\n//       strength = 4;\n//       break;\n//     case possession >= 40 && possession < 44:\n//       strength = 3;\n//       break;\n//     case possession >= 35 && possession < 40:\n//       strength = 2;\n//       break;\n//     case possession < 35:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getShotsStrength(Shots) {\n//   let strength;\n//   switch (true) {\n//     case Shots >= 15:\n//       strength = 10;\n//       break;\n//     case Shots >= 14.25 && Shots < 15:\n//       strength = 9;\n//       break;\n//     case Shots >= 13.5 && Shots < 14.25:\n//       strength = 8;\n//       break;\n//     case Shots >= 12.75 && Shots < 13.5:\n//       strength = 7;\n//       break;\n//     case Shots >= 12 && Shots < 12.75:\n//       strength = 6;\n//       break;\n//     case Shots >= 11.25 && Shots < 12:\n//       strength = 5;\n//       break;\n//     case Shots >= 10.5 && Shots < 11.25:\n//       strength = 4;\n//       break;\n//     case Shots >= 9.75 && Shots < 10.5:\n//       strength = 3;\n//       break;\n//     case Shots >= 9 && Shots < 9.75:\n//       strength = 2;\n//       break;\n//     case Shots < 9:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getShotsStrengthHorA(Shots) {\n//   let strength;\n//   switch (true) {\n//     case Shots >= 19.5:\n//       strength = 10;\n//       break;\n//     case Shots >= 18 && Shots < 19.5:\n//       strength = 9;\n//       break;\n//     case Shots >= 17 && Shots < 18:\n//       strength = 8;\n//       break;\n//     case Shots >= 15.5 && Shots < 17:\n//       strength = 7;\n//       break;\n//     case Shots >= 14 && Shots < 15.5:\n//       strength = 6;\n//       break;\n//     case Shots >= 12.5 && Shots < 14:\n//       strength = 5;\n//       break;\n//     case Shots >= 11 && Shots < 12.5:\n//       strength = 4;\n//       break;\n//     case Shots >= 9.5 && Shots < 11:\n//       strength = 3;\n//       break;\n//     case Shots >= 8 && Shots < 9.5:\n//       strength = 2;\n//       break;\n//     case Shots < 8:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGForStrength(XG) {\n//   let strength;\n//   switch (true) {\n//     case XG >= 2.9:\n//       strength = 10;\n//       break;\n//     case XG >= 2.6 && XG < 2.9:\n//       strength = 9;\n//       break;\n//     case XG >= 2.3 && XG < 2.6:\n//       strength = 8;\n//       break;\n//     case XG >= 2 && XG < 2.3:\n//       strength = 7;\n//       break;\n//     case XG >= 1.7 && XG < 2:\n//       strength = 6;\n//       break;\n//     case XG >= 1.4 && XG < 1.7:\n//       strength = 5;\n//       break;\n//     case XG >= 1.1 && XG < 1.4:\n//       strength = 4;\n//       break;\n//     case XG >= 0.8 && XG < 1.1:\n//       strength = 3;\n//       break;\n//     case XG >= 0.5 && XG < 0.8:\n//       strength = 2;\n//       break;\n//     case XG < 0.5:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGAgainstStrength(XGAgainst) {\n//   let strength;\n//   switch (true) {\n//     case XGAgainst >= 2.9:\n//       strength = 1;\n//       break;\n//     case XGAgainst >= 2.6 && XGAgainst < 2.9:\n//       strength = 2;\n//       break;\n//     case XGAgainst >= 2.3 && XGAgainst < 2.6:\n//       strength = 3;\n//       break;\n//     case XGAgainst >= 2 && XGAgainst < 2.3:\n//       strength = 4;\n//       break;\n//     case XGAgainst >= 1.7 && XGAgainst < 2:\n//       strength = 5;\n//       break;\n//     case XGAgainst >= 1.4 && XGAgainst < 1.7:\n//       strength = 6;\n//       break;\n//     case XGAgainst >= 1.1 && XGAgainst < 1.4:\n//       strength = 7;\n//       break;\n//     case XGAgainst >= 0.8 && XGAgainst < 1.1:\n//       strength = 8;\n//       break;\n//     case XGAgainst >= 0.5 && XGAgainst < 0.8:\n//       strength = 9;\n//       break;\n//     case XGAgainst < 0.5:\n//       strength = 10;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGDifferentialStrength(XGDiff) {\n//   let strength;\n//   switch (true) {\n//     case XGDiff >= 1.5:\n//       strength = 10;\n//       break;\n//     case XGDiff >= 1 && XGDiff < 1.5:\n//       strength = 9;\n//       break;\n//     case XGDiff >= 0.5 && XGDiff < 1:\n//       strength = 8;\n//       break;\n//     case XGDiff >= 0.25 && XGDiff < 0.5:\n//       strength = 7;\n//       break;\n//     case XGDiff > 0 && XGDiff < 0.25:\n//       strength = 6;\n//       break;\n//     case XGDiff <= 0 && XGDiff > -0.25:\n//       strength = 5;\n//       break;\n//     case XGDiff <= -0.25 && XGDiff > -0.5:\n//       strength = 4;\n//       break;\n//     case XGDiff <= -0.5 && XGDiff > -1:\n//       strength = 3;\n//       break;\n//     case XGDiff <= -1 && XGDiff > -1.5:\n//       strength = 2;\n//       break;\n//     case XGDiff <= -1.5:\n//       strength = 1;\n//       break;\n//     default:\n//       console.log(\"default clause triggered\");\n//       break;\n//   }\n//   return strength;\n// }\n\nexport async function getXGtoActualDifferentialStrength(XGDiff) {\n  let strength;\n  switch (true) {\n    case XGDiff >= 1.5:\n      strength = 10;\n      break;\n    case XGDiff >= 1 && XGDiff < 1.5:\n      strength = 9;\n      break;\n    case XGDiff >= 0.5 && XGDiff < 1:\n      strength = 8;\n      break;\n    case XGDiff >= 0.25 && XGDiff < 0.5:\n      strength = 7;\n      break;\n    case XGDiff > 0 && XGDiff < 0.25:\n      strength = 6;\n      break;\n    case XGDiff <= 0 && XGDiff > -0.25:\n      strength = 5;\n      break;\n    case XGDiff <= -0.25 && XGDiff > -0.5:\n      strength = 4;\n      break;\n    case XGDiff <= -0.5 && XGDiff > -1:\n      strength = 3;\n      break;\n    case XGDiff <= -1 && XGDiff > -1.5:\n      strength = 2;\n      break;\n    case XGDiff <= -1.5:\n      strength = 1;\n      break;\n    default:\n      strength = 1;\n      break;\n  }\n  return strength;\n}\n\nlet rollingGoalDiffTotalHome = [];\nlet rollingGoalDiffTotalAway = [];\nlet rollingXGDiffTotalHome = [];\nlet rollingXGDiffTotalAway = [];\nlet rollingSOTDiffTotalHome = [];\nlet rollingSOTDiffTotalAway = [];\n\nexport async function createStatsDiv(game, displayBool) {\n  if (game.status !== \"void\") {\n    // takes the displayBool boolean from the fixture onClick and sets the styling of the stats div from there\n    function styling(testBool) {\n      let bool = testBool;\n      if (bool === true && clicked === true) {\n        // set stats element to display flex\n        return { display: \"block\" };\n      } else {\n        // set stats element to display none\n        return { display: \"none\" };\n      }\n    }\n    let style = styling(displayBool);\n\n    if (clicked === false) {\n      alert(\"Tap Get Predictions to fetch all game stats first\");\n    } else {\n      let index = 2;\n      let divider = 10;\n\n      let gameStats = allForm.find((match) => match.id === game.id);\n      const gameArrayHome = [];\n      const gameArrayAway = [];\n      const gameArrayHomeTeamHomeGames = [];\n      const gameArrayAwayTeamAwayGames = [];\n      let goalDiffArrayHome;\n      let goalDiffArrayAway;\n      let xgDiffArrayHome;\n      let xgDiffArrayAway;\n      let sotDiffArrayHome;\n      let sotDiffArrayAway;\n      let latestHomeGoalDiff;\n      let latestAwayGoalDiff;\n\n      var getEMA = (a, r) =>\n        a.reduce(\n          (p, n, i) =>\n            i\n              ? p.concat(\n                  (2 * n) / (r + 1) + (p[p.length - 1] * (r - 1)) / (r + 1)\n                )\n              : p,\n          [a[0]]\n        );\n\n      const homeForm = gameStats.home[index];\n      const awayForm = gameStats.away[index];\n\n      if (displayBool === true) {\n        // let fixtures = await fetch(\n        //   `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${gameStats.leagueId}`\n        // );\n\n        const pos = allLeagueResultsArrayOfObjects\n          .map((i) => i.id)\n          .indexOf(gameStats.leagueId);\n        let matches = allLeagueResultsArrayOfObjects[pos];\n        // await fixtures.json().then((matches) => {\n        const resultHome = matches.fixtures.filter(\n          (game) =>\n            game.home_name === gameStats.home.teamName ||\n            game.away_name === gameStats.home.teamName\n        );\n\n        const resultHomeOnly = matches.fixtures.filter(\n          (game) => game.home_name === gameStats.home.teamName\n        );\n\n        resultHome.sort((a, b) => b.date_unix - a.date_unix);\n        resultHomeOnly.sort((a, b) => b.date_unix - a.date_unix);\n\n        for (let i = 0; i < resultHome.length; i++) {\n          let unixTimestamp = resultHome[i].date_unix;\n          let milliseconds = unixTimestamp * 1000;\n          let dateObject = new Date(milliseconds).toLocaleString(\"en-GB\", {\n            timeZone: \"UTC\",\n          });\n\n          let won;\n          let goalsScored;\n          let goalsConceeded;\n\n          switch (true) {\n            case resultHome[i].home_name === gameStats.home.teamName:\n              switch (true) {\n                case resultHome[i].homeGoalCount > resultHome[i].awayGoalCount:\n                  won = \"W\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                case resultHome[i].homeGoalCount ===\n                  resultHome[i].awayGoalCount:\n                  won = \"D\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                case resultHome[i].homeGoalCount < resultHome[i].awayGoalCount:\n                  won = \"L\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                default:\n                  break;\n              }\n              break;\n            case resultHome[i].away_name === gameStats.home.teamName:\n              switch (true) {\n                case resultHome[i].homeGoalCount > resultHome[i].awayGoalCount:\n                  won = \"L\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                case resultHome[i].homeGoalCount ===\n                  resultHome[i].awayGoalCount:\n                  won = \"D\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                case resultHome[i].homeGoalCount < resultHome[i].awayGoalCount:\n                  won = \"W\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                default:\n                  break;\n              }\n              break;\n            default:\n              break;\n          }\n\n          gameArrayHome.push({\n            id: resultHome[i].id,\n            date: dateObject,\n            homeTeam: resultHome[i].home_name,\n            homeGoals: resultHome[i].homeGoalCount,\n            homeXG: resultHome[i].team_a_xg,\n            homeOdds: resultHome[i].odds_ft_1,\n            awayTeam: resultHome[i].away_name,\n            awayGoals: resultHome[i].awayGoalCount,\n            awayXG: resultHome[i].team_b_xg,\n            awayOdds: resultHome[i].odds_ft_2,\n            won: won,\n            homeShots: resultHome[i].team_a_shots,\n            awayShots: resultHome[i].team_b_shots,\n            homeSot: resultHome[i].team_a_shotsOnTarget,\n            awaySot: resultHome[i].team_b_shotsOnTarget,\n            homeRed: resultHome[i].team_a_red_cards,\n            awayRed: resultHome[i].team_b_red_cards,\n            homePossession: resultHome[i].team_a_possession,\n            awayPossession: resultHome[i].team_b_possession,\n            homeDangerousAttacks: resultHome[i].team_a_dangerous_attacks,\n            awayDangerousAttacks: resultHome[i].team_b_dangerous_attacks,\n            homePPG: resultHome[i].pre_match_teamA_overall_ppg,\n            awayPPG: resultHome[i].pre_match_teamB_overall_ppg,\n            unixTimestamp: resultHome[i].date_unix,\n            goalsFor: goalsScored,\n            goalsAgainst: goalsConceeded,\n            btts:\n              resultHome[i].homeGoalCount > 0 && resultHome[i].awayGoalCount > 0\n                ? \"\\u2714\"\n                : \"\\u2718\",\n          });\n        }\n\n        for (let i = 0; i < resultHomeOnly.length; i++) {\n          let wonHomeOrAwayOnly;\n\n          switch (true) {\n            case resultHomeOnly[i].home_name === gameStats.home.teamName:\n              switch (true) {\n                case resultHomeOnly[i].homeGoalCount >\n                  resultHomeOnly[i].awayGoalCount:\n                  wonHomeOrAwayOnly = \"W\";\n                  gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n                  break;\n                case resultHomeOnly[i].homeGoalCount ===\n                  resultHomeOnly[i].awayGoalCount:\n                  wonHomeOrAwayOnly = \"D\";\n                  gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n                  break;\n                case resultHomeOnly[i].homeGoalCount <\n                  resultHomeOnly[i].awayGoalCount:\n                  wonHomeOrAwayOnly = \"L\";\n                  gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n                  break;\n                default:\n                  break;\n              }\n              break;\n\n            default:\n              break;\n          }\n        }\n\n        goalDiffArrayHome = homeForm.allTeamResults.map(\n          (a) => a.scored - a.conceeded\n        );\n        goalDiffArrayHome = goalDiffArrayHome.reverse();\n        xgDiffArrayHome = homeForm.allTeamResults.map(\n          (a) => a.XG - a.XGAgainst\n        );\n        xgDiffArrayHome = xgDiffArrayHome.reverse();\n\n        sotDiffArrayHome = homeForm.allTeamResults.map(\n          (a) => a.sot - a.sotAgainst\n        );\n        sotDiffArrayHome = sotDiffArrayHome.reverse();\n\n        gameArrayHome.sort((a, b) => b.unixTimestamp - a.unixTimestamp);\n\n        rollingGoalDiffTotalHome = goalDiffArrayHome.map(\n          (\n            (sum) => (value) =>\n              (sum += value)\n          )(0)\n        );\n        rollingXGDiffTotalHome = xgDiffArrayHome.map(\n          (\n            (sum) => (value) =>\n              (sum += value)\n          )(0)\n        );\n        rollingSOTDiffTotalHome = sotDiffArrayHome.map(\n          (\n            (sum) => (value) =>\n              (sum += value)\n          )(0)\n        );\n\n        const resultAway = matches.fixtures.filter(\n          (game) =>\n            game.away_name === gameStats.away.teamName ||\n            game.home_name === gameStats.away.teamName\n        );\n\n        const resultAwayOnly = matches.fixtures.filter(\n          (game) => game.away_name === gameStats.away.teamName\n        );\n\n        resultAway.sort((a, b) => b.date_unix - a.date_unix);\n        resultAwayOnly.sort((a, b) => b.date_unix - a.date_unix);\n\n        for (let i = 0; i < resultAway.length; i++) {\n          let unixTimestamp = resultAway[i].date_unix;\n          let milliseconds = unixTimestamp * 1000;\n          let dateObject = new Date(milliseconds).toLocaleString(\"en-GB\", {\n            timeZone: \"UTC\",\n          });\n\n          let won;\n          let goalsScored;\n          let goalsConceeded;\n\n          switch (true) {\n            case resultAway[i].home_name === gameStats.away.teamName:\n              switch (true) {\n                case resultAway[i].homeGoalCount > resultAway[i].awayGoalCount:\n                  won = \"W\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                case resultAway[i].awayGoalCount ===\n                  resultAway[i].homeGoalCount:\n                  won = \"D\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                case resultAway[i].homeGoalCount < resultAway[i].awayGoalCount:\n                  won = \"L\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                default:\n                  break;\n              }\n              break;\n\n            case resultAway[i].away_name === gameStats.away.teamName:\n              switch (true) {\n                case resultAway[i].homeGoalCount > resultAway[i].awayGoalCount:\n                  won = \"L\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                case resultAway[i].homeGoalCount ===\n                  resultAway[i].awayGoalCount:\n                  won = \"D\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                case resultAway[i].homeGoalCount < resultAway[i].awayGoalCount:\n                  won = \"W\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                default:\n                  break;\n              }\n              break;\n            default:\n              break;\n          }\n\n          gameArrayAway.push({\n            id: resultAway[i].id,\n            date: dateObject,\n            homeTeam: resultAway[i].home_name,\n            homeGoals: resultAway[i].homeGoalCount,\n            homeXG: resultAway[i].team_a_xg,\n            homeOdds: resultAway[i].odds_ft_1,\n            awayTeam: resultAway[i].away_name,\n            awayGoals: resultAway[i].awayGoalCount,\n            awayXG: resultAway[i].team_b_xg,\n            awayOdds: resultAway[i].odds_ft_2,\n            won: won,\n            homeShots: resultAway[i].team_a_shots,\n            awayShots: resultAway[i].team_b_shots,\n            homeSot: resultAway[i].team_a_shotsOnTarget,\n            awaySot: resultAway[i].team_b_shotsOnTarget,\n            homeRed: resultAway[i].team_a_red_cards,\n            awayRed: resultAway[i].team_b_red_cards,\n            homePossession: resultAway[i].team_a_possession,\n            awayPossession: resultAway[i].team_b_possession,\n            homeDangerousAttacks: resultAway[i].team_a_dangerous_attacks,\n            awayDangerousAttacks: resultAway[i].team_b_dangerous_attacks,\n            homePPG: resultAway[i].pre_match_teamA_overall_ppg,\n            awayPPG: resultAway[i].pre_match_teamB_overall_ppg,\n            unixTimestamp: resultAway[i].date_unix,\n            goalsFor: goalsScored,\n            goalsAgainst: goalsConceeded,\n            btts:\n              resultAway[i].homeGoalCount > 0 && resultAway[i].awayGoalCount > 0\n                ? \"\\u2714\"\n                : \"\\u2718\",\n          });\n        }\n\n        for (let i = 0; i < resultAwayOnly.length; i++) {\n          let wonAwayOrAwayOnly;\n\n          switch (true) {\n            case resultAwayOnly[i].away_name === gameStats.away.teamName:\n              switch (true) {\n                case resultAwayOnly[i].awayGoalCount >\n                  resultAwayOnly[i].homeGoalCount:\n                  wonAwayOrAwayOnly = \"W\";\n                  gameArrayAwayTeamAwayGames.push(wonAwayOrAwayOnly);\n                  break;\n                case resultAwayOnly[i].awayGoalCount ===\n                  resultAwayOnly[i].homeGoalCount:\n                  wonAwayOrAwayOnly = \"D\";\n                  gameArrayAwayTeamAwayGames.push(wonAwayOrAwayOnly);\n                  break;\n                case resultAwayOnly[i].awayGoalCount <\n                  resultAwayOnly[i].homeGoalCount:\n                  wonAwayOrAwayOnly = \"L\";\n                  gameArrayAwayTeamAwayGames.push(wonAwayOrAwayOnly);\n                  break;\n                default:\n                  break;\n              }\n              break;\n\n            default:\n              break;\n          }\n        }\n\n        goalDiffArrayAway = awayForm.allTeamResults.map(\n          (a) => a.scored - a.conceeded\n        );\n        goalDiffArrayAway = goalDiffArrayAway.reverse();\n        xgDiffArrayAway = awayForm.allTeamResults.map(\n          (a) => a.XG - a.XGAgainst\n        );\n        xgDiffArrayAway = xgDiffArrayAway.reverse();\n\n        sotDiffArrayAway = awayForm.allTeamResults.map(\n          (a) => a.sot - a.sotAgainst\n        );\n        sotDiffArrayAway = sotDiffArrayAway.reverse();\n\n        gameArrayAway.sort((a, b) => b.unixTimestamp - a.unixTimestamp);\n\n        rollingGoalDiffTotalAway = goalDiffArrayAway.map(\n          (\n            (sum) => (value) =>\n              (sum += value)\n          )(0)\n        );\n        rollingXGDiffTotalAway = xgDiffArrayAway.map(\n          (\n            (sum) => (value) =>\n              (sum += value)\n          )(0)\n        );\n        rollingSOTDiffTotalAway = sotDiffArrayAway.map(\n          (\n            (sum) => (value) =>\n              (sum += value)\n          )(0)\n        );\n        // });\n      }\n\n      const bttsArrayHome = Array.from(gameArrayHome, (x) => x.btts);\n      const bttsArrayAway = Array.from(gameArrayAway, (x) => x.btts);\n      const resultsArrayHome = Array.from(gameArrayHome, (x) => x.won);\n      const resultsArrayAway = Array.from(gameArrayAway, (x) => x.won);\n\n      let homeTeam = gameStats.home.teamName;\n      let awayTeam = gameStats.away.teamName;\n\n      let time = game.time;\n\n      if (homeForm.last3Points === undefined) {\n        homeForm.last3Points = getPointsFromLastX(homeForm.lastThreeForm);\n\n        homeForm.last5Points = getPointsFromLastX(homeForm.LastFiveForm);\n\n        homeForm.last6Points = getPointsFromLastX(homeForm.LastSixForm);\n\n        homeForm.last10Points = getPointsFromLastX(homeForm.LastTenForm);\n\n        homeForm.homePPGame = getPointsFromLastX(homeForm.resultsHome);\n\n        awayForm.last3Points = getPointsFromLastX(awayForm.lastThreeForm);\n\n        awayForm.last5Points = getPointsFromLastX(awayForm.LastFiveForm);\n\n        awayForm.last6Points = getPointsFromLastX(awayForm.LastSixForm);\n\n        awayForm.last10Points = getPointsFromLastX(awayForm.LastTenForm);\n\n        awayForm.awayPPGame = getPointsFromLastX(awayForm.resultsAway);\n      }\n\n      // let homeThreeGameAverage = await getPointAverage(\n      //   homeForm.last3Points,\n      //   3\n      // );\n\n      let homeFiveGameAverage = await getPointAverage(homeForm.last5Points, 5);\n\n      let homeSixGameAverage = await getPointAverage(homeForm.last6Points, 6);\n\n      let homeTenGameAverage = await getPointAverage(homeForm.last10Points, 10);\n\n      homeForm.homePPGAv = await getPointAverage(\n        homeForm.homePPGame,\n        homeForm.resultsHome.length\n      );\n      homeForm.tenGameAv = homeTenGameAverage;\n      homeForm.fiveGameAv = homeFiveGameAverage;\n\n      // let awayThreeGameAverage = await getPointAverage(\n      //   awayForm.last3Points,\n      //   3\n      // );\n\n      let awayFiveGameAverage = await getPointAverage(awayForm.last5Points, 5);\n\n      let awaySixGameAverage = await getPointAverage(awayForm.last6Points, 6);\n\n      let awayTenGameAverage = await getPointAverage(awayForm.last10Points, 10);\n\n      awayForm.awayPPGAv = await getPointAverage(\n        awayForm.awayPPGame,\n        awayForm.resultsAway.length\n      );\n      awayForm.tenGameAv = awayTenGameAverage;\n      awayForm.fiveGameAv = awayFiveGameAverage;\n\n      let paid;\n      if (userDetail) {\n        paid = await checkUserPaidStatus(userDetail.uid);\n      } else {\n        paid = false;\n      }\n\n      async function getPointsFromGames(formArr) {\n        const pairings = {\n          W: 3,\n          D: 1,\n          L: 0,\n        };\n        let newArr = [];\n        let arrayOfIndividualPoints = [];\n        let sum = 0;\n\n        for (let i = 0; i < formArr.length; i++) {\n          sum = sum + pairings[formArr[i]];\n          newArr.push(sum);\n          arrayOfIndividualPoints.push(pairings[formArr[i]]);\n        }\n        return [newArr, arrayOfIndividualPoints];\n      }\n\n      async function getLastGameResult(lastGame) {\n        let text;\n        switch (true) {\n          case lastGame === \"L\":\n            text = \"Lost\";\n            break;\n          case lastGame === \"D\":\n            text = \"Drew\";\n            break;\n          case lastGame === \"W\":\n            text = \"Won\";\n            break;\n          default:\n            break;\n        }\n        return text;\n      }\n\n      let homeFormTrend = [\n        homeFiveGameAverage.toFixed(2),\n        homeTenGameAverage.toFixed(2),\n      ];\n\n      let awayFormTrend = [\n        awayFiveGameAverage.toFixed(2),\n        awayTenGameAverage.toFixed(2),\n      ];\n\n      let formTextStringHome;\n      let formTextStringAway;\n\n      // if (displayBool === true && gameStats.home[2].LeagueOrAll === \"League\") {\n      //   console.log(1)\n      formTextStringHome = await GenerateFormSummary(\n        homeForm,\n        homeForm.tenGameAv,\n        homeForm.fiveGameAv\n      );\n      formTextStringAway = await GenerateFormSummary(\n        awayForm,\n        awayForm.tenGameAv,\n        awayForm.fiveGameAv\n      );\n      // } else {\n      //   console.log(2)\n      //   formTextStringHome = \"\";\n      //   formTextStringAway = \"\";\n      // }\n\n      let favouriteRecordHome, favouriteRecordAway;\n      if (\n        homeForm.underdogCount &&\n        awayForm.underdogCount &&\n        homeForm.favouriteCount &&\n        awayForm.favouriteCount\n      ) {\n        favouriteRecordHome =\n          game.homeOdds < game.awayOdds || game.homeOdds === game.awayOdds\n            ? `${homeForm.teamName} have been favourites ${\n                homeForm.favouriteCount\n              } times. Of these games, they have Won: ${homeForm.oddsReliabilityWin.toFixed(\n                0\n              )}%, Drawn:  ${homeForm.oddsReliabilityDraw.toFixed(\n                0\n              )}%, Lost:  ${homeForm.oddsReliabilityLose.toFixed(0)}%`\n            : `${homeForm.teamName} have been underdogs ${\n                homeForm.underdogCount\n              } times. Of these games, they have Won: ${homeForm.oddsReliabilityWinAsUnderdog.toFixed(\n                0\n              )}%, Drawn:  ${homeForm.oddsReliabilityDrawAsUnderdog.toFixed(\n                0\n              )}%, Lost:  ${homeForm.oddsReliabilityLoseAsUnderdog.toFixed(\n                0\n              )}%`;\n        favouriteRecordAway =\n          game.homeOdds > game.awayOdds || game.homeOdds === game.awayOdds\n            ? `${awayForm.teamName} have been favourites ${\n                awayForm.favouriteCount\n              } times. Of these games, they have Won: ${awayForm.oddsReliabilityWin.toFixed(\n                0\n              )}%, Drawn:  ${awayForm.oddsReliabilityDraw.toFixed(\n                0\n              )}%, Lost:  ${awayForm.oddsReliabilityLose.toFixed(0)}%`\n            : `${awayForm.teamName} have been underdogs ${\n                awayForm.underdogCount\n              } times. Of these games, they have Won: ${awayForm.oddsReliabilityWinAsUnderdog.toFixed(\n                0\n              )}%, Drawn:  ${awayForm.oddsReliabilityDrawAsUnderdog.toFixed(\n                0\n              )}%, Lost:  ${awayForm.oddsReliabilityLoseAsUnderdog.toFixed(\n                0\n              )}%`;\n      } else if (\n        !homeForm.favouriteCount &&\n        awayForm.favouriteCount &&\n        !homeForm.underdogCount &&\n        awayForm.underdogCount\n      ) {\n        favouriteRecordHome =\n          \"No previous fixtures match the profile of this game.\";\n        favouriteRecordAway =\n          game.homeOdds > game.awayOdds || game.homeOdds === game.awayOdds\n            ? `${awayForm.teamName} have been favourites ${\n                awayForm.favouriteCount\n              } times. Of these games, they have Won: ${awayForm.oddsReliabilityWin.toFixed(\n                0\n              )}%, Drawn:  ${awayForm.oddsReliabilityDraw.toFixed(\n                0\n              )}%, Lost:  ${awayForm.oddsReliabilityLose.toFixed(0)}%`\n            : `${awayForm.teamName} have been underdogs ${\n                awayForm.underdogCount\n              } times. Of these games, they have Won: ${awayForm.oddsReliabilityWinAsUnderdog.toFixed(\n                0\n              )}%, Drawn:  ${awayForm.oddsReliabilityDrawAsUnderdog.toFixed(\n                0\n              )}%, Lost:  ${awayForm.oddsReliabilityLoseAsUnderdog.toFixed(\n                0\n              )}%`;\n      } else if (homeForm.oddsReliabilityWin && !awayForm.oddsReliabilityWin) {\n        favouriteRecordHome =\n          game.homeOdds < game.awayOdds || game.homeOdds === game.awayOdds\n            ? `${homeForm.teamName} have been favourites ${\n                homeForm.favouriteCount\n              } times. Of these games, they have Won: ${homeForm.oddsReliabilityWin.toFixed(\n                0\n              )}%, Drawn:  ${homeForm.oddsReliabilityDraw.toFixed(\n                0\n              )}%, Lost:  ${homeForm.oddsReliabilityLose.toFixed(0)}%`\n            : `${homeForm.teamName} have been underdogs ${\n                homeForm.underdogCount\n              } times. Of these games, they have Won: ${homeForm.oddsReliabilityWinAsUnderdog.toFixed(\n                0\n              )}%, Drawn:  ${homeForm.oddsReliabilityDrawAsUnderdog.toFixed(\n                0\n              )}%, Lost:  ${homeForm.oddsReliabilityLoseAsUnderdog.toFixed(\n                0\n              )}%`;\n        favouriteRecordAway =\n          \"No previous fixtures match the profile of this game.\";\n      } else if (!homeForm.oddsReliabilityWin && !awayForm.oddsReliabilityWin) {\n        favouriteRecordHome =\n          \"No previous fixtures match the profile of this game.\";\n        favouriteRecordAway =\n          \"No previous fixtures match the profile of this game.\";\n      }\n\n      // let homeAttackStrength = await getAttackStrength(\n      //   homeForm.ScoredOverall / 10\n      // );\n\n      const attackingMetricsHome = {\n        // averagePossession: homeForm.AveragePossessionOverall,\n        \"Average Dangerous Attacks\": homeForm.AverageDangerousAttacksOverall,\n        \"Average Shots\": homeForm.AverageShots,\n        \"Average Shots On Target\": homeForm.AverageShotsOnTargetOverall,\n        \"Average Expected Goals\": homeForm.XGOverall,\n        \"Recent XG\": homeForm.XGlast5 ? homeForm.XGlast5 : homeForm.XGOverall,\n        \"Average Goals\":\n          homeForm.averageScoredLeague !== undefined &&\n          homeForm.averageScoredLeague !== null\n            ? homeForm.averageScoredLeague\n            : homeForm.ScoredOverall / 10,\n      };\n      const attackingMetricsAway = {\n        // averagePossession: awayForm.AveragePossessionOverall,\n        \"Average Dangerous Attacks\": awayForm.AverageDangerousAttacksOverall,\n        \"Average Shots\": awayForm.AverageShots,\n        \"Average Shots On Target\": awayForm.AverageShotsOnTargetOverall,\n        \"Average Expected Goals\": awayForm.XGOverall,\n        \"Recent XG\": awayForm.XGlast5 ? awayForm.XGlast5 : awayForm.XGOverall,\n        \"Average Goals\":\n          awayForm.averageScoredLeague !== undefined &&\n          awayForm.averageScoredLeague !== null\n            ? awayForm.averageScoredLeague\n            : awayForm.ScoredOverall / 10,\n      };\n\n      const defensiveMetricsHome = {\n        \"Clean Sheet Percentage\": 100 - homeForm.CleanSheetPercentage,\n        \"Average XG Against\": homeForm.XGAgainstAvgOverall,\n        \"Recent XG Against\": homeForm.XGAgainstlast5\n          ? homeForm.XGAgainstlast5\n          : homeForm.XGAgainstAvgOverall,\n        \"Average Goals Against\":\n          homeForm.averageConceededLeague !== undefined &&\n          homeForm.averageConceededLeague !== null\n            ? homeForm.averageConceededLeague\n            : homeForm.ConcededOverall / 10,\n      };\n\n      const defensiveMetricsAway = {\n        \"Clean Sheet Percentage\": 100 - awayForm.CleanSheetPercentage,\n        \"Average XG Against\": awayForm.XGAgainstAvgOverall,\n        \"Recent XG Against\": awayForm.XGAgainstlast5\n          ? awayForm.XGAgainstlast5\n          : awayForm.XGAgainstAvgOverall,\n        \"Average Goals Against\":\n          awayForm.averageConceededLeague !== undefined &&\n          awayForm.averageConceededLeague !== null\n            ? awayForm.averageConceededLeague\n            : awayForm.ConcededOverall / 10,\n      };\n\n      let homeXGRating;\n      let awayXGRating;\n      let homeAttackStrength;\n      let homeAttackStrengthLast5;\n      let homeOnlyAttackStrength;\n      let homeDefenceStrength;\n      let homeDefenceStrengthLast5;\n      let homeOnlyDefenceStrength;\n      let homePossessionStrength;\n      let homePossessionStrengthLast5;\n      let homeOnlyPossessionStrength;\n      let homeXGForStrength;\n      let homeXGForStrengthLast5;\n      let homeOnlyXGForStrength;\n      let homeXGAgainstStrength;\n      let homeXGAgainstStrengthLast5;\n      let homeOnlyXGAgainstStrength;\n      let awayAttackStrength;\n      let awayAttackStrengthLast5;\n      let awayOnlyAttackStrength;\n      let awayDefenceStrength;\n      let awayDefenceStrengthLast5;\n      let awayOnlyDefenceStrength;\n      let awayPossessionStrength;\n      let awayPossessionStrengthLast5;\n      let awayOnlyPossessionStrength;\n      let awayXGForStrength;\n      let awayXGForStrengthLast5;\n      let awayOnlyXGForStrength;\n      let awayXGAgainstStrength;\n      let awayXGAgainstStrengthLast5;\n      let awayOnlyXGAgainstStrength;\n      let homeDirectnessStrength;\n      let homeDirectnessStrengthLast5;\n      let homeOnlyDirectnessStrength;\n      let awayDirectnessStrength;\n      let awayDirectnessStrengthLast5;\n      let awayOnlyDirectnessStrength;\n      let homeAccuracyOverallStrength;\n      let homeAccuracyOverallStrengthLast5;\n      let homeOnlyAccuracyOverallStrength;\n      let awayAccuracyOverallStrength;\n      let awayAccuracyOverallStrengthLast5;\n      let awayOnlyAccuracyOverallStrength;\n\n      if (homeForm.xgForStrength) {\n        console.log(\"not calculating\");\n        homeXGRating = homeForm.XGRating;\n        awayXGRating = awayForm.XGRating;\n        homeAttackStrength = homeForm.attackingStrength;\n        homeAttackStrengthLast5 = homeForm.attackingStrengthLast5;\n        homeOnlyAttackStrength = homeForm.attackingStrengthHomeOnly;\n        homeDefenceStrength = homeForm.defensiveStrength;\n        homeDefenceStrengthLast5 = homeForm.defensiveStrengthLast5;\n        homeOnlyDefenceStrength = homeForm.defensiveStrengthHomeOnly;\n        homePossessionStrength = homeForm.possessionStrength;\n        homePossessionStrengthLast5 = homeForm.possessionStrengthLast5;\n        homeOnlyPossessionStrength = homeForm.possessionStrengthHomeOnly;\n        homeXGForStrength = homeForm.xgForStrength;\n        homeXGForStrengthLast5 = homeForm.xgForStrengthLast5;\n        homeOnlyXGForStrength = homeForm.xgForStrengthHomeOnly;\n        homeXGAgainstStrength = homeForm.xgAgainstStrength;\n        homeXGAgainstStrengthLast5 = homeForm.xgAgainstStrengthLast5;\n        homeOnlyXGAgainstStrength = homeForm.xgAgainstStrengthHomeOnly;\n        homeDirectnessStrength = homeForm.directnessOverallStrength;\n        homeDirectnessStrengthLast5 = homeForm.directnessOverallStrengthLast5;\n        homeOnlyDirectnessStrength = homeForm.directnessHomeStrength;\n        homeAccuracyOverallStrength = homeForm.accuracyOverallStrength;\n        homeAccuracyOverallStrengthLast5 =\n          homeForm.accuracyOverallStrengthLast5;\n        homeOnlyAccuracyOverallStrength = homeForm.accuracyHomeStrength;\n        awayAttackStrength = awayForm.attackingStrength;\n        awayAttackStrengthLast5 = awayForm.attackingStrengthLast5;\n        awayOnlyAttackStrength = awayForm.attackingStrengthAwayOnly;\n        awayDefenceStrength = awayForm.defensiveStrength;\n        awayDefenceStrengthLast5 = awayForm.defensiveStrengthLast5;\n        awayOnlyDefenceStrength = awayForm.defensiveStrengthAwayOnly;\n        awayPossessionStrength = awayForm.possessionStrength;\n        awayPossessionStrengthLast5 = awayForm.possessionStrengthLast5;\n        awayOnlyPossessionStrength = awayForm.possessionStrengthAwayOnly;\n        awayXGForStrength = awayForm.xgForStrength;\n        awayXGForStrengthLast5 = awayForm.xgForStrengthLast5;\n        awayOnlyXGForStrength = awayForm.xgForStrengthAwayOnly;\n        awayXGAgainstStrength = awayForm.xgAgainstStrength;\n        awayXGAgainstStrengthLast5 = awayForm.xgAgainstStrengthLast5;\n        awayOnlyXGAgainstStrength = awayForm.xgAgainstStrengthAwayOnly;\n        awayDirectnessStrength = awayForm.directnessOverallStrength;\n        awayDirectnessStrengthLast5 = awayForm.directnessOverallStrengthLast5;\n        awayOnlyDirectnessStrength = awayForm.directnessAwayStrength;\n        awayAccuracyOverallStrength = awayForm.accuracyOverallStrength;\n        awayAccuracyOverallStrengthLast5 =\n          awayForm.accuracyOverallStrengthLast5;\n        awayOnlyAccuracyOverallStrength = awayForm.accuracyAwayStrength;\n      } else {\n        homeAttackStrength = await calculateAttackingStrength(\n          attackingMetricsHome\n        );\n\n        homeDefenceStrength = await calculateDefensiveStrength(\n          defensiveMetricsHome\n        );\n\n        homePossessionStrength = await calculateMetricStrength(\n          \"averagePossession\",\n          homeForm.AveragePossessionOverall\n        );\n\n        homeXGForStrength = await calculateMetricStrength(\n          \"xgFor\",\n          gameStats.home[2].XGOverall\n        );\n\n        homeXGAgainstStrength = await calculateMetricStrength(\n          \"xgAgainst\",\n          3 - gameStats.home[2].XGAgainstAvgOverall\n        );\n        homeDirectnessStrength = await calculateMetricStrength(\n          \"directnessOverall\",\n          homeForm.directnessOverall\n        );\n        homeAccuracyOverallStrength = await calculateMetricStrength(\n          \"accuracyOverall\",\n          homeForm.avgShotValue\n        );\n\n        awayAttackStrength = await calculateAttackingStrength(\n          attackingMetricsAway\n        );\n        awayDefenceStrength = await calculateDefensiveStrength(\n          defensiveMetricsAway\n        );\n        awayPossessionStrength = await calculateMetricStrength(\n          \"averagePossession\",\n          awayForm.AveragePossessionOverall\n        );\n        awayXGForStrength = await calculateMetricStrength(\n          \"xgFor\",\n          gameStats.away[2].XGOverall\n        );\n\n        awayXGAgainstStrength = await calculateMetricStrength(\n          \"xgAgainst\",\n          3 - gameStats.away[2].XGAgainstAvgOverall\n        );\n        awayDirectnessStrength = await calculateMetricStrength(\n          \"directnessOverall\",\n          awayForm.directnessOverall\n        );\n        awayAccuracyOverallStrength = await calculateMetricStrength(\n          \"accuracyOverall\",\n          awayForm.avgShotValue\n        );\n      }\n\n      let [formPointsHome, testArrayHome] = await getPointsFromGames(\n        gameStats.home[2].WDLRecord\n      );\n      let [formPointsAway, testArrayAway] = await getPointsFromGames(\n        gameStats.away[2].WDLRecord\n      );\n\n      let rollingGoalDiffHome = [\n        (gameStats.home[0].ScoredOverall - gameStats.home[0].ConcededOverall) /\n          10,\n        (gameStats.home[1].ScoredOverall - gameStats.home[1].ConcededOverall) /\n          6,\n        (gameStats.home[2].ScoredOverall - gameStats.home[2].ConcededOverall) /\n          5,\n      ];\n\n      let rollingGoalDiffAway = [\n        (gameStats.away[0].ScoredOverall - gameStats.away[0].ConcededOverall) /\n          10,\n        (gameStats.away[1].ScoredOverall - gameStats.away[1].ConcededOverall) /\n          6,\n        (gameStats.away[2].ScoredOverall - gameStats.away[2].ConcededOverall) /\n          5,\n      ];\n\n\n      // async function generateAIInsights(game) {\n      //   console.log(\"called\")\n      //   // ReactDOM.render(\n      //   //   <Fragment>\n      //   //    <div>Loading...</div>\n      //   //   </Fragment>,\n      //   //   document.getElementById(\"AIInsightsContainer\")\n      //   // );\n\n      //   try {\n      //     const response = await fetch(\n      //       `${process.env.REACT_APP_EXPRESS_SERVER}gemini/${game}`,\n      //       {\n      //         method: \"POST\",\n      //         headers: {\n      //           Accept: \"application/json\",\n      //           \"Content-Type\": \"application/json\",\n      //         },\n      //         body: JSON.stringify(AIPayload),\n      //       }\n      //     );\n\n      //     console.log(\"Raw Response:\", response); // See the raw response\n\n      //     if (!response.ok) {\n      //       // Check for HTTP errors\n      //       throw new Error(`HTTP error! Status: ${response.status}`);\n      //     }\n\n      //     const jsonData = await response.json(); // Parse the response body as JSON\n      //     AIMatchPreview = jsonData;\n      //     console.log(AIMatchPreview)\n      //     const formattedText = await addNewlinesAfterPeriods(AIMatchPreview.matchPreview)\n\n      //     ReactDOM.render(\n      //       <Fragment>\n      //         <h2>Preview</h2>\n      //         <div className=\"AIMatchPreview\">\n      //           {formattedText}\n      //         </div>\n      //         <h2>AI Prediction</h2>\n      //         <div className=\"AIMatchPreview\">{AIMatchPreview.prediction} <i>(may not reflect the view of XGTipping)</i></div>\n      //         <div className=\"AIContainer\">\n      //           <div className=\"HomeAIInsights\">\n      //             <div>\n      //             {AIMatchPreview.homeTeam.summary}\n      //             </div>\n      //           </div>\n      //           <div className=\"AwayAIInsights\">\n      //             <div>\n      //             {AIMatchPreview.awayTeam.summary}\n      //             </div>\n      //           </div>\n      //         </div>\n      //       </Fragment>,\n      //       document.getElementById(\"AIInsightsContainer\")\n      //     );\n      //   } catch (error) {\n      //     console.error(\"Fetch error:\", error); // Handle fetch errors\n      //   }\n      // }\n\n      const formDataMatch = [];\n\n      formDataMatch.push({\n        btts: game.btts_potential,\n      });\n\n      const formDataHome = [];\n\n      formDataHome.push({\n        name: game.homeTeam,\n        Last5: gameStats.home[2].LastFiveForm,\n        LeagueOrAll: gameStats.home[2].LeagueOrAll,\n        AverageGoals: homeForm.ScoredOverall / 10,\n        AverageConceeded: homeForm.ConcededOverall / 10,\n        AverageXG: homeForm.XGOverall,\n        AverageXGConceded: homeForm.XGAgainstAvgOverall,\n        AveragePossession: homeForm.AveragePossessionOverall,\n        AverageShotsOnTarget: homeForm.AverageShotsOnTargetOverall,\n        AverageDangerousAttacks: homeForm.AverageDangerousAttacksOverall,\n        homeOrAway: \"Home\",\n        leaguePosition: homeForm.LeaguePosition,\n        Last5PPG: homeForm.PPG,\n        SeasonPPG: homeForm.SeasonPPG,\n        formRun: homeForm.formRun,\n        goalDifference: homeForm.goalDifference,\n        goalDifferenceHomeOrAway: homeForm.goalDifferenceHomeOrAway,\n        // BttsPercentage: homeForm.BttsPercentage || \"-\",\n        // BttsPercentageHomeOrAway: homeForm.BttsPercentageHomeOrAway || \"-\",\n        CardsTotal: homeForm.CardsTotal || \"-\",\n        CornersAverage: homeForm.AverageCorners || \"-\",\n        FormTextStringHome: formTextStringHome,\n        FavouriteRecord:\n          favouriteRecordHome + `. ${homeForm.reliabilityString}`,\n        BTTSArray: bttsArrayHome,\n        Results: homeForm.resultsAll,\n        ResultsHorA: homeForm.resultsHome.reverse(),\n        XGSwing: homeForm.XGChangeRecently,\n        styleOfPlayOverall: homeForm.styleOfPlayOverall,\n        styleOfPlayHome: homeForm.styleOfPlayHome,\n        // BTTSAll: homeForm.last10btts,\n        // BTTSHorA: homeForm.last10bttsHome,\n      });\n\n      const formDataAway = [];\n\n      formDataAway.push({\n        name: game.awayTeam,\n        Last5: gameStats.away[2].LastFiveForm,\n        LeagueOrAll: gameStats.away[2].LeagueOrAll,\n        AverageGoals: awayForm.ScoredOverall / 10,\n        AverageConceeded: awayForm.ConcededOverall / 10,\n        AverageXG: awayForm.XGOverall,\n        AverageXGConceded: awayForm.XGAgainstAvgOverall,\n        AveragePossession: awayForm.AveragePossessionOverall,\n        AverageShotsOnTarget: awayForm.AverageShotsOnTargetOverall,\n        AverageDangerousAttacks: awayForm.AverageDangerousAttacksOverall,\n        homeOrAway: \"Away\",\n        leaguePosition: awayForm.LeaguePosition,\n        Last5PPG: awayForm.PPG,\n        SeasonPPG: awayForm.SeasonPPG,\n        formRun: awayForm.formRun,\n        goalDifference: awayForm.goalDifference,\n        goalDifferenceHomeOrAway: awayForm.goalDifferenceHomeOrAway,\n        // BttsPercentage: awayForm.BttsPercentage || \"-\",\n        // BttsPercentageHomeOrAway: awayForm.BttsPercentageHomeOrAway || \"-\",\n        CardsTotal: awayForm.CardsTotal || \"-\",\n        CornersAverage: awayForm.AverageCorners || \"-\",\n        FormTextStringAway: formTextStringAway,\n        FavouriteRecord:\n          favouriteRecordAway + `. ${awayForm.reliabilityString}`,\n        BTTSArray: bttsArrayAway,\n        Results: awayForm.resultsAll,\n        ResultsHorA: awayForm.resultsAway.reverse(),\n        XGSwing: awayForm.XGChangeRecently,\n        styleOfPlayOverall: awayForm.styleOfPlayOverall,\n        styleOfPlayAway: awayForm.styleOfPlayAway,\n        // BTTSAll: awayForm.last10btts,\n        // BTTSHorA: awayForm.last10bttsAway,\n      });\n\n      let formArrayHome;\n      let formArrayAway;\n      let chartType;\n\n      if (formPointsHome.length > 1) {\n        formArrayHome = formPointsHome;\n        formArrayAway = formPointsAway;\n        chartType = \"Points over time\";\n      } else {\n        formArrayHome = [\n          homeTenGameAverage,\n          homeSixGameAverage,\n          homeFiveGameAverage,\n        ];\n        formArrayAway = [\n          awayTenGameAverage,\n          awaySixGameAverage,\n          awayFiveGameAverage,\n        ];\n        chartType = \"Rolling average points over last 10\";\n      }\n\n      ReactDOM.render(\n        <div style={style}>\n          <div className=\"H2HStats\" id={`H2HStats${game.id}`}></div>\n          <div className=\"TrendsHome\" id={`TrendsHome${game.id}`}></div>\n          <div className=\"TrendsAway\" id={`TrendsAway${game.id}`}></div>\n        </div>,\n        document.getElementById(\"history\" + homeTeam)\n      );\n\n      //This tournament does not have league positions\n      if (game.leagueName === \"Europe UEFA Women's Euro\") {\n        game.homeTeamHomePosition = \"N/A\";\n        game.awayTeamAwayPosition = \"N/A\";\n      }\n\n      function singleResult(game) {\n        return (\n          <div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeXG}</span>\n              <span className=\"column\">XG</span>\n              <span className=\"column\">{game.awayXG}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeShots}</span>\n              <span className=\"column\">Shots</span>\n              <span className=\"column\">{game.awayShots}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeSot}</span>\n              <span className=\"column\">SOT</span>\n              <span className=\"column\">{game.awaySot}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeDangerousAttacks}</span>\n              <span className=\"column\">Dangerous Attacks</span>\n              <span className=\"column\">{game.awayDangerousAttacks}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homePossession}%</span>\n              <span className=\"column\">Possession</span>\n              <span className=\"column\">{game.awayPossession}%</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeRed}</span>\n              <span className=\"column\">Red cards</span>\n              <span className=\"column\">{game.awayRed}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homePPG}</span>\n              <span className=\"column\">PPG (pre-match)</span>\n              <span className=\"column\">{game.awayPPG}</span>\n            </div>\n          </div>\n        );\n      }\n\n      function singleSimilarResult(game) {\n        return (\n          <div>\n            <div className=\"ResultRowSmallDate\">\n              <span>{game.date}</span>\n            </div>\n            {/* <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.XG}</span>\n              <span className=\"column\">XG</span>\n              <span className=\"column\">{game.XGAgainst}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.sot}</span>\n              <span className=\"column\">SOT</span>\n              <span className=\"column\">{game.sotAgainst}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.possession}%</span>\n              <span className=\"column\">Possession</span>\n              <span className=\"column\">{100 - game.possession}%</span>\n            </div> */}\n          </div>\n        );\n      }\n\n      const overviewHome = gameArrayHome.slice(0, 10).map((game) => (\n        <div>\n          <Collapsable\n            classNameButton=\"ResultButton\"\n            buttonText={\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {game.homeGoals} : {game.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n              </div>\n            }\n            element={singleResult(game)}\n          />\n        </div>\n      ));\n\n      const overviewAway = gameArrayAway.slice(0, 10).map((game) => (\n        <div>\n          <Collapsable\n            classNameButton=\"ResultButton\"\n            buttonText={\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {game.homeGoals} : {game.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n              </div>\n            }\n            element={singleResult(game)}\n          />\n        </div>\n      ));\n\n      let similarGamesHome;\n\n      if (game.simlarGameResultsHome) {\n        similarGamesHome = game.simlarGameResultsHome.reverse().map((game) => (\n          <div>\n            <Collapsable\n              classNameButton=\"ResultButton\"\n              buttonText={\n                <div className={`ResultRowOverviewSmall${game.result}`}>\n                  <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                  <span className=\"columnOverviewScoreSmall\">\n                    {game.homeGoals} : {game.awayGoals}\n                  </span>\n                  <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n                </div>\n              }\n              element={singleSimilarResult(game)}\n            />\n          </div>\n        ));\n      } else {\n        similarGamesHome = (\n          <h4 className=\"NoGames\">No previous games fit this profile</h4>\n        );\n      }\n\n      let similarGamesAway;\n      if (game.simlarGameResultsAway) {\n        similarGamesAway = game.simlarGameResultsAway.reverse().map((game) => (\n          <div>\n            <Collapsable\n              classNameButton=\"ResultButton\"\n              buttonText={\n                <div className={`ResultRowOverviewSmall${game.result}`}>\n                  <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                  <span className=\"columnOverviewScoreSmall\">\n                    {game.homeGoals} : {game.awayGoals}\n                  </span>\n                  <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n                </div>\n              }\n              element={singleSimilarResult(game)}\n            />\n          </div>\n        ));\n      } else {\n        similarGamesAway = <h4>No previous games fit this profile</h4>;\n      }\n\n      function StatsHome() {\n        return (\n          <div className=\"flex-childOne\">\n            <ul style={style}>\n              <Stats\n                style={style}\n                homeOrAway=\"Home\"\n                gameCount={divider}\n                key={formDataHome[0].name}\n                last5={formDataHome[0].Last5}\n                homeOrAwayResults={gameArrayHomeTeamHomeGames}\n                LeagueOrAll={formDataHome[0].LeagueOrAll}\n                className={\"KeyStatsHome\"}\n                name={formDataHome[0].name}\n                goals={homeForm.avgScored}\n                conceeded={homeForm.avgConceeded}\n                XG={homeForm.XGOverall.toFixed(2)}\n                XGConceded={homeForm.XGAgainstAvgOverall.toFixed(2)}\n                XGSwing={homeForm.XGChangeRecently}\n                possession={homeForm.AveragePossessionOverall.toFixed(2)}\n                sot={homeForm.AverageShotsOnTargetOverall.toFixed(2)}\n                dangerousAttacks={\n                  homeForm.AverageDangerousAttacksOverall !== 0\n                    ? homeForm.AverageDangerousAttacksOverall.toFixed(2)\n                    : homeForm.AverageDangerousAttacks\n                }\n                leaguePosition={\n                  formDataHome[0].leaguePosition !== undefined &&\n                  formDataHome[0].leaguePosition !== \"undefined\"\n                    ? formDataHome[0].leaguePosition\n                    : 0\n                }\n                rawPosition={\n                  game.homeRawPosition !== undefined &&\n                  game.homeRawPosition !== \"undefined\"\n                    ? game.homeRawPosition\n                    : 0\n                }\n                homeOrAwayLeaguePosition={\n                  game.homeTeamHomePosition !== undefined &&\n                  game.homeTeamHomePosition !== \"undefined\"\n                    ? game.homeTeamHomePosition\n                    : 0\n                }\n                winPercentage={homeForm.homePPGAv ? homeForm.homePPGAv : \"N/A\"}\n                lossPercentage={\n                  game.homeTeamLossPercentage\n                    ? game.homeTeamLossPercentage\n                    : \"N/A\"\n                }\n                drawPercentage={\n                  game.homeTeamDrawPercentage\n                    ? game.homeTeamDrawPercentage\n                    : \"N/A\"\n                }\n                ppg={formDataHome[0].SeasonPPG}\n                formTrend={[\n                  homeTenGameAverage.toFixed(2),\n                  homeSixGameAverage.toFixed(2),\n                  homeFiveGameAverage.toFixed(2),\n                ]}\n                formRun={homeForm.resultsAll.reverse()}\n                goalDifference={formDataHome[0].goalDifference}\n                goalDifferenceHomeOrAway={\n                  formDataHome[0].goalDifferenceHomeOrAway\n                }\n                BttsPercentage={formDataHome[0].BttsPercentage}\n                BttsPercentageHomeOrAway={\n                  formDataHome[0].BttsPercentageHomeOrAway\n                }\n                BTTSArray={formDataHome[0].BTTSArray}\n                Results={formDataHome[0].Results}\n                ResultsHorA={formDataHome[0].ResultsHorA}\n                CardsTotal={formDataHome[0].CardsTotal}\n                CornersAverage={homeForm.AverageCorners}\n                ScoredBothHalvesPercentage={\n                  formDataHome[0].ScoredBothHalvesPercentage\n                }\n                FormTextString={formDataHome[0].FormTextStringHome}\n                FavouriteRecord={formDataHome[0].FavouriteRecord}\n                StyleOfPlay={formDataHome[0].styleOfPlayOverall}\n                StyleOfPlayHomeOrAway={formDataHome[0].styleOfPlayHome}\n              />\n            </ul>\n          </div>\n        );\n      }\n\n      function StatsAway() {\n        return (\n          <div className=\"flex-childTwo\">\n            <ul style={style}>\n              <Stats\n                style={style}\n                homeOrAway=\"Away\"\n                gameCount={divider}\n                key={formDataAway[0].name}\n                last5={formDataAway[0].Last5}\n                homeOrAwayResults={gameArrayAwayTeamAwayGames}\n                LeagueOrAll={formDataAway[0].LeagueOrAll}\n                className={\"KeyStatsAway\"}\n                classNameTwo={\"FormStatsAway\"}\n                name={formDataAway[0].name}\n                goals={awayForm.avgScored}\n                conceeded={awayForm.avgConceeded}\n                XG={awayForm.XGOverall.toFixed(2)}\n                XGConceded={awayForm.XGAgainstAvgOverall.toFixed(2)}\n                XGSwing={awayForm.XGChangeRecently}\n                //todo add goal diff and btts percentages\n                possession={awayForm.AveragePossessionOverall.toFixed(2)}\n                rawPosition={game.awayRawPosition ? game.awayRawPosition : 0}\n                sot={awayForm.AverageShotsOnTargetOverall.toFixed(2)}\n                dangerousAttacks={\n                  awayForm.AverageDangerousAttacksOverall !== 0\n                    ? awayForm.AverageDangerousAttacksOverall.toFixed(2)\n                    : awayForm.AverageDangerousAttacks\n                }\n                leaguePosition={\n                  formDataAway[0].leaguePosition !== undefined &&\n                  formDataAway[0].leaguePosition !== \"undefined\"\n                    ? formDataAway[0].leaguePosition\n                    : 0\n                }\n                homeOrAwayLeaguePosition={\n                  game.awayTeamAwayPosition !== undefined &&\n                  game.awayTeamAwayPosition !== \"undefinedundefined\"\n                    ? game.awayTeamAwayPosition\n                    : 0\n                }\n                winPercentage={awayForm.awayPPGAv ? awayForm.awayPPGAv : \"N/A\"}\n                lossPercentage={\n                  game.awayTeamLossPercentage\n                    ? game.awayTeamLossPercentage\n                    : \"N/A\"\n                }\n                drawPercentage={\n                  game.awayTeamDrawPercentage\n                    ? game.awayTeamDrawPercentage\n                    : \"N/A\"\n                }\n                ppg={formDataAway[0].SeasonPPG}\n                formTrend={[\n                  awayTenGameAverage.toFixed(2),\n                  awaySixGameAverage.toFixed(2),\n                  awayFiveGameAverage.toFixed(2),\n                ]}\n                formRun={awayForm.resultsAll.reverse()}\n                goalDifference={formDataAway[0].goalDifference}\n                goalDifferenceHomeOrAway={\n                  formDataAway[0].goalDifferenceHomeOrAway\n                }\n                BttsPercentage={formDataAway[0].BttsPercentage}\n                BttsPercentageHomeOrAway={\n                  formDataAway[0].BttsPercentageHomeOrAway\n                }\n                BTTSArray={formDataAway[0].BTTSArray}\n                Results={formDataAway[0].Results}\n                ResultsHorA={formDataAway[0].ResultsHorA}\n                CardsTotal={formDataAway[0].CardsTotal}\n                CornersAverage={awayForm.AverageCorners}\n                ScoredBothHalvesPercentage={\n                  formDataAway[0].ScoredBothHalvesPercentage\n                }\n                FormTextString={formDataAway[0].FormTextStringAway}\n                FavouriteRecord={formDataAway[0].FavouriteRecord}\n                StyleOfPlay={formDataAway[0].styleOfPlayOverall}\n                StyleOfPlayHomeOrAway={formDataAway[0].styleOfPlayAway}\n              />\n            </ul>\n          </div>\n        );\n      }\n\n      let id, team1, team2, timestamp, homeGoals, awayGoals;\n\n      async function getGameIdByHomeTeam(games, homeTeamName) {\n        const matchingGames = games.filter((game) =>\n          game.homeTeam.includes(homeTeamName)\n        );\n        if (matchingGames.length > 0) {\n          return matchingGames[0];\n        } else {\n          return null; // or any other value you prefer to return if no match is found\n        }\n      }\n\n      const matchingGame = await getGameIdByHomeTeam(\n        arrayOfGames,\n        game.homeTeam\n      );\n\n      if (matchingGame) {\n        id = matchingGame.id.toString();\n        team1 = matchingGame.homeTeam;\n        team2 = matchingGame.awayTeam;\n        timestamp = matchingGame.time;\n        homeGoals = matchingGame.homeGoals;\n        awayGoals = matchingGame.awayGoals;\n      } else {\n        id = \"0\";\n        team1 = \"N/A\";\n        team2 = \"N/A\";\n        timestamp = 1;\n        homeGoals = \"-\";\n        awayGoals = \"-\";\n      }\n\n      if (homeForm.completeData === true && game.completeData === true) {\n        ReactDOM.render(\n          <>\n            <div style={style}>\n              <Collapsable\n                buttonText={\"Lineups & match action\"}\n                classNameButton=\"Lineups\"\n                element={\n                  <>\n                    <SofaLineupsWidget\n                      id={id}\n                      team1={team1}\n                      team2={team2}\n                      time={timestamp}\n                      homeGoals={homeGoals}\n                      awayGoals={awayGoals}\n                    ></SofaLineupsWidget>\n                  </>\n                }\n              />\n              <div style={style}>\n                <Div className=\"MatchTime\" text={`Kick off: ${time} GMT`}></Div>\n              </div>\n              <div id=\"AIInsightsContainer\" className=\"AIInsightsContainer\">\n              {!paid ? (\n                <div>Paid feature</div>\n              ) : (\n                <div></div>\n              )}\n                <Button\n                  className=\"AIInsights\"\n                  onClickEvent={() => generateAIInsights(game.id, homeForm, awayForm)}\n                  text={\"Generate AI Insights\"}\n                  disabled={!paid}\n                ></Button>\n              </div>\n              <div className=\"flex-container\">\n                <StatsHome />\n                <StatsAway />\n              </div>\n              <div className=\"Chart\" id={`Chart${game.id}`} style={style}>\n                <RadarChart\n                  title=\"XG Tipping Strength Ratings - All Games\"\n                  data={[\n                    homeAttackStrength,\n                    homeDefenceStrength,\n                    homePossessionStrength,\n                    homeXGForStrength,\n                    homeXGAgainstStrength,\n                    homeDirectnessStrength,\n                    homeAccuracyOverallStrength,\n                  ]}\n                  data2={[\n                    awayAttackStrength,\n                    awayDefenceStrength,\n                    awayPossessionStrength,\n                    awayXGForStrength,\n                    awayXGAgainstStrength,\n                    awayDirectnessStrength,\n                    awayAccuracyOverallStrength,\n                  ]}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                ></RadarChart>\n                <RadarChart\n                  title=\"XG Tipping Strength Ratings - Last 5 games\"\n                  data={[\n                    homeAttackStrengthLast5,\n                    homeDefenceStrengthLast5,\n                    homePossessionStrengthLast5,\n                    homeXGForStrengthLast5,\n                    homeXGAgainstStrengthLast5,\n                    homeDirectnessStrengthLast5,\n                    homeAccuracyOverallStrengthLast5,\n                  ]}\n                  data2={[\n                    awayAttackStrengthLast5,\n                    awayDefenceStrengthLast5,\n                    awayPossessionStrengthLast5,\n                    awayXGForStrengthLast5,\n                    awayXGAgainstStrengthLast5,\n                    awayDirectnessStrengthLast5,\n                    awayAccuracyOverallStrengthLast5,\n                  ]}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                ></RadarChart>\n                <RadarChart\n                  title=\"XG Tipping Strength Ratings - Home/Away Games Only\"\n                  data={[\n                    homeOnlyAttackStrength,\n                    homeOnlyDefenceStrength,\n                    homeOnlyPossessionStrength,\n                    homeOnlyXGForStrength,\n                    homeOnlyXGAgainstStrength,\n                    homeOnlyDirectnessStrength,\n                    homeOnlyAccuracyOverallStrength,\n                  ]}\n                  data2={[\n                    awayOnlyAttackStrength,\n                    awayOnlyDefenceStrength,\n                    awayOnlyPossessionStrength,\n                    awayOnlyXGForStrength,\n                    awayOnlyXGAgainstStrength,\n                    awayOnlyDirectnessStrength,\n                    awayOnlyAccuracyOverallStrength,\n                  ]}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                ></RadarChart>\n                <DoughnutChart\n                  data={[homeForm.XGRating, awayForm.XGRating]}\n                  homeTeam={game.homeTeam}\n                  awayTeam={game.awayTeam}\n                ></DoughnutChart>\n                <BarChartTwo\n                  text=\"Recent XG Differential Swing\"\n                  homeTeam={homeForm.teamName}\n                  awayTeam={awayForm.teamName}\n                  data1={[homeForm.XGChangeRecently.toFixed(2)]}\n                  data2={[awayForm.XGChangeRecently.toFixed(2)]}\n                ></BarChartTwo>\n                <BarChart\n                  text=\"H2H - Home Team | Away Team\"\n                  data1={[\n                    homeForm.avgScored * 2,\n                    awayForm.avgConceeded * 2,\n                    homeForm.avPointsAll * 3,\n                    homeForm.XGOverall * 2,\n                    awayForm.XGAgainstAvgOverall * 2,\n                    homeForm.AverageShotsOnTargetOverall,\n                    homeForm.AverageDangerousAttacksOverall !== 0\n                      ? homeForm.AverageDangerousAttacksOverall / 7.5\n                      : homeForm.AverageDangerousAttacks / 7.5,\n                    homeForm.AveragePossessionOverall / 7.5,\n                    homeForm.goalDifferenceHomeOrAway / 10,\n                    homeForm.AverageCorners,\n                  ]}\n                  data2={[\n                    awayForm.avgScored * 2,\n                    homeForm.avgConceeded * 2,\n                    awayForm.avPointsAll * 3,\n                    awayForm.XGOverall * 2,\n                    homeForm.XGAgainstAvgOverall * 2,\n                    awayForm.AverageShotsOnTargetOverall,\n                    awayForm.AverageDangerousAttacksOverall !== 0\n                      ? awayForm.AverageDangerousAttacksOverall / 7.5\n                      : awayForm.AverageDangerousAttacks / 7.5,\n                    awayForm.AveragePossessionOverall / 7.5,\n                    awayForm.goalDifferenceHomeOrAway / 10,\n                    awayForm.AverageCorners,\n                  ]}\n                ></BarChart>\n                <Chart\n                  height={3}\n                  depth={0}\n                  data1={formArrayHome}\n                  data2={formArrayAway}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                  type={chartType}\n                  tension={0}\n                ></Chart>\n                <MultilineChart\n                  height={\n                    Math.max(\n                      rollingGoalDiffTotalHome[\n                        rollingGoalDiffTotalHome.length - 1\n                      ],\n                      rollingGoalDiffTotalAway[\n                        rollingGoalDiffTotalAway.length - 1\n                      ]\n                    ) > 2\n                      ? Math.max(\n                          rollingGoalDiffTotalHome[\n                            rollingGoalDiffTotalHome.length - 1\n                          ],\n                          rollingGoalDiffTotalAway[\n                            rollingGoalDiffTotalAway.length - 1\n                          ]\n                        )\n                      : 2\n                  }\n                  depth={\n                    Math.min(\n                      rollingGoalDiffTotalHome[\n                        rollingGoalDiffTotalHome.length - 1\n                      ],\n                      rollingGoalDiffTotalAway[\n                        rollingGoalDiffTotalAway.length - 1\n                      ]\n                    ) < -2\n                      ? Math.min(\n                          rollingGoalDiffTotalHome[\n                            rollingGoalDiffTotalHome.length - 1\n                          ],\n                          rollingGoalDiffTotalAway[\n                            rollingGoalDiffTotalAway.length - 1\n                          ]\n                        )\n                      : -2\n                  }\n                  data1={rollingGoalDiffTotalHome}\n                  data2={rollingGoalDiffTotalAway}\n                  data3={rollingXGDiffTotalHome}\n                  data4={rollingXGDiffTotalAway}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                  type={\"Goal/XG difference over time\"}\n                  tension={0.5}\n                ></MultilineChart>\n              </div>\n              <Div\n                text={`Last league games (most recent first)`}\n                className={\"LastGameHeader\"}\n              ></Div>\n              <div className=\"flex-container\">\n                <div className=\"flex-childOneOverviewSmall\">{overviewHome}</div>\n                <div className=\"flex-childTwoOverviewSmall\">{overviewAway}</div>\n              </div>\n              <h2>Results from similar profile games</h2>\n              <span>(Games where each team had similar odds)</span>\n              <h3>Most recent first</h3>\n              <div className=\"flex-container-similar\">\n                <div className=\"flex-childOneOverviewSmall\">\n                  {similarGamesHome}\n                </div>\n                <div className=\"flex-childTwoOverviewSmall\">\n                  {similarGamesAway}\n                </div>\n              </div>\n              <input type=\"hidden\" name=\"IL_IN_ARTICLE\" />\n              <Button\n                className=\"MoreStats\"\n                onClickEvent={() =>\n                  getTeamStats(\n                    game.id,\n                    game.homeTeam,\n                    game.awayTeam,\n                    formDataHome[0].BttsPercentage,\n                    formDataHome[0].BttsPercentageHomeOrAway,\n                    formDataAway[0].BttsPercentage,\n                    formDataAway[0].BttsPercentageHomeOrAway\n                  )\n                }\n                text={\"Fixture trends + AI Preview\"}\n              ></Button>\n            </div>\n          </>,\n          document.getElementById(\"stats\" + homeTeam)\n        );\n      } else if (\n        homeForm.completeData === false ||\n        game.completeData === false\n      ) {\n        ReactDOM.render(\n          <>\n            <div style={style}>\n              <Collapsable\n                buttonText={\"Lineups & match action\"}\n                classNameButton=\"Lineups\"\n                element={\n                  <>\n                    <SofaLineupsWidget\n                      id={id}\n                      team1={team1}\n                      team2={team2}\n                      time={timestamp}\n                      homeGoals={homeGoals}\n                      awayGoals={awayGoals}\n                    ></SofaLineupsWidget>\n                  </>\n                }\n              />\n              <div className=\"Chart\" id={`Chart${game.id}`} style={style}>\n                <RadarChart\n                  title=\"XG Tipping Strength Ratings - All Games\"\n                  data={[\n                    homeAttackStrength,\n                    homeDefenceStrength,\n                    homePossessionStrength,\n                    homeXGForStrength,\n                    homeXGAgainstStrength,\n                    homeDirectnessStrength,\n                    homeAccuracyOverallStrength,\n                  ]}\n                  data2={[\n                    awayAttackStrength,\n                    awayDefenceStrength,\n                    awayPossessionStrength,\n                    awayXGForStrength,\n                    awayXGAgainstStrength,\n                    awayDirectnessStrength,\n                    awayAccuracyOverallStrength,\n                  ]}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                ></RadarChart>\n              </div>\n              <div style={style}>\n                <Div className=\"MatchTime\" text={`Kick off: ${time} GMT`}></Div>\n                {/* <Div\n                  text={`Last league games (most recent first)`}\n                  className={\"LastGameHeader\"}\n                ></Div> */}\n              </div>\n              {/* <div className=\"flex-container\">\n                <div className=\"flex-childOneOverviewSmall\">{overviewHome}</div>\n                <div className=\"flex-childTwoOverviewSmall\">{overviewAway}</div>\n              </div>\n              <div className=\"flex-container\">\n                <StatsHome />\n                <StatsAway />\n              </div> */}\n              <h2>Results from similar profile games</h2>\n              <span>(Games where each team had similar odds)</span>\n              <h3>Most recent first</h3>\n              <div className=\"flex-container-similar\">\n                <div className=\"flex-childOneOverviewSmall\">\n                  {similarGamesHome}\n                </div>\n                <div className=\"flex-childTwoOverviewSmall\">\n                  {similarGamesAway}\n                </div>\n              </div>\n              <input type=\"hidden\" name=\"IL_IN_ARTICLE\" />\n              <Button\n                className=\"MoreStats\"\n                onClickEvent={() =>\n                  getTeamStats(\n                    game.id,\n                    game.homeTeam,\n                    game.awayTeam,\n                    formDataHome[0].BttsPercentage,\n                    formDataHome[0].BttsPercentageHomeOrAway,\n                    formDataAway[0].BttsPercentage,\n                    formDataAway[0].BttsPercentageHomeOrAway\n                  )\n                }\n                text={\"Fixture trends + AI Preview\"}\n              ></Button>\n            </div>\n          </>,\n          document.getElementById(\"stats\" + homeTeam)\n        );\n      } else {\n        ReactDOM.render(\n          <>\n            <div style={style}>\n              <Collapsable\n                buttonText={\"Lineups & match action\"}\n                classNameButton=\"Lineups\"\n                element={\n                  <>\n                    <SofaLineupsWidget\n                      id={id}\n                      team1={team1}\n                      team2={team2}\n                      time={timestamp}\n                      homeGoals={homeGoals}\n                      awayGoals={awayGoals}\n                    ></SofaLineupsWidget>\n                  </>\n                }\n              />\n              <div style={style}>\n                <Div className=\"MatchTime\" text={`Kick off: ${time} GMT`}></Div>\n              </div>\n              <div className=\"flex-container\">\n                <StatsHome />\n                <StatsAway />\n              </div>\n              <Div\n                text={`AI Preview, last league games & h2h records (paid feature only)`}\n                className={\"LastGameHeader\"}\n              ></Div>\n            </div>\n          </>,\n          document.getElementById(\"stats\" + homeTeam)\n        );\n      }\n    }\n\n    // ReactDOM.render(\n    //   <Button\n    //     className=\"MoreStats\"\n    //     style={style}\n    //     onClickEvent={() =>\n    //       getTeamStats(\n    //         game.id,\n    //         game.homeTeam,\n    //         game.awayTeam,\n    //         formDataHome[0].BttsPercentage,\n    //         formDataHome[0].BttsPercentageHomeOrAway,\n    //         formDataAway[0].BttsPercentage,\n    //         formDataAway[0].BttsPercentageHomeOrAway\n    //       )\n    //     }\n    //     text={\"Fixture trends\"}\n    //   ></Button>,\n    //   document.getElementById(`H2HStats${game.id}`)\n    // );\n  }\n}\n","// src/dataSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\n\n// src/dataSlice.js\nconst initialState = {\n  dataHome: localStorage.getItem('homeForm'),\n  dataAway: localStorage.getItem('awayForm'),\n  dataHomeDef: localStorage.getItem('homeFormDef'),\n  dataAwayDef: localStorage.getItem('awayFormDef'),\n  allTeamResultsHome: localStorage.getItem('allTeamResultsHome'),\n  allTeamResultsAway: localStorage.getItem('allTeamResultsAway'),\n  homeDetails:localStorage.getItem('homeDetails'),\n  awayDetails:localStorage.getItem('awayDetails'),\n  fixtureDetails: localStorage.getItem('fixtureDetails')\n};\n\nconst dataSlice = createSlice({\n  name: 'data',\n  initialState,\n  reducers: {\n    setData: (state, action) => {\n      state.data = action.payload;\n    },\n  },\n});\n\nexport const { setData } = dataSlice.actions;\n\nexport default dataSlice.reducer;\n","// src/store.js\nimport { configureStore } from '@reduxjs/toolkit';\nimport dataReducer from './dataSlice'; // Your data reducer\n\nconst store = configureStore({\n  reducer: {\n    data: dataReducer, // Ensure this key matches the key in your initialState\n  },\n});\n\nexport default store;\n","import React, {\n  useState,\n  useEffect,\n  Fragment,\n  useCallback,\n  useMemo,\n} from \"react\";\n// import ReactDOM from \"react-dom\";\nimport { Button } from \"./Button\";\nimport SofaLineupsWidget from \"./SofaScore\";\nimport Div from \"./Div\";\nimport {\n  Chart,\n  MultilineChart,\n  RadarChart,\n  BarChart,\n  BarChartTwo,\n  DoughnutChart,\n} from \"./Chart\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport Stats from \"../components/createStatsDiv\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport { userDetail } from \"../logic/authProvider\";\nimport { clicked, getPointsFromLastX } from \"../logic/getScorePredictions\";\nimport { arrayOfGames } from \"../logic/getFixtures\";\n\nimport { getTeamStats } from \"../logic/getTeamStats\";\nimport { checkUserPaidStatus } from \"../logic/hasUserPaid\";\nimport { getPointAverage } from \"../logic/getStats\";\nimport { allForm } from \"../logic/getFixtures\";\n\nimport {\n  calculateAttackingStrength,\n  calculateDefensiveStrength,\n  calculateMetricStrength,\n} from \"../logic/getStats\";\n\n// let id, team1, team2, timestamp, homeGoals, awayGoals;\n\nfunction GameStats({ game, displayBool }) {\n  function styling(testBool) {\n    let bool = testBool;\n    if (bool === true && clicked === true) {\n      // set stats element to display flex\n      return { display: \"block\" };\n    } else {\n      // set stats element to display none\n      return { display: \"none\" };\n    }\n  }\n  let style = styling(displayBool);\n\n  // State Variables\n  const [isLoading, setIsLoading] = useState(false);\n  const [aiMatchPreview, setAiMatchPreview] = useState(null);\n  const [paid, setPaid] = useState(false);\n  const [hasCompleteData, setHasCompleteData] = useState(false);\n  //   const [homeForm, setHomeForm] = useState(null);\n  //   const [awayForm, setAwayForm] = useState(null);\n  let gameStats = allForm.find((match) => match.id === game.id);\n  const homeForm = gameStats?.home[2];\n  const awayForm = gameStats?.away[2];\n  console.log(homeForm.teamName)\n  console.log(homeForm)\n  console.log(awayForm)\n\n  //   const [id, setId] = useState(\"0\");\n  //   const [team1, setTeam1] = useState(\"N/A\");\n  //   const [team2, setTeam2] = useState(\"N/A\");\n  //   const [time, setTime] = useState(1);\n  //   const [timestamp, setTimestamp] = useState(1);\n  //   const [homeGoals, setHomeGoals] = useState(\"-\");\n  //   const [awayGoals, setAwayGoals] = useState(\"-\");\n  //   const [rollingGoalDiffTotalHome, setRollingGoalDiffTotalHome] = useState([]);\n  //   const [rollingGoalDiffTotalAway, setRollingGoalDiffTotalAway] = useState([]);\n  //   const [rollingXGDiffTotalHome, setRollingXGDiffTotalHome] = useState([]);\n  //   const [rollingXGDiffTotalAway, setRollingXGDiffTotalAway] = useState([]);\n\n  // These need to be declared *outside* the `if` block\n  //   const [formDataHome, setFormDataHome] = useState([]);\n  //   const [formDataAway, setFormDataAway] = useState([]);\n  const [matchingGame, setMatchingGame] = useState(null); // State for the game\n  const [id, setId] = useState(\"0\");\n  const [team1, setTeam1] = useState(\"N/A\");\n  const [team2, setTeam2] = useState(\"N/A\");\n  const [timestamp, setTimestamp] = useState(1);\n  const [homeGoals, setHomeGoals] = useState(\"-\");\n  const [awayGoals, setAwayGoals] = useState(\"-\");\n  const [homeXGRating, setHomeXGRating] = useState(0);\n  const [awayXGRating, setAwayXGRating] = useState(0);\n  const [homeAttackStrength, setHomeAttackStrength] = useState(0);\n  const [homeDefenceStrength, setHomeDefenceStrength] = useState(0);\n  const [homePossessionStrength, setHomePossessionStrength] = useState(0);\n  const [homeXGForStrength, setHomeXGForStrength] = useState(0);\n  const [homeXGAgainstStrength, setHomeXGAgainstStrength] = useState(0);\n  const [homeDirectnessStrength, setHomeDirectnessStrength] = useState(0);\n  const [homeAccuracyOverallStrength, setHomeAccuracyOverallStrength] =\n    useState(0);\n  const [awayAttackStrength, setAwayAttackStrength] = useState(0);\n  const [awayDefenceStrength, setAwayDefenceStrength] = useState(0);\n  const [awayPossessionStrength, setAwayPossessionStrength] = useState(0);\n  const [awayXGForStrength, setAwayXGForStrength] = useState(0);\n  const [awayXGAgainstStrength, setAwayXGAgainstStrength] = useState(0);\n  const [awayDirectnessStrength, setAwayDirectnessStrength] = useState(0);\n  const [awayAccuracyOverallStrength, setAwayAccuracyOverallStrength] =\n    useState(0);\n  //   const [formArrayHome, setFormArrayHome] = useState([]);\n  //   const [formArrayAway, setFormArrayAway] = useState([]);\n  //   const [chartType, setChartType] = useState(\"\");\n  const [rollingSOTDiffTotalHome, setRollingSOTDiffTotalHome] = useState([]);\n  const [similarGamesHome, setSimilarGamesHome] = useState([]);\n  const [similarGamesAway, setSimilarGamesAway] = useState([]);\n\n  const [homeFiveGameAverage, setHomeFiveGameAverage] = useState(0);\n  const [homeSixGameAverage, setHomeSixGameAverage] = useState(0);\n  const [homeTenGameAverage, setHomeTenGameAverage] = useState(0);\n  const [awayFiveGameAverage, setAwayFiveGameAverage] = useState(0);\n  const [awaySixGameAverage, setAwaySixGameAverage] = useState(0);\n  const [awayTenGameAverage, setAwayTenGameAverage] = useState(0);\n  const [homeAttackStrengthLast5, setHomeAttackStrengthLast5] = useState(\n    homeForm?.attackingStrengthLast5 || null\n  );\n  const [homeOnlyAttackStrength, setHomeOnlyAttackStrength] = useState(\n    homeForm?.attackingStrengthHomeOnly || null\n  );\n  const [homeDefenceStrengthLast5, setHomeDefenceStrengthLast5] = useState(\n    homeForm?.defensiveStrengthLast5 || null\n  );\n  const [homeOnlyDefenceStrength, setHomeOnlyDefenceStrength] = useState(\n    homeForm?.defensiveStrengthHomeOnly || null\n  );\n  const [homePossessionStrengthLast5, setHomePossessionStrengthLast5] =\n    useState(homeForm?.possessionStrengthLast5 || null);\n  const [homeOnlyPossessionStrength, setHomeOnlyPossessionStrength] = useState(\n    homeForm?.possessionStrengthHomeOnly || null\n  );\n  const [homeXGForStrengthLast5, setHomeXGForStrengthLast5] = useState(\n    homeForm?.xgForStrengthLast5 || null\n  );\n  const [homeOnlyXGForStrength, setHomeOnlyXGForStrength] = useState(\n    homeForm?.xgForStrengthHomeOnly || null\n  );\n  const [homeXGAgainstStrengthLast5, setHomeXGAgainstStrengthLast5] = useState(\n    homeForm?.xgAgainstStrengthLast5 || null\n  );\n  const [homeOnlyXGAgainstStrength, setHomeOnlyXGAgainstStrength] = useState(\n    homeForm?.xgAgainstStrengthHomeOnly || null\n  );\n  const [homeDirectnessStrengthLast5, setHomeDirectnessStrengthLast5] =\n    useState(homeForm?.directnessOverallStrengthLast5 || null);\n  const [homeOnlyDirectnessStrength, setHomeOnlyDirectnessStrength] = useState(\n    homeForm?.directnessHomeStrength || null\n  );\n  const [\n    homeAccuracyOverallStrengthLast5,\n    setHomeAccuracyOverallStrengthLast5,\n  ] = useState(homeForm?.accuracyOverallStrengthLast5 || null);\n  const [homeOnlyAccuracyOverallStrength, setHomeOnlyAccuracyOverallStrength] =\n    useState(homeForm?.accuracyHomeStrength || null);\n  const [awayAttackStrengthLast5, setAwayAttackStrengthLast5] = useState(\n    awayForm?.attackingStrengthLast5 || null\n  );\n  const [awayOnlyAttackStrength, setAwayOnlyAttackStrength] = useState(\n    awayForm?.attackingStrengthAwayOnly || null\n  );\n  const [awayDefenceStrengthLast5, setAwayDefenceStrengthLast5] = useState(\n    awayForm?.defensiveStrengthLast5 || null\n  );\n  const [awayOnlyDefenceStrength, setAwayOnlyDefenceStrength] = useState(\n    awayForm?.defensiveStrengthAwayOnly || null\n  );\n  const [awayPossessionStrengthLast5, setAwayPossessionStrengthLast5] =\n    useState(awayForm?.possessionStrengthLast5 || null);\n  const [awayOnlyPossessionStrength, setAwayOnlyPossessionStrength] = useState(\n    awayForm?.possessionStrengthAwayOnly || null\n  );\n  const [awayXGForStrengthLast5, setAwayXGForStrengthLast5] = useState(\n    awayForm?.xgForStrengthLast5 || null\n  );\n  const [awayOnlyXGForStrength, setAwayOnlyXGForStrength] = useState(\n    awayForm?.xgForStrengthAwayOnly || null\n  );\n  const [awayXGAgainstStrengthLast5, setAwayXGAgainstStrengthLast5] = useState(\n    awayForm?.xgAgainstStrengthLast5 || null\n  );\n  const [awayOnlyXGAgainstStrength, setAwayOnlyXGAgainstStrength] = useState(\n    awayForm?.xgAgainstStrengthAwayOnly || null\n  );\n  const [awayDirectnessStrengthLast5, setAwayDirectnessStrengthLast5] =\n    useState(awayForm?.directnessOverallStrengthLast5 || null);\n  const [awayOnlyDirectnessStrength, setAwayOnlyDirectnessStrength] = useState(\n    awayForm?.directnessAwayStrength || null\n  );\n  const [\n    awayAccuracyOverallStrengthLast5,\n    setAwayAccuracyOverallStrengthLast5,\n  ] = useState(awayForm?.accuracyOverallStrengthLast5 || null);\n  const [awayOnlyAccuracyOverallStrength, setAwayOnlyAccuracyOverallStrength] =\n    useState(awayForm?.accuracyAwayStrength || null);\n\n  const [gameArrayHomeTeamHomeGames, setGameArrayHomeTeamHomeGames] = useState(\n    []\n  );\n  const [gameArrayAwayTeamAwayGames, setGameArrayAwayTeamAwayGames] = useState(\n    []\n  );\n\n  const [firstRenderDone, setFirstRenderDone] = useState(false);\n  const [rollingSOTDiffTotalAway, setRollingSOTDiffTotalAway] = useState([]);\n  const [divider, setDivider] = useState(0);\n  const gameArrayHome = [];\n  const gameArrayAway = [];\n  let goalDiffArrayHome;\n  let goalDiffArrayAway;\n  let xgDiffArrayHome;\n  let xgDiffArrayAway;\n  let sotDiffArrayHome;\n  let sotDiffArrayAway;\n  let rollingGoalDiffTotalHome = [];\n  let rollingGoalDiffTotalAway = [];\n  let rollingXGDiffTotalHome = [];\n  let rollingXGDiffTotalAway = [];\n  let ref;\n\n  const pos = allLeagueResultsArrayOfObjects\n    .map((i) => i.id)\n    .indexOf(gameStats.leagueId);\n  let matches = allLeagueResultsArrayOfObjects[pos];\n  const resultHome = matches.fixtures.filter(\n    (game) =>\n      game.home_name === gameStats.home.teamName ||\n      game.away_name === gameStats.home.teamName\n  );\n\n  const resultHomeOnly = matches.fixtures.filter(\n    (game) => game.home_name === gameStats.home.teamName\n  );\n\n  resultHome.sort((a, b) => b.date_unix - a.date_unix);\n  resultHomeOnly.sort((a, b) => b.date_unix - a.date_unix);\n\n  const resultAway = matches.fixtures.filter(\n    (game) =>\n      game.away_name === gameStats.away.teamName ||\n      game.home_name === gameStats.away.teamName\n  );\n\n  const resultAwayOnly = matches.fixtures.filter(\n    (game) => game.away_name === gameStats.away.teamName\n  );\n\n  resultAway.sort((a, b) => b.date_unix - a.date_unix);\n  resultAwayOnly.sort((a, b) => b.date_unix - a.date_unix);\n\n  for (let i = 0; i < resultHome.length; i++) {\n    let unixTimestamp = resultHome[i].date_unix;\n    let milliseconds = unixTimestamp * 1000;\n    let dateObject = new Date(milliseconds).toLocaleString(\"en-GB\", {\n      timeZone: \"UTC\",\n    });\n\n    let won;\n    let goalsScored;\n    let goalsConceeded;\n\n    switch (true) {\n      case resultHome[i].home_name === gameStats.home.teamName:\n        switch (true) {\n          case resultHome[i].homeGoalCount > resultHome[i].awayGoalCount:\n            won = \"W\";\n            goalsScored = resultHome[i].homeGoalCount;\n            goalsConceeded = resultHome[i].awayGoalCount;\n            break;\n          case resultHome[i].homeGoalCount === resultHome[i].awayGoalCount:\n            won = \"D\";\n            goalsScored = resultHome[i].homeGoalCount;\n            goalsConceeded = resultHome[i].awayGoalCount;\n            break;\n          case resultHome[i].homeGoalCount < resultHome[i].awayGoalCount:\n            won = \"L\";\n            goalsScored = resultHome[i].homeGoalCount;\n            goalsConceeded = resultHome[i].awayGoalCount;\n            break;\n          default:\n            break;\n        }\n        break;\n      case resultHome[i].away_name === gameStats.home.teamName:\n        switch (true) {\n          case resultHome[i].homeGoalCount > resultHome[i].awayGoalCount:\n            won = \"L\";\n            goalsScored = resultHome[i].homeGoalCount;\n            goalsConceeded = resultHome[i].awayGoalCount;\n            break;\n          case resultHome[i].homeGoalCount === resultHome[i].awayGoalCount:\n            won = \"D\";\n            goalsScored = resultHome[i].homeGoalCount;\n            goalsConceeded = resultHome[i].awayGoalCount;\n            break;\n          case resultHome[i].homeGoalCount < resultHome[i].awayGoalCount:\n            won = \"W\";\n            goalsScored = resultHome[i].homeGoalCount;\n            goalsConceeded = resultHome[i].awayGoalCount;\n            break;\n          default:\n            break;\n        }\n        break;\n      default:\n        break;\n    }\n\n    gameArrayHome.push({\n      id: resultHome[i].id,\n      date: dateObject,\n      homeTeam: resultHome[i].home_name,\n      homeGoals: resultHome[i].homeGoalCount,\n      homeXG: resultHome[i].team_a_xg,\n      homeOdds: resultHome[i].odds_ft_1,\n      awayTeam: resultHome[i].away_name,\n      awayGoals: resultHome[i].awayGoalCount,\n      awayXG: resultHome[i].team_b_xg,\n      awayOdds: resultHome[i].odds_ft_2,\n      won: won,\n      homeShots: resultHome[i].team_a_shots,\n      awayShots: resultHome[i].team_b_shots,\n      homeSot: resultHome[i].team_a_shotsOnTarget,\n      awaySot: resultHome[i].team_b_shotsOnTarget,\n      homeRed: resultHome[i].team_a_red_cards,\n      awayRed: resultHome[i].team_b_red_cards,\n      homePossession: resultHome[i].team_a_possession,\n      awayPossession: resultHome[i].team_b_possession,\n      homeDangerousAttacks: resultHome[i].team_a_dangerous_attacks,\n      awayDangerousAttacks: resultHome[i].team_b_dangerous_attacks,\n      homePPG: resultHome[i].pre_match_teamA_overall_ppg,\n      awayPPG: resultHome[i].pre_match_teamB_overall_ppg,\n      unixTimestamp: resultHome[i].date_unix,\n      goalsFor: goalsScored,\n      goalsAgainst: goalsConceeded,\n      btts:\n        resultHome[i].homeGoalCount > 0 && resultHome[i].awayGoalCount > 0\n          ? \"\\u2714\"\n          : \"\\u2718\",\n    });\n  }\n\n  for (let i = 0; i < resultHomeOnly.length; i++) {\n    let wonHomeOrAwayOnly;\n\n    switch (true) {\n      case resultHomeOnly[i].home_name === gameStats.home.teamName:\n        switch (true) {\n          case resultHomeOnly[i].homeGoalCount >\n            resultHomeOnly[i].awayGoalCount:\n            wonHomeOrAwayOnly = \"W\";\n            gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n            break;\n          case resultHomeOnly[i].homeGoalCount ===\n            resultHomeOnly[i].awayGoalCount:\n            wonHomeOrAwayOnly = \"D\";\n            gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n            break;\n          case resultHomeOnly[i].homeGoalCount <\n            resultHomeOnly[i].awayGoalCount:\n            wonHomeOrAwayOnly = \"L\";\n            gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n            break;\n          default:\n            break;\n        }\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  for (let i = 0; i < resultAway.length; i++) {\n    let unixTimestamp = resultAway[i].date_unix;\n    let milliseconds = unixTimestamp * 1000;\n    let dateObject = new Date(milliseconds).toLocaleString(\"en-GB\", {\n      timeZone: \"UTC\",\n    });\n\n    let won;\n    let goalsScored;\n    let goalsConceeded;\n\n    switch (true) {\n      case resultAway[i].home_name === gameStats.away.teamName:\n        switch (true) {\n          case resultAway[i].homeGoalCount > resultAway[i].awayGoalCount:\n            won = \"W\";\n            goalsScored = resultAway[i].awayGoalCount;\n            goalsConceeded = resultAway[i].homeGoalCount;\n            break;\n          case resultAway[i].awayGoalCount === resultAway[i].homeGoalCount:\n            won = \"D\";\n            goalsScored = resultAway[i].awayGoalCount;\n            goalsConceeded = resultAway[i].homeGoalCount;\n            break;\n          case resultAway[i].homeGoalCount < resultAway[i].awayGoalCount:\n            won = \"L\";\n            goalsScored = resultAway[i].awayGoalCount;\n            goalsConceeded = resultAway[i].homeGoalCount;\n            break;\n          default:\n            break;\n        }\n        break;\n\n      case resultAway[i].away_name === gameStats.away.teamName:\n        switch (true) {\n          case resultAway[i].homeGoalCount > resultAway[i].awayGoalCount:\n            won = \"L\";\n            goalsScored = resultAway[i].awayGoalCount;\n            goalsConceeded = resultAway[i].homeGoalCount;\n            break;\n          case resultAway[i].homeGoalCount === resultAway[i].awayGoalCount:\n            won = \"D\";\n            goalsScored = resultAway[i].awayGoalCount;\n            goalsConceeded = resultAway[i].homeGoalCount;\n            break;\n          case resultAway[i].homeGoalCount < resultAway[i].awayGoalCount:\n            won = \"W\";\n            goalsScored = resultAway[i].awayGoalCount;\n            goalsConceeded = resultAway[i].homeGoalCount;\n            break;\n          default:\n            break;\n        }\n        break;\n      default:\n        break;\n    }\n\n    gameArrayAway.push({\n      id: resultAway[i].id,\n      date: dateObject,\n      homeTeam: resultAway[i].home_name,\n      homeGoals: resultAway[i].homeGoalCount,\n      homeXG: resultAway[i].team_a_xg,\n      homeOdds: resultAway[i].odds_ft_1,\n      awayTeam: resultAway[i].away_name,\n      awayGoals: resultAway[i].awayGoalCount,\n      awayXG: resultAway[i].team_b_xg,\n      awayOdds: resultAway[i].odds_ft_2,\n      won: won,\n      homeShots: resultAway[i].team_a_shots,\n      awayShots: resultAway[i].team_b_shots,\n      homeSot: resultAway[i].team_a_shotsOnTarget,\n      awaySot: resultAway[i].team_b_shotsOnTarget,\n      homeRed: resultAway[i].team_a_red_cards,\n      awayRed: resultAway[i].team_b_red_cards,\n      homePossession: resultAway[i].team_a_possession,\n      awayPossession: resultAway[i].team_b_possession,\n      homeDangerousAttacks: resultAway[i].team_a_dangerous_attacks,\n      awayDangerousAttacks: resultAway[i].team_b_dangerous_attacks,\n      homePPG: resultAway[i].pre_match_teamA_overall_ppg,\n      awayPPG: resultAway[i].pre_match_teamB_overall_ppg,\n      unixTimestamp: resultAway[i].date_unix,\n      goalsFor: goalsScored,\n      goalsAgainst: goalsConceeded,\n      btts:\n        resultAway[i].homeGoalCount > 0 && resultAway[i].awayGoalCount > 0\n          ? \"\\u2714\"\n          : \"\\u2718\",\n    });\n  }\n\n  for (let i = 0; i < resultAwayOnly.length; i++) {\n    let wonAwayOrAwayOnly;\n\n    switch (true) {\n      case resultAwayOnly[i].away_name === gameStats.away.teamName:\n        switch (true) {\n          case resultAwayOnly[i].awayGoalCount >\n            resultAwayOnly[i].homeGoalCount:\n            wonAwayOrAwayOnly = \"W\";\n            gameArrayAwayTeamAwayGames.push(wonAwayOrAwayOnly);\n            break;\n          case resultAwayOnly[i].awayGoalCount ===\n            resultAwayOnly[i].homeGoalCount:\n            wonAwayOrAwayOnly = \"D\";\n            gameArrayAwayTeamAwayGames.push(wonAwayOrAwayOnly);\n            break;\n          case resultAwayOnly[i].awayGoalCount <\n            resultAwayOnly[i].homeGoalCount:\n            wonAwayOrAwayOnly = \"L\";\n            gameArrayAwayTeamAwayGames.push(wonAwayOrAwayOnly);\n            break;\n          default:\n            break;\n        }\n        break;\n\n      default:\n        break;\n    }\n  }\n\n\n  goalDiffArrayHome = homeForm.allTeamResults.map(\n    (a) => a.scored - a.conceeded\n  );\n  xgDiffArrayHome = homeForm.allTeamResults.map((a) => a.XG - a.XGAgainst);\n\n  rollingGoalDiffTotalHome = goalDiffArrayHome.map(\n    (\n      (sum) => (value) =>\n        (sum += value)\n    )(0)\n  );\n  rollingXGDiffTotalHome = xgDiffArrayHome.map(\n    (\n      (sum) => (value) =>\n        (sum += value)\n    )(0)\n  );\n\n\n\n  goalDiffArrayAway = awayForm.allTeamResults.map(\n    (a) => a.scored - a.conceeded\n  );\n  xgDiffArrayAway = awayForm.allTeamResults.map((a) => a.XG - a.XGAgainst);\n\n  rollingGoalDiffTotalAway = goalDiffArrayAway.map(\n    (\n      (sum) => (value) =>\n        (sum += value)\n    )(0)\n  );\n  rollingXGDiffTotalAway = xgDiffArrayAway.map(\n    (\n      (sum) => (value) =>\n        (sum += value)\n    )(0)\n  );\n\n  async function getGameIdByHomeTeam(games, homeTeamName) {\n    const matchingGames = games.filter((game) =>\n      game.homeTeam.includes(homeTeamName)\n    );\n    if (matchingGames.length > 0) {\n      return matchingGames[0];\n    } else {\n      return null; // or any other value you prefer to return if no match is found\n    }\n  }\n\n  async function getRefStats(refId, compId) {\n    try {\n  \n      const response = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}referee/${refId}`\n      );\n  \n      if (!response.ok) {\n        // Handle HTTP errors (e.g., 404, 500)\n        console.error(`HTTP error! Status: ${response.status}`);\n        return null; // Or throw an error to be caught later\n      }\n  \n      const refData = await response.json(); // Parse the JSON response\n  \n      // Access the array within the 'data' property\n      const dataArray = refData.data;\n  \n      if (!Array.isArray(dataArray)) {\n        console.error(\"Error: Expected 'data' property to be an array.\");\n        return null;\n      }\n  \n      // Find the object with the matching competition_id\n      const filteredObject = dataArray.find(\n        (item) => item.competition_id === compId\n      );\n\n      const distilledRefData = {\n        appearances_overall: filteredObject.appearances_overall,\n        full_name: filteredObject.full_name,\n        cards_per_match_overall: filteredObject.cards_per_match_overall,\n        goals_per_match_overall: filteredObject.goals_per_match_overall,\n        min_per_card_overall: filteredObject.min_per_card_overall,\n        nationality: filteredObject.nationality,\n        over25_cards_percentage_overall: filteredObject.over25_cards_percentage_overall,\n        over35_cards_percentage_overall: filteredObject.over35_cards_percentage_overall,\n        penalties_given_per_match_overall: filteredObject.penalties_given_per_match_overall,\n        red_cards_overall: filteredObject.red_cards_overall\n        \n      }\n  \n      return distilledRefData; // Returns the found object, or undefined if not found\n    } catch (error) {\n      console.error(\"Error fetching or processing data:\", error);\n      return null; // Or handle the error as appropriate for your application (e.g., display an error message to the user)\n    }\n  }\n\n  useEffect(() => {\n    async function fetchMatchingGame() {\n      try {\n        const gameInfo = await getGameIdByHomeTeam(arrayOfGames, game.homeTeam); // Await here\n        setMatchingGame(gameInfo);\n      } catch (error) {\n        console.error(\"Error fetching game info:\", error);\n        // Handle the error appropriately (e.g., set an error state)\n      }\n    }\n\n    fetchMatchingGame(); // Call the async function\n  }, [arrayOfGames, game.homeTeam]); // Dependencies for useEffect\n\n  useEffect(() => {\n    if (matchingGame) {\n      setId(matchingGame.id.toString());\n      setTeam1(matchingGame.homeTeam);\n      setTeam2(matchingGame.awayTeam);\n      setTimestamp(matchingGame.time);\n      setHomeGoals(matchingGame.homeGoals);\n      setAwayGoals(matchingGame.awayGoals);\n    } else {\n      setId(\"0\");\n      setTeam1(\"N/A\");\n      setTeam2(\"N/A\");\n      setTimestamp(1);\n      setHomeGoals(\"-\");\n      setAwayGoals(\"-\");\n    }\n  }, [matchingGame]); //This useEffect hook runs whenever matchingGame changes.\n\n  function singleResult(game) {\n    return (\n      <div>\n        <div className=\"ResultRowSmall\">\n          <span className=\"column\">{game.homeXG}</span>\n          <span className=\"column\">XG</span>\n          <span className=\"column\">{game.awayXG}</span>\n        </div>\n        <div className=\"ResultRowSmall\">\n          <span className=\"column\">{game.homeShots}</span>\n          <span className=\"column\">Shots</span>\n          <span className=\"column\">{game.awayShots}</span>\n        </div>\n        <div className=\"ResultRowSmall\">\n          <span className=\"column\">{game.homeSot}</span>\n          <span className=\"column\">SOT</span>\n          <span className=\"column\">{game.awaySot}</span>\n        </div>\n        <div className=\"ResultRowSmall\">\n          <span className=\"column\">{game.homeDangerousAttacks}</span>\n          <span className=\"column\">Dangerous Attacks</span>\n          <span className=\"column\">{game.awayDangerousAttacks}</span>\n        </div>\n        <div className=\"ResultRowSmall\">\n          <span className=\"column\">{game.homePossession}%</span>\n          <span className=\"column\">Possession</span>\n          <span className=\"column\">{game.awayPossession}%</span>\n        </div>\n        <div className=\"ResultRowSmall\">\n          <span className=\"column\">{game.homeRed}</span>\n          <span className=\"column\">Red cards</span>\n          <span className=\"column\">{game.awayRed}</span>\n        </div>\n        <div className=\"ResultRowSmall\">\n          <span className=\"column\">{game.homePPG}</span>\n          <span className=\"column\">PPG (pre-match)</span>\n          <span className=\"column\">{game.awayPPG}</span>\n        </div>\n      </div>\n    );\n  }\n\n  function singleSimilarResult(game) {\n    return (\n      <div>\n        <div className=\"ResultRowSmallDate\">\n          <span>{game.date}</span>\n        </div>\n      </div>\n    );\n  }\n\n  function StatsHomeComponent() {\n    console.log(formDataHome[0].ResultsHorA)\n    if (!homeForm) return null;\n    return (\n      <div className=\"flex-childOne\">\n        <ul style={style}>\n          <Stats\n            style={style}\n            homeOrAway=\"Home\"\n            gameCount={divider}\n            key={formDataHome[0].name}\n            last5={formDataHome[0].Last5}\n            // homeOrAwayResults={gameArrayHomeTeamHomeGames}\n            LeagueOrAll={formDataHome[0].LeagueOrAll}\n            className={\"KeyStatsHome\"}\n            name={formDataHome[0].name}\n            goals={homeForm.avgScored}\n            conceeded={homeForm.avgConceeded}\n            XG={homeForm.XGOverall.toFixed(2)}\n            XGConceded={homeForm.XGAgainstAvgOverall.toFixed(2)}\n            XGSwing={homeForm.XGChangeRecently}\n            possession={homeForm.AveragePossessionOverall.toFixed(2)}\n            sot={homeForm.AverageShotsOnTargetOverall.toFixed(2)}\n            dangerousAttacks={\n              homeForm.AverageDangerousAttacksOverall !== 0\n                ? homeForm.AverageDangerousAttacksOverall.toFixed(2)\n                : homeForm.AverageDangerousAttacks\n            }\n            leaguePosition={\n              formDataHome[0].leaguePosition !== undefined &&\n              formDataHome[0].leaguePosition !== \"undefined\"\n                ? formDataHome[0].leaguePosition\n                : 0\n            }\n            rawPosition={\n              game.homeRawPosition !== undefined &&\n              game.homeRawPosition !== \"undefined\"\n                ? game.homeRawPosition\n                : 0\n            }\n            homeOrAwayLeaguePosition={\n              game.homeTeamHomePosition !== undefined &&\n              game.homeTeamHomePosition !== \"undefined\"\n                ? game.homeTeamHomePosition\n                : 0\n            }\n            winPercentage={homeForm.homePPGAv ? homeForm.homePPGAv : \"N/A\"}\n            lossPercentage={\n              game.homeTeamLossPercentage ? game.homeTeamLossPercentage : \"N/A\"\n            }\n            drawPercentage={\n              game.homeTeamDrawPercentage ? game.homeTeamDrawPercentage : \"N/A\"\n            }\n            ppg={formDataHome[0].SeasonPPG}\n            formTrend={[\n              homeTenGameAverage.toFixed(2),\n              homeSixGameAverage.toFixed(2),\n              homeFiveGameAverage.toFixed(2),\n            ]}\n            formRun={homeForm.resultsAll}\n            goalDifference={formDataHome[0].goalDifference}\n            goalDifferenceHomeOrAway={formDataHome[0].goalDifferenceHomeOrAway}\n            BttsPercentage={formDataHome[0].BttsPercentage}\n            BttsPercentageHomeOrAway={formDataHome[0].BttsPercentageHomeOrAway}\n            BTTSArray={formDataHome[0].BTTSArray}\n            Results={formDataHome[0].Results}\n            ResultsHorA={formDataHome[0].ResultsHorA}\n            CardsTotal={formDataHome[0].CardsTotal}\n            CornersAverage={homeForm.AverageCorners}\n            ScoredBothHalvesPercentage={\n              formDataHome[0].ScoredBothHalvesPercentage\n            }\n            // FormTextString={formDataHome[0].FormTextStringHome}\n            FavouriteRecord={formDataHome[0].FavouriteRecord}\n            StyleOfPlay={formDataHome[0].styleOfPlayOverall}\n            StyleOfPlayHomeOrAway={formDataHome[0].styleOfPlayHome}\n          />\n        </ul>\n      </div>\n    );\n  }\n\n  // Component: StatsAway (Render Away Team Stats)\n  function StatsAwayComponent() {\n    if (!awayForm) return null;\n    return (\n      <div className=\"flex-childTwo\">\n        <ul style={style}>\n          <Stats\n            style={style}\n            homeOrAway=\"Away\"\n            gameCount={divider}\n            key={formDataAway[0].name}\n            last5={formDataAway[0].Last5}\n            // homeOrAwayResults={gameArrayAwayTeamAwayGames}\n            LeagueOrAll={formDataAway[0].LeagueOrAll}\n            className={\"KeyStatsAway\"}\n            classNameTwo={\"FormStatsAway\"}\n            name={formDataAway[0].name}\n            goals={awayForm.avgScored}\n            conceeded={awayForm.avgConceeded}\n            XG={awayForm.XGOverall.toFixed(2)}\n            XGConceded={awayForm.XGAgainstAvgOverall.toFixed(2)}\n            XGSwing={awayForm.XGChangeRecently}\n            //todo add goal diff and btts percentages\n            possession={awayForm.AveragePossessionOverall.toFixed(2)}\n            rawPosition={game.awayRawPosition ? game.awayRawPosition : 0}\n            sot={awayForm.AverageShotsOnTargetOverall.toFixed(2)}\n            dangerousAttacks={\n              awayForm.AverageDangerousAttacksOverall !== 0\n                ? awayForm.AverageDangerousAttacksOverall.toFixed(2)\n                : awayForm.AverageDangerousAttacks\n            }\n            leaguePosition={\n              formDataAway[0].leaguePosition !== undefined &&\n              formDataAway[0].leaguePosition !== \"undefined\"\n                ? formDataAway[0].leaguePosition\n                : 0\n            }\n            homeOrAwayLeaguePosition={\n              game.awayTeamAwayPosition !== undefined &&\n              game.awayTeamAwayPosition !== \"undefinedundefined\"\n                ? game.awayTeamAwayPosition\n                : 0\n            }\n            winPercentage={awayForm.awayPPGAv ? awayForm.awayPPGAv : \"N/A\"}\n            lossPercentage={\n              game.awayTeamLossPercentage ? game.awayTeamLossPercentage : \"N/A\"\n            }\n            drawPercentage={\n              game.awayTeamDrawPercentage ? game.awayTeamDrawPercentage : \"N/A\"\n            }\n            ppg={formDataAway[0].SeasonPPG}\n            formTrend={[\n              awayTenGameAverage.toFixed(2),\n              awaySixGameAverage.toFixed(2),\n              awayFiveGameAverage.toFixed(2),\n            ]}\n            formRun={awayForm.resultsAll}\n            goalDifference={formDataAway[0].goalDifference}\n            goalDifferenceHomeOrAway={formDataAway[0].goalDifferenceHomeOrAway}\n            BttsPercentage={formDataAway[0].BttsPercentage}\n            BttsPercentageHomeOrAway={formDataAway[0].BttsPercentageHomeOrAway}\n            BTTSArray={formDataAway[0].BTTSArray}\n            Results={formDataAway[0].Results}\n            ResultsHorA={formDataAway[0].ResultsHorA}\n            CardsTotal={formDataAway[0].CardsTotal}\n            CornersAverage={awayForm.AverageCorners}\n            ScoredBothHalvesPercentage={\n              formDataAway[0].ScoredBothHalvesPercentage\n            }\n            // FormTextString={formDataAway[0].FormTextStringAway}\n            FavouriteRecord={formDataAway[0].FavouriteRecord}\n            StyleOfPlay={formDataAway[0].styleOfPlayOverall}\n            StyleOfPlayHomeOrAway={formDataAway[0].styleOfPlayAway}\n          />\n        </ul>\n      </div>\n    );\n  }\n  gameArrayHome.sort((a, b) => b.unixTimestamp - a.unixTimestamp);\n  gameArrayAway.sort((a, b) => b.unixTimestamp - a.unixTimestamp);\n\n\n  const bttsArrayHome = Array.from(gameArrayHome, (x) => x.btts);\n  const bttsArrayAway = Array.from(gameArrayAway, (x) => x.btts);\n\n  console.log(gameArrayHome)\n\n  const overviewHome = gameArrayHome.slice(0, 10).map((game) => (\n    <div>\n      <Collapsable\n        classNameButton=\"ResultButton\"\n        buttonText={\n          <div className=\"ResultRowOverviewSmall\">\n            <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n            <span className=\"columnOverviewScoreSmall\">\n              {game.homeGoals} : {game.awayGoals}\n            </span>\n            <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n          </div>\n        }\n        element={singleResult(game)}\n      />\n    </div>\n  ));\n\n  const overviewAway = gameArrayAway.slice(0, 10).map((game) => (\n    <div>\n      <Collapsable\n        classNameButton=\"ResultButton\"\n        buttonText={\n          <div className=\"ResultRowOverviewSmall\">\n            <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n            <span className=\"columnOverviewScoreSmall\">\n              {game.homeGoals} : {game.awayGoals}\n            </span>\n            <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n          </div>\n        }\n        element={singleResult(game)}\n      />\n    </div>\n  ));\n\n  const formDataMatch = [];\n\n  formDataMatch.push({\n    btts: game.btts_potential,\n  });\n\n  const formDataHome = [];\n\n  formDataHome.push({\n    name: game.homeTeam,\n    Last5: gameStats.home[2].LastFiveForm,\n    LeagueOrAll: gameStats.home[2].LeagueOrAll,\n    AverageGoals: homeForm.ScoredOverall / 10,\n    AverageConceeded: homeForm.ConcededOverall / 10,\n    AverageXG: homeForm.XGOverall,\n    AverageXGConceded: homeForm.XGAgainstAvgOverall,\n    AveragePossession: homeForm.AveragePossessionOverall,\n    AverageShotsOnTarget: homeForm.AverageShotsOnTargetOverall,\n    AverageDangerousAttacks: homeForm.AverageDangerousAttacksOverall,\n    homeOrAway: \"Home\",\n    leaguePosition: homeForm.LeaguePosition,\n    Last5PPG: homeForm.PPG,\n    SeasonPPG: homeForm.SeasonPPG,\n    formRun: homeForm.formRun,\n    goalDifference: homeForm.goalDifference,\n    goalDifferenceHomeOrAway: homeForm.goalDifferenceHomeOrAway,\n    // BttsPercentage: homeForm.BttsPercentage || \"-\",\n    // BttsPercentageHomeOrAway: homeForm.BttsPercentageHomeOrAway || \"-\",\n    CardsTotal: homeForm.CardsTotal || \"-\",\n    CornersAverage: homeForm.AverageCorners || \"-\",\n    // FormTextStringHome: formTextStringHome,\n    // FavouriteRecord:\n    //   favouriteRecordHome + `. ${homeForm.reliabilityString}`,\n    BTTSArray: bttsArrayHome,\n    Results: homeForm.resultsAll,\n    ResultsHorA: homeForm.resultsHome,\n    XGSwing: homeForm.XGChangeRecently,\n    styleOfPlayOverall: homeForm.styleOfPlayOverall,\n    styleOfPlayHome: homeForm.styleOfPlayHome,\n    // BTTSAll: homeForm.last10btts,\n    // BTTSHorA: homeForm.last10bttsHome,\n  });\n\n  const formDataAway = [];\n\n  formDataAway.push({\n    name: game.awayTeam,\n    Last5: gameStats.away[2].LastFiveForm,\n    LeagueOrAll: gameStats.away[2].LeagueOrAll,\n    AverageGoals: awayForm.ScoredOverall / 10,\n    AverageConceeded: awayForm.ConcededOverall / 10,\n    AverageXG: awayForm.XGOverall,\n    AverageXGConceded: awayForm.XGAgainstAvgOverall,\n    AveragePossession: awayForm.AveragePossessionOverall,\n    AverageShotsOnTarget: awayForm.AverageShotsOnTargetOverall,\n    AverageDangerousAttacks: awayForm.AverageDangerousAttacksOverall,\n    homeOrAway: \"Away\",\n    leaguePosition: awayForm.LeaguePosition,\n    Last5PPG: awayForm.PPG,\n    SeasonPPG: awayForm.SeasonPPG,\n    formRun: awayForm.formRun,\n    goalDifference: awayForm.goalDifference,\n    goalDifferenceHomeOrAway: awayForm.goalDifferenceHomeOrAway,\n    // BttsPercentage: awayForm.BttsPercentage || \"-\",\n    // BttsPercentageHomeOrAway: awayForm.BttsPercentageHomeOrAway || \"-\",\n    CardsTotal: awayForm.CardsTotal || \"-\",\n    CornersAverage: awayForm.AverageCorners || \"-\",\n    // FormTextStringAway: formTextStringAway,\n    // FavouriteRecord:\n    //   favouriteRecordAway + `. ${awayForm.reliabilityString}`,\n    BTTSArray: bttsArrayAway,\n    Results: awayForm.resultsAll,\n    ResultsHorA: awayForm.resultsAway,\n    XGSwing: awayForm.XGChangeRecently,\n    styleOfPlayOverall: awayForm.styleOfPlayOverall,\n    styleOfPlayAway: awayForm.styleOfPlayAway,\n    // BTTSAll: awayForm.last10btts,\n    // BTTSHorA: awayForm.last10bttsAway,\n  });\n\n  function getPointsFromGames(formArr) {\n    const pairings = {\n      W: 3,\n      D: 1,\n      L: 0,\n    };\n    let newArr = [];\n    let arrayOfIndividualPoints = [];\n    let sum = 0;\n\n    for (let i = 0; i < formArr.length; i++) {\n      sum = sum + pairings[formArr[i]];\n      newArr.push(sum);\n      arrayOfIndividualPoints.push(pairings[formArr[i]]);\n    }\n    return [newArr, arrayOfIndividualPoints];\n  }\n\n  let time = game.time;\n\n  if (homeForm.last3Points === undefined) {\n    homeForm.last3Points = getPointsFromLastX(homeForm.lastThreeForm);\n\n    homeForm.last5Points = getPointsFromLastX(homeForm.LastFiveForm);\n\n    homeForm.last6Points = getPointsFromLastX(homeForm.LastSixForm);\n\n    homeForm.last10Points = getPointsFromLastX(homeForm.LastTenForm);\n\n    homeForm.homePPGame = getPointsFromLastX(homeForm.resultsHome);\n\n    awayForm.last3Points = getPointsFromLastX(awayForm.lastThreeForm);\n\n    awayForm.last5Points = getPointsFromLastX(awayForm.LastFiveForm);\n\n    awayForm.last6Points = getPointsFromLastX(awayForm.LastSixForm);\n\n    awayForm.last10Points = getPointsFromLastX(awayForm.LastTenForm);\n\n    awayForm.awayPPGame = getPointsFromLastX(awayForm.resultsAway);\n  }\n\n  const [showAIInsights, setShowAIInsights] = useState(false);\n\n  let formArrayHome;\n  let formArrayAway;\n  let chartType;\n\n  // Side Effect: Initialize component\n  useEffect(() => {\n    async function checkPaymentStatus() {\n      if (userDetail?.uid) {\n        try {\n          const paymentStatus = await checkUserPaidStatus(userDetail.uid);\n          setPaid(paymentStatus);\n        } catch (error) {\n          console.error(\"Error checking payment status:\", error);\n          setPaid(false); // Set to false in case of an error\n        }\n      } else {\n        setPaid(false); // Set to false if there's no user ID\n      }\n    }\n\n    checkPaymentStatus(); // Call the function\n  }, [userDetail]); // Dependency on userDetail\n\n  // Get all necessary data\n\n  useEffect(() => {\n    // useEffect to fetch and process game data based on props\n    async function fetchData() {\n      if (game.status === \"void\") return; // Exit if game is void\n      if (!clicked) {\n        alert(\"Tap Get Predictions to fetch all game stats first\");\n        // return;\n      }\n      if (!allForm || !allLeagueResultsArrayOfObjects) {\n        // return;\n      }\n\n      let index = 2;\n      let gameStats = allForm.find((match) => match.id === game.id);\n      if (!gameStats) {\n        console.warn(\"No game stats found for game id:\", game.id);\n        // return;\n      }\n\n      try {\n        const pos = allLeagueResultsArrayOfObjects\n          .map((i) => i.id)\n          .indexOf(gameStats.leagueId);\n        let matches = allLeagueResultsArrayOfObjects[pos];\n        const resultHome = matches.fixtures.filter(\n          (game) =>\n            game.home_name === gameStats.home.teamName ||\n            game.away_name === gameStats.home.teamName\n        );\n\n        const resultHomeOnly = matches.fixtures.filter(\n          (game) => game.home_name === gameStats.home.teamName\n        );\n        const resultAway = matches.fixtures.filter(\n          (game) =>\n            game.away_name === gameStats.away.teamName ||\n            game.home_name === gameStats.away.teamName\n        );\n\n        const resultAwayOnly = matches.fixtures.filter(\n          (game) => game.away_name === gameStats.away.teamName\n        );\n\n        const homeForm = gameStats.home[index];\n        const awayForm = gameStats.away[index];\n        let id = game.id;\n\n        const attackingMetricsHome = {\n          \"Average Dangerous Attacks\":\n            gameStats?.home[index]?.AverageDangerousAttacksOverall || 0,\n          \"Average Shots\": gameStats?.home[index]?.AverageShots || 0,\n          \"Average Shots On Target\":\n            gameStats?.home[index]?.AverageShotsOnTargetOverall || 0,\n          \"Average Expected Goals\": gameStats?.home[index]?.XGOverall || 0,\n          \"Recent XG\": gameStats?.home[index]?.XGlast5\n            ? gameStats?.home[index]?.XGlast5\n            : gameStats?.home[index]?.XGOverall || 0,\n          \"Average Goals\":\n            gameStats?.home[index]?.averageScoredLeague !== undefined &&\n            gameStats?.home[index]?.averageScoredLeague !== null\n              ? gameStats?.home[index]?.averageScoredLeague\n              : gameStats?.home[index]?.ScoredOverall / 10,\n        };\n        const attackingMetricsAway = {\n          // averagePossession: awayForm.AveragePossessionOverall,\n          \"Average Dangerous Attacks\":\n            gameStats?.away[index]?.AverageDangerousAttacksOverall || 0,\n          \"Average Shots\": gameStats?.away[index]?.AverageShots || 0,\n          \"Average Shots On Target\":\n            gameStats?.away[index]?.AverageShotsOnTargetOverall || 0,\n          \"Average Expected Goals\": gameStats?.away[index]?.XGOverall || 0,\n          \"Recent XG\": gameStats?.away[index]?.XGlast5\n            ? gameStats?.away[index]?.XGlast5\n            : gameStats?.away[index]?.XGOverall || 0,\n          \"Average Goals\":\n            gameStats?.away[index]?.averageScoredLeague !== undefined &&\n            gameStats?.away[index]?.averageScoredLeague !== null\n              ? gameStats?.away[index]?.averageScoredLeague\n              : gameStats?.away[index]?.ScoredOverall / 10,\n        };\n\n        const defensiveMetricsHome = {\n          \"Clean Sheet Percentage\":\n            100 - gameStats?.home[index]?.CleanSheetPercentage || 0,\n          \"Average XG Against\":\n            gameStats?.home[index]?.XGAgainstAvgOverall || 0,\n          \"Recent XG Against\": gameStats?.home[index]?.XGAgainstlast5\n            ? gameStats?.home[index]?.XGAgainstlast5\n            : gameStats?.home[index]?.XGAgainstAvgOverall || 0,\n          \"Average Goals Against\":\n            gameStats?.home[index]?.averageConceededLeague !== undefined &&\n            gameStats?.home[index]?.averageConceededLeague !== null\n              ? gameStats?.home[index]?.averageConceededLeague\n              : gameStats?.home[index]?.ConcededOverall / 10,\n        };\n\n        const defensiveMetricsAway = {\n          \"Clean Sheet Percentage\":\n            100 - gameStats?.away[index]?.CleanSheetPercentage || 0,\n          \"Average XG Against\":\n            gameStats?.away[index]?.XGAgainstAvgOverall || 0,\n          \"Recent XG Against\": gameStats?.away[index]?.XGAgainstlast5\n            ? gameStats?.away[index]?.XGAgainstlast5\n            : gameStats?.away[index]?.XGAgainstAvgOverall || 0,\n          \"Average Goals Against\":\n            gameStats?.away[index]?.averageConceededLeague !== undefined &&\n            gameStats?.away[index]?.averageConceededLeague !== null\n              ? gameStats?.away[index]?.averageConceededLeague\n              : gameStats?.away[index]?.ConcededOverall / 10,\n        };\n\n        const attackH = await calculateAttackingStrength(attackingMetricsHome);\n\n        setHomeAttackStrength(attackH);\n\n        const defenceH = await calculateDefensiveStrength(defensiveMetricsHome);\n\n        setHomeDefenceStrength(defenceH);\n\n        const attackA = await calculateAttackingStrength(attackingMetricsAway);\n\n        setAwayAttackStrength(attackA);\n\n        const defenceA = await calculateDefensiveStrength(defensiveMetricsAway);\n\n        setAwayDefenceStrength(defenceA);\n\n        const possH = await calculateMetricStrength(\n          \"averagePossession\",\n          homeForm.AveragePossessionOverall\n        );\n\n        setHomePossessionStrength(possH);\n\n        const possA = await calculateMetricStrength(\n          \"averagePossession\",\n          awayForm.AveragePossessionOverall\n        );\n\n        setAwayPossessionStrength(possA);\n\n        // \"Directness\",\n        // \"Attacking precision\",\n        const XGForH = await calculateMetricStrength(\n          \"xgFor\",\n          homeForm.XGOverall\n        );\n\n        setHomeXGForStrength(XGForH);\n\n        const XGForA = await calculateMetricStrength(\n          \"xgFor\",\n          awayForm.XGOverall\n        );\n\n        setAwayXGForStrength(XGForA);\n\n        const XGAgH = await calculateMetricStrength(\n          \"xgAgainst\",\n          3 - homeForm.XGAgainstAvgOverall\n        );\n\n        setHomeXGAgainstStrength(XGAgH);\n\n        const XGAgA = await calculateMetricStrength(\n          \"xgAgainst\",\n          3 - awayForm.XGAgainstAvgOverall\n        );\n\n        setAwayXGAgainstStrength(XGAgA);\n\n        const directnessHome = await calculateMetricStrength(\n          \"directnessOverall\",\n          homeForm.directnessOverall\n        );\n\n        setHomeDirectnessStrength(directnessHome);\n\n        const directnessAway = await calculateMetricStrength(\n          \"directnessOverall\",\n          awayForm.directnessOverall\n        );\n\n        setAwayDirectnessStrength(directnessAway);\n\n        const accuracyHome = await calculateMetricStrength(\n          \"accuracyOverall\",\n          homeForm.avgShotValue\n        );\n        setHomeAccuracyOverallStrength(accuracyHome);\n\n        const accuracyAway = await calculateMetricStrength(\n          \"accuracyOverall\",\n          awayForm.avgShotValue\n        );\n        setAwayAccuracyOverallStrength(accuracyAway);\n\n        const home5GA = await getPointAverage(homeForm.last5Points, 5);\n        setHomeFiveGameAverage(home5GA);\n\n        const home6GA = await getPointAverage(homeForm.last6Points, 6);\n        setHomeSixGameAverage(home6GA);\n\n        const home10GA = await getPointAverage(homeForm.last10Points, 10);\n        setHomeTenGameAverage(home10GA);\n\n        const away5GA = await getPointAverage(awayForm.last5Points, 5);\n        setAwayFiveGameAverage(away5GA);\n\n        const away6GA = await getPointAverage(awayForm.last6Points, 6);\n        setAwaySixGameAverage(away6GA);\n\n        const away10GA = await getPointAverage(awayForm.last10Points, 10);\n        setAwayTenGameAverage(away10GA);\n\n        homeForm.homePPGAv = await getPointAverage(\n          homeForm.homePPGame,\n          homeForm.resultsHome.length\n        );\n        homeForm.tenGameAv = homeTenGameAverage;\n        homeForm.fiveGameAv = homeFiveGameAverage;\n\n        awayForm.awayPPGAv = await getPointAverage(\n          awayForm.awayPPGame,\n          awayForm.resultsAway.length\n        );\n        awayForm.tenGameAv = awayTenGameAverage;\n        awayForm.fiveGameAv = awayFiveGameAverage;\n\n        // const homeTeam = game.homeTeam;\n        // const awayTeam = game.awayTeam;\n        // console.log(homeForm);\n\n        // setTime(game.time);\n        // setTeam1(homeTeam);\n        // setTeam2(awayTeam);\n        // setHomeGoals(game.homeGoals);\n        // setAwayGoals(game.awayGoals);\n\n        if (id === \"1\") {\n        }\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setIsLoading(false);\n        setHasCompleteData(\n          game.completeData === true &&\n            gameStats?.home[index].completeData === true\n        );\n\n        setFirstRenderDone(true);\n      }\n    }\n    if (!firstRenderDone) {\n      fetchData();\n    }\n  }, [game, displayBool, allForm, allLeagueResultsArrayOfObjects, clicked]); // Dependencies for the useCallback\n\n  // AI Insights Generation\n\n  const generateAIInsights = useCallback(\n    async (gameId) => {\n      setIsLoading(true);\n      try {\n        const AIPayload = {\n          league: game.leagueDesc,\n          gameweek: game.game_week,\n          referee: await getRefStats(game.refereeID, game.competition_id),\n          homeTeamName: game.homeTeam,\n          awayTeamName: game.awayTeam,\n          homeLeaguePosition: homeForm?.LeaguePosition,\n          awayLeaguePosition: awayForm?.LeaguePosition,\n          homeTeamResults: homeForm?.allTeamResults,\n          homeAttackingStats: homeForm?.attackingMetrics,\n          homeAttackingStatsLast5: homeForm?.attackingMetricsHomeLast5,\n          homeAttackingStatsHomeOnly: homeForm?.attackingMetricsHomeOnly,\n          homeDefensiveStats: homeForm?.defensiveMetrics,\n          homeDefensiveStatsLast5: homeForm?.defensiveMetricsHomeLast5,\n          homeDefensiveStatsHomeOnly: homeForm?.defensiveMetricsHomeOnly,\n          awayTeamResults: awayForm?.allTeamResults,\n          awayAttackingStats: awayForm?.attackingMetrics,\n          awayAttackingStatsLast5: awayForm?.attackingMetricsAwayLast5,\n          awayAttackingStatsAwayOnly: awayForm?.attackingMetricsAwayOnly,\n          awayDefensiveStats: awayForm?.defensiveMetrics,\n          awayDefensiveStatsLast5: awayForm?.defensiveMetricsAwayLast5,\n          awayDefensiveStatsAwayOnly: awayForm?.defensiveMetricsAwayOnly,\n        };\n        console.log(AIPayload)\n        const response = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}gemini/${gameId}`,\n          {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(AIPayload),\n          }\n        );\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        const jsonData = await response.json();\n        setAiMatchPreview(jsonData);\n      } catch (error) {\n        console.error(\"Fetch error:\", error);\n        // Handle the error\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [game, homeForm, awayForm]\n  );\n\n  // Function to format the AI Match Preview text with newlines\n  const formatAIPreview = (text) => {\n    if (!text) return \"\";\n    return text.split(\". \").join(\".\\n\");\n  };\n\n  //Render the AI data\n  const AIOutput = useMemo(() => {\n    if (!aiMatchPreview) return null;\n\n    const formattedText = formatAIPreview(aiMatchPreview.matchPreview1);\n    const formattedText2 = formatAIPreview(aiMatchPreview.matchPreview2);\n\n    return (\n      <>\n        <h2>Preview</h2>\n        <div className=\"AIMatchPreview\">{formattedText}</div>\n        <div className=\"AIMatchPreview\">{formattedText2}</div>\n        <h2>AI Prediction</h2>\n        <div className=\"AIMatchPreview\">\n          {aiMatchPreview.prediction}{\" \"}\n          <i>(may not reflect the view of XGTipping)</i>\n        </div>\n        <div className=\"AIMatchPreview\">\n          {aiMatchPreview.opinionOnXGTippingPrediction}{\" \"}\n        </div>\n        <div className=\"AIContainer\">\n          <div className=\"HomeAIInsights\">\n            <div>{aiMatchPreview?.homeTeam?.summary}</div>\n          </div>\n          <div className=\"AwayAIInsights\">\n            <div>{aiMatchPreview?.awayTeam?.summary}</div>\n          </div>\n        </div>\n      </>\n    );\n  }, [aiMatchPreview]);\n\n  let [formPointsHome, testArrayHome] = getPointsFromGames(\n    gameStats.home[2].WDLRecord\n  );\n  let [formPointsAway, testArrayAway] = getPointsFromGames(\n    gameStats.away[2].WDLRecord\n  );\n\n  if (formPointsHome.length > 1) {\n    formArrayHome = formPointsHome;\n    formArrayAway = formPointsAway;\n    chartType = \"Points over time\";\n  } else {\n    formArrayHome = [\n      homeTenGameAverage,\n      homeSixGameAverage,\n      homeFiveGameAverage,\n    ];\n    formArrayAway = [\n      awayTenGameAverage,\n      awaySixGameAverage,\n      awayFiveGameAverage,\n    ];\n    chartType = \"Rolling average points over last 10\";\n  }\n  return (\n    <>\n      <div style={style}>\n        <Collapsable\n          buttonText={\"Lineups & match action\"}\n          classNameButton=\"Lineups\"\n          element={\n            <>\n              <SofaLineupsWidget\n                id={id}\n                team1={team1}\n                team2={team2}\n                time={timestamp}\n                homeGoals={homeGoals}\n                awayGoals={awayGoals}\n              ></SofaLineupsWidget>\n            </>\n          }\n        />\n        <div style={style}>\n          <Div className=\"MatchTime\" text={`Kick off: ${time} GMT`}></Div>\n        </div>\n        <div id=\"AIInsightsContainer\" className=\"AIInsightsContainer\">\n          {!paid && game.leagueID !== 12325 && <div>Paid feature only</div>}\n          <Button\n            className=\"AIInsights\"\n            onClickEvent={() => {\n              generateAIInsights(game.id);\n              setShowAIInsights(true);\n            }}\n            text={\"XG AI\"}\n            disabled={!paid && game.leagueID !== 12325}\n          ></Button>\n          {showAIInsights && ( // Conditionally Render the AI Insights.\n            <div className=\"AIOutputContainer\">\n              {isLoading ? <p>Loading AI data....</p> : AIOutput}\n            </div>\n          )}\n        </div>\n        <div className=\"flex-container\">\n          <StatsHomeComponent />\n          <StatsAwayComponent />\n        </div>\n        <div className=\"Chart\" id={`Chart${game.id}`} style={style}>\n          <RadarChart\n            title=\"XG Tipping Strength Ratings - All Games\"\n            data={[\n              homeAttackStrength,\n              homeDefenceStrength,\n              homePossessionStrength,\n              homeXGForStrength,\n              homeXGAgainstStrength,\n              homeDirectnessStrength,\n              homeAccuracyOverallStrength,\n            ]}\n            data2={[\n              awayAttackStrength,\n              awayDefenceStrength,\n              awayPossessionStrength,\n              awayXGForStrength,\n              awayXGAgainstStrength,\n              awayDirectnessStrength,\n              awayAccuracyOverallStrength,\n            ]}\n            team1={game.homeTeam}\n            team2={game.awayTeam}\n          ></RadarChart>\n          <RadarChart\n            title=\"XG Tipping Strength Ratings - Last 5 games\"\n            data={[\n              homeAttackStrengthLast5,\n              homeDefenceStrengthLast5,\n              homePossessionStrengthLast5,\n              homeXGForStrengthLast5,\n              homeXGAgainstStrengthLast5,\n              homeDirectnessStrengthLast5,\n              homeAccuracyOverallStrengthLast5,\n            ]}\n            data2={[\n              awayAttackStrengthLast5,\n              awayDefenceStrengthLast5,\n              awayPossessionStrengthLast5,\n              awayXGForStrengthLast5,\n              awayXGAgainstStrengthLast5,\n              awayDirectnessStrengthLast5,\n              awayAccuracyOverallStrengthLast5,\n            ]}\n            team1={game.homeTeam}\n            team2={game.awayTeam}\n          ></RadarChart>\n          <RadarChart\n            title=\"XG Tipping Strength Ratings - Home/Away Games Only\"\n            data={[\n              homeOnlyAttackStrength,\n              homeOnlyDefenceStrength,\n              homeOnlyPossessionStrength,\n              homeOnlyXGForStrength,\n              homeOnlyXGAgainstStrength,\n              homeOnlyDirectnessStrength,\n              homeOnlyAccuracyOverallStrength,\n            ]}\n            data2={[\n              awayOnlyAttackStrength,\n              awayOnlyDefenceStrength,\n              awayOnlyPossessionStrength,\n              awayOnlyXGForStrength,\n              awayOnlyXGAgainstStrength,\n              awayOnlyDirectnessStrength,\n              awayOnlyAccuracyOverallStrength,\n            ]}\n            team1={game.homeTeam}\n            team2={game.awayTeam}\n          ></RadarChart>\n          <DoughnutChart\n            data={[homeForm.XGRating, awayForm.XGRating]}\n            homeTeam={game.homeTeam}\n            awayTeam={game.awayTeam}\n          ></DoughnutChart>\n          <BarChartTwo\n            text=\"Recent XG Differential Swing\"\n            homeTeam={homeForm.teamName}\n            awayTeam={awayForm.teamName}\n            data1={[homeForm.XGChangeRecently.toFixed(2)]}\n            data2={[awayForm.XGChangeRecently.toFixed(2)]}\n          ></BarChartTwo>\n          <BarChart\n            text=\"H2H - Home Team | Away Team\"\n            data1={[\n              homeForm.avgScored * 2,\n              awayForm.avgConceeded * 2,\n              homeForm.avPointsAll * 3,\n              homeForm.XGOverall * 2,\n              awayForm.XGAgainstAvgOverall * 2,\n              homeForm.AverageShotsOnTargetOverall,\n              homeForm.AverageDangerousAttacksOverall !== 0\n                ? homeForm.AverageDangerousAttacksOverall / 7.5\n                : homeForm.AverageDangerousAttacks / 7.5,\n              homeForm.AveragePossessionOverall / 7.5,\n              homeForm.goalDifferenceHomeOrAway / 10,\n              homeForm.AverageCorners,\n            ]}\n            data2={[\n              awayForm.avgScored * 2,\n              homeForm.avgConceeded * 2,\n              awayForm.avPointsAll * 3,\n              awayForm.XGOverall * 2,\n              homeForm.XGAgainstAvgOverall * 2,\n              awayForm.AverageShotsOnTargetOverall,\n              awayForm.AverageDangerousAttacksOverall !== 0\n                ? awayForm.AverageDangerousAttacksOverall / 7.5\n                : awayForm.AverageDangerousAttacks / 7.5,\n              awayForm.AveragePossessionOverall / 7.5,\n              awayForm.goalDifferenceHomeOrAway / 10,\n              awayForm.AverageCorners,\n            ]}\n          ></BarChart>\n          <Chart\n            height={3}\n            depth={0}\n            data1={formArrayHome}\n            data2={formArrayAway}\n            team1={game.homeTeam}\n            team2={game.awayTeam}\n            type={chartType}\n            tension={0}\n          ></Chart>\n          <MultilineChart\n            height={\n              Math.max(\n                rollingGoalDiffTotalHome[rollingGoalDiffTotalHome.length - 1],\n                rollingGoalDiffTotalAway[rollingGoalDiffTotalAway.length - 1]\n              ) > 2\n                ? Math.max(\n                    rollingGoalDiffTotalHome[\n                      rollingGoalDiffTotalHome.length - 1\n                    ],\n                    rollingGoalDiffTotalAway[\n                      rollingGoalDiffTotalAway.length - 1\n                    ]\n                  )\n                : 2\n            }\n            depth={\n              Math.min(\n                rollingGoalDiffTotalHome[rollingGoalDiffTotalHome.length - 1],\n                rollingGoalDiffTotalAway[rollingGoalDiffTotalAway.length - 1]\n              ) < -2\n                ? Math.min(\n                    rollingGoalDiffTotalHome[\n                      rollingGoalDiffTotalHome.length - 1\n                    ],\n                    rollingGoalDiffTotalAway[\n                      rollingGoalDiffTotalAway.length - 1\n                    ]\n                  )\n                : -2\n            }\n            data1={rollingGoalDiffTotalHome}\n            data2={rollingGoalDiffTotalAway}\n            data3={rollingXGDiffTotalHome}\n            data4={rollingXGDiffTotalAway}\n            team1={game.homeTeam}\n            team2={game.awayTeam}\n            type={\"Goal/XG difference over time\"}\n            tension={0.5}\n          ></MultilineChart>\n        </div>\n        <Div\n          text={`Last league games (most recent first)`}\n          className={\"LastGameHeader\"}\n        ></Div>\n        <div className=\"flex-container\">\n          <div className=\"flex-childOneOverviewSmall\">{overviewHome}</div>\n          <div className=\"flex-childTwoOverviewSmall\">{overviewAway}</div>\n        </div>\n        {/* <h2>Results from similar profile games</h2>\n        <span>(Games where each team had similar odds)</span>\n        <h3>Most recent first</h3>\n        <div className=\"flex-container-similar\">\n          <div className=\"flex-childOneOverviewSmall\">{similarGamesHome}</div>\n          <div className=\"flex-childTwoOverviewSmall\">{similarGamesAway}</div>\n        </div>\n        <input type=\"hidden\" name=\"IL_IN_ARTICLE\" />\n        <Button\n          className=\"MoreStats\"\n          onClickEvent={() =>\n            getTeamStats(\n              game.id,\n              game.homeTeam,\n              game.awayTeam,\n              formDataHome[0].BttsPercentage,\n              formDataHome[0].BttsPercentageHomeOrAway,\n              formDataAway[0].BttsPercentage,\n              formDataAway[0].BttsPercentageHomeOrAway\n            )\n          }\n          text={\"Fixture trends + AI Preview\"}\n        ></Button> */}\n      </div>\n    </>\n  );\n}\n\nexport default GameStats;\n","import React, { Fragment, useState } from \"react\";\nimport { CreateBadge } from \"./createBadge\";\nimport { createStatsDiv } from \"../logic/getStats\";\nimport { renderTable } from \"../logic/getFixtures\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport { useDispatch } from \"react-redux\";\nimport { setData } from \"../logic/dataSlice\";\nimport { Provider } from \"react-redux\";\nimport store from \"../logic/store\"; // Import your Redux store\nimport { formObjectHome } from \"../logic/getScorePredictions\";\nimport { clicked } from \"../logic/getScorePredictions\";\nimport { userDetail } from \"../logic/authProvider\";\nimport { checkUserPaidStatus } from \"../logic/hasUserPaid\";\nimport GameStats from \"./GameStats\";\n\nlet resultValue;\nlet paid;\nvar count;\nlet mockValue;\nvar setCount;\nfunction toggle(bool) {\n  count = !bool;\n  return count;\n}\n\nfunction GetDivider(fixture, mock) {\n  const matchStatus = fixture.status;\n  let isPrediction = resultValue;\n\n  if (fixture.fixture.omit === true && matchStatus !== \"complete\") {\n    isPrediction = true;\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"Omitted\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (mockValue === true && matchStatus === \"complete\") {\n    isPrediction = false;\n    return (\n      <Fragment>\n        <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n        <div\n          className=\"CorrectScore\"\n          key={fixture.fixture.homeTeam}\n          data-cy={\"score-\" + fixture.fixture.id}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (mockValue === true && matchStatus !== \"complete\") {\n    isPrediction = true;\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (isPrediction === false && matchStatus !== \"complete\") {\n    return (\n      <div className=\"divider\" data-cy={\"divider-\" + fixture.fixture.id}>\n        {\"V\"}\n      </div>\n    );\n  } else if (isPrediction === false && matchStatus === \"complete\") {\n    return (\n      <div\n        className=\"Result\"\n        data-cy={\"result-\" + fixture.fixture.id}\n      >{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n    );\n  } else if (isPrediction === true && matchStatus === \"complete\") {\n    let outcome;\n    let prediction;\n\n    switch (true) {\n      case fixture.fixture.homeGoals > fixture.fixture.awayGoals:\n        outcome = 0;\n        fixture.fixture.winner = fixture.fixture.homeTeam;\n        fixture.fixture.outcome = \"homeWin\";\n        break;\n      case fixture.fixture.homeGoals === fixture.fixture.awayGoals:\n        outcome = 1;\n        fixture.fixture.winner = \"draw\";\n        fixture.fixture.outcome = \"draw\";\n\n        break;\n      case fixture.fixture.homeGoals < fixture.fixture.awayGoals:\n        outcome = 2;\n        fixture.fixture.winner = fixture.fixture.awayTeam;\n        fixture.fixture.outcome = \"awayWin\";\n\n        break;\n      default:\n        break;\n    }\n\n    switch (true) {\n      case fixture.fixture.goalsA > fixture.fixture.goalsB:\n        prediction = 0;\n        break;\n      case fixture.fixture.goalsA === fixture.fixture.goalsB:\n        prediction = 1;\n        break;\n      case fixture.fixture.goalsA < fixture.fixture.goalsB:\n        prediction = 2;\n        break;\n      default:\n        break;\n    }\n\n    if (fixture.fixture.omit === true) {\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"Omitted\"\n            key={fixture.fixture.homeTeam}\n            data-cy={\"score-\" + fixture.fixture.id}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    } else if (outcome === prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        switch (true) {\n          case outcome === 0:\n            fixture.fixture.profit = fixture.fixture.homeOdds;\n            break;\n          case outcome === 1:\n            fixture.fixture.profit = fixture.fixture.drawOdds;\n            break;\n          case outcome === 2:\n            fixture.fixture.profit = fixture.fixture.awayOdds;\n            break;\n          default:\n            break;\n        }\n      } else fixture.fixture.profit = 1;\n\n      if (\n        fixture.fixture.goalsA === fixture.fixture.homeGoals &&\n        fixture.fixture.goalsB === fixture.fixture.awayGoals\n      ) {\n        fixture.fixture.exactScore = true;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"ExactScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      } else {\n        fixture.fixture.exactScore = false;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"CorrectScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      }\n    } else if (outcome !== prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        fixture.fixture.profit = 0;\n      } else {\n        fixture.fixture.profit = 1;\n      }\n      fixture.fixture.exactScore = false;\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"IncorrectScore\"\n            key={fixture.fixture.awayTeam}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    }\n  } else {\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  }\n}\n\nfunction renderLeagueName(fixture, mock) {\n  mockValue = mock;\n\n  let name = fixture.leagueName;\n  let id =\n    allLeagueResultsArrayOfObjects.length > 0\n      ? allLeagueResultsArrayOfObjects[fixture.leagueIndex].id\n      : null;\n  if (name === null || mock === true) {\n    return <div></div>;\n  } else {\n    return (\n      <div>\n        <div\n          className=\"leagueName\"\n          id={`league${id}`}\n          key={`leagueName${id}div`}\n          onClick={() =>\n            renderTable(\n              fixture.leagueIndex,\n              allLeagueResultsArrayOfObjects[fixture.leagueIndex],\n              id\n            )\n          }\n        >\n          {fixture.leagueName} &#9776;\n        </div>\n        <div\n          className=\"LeagueTable\"\n          key={`leagueName${id}`}\n          id={`leagueName${id}`}\n        ></div>\n      </div>\n    );\n  }\n}\n\nconst downArrow = \"\\u{2195}\";\nconst rightArrow = \"\\u{29C9}\";\n\nexport let testing;\n\nfunction SingleFixture({ fixture, count, mock }) {\n  const dispatch = useDispatch();\n  const [showGameStats, setShowGameStats] = useState(false); // State to control GameStats visibility\n\n  function StoreData() {\n    const fixtureDetails = {\n      id: fixture.id,\n      homeTeamName: fixture.homeTeam,\n      homeId: fixture.homeId,\n      homeTeamBadge: fixture.homeBadge,\n      awayTeamName: fixture.awayTeam,\n      awayId: fixture.awayId,\n      awayTeamBadge: fixture.awayBadge,\n      stadium: fixture.stadium,\n      time: fixture.time,\n      homeGoals: fixture.goalsA,\n      awayGoals: fixture.goalsB,\n    };\n\n    const homeDetails = {\n      \"Attacking Strength\": fixture.formHome.attackingStrength,\n      \"Defensive Strength\": fixture.formHome.defensiveStrength,\n    };\n\n    const awayDetails = {\n      \"Attacking Strength\": fixture.formAway.attackingStrength,\n      \"Defensive Strength\": fixture.formAway.defensiveStrength,\n    };\n\n    const dataToSend = {\n      key1: \"value1\",\n      key2: \"value2\",\n    };\n    fixture.formHome.defensiveMetrics[\"Clean Sheet Percentage\"] =\n      fixture.formHome.CleanSheetPercentage;\n    fixture.formAway.defensiveMetrics[\"Clean Sheet Percentage\"] =\n      fixture.formAway.CleanSheetPercentage;\n\n    localStorage.setItem(\n      \"homeForm\",\n      JSON.stringify(fixture.formHome.attackingMetrics)\n    );\n    localStorage.setItem(\n      \"homeFormDef\",\n      JSON.stringify(fixture.formHome.defensiveMetrics)\n    );\n    localStorage.setItem(\n      \"allTeamResultsHome\",\n      JSON.stringify(fixture.formHome.allTeamResults)\n    );\n    localStorage.setItem(\"homeDetails\", JSON.stringify(homeDetails));\n\n    localStorage.setItem(\n      \"awayForm\",\n      JSON.stringify(fixture.formAway.attackingMetrics)\n    );\n    localStorage.setItem(\n      \"awayFormDef\",\n      JSON.stringify(fixture.formAway.defensiveMetrics)\n    );\n    localStorage.setItem(\n      \"allTeamResultsAway\",\n      JSON.stringify(fixture.formAway.allTeamResults)\n    );\n    localStorage.setItem(\"awayDetails\", JSON.stringify(awayDetails));\n\n    localStorage.setItem(\"fixtureDetails\", JSON.stringify(fixtureDetails));\n\n    dispatch(setData(dataToSend));\n  }\n\n  async function handleButtonClick(game) {\n    if(userDetail){\n      paid = await checkUserPaidStatus(userDetail.uid);\n      if (clicked === true && paid) {\n        StoreData(formObjectHome);\n        window.open(\"/#/fixture\");\n      } else {\n        alert(\"Premium feature only\");\n        return;\n      }\n    } else paid = false;\n    \n  }\n\n  const handleGameStatsClick = () => {\n    //Set show GameStats to true and set local storage\n    StoreData();\n    setShowGameStats(!showGameStats); // Toggle the GameStats visibility\n  };\n\n  return (\n    <div key={fixture.game}>\n      {renderLeagueName(fixture, mock)}\n      <div className={`individualFixtureContainer${fixture.omit}`}>\n        <li\n          className={`individualFixture${fixture.omit}`}\n          key={fixture.id}\n          data-cy={fixture.id}\n        >\n          <div className=\"HomeOdds\">{fixture.fractionHome}</div>\n          <div className=\"homeTeam\">{fixture.homeTeam}</div>\n          <GetDivider\n            result={resultValue}\n            status={fixture.status}\n            fixture={fixture}\n          />\n          {/* <div className=\"divider\">{\"V\"}</div> */}\n          <div className=\"awayTeam\">{fixture.awayTeam}</div>\n          <CreateBadge\n            image={fixture.homeBadge}\n            ClassName=\"HomeBadge\"\n            alt=\"Home team badge\"\n            flexShrink={5}\n          />\n          <CreateBadge\n            image={fixture.awayBadge}\n            ClassName=\"AwayBadge\"\n            alt=\"Away team badge\"\n          />\n          <div className=\"AwayOdds\">{fixture.fractionAway}</div>\n        </li>\n        <button\n          className=\"GameStats\"\n          onClick={handleGameStatsClick} // Update onClick\n          onMouseDown={() => (count = toggle(count))}\n        >\n          Game overview {downArrow}\n        </button>\n        <button\n          className=\"GameStatsTwo\"\n          onClick={() => handleButtonClick(fixture)}\n        >\n          More detail {rightArrow}\n        </button>\n        {/* <Checkbox/> */}\n      </div>\n      {showGameStats && (\n        <GameStats\n          game={fixture}\n          displayBool={true}\n        />\n      )}{\" \"}\n      <div id={\"stats\" + fixture.homeTeam} />\n      <div className=\"MatchHistory\" id={\"history\" + fixture.homeTeam} />\n    </div>\n  );\n}\n\nconst List = ({ fixtures, mock }) => (\n  <div>\n    <div id=\"Headers\"></div>\n    <ul className=\"FixtureList\" id=\"FixtureList\">\n      {fixtures.map((fixture, i) => (\n        <SingleFixture\n          fixture={fixture}\n          key={fixture.game}\n          count={count}\n          mock={mock}\n        />\n      ))}\n    </ul>\n  </div>\n);\n\nexport function Fixture(props) {\n  [count, setCount] = useState(false);\n  resultValue = props.result;\n  return (\n    <Provider store={store}>\n      <List\n        fixtures={props.fixtures}\n        result={resultValue}\n        count={count}\n        mock={props.mock}\n      />\n      {!props.paid && props.capped === true && (\n        <div>\n          {props.originalLength} games have been capped at 15 for free users\n          with full stats available for those returned - sign up for access to\n          40+ leagues and cups\n        </div>\n      )}{\" \"}\n    </Provider>\n  );\n}\n","import React from \"react\";\n\nconst StripePolicies = () => {\n  return (\n    <div className=\"ContactText\">\n      <h2 className=\"text-2xl font-bold mb-4\">XGTipping Policies</h2>\n      \n      <section className=\"mb-6\">\n        <h2 className=\"text-xl font-semibold\">Customer Support</h2>\n        <p>For any inquiries, please contact us via:</p>\n        <ul className=\"list-disc ml-6\">\n          <li>Email: <a href=\"mailto:support@xgtipping.com\" className=\"text-blue-500\">support@xgtipping.com</a></li>\n        </ul>\n      </section>\n\n      <section className=\"mb-6\">\n        <h2 className=\"text-xl font-semibold\">Refund and Dispute Policy</h2>\n        <p>\n          Due to the digital nature of our services, all payments are final, and we do not offer refunds. \n          If you experience technical issues preventing access, please contact our support team for resolution.\n        </p>\n        <p>\n          If you believe you have been charged incorrectly, reach out to us before initiating a chargeback. \n          We will review and resolve the issue promptly.\n        </p>\n      </section>\n\n      <section className=\"mb-6\">\n        <h2 className=\"text-xl font-semibold\">Cancellation Policy</h2>\n        <p>\n          You may cancel your subscription anytime through your account settings. Cancellations prevent future billing, \n          but no refunds are issued for unused time. Access remains active until the end of the billing cycle.\n        </p>\n      </section>\n\n      <section className=\"mb-6\">\n        <h2 className=\"text-xl font-semibold\">Legal and Export Restrictions</h2>\n        <p>\n          XGTipping is available only in jurisdictions where online tipping and sports analysis services are legally permitted. \n          Users are responsible for ensuring compliance with local laws.\n        </p>\n      </section>\n\n      <section className=\"mb-6\">\n        <h2 className=\"text-xl font-semibold\">Terms and Conditions of Promotions</h2>\n        <p>\n          Any promotions, free trials, or discounts offered are subject to change or termination at XGTipping’s discretion. \n          Promotional offers cannot be combined unless explicitly stated. If a promotion is tied to a subscription, \n          standard billing resumes after the promotional period unless canceled before renewal.\n        </p>\n      </section>\n    </div>\n  );\n};\n\nexport default StripePolicies;\n","import { useState } from \"react\";\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { Eye, EyeOff } from \"lucide-react\"; // Eye icons for toggling password visibility\nimport { auth, db } from \"../firebase\"; // Adjust the path as needed\n\nexport let userIsPaid = false;\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false); // State for toggling password visibility\n\n  const handleAuth = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n    try {\n      let userCredential;\n      if (isLogin) {\n        userCredential = await signInWithEmailAndPassword(auth, email, password);\n      } else {\n        userCredential = await createUserWithEmailAndPassword(auth, email, password);\n        // Create Firestore user document with default isPaidUser set to false\n        await setDoc(doc(db, \"users\", userCredential.user.uid), {\n          email: userCredential.user.email,\n          isPaidUser: false,\n        });\n      }\n\n      // Fetch user subscription data from Firestore\n      const userRef = doc(db, \"users\", userCredential.user.uid);\n      const userSnap = await getDoc(userRef);\n\n      if (userSnap.exists()) {\n        const data = userSnap.data();\n        // Update the global variable\n        userIsPaid = data.isPaidUser;\n        console.log(\"User isPaid status:\", userIsPaid);\n      } else {\n        console.error(\"User document not found in Firestore\");\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div>\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      <form onSubmit={handleAuth} className=\"LoginForm\">\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n          className=\"LoginInput1\"\n        />\n\n        {/* Password Input with Toggle Button */}\n        <div className=\"PasswordContainer\">\n          <input\n            type={showPassword ? \"text\" : \"password\"} // Toggle between \"text\" and \"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n            className=\"LoginInput2\"\n          />\n          <button\n            type=\"button\"\n            onClick={() => setShowPassword(!showPassword)}\n            className=\"TogglePasswordButton\"\n          >\n            {showPassword ? <EyeOff size={20} /> : <Eye size={20} />}\n          </button>\n        </div>\n\n        <button type=\"submit\" className=\"LoginSignUp\">\n          {isLogin ? \"Login\" : \"Sign Up\"}\n        </button>\n        <button\n          className=\"ResetPasswordLink\"\n          onClick={() => {\n            window.location.href = \"https://www.xgtipping.com/#/reset\";\n          }}\n        >\n          Reset password\n        </button>\n      </form>\n      <button className=\"SignUp\" onClick={() => setIsLogin(!isLogin)}>\n        {isLogin ? \"Need an account? Sign up\" : \"Already have an account? Login\"}\n      </button>\n    </div>\n  );\n};\n\nexport default Login;\n","import { getAuth, onAuthStateChanged } from \"firebase/auth\";\n\n/**\n * Returns a promise that resolves to the current user if logged in,\n * or null if not logged in.\n */\nexport async function getCurrentUser() {\n  const auth = getAuth();\n  return new Promise((resolve, reject) => {\n    // Use onAuthStateChanged to get the current user once\n    const unsubscribe = onAuthStateChanged(\n      auth,\n      (user) => {\n        unsubscribe();\n        resolve(user);\n      },\n      (error) => {\n        unsubscribe();\n        reject(error);\n      }\n    );\n  });\n}\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./components/Header\";\nimport { Button } from \"./components/Button\";\nimport OddsRadio from \"./components/OddsRadio\";\nimport { Fixture } from \"./components/Fixture\";\nimport mockedFixtures from \"./data/mockedFixtures.json\";\nimport { selectedOdds } from \"./components/OddsRadio\";\nimport Collapsable from \"./components/CollapsableElement\";\nimport StripePolicies from \"./components/Contact\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { AuthProvider, useAuth } from \"./logic/authProvider\";\nimport { getAuth } from \"firebase/auth\";\nimport Login from \"./components/Login\";\nimport { getCurrentUser } from \"./components/ProtectedContent\";\nimport { userDetail } from \"./logic/authProvider\";\nimport { checkUserPaidStatus } from \"./logic/hasUserPaid\";\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  RedditShareButton,\n  RedditIcon,\n  TelegramShareButton,\n  TelegramIcon,\n  TwitterShareButton,\n  TwitterIcon,\n  WhatsappShareButton,\n  WhatsappIcon,\n} from \"react-share\";\nimport { generateFixtures } from \"./logic/getFixtures\";\nimport { ThreeDots } from \"react-loading-icons\";\nimport Logo from \"./components/Logo\";\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\n\nimport reactDom from \"react-dom\";\n// require(\"dotenv\").config();\n\nexport const proxyurl = \"https://safe-caverns-99679.herokuapp.com/\";\nexport var fixtureList = [];\nexport let allLeagueData = [];\n\nexport const availableLeagues = [];\nexport var orderedLeagues = [];\n\nlet loggedIn;\nexport let paid = false;\n\nconst leagueOrder = [\n  // 11084, //Euro 2024\n  // 7432, //World Cup 22\n  12325, //premier league 22/23\n  12451, //championship 22/23\n  12446, //league 1 22/23\n  12422, //league 2 22/23\n  12622, //National league 22/23\n  12316, //La Liga 22/23\n  12455, //Scottish Prem 22/23\n  12529, //Bundesliga 22/23\n  12530, //Serie A 22/23\n  12337, //French Prem 22/23\n  12931, //Portagul Prem 22/23\n  12322, //Dutch Prem 22/23\n  12137, //Belgian Pro League 22/23\n  12321, // Champs league\n  12327, //Europa\n  10969, //sweden 24\n  12132, //Danish Prem 24/25\n  10976, //Norway Prem 23\n  12472, //Austrian Prem 22/23\n  12734, //Greek Prem 22/23\n  12641, //turkey\n  12120, //Polish prem 22/23\n  12326, //Swiss prem 22/23\n  13952, //Irish Prem 23\n  12467, //Spanish secunda 22/23\n  12621, //Italy serie B 22/23\n  12528, //Bundesliga 2 22/23\n  12623, //German 3rd tier 22/23\n  12338, //French League 2 22/23\n  12456, //Scottish Championship 22/23\n  12474, //Scottish league 1 22/23\n  12453, //Scottish league 2 22/23\n  12827, //Women's prem 23/24\n  13973, //MLS 25\n  11321, //Brazil prem 24\n  14125, //Argentina prem 23\n  12136, //Mexico prem 23/24\n  12933, //National league North and South 22/23\n  // 13703, //Australian A league 23/24\n  14069, //S Korea 23\n];\n\nlet today;\nlet todayFootyStats;\nlet todaySS;\nlet tomorrow;\nlet tomorrowFootyStats;\nlet tomorrowSS;\nlet date;\nlet dateSS;\nlet dateFootyStats;\nlet yesterday;\nlet yesterdayFootyStats;\nlet yesterdaySS;\nlet lastSaturday;\nlet lastSaturdayFootyStats;\nlet lastSaturdaySS;\nlet historic;\nlet historicFootyStats;\nlet historicSS;\nlet tomorrowsDate;\nlet yesterdaysDate;\nlet saturdayDate;\nlet historicDate;\nlet string;\nlet dateString;\n\n(async function fetchLeagueData() {\n  let leagueList;\n  if (userDetail) {\n    paid = await checkUserPaidStatus(userDetail.uid);\n  } else {\n    paid = false;\n  }\n  leagueList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}leagueList`);\n\n  let leagueArray;\n  await leagueList.json().then((leagues) => {\n    leagueArray = Array.from(leagues.data);\n  });\n\n  for (let i = 0; i < leagueArray.length; i++) {\n    const league = leagueArray[i];\n    const name = leagueArray[i].name;\n\n    for (let x = 0; x < league.season.length; x++) {\n      const element = league.season[x];\n\n      if (element.year === 2025 || element.year === 20242025) {\n        if (\n          element.id !== 13703 &&\n          element.id !== 6935 &&\n          element.id !== 7061\n        ) {\n          availableLeagues.push({ name: name, element });\n        }\n      }\n    }\n\n    async function mapOrder(array, order, key) {\n      array.sort(function (a, b) {\n        var A = a.element[key],\n          B = b.element[key];\n\n        if (order.indexOf(A) > order.indexOf(B)) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n      return array;\n    }\n    //leagues ordered by id\n    orderedLeagues = await mapOrder(availableLeagues, leagueOrder, \"id\");\n  }\n  return orderedLeagues;\n})();\n\nexport async function getLeagueList() {\n  loggedIn = await getCurrentUser();\n  let i = 0;\n  date = new Date();\n  string = \"Today\";\n\n  async function incrementDate(num, date) {\n    i = i + num;\n    date.setDate(date.getDate() + num);\n    dateSS = await convertTimestampForSofaScore(date);\n\n    [date, dateFootyStats] = await calculateDate(date);\n    string = dateFootyStats;\n\n    await renderButtons();\n  }\n\n  async function decrementDate(num, date) {\n    i = i - num;\n    console.log(i);\n    if (i > -120) {\n      date.setDate(date.getDate() - num);\n      dateSS = await convertTimestampForSofaScore(date);\n      [date, dateFootyStats] = await calculateDate(date);\n      string = dateFootyStats;\n      dateString = date;\n      await renderButtons();\n    }\n  }\n\n  async function calculateDate(dateString) {\n    const day = dateString.getDate();\n    const month = dateString.getMonth() + 1;\n    const year = dateString.getFullYear();\n    return [`${month}${day}${year}`, `${year}-${month}-${day}`];\n  }\n\n  [today, todayFootyStats] = await calculateDate(new Date());\n\n  tomorrowsDate = new Date();\n  tomorrowsDate.setDate(tomorrowsDate.getDate() + 1);\n  [tomorrow, tomorrowFootyStats] = await calculateDate(tomorrowsDate);\n\n  yesterdaysDate = new Date();\n  yesterdaysDate.setDate(yesterdaysDate.getDate() - 1);\n  [yesterday, yesterdayFootyStats] = await calculateDate(yesterdaysDate);\n\n  saturdayDate = new Date();\n  saturdayDate.setDate(\n    saturdayDate.getDate() - ((saturdayDate.getDay() + 6) % 7)\n  );\n  saturdayDate.setDate(saturdayDate.getDate() - 2);\n  [lastSaturday, lastSaturdayFootyStats] = await calculateDate(saturdayDate);\n\n  historicDate = new Date();\n  historicDate.setDate(\n    historicDate.getDate() - ((historicDate.getDay() + 6) % 7)\n  );\n  historicDate.setDate(historicDate.getDate() - 9);\n  [historic, historicFootyStats] = await calculateDate(historicDate);\n\n  async function convertTimestampForSofaScore(timestamp) {\n    let newDate = new Date(timestamp);\n\n    let year = newDate.getFullYear();\n    let month = String(newDate.getMonth() + 1).padStart(2, \"0\"); // Adding 1 to month because it is zero-based\n    let day = String(newDate.getDate()).padStart(2, \"0\");\n\n    let converted = `${year}-${month}-${day}`;\n\n    return converted;\n  }\n\n  todaySS = await convertTimestampForSofaScore(new Date());\n  tomorrowSS = await convertTimestampForSofaScore(tomorrowsDate);\n  yesterdaySS = await convertTimestampForSofaScore(yesterdaysDate);\n  lastSaturdaySS = await convertTimestampForSofaScore(saturdayDate);\n  historicSS = await convertTimestampForSofaScore(historicDate);\n\n  const text =\n    \"Select a day you would like to retrieve fixtures for from the options above\\n A list of games will be returned once the data has loaded\\n Once all fixtures have loaded, click on “Get Predictions” to see XGTipping's forecasted outcomes for every game\\n If a game has completed, the predictions is displayed on the right and the actual result on the left\\n Each individual fixture is tappable/clickable. By doing so, you can access a range of detailed stats, from comparative charts, granular performance measures to previous meetings.\\n All games are subject to the same automated prediction algorithm with the outcome being a score prediction. Factors that determine the tip include the following, amongst others:\\n - Goal differentials\\n - Expected goal differentials \\n - Attack/Defence performance\\n - Form trends over time\\n - Home/Away records\\n - WDL records\\n - Points per game \\n - A range of other comparative factors\\n  –\\n\";\n\n  const text2 =\n    \"A range of tools are available should you wish to use them\\n Build a multi - Use the '+' or '-' buttons to add or remove a game deemed to be one of XGTIpping's highest confidence tips from the day\\n Exotic of the day: A pre-built exotic multi comprising of XGTipping's highest confidence tips\\n BTTS games: Games where both teams to score is deemed a likely outcome\\n Over 2.5 goals tips: Games where over 2.5 goals are most likely to be scored\\n XG tips: Comprises only games where the expected goal differentials between each team are at their greatest. We believe this shows a true disparity in the form of the two opposing teams\\n Tap the 'How to use' option to hide this text\";\n\n  let textJoined = text.concat(text2);\n\n  let newText = textJoined.split(\"\\n\").map((i) => {\n    return <p>{i}</p>;\n  });\n\n  async function renderButtons(loginStatus) {\n    ReactDOM.render(\n      <div className=\"FixtureButtons\">\n        <h6>{loginStatus}</h6>\n        <div className=\"historicResults\">\n          <Button\n            text={\"Last Saturday\"}\n            className=\"HistoricFixturesButton\"\n            onClickEvent={async () =>\n              fixtureList.push(\n                await generateFixtures(\n                  \"lastSaturday\",\n                  lastSaturday,\n                  selectedOdds,\n                  lastSaturdayFootyStats,\n                  false,\n                  today,\n                  lastSaturdaySS\n                )\n              )\n            }\n          />\n        </div>\n        <Button\n          text={`<`}\n          className=\"FixturesButton\"\n          onClickEvent={async () => await decrementDate(1, date)}\n        />\n        <Button\n          text={dateFootyStats !== undefined ? dateFootyStats : date}\n          className=\"FixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"todaysFixtures\",\n                dateString,\n                selectedOdds,\n                dateFootyStats,\n                false,\n                today,\n                dateSS\n              )\n            )\n          }\n        />\n        <Button\n          text={`Today`}\n          className=\"FixturesButtonToday\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"todaysFixtures\",\n                today,\n                selectedOdds,\n                todayFootyStats,\n                true,\n                today,\n                todaySS\n              )\n            )\n          }\n        />\n        <Button\n          text={\"Tomorrow\"}\n          className=\"FixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"tomorrowsFixtures\",\n                tomorrow,\n                selectedOdds,\n                tomorrowFootyStats,\n                true,\n                today,\n                tomorrowSS\n              )\n            )\n          }\n        />\n      </div>,\n      document.getElementById(\"Buttons\")\n    );\n  }\n\n  ReactDOM.render(\n    <div className=\"FixtureButtons\">\n      <div className=\"historicResults\">\n        <Button\n          text={\"Last Saturday\"}\n          className=\"HistoricFixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"lastSaturday\",\n                lastSaturday,\n                selectedOdds,\n                lastSaturdayFootyStats,\n                false,\n                today,\n                lastSaturdaySS\n              )\n            )\n          }\n        />\n      </div>\n      <Button\n        text={`<`}\n        className=\"FixturesButton\"\n        onClickEvent={async () => await decrementDate(1, date)}\n      />\n      <Button\n        text={`${string}`}\n        className=\"FixturesButtonToday\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"todaysFixtures\",\n              today,\n              selectedOdds,\n              todayFootyStats,\n              true,\n              today,\n              todaySS\n            )\n          )\n        }\n      />\n      <Button\n        text={\"Tomorrow\"}\n        className=\"FixturesButton\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"tomorrowsFixtures\",\n              tomorrow,\n              selectedOdds,\n              tomorrowFootyStats,\n              true,\n              today,\n              tomorrowSS\n            )\n          )\n        }\n      />\n    </div>,\n    document.getElementById(\"Buttons\")\n  );\n  ReactDOM.render(\n    <div className=\"OddsRadios\">\n      <OddsRadio value=\"Fractional odds\"></OddsRadio>\n      <OddsRadio value=\"Decimal odds\"></OddsRadio>\n    </div>,\n    document.getElementById(\"Checkbox\")\n  );\n  ReactDOM.render(\n    <Fragment>\n      <Collapsable\n        // className={\"HowToUse\"}\n        buttonText={\"How to use\"}\n        element={newText}\n      />\n    </Fragment>,\n    document.getElementById(\"XGDiff\")\n  );\n\n  if (loggedIn) {\n    ReactDOM.render(\n      <h6>Welcome back {loggedIn.email}</h6>,\n      document.getElementById(\"Email\")\n    );\n  } else {\n    ReactDOM.render(<Login />, document.getElementById(\"Email\"));\n  }\n}\n\n// Replace with your own Stripe public key\nconst stripePromise = loadStripe(\n  \"pk_live_51QojxLBrqiWlVPadBxhtoj499YzoC8YjFUIVQwCcTe8B7ZUG47NbYAam2wvNox2mUmzd0WgQh4PWKaIQaxKxubig00yEzjNuVQ\"\n);\n\nconst handleCheckout = async (priceId) => {\n  const stripe = await stripePromise;\n  const auth = getAuth();\n  const user = auth.currentUser;\n\n  if (!user) {\n    alert(\"Please sign-up or login before purchasing\");\n    return;\n  }\n\n  const response = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}create-checkout-session`,\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ priceId, uid: user.uid }), // Send uid\n    }\n  );\n\n  const session = await response.json();\n\n  const result = await stripe.redirectToCheckout({ sessionId: session.id });\n\n  if (result.error) {\n    console.error(\"Checkout error:\", result.error.message);\n  }\n};\n\nasync function getHighestScoringLeagues() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}over25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    for (let index = 0; index < 215; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        over25Percentage:\n          leagues.data.top_leagues.data[index].seasonOver25Percentage_overall,\n        division: leagues.data.top_leagues.data[index].division,\n        leagueId: leagues.data.top_leagues.data[index].id,\n      };\n      arr.push(league);\n    }\n  });\n\n  const finalArray = arr.filter(\n    (league) =>\n      leagueOrder.find((element) => element === league.leagueId) &&\n      league.averageGoals >= 2.5\n  );\n\n  let sortedArray = finalArray.sort((a, b) => b.averageGoals - a.averageGoals);\n\n  return sortedArray;\n}\n\nasync function getLowestScoringLeagues() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}under25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    for (let index = 0; index < 215; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        under25Percentage:\n          leagues.data.top_leagues.data[index].seasonUnder25Percentage_overall,\n        leagueId: leagues.data.top_leagues.data[index].id,\n      };\n      arr.push(league);\n    }\n  });\n\n  const finalArray = arr.filter(\n    (league) =>\n      leagueOrder.find((element) => element === league.leagueId) &&\n      league.averageGoals < 2.5\n  );\n\n  let sortedArray = finalArray.sort((a, b) => a.averageGoals - b.averageGoals);\n\n  return sortedArray;\n}\n\nconst welcomeTextUnsplitOne = `Welcome to XGTipping. Your go-to resource for all things football, from predictions, comprehensive head to head stats, results, xg scores, odds, league tables, form, and bespoke multi-builders underpinned by expected goal (XG) data.\\n `;\nlet welcomeTextOne = welcomeTextUnsplitOne.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nconst welcomeTextUnsplitTwo = `XGTipping is completely independent and free to use, relying on a donation model to support running costs. For feedback or feature ideas, get in touch at @TippingXg.`;\nlet welcomeTextTwo = welcomeTextUnsplitTwo.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nfunction AppContent() {\n  const { user, isPaidUser } = useAuth();\n  getLeagueList();\n\n  return (\n    <div className=\"App\">\n      <Logo />\n      <a\n        className=\"SocialLink\"\n        href=\"https://www.reddit.com/r/xgtipping/\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        r/xgtipping\n      </a>\n      <div id=\"LoadingContainer\" className=\"LoadingContainer\" />\n      <div id=\"RadioContainer\" className=\"RadioContainer\">\n        <div id=\"RadioText\" />\n        <div id=\"RadioButtons\" />\n      </div>\n      <div id=\"Email\" className=\"Email\"></div>\n      <div id=\"Day\" />\n      <div id=\"Checkbox\" />\n      <div id=\"ExplainerText\" />\n      <div id=\"Loading\" className=\"Loading\"></div>\n      <div id=\"Buttons\" className=\"Buttons\">\n        <ThreeDots className=\"MainLoading\" fill=\"#030061\" />\n        <div>Loading all fixture and form data...</div>\n      </div>\n\n      {user ? (\n        isPaidUser ? (\n          // If the user is logged in and is a paying customer, show the cancel button\n          <button\n            onClick={() => {\n              window.location.href =\n                \"https://www.xgtipping.com/#/cancelsubscription\";\n            }}\n            className=\"CancelButton\"\n          >\n            Cancel Subscription\n          </button>\n        ) : (\n          // If the user is logged in but is NOT a paying customer, show subscribe buttons\n          <div>\n            <span className=\"MembershipInfo\">\n              Full fixtures from all 40+ leagues and cups are restricted to\n              premium members. Memberships can be cancelled at any time and\n              prices will differ in currencies other than GBP. Payments are\n              securely hosted by Stripe\n            </span>\n            <h2 className=\"MembershipHeader\">\n              1 week free trial with code XGFREETRIAL when applied to the\n              £1/week subscription at the checkout\n            </h2>\n            <h3>\n              Subscription will be charged to payment card from week 2 but can\n              be cancelled at any time. Code expires 19/03/2025\n            </h3>\n            <h3>\n              New premium features released this week includes AI previews,\n              matches/leagues with the highest/lowest goals and more\n            </h3>\n            <button\n              onClick={() => handleCheckout(\"price_1QrQ4ZBrqiWlVPadCkhLhtiZ\")}\n              className=\"SubscribeButton\"\n            >\n              Subscribe for £1/week\n            </button>\n            <button\n              onClick={() => handleCheckout(\"price_1QrQ5NBrqiWlVPadFBuBKKSM\")}\n              className=\"SubscribeButton\"\n            >\n              Subscribe for £3/month\n            </button>\n            <button\n              onClick={() => handleCheckout(\"price_1QrQ75BrqiWlVPadEML30BoJ\")}\n              className=\"SubscribeButton\"\n            >\n              Subscribe for £30/year\n            </button>\n          </div>\n        )\n      ) : (\n        // If the user is not logged in, show nothing\n        <div></div>\n      )}\n\n      <div id=\"GeneratePredictions\" className=\"GeneratePredictions\" />\n      <Collapsable\n        buttonText={\"Multis\"}\n        element={\n          <Fragment>\n            <div id=\"bestPredictions\" className=\"bestPredictions\" />\n            <div id=\"exoticOfTheDay\" className=\"exoticOfTheDay\" />\n            {/* <div id=\"successMeasure2\" /> */}\n            <div id=\"RowOneContainer\" className=\"RowOneContainer\">\n              <div id=\"BTTS\" className=\"RowOne\" />\n              <div id=\"longShots\" className=\"RowOne\" />\n              <div id=\"draws\" className=\"RowOne\" />\n            </div>\n\n            <div id=\"insights\" />\n          </Fragment>\n        }\n      />\n      <div id=\"successMeasure2\" />\n      <div id=\"highLowLeagues\" className=\"HighLowLeagues\" />\n      <div id=\"risk\" />\n      <div id=\"successMeasure\" />\n      <div id=\"tables\" />\n      <div id=\"homeBadge\" />\n      <div id=\"FixtureContainerHeaders\"></div>\n\n      <div id=\"FixtureContainer\">\n        <h6 className=\"WelcomeText\">{welcomeTextOne}</h6>\n        <h6 className=\"GetMatchStatText\">\n          Below is an example of our tips/results overview for you to\n          familiarise yourself with. Get real fixtures using the date buttons\n          above. When loaded, tap on one to see full match stats.\n        </h6>\n\n        <div className=\"ExplainerContainer\">\n          <span className=\"oddsHomeExplainer\">Home odds</span>\n          <span className=\"emptyHomeTeam\"></span>\n          <span className=\"scoreExplainer\">Result / KO Time</span>\n          <span className=\"predictionExplainer\">Our Prediction</span>\n          <span className=\"emptyAwayTeam\"></span>\n          <span className=\"oddsAwayExplainer\">Away odds</span>\n        </div>\n\n        <Fixture\n          fixtures={mockedFixtures.matches}\n          mock={true}\n          className={\"individualFixture\"}\n        />\n\n        <div>\n          <h6 className=\"WelcomeText\">{welcomeTextTwo}</h6>\n          <h6 className=\"WelcomeText\">\n            We cover a range of leagues, including\n            <ul className=\"AllLeagues\">\n              <li className=\"League\" key=\"premier-league\">\n                Premier League\n              </li>\n              <li className=\"League\" key=\"english-football-league\">\n                English Football League\n              </li>\n              <li className=\"League\" key=\"la-liga\">\n                La Liga\n              </li>\n              <li className=\"League\" key=\"serie-a\">\n                Serie A\n              </li>\n              <li className=\"League\" key=\"bundesliga\">\n                Bundesliga\n              </li>\n              <li className=\"League\" key=\"ligue-1\">\n                Ligue 1\n              </li>\n              <li className=\"League\" key=\"mls\">\n                MLS\n              </li>\n              <li className=\"League\" key=\"primeira-liga\">\n                Primeira Liga\n              </li>\n              <li className=\"League\" key=\"loads-more\">\n                Loads more...\n              </li>\n            </ul>\n          </h6>\n        </div>\n\n        <div>\n          <div className=\"DataText\">Raw data from</div>\n          <a\n            className=\"DataLink\"\n            href=\"https://www.footystats.org\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            footystats.org\n          </a>\n        </div>\n        <div className=\"bitcoin\" id=\"bitcoin\">\n          <a\n            href=\"https://www.ko-fi.com/xgtipping\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Donations\n          </a>\n          <span className=\"bitcoinSymbol\">&#x20bf;itcoin address</span>\n          <span className=\"bitcoinAddress\">\n            bc1q7j62txkvhfu0dt3l0s07saze6pjnyzs26wfgp0\n          </span>\n        </div>\n      </div>\n      <div id=\"XGDiff\" />\n\n      <div className=\"Social\">\n        <TwitterShareButton\n          url={\"www.xgtipping.com\"}\n          title={\"#XGTipping\"}\n          className=\"ShareButton\"\n        >\n          <TwitterIcon size={\"3em\"} round={true} />\n        </TwitterShareButton>\n        <RedditShareButton\n          url={\"www.xgtipping.com\"}\n          title={\"XGTipping\"}\n          className=\"ShareButton\"\n        >\n          <RedditIcon size={\"3em\"} round={true} />\n        </RedditShareButton>\n        <FacebookShareButton\n          url={\"www.xgtipping.com\"}\n          quote={\"XGTipping - data-driven football predictions\"}\n          className=\"ShareButton\"\n        >\n          <FacebookIcon size={\"3em\"} round={true} />\n        </FacebookShareButton>\n        <WhatsappShareButton\n          url={\"www.xgtipping.com\"}\n          title={\"XGTipping\"}\n          separator=\": \"\n          className=\"ShareButton\"\n        >\n          <WhatsappIcon size={\"3em\"} round={true} />\n        </WhatsappShareButton>\n        <TelegramShareButton\n          url={\"XGTipping\"}\n          title={\"XGTipping\"}\n          className=\"ShareButton\"\n        >\n          <TelegramIcon size={\"3em\"} round={true} />\n        </TelegramShareButton>\n      </div>\n\n      <Collapsable buttonText={\"Contact\"} element={<StripePolicies />} />\n    </div>\n  );\n}\n\nexport default function App() {\n  return (\n    <AuthProvider>\n      <Routes>\n        <Route path=\"/\" element={<AppContent />} />\n      </Routes>\n    </AuthProvider>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/xg-tipping-high-resolution-logo-transparent.90176ea6.png\";","import React from 'react';\nimport myImage from './images/xg-tipping-high-resolution-logo-transparent.png';\n\nconst Logo = () => {\n  return (\n    <div className=\"logo-container\">\n      <img src={myImage} alt=\"XG Tipping logo\" className='responsive-logo'/>\n    </div>\n  );\n};\n\nexport default Logo;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CreateBadge } from \"./createBadge\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction TeamPage() {\n  const [dataState, setData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const responseHome = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}team/${storedFixtureDetailsJson.homeId}`\n      );\n      const resultHome = await responseHome.json();\n\n      const responseAway = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}team/${storedFixtureDetailsJson.awayId}`\n      );\n      const resultAway = await responseAway.json();\n      // setData(result.data.stadium_name);\n\n      let indexHome = resultHome.data.findIndex(\n        (x) => x.season_format === \"Domestic League\"\n      );\n      let indexAway = resultAway.data.findIndex(\n        (x) => x.season_format === \"Domestic League\"\n      );\n\n      if (resultHome.data[indexHome].stats.seasonScoredNum_overall) {\n        setData((test) => ({\n          ...test,\n          scoredOverallHome:\n            resultHome.data[indexHome].stats.seasonScoredNum_overall,\n          playedHomeOnly:\n            resultHome.data[indexHome].stats.seasonMatchesPlayed_home,\n          scoredOverallHomeOnly:\n            resultHome.data[indexHome].stats.seasonScoredNum_home,\n          conceededOverallHome:\n            resultHome.data[indexHome].stats.seasonConcededNum_overall,\n          conceededOverallHomeOnly:\n            resultHome.data[indexHome].stats.seasonConcededNum_home,\n\n          PPGOverallHome: resultHome.data[indexHome].stats.seasonPPG_overall,\n          PPGOverallHomeOnly: resultHome.data[indexHome].stats.seasonPPG_home,\n          leaguePosition_overallHome:\n            resultHome.data[indexHome].stats.leaguePosition_overall,\n          leaguePosition_HomeOnly:\n            resultHome.data[indexHome].stats.leaguePosition_home,\n          averageAttendance:\n            resultHome.data[indexHome].stats.average_attendance_home,\n          BTTSPercentage_overallHome:\n            resultHome.data[indexHome].stats.seasonBTTSPercentage_overall,\n          BTTSAndWinPercentage_Home:\n            resultHome.data[indexHome].stats.BTTS_and_win_percentage_overall,\n          BTTSAndLosePercentage_Home:\n            resultHome.data[indexHome].stats.BTTS_and_lose_percentage_overall,\n          BTTSBothHalvesHome:\n            resultHome.data[indexHome].stats\n              .BTTS_both_halves_percentage_overall,\n          GoalDifferenceHT_overall_Home:\n            resultHome.data[indexHome].stats.GoalDifferenceHT_overall,\n          GD_2hg_overall_Home: resultHome.data[indexHome].stats.gd_2hg_overall,\n          leadingAtHTPercentage_overallHome:\n            resultHome.data[indexHome].stats.leadingAtHTPercentage_overall,\n          seasonOver15Percentage_overallHome:\n            resultHome.data[indexHome].stats.seasonOver15Percentage_overall,\n          seasonOver25Percentage_overallHome:\n            resultHome.data[indexHome].stats.seasonOver25Percentage_overall,\n          seasonOver35Percentage_overallHome:\n            resultHome.data[indexHome].stats.seasonOver35Percentage_overall,\n          seasonOver45Percentage_overallHome:\n            resultHome.data[indexHome].stats.seasonOver45Percentage_overall,\n          scoredBothHalvesPercentage_overallHome:\n            resultHome.data[indexHome].stats.scoredBothHalvesPercentage_overall,\n          shots_on_target_per_goals_scored_overallHome:\n            resultHome.data[indexHome].stats.additional_info\n              .shots_on_target_per_goals_scored_overall,\n          cornersTotalAVG_overallHome:\n            resultHome.data[indexHome].stats.cornersTotalAVG_overall,\n          cardsAVG_overallHome:\n            resultHome.data[indexHome].stats.cardsAVG_overall,\n          foulsAVG_overallHome:\n            resultHome.data[indexHome].stats.foulsAVG_overall,\n          penalties_won_per_match_overallHome:\n            resultHome.data[indexHome].stats.additional_info\n              .penalties_won_per_match_overall,\n          penalty_in_a_match_percentage_overallHome:\n            resultHome.data[indexHome].stats.additional_info\n              .penalty_in_a_match_percentage_overall,\n\n          scoredOverallAway:\n            resultAway.data[indexAway].stats.seasonScoredNum_overall,\n          playedAwayOnly:\n            resultAway.data[indexAway].stats.seasonMatchesPlayed_away,\n          scoredOverallAwayOnly:\n            resultAway.data[indexAway].stats.seasonScoredNum_away,\n          conceededOverallAway:\n            resultAway.data[indexAway].stats.seasonConcededNum_overall,\n          conceededOverallAwayOnly:\n            resultAway.data[indexAway].stats.seasonConcededNum_away,\n\n          PPGOverallAway: resultAway.data[indexAway].stats.seasonPPG_overall,\n          PPGOverallAwayOnly: resultAway.data[indexAway].stats.seasonPPG_away,\n          leaguePosition_overallAway:\n            resultAway.data[indexAway].stats.leaguePosition_overall,\n          leaguePosition_AwayOnly:\n            resultAway.data[indexAway].stats.leaguePosition_away,\n          BTTSPercentage_overallAway:\n            resultAway.data[indexAway].stats.seasonBTTSPercentage_overall,\n          BTTSAndWinPercentage_Away:\n            resultAway.data[indexAway].stats.BTTS_and_win_percentage_overall,\n          BTTSAndLosePercentage_Away:\n            resultAway.data[indexAway].stats.BTTS_and_lose_percentage_overall,\n          BTTSBothHalvesAway:\n            resultAway.data[indexAway].stats\n              .BTTS_both_halves_percentage_overall,\n          GoalDifferenceHT_overall_Away:\n            resultAway.data[indexAway].stats.GoalDifferenceHT_overall,\n          GD_2hg_overall_Away: resultAway.data[indexAway].stats.gd_2hg_overall,\n          leadingAtHTPercentage_overallAway:\n            resultAway.data[indexAway].stats.leadingAtHTPercentage_overall,\n          seasonOver15Percentage_overallAway:\n            resultAway.data[indexAway].stats.seasonOver15Percentage_overall,\n          seasonOver25Percentage_overallAway:\n            resultAway.data[indexAway].stats.seasonOver25Percentage_overall,\n          seasonOver35Percentage_overallAway:\n            resultAway.data[indexAway].stats.seasonOver35Percentage_overall,\n          seasonOver45Percentage_overallAway:\n            resultAway.data[indexAway].stats.seasonOver45Percentage_overall,\n          scoredBothHalvesPercentage_overallAway:\n            resultAway.data[indexAway].stats.scoredBothHalvesPercentage_overall,\n          shots_on_target_per_goals_scored_overallAway:\n            resultAway.data[indexAway].stats.additional_info\n              .shots_on_target_per_goals_scored_overall,\n\n          cornersTotalAVG_overallAway:\n            resultAway.data[indexAway].stats.cornersTotalAVG_overall,\n          cardsAVG_overallAway:\n            resultAway.data[indexAway].stats.cardsAVG_overall,\n          foulsAVG_overallAway:\n            resultAway.data[indexAway].stats.foulsAVG_overall,\n          penalties_won_per_match_overallAway:\n            resultAway.data[indexAway].stats.additional_info\n              .penalties_won_per_match_overall,\n          penalty_in_a_match_percentage_overallAway:\n            resultAway.data[indexAway].stats.additional_info\n              .penalty_in_a_match_percentage_overall,\n        }));\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  const storedDataHome = useSelector((state) => state.data.dataHome);\n  const jsonDataHome = JSON.parse(storedDataHome);\n  const propertyNamesHome = Object.entries(jsonDataHome);\n\n  const storedDataHomeDef = useSelector((state) => state.data.dataHomeDef);\n  const jsonDataHomeDef = JSON.parse(storedDataHomeDef);\n  const propertyNamesHomeDef = Object.entries(jsonDataHomeDef);\n\n  const storedDataallTeamResultsHome = useSelector(\n    (state) => state.data.allTeamResultsHome\n  );\n  const jsonDataallTeamResultsHome = JSON.parse(storedDataallTeamResultsHome);\n  const propertyNamesallTeamResultsHome = Object.values(\n    jsonDataallTeamResultsHome\n  );\n\n  const homeDetails = useSelector((state) => state.data.homeDetails);\n  const jsonHomeDetails = JSON.parse(homeDetails);\n\n  const storedDataAway = useSelector((state) => state.data.dataAway);\n  const jsonDataAway = JSON.parse(storedDataAway);\n  const propertyNamesAway = Object.entries(jsonDataAway);\n\n  const storedDataAwayDef = useSelector((state) => state.data.dataAwayDef);\n  const jsonDataAwayDef = JSON.parse(storedDataAwayDef);\n  const propertyNamesAwayDef = Object.entries(jsonDataAwayDef);\n\n  const storedDataallTeamResultsAway = useSelector(\n    (state) => state.data.allTeamResultsAway\n  );\n  const jsonDataallTeamResultsAway = JSON.parse(storedDataallTeamResultsAway);\n  const propertyNamesallTeamResultsAway = Object.values(\n    jsonDataallTeamResultsAway\n  );\n\n  const awayDetails = useSelector((state) => state.data.awayDetails);\n  const jsonAwayDetails = JSON.parse(awayDetails);\n\n  const storedFixtureDetails = useSelector(\n    (state) => state.data.fixtureDetails\n  );\n  const storedFixtureDetailsJson = JSON.parse(storedFixtureDetails);\n\n  const options = {\n    plugins: {\n      title: {\n        display: true,\n        text: \"Team comparison\",\n      },\n    },\n    aspectRatio: 0.5,\n    maintainAspectRatio: true,\n    responsive: true,\n    scales: {\n      x: {\n        stacked: true,\n      },\n      y: {\n        stacked: true,\n        display: false,\n      },\n    },\n  };\n  const labels = [\n    storedFixtureDetailsJson.homeTeamName,\n    storedFixtureDetailsJson.awayTeamName,\n  ];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        data: [\n          jsonHomeDetails[\"Attacking Strength\"],\n          jsonAwayDetails[\"Attacking Strength\"],\n        ],\n        label: \"Attacking Strength\",\n        backgroundColor: \"#030061\",\n      },\n      {\n        data: [\n          jsonHomeDetails[\"Defensive Strength\"],\n          jsonAwayDetails[\"Defensive Strength\"],\n        ],\n        label: \"Defensive Strength\",\n        backgroundColor: \"#CC3314\",\n      },\n    ],\n  };\n\n  return (\n    <div className=\"TeamStatsContainer\">\n      <div className=\"FixtureHeadingContiner\">\n        <CreateBadge\n          image={storedFixtureDetailsJson.homeTeamBadge}\n          ClassName=\"HomeTeamBadge\"\n          alt=\"Home team badge\"\n        ></CreateBadge>\n        {`${storedFixtureDetailsJson.homeTeamName} v ${storedFixtureDetailsJson.awayTeamName}`}\n        <CreateBadge\n          image={storedFixtureDetailsJson.awayTeamBadge}\n          ClassName=\"AwayTeamBadge\"\n          alt=\"Away team badge\"\n        ></CreateBadge>\n      </div>\n      <h3>\n        {storedFixtureDetailsJson.stadium} KO: {storedFixtureDetailsJson.time} |\n        Average Attendance: {dataState.averageAttendance}\n      </h3>\n      <h3>\n        XGTipping Prediction: {storedFixtureDetailsJson.homeGoals} -{\" \"}\n        {storedFixtureDetailsJson.awayGoals}\n      </h3>\n      <div className=\"TeamStats\">\n        <ul className=\"HomeTeamStats\">\n          <iframe\n            src={`https://footystats.org/api/club?id=${storedFixtureDetailsJson.homeId}`}\n            height=\"100%\"\n            width=\"100%\"\n            style={{\n              height: \"420px\",\n              width: \"100%\",\n              border: \"0.1em solid #030061\",\n            }}\n          ></iframe>\n          <h3>{storedFixtureDetailsJson.homeTeamName}</h3>\n          {propertyNamesHome.map(([key, value], index) => (\n            <li key={index}>\n              <strong>{key}:</strong>{\" \"}\n              {typeof value === \"object\" ? JSON.stringify(value) : value}\n            </li>\n          ))}\n          <ul className=\"HomeTeamStats\">\n            {propertyNamesHomeDef.map(([key, value], index) => (\n              <li key={index}>\n                <strong>{key}:</strong>{\" \"}\n                {typeof value === \"object\" ? JSON.stringify(value) : value}\n              </li>\n            ))}\n          </ul>\n          <li>Scored overall: {dataState.scoredOverallHome}</li>\n          <li>Conceeded overall: {dataState.conceededOverallHome}</li>\n          <li>\n            Average scored home only:{\" \"}\n            {(\n              dataState.scoredOverallHomeOnly / dataState.playedHomeOnly\n            ).toFixed(2)}\n          </li>\n          <li>\n            Average conceeded home only:{\" \"}\n            {(\n              dataState.conceededOverallHomeOnly / dataState.playedHomeOnly\n            ).toFixed(2)}\n          </li>\n          <li>PPG overall: {dataState.PPGOverallHome}</li>\n          <li>PPG home only: {dataState.PPGOverallHomeOnly}</li>\n          <li>League position: {dataState.leaguePosition_overallHome}</li>\n          <li>\n            League position home only: {dataState.leaguePosition_HomeOnly}\n          </li>\n          <li>BTTS {dataState.BTTSPercentage_overallHome}%</li>\n          <li>BTTS and win: {dataState.BTTSAndWinPercentage_Home}%</li>\n          <li>BTTS and lose: {dataState.BTTSAndLosePercentage_Home}%</li>\n          <li>BTTS both halves: {dataState.BTTSBothHalvesHome}%</li>\n          <li>\n            Goal diff 1st half only: {dataState.GoalDifferenceHT_overall_Home}\n          </li>\n          <li>Goal diff 2nd half only: {dataState.GD_2hg_overall_Home}</li>\n          <li>\n            Leading at half time: {dataState.leadingAtHTPercentage_overallHome}%\n          </li>\n          <li>\n            Over 1.5 goals in games:{\" \"}\n            {dataState.seasonOver15Percentage_overallHome}%\n          </li>\n          <li>\n            Over 2.5 goals in games:{\" \"}\n            {dataState.seasonOver25Percentage_overallHome}%\n          </li>\n          <li>\n            Over 3.5 goals in games:{\" \"}\n            {dataState.seasonOver35Percentage_overallHome}%\n          </li>\n          <li>\n            Over 4.5 goals in games:{\" \"}\n            {dataState.seasonOver45Percentage_overallHome}%\n          </li>\n          <li>\n            Scored both halves:{\" \"}\n            {dataState.scoredBothHalvesPercentage_overallHome}%\n          </li>\n          <li>\n            SOTs per goal:{\" \"}\n            {dataState.shots_on_target_per_goals_scored_overallHome}\n          </li>\n          <li>Corners in game avg: {dataState.cornersTotalAVG_overallHome}</li>\n          <li>Cards avg: {dataState.cardsAVG_overallHome}</li>\n          <li>Fouls against avg: {dataState.foulsAVG_overallHome}</li>\n          <li>\n            Penalties won avg: {dataState.penalties_won_per_match_overallHome}\n          </li>\n          <li>\n            Penalties in match:{\" \"}\n            {dataState.penalty_in_a_match_percentage_overallHome}%\n          </li>\n        </ul>\n        <ul className=\"AwayTeamStats\">\n          <iframe\n            src={`https://footystats.org/api/club?id=${storedFixtureDetailsJson.awayId}`}\n            height=\"100%\"\n            width=\"100%\"\n            style={{\n              height: \"420px\",\n              width: \"100%\",\n              color: \"#030061\",\n              border: \"0.1em solid #030061\",\n            }}\n          ></iframe>\n          <h3>{storedFixtureDetailsJson.awayTeamName}</h3>\n          {propertyNamesAway.map(([key, value], index) => (\n            <li key={index}>\n              <strong>{key}:</strong>{\" \"}\n              {typeof value === \"object\" ? JSON.stringify(value) : value}\n            </li>\n          ))}\n          <ul className=\"AwayTeamStats\">\n            {propertyNamesAwayDef.map(([key, value], index) => (\n              <li key={index}>\n                <strong>{key}:</strong>{\" \"}\n                {typeof value === \"object\" ? JSON.stringify(value) : value}\n              </li>\n            ))}\n          </ul>\n          <li>Scored overall: {dataState.scoredOverallAway}</li>\n          <li>Conceeded overall: {dataState.conceededOverallAway}</li>\n          <li>\n            Average scored away only:{\" \"}\n            {(\n              dataState.scoredOverallAwayOnly / dataState.playedAwayOnly\n            ).toFixed(2)}\n          </li>\n          <li>\n            Average conceeded away only:{\" \"}\n            {(\n              dataState.conceededOverallAwayOnly / dataState.playedAwayOnly\n            ).toFixed(2)}\n          </li>\n          <li>PPG overall: {dataState.PPGOverallAway}</li>\n          <li>PPG away only: {dataState.PPGOverallAwayOnly}</li>\n          <li>League position: {dataState.leaguePosition_overallAway}</li>\n          <li>\n            League position away only: {dataState.leaguePosition_AwayOnly}\n          </li>\n          <li>BTTS: {dataState.BTTSPercentage_overallAway}%</li>\n          <li>BTTS and win: {dataState.BTTSAndWinPercentage_Away}%</li>\n          <li>BTTS and lose: {dataState.BTTSAndLosePercentage_Away}%</li>\n          <li>BTTS both halves: {dataState.BTTSBothHalvesAway}%</li>\n          <li>\n            Goal diff 1st half only: {dataState.GoalDifferenceHT_overall_Away}\n          </li>\n          <li>Goal diff 2nd half only: {dataState.GD_2hg_overall_Away}</li>\n          <li>\n            Leading at half time: {dataState.leadingAtHTPercentage_overallAway}%\n          </li>\n          <li>\n            Over 1.5 goals in games:{\" \"}\n            {dataState.seasonOver15Percentage_overallAway}%\n          </li>\n          <li>\n            Over 2.5 goals in games:{\" \"}\n            {dataState.seasonOver25Percentage_overallAway}%\n          </li>\n          <li>\n            Over 3.5 goals in games:{\" \"}\n            {dataState.seasonOver35Percentage_overallAway}%\n          </li>\n          <li>\n            Over 4.5 goals in games:{\" \"}\n            {dataState.seasonOver45Percentage_overallAway}%\n          </li>\n          <li>\n            Scored both halves:{\" \"}\n            {dataState.scoredBothHalvesPercentage_overallAway}%\n          </li>\n          <li>\n            SOTs per goal:{\" \"}\n            {dataState.shots_on_target_per_goals_scored_overallAway}\n          </li>\n          <li>Corners in game avg: {dataState.cornersTotalAVG_overallAway}</li>\n          <li>Cards avg: {dataState.cardsAVG_overallAway}</li>\n          <li>Fouls against avg: {dataState.foulsAVG_overallAway}</li>\n          <li>\n            Penalties won avg: {dataState.penalties_won_per_match_overallAway}\n          </li>\n          <li>\n            Penalties in match:{\" \"}\n            {dataState.penalty_in_a_match_percentage_overallAway}%\n          </li>\n        </ul>\n        <div className=\"ChartContainer\">\n          <span className=\"Spacer\"></span>\n          <Bar options={options} data={data} className=\"ComparisonBar\" />\n          <span className=\"Spacer\"></span>\n        </div>\n        <ul className=\"HomeTeamResults\">\n          {propertyNamesallTeamResultsHome.map((match, index) => (\n            <>\n              <div className=\"MatchDate\">{match.date}</div>\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{match.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {match.homeGoals} : {match.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{match.awayTeam}</div>\n              </div>\n            </>\n          ))}\n        </ul>\n        <ul className=\"AwayTeamResults\">\n          {propertyNamesallTeamResultsAway.map((match, index) => (\n            <>\n              <div className=\"MatchDate\">{match.date}</div>\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{match.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {match.homeGoals} : {match.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{match.awayTeam}</div>\n              </div>\n            </>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default TeamPage;\n","import React, { Fragment } from \"react\";\n\nexport const SuccessPage = () => {\n  return (\n    <Fragment>\n      <h1>Payment Successful! Thank you for subscribing.</h1>\n      <button\n      className=\"PaymentReturn\"\n        onClick={() => {\n          window.location.href = \"https://www.xgtipping.com/\";\n        }}\n      >\n        Return to XGTipping\n      </button>\n    </Fragment>\n  );\n};\n","import React from \"react\";\n\nexport const CancelPage = () => {\n  return (\n    <div>\n      <h1>Payment Cancelled</h1>\n      <button\n        className=\"PaymentReturn\"\n        onClick={() => {\n          window.location.href = \"https://www.xgtipping.com/\";\n        }}\n      >\n        Return to XGTipping\n      </button>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { getAuth, sendPasswordResetEmail } from \"firebase/auth\";\n\nconst PasswordReset = () => {\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const auth = getAuth();\n\n  const handleReset = async (e) => {\n    e.preventDefault();\n    setMessage(\"\");\n    setError(\"\");\n    try {\n      await sendPasswordResetEmail(auth, email);\n      setMessage(\"Password reset email sent! Check your inbox.\");\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Reset Password</h2>\n      {message && <p style={{ color: \"green\" }}>{message}</p>}\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      <form onSubmit={handleReset}>\n        <input\n          type=\"email\"\n          className=\"ResetPasswordField\"\n          placeholder=\"Enter your email address\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        />\n        <button type=\"submit\">Send Reset Email</button>\n      </form>\n    </div>\n  );\n};\n\nexport default PasswordReset;\n","import { useState, useEffect } from \"react\";\nimport { getAuth } from \"firebase/auth\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { db } from \"../firebase\"; // Ensure you have Firebase initialized\n\nexport default function CancelSubscription() {\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [isPaidUser, setIsPaidUser] = useState(false);\n\n  useEffect(() => {\n    async function fetchSubscriptionStatus() {\n      const user = getAuth().currentUser;\n      if (!user) return;\n\n      try {\n        const userRef = doc(db, \"users\", user.uid);\n        const userSnap = await getDoc(userRef);\n\n        if (userSnap.exists()) {\n          const data = userSnap.data();\n          setIsPaidUser(data.isPaidUser || false);\n        } else {\n          console.error(\"User document not found in Firestore\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching subscription status:\", error);\n      }\n    }\n\n    fetchSubscriptionStatus();\n  }, []);\n\n  const handleCancelSubscription = async () => {\n    setLoading(true);\n    setMessage(\"\");\n\n    const user = getAuth().currentUser;\n\n    if (!user) {\n      setMessage(\"User not authenticated.\");\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const response = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}cancel-subscription`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ uid: user.uid }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setMessage(\"✅ Subscription cancellation scheduled.\");\n        setIsPaidUser(false);\n      } else {\n        setMessage(`⚠️ ${data.error || \"Failed to cancel subscription.\"}`);\n      }\n    } catch (error) {\n      setMessage(\"⚠️ Error cancelling subscription.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"p-4 bg-white shadow-md rounded-lg\">\n      <h2 className=\"text-xl font-semibold mb-2\">Manage Subscription</h2>\n      {isPaidUser ? (\n        <>\n          <p className=\"mb-2\">Your subscription is active. Cancelations will come into effect after the end of your current billing cycle and are irreversible</p>\n          <button\n            onClick={handleCancelSubscription}\n            className=\"bg-red-500 text-white px-4 py-2 rounded\"\n            disabled={loading}\n          >\n            {loading ? \"Cancelling...\" : \"Cancel Subscription\"}\n          </button>\n        </>\n      ) : (\n        <p className=\"text-gray-500\">You do not have an active subscription.</p>\n      )}\n      {message && <p className=\"mt-2 text-sm\">{message}</p>}\n    </div>\n  );\n}\n","export async function getHighestScoringLeagues() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}over25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    console.log(leagues)\n\n    for (let index = 0; index < leagues.data.top_leagues.data.length; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        over25Percentage:\n          leagues.data.top_leagues.data[index].seasonOver25Percentage_overall,\n        division: leagues.data.top_leagues.data[index].division,\n        leagueId: leagues.data.top_leagues.data[index].id,\n        domestic_scale: leagues.data.top_leagues.data[index].domestic_scale\n      };\n      arr.push(league);\n    }\n  });\n  return arr;\n}\n\nexport async function getLowestScoringLeagues() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}under25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    for (let index = 0; index < leagues.data.top_leagues.data.length; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        under25Percentage:\n          leagues.data.top_leagues.data[index].seasonUnder25Percentage_overall,\n          division: leagues.data.top_leagues.data[index].division,\n        leagueId: leagues.data.top_leagues.data[index].id,\n      };\n      arr.push(league);\n    }\n  });\n  return arr;\n}\n\nexport async function getHighestScoringTeams() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}over25`);\n  let arr = [];\n  await teamsList.json().then(async (teams) => {\n    for (let index = 0; index < teams.data.top_teams.data.length; index++) {\n      const team = {\n        team: teams.data.top_teams.data[index].full_name,\n        next_match_team: teams.data.top_teams.data[index].next_match_team,\n        teamCountry: teams.data.top_teams.data[index].country,\n        averageGoals: teams.data.top_teams.data[index].seasonAVG_overall,\n        over25Percentage:\n          teams.data.top_teams.data[index].seasonOver25Percentage_overall,\n        division: teams.data.top_teams.data[index].division,\n        leagueId: teams.data.top_teams.data[index].id,\n      };\n      arr.push(team);\n    }\n  });\n  return arr;\n}\n\nasync function convertTimestamp(timestamp) {\n  let newDate = new Date(timestamp * 1000);\n  \n  // Extract date components\n  let [day, month, year] = newDate.toLocaleDateString(\"en-GB\").split(\"/\");\n\n  // Extract time (24-hour format)\n  let time = newDate.toLocaleTimeString(\"en-GB\", { hour: \"2-digit\", minute: \"2-digit\" });\n\n  // Format: YYYY-DD-MM HH:MM\n  return `${year}-${day}-${month} ${time}`;\n}\n\n\nexport async function getHighestScoringFixtures() {\n  let fixturesList = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}over25`\n  );\n\n  let arr = [];\n  \n  await fixturesList.json().then(async (fixture) => {\n    // Extract fixture data\n    let fixtures = fixture.data.top_fixtures.data;\n    console.log(fixtures)\n\n    // Sort fixtures by `date_unix` (soonest first)\n    fixtures.sort((a, b) => a.date_unix - b.date_unix);\n\n    // Process sorted fixtures\n    for (let index = 0; index < fixtures.length; index++) {\n      const game = {\n        date: fixtures[index].date_unix\n          ? await convertTimestamp(fixtures[index].date_unix)\n          : \"N/A\",\n        country: fixtures[index].country,\n        odds: fixtures[index].odds_ft_over25,\n        avgGoals: fixtures[index].avg_potential,\n        match: fixtures[index].name,\n        progress: fixtures[index].progress\n      };\n      arr.push(game);\n    }\n  });\n\n  return arr;\n}\n\nexport async function getBTTSFixtures() {\n  let fixturesList = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}btts`\n  );\n\n  let arr = [];\n  console.log(\"called\")\n  \n  await fixturesList.json().then(async (fixture) => {\n    // Extract fixture data\n    let fixtures = fixture.data.top_fixtures.data;\n    console.log(fixtures)\n    console.log(fixture.data)\n    // Sort fixtures by `date_unix` (soonest first)\n    fixtures.sort((a, b) => a.date_unix - b.date_unix);\n\n    // Process sorted fixtures\n    for (let index = 0; index < fixtures.length; index++) {\n      const game = {\n        date: fixtures[index].date_unix\n          ? await convertTimestamp(fixtures[index].date_unix)\n          : \"N/A\",\n        country: fixtures[index].country,\n        odds: fixtures[index].odds_btts_yes,\n        avgGoals: fixtures[index].avg_potential,\n        match: fixtures[index].name,\n        progress: fixtures[index].progress\n      };\n      arr.push(game);\n    }\n  });\n\n  return arr;\n}\n\nexport async function getBTTSTeams() {\n  let fixturesList = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}btts`\n  );\n\n  let arr = [];\n  console.log(\"called\")\n  \n  await fixturesList.json().then(async (fixture) => {\n    // Extract fixture data\n    let teams = fixture.data.top_teams.data;\n    console.log(teams)\n    // Sort teams by `date_unix` (soonest first)\n    teams.sort((a, b) => b.seasonBTTSPercentage_overall - a.seasonBTTSPercentage_overall);\n\n    // Process sorted teams\n    for (let index = 0; index < teams.length; index++) {\n      const game = {\n        date: teams[index].next_match_date\n          ? await convertTimestamp(teams[index].next_match_date)\n          : \"N/A\",\n        country: teams[index].country,\n        odds: teams[index].odds_btts_yes,\n        played: teams[index].seasonMatchesPlayed_overall,\n        bttsPercentage: teams[index].seasonBTTSPercentage_overall,\n        name: teams[index].name,\n        opponent: teams[index].next_match_team,\n        progress: teams[index].progress\n      };\n      arr.push(game);\n    }\n  });\n\n  return arr;\n}\n\n","import React, { Fragment } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useEffect, useState } from \"react\";\nimport { getHighestScoringLeagues } from \"../logic/getStatsInsights\";\nimport Logo from \"../components/Logo\"\n\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: \"#030052\",\n      color: theme.palette.common.white,\n      padding: 2,\n      textAlign: \"center\",\n      fontSize: \"1em\",\n      fontFamily: \"inherit\",\n    },\n    body: {\n      fontSize: \"1em\",\n      fontFamily: \"inherit\",\n      padding: 5,\n    },\n  }))(TableCell);\n  \n  const StyledTableRow = withStyles((theme) => ({\n    root: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.action.hover,\n        textAlign: \"center\",\n      },\n    },\n  }))(TableRow);\n\n\nexport default function Over25() {\n  const [leagues, setLeagues] = useState([]);\n\n  useEffect(() => {\n    async function fetchLeagues() {\n      const data = await getHighestScoringLeagues();\n      setLeagues(data);\n    }\n    fetchLeagues();\n  }, []);\n\n  const allowedCountries = [\n    \"England\", \"Scotland\", \"Italy\", \"Spain\", \"Germany\", \"France\", \"USA\", \"Denmark\",\n    \"Greece\", \"Turkey\", \"Switzerland\", \"Austria\", \"Norway\", \"Mexico\", \"Poland\",\n    \"Brazil\", \"Argentina\", \"Sweden\", \"Netherlands\", \"Portugal\", \"Belgium\"\n  ];\n\n  // Filter leagues based on allowed countries\n  const filteredLeagues = leagues.filter(league => allowedCountries.includes(league.leagueCountry) && league.division > 0 && league.domestic_scale < 6);\n  console.log(filteredLeagues)\n\n  const headers = [\"League\", \"Country\", \"Avg Goals\", \"Over 2.5%\"];\n\n  return (\n    <Fragment>\n    <Logo/>\n      <h1>Highest Scoring Leagues</h1>\n    <TableContainer component={Paper} className=\"O25Table\">\n      <Table aria-label=\"highest scoring leagues\">\n        <TableHead>\n          <TableRow>\n            {headers.map((header, index) => (\n              <StyledTableCell key={index} align=\"center\">\n                {header}\n              </StyledTableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {filteredLeagues.map((league, index) => (\n            <StyledTableRow key={index}>\n              <StyledTableCell align=\"center\">{league.league}</StyledTableCell>\n              <StyledTableCell align=\"center\">\n                {league.leagueCountry}\n              </StyledTableCell>\n              <StyledTableCell align=\"center\">\n                {league.averageGoals}\n              </StyledTableCell>\n              <StyledTableCell align=\"center\">\n                {league.over25Percentage}%\n              </StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useEffect, useState } from \"react\";\nimport { getLowestScoringLeagues } from \"../logic/getStatsInsights\";\nimport Logo from \"../components/Logo\"\n\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: \"#030052\",\n      color: theme.palette.common.white,\n      padding: 2,\n      textAlign: \"center\",\n      fontSize: \"1em\",\n      fontFamily: \"inherit\",\n    },\n    body: {\n      fontSize: \"1em\",\n      fontFamily: \"inherit\",\n      padding: 5,\n    },\n  }))(TableCell);\n  \n  const StyledTableRow = withStyles((theme) => ({\n    root: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.action.hover,\n        textAlign: \"center\",\n      },\n    },\n  }))(TableRow);\n\n\nexport default function Under25() {\n  const [leagues, setLeagues] = useState([]);\n\n  useEffect(() => {\n    async function fetchLeagues() {\n      const data = await getLowestScoringLeagues();\n      setLeagues(data);\n    }\n    fetchLeagues();\n  }, []);\n\n  const allowedCountries = [\n    \"England\", \"Scotland\", \"Italy\", \"Spain\", \"Germany\", \"France\", \"USA\", \"Denmark\",\n    \"Greece\", \"Turkey\", \"Switzerland\", \"Austria\", \"Norway\", \"Mexico\", \"Poland\",\n    \"Brazil\", \"Argentina\", \"Sweden\", \"Netherlands\", \"Portugal\", \"Belgium\"\n  ];\n\n  // Filter leagues based on allowed countries\n  const filteredLeagues = leagues.filter(league => allowedCountries.includes(league.leagueCountry) && league.division > 0 && league.division < 5);\nconsole.log(filteredLeagues)\n\n  const headers = [\"League\", \"Country\", \"Avg Goals\", \"Under 2.5%\"];\n\n  return (\n    <Fragment>\n    <Logo/>\n      <h1>Lowest Scoring Leagues</h1>\n    <TableContainer component={Paper} className=\"O25Table\">\n      <Table aria-label=\"Lowest scoring leagues\">\n        <TableHead>\n          <TableRow>\n            {headers.map((header, index) => (\n              <StyledTableCell key={index} align=\"center\">\n                {header}\n              </StyledTableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {filteredLeagues.map((league, index) => (\n            <StyledTableRow key={index}>\n              <StyledTableCell align=\"center\">{league.league}</StyledTableCell>\n              <StyledTableCell align=\"center\">\n                {league.leagueCountry}\n              </StyledTableCell>\n              <StyledTableCell align=\"center\">\n                {league.averageGoals}\n              </StyledTableCell>\n              <StyledTableCell align=\"center\">\n                {league.under25Percentage}%\n              </StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useEffect, useState } from \"react\";\nimport { getHighestScoringTeams } from \"../logic/getStatsInsights\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#030052\",\n    color: theme.palette.common.white,\n    padding: 2,\n    textAlign: \"center\",\n    fontSize: \"1em\",\n    fontFamily: \"inherit\",\n  },\n  body: {\n    fontSize: \"1em\",\n    fontFamily: \"inherit\",\n    padding: 5,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\nexport default function HighestScoringTeams() {\n  const [teams, setTeams] = useState([]);\n\n  useEffect(() => {\n    async function fetchTeams() {\n      const data = await getHighestScoringTeams();\n      setTeams(data);\n    }\n    fetchTeams();\n  }, []);\n\n  const allowedCountries = [\n    \"England\",\n    \"Scotland\",\n    \"Italy\",\n    \"Spain\",\n    \"Germany\",\n    \"France\",\n    \"USA\",\n    \"Denmark\",\n    \"Greece\",\n    \"Turkey\",\n    \"Switzerland\",\n    \"Austria\",\n    \"Norway\",\n    \"Mexico\",\n    \"Poland\",\n    \"Brazil\",\n    \"Argentina\",\n    \"Sweden\",\n    \"Netherlands\",\n    \"Portugal\",\n    \"Belgium\",\n  ];\n\n  // Filter teams based on allowed countries\n  const filteredTeams = teams.filter((team) =>\n    allowedCountries.includes(team.teamCountry)\n  );\n\n  const headers = [\"Country\", \"Team\", \"Next Match\", \"Avg Goals\", \"Over 2.5%\"];\n\n  return (\n    <Fragment>\n      <h1>Highest Scoring Teams</h1>\n      <TableContainer component={Paper} className=\"O25Table\">\n        <Table aria-label=\"highest scoring teams\">\n          <TableHead>\n            <TableRow>\n              {headers.map((header, index) => (\n                <StyledTableCell key={index} align=\"center\">\n                  {header}\n                </StyledTableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {filteredTeams.map((team, index) => (\n              <StyledTableRow key={index}>\n                <StyledTableCell align=\"center\">\n                  {team.teamCountry}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">{team.team}</StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.next_match_team}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.averageGoals}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.over25Percentage}%\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useEffect, useState } from \"react\";\nimport { getHighestScoringFixtures } from \"../logic/getStatsInsights\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#030052\",\n    color: theme.palette.common.white,\n    padding: 2,\n    textAlign: \"center\",\n    fontSize: \"1em\",\n    fontFamily: \"inherit\",\n    border: \"1px, solid, black\"\n  },\n  body: {\n    fontSize: \"1em\",\n    fontFamily: \"inherit\",\n    padding: 5,\n    border: \"1px, solid, black\"\n\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\nexport default function HighestScoringFixtures() {\n  const [games, setGames] = useState([]);\n\n  useEffect(() => {\n    async function fetchGames() {\n      const data = await getHighestScoringFixtures();\n      setGames(data);\n    }\n    fetchGames();\n  }, []);\n\n  const allowedCountries = [\n    \"England\",\n    \"Scotland\",\n    \"Italy\",\n    \"Spain\",\n    \"Germany\",\n    \"France\",\n    \"USA\",\n    \"Denmark\",\n    \"Greece\",\n    \"Turkey\",\n    \"Switzerland\",\n    \"Austria\",\n    \"Norway\",\n    \"Mexico\",\n    \"Poland\",\n    \"Brazil\",\n    \"Argentina\",\n    \"Sweden\",\n    \"Netherlands\",\n    \"Portugal\",\n    \"Belgium\",\n  ];\n\n\n  // Filter games based on allowed countries\n  const filteredGames = games.filter((game) =>\n    allowedCountries.includes(game.country) && game.progress > 50 && game.avgGoals > 2.5\n  ).slice(0,30);\n  console.log(filteredGames)\n\n  const headers = [\"Fixture\", \"Date\", \"Country\", \"Odds Over 2.5\", \"Avg Combined Goals\"];\n\n  return (\n    <Fragment>\n      <h1>Fixtures With Highest Goal Potential</h1>\n      <TableContainer component={Paper} className=\"O25Table\">\n        <Table aria-label=\"highest scoring games\">\n          <TableHead>\n            <TableRow>\n              {headers.map((header, index) => (\n                <StyledTableCell key={index} align=\"center\">\n                  {header}\n                </StyledTableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {filteredGames.map((team, index) => (\n              <StyledTableRow key={index}>\n                <StyledTableCell align=\"center\">\n                  {team.match}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.date}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.country}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.odds}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.avgGoals}\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useEffect, useState } from \"react\";\nimport { getBTTSFixtures } from \"../logic/getStatsInsights\";\nimport Logo from \"../components/Logo\"\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#030052\",\n    color: theme.palette.common.white,\n    padding: 2,\n    textAlign: \"center\",\n    fontSize: \"1em\",\n    fontFamily: \"inherit\",\n    border: \"1px, solid, black\"\n  },\n  body: {\n    fontSize: \"1em\",\n    fontFamily: \"inherit\",\n    padding: 5,\n    border: \"1px, solid, black\"\n\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\nexport default function BTTSFixtures() {\n  const [games, setGames] = useState([]);\n\n  useEffect(() => {\n    async function fetchGames() {\n      const data = await getBTTSFixtures();\n      setGames(data);\n    }\n    fetchGames();\n  }, []);\n\n  const allowedCountries = [\n    \"England\",\n    \"Scotland\",\n    \"Italy\",\n    \"Spain\",\n    \"Germany\",\n    \"France\",\n    \"USA\",\n    \"Denmark\",\n    \"Greece\",\n    \"Turkey\",\n    \"Switzerland\",\n    \"Austria\",\n    \"Norway\",\n    \"Mexico\",\n    \"Poland\",\n    \"Brazil\",\n    \"Argentina\",\n    \"Sweden\",\n    \"Netherlands\",\n    \"Portugal\",\n    \"Belgium\",\n  ];\n\n  console.log(games)\n\n  // Filter games based on allowed countries\n  const filteredGames = games.filter((game) =>\n    allowedCountries.includes(game.country) && game.progress > 30 && game.avgGoals > 3\n  ).slice(0,30);\n\n  const headers = [\"Fixture\", \"Date\", \"Country\", \"Odds BTTS Yes\", \"Avg Combined Goals\"];\n\n  return (\n    <Fragment>\n    <Logo/>\n      <h1>Fixtures With Highest BTTS Potential</h1>\n      <TableContainer component={Paper} className=\"O25Table\">\n        <Table aria-label=\"highest scoring games\">\n          <TableHead>\n            <TableRow>\n              {headers.map((header, index) => (\n                <StyledTableCell key={index} align=\"center\">\n                  {header}\n                </StyledTableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {filteredGames.map((team, index) => (\n              <StyledTableRow key={index}>\n                <StyledTableCell align=\"center\">\n                  {team.match}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.date}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.country}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.odds}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.avgGoals}\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useEffect, useState } from \"react\";\nimport { getBTTSTeams } from \"../logic/getStatsInsights\";\nimport Logo from \"../components/Logo\"\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#030052\",\n    color: theme.palette.common.white,\n    padding: 2,\n    textAlign: \"center\",\n    fontSize: \"1em\",\n    fontFamily: \"inherit\",\n    border: \"1px, solid, black\"\n  },\n  body: {\n    fontSize: \"1em\",\n    fontFamily: \"inherit\",\n    padding: 4,\n    border: \"1px, solid, black\"\n\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\nexport default function BTTSTeams() {\n  const [games, setGames] = useState([]);\n\n  useEffect(() => {\n    async function fetchGames() {\n      const data = await getBTTSTeams();\n      setGames(data);\n    }\n    fetchGames();\n  }, []);\n\n  const allowedCountries = [\n    \"England\",\n    \"Scotland\",\n    \"Italy\",\n    \"Spain\",\n    \"Germany\",\n    \"France\",\n    \"USA\",\n    \"Denmark\",\n    \"Greece\",\n    \"Turkey\",\n    \"Switzerland\",\n    \"Austria\",\n    \"Norway\",\n    \"Mexico\",\n    \"Poland\",\n    \"Brazil\",\n    \"Argentina\",\n    \"Sweden\",\n    \"Netherlands\",\n    \"Portugal\",\n    \"Belgium\",\n  ];\n\n  console.log(games)\n\n  // Filter games based on allowed countries\n  const filteredGames = games.filter((game) =>\n    allowedCountries.includes(game.country) && game.played > 10\n  ).slice(0,30);\n\n  const headers = [\"Name\", \"Country\", \"BTTS %\", \"Played\", \"Next Opponent\",  \"Date\", \"Odds BTTS\", ];\n\n  return (\n    <Fragment>\n    <Logo/>\n      <h1>Teams With Best BTTS Records</h1>\n      <TableContainer component={Paper} className=\"O25Table\">\n        <Table aria-label=\"highest scoring games\">\n          <TableHead>\n            <TableRow>\n              {headers.map((header, index) => (\n                <StyledTableCell key={index} align=\"center\">\n                  {header}\n                </StyledTableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {filteredGames.map((team, index) => (\n              <StyledTableRow key={index}>\n                <StyledTableCell align=\"center\">\n                  {team.name}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.country}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.bttsPercentage}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.played}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.opponent}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.date}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {team.odds}\n                </StyledTableCell>\n\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router, Route, Routes, HashRouter } from \"react-router-dom\";\nimport TeamPage from \"./components/Team\";\nimport {SuccessPage} from \"./components/Success\"\nimport {CancelPage} from \"./components/Cancel\"\nimport PasswordReset from \"./components/PasswordReset\";\nimport { Provider } from \"react-redux\";\nimport store from \"./logic/store\"; // Import your Redux store\nimport CancelSubscription from \"./components/CancelSubscription\"\nimport Over25 from \"./components/Over25\"\nimport Under25 from \"./components/Under25\"\nimport HighestScoringTeams from \"./components/HighestScoringTeams\"\nimport HighestScoringFixtures from \"./components/HighestScoringFixtures\";\nimport BTTSFixtures from \"./components/BTTSFixtures\";\nimport BTTSTeams from \"./components/BTTSTeams\";\n\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n    <HashRouter>\n        <Routes>\n          <Route path=\"/fixture\" element={<TeamPage />} />\n          <Route path=\"/success\" element={<SuccessPage />} />\n          <Route path=\"/cancel\" element={<CancelPage />} />\n          <Route path=\"/reset\" element={<PasswordReset />} />\n          <Route path=\"/o25\" element={<Over25 />} />\n          <Route path=\"/u25\" element={<Under25 />} />\n          <Route path=\"/teamshigh\" element={<HighestScoringTeams />} />\n          <Route path=\"/fixtureshigh\" element={<HighestScoringFixtures />} />\n          <Route path=\"/bttsfixtures\" element={<BTTSFixtures />} />\n          <Route path=\"/bttsteams\" element={<BTTSTeams />} />\n          <Route path=\"/cancelsubscription\" element={<CancelSubscription/>} />\n          <Route path=\"/\" exact element={<App />} />\n          {/* <Route path=\"/\" element={<Fixture />} /> */}\n        </Routes>\n        </HashRouter>\n    </Provider>\n    ,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}