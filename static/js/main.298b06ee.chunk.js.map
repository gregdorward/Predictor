{"version":3,"sources":["components/Button.js","components/OddsRadio.js","components/createBadge.js","components/createStatsDiv.js","components/Div.js","logic/getForm.js","components/Slider.js","components/CollapsableElement.js","components/CollapsableStats.js","components/Increment.js","logic/getBTTSPotential.js","components/Carousel.js","components/KofiButton.js","components/SliderDiff.js","logic/getScorePredictions.js","components/LeagueTable.js","logic/getFixtures.js","components/PreviousGames.js","components/HeadToHead.js","components/Table.js","logic/getTeamStats.js","logic/compareFormTrend.js","components/Chart.js","components/SofaScore.js","logic/getStats.js","components/Fixture.js","logic/dataSlice.js","logic/store.js","App.js","components/images/xg-tipping-high-resolution-logo-transparent.png","components/Logo.js","reportWebVitals.js","components/Team.js","index.js"],"names":["Button","props","id","text","variant","type","onClick","onClickEvent","className","style","selectedOdds","OddsRadio","handleOptionChange","setState","value","state","this","name","checked","onChange","Component","CreateBadge","image","ClassName","src","alt","flexShrink","Stats","styleForm","formIndicator","styleBTTS","BTTSBoolean","clicked","formRun","Results","homeOrAway","ResultsHorA","homeOrAwayResults","BTTSArray","FormTextString","StyleOfPlay","StyleOfPlayHomeOrAway","FavouriteRecord","goals","conceeded","possession","XG","XGConceded","XGSwing","toFixed","goalDifference","goalDifferenceHomeOrAway","sot","dangerousAttacks","undefined","leaguePosition","homeOrAwayLeaguePosition","winPercentage","drawPercentage","lossPercentage","ppg","formTrend","CardsTotal","CornersAverage","Div","getForm","match","teams","homeId","awayId","fixtureForm","i","team","fetch","process","response","json","then","formData","lastMatchTimestamp","last_updated_match_timestamp","length","rangeValue","Slide","useState","range","setRange","fractionalValue","setFractionalValue","useEffect","roundedValueOne","Math","round","roundedValueTwo","fractionalOne","oddslib","from","to","precision","fractionalTwo","error","console","log","sx","width","color","event","newValue","valueLabelDisplay","step","min","max","valueLabelFormat","index","Collapsable","transitionTime","trigger","classNameButton","buttonText","classNameFlex","classNameTwo","element","classNameThree","elementTwo","CollapsableStats","children","incrementValue","riskLevel","Increment","IncrementItem","getNewTips","allTips","DecreaseItem","show","getBTTSPotential","homeGoals","awayGoals","directnessHome","directnessAway","homeBTTS","bttsAllPercentageHome","homeOnlyBTTS","bttsPercentageHomeHome","awayOnlyBTTS","bttsPercentageAwayAway","awayBTTS","bttsAllPercentageAway","homeG","awayG","combinedBTTS","bttsFraction","status","awayOdds","btts","bttsChosen","totalGoals","rawFinalHomeGoals","rawFinalAwayGoals","SwiperCore","use","EffectCoverflow","Pagination","Slider","effect","autoHeight","grabCursor","centeredSlides","slidesPerView","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","pagination","clickable","element2","element3","element4","element5","StyledKofiButton","title","kofiID","minimumXG","minimumGD","minimumGDHorA","minimumLast6","SlideDiff","finalHomeGoals","finalAwayGoals","homeOdds","setValue","useCase","marks","parseFloat","lower","upper","Headers","append","drawPredictions","sumStatDAWin","sumStatDALoss","sumStatPossessionWin","sumStatPossessionLoss","sumStatSOTWin","sumStatSOTLoss","sumStatPPGLast10Win","sumStatPPGLast10Loss","sumOddsWin","sumOddsLoss","sumXGForWin","sumXGForLoss","sumXGAgainstWin","sumXGAgainstLoss","allDrawOutcomes","totalROI","totalInvestment","totalProfit","convertTimestamp","timestamp","newDate","Date","toLocaleDateString","split","day","month","year","converted","getPointsFromLastX","lastX","pointsAddition","points","forEach","game","getPastLeagueResults","hOrA","form","completeData","date","allLeagueResultsArrayOfObjects","leagueIndex","fixtures","addTotalsToRecord","record","totalW","W","reduce","sum","totalD","D","totalL","L","teamsHomeResults","filter","fixture","home_name","item","date_unix","sort","a","b","teamsAwayResults","away_name","recordAgainstIndividualStyles","recordAgainstIndividualStylesHome","recordAgainstIndividualStylesAway","homeResults","awayResults","oddsSumHome","oddsSumAway","favouriteCount","underdogCount","winningFavouriteCount","drawingFavouriteCount","beatenFavouriteCount","winningUnderdogCount","drawingUnderdogCount","beatenUnderdogCount","resultedGame","homeGoalCount","team_a_xg","awayGoalCount","team_b_xg","team_a_possession","team_a_shots","team_a_shotsOnTarget","team_b_shotsOnTarget","team_a_dangerous_attacks","team_a_corners","odds_ft_1","odds_ft_2","homeTeam","awayTeam","XGAgainst","scored","shots","sotAgainst","corners","dateRaw","oddsHome","oddsAway","odds","result","push","team_b_possession","team_b_shots","team_b_dangerous_attacks","team_b_corners","reversedResultsHome","reversedResultsAway","y","allClearFavouriteResultsHome","allClearFavouriteResultsAway","simlarGameResultsHome","concat","allSlightFavouriteResultsHome","allSlightFavouriteResultsAway","allTossupResultsHome","allTossupResultsAway","allUnderdogResultsHome","allUnderdogResultsAway","allMassiveUnderdogResultsHome","allMassiveUnderdogResultsAway","z","simlarGameResultsAway","allTeamResults","pointsWeighted","teamResult","gamesPlayed","allTeamResultsHome","allTeamResultsAway","points6","map","res","slice","pointsSum6","avPoints6","points5","pointsSum5","avPoints5","pointsAll","pointsSumAll","avPointsAll","resultsAll","resultsHome","resultsAway","avScoredLast5","avScoredLast5Sum","avConceededLast5","avConceededLast5Sum","avDALast5","avDALast5Sum","avSOTLast5","avSOTLast5Sum","avSOTAgainstLast5","avSOTAgainstLast5Sum","avShotsLast5","avShotsLast5Sum","avCornersLast5","avCornersLast5Sum","avPosessionLast5","avPosessionLast5Sum","avXGLast5","avXGLast5Sum","avXGAgainstLast5","avXGAgainstLast5Sum","averageOddsHome","averageOddsAway","oddsReliabilityWin","oddsReliabilityDraw","oddsReliabilityLose","oddsReliabilityWinAsUnderdog","oddsReliabilityDrawAsUnderdog","oddsReliabilityLoseAsUnderdog","reliableIndicator","unreliableIndicator","predictabilityScore","reliabilityString","teamGoalsHome","teamGoalsAway","teamGoalsAll","teamConceededHome","teamConceededAway","teamConceededAll","teamXGForAll","teamXGAgainstAll","teamXGForAllRecentAtStart","teamXGAgainstAllRecentAtStart","teamXGForHome","teamXGAgainstHome","teamXGForAway","teamXGAgainstAway","XGSum","avgXGScored","XGAgainstSum","avgXGConceeded","shortTermXGDiff","longTermXGDiff","XGChangeRecently","possessionSum","avgPossession","possessionHome","possessionSumHome","avgPossessionHome","possessionAway","possessionSumAway","avgPossessionAway","dangerousAttacksSum","avgDangerousAttacks","dangerousAttacksHome","dangerousAttacksSumHome","avgDangerousAttacksHome","dangerousAttacksAway","dangerousAttacksSumAway","avgDangerousAttacksAway","shotsSum","avgShots","shotsHome","shotsSumHome","avgShotsHome","shotsAway","shotsSumAway","avgShotsAway","shotsOnTarget","shotsOnTargetSum","avgShotsOnTarget","shotsOnTargetHome","shotsOnTargetSumHome","avgShotsOnTargetHome","shotsOnTargetAway","shotsOnTargetSumAway","avgShotsOnTargetAway","directnessRating","directnessRatingHome","directnessRatingAway","shotsOnTargetAgainst","shotsOnTargetSumAgainst","avgShotsOnTargetAgainst","shotsOnTargetAgainstHome","shotsOnTargetSumAgainstHome","avgShotsOnTargetAgainstHome","shotsOnTargetAgainstAway","shotsOnTargetSumAgainstAway","avgShotsOnTargetAgainstAway","cornersSum","cornersAv","cornersHome","cornersSumHome","cornersAvHome","cornersAway","cornersSumAway","cornersAvAway","last5XG","last5XGSum","last5XGAvgFor","last5XGHome","last5XGSumHome","last5XGAvgForHome","last5XGAway","last5XGSumAway","last5XGAvgForAway","XGSumHome","avgXGScoredHome","XGSumAway","avgXGScoredAway","XGAgainstSumHome","avgXGConceededHome","XGAgainstSumAway","avgXGConceededAway","last5XGAgainst","last5XGAgainstSum","last5XGAvgAgainst","last5XGAgainstHome","last5XGAgainstSumHome","last5XGAvgAgainstHome","last5XGAgainstAway","last5XGAgainstSumAway","last5XGAvgAgainstAway","XGDiffNonAverage","XGDiffNonAverageLast5","XGOverall","XGlast5","shotsLast5Arr","shotsLast5Sum","avgShotsLast5","shotsHomeArr","shotsHomeSum","shotsAwayArr","shotsAwaySum","avgShotValue","avgShotValueLast5","avgShotValueHome","avgShotValueAway","XGAgainstAvgOverall","XGAgainstlast5","AveragePossessionOverall","AverageDangerousAttacksOverall","AverageCorners","AverageShotsOnTargetOverall","AverageShotsOnTargetAgainstOverall","alpha","beta","allGoalsArrayHomeRecent","allConceededArrayHomeRecent","allGoalsArrayHome","reverse","allConceededArrayHome","allGoalsArrayHomeOnly","allConceededArrayHomeOnly","sumTwo","predictGoalsWithExponentialSmoothing","forAndAgainstRollingAv","forAndAgainstRollingAvHomeOrAway","allGoalsArrayAwayRecent","allConceededArrayAwayRecent","allGoalsArrayAway","allConceededArrayAway","allGoalsArrayAwayOnly","allConceededArrayAwayOnly","bttsHome","bttsAway","bttsAll","bttsHomeCount","bttsHomeString","bttsHomePercentage","bttsAwayCount","bttsAwayString","bttsAwayPercentage","bttsAllCount","bttsAllString","bttsAllPercentage","r","x","predictNextWeightedMovingAverage","teamGoalsHomeRollingAverage","teamGoalsAwayRollingAverage","RoundedXGFor","xg","RoundedXGAgainst","RoundedXGForHome","RoundedXGAgainstHome","RoundedXGForAway","RoundedXGAgainstAway","XGPrediction","XGPredictionHome","XGPredictionAway","teamConceededHomeRollingAverage","teamConceededAwayRollingAverage","avgScored","sumHome","avgScoredHome","sumAway","avgScoredAway","last5","last5Sum","last5AvgScored","last5Home","last5SumHome","last5AvgScoredHome","last5Away","last5SumAway","last5AvgScoredAway","last5Conceeded","last5ConceededSum","last5AvgConceeded","last5ConceededHome","last5ConceededSumHome","last5AvgConceededHome","last5ConceededAway","last5ConceededSumAway","last5AvgConceededAway","last10","last10Sum","last10AvgScored","last10Conceeded","last10ConceededSum","last10AvgConceeded","last5Goals","last5GoalsConceeded","last5GoalDiff","last10Goals","last10GoalsConceeded","last10GoalDiff","teamGoalsAllRollingAverage","teamGoalsConceededAllRollingAverage","avgConceeded","teamConceededHomeOnlySum","teamConceededAvgHomeOnly","teamConceededAwayOnlySum","teamConceededAvgAwayOnly","teamName","numbers","windowSize","startIndex","window","weights","Array","_","acc","num","movingAverage","w","calculateWeightedAverage","arr","weightedSum","totalWeight","weight","pow","teamGoalsFor","teamGoalsAgainst","lambdaFor","lambdaAgainst","predictedGoalsFor","predictedGoalsAgainst","goalsFor","goalsAgainst","calculateDifference","num1","num2","comparison","metricOne","metricTwo","stat1","stat2","statDiff","getClinicalRating","dangerousAttackConversion","rating","score","getPointsDifferential","pointsHomeAvg","pointsAwayAvg","diff","differential","compareFormTrend","recentForm","distantForm","scoreTotal","recent","distant","getPointAverage","pointTotal","games","generateGoals","homeForm","awayForm","attackingStrength","defensiveStrengthScoreGeneration","homeAttackVsAwayDefenceComparison","awayAttackVsHomeDefenceComparison","defensiveStrength","attackingStrengthLast5","defensiveStrengthScoreGenerationLast5","homeAttackVsAwayDefenceComparisonLast5","awayAttackVsHomeDefenceComparisonLast5","attackingStrengthHomeOnly","defensiveStrengthScoreGenerationAwayOnly","homeAttackVsAwayDefenceComparisonHomeOnly","attackingStrengthAwayOnly","defensiveStrengthScoreGenerationHomeOnly","awayAttackVsHomeDefenceComparisonAwayOnly","oddsComparisonHome","oddsComparisonAway","XGRating","XGRatingHomeComparison","XGRatingAwayComparison","actualToXGDifference","improving","calculatePlayingStyle","calculateScore","divider","calculate","allForm","find","home","away","PlayedHome","PlayedAway","lastHomeOrAwayPoints","homeOrAwayAverage","ScoredAverage","ScoredOverall","ConcededAverage","ConcededOverall","ScoredAverageShortTerm","ConcededAverageShortTerm","longTermAverageGoals","longTermAverageConceeded","recentGoalDiff","distantGoalDiff","recentDA","distantDA","recentPosession","distantPosession","recentCleanSheet","CleanSheetPercentage","distantCleanSheet","recentFormArray","distantFormArray","formTrendScore","expectedGoals","ScoredAverageShortAndLongTerm","conceededAverageShortAndLongTerm","longTermGoalDifference","shortTermGoalDifference","XGdifferential","formHome","formAway","last2Points","clinicalRating","clinicalScore","XGdifferentialValue","abs","XGdifferentialValueRaw","leagueID","predictedGoalsBasedOnHomeAv","predictedGoalsBasedOnAwayAv","allTeamGoalsBasedOnAverages","predictedGoalsConceededBasedOnHomeAv","predictedGoalsConceededBasedOnAwayAv","allTeamGoalsConceededBasedOnAverages","averageScoredLeague","averageConceededLeague","last10btts","last10bttsHome","last10bttsAway","bttsPercentageHomeAway","bttsPercentageAwayHome","homeTeamHomePositionRaw","awayTeamAwayPositionRaw","homePositionHomeOnly","awayPositionAwayOnly","homePosition","homeRawPosition","awayPosition","awayRawPosition","pointsDiff6","AttackingPotency","AttacksHome","AttacksAverage","lastGame","previousToLastGame","attackingMetricsHome","AverageShotsOnTarget","Corners","attackingMetricsHomeLast5","AverageShots","attackingMetricsHomeOnly","attackingMetricsAwayOnly","attackingMetricsAway","attackingMetricsAwayLast5","defensiveMetricsHome","defensiveMetricsHomeLast5","defensiveMetricsAway","defensiveMetricsAwayLast5","defensiveMetricsHomeOnly","defensiveMetricsAwayOnly","attackingMetrics","defensiveMetrics","calculateAttackingStrength","attackingStrengthScoreGeneration","calculateDefensiveStrength","defensiveStrengthLast5","defensiveStrengthHomeOnly","defensiveStrengthAwayOnly","calculateMetricStrength","possessionStrength","possessionStrengthLast5","possessionStrengthHomeOnly","possessionStrengthAwayOnly","XGdifferentialRecent","actualToXGDifferenceRecent","directnessOverall","directnessOverallLast5","directnessHomeOnly","directnessAwayOnly","directnessOverallStrength","directnessOverallStrengthLast5","directnessHomeStrength","directnessAwayStrength","shootingAccuracy","shootingAccuracyLast5","shootingAccuracyHomeOnly","shootingAccuracyAwayOnly","accuracyOverallStrength","accuracyOverallStrengthLast5","accuracyHomeStrength","accuracyAwayStrength","xgForStrength","xgForStrengthLast5","xgForStrengthHomeOnly","xgAgainstStrength","xgAgainstStrengthLast5","xgAgainstStrengthHomeOnly","xgForStrengthAwayOnly","xgAgainstStrengthAwayOnly","styleOfPlayOverall","styleOfPlayHome","styleOfPlayAway","parseInt","teamGoalsCalc","homeGoalDiff","awayGoalDiff","goalsDifferential","rollingAverageGoalsDifferential","GoalsInGamesAverageHome","GoalsInGamesAverageAway","factorOneHome","factorOneAway","scoreDiff","experimentalHomeGoals","experimentalAwayGoals","floor","prediction","includeInMultis","pointsDifferential","pointsDifferentialValue","pointsDifferentialValueRaw","rollingGoalDiffDifferential","rollingGoalDiff","rollingGoalDiffValue","dangerousAttacksDifferential","dangerousAttacksDiff","dangerousAttacksDiffValue","winner","outcome","last10Points","predictionOutcome","over25PredictionOutcome","bttsOutcome","total","total2","drawOdds","omit","last10PointDiffHomePerspective","last6PointDiffAwayPerspective","XGDiffBetweenTeamsHomePerspective","XGDiffBetweenTeamsAwayPerspective","goalDiffHomeOrAwayComparison","goalDifferenceComparison","profit","specificLeagueResults","getSuccessMeasure","sumProfit","investment","exactScores","successCount","netProfit","hasOwnProperty","exactScore","leagueName","leagueDesc","league","netLeagueProfit","ROI","ReactDOM","render","Object","entries","document","getElementById","price","combinations","gamesInExotic","exoticStake","exoticString","allTipsSorted","newArray","bestBets","Over25Tips","XGDiffTips","rollingDiffTips","dangerousAttacksDiffTips","pointsDiffTips","exoticArray","bttsArray","accumulatedOdds","predictions","array","tip","indexOf","rawOdds","renderTips","getScorePrediction","mocked","mock","Promise","all","matches","game_week","goalsA","goalsB","unroundedGoalsA","unroundedGoalsB","outcomeSymbol","over25PredictionOutcomeSymbol","bttsOutcomeSymbol","fractionHome","teamComparisonScore","predictionObject","comparisonScore","rawComparisonScore","goalDifferential","experimentalCalc","fractionAway","Over25PredictionObject","decimalOdds","homeDoubleChance","over25Odds","doubleChanceOutcome","goalTotalUnrounded","XGPredictionObject","otherTeam","pointsDiffObject","rollingDiffObject","dangerousAttacksDiffObject","RenderAllFixtures","bool","getMultis","getCoverBetMaxReturns","getAccumulatorPrice","priceArray","minAccSize","stake","perms","getUniquePermutations","j","permLength","permutations","newArr","splice","twoDimArrayUnion","arr1","arr2","duplicate","k","NewlineText","str","toggleState","setIsOff","upArrow","StyledTableCell2","withStyles","theme","head","backgroundColor","padding","paddingTop","paddingBottom","textAlign","fontSize","fontFamily","margin","body","TableCell","StyledTableCell","StyledTableRow","root","TableRow","LeagueTable","singleResult","rows","Teams","component","scope","Name","Played","Wins","Draws","Losses","For","Against","GoalDifference","Points","Form","Key","leagueResults","team_a_red_cards","team_b_red_cards","leagueResultsOlder","getTopScorersTeam","ID","sorted","order","sortedByForm","LastWeeksResults","GamesPlayed","LeagueID","TableContainer","Paper","Table","marginTop","marginBottom","TableHead","TableBody","mostRecentGameweek","seasonAVG_home","seasonAVG_away","seasonBTTSPercentage","seasonOver05Percentage_overall","seasonOver15Percentage_overall","seasonOver25Percentage_overall","seasonOver35Percentage_overall","seasonOver45Percentage_overall","over75CornersPercentage_overall","over85CornersPercentage_overall","over95CornersPercentage_overall","over105CornersPercentage_overall","over115CornersPercentage_overall","over125CornersPercentage_overall","cornersAVG_overall","cardsAVG_overall","top_scorers","known_as","club_team_id","goals_overall","fixtureResponse","leagueInstance","lastThreeFormHome","lastThreeFormAway","lastFiveFormHome","lastFiveFormAway","lastSixFormHome","lastSixFormAway","lastTenFormHome","lastTenFormAway","leagueOrAll","formRunHome","formRunAway","WDLinLeagueHome","WDLinLeagueAway","HomeAverageGoals","homeAverageGoals","HomeAverageConceded","homeAverageConceded","AwayAverageGoals","awayAverageGoals","AwayAverageConceded","awayAverageConceded","require","fixtureArray","arrayOfGames","leagueGames","leagueArray","leagueIdArray","tableArray","worldCupArray","generateTables","allResults","currentLeagueId","data","specific_tables","groups","table","currentTeam","wdl_record","toUpperCase","Position","cleanName","matchesPlayed","seasonWins_overall","seasonDraws_overall","seasonLosses_overall","seasonGoals","seasonConceded_home","seasonConceded_away","seasonGoalDifference","LastXPoints","wdl","seasonConceded","group","league_table","all_matches_table_overall","results","mostRecentGame","pop","gameweeksResults","leagueTable","leagueStatistics","stats","statistics","createFixture","mockBool","roundedHomeOdds","roundedAwayOdds","homeFraction","awayFraction","bttsOdds","roundedBTTSOdds","homeTeamWinsPercentage","homeTeamWinPercentage","homeTeamLossesPercentage","homeTeamLossPercentage","homeTeamDrawsPercentage","homeTeamDrawPercentage","awayTeamWinsPercentage","awayTeamWinPercentage","awayTeamLossesPercentage","awayTeamLossPercentage","awayTeamDrawsPercentage","awayTeamDrawPercentage","Fixture","isFunctionRunning","generateFixtures","footyStatsFormattedDate","current","todaysDate","dateSS","getPrefix","position","teamPositionPrefix","updateResults","method","headers","Accept","JSON","stringify","height","fill","url","formUrl","formArray","leaguesStored","storedForm","isFormStored","isStoredLocally","orderedLeagues","leaguePositions","allLeagueResults","leagues","allGames","sofaScore","events","time","startTimestamp","homeScore","display","awayScore","startDate","getTime","targetDate","orderedLeague","gamesFiltered","gamesShortened","pager","current_page","max_page","page2","page2Data","gamesConcat","gamesConcatFiltered","mostRecentResults","shortenedResults","pre_match_teamA_overall_ppg","pre_match_teamB_overall_ppg","leagueObj","homeLeague","awayLeague","all_matches_table_home","all_matches_table_away","regularSeason","season","string","stringHome","stringAway","rawPosition","homeFormName","awayFormName","homeSeasonWinPercentage","seasonWins","awaySeasonWinPercentage","homeSeasonLossPercentage","seasonLosses_home","awaySeasonLossPercentage","seasonLosses_away","homeSeasonDrawPercentage","seasonDraws","awaySeasonDrawPercentage","homeSeasonMatchesPlayed","awaySeasonMatchesPlayed","played","competition_id","unixTimestamp","dateObject","previousLeagueName","toLocaleString","hour","minute","odds_ft_x","odds_doublechance_1x","awayDoubleChance","odds_doublechance_x2","odds_btts_yes","homeID","awayID","homeTeamInfo","awayTeamInfo","homeTeaminLeague","awayTeaminLeague","teamPositionHome","teamPositionHomeTable","teamPositionAwayTable","homeTeamWinPercentageHome","awayTeamWinPercentageAway","homeTeamLossPercentageHome","awayTeamLossPercentageAway","homeTeamDrawPercentageHome","awayTeamDrawPercentageAway","teamPositionAway","homePrefix","homePrefixHomeTable","awayPrefix","awayPrefixAwayTable","homeSeasonPPG","awaySeasonPPG","homeTeaminHomeLeague","awayTeaminAwayLeague","homeFormString5","additional_info","formRun_overall","awayFormString5","homeFormString6","awayFormString6","homeFormString10","awayFormString10","homeFormRun","formRun_home","awayFormRun","formRun_away","season_format","xg_for_avg_overall","xg_for_avg_home","seasonScoredNum_overall","seasonScoredAVG_home","seasonMatchesPlayed_home","seasonMatchesPlayed_away","seasonConcededNum_overall","seasonConcededAVG_home","xg_against_avg_overall","XGAgainstAverage","xg_against_avg_home","seasonCSPercentage_overall","possessionAVG_overall","AveragePossession","possessionAVG_home","shotsOnTargetAVG_overall","shotsOnTargetAVG_home","dangerous_attacks_avg_overall","PPG","seasonPPG_overall","attacks_avg_home","AttacksAway","attacks_avg_away","AverageDangerousAttacks","dangerous_attacks_avg_home","homeAttackAdvantage","homeDefenceAdvantage","BTTSPercentage","seasonBTTSPercentage_home","LeagueOrAll","LeaguePosition","LeagueAverageGoals","LeagueAverageConceded","shotsAVG_overall","shotsAVG_home","seasonGoalDifference_overall","seasonGoalDifference_home","seasonBTTSPercentage_overall","cardsTotal_overall","scoredBothHalvesPercentage_overall","AverageShotsHomeOrAway","lastThreeForm","LastFiveForm","LastSixForm","LastTenForm","SeasonPPG","WinPercentage","LossPercentage","DrawPercentage","BttsPercentage","BttsPercentageHomeOrAway","ScoredBothHalvesPercentage","LastMatch","WDLRecord","xg_for_avg_away","seasonScoredAVG_away","seasonConcededAVG_away","xg_against_avg_away","possessionAVG_away","shotsOnTargetAVG_away","dangerous_attacks_avg_away","seasonBTTSPercentage_away","shotsAVG_away","seasonGoalDifference_away","teamIDHome","teamIDAway","leagueId","homeBadge","home_image","awayBadge","away_image","homePpg","home_ppg","awayPpg","away_ppg","homeTeamHomePosition","awayTeamAwayPosition","odds_ft_over25","btts_potential","stadium","stadium_name","expectedGoalsHomeToDate","team_a_xg_prematch","expectedGoalsAwayToDate","team_b_xg_prematch","setTimeout","PreviousGames","getKeysByValue","object","keys","key","reducedArr","team_a_id","team_b_id","teamNameHome","teamObject","teamNameAway","getDate","getMonth","getFullYear","team_a_goals","team_b_goals","HeadToHead","homeWins","awayWins","draws","averageGoals","bestHomeOdds","bestAwayOdds","lineHeight","CustomizedTables","align","o05Stat","o05Odds","u05Odds","o15Stat","o15Odds","u15Odds","o25Stat","o25Odds","u25Odds","o35Stat","o35Odds","u35Odds","getTeamStats","identifier","getBTTSPercentage","getFairOdds","impliedProbability","impliedProbabilityDivided","homeToal","awayTotal","fixtureHistory","matchArr","h2h","previous_matches_ids","reducedMatchArr","oddsComparisonHomeArray","oddsComparisonAwayArray","odds_comparison","sortedHomeOdds","sortedAwayOdds","bestHomeOddsProvider","bestAwayOddsProvider","previous_matches_results","totalMatches","teamMappings","betting_stats","bttsPercentage","BTTSForecast","fairOddsBTTSYes","fairOddsBTTSNo","team_a_wins","team_b_wins","draw","avg_goals","over05Percentage","over15Percentage","o15Forecast","o15_potential","odds_ft_over05","odds_ft_under05","odds_ft_over15","odds_ft_under15","over25Percentage","o25Forecast","o25_potential","odds_ft_under25","over35Percentage","o35Forecast","o35_potential","odds_ft_over35","odds_ft_under35","BTTSStat","BTTSOdds","BTTSOddsNo","odds_btts_no","CornersStat","CornersForecast","corners_potential","CornersOdds","odds_corners_over_105","getOverOrUnderText","xgSum","overUnderAchievingSum","getXGDifferential","xgFor","xgAgainst","xgDiff","goalDiff","compareXgAndGoalDiff","getAttackingSummary","goalsRecent","goalsLongTerm","getDefenceSummary","cleansheetStat","lastx","ten","five","xgText","attackString","defenceString","pointsAverageTotal","GenerateFormSummary","Chart","data1","options","responsive","aspectRatio","maintainAspectRatio","layout","elements","point","radius","scales","suggestedMin","suggestedMax","grid","borderWidth","borderColor","ticks","font","size","plugins","legend","labels","boxHeight","data3","datasets","label","team1","tension","team2","data2","MultilineChart","hidden","data4","DoughnutChart","rotation","hoverOffset","cutout","circumference","RadarChart","angleLines","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","BarChart","datasetOne","idx","numOne","numTwo","tempArr","firstNum","secondNum","findLargestNum","indexAxis","bar","tooltip","enabled","context","dataIndex","dataset","BarChartTwo","subtitle","bottom","barThickness","ChartJS","register","CategoryScale","LinearScale","RadialLinearScale","PointElement","ArcElement","Filler","BarElement","LineElement","Title","Tooltip","Legend","SubTitle","SofaLineupsWidget","differenceInSeconds","minutes","iframeSrc","currentTime","maxWidth","border","scrolling","frameborder","metric","ranges","normalizedValue","normValue","metricName","metricValue","averagePossession","accuracyOverall","Error","weightedScore","rollingGoalDiffTotalHome","rollingGoalDiffTotalAway","rollingXGDiffTotalHome","rollingXGDiffTotalAway","displayBool","testBool","styling","alert","getPointsFromGames","formArr","pairings","arrayOfIndividualPoints","homeXG","awayXG","homeShots","awayShots","homeSot","awaySot","homeDangerousAttacks","awayDangerousAttacks","homePossession","awayPossession","homeRed","awayRed","homePPG","awayPPG","singleSimilarResult","StatsHome","gameCount","formDataHome","Last5","gameArrayHomeTeamHomeGames","homeTenGameAverage","homeSixGameAverage","homeFiveGameAverage","FormTextStringHome","StatsAway","formDataAway","gameArrayAwayTeamAwayGames","awayTenGameAverage","awaySixGameAverage","awayFiveGameAverage","FormTextStringAway","getGameIdByHomeTeam","homeTeamName","matchingGames","includes","gameStats","gameArrayHome","gameArrayAway","p","n","pos","resultHome","resultHomeOnly","timeZone","won","goalsScored","goalsConceeded","wonHomeOrAwayOnly","goalDiffArrayHome","xgDiffArrayHome","sotDiffArrayHome","resultAway","resultAwayOnly","wonAwayOrAwayOnly","goalDiffArrayAway","xgDiffArrayAway","sotDiffArrayAway","bttsArrayHome","bttsArrayAway","last3Points","last5Points","last6Points","homeFormTrend","awayFormTrend","formTextStringHome","formTextStringAway","favouriteRecordHome","favouriteRecordAway","homeXGRating","awayXGRating","homeAttackStrength","homeAttackStrengthLast5","homeOnlyAttackStrength","homeDefenceStrength","homeDefenceStrengthLast5","homeOnlyDefenceStrength","homePossessionStrength","homePossessionStrengthLast5","homeOnlyPossessionStrength","homeXGForStrength","homeXGForStrengthLast5","homeOnlyXGForStrength","homeXGAgainstStrength","homeXGAgainstStrengthLast5","homeOnlyXGAgainstStrength","homeDirectnessStrength","homeDirectnessStrengthLast5","homeOnlyDirectnessStrength","homeAccuracyOverallStrength","homeAccuracyOverallStrengthLast5","homeOnlyAccuracyOverallStrength","awayAttackStrength","awayAttackStrengthLast5","awayOnlyAttackStrength","awayDefenceStrength","awayDefenceStrengthLast5","awayOnlyDefenceStrength","awayPossessionStrength","awayPossessionStrengthLast5","awayOnlyPossessionStrength","awayXGForStrength","awayXGForStrengthLast5","awayOnlyXGForStrength","awayXGAgainstStrength","awayXGAgainstStrengthLast5","awayOnlyXGAgainstStrength","awayDirectnessStrength","awayDirectnessStrengthLast5","awayOnlyDirectnessStrength","awayAccuracyOverallStrength","awayAccuracyOverallStrengthLast5","awayOnlyAccuracyOverallStrength","formPointsHome","formPointsAway","AverageGoals","AverageConceeded","AverageXG","AverageXGConceded","Last5PPG","formArrayHome","formArrayAway","chartType","overviewHome","overviewAway","similarGamesHome","similarGamesAway","matchingGame","toString","resultValue","count","mockValue","initialState","dataHome","localStorage","getItem","dataAway","dataHomeDef","dataAwayDef","homeDetails","awayDetails","fixtureDetails","dataSlice","createSlice","reducers","setData","action","payload","actions","store","configureStore","reducer","dataReducer","GetDivider","matchStatus","isPrediction","renderLeagueName","renderTable","SingleFixture","dispatch","useDispatch","StoreData","homeTeamBadge","awayTeamName","awayTeamBadge","setItem","key1","key2","open","createStatsDiv","onMouseDown","handleButtonClick","List","today","todayFootyStats","todaySS","tomorrow","tomorrowFootyStats","tomorrowSS","dateFootyStats","lastSaturday","lastSaturdayFootyStats","lastSaturdaySS","tomorrowsDate","yesterdaysDate","saturdayDate","historicDate","dateString","Logo","myImage","fixtureList","availableLeagues","leagueOrder","decrementDate","calculateDate","convertTimestampForSofaScore","renderButtons","String","padStart","setDate","getDay","textJoined","newText","leagueList","mapOrder","A","B","welcomeTextOne","welcomeTextTwo","App","getLeagueList","href","target","rel","mockedFixtures","TwitterShareButton","boxShadow","TwitterIcon","RedditShareButton","RedditIcon","FacebookShareButton","quote","FacebookIcon","WhatsappShareButton","separator","WhatsappIcon","TelegramShareButton","TelegramIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","TeamPage","dataState","fetchData","storedFixtureDetailsJson","responseHome","responseAway","indexHome","findIndex","indexAway","test","scoredOverallHome","playedHomeOnly","scoredOverallHomeOnly","seasonScoredNum_home","conceededOverallHome","conceededOverallHomeOnly","seasonConcededNum_home","PPGOverallHome","PPGOverallHomeOnly","seasonPPG_home","leaguePosition_overallHome","leaguePosition_overall","leaguePosition_HomeOnly","leaguePosition_home","averageAttendance","average_attendance_home","BTTSPercentage_overallHome","BTTSAndWinPercentage_Home","BTTS_and_win_percentage_overall","BTTSAndLosePercentage_Home","BTTS_and_lose_percentage_overall","BTTSBothHalvesHome","BTTS_both_halves_percentage_overall","GoalDifferenceHT_overall_Home","GoalDifferenceHT_overall","GD_2hg_overall_Home","gd_2hg_overall","leadingAtHTPercentage_overallHome","leadingAtHTPercentage_overall","seasonOver15Percentage_overallHome","seasonOver25Percentage_overallHome","seasonOver35Percentage_overallHome","seasonOver45Percentage_overallHome","scoredBothHalvesPercentage_overallHome","shots_on_target_per_goals_scored_overallHome","shots_on_target_per_goals_scored_overall","cornersTotalAVG_overallHome","cornersTotalAVG_overall","cardsAVG_overallHome","foulsAVG_overallHome","foulsAVG_overall","penalties_won_per_match_overallHome","penalties_won_per_match_overall","penalty_in_a_match_percentage_overallHome","penalty_in_a_match_percentage_overall","scoredOverallAway","playedAwayOnly","scoredOverallAwayOnly","seasonScoredNum_away","conceededOverallAway","conceededOverallAwayOnly","seasonConcededNum_away","PPGOverallAway","PPGOverallAwayOnly","seasonPPG_away","leaguePosition_overallAway","leaguePosition_AwayOnly","leaguePosition_away","BTTSPercentage_overallAway","BTTSAndWinPercentage_Away","BTTSAndLosePercentage_Away","BTTSBothHalvesAway","GoalDifferenceHT_overall_Away","GD_2hg_overall_Away","leadingAtHTPercentage_overallAway","seasonOver15Percentage_overallAway","seasonOver25Percentage_overallAway","seasonOver35Percentage_overallAway","seasonOver45Percentage_overallAway","scoredBothHalvesPercentage_overallAway","shots_on_target_per_goals_scored_overallAway","cornersTotalAVG_overallAway","cardsAVG_overallAway","foulsAVG_overallAway","penalties_won_per_match_overallAway","penalty_in_a_match_percentage_overallAway","storedDataHome","useSelector","jsonDataHome","parse","propertyNamesHome","storedDataHomeDef","jsonDataHomeDef","propertyNamesHomeDef","storedDataallTeamResultsHome","jsonDataallTeamResultsHome","propertyNamesallTeamResultsHome","values","jsonHomeDetails","storedDataAway","jsonDataAway","propertyNamesAway","storedDataAwayDef","jsonDataAwayDef","propertyNamesAwayDef","storedDataallTeamResultsAway","jsonDataallTeamResultsAway","propertyNamesallTeamResultsAway","jsonAwayDetails","storedFixtureDetails","stacked","path","Team","exact"],"mappings":"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","file":"static/js/main.298b06ee.chunk.js","sourcesContent":["import React from \"react\";\n\nexport function Button(props) {\n  return (\n    <div id=\"Button\">\n      <button data-cy={props.text} variant=\"primary\" type=\"button\" onClick={props.onClickEvent} className={props.className} style={props.style}>\n        {props.text}\n      </button>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nexport var selectedOdds = \"Fractional odds\";\n\nexport class OddsRadio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOdds: this.props.value,\n    };\n  }\n\n  handleOptionChange = () => {\n    this.setState({\n      selectedOdds: this.props.value,\n    });\n    selectedOdds = this.state.selectedOdds;\n  };\n\n  render() {\n    return (\n      <section className=\"dark2\">\n        <div className={this.props.className}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"odds\"\n              checked={this.state.checked}\n              onChange={this.handleOptionChange}\n              data-cy={this.props.value}\n            />\n            <span className=\"design\"></span>\n            <span className=\"text\">{this.props.value}</span>\n          </label>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default OddsRadio;\n","import React from \"react\";\n\nexport function CreateBadge(props) {\n\n  if(props.image === \"-\"){\n    return (\n      <div className={props.ClassName} />\n    );\n  } else {\n    return (\n      <img\n        src={`https://cdn.footystats.org/img/${props.image}`}\n        className={props.ClassName}\n        alt={props.alt}\n        flex-shrink={props.flexShrink}\n      />\n    );\n  }\n}\n","import React, { Fragment } from \"react\";\n\nfunction Stats(props) {\n  let shouldOpen = props.clicked;\n  function styleForm(formIndicator) {\n    let className;\n    if (formIndicator === \"W\") {\n      className = \"win\";\n    } else if (formIndicator === \"D\") {\n      className = \"draw\";\n    } else if (formIndicator === \"L\") {\n      className = \"loss\";\n    }\n    return className;\n  }\n\n  function styleBTTS(BTTSBoolean) {\n    let className;\n    if (BTTSBoolean === \"\\u2714\") {\n      className = \"BTTSTrue\";\n    } else if (BTTSBoolean === \"\\u2718\") {\n      className = \"BTTSFalse\";\n    }\n    return className;\n  }\n\n  if (props.formRun) {\n    return (\n      <Fragment>\n        <ul className={props.className} style={props.style}>\n          <li className=\"FormHeader\">League results (most recent on right)</li>\n          <li key={`last5League`} className=\"last5League\">\n            <span className={styleForm(props.Results[0])}>\n              {props.Results[0]}\n            </span>\n            <span className={styleForm(props.Results[1])}>\n              {props.Results[1]}\n            </span>\n            <span className={styleForm(props.Results[2])}>\n              {props.Results[2]}\n            </span>\n            <span className={styleForm(props.Results[3])}>\n              {props.Results[3]}\n            </span>\n            <span className={styleForm(props.Results[4])}>\n              {props.Results[4]}\n            </span>\n            <span className={styleForm(props.Results[5])}>\n              {props.Results[5]}\n            </span>\n          </li>\n          <li className=\"FormHeader\">\n            {props.homeOrAway} form (most recent on right)\n          </li>\n          <li\n            key={`last5${props.homeOrAwayResults}`}\n            className=\"FormHomeOrAway\"\n          >\n            <span className={styleForm(props.ResultsHorA[0])}>\n              {props.ResultsHorA[0]}\n            </span>\n            <span className={styleForm(props.ResultsHorA[1])}>\n              {props.ResultsHorA[1]}\n            </span>\n            <span className={styleForm(props.ResultsHorA[2])}>\n              {props.ResultsHorA[2]}\n            </span>\n            <span className={styleForm(props.ResultsHorA[3])}>\n              {props.ResultsHorA[3]}\n            </span>\n            <span className={styleForm(props.ResultsHorA[4])}>\n              {props.ResultsHorA[4]}\n            </span>\n            <span className={styleForm(props.ResultsHorA[5])}>\n              {props.ResultsHorA[5]}\n            </span>\n          </li>\n          <li\n            key=\"BTTSArrayHomeOrAway\"\n            className=\"BTTSArrayHomeOrAway\"\n            data-cy={props.name + \"BTTSArrayHomeOrAway\"}\n          >\n            <div className=\"BTTSResults\">BTTS</div>\n            <span className={styleBTTS(props.BTTSArray[5])}>\n              {props.BTTSArray[5]}\n            </span>\n            <span className={styleBTTS(props.BTTSArray[4])}>\n              {props.BTTSArray[4]}\n            </span>\n            <span className={styleBTTS(props.BTTSArray[3])}>\n              {props.BTTSArray[3]}\n            </span>\n            <span className={styleBTTS(props.BTTSArray[2])}>\n              {props.BTTSArray[2]}\n            </span>\n            <span className={styleBTTS(props.BTTSArray[1])}>\n              {props.BTTSArray[1]}\n            </span>\n            <span className={styleBTTS(props.BTTSArray[0])}>\n              {props.BTTSArray[0]}\n            </span>\n          </li>\n          <div className=\"FormSummaries\">\n          <li className=\"FormSummaryHome\">{props.FormTextString}</li>\n          <li className=\"StyleOfPlay\">{`Style - ${props.StyleOfPlay}`}</li>\n          <li className=\"StyleOfPlay\">{`${props.homeOrAway} style - ${props.StyleOfPlayHomeOrAway}`}</li>\n          <li className=\"FavouriteSummaryHome\">{props.FavouriteRecord}</li>\n          </div>\n          <div className=\"AllStats\">\n          <li\n            key=\"TeamScored\"\n            className=\"TeamScored\"\n            data-cy={props.name + \"teamScored\"}\n          >\n            {`Avg goals scored - ${props.goals}`}\n          </li>\n          <li\n            key=\"TeamConceeded\"\n            className=\"TeamConceeded\"\n            data-cy={props.name + \"teamConceded\"}\n          >\n            {`Avg goals conceeded - ${props.conceeded}`}\n          </li>\n          <li\n            key=\"TeamPossession\"\n            className=\"TeamPossession\"\n            data-cy={props.name + \"teamPossession\"}\n          >\n            {`Avg possession - ${props.possession}%`}\n          </li>\n          <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name + \"teamXG\"}>\n            {`Avg XG - ${props.XG}`}\n          </li>\n          <li\n            key=\"TeamXGConceded\"\n            className=\"TeamXGConceded\"\n            data-cy={props.name + \"teamXGConceded\"}\n          >\n            {`Avg XG conceded - ${props.XGConceded}`}\n          </li>\n          <li\n            key=\"TeamXGSwing\"\n            className=\"TeamXGSwing\"\n            data-cy={props.name + \"teamXGSwing\"}\n          >\n            {`XG difference swing (last 5): ${props.XGSwing.toFixed(2)}`}\n          </li>\n          <li\n            key=\"goalDifference\"\n            className=\"goalDifference\"\n            data-cy={props.name + \"goalDifference\"}\n          >\n            {`Goal difference : `}\n            <span>{props.goalDifference}</span>\n          </li>\n          <li\n            key=\"goalDifferenceHorA\"\n            className=\"goalDifferenceHorA\"\n            data-cy={props.name + \"goalDifference\"}\n          >\n            {`Goal difference ${props.homeOrAway} : ${props.goalDifferenceHomeOrAway}`}\n          </li>\n          <li\n            key=\"AverageSOT\"\n            className=\"AverageSOT\"\n            data-cy={props.name + \"averageSOT\"}\n          >\n            {`Avg shots on target - ${props.sot}`}\n          </li>\n          <li\n            key=\"DangerousAttacks\"\n            className=\"DangerousAttacks\"\n            data-cy={props.name + \"dangerousAttacks\"}\n          >\n            {`Avg dangerous attacks - ${props.dangerousAttacks}`}\n          </li>\n          <li\n            key=\"LeaguePosition\"\n            className=\"LeaguePosition\"\n            data-cy={props.name + \"leaguePosition\"}\n          >\n            {`League position - ${\n              props.leaguePosition !== undefined ? props.leaguePosition : \"N/A\"\n            }`}\n          </li>\n          <li\n            key=\"LeaguePositionHomeOrAway\"\n            className=\"LeaguePositionHomeOrAway\"\n            data-cy={`${props.name}LeaguePositionHomeOrAway`}\n          >\n            {`Position (${props.homeOrAway} only) - ${\n              props.homeOrAwayLeaguePosition !== undefined\n                ? props.homeOrAwayLeaguePosition\n                : \"N/A\"\n            }`}\n          </li>\n          <li\n            key=\"WinPercentage\"\n            className=\"WinPercentage\"\n            data-cy={props.name + \"WinPercentage\"}\n          >\n            {`${props.homeOrAway} wins - ${props.winPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"DrawPercentage\"\n            className=\"DrawPercentage\"\n            data-cy={props.name + \"DrawPercentage\"}\n          >\n            {`${props.homeOrAway} draws - ${props.drawPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"LossPercentage\"\n            className=\"LossPercentage\"\n            data-cy={props.name + \"LossPercentage\"}\n          >\n            {`${props.homeOrAway} losses - ${props.lossPercentage.toFixed(1)}%`}\n          </li>\n          <li key=\"PPG\" className=\"PPG\" data-cy={props.name + \"PPG\"}>\n            {`Season PPG - ${props.ppg}`}\n          </li>\n          <li\n            key=\"FormTrend10a\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 10 PPG: ${props.formTrend[0]}`}\n          </li>\n          <li\n            key=\"FormTrend10b\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 6 PPG: ${props.formTrend[1]}`}\n          </li>\n          <li\n            key=\"FormTrend10c\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 5 PPG: ${props.formTrend[2]}.`}\n          </li>\n          <li\n            key=\"CardsTotal\"\n            className=\"CardsTotal\"\n            data-cy={props.name + \"CardsTotal\"}\n          >\n            {`Cards total: ${props.CardsTotal}`}\n          </li>\n          <li\n            key=\"CornersAverage\"\n            className=\"CornersAverage\"\n            data-cy={props.name + \"CornersAverage\"}\n          >\n            {`Corners average: ${props.CornersAverage}`}\n          </li>\n          </div>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  } else {\n    return (\n      <Fragment>\n        <ul className={props.className} style={props.style}>\n        <div className=\"FormSummaries\">\n          <li className=\"FormSummaryHome\">{props.FormTextString}</li>\n          <li className=\"FavouriteSummaryAway\">{props.FavouriteRecord}</li>\n          </div>\n          <div className=\"AllStats\">\n          <li\n            key=\"TeamScored\"\n            className=\"TeamScored\"\n            data-cy={props.name + \"teamScored\"}\n          >\n            {`Avg goals scored - ${props.goals}`}\n          </li>\n          <li\n            key=\"TeamConceeded\"\n            className=\"TeamConceeded\"\n            data-cy={props.name + \"teamConceded\"}\n          >\n            {`Avg goals conceeded - ${props.conceeded}`}\n          </li>\n          <li\n            key=\"TeamPossession\"\n            className=\"TeamPossession\"\n            data-cy={props.name + \"teamPossession\"}\n          >\n            {`Avg possession - ${props.possession}%`}\n          </li>\n          <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name + \"teamXG\"}>\n            {`Avg XG - ${props.XG}`}\n          </li>\n          <li\n            key=\"TeamXGConceded\"\n            className=\"TeamXGConceded\"\n            data-cy={props.name + \"teamXGConceded\"}\n          >\n            {`Avg XG conceded - ${props.XGConceded}`}\n          </li>\n          <li\n            key=\"TeamXGSwing\"\n            className=\"TeamXGSwing\"\n            data-cy={props.name + \"teamXGSwing\"}\n          >\n            {`XG difference swing (last 5): ${props.XGSwing.toFixed(2)}`}\n          </li>\n          <li\n            key=\"AverageSOT\"\n            className=\"AverageSOT\"\n            data-cy={props.name + \"averageSOT\"}\n          >\n            {`Avg shots on target - ${props.sot}`}\n          </li>\n          <li\n            key=\"DangerousAttacks\"\n            className=\"DangerousAttacks\"\n            data-cy={props.name + \"dangerousAttacks\"}\n          >\n            {`Avg dangerous attacks - ${props.dangerousAttacks}`}\n          </li>\n          <li\n            key=\"LeaguePosition\"\n            className=\"LeaguePosition\"\n            data-cy={props.name + \"leaguePosition\"}\n          >\n            {`League position - ${props.leaguePosition}`}\n          </li>\n\n          <li\n            key=\"LeaguePositionHomeOrAway\"\n            className=\"LeaguePositionHomeOrAway\"\n            data-cy={props.name + \"LeaguePositionHomeOrAway\"}\n          >\n            {`Position (${props.homeOrAway} only) - ${props.homeOrAwayLeaguePosition}`}\n          </li>\n          <li\n            key=\"WinPercentage\"\n            className=\"WinPercentage\"\n            data-cy={props.name + \"WinPercentage\"}\n          >\n            {`${props.homeOrAway} wins - ${props.winPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"DrawPercentage\"\n            className=\"DrawPercentage\"\n            data-cy={props.name + \"DrawPercentage\"}\n          >\n            {`${props.homeOrAway} draws - ${props.drawPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"LossPercentage\"\n            className=\"LossPercentage\"\n            data-cy={props.name + \"LossPercentage\"}\n          >\n            {`${props.homeOrAway} losses - ${props.lossPercentage.toFixed(1)}%`}\n          </li>\n          <li key=\"PPG\" className=\"PPG\" data-cy={props.name + \"PPG\"}>\n            {`Season PPG - ${props.ppg}`}\n          </li>\n          <li\n            key=\"FormTrend10a\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 10 PPG: ${props.formTrend[0]}`}\n          </li>\n          <li\n            key=\"FormTrend10b\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 6 PPG: ${props.formTrend[1]}`}\n          </li>\n          <li\n            key=\"FormTrend10c\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 5 PPG: ${props.formTrend[2]}.`}\n          </li>\n          <li\n            key=\"CardsTotal\"\n            className=\"CardsTotal\"\n            data-cy={props.name + \"CardsTotal\"}\n          >\n            {`Cards total: ${props.CardsTotal}`}\n          </li>\n          <li\n            key=\"CornersAverage\"\n            className=\"CornersAverage\"\n            data-cy={props.name + \"CornersAverage\"}\n          >\n            {`Corners average: ${props.CornersAverage}`}\n          </li>\n          </div>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Stats;\n","import React from \"react\";\n\nfunction Div(props) {\n  return (\n    <div id={props.id} onClick={props.onClick} style={props.style} className={props.className}>{props.text}</div>\n  );\n}\n\nexport default Div;\n","export async function getForm(match) {\n  const teams = [match.homeId, match.awayId];\n  const fixtureForm = [];\n\n  for (let i = 0; i < teams.length; i++) {\n    const team = teams[i];\n\n    let response = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}formTeam/${team}`\n    );\n    await response.json().then((formData) => {\n      formData.lastMatchTimestamp = formData.last_updated_match_timestamp\n      fixtureForm[i] = formData;\n    });\n  }\n  return fixtureForm;\n}\n","import React, { useState, useEffect } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport { selectedOdds } from \"../components/OddsRadio\";\nimport oddslib from \"oddslib\";\nexport let rangeValue = [1, 10];\n\nexport const Slide = (props) => {\n  const [range, setRange] = useState([1.1, 10]);\n  const [fractionalValue, setFractionalValue] = useState([\"1/9\", \"10/1\"]);\n\n  useEffect(() => {\n    if (selectedOdds === \"Fractional odds\") {\n      let roundedValueOne = (Math.round(range[0] * 5) / 5).toFixed(1);\n      let roundedValueTwo = (Math.round(range[1] * 5) / 5).toFixed(1);\n\n      try {\n        const fractionalOne = oddslib\n          .from(\"decimal\", roundedValueOne)\n          .to(\"fractional\", { precision: 1 });\n        const fractionalTwo = oddslib\n          .from(\"decimal\", roundedValueTwo)\n          .to(\"fractional\", { precision: 1 });\n        setFractionalValue([fractionalOne, fractionalTwo]);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [range]);\n\n  const handleChange = (event, newValue) => {\n    setRange(newValue);\n    rangeValue = newValue;\n  };\n\n  return (\n    <Slider\n      aria-label=\"Always visible\"\n      value={range}\n      sx={{\n        width: \"90%\",\n        color: \"#030061\",\n      }}\n      onChange={handleChange}\n      valueLabelDisplay=\"auto\"\n      step={0.1}\n      min={1.1}\n      max={10}\n      valueLabelFormat={(value, index) =>\n        selectedOdds === \"Fractional odds\" ? fractionalValue[index] : value\n      }\n    />\n  );\n};\n","import React from \"react\";\nimport Collapsible from \"react-collapsible\";\n\nconst Collapsable = (props) => {\n  return (\n    <Collapsible transitionTime={300} trigger={<button className={props.classNameButton}>{props.buttonText}</button>} className={props.className? props.className: \"Collapsable\"}>\n      <div className={props.classNameFlex? props.classNameFlex: \"\"}>\n      <span className={props.classNameTwo? props.classNameTwo: props.buttonText} style={props.style} key={`123${props.buttonText}`}>{props.element}</span>\n      <span className={props.classNameThree? props.classNameTwo: props.buttonText} key={`456${props.buttonText}`}>{props.elementTwo}</span>\n      </div>\n    </Collapsible>\n  );\n};\n\n\nexport default Collapsable;","import React from \"react\";\nimport Collapsible from \"react-collapsible\";\n\nconst CollapsableStats = (props) => {\n  return (\n    <Collapsible transitionTime={300} trigger={<button className={props.classNameButton}>{props.buttonText}</button>} className={props.className? props.className: \"Collapsable\"}>\n      <div className={props.classNameFlex? props.classNameFlex: \"\"}>\n      {props.children}\n      </div>\n    </Collapsible>\n  );\n};\n\n\nexport default CollapsableStats;","import React, { Component, Fragment } from \"react\";\nimport { getNewTips } from \"../logic/getScorePredictions\"\nimport {allTips} from \"../logic/getScorePredictions\"\nexport var incrementValue = 3;\n\nexport var riskLevel = 10;\n\nclass Increment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      incrementValue,\n      riskLevel,\n      show: true,\n    };\n  }\n\n  IncrementItem = () => {\n    if(incrementValue > 1){\n    this.setState({ incrementValue: this.state.incrementValue - 1 });\n    this.setState({ riskLevel: this.state.riskLevel - 1 });\n    incrementValue = (this.state.incrementValue - 1);\n    riskLevel = this.state.riskLevel - 1;\n    }\n    getNewTips(allTips)\n  };\n  DecreaseItem = () => {\n    if(incrementValue > 0){\n      this.setState({ incrementValue: this.state.incrementValue + 1 });\n      this.setState({ riskLevel: this.state.riskLevel + 1 });\n      incrementValue = (this.state.incrementValue + 1);\n      riskLevel = this.state.riskLevel + 1;\n    }\n    getNewTips(allTips)\n  };\n\n  render() {\n    return (\n      <Fragment>\n          <button className=\"IncrementButton\" onClick={this.IncrementItem}>\n            -\n          </button>\n          <button className=\"DecrementButton\" onClick={this.DecreaseItem}>\n            +\n          </button>\n      </Fragment>\n\n    );\n  }\n}\n\nexport default Increment;\n","export async function getBTTSPotential(\n  match,\n  homeGoals,\n  awayGoals,\n  directnessHome,\n  directnessAway\n) {\n  const homeBTTS = match.bttsAllPercentageHome;\n  const homeOnlyBTTS = match.bttsPercentageHomeHome;\n  const awayOnlyBTTS = match.bttsPercentageAwayAway;\n  const awayBTTS = match.bttsAllPercentageAway;\n  const homeG = homeGoals;\n  const awayG = awayGoals;\n\n  match.combinedBTTS = (homeBTTS + awayBTTS) / 2;\n\n  if (\n    match.bttsFraction !== \"N/A\" &&\n    match.status !== \"suspended\" &&\n    match.status !== \"canceled\"\n  ) {\n    if (\n      homeBTTS > 50 &&\n      awayBTTS > 50 &&\n      homeOnlyBTTS > 50 &&\n      awayOnlyBTTS > 50 &&\n      match.awayOdds < 4 &&\n      match.awayOdds > 1.3 &&\n      homeG >= 1 &&\n      awayG >= 1 &&\n      directnessHome < 11 &&\n      directnessAway < 11\n    ) {\n      match.btts = true;\n      match.bttsChosen = true;\n      match.totalGoals = match.rawFinalHomeGoals + match.rawFinalAwayGoals;\n    } else {\n      match.btts = false;\n      match.bttsChosen = false;\n    }\n  }\n  return match;\n}\n","import SwiperCore, { EffectCoverflow, Pagination } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/swiper-bundle.min.css\";\nimport \"swiper/swiper.min.css\";\n\nSwiperCore.use([EffectCoverflow, Pagination]);\n\nexport const Slider = (props) => {\n  return (\n    <Swiper\n      effect={\"coverflow\"}\n      autoHeight={true}\n      grabCursor={true}\n      centeredSlides={true}\n      slidesPerView={1}\n      coverflowEffect={{\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: false,\n      }}\n      pagination={{ clickable: true }}\n      className=\"mySwiper\"\n    >\n      <SwiperSlide>\n       {props.element}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element2}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element3}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element4}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element5}\n      </SwiperSlide>\n    </Swiper>\n  );\n};\n","import KofiButton from \"kofi-button\"\n\nexport const StyledKofiButton = (props) => {\n  return (\n    <KofiButton className=\"kofi-button\" color=\"#030061\" title={props.buttonText} kofiID=\"H2H0AX25Z\" />\n  )\n}","import React, { useState } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nexport let minimumXG = 0;\nexport let minimumGD = 0;\nexport let minimumGDHorA = 0;\nexport let minimumLast6 = 0;\n\nfunction SlideDiff(props) {\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n\n    switch (true) {\n      case props.useCase === \"xg\":\n        minimumXG = newValue;\n        break;\n      case props.useCase === \"gd\":\n        minimumGD = newValue;\n        break;\n      case props.useCase === \"gdHorA\":\n        minimumGDHorA = newValue;\n        break;\n      case props.useCase === \"last10\":\n        minimumLast6 = newValue;\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Slider\n      aria-label=\"Always visible\"\n      value={value}\n      sx={{\n        width: \"90%\",\n        color: \"#030061\",\n      }}\n      onChange={handleChange}\n      step={1}\n      marks={props.marks}\n      valueLabelDisplay=\"auto\"\n      min={parseFloat(props.lower)}\n      max={parseFloat(props.upper)}\n    />\n  );\n}\n\nexport default SlideDiff;\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { matches, diff } from \"./getFixtures\";\nimport { RenderAllFixtures } from \"../logic/getFixtures\";\nimport Div from \"../components/Div\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport CollapsableStats from \"../components/CollapsableStats\";\nimport { allForm } from \"../logic/getFixtures\";\nimport Increment from \"../components/Increment\";\nimport { incrementValue } from \"../components/Increment\";\nimport { getBTTSPotential } from \"../logic/getBTTSPotential\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport { Slider } from \"../components/Carousel\";\nimport { StyledKofiButton } from \"../components/KofiButton\";\nimport {\n  calculateAttackingStrength,\n  calculateDefensiveStrength,\n  calculateMetricStrength,\n} from \"./getStats\";\nimport { rangeValue } from \"../components/Slider\";\nimport {\n  minimumGD,\n  minimumXG,\n  minimumLast6,\n  minimumGDHorA,\n} from \"../components/SliderDiff\";\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nlet finalHomeGoals;\nlet finalAwayGoals;\nlet rawFinalHomeGoals;\nlet rawFinalAwayGoals;\nlet homeOdds;\nlet awayOdds;\nlet totalGoals = 0;\nlet totalGoals2 = 0;\nlet numberOfGames = 0;\nlet drawPredictions = 0;\nlet homePredictions = 0;\nlet awayPredictions = 0;\nlet allOutcomes = 0;\nlet homeOutcomes = 0;\nlet awayOutcomes = 0;\nlet winAmount = 0;\nlet lossAmount = 0;\nlet sumStatDAWin = 0;\nlet sumStatDALoss = 0;\nlet sumStatPossessionWin = 0;\nlet sumStatPossessionLoss = 0;\nlet sumStatSOTWin = 0;\nlet sumStatSOTLoss = 0;\nlet sumStatPPGLast10Win = 0;\nlet sumStatPPGLast10Loss = 0;\nlet sumOddsWin = 0;\nlet sumOddsLoss = 0;\nlet sumXGForWin = 0;\nlet sumXGForLoss = 0;\nlet sumXGAgainstWin = 0;\nlet sumXGAgainstLoss = 0;\nlet allWinOutcomes = 0;\nlet allLossOutcomes = 0;\nlet allDrawOutcomes = 0;\nlet totalROI = 0;\nlet totalInvestment = 0;\nlet totalProfit = 0;\nexport let formObjectHome;\nexport let formObjectAway;\nexport let clicked = false;\n\nexport var renderPredictions;\n\nasync function convertTimestamp(timestamp) {\n  let newDate = new Date(timestamp * 1000);\n  let [day, month, year] = newDate.toLocaleDateString(\"en-US\").split(\"/\");\n\n  let converted = `${year}-${day}-${month}`;\n\n  return converted;\n}\n\nexport function getPointsFromLastX(lastX) {\n  let points = 0;\n  let pointsAddition;\n\n  try {\n    lastX.forEach((game) => {\n      switch (true) {\n        case game === \"W\":\n          pointsAddition = 3;\n          break;\n        case game === \"D\":\n          pointsAddition = 1;\n          break;\n        case game === \"L\":\n          pointsAddition = 0;\n          break;\n        default:\n          break;\n      }\n\n      points = points + pointsAddition;\n    });\n    return points;\n  } catch (error) {\n    console.log(error);\n    return \"N/A\";\n  }\n}\n\nasync function getPastLeagueResults(team, game, hOrA, form) {\n  form.completeData = true;\n  let date = game.date;\n  if (allLeagueResultsArrayOfObjects[game.leagueIndex].fixtures.length > 10) {\n    let teamsHomeResults = allLeagueResultsArrayOfObjects[\n      game.leagueIndex\n    ].fixtures.filter((fixture) => fixture.home_name === team);\n\n    teamsHomeResults = teamsHomeResults\n      .filter(function (item) {\n        return item.date_unix < date - 86400;\n      })\n      .sort((a, b) => a.date_unix - b.date_unix);\n\n    let teamsAwayResults = allLeagueResultsArrayOfObjects[\n      game.leagueIndex\n    ].fixtures.filter((fixture) => fixture.away_name === team);\n\n    teamsAwayResults = teamsAwayResults\n      .filter(function (item) {\n        return item.date_unix < date - 86400;\n      })\n      .sort((a, b) => a.date_unix - b.date_unix);\n\n    async function addTotalsToRecord(record) {\n      // Calculate the total for each array and add as a new property\n      record.totalW =\n        record.W.reduce((sum, value) => sum + value, 0) / record.W.length;\n      record.totalD =\n        record.D.reduce((sum, value) => sum + value, 0) / record.D.length;\n      record.totalL =\n        record.L.reduce((sum, value) => sum + value, 0) / record.L.length;\n\n      return record; // Return the updated object\n    }\n\n    form.recordAgainstIndividualStyles = {\n      W: [],\n      D: [],\n      L: [],\n    };\n\n    form.recordAgainstIndividualStylesHome = {\n      W: [],\n      D: [],\n      L: [],\n    };\n\n    form.recordAgainstIndividualStylesAway = {\n      W: [],\n      D: [],\n      L: [],\n    };\n\n    let homeResults = [];\n    let awayResults = [];\n    let oddsSumHome = 0;\n    let oddsSumAway = 0;\n    let favouriteCount = 0;\n    let underdogCount = 0;\n    let winningFavouriteCount = 0;\n    let drawingFavouriteCount = 0;\n    let beatenFavouriteCount = 0;\n    let winningUnderdogCount = 0;\n    let drawingUnderdogCount = 0;\n    let beatenUnderdogCount = 0;\n\n    for (let index = 0; index < teamsHomeResults.length; index++) {\n      const resultedGame = teamsHomeResults[index];\n      homeResults.push({\n        homeTeam: resultedGame.home_name,\n        homeGoals: resultedGame.homeGoalCount,\n        XG:\n          resultedGame.team_a_xg === -1 || resultedGame.team_a_xg > 7\n            ? resultedGame.homeGoalCount\n            : resultedGame.team_a_xg,\n        awayTeam: resultedGame.away_name,\n        awayGoals: resultedGame.awayGoalCount,\n        XGAgainst:\n          resultedGame.team_b_xg === -1 || resultedGame.team_b_xg > 7\n            ? resultedGame.awayGoalCount\n            : resultedGame.team_b_xg,\n        possession:\n          resultedGame.team_a_possession === -1\n            ? 50\n            : resultedGame.team_a_possession,\n        scored: resultedGame.homeGoalCount,\n        conceeded: resultedGame.awayGoalCount,\n        shots:\n          resultedGame.team_a_shots === -1 ? 12 : resultedGame.team_a_shots,\n        sot:\n          resultedGame.team_a_shotsOnTarget === -1\n            ? 5\n            : resultedGame.team_a_shotsOnTarget,\n        sotAgainst:\n          resultedGame.team_b_shotsOnTarget === -1\n            ? 5\n            : resultedGame.team_b_shotsOnTarget,\n        dangerousAttacks:\n          resultedGame.team_a_dangerous_attacks === -1\n            ? 50\n            : resultedGame.team_a_dangerous_attacks,\n        corners:\n          resultedGame.team_a_corners === -1 ? 6 : resultedGame.team_a_corners,\n        date: await convertTimestamp(resultedGame.date_unix),\n        dateRaw: resultedGame.date_unix,\n        oddsHome: resultedGame.odds_ft_1,\n        oddsAway: resultedGame.odds_ft_2,\n        odds: resultedGame.odds_ft_1 < 999.99 ? resultedGame.odds_ft_1 / 2 : 1,\n        btts:\n          resultedGame.homeGoalCount > 0 && resultedGame.awayGoalCount > 0\n            ? true\n            : false,\n        points:\n          resultedGame.homeGoalCount > resultedGame.awayGoalCount\n            ? 3\n            : resultedGame.homeGoalCount < resultedGame.awayGoalCount\n            ? 0\n            : 1,\n        result:\n          resultedGame.homeGoalCount > resultedGame.awayGoalCount\n            ? \"W\"\n            : resultedGame.homeGoalCount < resultedGame.awayGoalCount\n            ? \"L\"\n            : \"D\",\n      });\n\n      const directnessHome =\n        (resultedGame.team_a_possession === -1\n          ? 50\n          : 100 - resultedGame.team_a_possession) /\n        (resultedGame.team_b_shotsOnTarget === 0 ||\n        resultedGame.team_b_shotsOnTarget === -1\n          ? 5\n          : resultedGame.team_b_shotsOnTarget);\n\n      switch (true) {\n        case resultedGame.homeGoalCount > resultedGame.awayGoalCount:\n          form.recordAgainstIndividualStyles.W.push(directnessHome);\n          form.recordAgainstIndividualStylesHome.W.push(directnessHome);\n          break;\n        case resultedGame.homeGoalCount < resultedGame.awayGoalCount:\n          form.recordAgainstIndividualStyles.L.push(directnessHome);\n          form.recordAgainstIndividualStylesHome.L.push(directnessHome);\n\n          break;\n        case resultedGame.homeGoalCount === resultedGame.awayGoalCount:\n          form.recordAgainstIndividualStyles.D.push(directnessHome);\n          form.recordAgainstIndividualStylesHome.D.push(directnessHome);\n          break;\n        default:\n          break;\n      }\n\n      oddsSumHome = oddsSumHome + resultedGame.odds_ft_1;\n      favouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2\n          ? favouriteCount + 1\n          : favouriteCount + 0;\n      winningFavouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? winningFavouriteCount + 1\n          : winningFavouriteCount + 0;\n      drawingFavouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingFavouriteCount + 1\n          : drawingFavouriteCount + 0;\n      beatenFavouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? beatenFavouriteCount + 1\n          : beatenFavouriteCount + 0;\n\n      underdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2\n          ? underdogCount + 1\n          : underdogCount + 0;\n      winningUnderdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? winningUnderdogCount + 1\n          : winningUnderdogCount + 0;\n      drawingUnderdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingUnderdogCount + 1\n          : drawingUnderdogCount + 0;\n      beatenUnderdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? beatenUnderdogCount + 1\n          : beatenUnderdogCount + 0;\n    }\n    for (let index = 0; index < teamsAwayResults.length; index++) {\n      const resultedGame = teamsAwayResults[index];\n      awayResults.push({\n        homeTeam: resultedGame.home_name,\n        homeGoals: resultedGame.homeGoalCount,\n        XG:\n          resultedGame.team_b_xg === -1 || resultedGame.team_b_xg > 7\n            ? resultedGame.awayGoalCount\n            : resultedGame.team_b_xg,\n        awayTeam: resultedGame.away_name,\n        awayGoals: resultedGame.awayGoalCount,\n        XGAgainst:\n          resultedGame.team_a_xg === -1 || resultedGame.team_a_xg > 7\n            ? resultedGame.homeGoalCount\n            : resultedGame.team_a_xg,\n        possession:\n          resultedGame.team_b_possession === -1\n            ? 50\n            : resultedGame.team_b_possession,\n        scored: resultedGame.awayGoalCount,\n        conceeded: resultedGame.homeGoalCount,\n        shots:\n          resultedGame.team_b_shots === -1 ? 12 : resultedGame.team_b_shots,\n        sot:\n          resultedGame.team_b_shotsOnTarget === -1\n            ? 5\n            : resultedGame.team_b_shotsOnTarget,\n        sotAgainst:\n          resultedGame.team_a_shotsOnTarget === -1\n            ? 5\n            : resultedGame.team_a_shotsOnTarget,\n        dangerousAttacks:\n          resultedGame.team_b_dangerous_attacks === -1\n            ? 50\n            : resultedGame.team_b_dangerous_attacks,\n        corners:\n          resultedGame.team_b_corners === -1 ? 6 : resultedGame.team_b_corners,\n        date: await convertTimestamp(resultedGame.date_unix),\n        dateRaw: resultedGame.date_unix,\n        oddsHome: resultedGame.odds_ft_1,\n        oddsAway: resultedGame.odds_ft_2,\n        odds: resultedGame.odds_ft_2 < 999.99 ? resultedGame.odds_ft_2 / 2 : 1,\n        btts:\n          resultedGame.homeGoalCount > 0 && resultedGame.awayGoalCount > 0\n            ? true\n            : false,\n        points:\n          resultedGame.homeGoalCount > resultedGame.awayGoalCount\n            ? 0\n            : resultedGame.homeGoalCount < resultedGame.awayGoalCount\n            ? 3\n            : 1,\n        result:\n          resultedGame.homeGoalCount > resultedGame.awayGoalCount\n            ? \"L\"\n            : resultedGame.homeGoalCount < resultedGame.awayGoalCount\n            ? \"W\"\n            : \"D\",\n      });\n\n      const directnessAway =\n        (resultedGame.team_b_possession === -1\n          ? 50\n          : 100 - resultedGame.team_b_possession) /\n        (resultedGame.team_a_shotsOnTarget === 0 ||\n        resultedGame.team_a_shotsOnTarget === -1\n          ? 5\n          : resultedGame.team_a_shotsOnTarget);\n\n      switch (true) {\n        case resultedGame.homeGoalCount > resultedGame.awayGoalCount:\n          form.recordAgainstIndividualStyles.L.push(directnessAway);\n          form.recordAgainstIndividualStylesAway.L.push(directnessAway);\n          break;\n        case resultedGame.homeGoalCount < resultedGame.awayGoalCount:\n          form.recordAgainstIndividualStyles.W.push(directnessAway);\n          form.recordAgainstIndividualStylesAway.W.push(directnessAway);\n          break;\n        case resultedGame.homeGoalCount === resultedGame.awayGoalCount:\n          form.recordAgainstIndividualStyles.D.push(directnessAway);\n          form.recordAgainstIndividualStylesAway.D.push(directnessAway);\n          break;\n        default:\n          break;\n      }\n\n      oddsSumAway = oddsSumAway + resultedGame.odds_ft_2;\n      favouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2\n          ? favouriteCount + 1\n          : favouriteCount + 0;\n      winningFavouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? winningFavouriteCount + 1\n          : winningFavouriteCount + 0;\n      drawingFavouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingFavouriteCount + 1\n          : drawingFavouriteCount + 0;\n      beatenFavouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? beatenFavouriteCount + 1\n          : beatenFavouriteCount + 0;\n\n      underdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2\n          ? underdogCount + 1\n          : underdogCount + 0;\n      winningUnderdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? winningUnderdogCount + 1\n          : winningUnderdogCount + 0;\n      drawingUnderdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingUnderdogCount + 1\n          : drawingUnderdogCount + 0;\n      beatenUnderdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? beatenUnderdogCount + 1\n          : beatenUnderdogCount + 0;\n    }\n\n    await addTotalsToRecord(form.recordAgainstIndividualStyles);\n\n    let reversedResultsHome = homeResults;\n    let reversedResultsAway = awayResults;\n\n    if (game.homeTeam === team) {\n      let y = game.homeOdds;\n      //Clear fav\n      if (y <= 1.5) {\n        const allClearFavouriteResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 1.45\n        );\n        const allClearFavouriteResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 1.45\n        );\n\n        form.simlarGameResultsHome = allClearFavouriteResultsHome\n          .concat(allClearFavouriteResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //fav\n      else if (y <= 2.1) {\n        const allSlightFavouriteResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 2.1 && fixture.oddsHome > 1.45\n        );\n        const allSlightFavouriteResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 2.1 && fixture.oddsAway > 1.45\n        );\n        game.simlarGameResultsHome = allSlightFavouriteResultsHome\n          .concat(allSlightFavouriteResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //Tossup\n      else if (y <= 2.75) {\n        const allTossupResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 2.75 && fixture.oddsHome > 2.1\n        );\n        const allTossupResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 2.75 && fixture.oddsAway > 2.1\n        );\n        game.simlarGameResultsHome = allTossupResultsHome\n          .concat(allTossupResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //Underdog\n      else if (y <= 4) {\n        const allUnderdogResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 4 && fixture.oddsHome > 2.75\n        );\n        const allUnderdogResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 4 && fixture.oddsAway > 2.75\n        );\n        game.simlarGameResultsHome = allUnderdogResultsHome\n          .concat(allUnderdogResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //MassiveUnderdog\n      else if (y > 4) {\n        const allMassiveUnderdogResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome > 4\n        );\n        const allMassiveUnderdogResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway > 4\n        );\n        game.simlarGameResultsHome = allMassiveUnderdogResultsHome\n          .concat(allMassiveUnderdogResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n    } else if (game.awayTeam === team) {\n      let z = game.awayOdds;\n      //Clear fav\n      if (z <= 1.5) {\n        const allClearFavouriteResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 1.45\n        );\n        const allClearFavouriteResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 1.45\n        );\n\n        game.simlarGameResultsAway = allClearFavouriteResultsHome\n          .concat(allClearFavouriteResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //fav\n      else if (z <= 2.1) {\n        const allSlightFavouriteResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 2.1 && fixture.oddsHome > 1.45\n        );\n        const allSlightFavouriteResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 2.1 && fixture.oddsAway > 1.45\n        );\n        game.simlarGameResultsAway = allSlightFavouriteResultsHome\n          .concat(allSlightFavouriteResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //Tossup\n      else if (z <= 2.75) {\n        const allTossupResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 2.75 && fixture.oddsHome > 2.1\n        );\n        const allTossupResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 2.75 && fixture.oddsAway > 2.1\n        );\n        game.simlarGameResultsAway = allTossupResultsHome\n          .concat(allTossupResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //Underdog\n      else if (z <= 4) {\n        const allUnderdogResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome <= 4 && fixture.oddsHome > 2.75\n        );\n        const allUnderdogResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway <= 4 && fixture.oddsAway > 2.75\n        );\n        game.simlarGameResultsAway = allUnderdogResultsHome\n          .concat(allUnderdogResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n      //MassiveUnderdog\n      else if (z > 4) {\n        const allMassiveUnderdogResultsHome = reversedResultsHome.filter(\n          (fixture) => fixture.oddsHome > 4.5\n        );\n        const allMassiveUnderdogResultsAway = reversedResultsAway.filter(\n          (fixture) => fixture.oddsAway > 4.5\n        );\n        game.simlarGameResultsAway = allMassiveUnderdogResultsHome\n          .concat(allMassiveUnderdogResultsAway)\n          .sort((a, b) => a.dateRaw - b.dateRaw);\n      }\n    }\n\n    const allTeamResults = reversedResultsHome.concat(reversedResultsAway);\n\n    let points = 0;\n    let pointsWeighted = 0;\n\n    allTeamResults.forEach((teamResult) => {\n      points = points + teamResult.points;\n      pointsWeighted = pointsWeighted + teamResult.points * teamResult.odds;\n    });\n\n    form.pointsWeighted = pointsWeighted;\n    form.points = points;\n    form.gamesPlayed = allTeamResults.length;\n\n    const allTeamResultsHome = reversedResultsHome.sort(\n      (a, b) => b.dateRaw - a.dateRaw\n    );\n    const allTeamResultsAway = reversedResultsAway.sort(\n      (a, b) => b.dateRaw - a.dateRaw\n    );\n\n    form.allTeamResults = allTeamResults.sort((b, a) => a.dateRaw - b.dateRaw);\n\n    const points6 = allTeamResults.map((res) => res.points).slice(0, 6);\n    const pointsSum6 = points6.reduce((a, b) => a + b, 0);\n    form.avPoints6 = pointsSum6 / points6.length;\n    form.pointsSum6 = pointsSum6;\n\n    const points5 = allTeamResults.map((res) => res.points).slice(0, 5);\n    const pointsSum5 = points5.reduce((a, b) => a + b, 0);\n    form.avPoints5 = pointsSum5 / points5.length;\n\n    const pointsAll = allTeamResults.map((res) => res.points);\n    const pointsSumAll = pointsAll.reduce((a, b) => a + b, 0);\n    form.avPointsAll = pointsSumAll / pointsAll.length;\n\n    const resultsAll = allTeamResults.map((res) => res.result);\n    const resultsHome = allTeamResultsHome.map((res) => res.result);\n    const resultsAway = allTeamResultsAway.map((res) => res.result);\n\n    form.resultsAll = resultsAll.slice(0, 6);\n    form.resultsHome = resultsHome.slice(0, 6);\n    form.resultsAway = resultsAway.slice(0, 6);\n\n    const avScoredLast5 = allTeamResults.map((res) => res.scored).slice(0, 5);\n    const avScoredLast5Sum = avScoredLast5.reduce((a, b) => a + b, 0);\n    form.avScoredLast5 = avScoredLast5Sum / avScoredLast5.length;\n    const avConceededLast5 = allTeamResults\n      .map((res) => res.conceeded)\n      .slice(0, 5);\n    const avConceededLast5Sum = avConceededLast5.reduce((a, b) => a + b, 0);\n    form.avConceededLast5 = avConceededLast5Sum / avConceededLast5.length;\n    const avDALast5 = allTeamResults\n      .map((res) => res.dangerousAttacks)\n      .slice(0, 5);\n    const avDALast5Sum = avDALast5.reduce((a, b) => a + b, 0);\n    form.avDALast5 = avDALast5Sum / avDALast5.length;\n    const avSOTLast5 = allTeamResults.map((res) => res.sot).slice(0, 5);\n    const avSOTLast5Sum = avSOTLast5.reduce((a, b) => a + b, 0);\n    form.avSOTLast5 = avSOTLast5Sum / avSOTLast5.length;\n    const avSOTAgainstLast5 = allTeamResults\n      .map((res) => res.sotAgainst)\n      .slice(0, 5);\n    const avSOTAgainstLast5Sum = avSOTAgainstLast5.reduce((a, b) => a + b, 0);\n    form.avSOTAgainstLast5 = avSOTAgainstLast5Sum / avSOTAgainstLast5.length;\n    const avShotsLast5 = allTeamResults.map((res) => res.shots).slice(0, 5);\n    const avShotsLast5Sum = avShotsLast5.reduce((a, b) => a + b, 0);\n    form.avShotsLast5 = avShotsLast5Sum / avShotsLast5.length;\n    const avCornersLast5 = allTeamResults.map((res) => res.corners).slice(0, 5);\n    const avCornersLast5Sum = avCornersLast5.reduce((a, b) => a + b, 0);\n    form.avCornersLast5 = avCornersLast5Sum / avCornersLast5.length;\n    const avPosessionLast5 = allTeamResults\n      .map((res) => res.possession)\n      .slice(0, 6);\n    const avPosessionLast5Sum = avPosessionLast5.reduce((a, b) => a + b, 0);\n    form.avPosessionLast5 = avPosessionLast5Sum / avPosessionLast5.length;\n    const avXGLast5 = allTeamResults.map((res) => res.XG).slice(0, 5);\n    const avXGLast5Sum = avXGLast5.reduce((a, b) => a + b, 0);\n    form.avXGLast5 = avXGLast5Sum / avXGLast5.length;\n    const avXGAgainstLast5 = allTeamResults\n      .map((res) => res.XGAgainst)\n      .slice(0, 5);\n\n    // console.log(form.teamName);\n\n    // console.log(\"avConceededLast5\")\n    // console.log(avConceededLast5)\n    // console.log(\"avSOTLast5\")\n    // console.log(avSOTLast5)\n\n    // console.log(\"avSOTAgainstLast5\")\n    // console.log(avSOTAgainstLast5)\n\n    // console.log(\"avShotsLast5\")\n    // console.log(avShotsLast5)\n\n    // console.log(\"avCornersLast5\")\n    // console.log(avCornersLast5)\n\n    // console.log(\"avPosessionLast5\")\n    // console.log(avPosessionLast5)\n\n    // console.log(\"avXGLast5\")\n    // console.log(avXGLast5)\n\n    // console.log(\"avXGAgainstLast5\")\n    // console.log(avXGAgainstLast5)\n\n    const avXGAgainstLast5Sum = avXGAgainstLast5.reduce((a, b) => a + b, 0);\n    form.avXGAgainstLast5 = avXGAgainstLast5Sum / avXGAgainstLast5.length;\n\n    const averageOddsHome = oddsSumHome / teamsHomeResults.length;\n    const averageOddsAway = oddsSumAway / teamsAwayResults.length;\n    form.favouriteCount = favouriteCount;\n    form.winningFavouriteCount = winningFavouriteCount;\n    form.drawingFavouriteCount = drawingFavouriteCount;\n    form.beatenFavouriteCount = beatenFavouriteCount;\n\n    form.underdogCount = underdogCount;\n    form.winningUnderdogCount = winningUnderdogCount;\n    form.drawingUnderdogCount = drawingUnderdogCount;\n    form.beatenUnderdogCount = beatenUnderdogCount;\n\n    form.oddsReliabilityWin =\n      favouriteCount > 0\n        ? (form.winningFavouriteCount / form.favouriteCount) * 100\n        : 0;\n    form.oddsReliabilityDraw =\n      favouriteCount > 0\n        ? (form.drawingFavouriteCount / form.favouriteCount) * 100\n        : 0;\n    form.oddsReliabilityLose =\n      favouriteCount > 0\n        ? (form.beatenFavouriteCount / form.favouriteCount) * 100\n        : 0;\n\n    form.oddsReliabilityWinAsUnderdog =\n      underdogCount > 0\n        ? (form.winningUnderdogCount / form.underdogCount) * 100\n        : 0;\n    form.oddsReliabilityDrawAsUnderdog =\n      underdogCount > 0\n        ? (form.drawingUnderdogCount / form.underdogCount) * 100\n        : 0;\n    form.oddsReliabilityLoseAsUnderdog =\n      underdogCount > 0\n        ? (form.beatenUnderdogCount / form.underdogCount) * 100\n        : 0;\n\n    form.reliableIndicator =\n      form.winningFavouriteCount + form.beatenUnderdogCount;\n    form.unreliableIndicator =\n      form.beatenFavouriteCount +\n      form.drawingFavouriteCount +\n      form.winningUnderdogCount +\n      form.drawingUnderdogCount;\n\n    form.predictabilityScore =\n      form.reliableIndicator / form.unreliableIndicator;\n\n    let reliabilityString;\n\n    switch (true) {\n      case form.predictabilityScore < 0.3:\n        reliabilityString =\n          \"Odds have been an extremely unreliable indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 0.3 && form.predictabilityScore < 0.8:\n        reliabilityString =\n          \"Odds have been an unreliable indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 0.8 && form.predictabilityScore < 1.2:\n        reliabilityString =\n          \"Odds have been a decent indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 1.2 && form.predictabilityScore < 1.7:\n        reliabilityString =\n          \"Odds have been a good indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 1.7 && form.predictabilityScore < 2.2:\n        reliabilityString =\n          \"Odds have been a very good indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 2.2:\n        reliabilityString =\n          \"Odds have been an excellent indicator of actual performance so far this season\";\n        break;\n      default:\n        break;\n    }\n\n    form.reliabilityString = reliabilityString;\n\n    const teamGoalsHome = reversedResultsHome.map((res) => res.scored);\n\n    const teamGoalsAway = awayResults.map((res) => res.scored);\n    const teamGoalsAll = allTeamResults.map((res) => res.scored);\n    const teamConceededHome = homeResults.map((res) => res.conceeded);\n    const teamConceededAway = awayResults.map((res) => res.conceeded);\n    const teamConceededAll = allTeamResults.map((res) => res.conceeded);\n\n    const teamXGForAll = allTeamResults.map((res) => res.XG);\n    const teamXGAgainstAll = allTeamResults.map((res) => res.XGAgainst);\n    const teamXGForAllRecentAtStart = teamXGForAll;\n    const teamXGAgainstAllRecentAtStart = teamXGAgainstAll;\n\n    const teamXGForHome = homeResults.map((res) => res.XG);\n    const teamXGAgainstHome = homeResults.map((res) => res.XGAgainst);\n    const teamXGForAway = awayResults.map((res) => res.XG);\n    const teamXGAgainstAway = awayResults.map((res) => res.XGAgainst);\n\n    const XGSum = teamXGForAll.reduce((a, b) => a + b, 0);\n    const avgXGScored = XGSum / teamXGForAll.length || 0;\n    const XGAgainstSum = teamXGAgainstAll.reduce((a, b) => a + b, 0);\n    const avgXGConceeded = XGAgainstSum / teamXGAgainstAll.length || 0;\n\n    const shortTermXGDiff = form.avXGLast5 - form.avXGAgainstLast5;\n    const longTermXGDiff = avgXGScored - avgXGConceeded;\n\n    form.XGChangeRecently = shortTermXGDiff - longTermXGDiff;\n\n    const possession = allTeamResults.map((res) => res.possession);\n    const possessionSum = possession.reduce((a, b) => a + b, 0);\n    const avgPossession = possessionSum / possession.length || 0;\n\n    const possessionHome = homeResults.map((res) => res.possession);\n    const possessionSumHome = possessionHome.reduce((a, b) => a + b, 0);\n    form.avgPossessionHome = possessionSumHome / possessionHome.length || 0;\n\n    const possessionAway = awayResults.map((res) => res.possession);\n    const possessionSumAway = possessionAway.reduce((a, b) => a + b, 0);\n    form.avgPossessionAway = possessionSumAway / possessionAway.length || 0;\n\n    const dangerousAttacks = allTeamResults.map((res) => res.dangerousAttacks);\n    const dangerousAttacksSum = dangerousAttacks.reduce((a, b) => a + b, 0);\n    const avgDangerousAttacks =\n      dangerousAttacksSum / dangerousAttacks.length || 0;\n\n    const dangerousAttacksHome = homeResults.map((res) => res.dangerousAttacks);\n    const dangerousAttacksSumHome = dangerousAttacksHome.reduce(\n      (a, b) => a + b,\n      0\n    );\n    form.avgDangerousAttacksHome =\n      dangerousAttacksSumHome / dangerousAttacksHome.length || 0;\n\n    const dangerousAttacksAway = awayResults.map((res) => res.dangerousAttacks);\n    const dangerousAttacksSumAway = dangerousAttacksAway.reduce(\n      (a, b) => a + b,\n      0\n    );\n    form.avgDangerousAttacksAway =\n      dangerousAttacksSumAway / dangerousAttacksAway.length || 0;\n\n    const shots = allTeamResults.map((res) => res.shots);\n    const shotsSum = shots.reduce((a, b) => a + b, 0);\n    const avgShots = shotsSum / shots.length || 0;\n    form.avgShots = avgShots;\n\n    const shotsHome = homeResults.map((res) => res.shots);\n    const shotsSumHome = shotsHome.reduce((a, b) => a + b, 0);\n    form.avgShotsHome = shotsSumHome / shotsHome.length || 0;\n\n    const shotsAway = awayResults.map((res) => res.shots);\n    const shotsSumAway = shotsAway.reduce((a, b) => a + b, 0);\n    form.avgShotsAway = shotsSumAway / shotsAway.length || 0;\n\n    const shotsOnTarget = allTeamResults.map((res) => res.sot);\n    const shotsOnTargetSum = shotsOnTarget.reduce((a, b) => a + b, 0);\n    const avgShotsOnTarget = shotsOnTargetSum / shotsOnTarget.length || 0;\n\n    const shotsOnTargetHome = homeResults.map((res) => res.sot);\n    const shotsOnTargetSumHome = shotsOnTargetHome.reduce((a, b) => a + b, 0);\n    form.avgShotsOnTargetHome =\n      shotsOnTargetSumHome / shotsOnTargetHome.length || 0;\n\n    const shotsOnTargetAway = awayResults.map((res) => res.sot);\n    const shotsOnTargetSumAway = shotsOnTargetAway.reduce((a, b) => a + b, 0);\n    form.avgShotsOnTargetAway =\n      shotsOnTargetSumAway / shotsOnTargetAway.length || 0;\n\n    form.directnessRating = avgPossession / avgShotsOnTarget;\n    form.directnessRatingHome =\n      form.avgPossessionHome / form.avgShotsOnTargetHome;\n    form.directnessRatingAway =\n      form.avgPossessionAway / form.avgShotsOnTargetAway;\n\n    const shotsOnTargetAgainst = allTeamResults.map((res) => res.sotAgainst);\n    const shotsOnTargetSumAgainst = shotsOnTargetAgainst.reduce(\n      (a, b) => a + b,\n      0\n    );\n    const avgShotsOnTargetAgainst =\n      shotsOnTargetSumAgainst / shotsOnTargetAgainst.length || 0;\n\n    const shotsOnTargetAgainstHome = homeResults.map((res) => res.sotAgainst);\n    const shotsOnTargetSumAgainstHome = shotsOnTargetAgainstHome.reduce(\n      (a, b) => a + b,\n      0\n    );\n    form.avgShotsOnTargetAgainstHome =\n      shotsOnTargetSumAgainstHome / shotsOnTargetAgainstHome.length || 0;\n\n    const shotsOnTargetAgainstAway = awayResults.map((res) => res.sotAgainst);\n    const shotsOnTargetSumAgainstAway = shotsOnTargetAgainstAway.reduce(\n      (a, b) => a + b,\n      0\n    );\n    form.avgShotsOnTargetAgainstAway =\n      shotsOnTargetSumAgainstAway / shotsOnTargetAgainstAway.length || 0;\n\n    const corners = allTeamResults.map((res) => res.corners);\n    const cornersSum = corners.reduce((a, b) => a + b, 0);\n    const cornersAv = cornersSum / corners.length || 0;\n\n    const cornersHome = homeResults.map((res) => res.corners);\n    const cornersSumHome = cornersHome.reduce((a, b) => a + b, 0);\n    form.cornersAvHome = cornersSumHome / cornersHome.length || 0;\n\n    const cornersAway = awayResults.map((res) => res.corners);\n    const cornersSumAway = cornersAway.reduce((a, b) => a + b, 0);\n    form.cornersAvAway = cornersSumAway / cornersAway.length || 0;\n\n    const last5XG = teamXGForAllRecentAtStart.slice(0, 5);\n    const last5XGSum = last5XG.reduce((a, b) => a + b, 0);\n    const last5XGAvgFor = last5XGSum / last5XG.length || 0;\n\n    const last5XGHome = teamXGForHome.slice(0, 5);\n    const last5XGSumHome = last5XGHome.reduce((a, b) => a + b, 0);\n    form.last5XGAvgForHome = last5XGSumHome / last5XGHome.length || 0;\n\n    const last5XGAway = teamXGForAway.slice(0, 5);\n    const last5XGSumAway = last5XGAway.reduce((a, b) => a + b, 0);\n    form.last5XGAvgForAway = last5XGSumAway / last5XGAway.length || 0;\n\n    const XGSumHome = teamXGForHome.reduce((a, b) => a + b, 0);\n    form.avgXGScoredHome = XGSumHome / teamXGForHome.length || 0;\n\n    const XGSumAway = teamXGForAway.reduce((a, b) => a + b, 0);\n    form.avgXGScoredAway = XGSumAway / teamXGForAway.length || 0;\n\n    const XGAgainstSumHome = teamXGAgainstHome.reduce((a, b) => a + b, 0);\n    form.avgXGConceededHome = XGAgainstSumHome / teamXGAgainstHome.length || 0;\n\n    const XGAgainstSumAway = teamXGAgainstAway.reduce((a, b) => a + b, 0);\n    form.avgXGConceededAway = XGAgainstSumAway / teamXGAgainstAway.length || 0;\n\n    const last5XGAgainst = teamXGAgainstAllRecentAtStart.slice(0, 5);\n    const last5XGAgainstSum = last5XGAgainst.reduce((a, b) => a + b, 0);\n    const last5XGAvgAgainst = last5XGAgainstSum / last5XGAgainst.length || 0;\n\n    const last5XGAgainstHome = teamXGForHome.slice(0, 5);\n    const last5XGAgainstSumHome = last5XGAgainstHome.reduce((a, b) => a + b, 0);\n    form.last5XGAvgAgainstHome =\n      last5XGAgainstSumHome / last5XGAgainstHome.length || 0;\n\n    const last5XGAgainstAway = teamXGForAway.slice(0, 5);\n    const last5XGAgainstSumAway = last5XGAgainstAway.reduce((a, b) => a + b, 0);\n    form.last5XGAvgAgainstAway =\n      last5XGAgainstSumAway / last5XGAgainstAway.length || 0;\n\n    form.XGDiffNonAverage = XGSum - XGAgainstSum;\n    form.XGDiffNonAverageLast5 = last5XGSum - last5XGAgainstSum;\n\n    form.XGOverall = parseFloat(avgXGScored.toFixed(2));\n    form.XGlast5 = parseFloat(last5XGAvgFor.toFixed(2));\n\n    const shotsLast5Arr = shots.slice(0, 5);\n    const shotsLast5Sum = shotsLast5Arr.reduce((a, b) => a + b, 0);\n    const avgShotsLast5 = shotsLast5Sum / shotsLast5Arr.length || 0;\n    form.avgShotsLast5 = avgShotsLast5;\n\n    const shotsHomeArr = shotsHome.slice(0, 5);\n    const shotsHomeSum = shotsHomeArr.reduce((a, b) => a + b, 0);\n    const avgShotsHome = shotsHomeSum / shotsHomeArr.length || 0;\n    form.avgShotsHome = avgShotsHome;\n\n    const shotsAwayArr = shotsAway.slice(0, 5);\n    const shotsAwaySum = shotsAwayArr.reduce((a, b) => a + b, 0);\n    const avgShotsAway = shotsAwaySum / shotsAwayArr.length || 0;\n    form.avgShotsAway = avgShotsAway;\n\n    form.avgShotValue = (form.XGOverall / form.avgShots) * 100;\n    form.avgShotValueLast5 = (form.XGlast5 / form.avgShotsLast5) * 100;\n    form.avgShotValueHome = (form.avgXGScoredHome / form.avgShotsHome) * 100;\n    form.avgShotValueAway = (form.avgXGScoredAway / form.avgShotsAway) * 100;\n\n    form.XGAgainstAvgOverall = parseFloat(avgXGConceeded.toFixed(2));\n    form.XGAgainstlast5 = parseFloat(last5XGAvgAgainst.toFixed(2));\n\n    form.AveragePossessionOverall = parseFloat(avgPossession.toFixed(1));\n    form.AverageDangerousAttacksOverall = parseFloat(\n      avgDangerousAttacks.toFixed(1)\n    );\n    form[\"Average Shots\"] = parseFloat(avgShots.toFixed(1));\n    form.AverageCorners = parseFloat(cornersAv.toFixed(1));\n    form.AverageShotsOnTargetOverall = parseFloat(avgShotsOnTarget.toFixed(1));\n    form.AverageShotsOnTargetAgainstOverall = parseFloat(\n      avgShotsOnTargetAgainst.toFixed(1)\n    );\n    const alpha = 0.2;\n    const beta = 0.2;\n\n    let forAndAgainstRollingAv;\n    let forAndAgainstRollingAvHomeOrAway;\n\n    if (hOrA === \"home\") {\n      form.allGoalsArrayHomeRecent = teamGoalsAll.slice(0, 20);\n      form.allConceededArrayHomeRecent = teamConceededAll.slice(0, 20);\n      form.allGoalsArrayHome = teamGoalsAll.reverse();\n      form.allConceededArrayHome = teamConceededAll.reverse();\n      form.allGoalsArrayHomeOnly = teamGoalsHome.reverse();\n      form.allConceededArrayHomeOnly = teamConceededHome.reverse();\n      const sum = teamGoalsHome.reduce((a, b) => a + b, 0);\n      const sumTwo = teamConceededHome.reduce((a, b) => a + b, 0);\n      form.goalDifferenceHomeOrAway = sum - sumTwo;\n\n      forAndAgainstRollingAv = await predictGoalsWithExponentialSmoothing(\n        form.allGoalsArrayHome,\n        form.allConceededArrayHome,\n        alpha\n      );\n\n      forAndAgainstRollingAvHomeOrAway =\n        await predictGoalsWithExponentialSmoothing(\n          form.allGoalsArrayHomeOnly,\n          form.allConceededArrayHomeOnly,\n          beta\n        );\n    } else if (hOrA === \"away\") {\n      form.allGoalsArrayAwayRecent = teamGoalsAll.slice(0, 20);\n      form.allConceededArrayAwayRecent = teamConceededAll.slice(0, 20);\n      form.allGoalsArrayAway = teamGoalsAll.reverse();\n      form.allConceededArrayAway = teamConceededAll.reverse();\n      form.allGoalsArrayAwayOnly = teamGoalsAway.reverse();\n      form.allConceededArrayAwayOnly = teamConceededAway.reverse();\n      const sum = teamGoalsAway.reduce((a, b) => a + b, 0);\n      const sumTwo = teamConceededAway.reduce((a, b) => a + b, 0);\n      form.goalDifferenceHomeOrAway = sum - sumTwo;\n      forAndAgainstRollingAv = await predictGoalsWithExponentialSmoothing(\n        form.allGoalsArrayAway,\n        form.allConceededArrayAway,\n        alpha\n      );\n\n      forAndAgainstRollingAvHomeOrAway =\n        await predictGoalsWithExponentialSmoothing(\n          form.allGoalsArrayAwayOnly,\n          form.allConceededArrayAwayOnly,\n          beta\n        );\n    }\n\n    let bttsHome = homeResults.map((res) => res.btts);\n    if (bttsHome.length > 10) {\n      bttsHome = bttsHome.slice(-10);\n    }\n\n    let bttsAway = awayResults.map((res) => res.btts);\n    if (bttsAway.length > 10) {\n      bttsAway = bttsAway.slice(-10);\n    }\n\n    let bttsAll = allTeamResults.map((res) => res.btts);\n    if (bttsAll.length > 10) {\n      bttsAll = bttsAll.slice(-10);\n    }\n\n    const bttsHomeCount = bttsHome.filter((btts) => btts === true);\n    const bttsHomeString = `${bttsHomeCount.length}/${bttsHome.length}`;\n    const bttsHomePercentage = (\n      (bttsHomeCount.length / bttsHome.length) *\n      100\n    ).toFixed(0);\n\n    const bttsAwayCount = bttsAway.filter((btts) => btts === true);\n    const bttsAwayString = `${bttsAwayCount.length}/${bttsAway.length}`;\n    const bttsAwayPercentage = (\n      (bttsAwayCount.length / bttsAway.length) *\n      100\n    ).toFixed(0);\n    const bttsAllCount = bttsAll.filter((btts) => btts === true);\n    const bttsAllString = `${bttsAllCount.length}/${bttsAll.length}`;\n    const bttsAllPercentage = (\n      (bttsAllCount.length / bttsAll.length) *\n      100\n    ).toFixed(0);\n    form.bttsAllPercentage = bttsAllPercentage;\n    form.bttsHomePercentage = bttsHomePercentage;\n    form.bttsAwayPercentage = bttsAwayPercentage;\n\n    let r = 10;\n    let x = 10;\n\n    const teamGoalsHomeRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsHome,\n      teamGoalsHome.length < x ? teamGoalsHome.length : x\n    );\n\n    const teamGoalsAwayRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsAway,\n      teamGoalsAway.length < x ? teamGoalsAway.length : x\n    );\n\n    const RoundedXGFor = teamXGForAll.map((xg) => xg);\n    const RoundedXGAgainst = teamXGAgainstAll.map((xg) => xg);\n    const RoundedXGForHome = teamXGForHome.map((xg) => xg);\n    const RoundedXGAgainstHome = teamXGAgainstHome.map((xg) => xg);\n    const RoundedXGForAway = teamXGForAway.map((xg) => xg);\n    const RoundedXGAgainstAway = teamXGAgainstAway.map((xg) => xg);\n\n    form.XGPrediction = await predictGoalsWithExponentialSmoothing(\n      RoundedXGFor,\n      RoundedXGAgainst,\n      alpha\n    );\n\n    form.XGPredictionHome = await predictGoalsWithExponentialSmoothing(\n      RoundedXGForHome,\n      RoundedXGAgainstHome,\n      beta\n    );\n\n    form.XGPredictionAway = await predictGoalsWithExponentialSmoothing(\n      RoundedXGForAway,\n      RoundedXGAgainstAway,\n      beta\n    );\n\n    const teamConceededHomeRollingAverage =\n      await predictNextWeightedMovingAverage(\n        teamConceededHome,\n        teamConceededHome.length < x ? teamConceededHome.length : x\n      );\n\n    const teamConceededAwayRollingAverage =\n      await predictNextWeightedMovingAverage(\n        teamConceededAway,\n        teamConceededAway.length < x ? teamConceededAway.length : x\n      );\n\n    const sum = teamGoalsAll.reduce((a, b) => a + b, 0);\n    const avgScored = sum / teamGoalsAll.length || 0;\n    form.avgScored = parseFloat(avgScored.toFixed(2));\n\n    const sumHome = teamGoalsHome.reduce((a, b) => a + b, 0);\n    const avgScoredHome = sumHome / teamGoalsHome.length || 0;\n    form.avgScoredHome = parseFloat(avgScoredHome.toFixed(2));\n\n    const sumAway = teamGoalsAway.reduce((a, b) => a + b, 0);\n    const avgScoredAway = sumAway / teamGoalsAway.length || 0;\n    form.avgScoredAway = parseFloat(avgScoredAway.toFixed(2));\n\n    const last5 = teamGoalsAll.reverse().slice(0, 5);\n    const last5Sum = last5.reduce((a, b) => a + b, 0);\n    const last5AvgScored = parseFloat(last5Sum / last5.length || 0);\n\n    const last5Home = teamGoalsHome.slice(0, 5);\n    const last5SumHome = last5Home.reduce((a, b) => a + b, 0);\n    form.last5AvgScoredHome = parseFloat(last5SumHome / last5Home.length || 0);\n\n    const last5Away = teamGoalsAway.slice(0, 5);\n    const last5SumAway = last5Away.reduce((a, b) => a + b, 0);\n    form.last5AvgScoredAway = parseFloat(last5SumAway / last5Away.length || 0);\n\n    const last5Conceeded = teamConceededAll.reverse().slice(0, 5);\n    const last5ConceededSum = last5Conceeded.reduce((a, b) => a + b, 0);\n    const last5AvgConceeded = parseFloat(\n      last5ConceededSum / last5Conceeded.length || 0\n    );\n\n    const last5ConceededHome = teamConceededHome.slice(0, 5);\n    const last5ConceededSumHome = last5ConceededHome.reduce((a, b) => a + b, 0);\n    form.last5AvgConceededHome = parseFloat(\n      last5ConceededSumHome / last5ConceededHome.length || 0\n    );\n\n    const last5ConceededAway = teamConceededAway.slice(0, 5);\n    const last5ConceededSumAway = last5ConceededAway.reduce((a, b) => a + b, 0);\n    form.last5AvgConceededAway = parseFloat(\n      last5ConceededSumAway / last5ConceededAway.length || 0\n    );\n\n    const last10 = teamGoalsAll.slice(0, 10);\n    const last10Sum = last10.reduce((a, b) => a + b, 0);\n    const last10AvgScored = parseFloat(last10Sum / last10.length || 0);\n\n    const last10Conceeded = teamConceededAll.slice(0, 10);\n    const last10ConceededSum = last10Conceeded.reduce((a, b) => a + b, 0);\n    const last10AvgConceeded = parseFloat(\n      last10ConceededSum / last10Conceeded.length || 0\n    );\n\n    form.last5Goals = parseFloat(last5AvgScored.toFixed(2));\n    form.last5GoalsConceeded = parseFloat(last5AvgConceeded.toFixed(2));\n    form.last5GoalDiff = form.last5Goals - form.last5GoalsConceeded;\n    form.last10Goals = parseFloat(last10AvgScored.toFixed(2));\n    form.last10GoalsConceeded = parseFloat(last10AvgConceeded.toFixed(2));\n    form.last10GoalDiff = form.last10Goals - form.last10GoalsConceeded;\n\n    const teamGoalsAllRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsAll,\n      teamGoalsAll.length < r ? teamGoalsAll.length : r\n    );\n\n    const teamGoalsConceededAllRollingAverage =\n      await predictNextWeightedMovingAverage(\n        last10Conceeded,\n        last10Conceeded.length < 10 ? last10Conceeded.length : 10\n      );\n\n    const sumTwo = teamConceededAll.reduce((a, b) => a + b, 0);\n    const avgConceeded = sumTwo / teamConceededAll.length || 0;\n    form.avgConceeded = parseFloat(avgConceeded.toFixed(2));\n\n    const teamConceededHomeOnlySum = teamConceededHome.reduce(\n      (a, b) => a + b,\n      0\n    );\n    const teamConceededAvgHomeOnly =\n      teamConceededHomeOnlySum / teamConceededHome.length || 0;\n    form.teamConceededAvgHomeOnly = teamConceededAvgHomeOnly;\n\n    const teamConceededAwayOnlySum = teamConceededAway.reduce(\n      (a, b) => a + b,\n      0\n    );\n    const teamConceededAvgAwayOnly =\n      teamConceededAwayOnlySum / teamConceededAway.length || 0;\n    form.teamConceededAvgAwayOnly = teamConceededAvgAwayOnly;\n\n    form.goalDifference = sum - sumTwo;\n\n    // console.log(teamGoalsHomeRollingAverage)\n    // console.log(teamGoalsAwayRollingAverage)\n    // console.log(teamGoalsAllRollingAverage)\n    // console.log(teamConceededHomeRollingAverage)\n    // console.log(teamConceededAwayRollingAverage)\n    // console.log(teamGoalsConceededAllRollingAverage)\n    // console.log(averageOddsHome)\n    // console.log(averageOddsAway)\n    // console.log(avgScored)\n    // console.log(avgConceeded)\n    // console.log(form.XGPrediction)\n    // console.log(forAndAgainstRollingAvHomeOrAway)\n    // console.log(forAndAgainstRollingAv)\n\n    return [\n      teamGoalsHomeRollingAverage,\n      teamGoalsAwayRollingAverage,\n      teamGoalsAllRollingAverage,\n      teamConceededHomeRollingAverage,\n      teamConceededAwayRollingAverage,\n      teamGoalsConceededAllRollingAverage,\n      averageOddsHome,\n      averageOddsAway,\n      avgScored,\n      avgConceeded,\n      bttsAllString,\n      bttsHomeString,\n      bttsAwayString,\n      bttsAllPercentage,\n      bttsHomePercentage,\n      bttsAwayPercentage,\n      forAndAgainstRollingAvHomeOrAway,\n      forAndAgainstRollingAv,\n    ];\n  } else {\n    console.log(form.teamName);\n    return null;\n  }\n}\n\nasync function predictNextWeightedMovingAverage(numbers, windowSize) {\n  const startIndex = numbers.length - windowSize;\n  const window = numbers.slice(startIndex);\n  const weights = Array.from(\n    { length: windowSize },\n    (_, i) => (i + 1) / ((windowSize * (windowSize + 1)) / 2)\n  );\n  const sum = window.reduce((acc, num, i) => acc + num * weights[i], 0);\n  const movingAverage = sum / weights.reduce((acc, w) => acc + w, 0);\n  return parseFloat(movingAverage.toFixed(2));\n}\n\n// Function to calculate the weighted average using exponential smoothing\nasync function calculateWeightedAverage(arr, alpha) {\n  let weightedSum = 0;\n  let totalWeight = 0;\n\n  for (let i = arr.length - 1; i >= 0; i--) {\n    const weight = Math.pow(1 - alpha, arr.length - 1 - i);\n    weightedSum += arr[i] * weight;\n    totalWeight += weight;\n  }\n\n  return weightedSum / totalWeight;\n}\n\n// Function to predict goals scored and conceded for a team with exponential smoothing\nasync function predictGoalsWithExponentialSmoothing(\n  teamGoalsFor,\n  teamGoalsAgainst,\n  alpha\n) {\n  const lambdaFor = await calculateWeightedAverage(teamGoalsFor, alpha);\n  const lambdaAgainst = await calculateWeightedAverage(teamGoalsAgainst, alpha);\n\n  // You can fine-tune these values based on your model and data\n  const predictedGoalsFor = lambdaFor;\n  const predictedGoalsAgainst = lambdaAgainst;\n\n  return {\n    goalsFor: predictedGoalsFor,\n    goalsAgainst: predictedGoalsAgainst,\n  };\n}\n\nasync function calculateDifference(num1, num2) {\n  return num1 >= num2 ? num1 - num2 : -(num2 - num1);\n}\n\nexport async function comparison(metricOne, metricTwo) {\n  let stat1 = parseFloat(metricOne);\n  let stat2 = parseFloat(metricTwo);\n  let statDiff;\n\n  statDiff = await calculateDifference(stat1, stat2);\n\n  return parseFloat(statDiff);\n}\n\nexport async function compareStat(statOne, statTwo) {\n  let stat1 = parseFloat(statOne);\n  let stat2 = parseFloat(statTwo);\n  let statDiff;\n  // console.log( await normalizeValues(12, 2, 0, 1))\n  // console.log(await diff(1.8571428571428571, 1.14285714285714285))\n\n  if (stat1 === 0) {\n    stat1 = stat1 + 1;\n    stat2 = stat2 + 1;\n  }\n  if (stat2 === 0) {\n    stat2 = stat2 + 1;\n    stat2 = stat2 + 1;\n  }\n\n  const { normalizedValue1, normalizedValue2 } = await normalizeValues(\n    stat1,\n    stat2,\n    0,\n    1\n  );\n\n  const finalValue1 = normalizedValue1;\n  const finalValue2 = normalizedValue2;\n\n  statDiff = await diff(finalValue1, finalValue2);\n\n  // if (statDiff > 0.3 || statDiff < -0.3) {\n  //   // console.log(statDiff)\n  // } else {\n  //   statDiff = 0;\n  // }\n  return statDiff;\n}\n\nexport async function getClinicalRating(form) {\n  let rating;\n  let score;\n  switch (true) {\n    case form.dangerousAttackConversion <= 15:\n      rating = \"excellent\";\n      score = 0.8;\n      break;\n\n    case form.dangerousAttackConversion > 15 &&\n      form.dangerousAttackConversion <= 20:\n      rating = \"great\";\n      score = 0.9;\n      break;\n\n    case form.dangerousAttackConversion > 20 &&\n      form.dangerousAttackConversion <= 25:\n      rating = \"very good\";\n      score = 0.95;\n      break;\n\n    case form.dangerousAttackConversion > 25 &&\n      form.dangerousAttackConversion <= 32.5:\n      rating = \"good\";\n      score = 0.98;\n      break;\n\n    case form.dangerousAttackConversion > 30 &&\n      form.dangerousAttackConversion <= 35:\n      rating = \"above average\";\n      score = 0.99;\n      break;\n\n    case form.dangerousAttackConversion > 35 &&\n      form.dangerousAttackConversion <= 40:\n      rating = \"average\";\n      score = 1;\n      break;\n\n    case form.dangerousAttackConversion > 40 &&\n      form.dangerousAttackConversion <= 45:\n      rating = \"below average\";\n      score = 1.01;\n      break;\n\n    case form.dangerousAttackConversion > 45 &&\n      form.dangerousAttackConversion <= 50:\n      rating = \"poor\";\n      score = 1.05;\n      break;\n\n    case form.dangerousAttackConversion > 50 &&\n      form.dangerousAttackConversion <= 55:\n      rating = \"very poor\";\n      score = 1.1;\n      break;\n\n    case form.dangerousAttackConversion > 55 &&\n      form.dangerousAttackConversion <= 60:\n      rating = \"terrible\";\n      score = 1.2;\n      break;\n\n    case form.dangerousAttackConversion > 60:\n      rating = \"awful\";\n      score = 1.3;\n      break;\n\n    default:\n      break;\n  }\n\n  return [rating, score];\n}\n\nexport async function getPointsDifferential(pointsHomeAvg, pointsAwayAvg) {\n  const differential = await diff(pointsHomeAvg, pointsAwayAvg);\n  return parseFloat(differential);\n}\n\nexport async function getPointWeighting(pointsDiff) {\n  let pointsDiffWeightingHome;\n  let pointsDiffWeightingAway;\n\n  switch (true) {\n    case pointsDiff >= 2.5:\n      pointsDiffWeightingHome = 0.3;\n      pointsDiffWeightingAway = -0.3;\n      break;\n    case pointsDiff >= 2 && pointsDiff < 2.5:\n      pointsDiffWeightingHome = 0.2;\n      pointsDiffWeightingAway = -0.2;\n      break;\n    case pointsDiff >= 1.5 && pointsDiff < 2:\n      pointsDiffWeightingHome = 0.15;\n      pointsDiffWeightingAway = -0.15;\n      break;\n    case pointsDiff >= 1 && pointsDiff < 1.5:\n      pointsDiffWeightingHome = 0.1;\n      pointsDiffWeightingAway = -0.1;\n      break;\n    case pointsDiff >= 0.5 && pointsDiff < 1:\n      pointsDiffWeightingHome = 0.05;\n      pointsDiffWeightingAway = -0.05;\n      break;\n    case pointsDiff > -0.5 && pointsDiff < 0.5:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n      break;\n    case pointsDiff <= -0.5 && pointsDiff > -1:\n      pointsDiffWeightingHome = -0.05;\n      pointsDiffWeightingAway = 0.05;\n      break;\n    case pointsDiff <= -1 && pointsDiff > -1.5:\n      pointsDiffWeightingHome = -0.1;\n      pointsDiffWeightingAway = 0.1;\n      break;\n    case pointsDiff <= -1.5 && pointsDiff > -2:\n      pointsDiffWeightingHome = -0.15;\n      pointsDiffWeightingAway = 0.15;\n      break;\n    case pointsDiff <= -2 && pointsDiff > -2.5:\n      pointsDiffWeightingHome = -0.2;\n      pointsDiffWeightingAway = 0.2;\n      break;\n    case pointsDiff <= -2.5:\n      pointsDiffWeightingHome = -0.3;\n      pointsDiffWeightingAway = 0.3;\n      break;\n    default:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n  }\n  return [pointsDiffWeightingHome, pointsDiffWeightingAway];\n}\n\nexport async function compareFormTrend(recentForm, distantForm) {\n  let score;\n  let scoreTotal = 0;\n\n  for (let index = 0; index < recentForm.length; index++) {\n    const recent = recentForm[index];\n    const distant = distantForm[index];\n\n    if (recent > distant) {\n      score = 1.05;\n    } else if (recent === distant) {\n      score = 1;\n    } else if (recent < distant) {\n      score = 0.95;\n    }\n    scoreTotal = scoreTotal + score / recentForm.length;\n  }\n\n  return scoreTotal;\n}\n\nexport async function getPointAverage(pointTotal, games) {\n  return pointTotal / games;\n}\n\nasync function poissonDistribution(lambda, k) {\n  const numerator = Math.exp(-lambda) * Math.pow(lambda, k);\n  const denominator = factorial(k);\n  return numerator / denominator;\n}\n\nfunction factorial(n) {\n  if (n === 0 || n === 1) {\n    return 1;\n  }\n  let result = 1;\n  for (let i = 2; i <= n; i++) {\n    result *= i;\n  }\n  return result;\n}\n\nasync function calculateAverageGoals(goalsFor) {\n  const totalGoals = goalsFor.reduce((sum, goals) => sum + goals, 0);\n  return totalGoals / goalsFor.length;\n}\n\nasync function adjustGoalsAvg(goalsAvg, strengthRatio) {\n  return goalsAvg * strengthRatio;\n}\n\nasync function normalizeDifference(value1, value2) {\n  // Calculate the absolute difference between the two values\n  const difference = Math.abs(value1 - value2);\n\n  // Define a fixed maximum possible difference (you can adjust this value based on your needs)\n  const maxDifference = 25; // Adjust this based on your expected data\n\n  // Normalize the difference to a 0-1 range\n  const normalizedDifference = difference / maxDifference;\n\n  // Map to range 0.25 to 1.75 inversely for value1 and value2\n  const scaleMin = 0.8;\n  const scaleMax = 1.2;\n\n  // The multiplier now stretches across the 0.25 to 1.75 range (difference is 1.5)\n  const multiplier = 0.2;\n\n  let value1Normalized, value2Normalized;\n\n  if (value1 > value2) {\n    value1Normalized = 1 + normalizedDifference * multiplier; // Closer to 1.75\n    value2Normalized = 1 - normalizedDifference * multiplier; // Closer to 0.25\n  } else if (value1 < value2) {\n    value1Normalized = 1 - normalizedDifference * multiplier; // Closer to 0.25\n    value2Normalized = 1 + normalizedDifference * multiplier; // Closer to 1.75\n  } else {\n    // If the values are equal, normalize both to 1\n    value1Normalized = 1;\n    value2Normalized = 1;\n  }\n\n  return {\n    value1Normalized: Math.max(scaleMin, Math.min(value1Normalized, scaleMax)),\n    value2Normalized: Math.max(scaleMin, Math.min(value2Normalized, scaleMax)),\n  };\n}\n\nasync function predictScore(\n  goalsForTeam1,\n  goalsAgainstTeam1,\n  goalsForTeam2,\n  goalsAgainstTeam2,\n  team1Metrics,\n  team2Metrics,\n  game\n) {\n  let team1AverageGoalsFor = await calculateAverageGoals(goalsForTeam1);\n  let team1AverageGoalsAgainst = await calculateAverageGoals(goalsAgainstTeam1);\n  let team2AverageGoalsFor = await calculateAverageGoals(goalsForTeam2);\n  let team2AverageGoalsAgainst = await calculateAverageGoals(goalsAgainstTeam2);\n\n  let team1StrengthRatio = 1;\n  let team2StrengthRatio = 1;\n\n  let adjustedTeam1AverageGoals = await adjustGoalsAvg(\n    team1AverageGoalsFor,\n    team1StrengthRatio\n  );\n  let adjustedTeam2AverageGoals = await adjustGoalsAvg(\n    team2AverageGoalsFor,\n    team2StrengthRatio\n  );\n\n  let adjustedTeam1AverageGoalsAgainst = await adjustGoalsAvg(\n    team1AverageGoalsAgainst,\n    team2StrengthRatio\n  );\n  let adjustedTeam2AverageGoalsAgainst = await adjustGoalsAvg(\n    team2AverageGoalsAgainst,\n    team1StrengthRatio\n  );\n\n  let maxGoals = 5; // Set the maximum number of goals to predict\n\n  const scores = [];\n\n  for (let i = 0; i <= maxGoals; i++) {\n    for (let j = 0; j <= maxGoals; j++) {\n      let team1GoalExpectation =\n        (adjustedTeam1AverageGoals + adjustedTeam2AverageGoalsAgainst) / 2;\n      // (adjustedTeam2AverageGoalsAgainst / adjustedTeam1AverageGoalsAgainst);\n      let team2GoalExpectation =\n        (adjustedTeam2AverageGoals + adjustedTeam1AverageGoalsAgainst) / 2;\n      // (adjustedTeam1AverageGoalsAgainst / adjustedTeam2AverageGoalsAgainst);\n\n      if (!isFinite(team1GoalExpectation)) {\n        team1GoalExpectation = 0;\n      }\n\n      if (!isFinite(team2GoalExpectation)) {\n        team2GoalExpectation = 0;\n      }\n\n      const probability =\n        (await poissonDistribution(team1GoalExpectation, i)) *\n        (await poissonDistribution(team2GoalExpectation, j));\n      scores.push({\n        team1Score: i,\n        team2Score: j,\n        probability,\n      });\n    }\n  }\n\n  scores.sort((a, b) => b.probability - a.probability); // Sort scores in descending order by probability\n  const top5Scores = scores.slice(0, 5); // Get the top 5 scores\n\n  // for (const score of top5Scores) {\n  //   console.log(\n  //     `Team 1: ${score.team1Score} - Team 2: ${score.team2Score} (${(\n  //       score.probability * 100\n  //     ).toFixed(2)}%)`\n  //   );\n  // }\n  return top5Scores;\n}\n\nasync function normalizeValues(value1, value2, minRange, maxRange) {\n  if (\n    typeof value1 !== \"number\" ||\n    typeof value2 !== \"number\" ||\n    typeof minRange !== \"number\" ||\n    typeof maxRange !== \"number\"\n  ) {\n    throw new Error(\"All arguments must be numbers.\");\n  }\n\n  // Calculate the absolute values of the inputs\n\n  const absValue1 = Math.abs(value1);\n  const absValue2 = Math.abs(value2);\n\n  // Calculate the total sum of the absolute values\n  const totalAbs = absValue1 + absValue2;\n\n  // Calculate the normalized values based on the ratio of absolute values\n  const normalizedAbsValue1 =\n    (absValue1 / totalAbs) * (maxRange - minRange) + minRange;\n  const normalizedAbsValue2 =\n    (absValue2 / totalAbs) * (maxRange - minRange) + minRange;\n\n  // Adjust the signs of the normalized values based on the original values\n  const normalizedValue1 =\n    value1 >= 0 ? normalizedAbsValue1 : -normalizedAbsValue1;\n  const normalizedValue2 =\n    value2 >= 0 ? normalizedAbsValue2 : -normalizedAbsValue2;\n\n  return { normalizedValue1, normalizedValue2 };\n}\n\nasync function findClosestProperty(obj, number) {\n  let closestProperty = null;\n  let smallestDifference = Infinity;\n\n  for (const [key, value] of Object.entries(obj)) {\n    const difference = Math.abs(number - value);\n    if (difference < smallestDifference) {\n      smallestDifference = difference;\n      closestProperty = key;\n    }\n  }\n\n  return closestProperty;\n}\n\nexport async function generateGoals(homeForm, awayForm, match) {\n  let homeGoals = 0;\n  let awayGoals = 0;\n\n  const homeAttackVsAwayDefenceComparison = await comparison(\n    homeForm.attackingStrength,\n    awayForm.defensiveStrengthScoreGeneration\n  );\n  const awayAttackVsHomeDefenceComparison = await comparison(\n    awayForm.attackingStrength,\n    homeForm.defensiveStrengthScoreGeneration\n  );\n\n  const homeOverallVsAwayOverallComparison = await comparison(\n    homeForm.attackingStrength + homeForm.defensiveStrength,\n    awayForm.attackingStrength + awayForm.defensiveStrength\n  );\n\n  const awayOverallVsHomeOverallComparison = await comparison(\n    awayForm.attackingStrength + awayForm.defensiveStrength,\n    homeForm.attackingStrength + homeForm.defensiveStrength\n  );\n\n  const homeAttackVsAwayDefenceComparisonLast5 = await comparison(\n    homeForm.attackingStrengthLast5,\n    awayForm.defensiveStrengthScoreGenerationLast5\n  );\n  const awayAttackVsHomeDefenceComparisonLast5 = await comparison(\n    awayForm.attackingStrengthLast5,\n    homeForm.defensiveStrengthScoreGenerationLast5\n  );\n\n  const homeAttackVsAwayDefenceComparisonHomeOnly = await comparison(\n    homeForm.attackingStrengthHomeOnly,\n    awayForm.defensiveStrengthScoreGenerationAwayOnly\n  );\n  const awayAttackVsHomeDefenceComparisonAwayOnly = await comparison(\n    awayForm.attackingStrengthAwayOnly,\n    homeForm.defensiveStrengthScoreGenerationHomeOnly\n  );\n\n  const pointsComparisonHome = await comparison(\n    homeForm.avPoints6,\n    awayForm.avPoints6\n  );\n\n  const pointsComparisonAway = await comparison(\n    awayForm.avPoints6,\n    homeForm.avPoints6\n  );\n\n  const oddsComparisonHome = await comparison(match.awayOdds, match.homeOdds);\n  const oddsComparisonAway = await comparison(match.homeOdds, match.awayOdds);\n\n  homeForm.XGRating =\n    homeForm.attackingStrength +\n    homeForm.defensiveStrengthScoreGeneration +\n    homeForm.attackingStrengthLast5 +\n    homeForm.defensiveStrengthScoreGenerationLast5 +\n    homeForm.attackingStrengthHomeOnly +\n    homeForm.defensiveStrengthScoreGenerationHomeOnly;\n\n  awayForm.XGRating =\n    awayForm.attackingStrength +\n    awayForm.defensiveStrengthScoreGeneration +\n    awayForm.attackingStrengthLast5 +\n    awayForm.defensiveStrengthScoreGenerationLast5 +\n    awayForm.attackingStrengthAwayOnly +\n    awayForm.defensiveStrengthScoreGenerationAwayOnly;\n\n  const XGRatingHomeComparison = await comparison(\n    homeForm.XGRating,\n    awayForm.XGRating\n  );\n\n  const XGRatingAwayComparison = await comparison(\n    awayForm.XGRating,\n    homeForm.XGRating\n  );\n\n  const weighedPointsComparisonHome = await comparison(\n    homeForm.pointsWeighted,\n    homeForm.points\n  );\n\n  const weighedPointsComparisonAway = await comparison(\n    awayForm.pointsWeighted,\n    awayForm.points\n  );\n\n  homeGoals =\n    0 +\n    homeAttackVsAwayDefenceComparison * 5 +\n    XGRatingHomeComparison * 0 +\n    homeAttackVsAwayDefenceComparisonLast5 * 2 +\n    homeAttackVsAwayDefenceComparisonHomeOnly * 2 +\n    // weighedPointsComparisonHome * 0.1 +\n    oddsComparisonHome * 0;\n\n  awayGoals =\n    0 +\n    awayAttackVsHomeDefenceComparison * 5 +\n    XGRatingAwayComparison * 0 +\n    awayAttackVsHomeDefenceComparisonLast5 * 2 +\n    awayAttackVsHomeDefenceComparisonAwayOnly * 2 +\n    // weighedPointsComparisonAway * 0.1 +\n    oddsComparisonAway * 0;\n\n  // if (homeForm.actualToXGDifference > 0.5) {\n  //   homeGoals = homeGoals + homeForm.actualToXGDifference / 10;\n  // } else if (homeForm.actualToXGDifference < -0.5) {\n  //   homeGoals = homeGoals + homeForm.actualToXGDifference / 10;\n  // }\n\n  if (awayForm.actualToXGDifference > 0.5) {\n    awayGoals = awayGoals + awayForm.actualToXGDifference / 10;\n  } else if (awayForm.actualToXGDifference < -0.5) {\n    awayGoals = awayGoals + awayForm.actualToXGDifference / 10;\n  }\n\n  // if (homeForm.lastGame === \"L\" && homeForm.previousToLastGame === \"L\") {\n  //   homeGoals = homeGoals * 0.5;\n  // } else if (awayForm.lastGame === \"L\" && awayForm.previousToLastGame === \"L\") {\n  //   awayGoals = awayGoals * 0.5;\n  // } else if (homeForm.lastGame === \"L\") {\n  //   homeGoals = homeGoals * 0.8;\n  // } else if (awayForm.lastGame === \"L\") {\n  //   awayGoals = awayGoals * 0.8;\n  // }\n\n  if (homeForm.improving === true && awayForm.improving === false) {\n    homeGoals = homeGoals * 1.25;\n    awayGoals = awayGoals * 0.75;\n  } else if (homeForm.improving === false && awayForm.improving === true) {\n    homeGoals = homeGoals * 0.75;\n    awayGoals = awayGoals * 1.25;\n  }\n\n  // const homeRecordAgainstSimilarStyles = await findClosestProperty(homeForm.recordAgainstIndividualStylesHome, awayForm.directnessRatingAway); // Outputs: \"totalL\"\n  // const awayRecordAgainstSimilarStyles = await findClosestProperty(awayForm.recordAgainstIndividualStylesAway, homeForm.directnessRating); // Outputs: \"totalL\"\n\n  // if(homeRecordAgainstSimilarStyles === \"totalW\" && awayRecordAgainstSimilarStyles === \"totalL\"){\n  //   homeGoals = homeGoals * 1.5;\n  //   awayGoals = awayGoals * 0.5;\n  // } else if(homeRecordAgainstSimilarStyles === \"totalL\" && awayRecordAgainstSimilarStyles === \"totalW\"){\n  //   homeGoals = homeGoals * 0.5;\n  //   awayGoals = awayGoals * 1.5;\n  // }\n\n  // console.log(match.game)\n  // console.log(homeRecordAgainstSimilarStyles)\n  // console.log(awayRecordAgainstSimilarStyles)\n  // if(homeForm.last5Points > homeForm.last10Points){\n  //   homeGoals = homeGoals + 0.1;\n  //   awayGoals = awayGoals - 0.1;\n\n  // } else if (awayForm.last5Points > awayForm.last10Points){\n  //   awayGoals = awayGoals + 0.1;\n  //   homeGoals = homeGoals - 0.1;\n  // }\n\n  // Cumalative ROI for all 2193 match outcomes: + 4.18%\n\n  // if (homeGoals < 0 && awayGoals < 0) {\n  //   if (homeGoals < awayGoals) {\n  //     homeGoals = homeGoals + awayGoals / 5;\n  //     awayGoals = awayGoals - homeGoals / 5;\n  //   } else if (homeGoals > awayGoals) {\n  //     homeGoals = homeGoals - awayGoals / 5;\n  //     awayGoals = awayGoals + homeGoals / 5;\n  //   }\n  // } else if (homeGoals < 0) {\n  //   awayGoals = awayGoals + Math.abs(homeGoals) / 2;\n  // } else if (awayGoals < 0) {\n  //   homeGoals = homeGoals + Math.abs(awayGoals) / 2;\n  // }\n\n  return [homeGoals, awayGoals];\n}\n\nexport async function compareTeams(homeForm, awayForm, match) {\n  // let homeAttackStrength = homeForm.attackingStrength;\n  // let homeDefenceStrength = homeForm.defensiveStrength;\n  // let homePossessionStrength = homeForm.possessionStrength;\n  // let awayAttackStrength = awayForm.attackingStrength;\n  // let awayDefenceStrength = awayForm.defensiveStrength;\n  // let awayPossessionStrength = awayForm.possessionStrength;\n  // let homeAttackStrengthLast5 = homeForm.attackingStrengthLast5;\n  // let homeDefenceStrengthLast5 = homeForm.defensiveStrengthLast5;\n  // let homePossessionStrengthLast5 = homeForm.possessionStrengthLast5;\n  // let awayAttackStrengthLast5 = awayForm.attackingStrengthLast5;\n  // let awayDefenceStrengthLast5 = awayForm.defensiveStrengthLast5;\n  // let awayPossessionStrengthLast5 = awayForm.possessionStrengthLast5;\n  // let homeAttackStrengthHome = homeForm.attackingStrengthHomeOnly;\n  // let homeDefenceStrengthHome = homeForm.defensiveStrengthHomeOnly;\n  // let homePossessionStrengthHome = homeForm.possessionStrengthHomeOnly;\n  // let awayAttackStrengthAway = awayForm.attackingStrengthAwayOnly;\n  // let awayDefenceStrengthAway = awayForm.defensiveStrengthAwayOnly;\n  // let awayPossessionStrengthAway = awayForm.possessionStrengthAwayOnly;\n  // const attackStrengthComparison = await compareStat(\n  //   homeAttackStrength,\n  //   awayAttackStrength\n  // );\n  // const attackStrengthHAComparison = await compareStat(\n  //   homeAttackStrengthHome,\n  //   awayAttackStrengthAway\n  // );\n  // const defenceStrengthComparison = await compareStat(\n  //   homeDefenceStrength,\n  //   awayDefenceStrength\n  // );\n  // const defenceStrengthHAComparison = await compareStat(\n  //   homeDefenceStrengthHome,\n  //   awayDefenceStrengthAway\n  // );\n  // const attackStrengthComparisonLast5 = await compareStat(\n  //   homeAttackStrengthLast5,\n  //   awayAttackStrengthLast5\n  // );\n  // const defenceStrengthComparisonLast5 = await compareStat(\n  //   homeDefenceStrengthLast5,\n  //   awayDefenceStrengthLast5\n  // );\n  // const possessiontrengthComparison = await compareStat(\n  //   homePossessionStrength,\n  //   awayPossessionStrength\n  // );\n  // const possessiontrengthComparisonLast5 = await compareStat(\n  //   homePossessionStrengthLast5,\n  //   awayPossessionStrengthLast5\n  // );\n  // const possessionHAStrengthComparison = await compareStat(\n  //   homePossessionStrengthHome,\n  //   awayPossessionStrengthAway\n  // );\n  // // const xgActualComparison = await compareStat(\n  // //   homeForm.actualToXGDifference,\n  // //   awayForm.actualToXGDifference\n  // // );\n  // // const XGComparison = await compareStat(\n  // //   homeForm.XGDiffNonAverage,\n  // //   awayForm.XGDiffNonAverage\n  // // );\n  // // const XGComparisonLast5 = await compareStat(\n  // //   homeForm.XGDiffNonAverageLast5,\n  // //   awayForm.XGDiffNonAverageLast5\n  // // )\n  // const homeAwayPointAverageComparison = await compareStat(\n  //   homeForm.homeOrAwayAverage,\n  //   awayForm.homeOrAwayAverage\n  // );\n  // // const fiveGameComparison = await compareStat(\n  // //   homeForm.last5Points,\n  // //   awayForm.last5Points\n  // // );\n  // // const last5GDComparison = await compareStat(\n  // //   homeForm.last5GoalDiff,\n  // //   awayForm.last5GoalDiff\n  // // )\n  // let oddsComparison = await compareStat(match.awayOdds, match.homeOdds);\n  // // const homeAdvantage = await compareStat(\n  // //   parseFloat(homeForm.homeAttackAdvantage) / 2,\n  // //   1\n  // // );\n  // // const dangerousAttacksWithConverstionComparison = await compareStat(\n  // //   homeForm.AverageDangerousAttacksOverall *\n  // //     homeForm.dangerousAttackConversion,\n  // //   awayForm.AverageDangerousAttacksOverall * awayForm.dangerousAttackConversion\n  // // );\n  // match.goalDiffHomeOrAwayComparison =\n  //   parseFloat(homeForm.goalDifferenceHomeOrAway) -\n  //   parseFloat(awayForm.goalDifferenceHomeOrAway);\n  // match.goalDifferenceComparison =\n  //   parseFloat(homeForm.goalDifference) - parseFloat(awayForm.goalDifference);\n  // const goalDiffHomeOrAwayComparison = await compareStat(\n  //   homeForm.goalDifferenceHomeOrAway,\n  //   awayForm.goalDifferenceHomeOrAway\n  // );\n  // const overallDirectnessComparison = await compareStat(\n  //   homeForm.directnessOverallStrength,\n  //   awayForm.directnessOverallStrength\n  // );\n  // // const hOrADirectnessComparison = await compareStat(\n  // //   homeForm.directnessHomeOnly,\n  // //   awayForm.directnessAwayOnly\n  // // );\n  // const accuracyComparison = await compareStat(\n  //   homeForm.accuracyOverallStrength,\n  //   awayForm.accuracyOverallStrength\n  // );\n  // const accuracyComparisonLast5 = await compareStat(\n  //   homeForm.accuracyOverallStrengthLast5,\n  //   awayForm.accuracyOverallStrengthLast5\n  // );\n  // // console.log(match.game)\n  // // console.log(attackStrengthComparison);\n  // // console.log(defenceStrengthComparison);\n  // // console.log(possessiontrengthComparison);\n  // // console.log(attackStrengthComparisonLast5);\n  // // console.log(defenceStrengthComparisonLast5);\n  // // console.log(attackStrengthHAComparison);\n  // // console.log(defenceStrengthHAComparison);\n  // // console.log(homeAwayPointAverageComparison);\n  // // console.log(goalDiffHomeOrAwayComparison);\n  // // // console.log(oddsComparison);\n  // // console.log(overallDirectnessComparison);\n  // // console.log(accuracyComparisonLast5);\n  // // console.log(accuracyComparison);\n  // // let calculation =\n  // //   attackStrengthComparison * 0 +\n  // //   attackStrengthComparisonLast5 * 0 +\n  // //   attackStrengthHAComparison * 1 +\n  // //   defenceStrengthComparison * 0 +\n  // //   defenceStrengthComparisonLast5 * 0 +\n  // //   defenceStrengthHAComparison * 1 +\n  // //   possessiontrengthComparison * 0 +\n  // //   possessionHAStrengthComparison * 0 +\n  // //   possessiontrengthComparisonLast5 * 1 +\n  // //   // xgToActualDiffComparison * 1 +\n  // //   // xgForStrengthRecentComparison * 1 +\n  // //   // xgAgainstStrengthRecentComparison * 1 +\n  // //   homeAwayPointAverageComparison * 5 +\n  // //   goalDiffHomeOrAwayComparison * 0 +\n  // //   // xgActualComparison * 0 +\n  // //   // xgForComparison * 1 +\n  // //   // xgAgainstComparison * 1 +\n  // //   // XGComparison * 0 +\n  // //   oddsComparison * 2 +\n  // //   // dangerousAttacksWithConverstionComparison * 0.05 +\n  // //   overallDirectnessComparison * 0 +\n  // //   // hOrADirectnessComparison * 0 +\n  // //   accuracyComparisonLast5 * 0 +\n  // //   accuracyComparison * 0;\n  // // // console.log(match.game)\n  // // // console.log(calculation)\n  // let calculation =\n  //   attackStrengthComparisonLast5 * 2 +\n  //   attackStrengthHAComparison * 1 +\n  //   defenceStrengthComparisonLast5 * 2 +\n  //   defenceStrengthHAComparison * 1 +\n  //   possessionHAStrengthComparison * 1 +\n  //   possessiontrengthComparisonLast5 * 1 +\n  //   possessiontrengthComparison * 1 +\n  //   // xgToActualDiffComparison * 1 +\n  //   // xgForStrengthRecentComparison * 1 +\n  //   // xgAgainstStrengthRecentComparison * 1 +\n  //   homeAwayPointAverageComparison * 2 +\n  //   goalDiffHomeOrAwayComparison * 0 +\n  //   // xgActualComparison * 1 +\n  //   // xgForComparison * 1 +\n  //   // xgAgainstComparison * 1 +\n  //   oddsComparison * 0 +\n  //   // dangerousAttacksWithConverstionComparison * 0.05 +\n  //   overallDirectnessComparison * 0 +\n  //   accuracyComparison * 1;\n  // let homeWinOutcomeProbability =\n  //   match.homeTeamWinPercentage + match.awayTeamLossPercentage;\n  // let awayWinOutcomeProbability =\n  //   match.homeTeamLossPercentage + match.awayTeamWinPercentage;\n  // let drawOutcomeProbability =\n  //   match.homeTeamDrawPercentage + match.awayTeamDrawPercentage;\n  // if (\n  //   drawOutcomeProbability > homeWinOutcomeProbability &&\n  //   drawOutcomeProbability > awayWinOutcomeProbability\n  // ) {\n  //   switch (true) {\n  //     case drawOutcomeProbability > 100:\n  //       calculation = calculation / 3;\n  //       break;\n  //     default:\n  //       calculation = calculation * 1;\n  //       break;\n  //   }\n  // } else {\n  //   calculation = calculation * 1;\n  // }\n  // if (calculation > 0) {\n  //   if (\n  //     homeForm.lastGame === \"L\" ||\n  //     homeForm.last2Points < 2 ||\n  //     awayForm.last2Points >= 5 ||\n  //     match.XGdifferentialValueRaw < 0\n  //   ) {\n  //     calculation = calculation / 2;\n  //   }\n  // } else if (calculation < 0) {\n  //   if (\n  //     awayForm.lastGame === \"L\" ||\n  //     awayForm.last2Points < 2 ||\n  //     homeForm.last2Points >= 5 ||\n  //     match.XGdifferentialValueRaw > 0\n  //   ) {\n  //     calculation = calculation / 2;\n  //   }\n  // }\n  // // if (homeForm.averageOddsHome !== null || awayForm.averageOddsAway !== null) {\n  // //   if (\n  // //     calculation > 0 &&\n  // //     homeForm.averageOddsHome < match.homeOdds &&\n  // //     awayForm.averageOddsAway > match.awayOdds\n  // //   ) {\n  // //     calculation = calculation / 2;\n  // //   } else if (\n  // //     calculation > 0 &&\n  // //     homeForm.averageOddsHome > match.homeOdds &&\n  // //     awayForm.averageOddsAway < match.awayOdds\n  // //   ) {\n  // //     calculation = calculation * 1.25;\n  // //   } else {\n  // //     calculation = calculation * 1;\n  // //   }\n  // //   if (\n  // //     calculation < 0 &&\n  // //     awayForm.averageOddsAway < match.awayOdds &&\n  // //     homeForm.averageOddsHome > match.homeOdds\n  // //   ) {\n  // //     calculation = calculation / 2;\n  // //   } else if (\n  // //     calculation < 0 &&\n  // //     awayForm.averageOddsAway > match.awayOdds &&\n  // //     homeForm.averageOddsHome < match.homeOdds\n  // //   ) {\n  // //     calculation = calculation * 1.25;\n  // //   } else {\n  // //     calculation = calculation * 1;\n  // //   }\n  // // }\n  // if (\n  //   calculation > 0 &&\n  //   homeForm.improving === true &&\n  //   awayForm.improving === false\n  // ) {\n  //   console.log(homeForm);\n  //   calculation = calculation * 1.5;\n  // } else if (\n  //   calculation < 0 &&\n  //   awayForm.improving === true &&\n  //   awayForm.improving === false\n  // ) {\n  //   calculation = calculation * 1.5;\n  // } else if (\n  //   calculation > 0 &&\n  //   homeForm.improving === false &&\n  //   awayForm.improving === true\n  // ) {\n  //   calculation = calculation / 2;\n  // } else if (\n  //   calculation < 0 &&\n  //   awayForm.improving === false &&\n  //   homeForm.improving === true\n  // ) {\n  //   calculation = calculation / 2;\n  // }\n  // // if (\n  // //   (calculation < 0 && homeForm.oddsReliabilityWin < 50) ||\n  // //   (calculation < 0 && awayForm.oddsReliabilityWinAsUnderdog > 45)\n  // // ) {\n  // //   calculation = calculation / 2;\n  // // } else if (\n  // //   (calculation > 0 && awayForm.oddsReliabilityWin < 50) ||\n  // //   (calculation > 0 && homeForm.oddsReliabilityWinAsUnderdog > 45)\n  // // ) {\n  // //   calculation = calculation / 2;\n  // // }\n  // // if (calculation < 0 && homeForm.predictabilityScore < 0.3) {\n  // //   calculation = calculation / 2;\n  // // } else if (calculation > 0 && awayForm.predictabilityScore < 0.3) {\n  // //   calculation = calculation / 2;\n  // // }\n  // return calculation;\n}\n\nasync function calculatePlayingStyle(points, possession) {\n  let style;\n\n  switch (true) {\n    case possession > 60:\n      switch (true) {\n        case points > 12:\n          style = \"Extremely controlling and patient\";\n          break;\n        case points > 9.5:\n          style = \"Highly controlling, slow and patient\";\n          break;\n        case points > 8.5:\n          style = \"Balanced and controlling possession\";\n          break;\n        case points > 6:\n          style = \"Attacking and controlling possession\";\n          break;\n        case points > 3:\n          style = \"Extremely attacking control approach\";\n          break;\n        default:\n          style = \"N/A\";\n          break;\n      }\n      break;\n\n    case possession > 50:\n      switch (true) {\n        case points > 12:\n          style = \"Passive, inefficient possession play\";\n          break;\n        case points > 9:\n          style = \"Patient, possession-based approach\";\n          break;\n        case points > 8:\n          style = \"Balanced with some possession focus\";\n          break;\n        case points > 5:\n          style = \"Direct control, effective possession\";\n          break;\n        case points > 3:\n          style = \"Extremely direct attacking approach\";\n          break;\n        default:\n          style = \"N/A\";\n          break;\n      }\n      break;\n\n    case possession > 40:\n      switch (true) {\n        case points > 12:\n          style = \"Low control with wasteful transitions\";\n          break;\n        case points > 10:\n          style = \"Wasteful transitional countering play\";\n          break;\n        case points > 7.5:\n          style = \"Counter attacking and quick build up\";\n          break;\n        case points > 5:\n          style = \"Direct and precise transitional play\";\n          break;\n        case points > 3:\n          style = \"Extremely effective transition focus\";\n          break;\n        default:\n          style = \"N/A\";\n          break;\n      }\n      break;\n\n    case possession > 20:\n      switch (true) {\n        case points > 13:\n          style = \"Concede possession, highly inefficient\";\n          break;\n        case points > 10:\n          style = \"Defensive with inefficient transitions\";\n          break;\n        case points > 7:\n          style = \"Counter attacking and very direct play\";\n          break;\n        case points > 4:\n          style = \"Extremely counter attacking transitions\";\n          break;\n        case points > 2:\n          style = \"Extremely direct, efficient countering\";\n          break;\n        default:\n          style = \"N/A\";\n          break;\n      }\n      break;\n\n    default:\n      style = \"N/A\";\n      break;\n  }\n\n  return style;\n}\n\nexport async function roundCustom(num, form, otherForm) {\n  let wholeNumber = Math.floor(num);\n  let remainder = num - wholeNumber;\n  let goals;\n\n  // switch (true) {\n  //   case remainder >= 0.9:\n  //     switch (true) {\n  //       default:\n  //         goals = Math.round(num);\n  //         break;\n  //     }\n  //     break;\n  //   case remainder >= 0.8 && remainder < 0.9:\n  //     switch (true) {\n  //       case form.actualToXGDifference >= 0:\n  //         goals = Math.ceil(num);\n  //         break;\n  //       case form.actualToXGDifference < 0:\n  //         goals = Math.floor(num);\n  //         break;\n  //       default:\n  //         goals = Math.round(num);\n  //         break;\n  //     }\n  //     break;\n  //   case remainder >= 0.6 && remainder < 0.8:\n  //     switch (true) {\n  //       case form.actualToXGDifference >= 10:\n  //         goals = Math.ceil(num);\n  //         break;\n  //       case form.actualToXGDifference < 10:\n  //         goals = Math.floor(num);\n  //         break;\n  //       default:\n  //         goals = Math.round(num);\n  //         break;\n  //     }\n  //     break;\n  //   case remainder >= 0.5 && remainder < 0.6:\n  //     switch (true) {\n  //       case form.actualToXGDifference >= 20:\n  //         goals = Math.ceil(num);\n  //         break;\n  //       case form.actualToXGDifference < 20:\n  //         goals = Math.floor(num);\n  //         break;\n  //       default:\n  //         goals = Math.round(num);\n  //         break;\n  //     }\n  //     break;\n  //   default:\n  //     goals = Math.floor(num);\n  //     break;\n  // }\n\n  if (form.improving === true && otherForm.improving === false) {\n    goals = Math.ceil(num);\n  } else {\n    goals = Math.floor(num);\n  }\n\n  return goals;\n}\n\n//Calculates scores based on prior XG figures, weighted by odds\nlet i = 0;\n\nexport async function calculateScore(match, index, divider, calculate) {\n  i++;\n\n  let teams;\n\n  if (\n    calculate === true &&\n    allForm.find(\n      (game) =>\n        game.home.teamName === match.homeTeam &&\n        game.away.teamName === match.awayTeam\n    )\n  ) {\n    teams = [\n      allForm.find((game) => game.home.teamName === match.homeTeam).home,\n      allForm.find((game) => game.away.teamName === match.awayTeam).away,\n    ];\n  } else {\n    calculate = false;\n  }\n\n  let formHome;\n  let formAway;\n\n  if (calculate) {\n    for (let i = 0; i < teams.length; i++) {\n      if (teams[0][index].PlayedHome <= 1 || teams[1][index].PlayedAway <= 1) {\n        index = 2;\n        divider = 10;\n      }\n\n      if (teams[i][index].formRun) {\n        teams[i][index].lastHomeOrAwayPoints = getPointsFromLastX(\n          teams[i][index].formRun\n        );\n\n        teams[i][index].homeOrAwayAverage = await getPointAverage(\n          teams[i][index].lastHomeOrAwayPoints,\n          teams[i][index].formRun.length\n        );\n      }\n\n      teams[i][0].ScoredAverage = teams[i][0].ScoredOverall / 5;\n      teams[i][1].ScoredAverage = teams[i][1].ScoredOverall / 6;\n      teams[i][2].ScoredAverage = teams[i][2].ScoredOverall / 10;\n\n      teams[i][0].ConcededAverage = teams[i][0].ConcededOverall / 5;\n      teams[i][1].ConcededAverage = teams[i][1].ConcededOverall / 6;\n      teams[i][2].ConcededAverage = teams[i][2].ConcededOverall / 10;\n\n      if (teams[i][1].ScoredAverage === 0) {\n        teams[i][1].ScoredAverage = teams[i][index].ScoredOverall / 10;\n        teams[i][1].ScoredOverall = teams[i][2].ScoredOverall / 2;\n      }\n\n      if (teams[i][1].ConcededAverage === 0) {\n        teams[i][1].ConcededAverage = teams[i][index].ConcededOverall / 10;\n        teams[i][1].ConcededOverall = teams[i][2].ConcededOverall / 2;\n      }\n\n      teams[i][index].ScoredAverageShortTerm = teams[i][0].ScoredOverall / 5;\n      teams[i][index].ConcededAverageShortTerm =\n        teams[i][0].ConcededOverall / 5;\n\n      teams[i][index].longTermAverageGoals = teams[i][2].ScoredOverall / 10;\n      teams[i][index].longTermAverageConceeded =\n        teams[i][2].ConcededOverall / 10;\n\n      let recentGoalDiff =\n        teams[i][index].ScoredAverageShortTerm -\n        teams[i][index].ConcededAverageShortTerm;\n      let distantGoalDiff =\n        teams[i][index].longTermAverageGoals -\n        teams[i][index].longTermAverageConceeded;\n\n      let recentDA = teams[i][0].AverageDangerousAttacksOverall;\n      let distantDA = teams[i][2].AverageDangerousAttacksOverall;\n\n      let recentPosession = teams[i][0].AveragePossessionOverall;\n      let distantPosession = teams[i][2].AveragePossessionOverall;\n\n      let recentCleanSheet = teams[i][0].CleanSheetPercentage;\n      let distantCleanSheet = teams[i][2].CleanSheetPercentage;\n\n      let recentFormArray = [\n        recentGoalDiff,\n        recentDA,\n        recentPosession,\n        recentCleanSheet,\n      ];\n      let distantFormArray = [\n        distantGoalDiff,\n        distantDA,\n        distantPosession,\n        distantCleanSheet,\n      ];\n\n      teams[i][index].formTrendScore = await compareFormTrend(\n        recentFormArray,\n        distantFormArray\n      );\n\n      teams[i][index].expectedGoals = parseFloat(teams[i][index].XG);\n\n      teams[i][index].ScoredAverageShortAndLongTerm =\n        (teams[i][index].ScoredOverall / 10 +\n          teams[i][index].ScoredAverageShortTerm) /\n        2;\n\n      teams[i][index].conceededAverageShortAndLongTerm =\n        (teams[i][index].ConcededOverall / 10 +\n          teams[i][index].ConcededAverageShortTerm) /\n        2;\n\n      teams[i][index].longTermGoalDifference =\n        teams[i][2].ScoredAverage - teams[i][2].ConcededAverage;\n\n      teams[i][index].shortTermGoalDifference =\n        teams[i][0].ScoredAverage - teams[i][0].ConcededAverage;\n\n      teams[i][index].XGdifferential = await diff(\n        teams[i][index].XGOverall,\n        teams[i][index].XGAgainstAvgOverall\n      );\n    }\n\n    homeOdds = match.homeOdds;\n    awayOdds = match.awayOdds;\n\n    formHome = teams[0][index];\n    formAway = teams[1][index];\n\n    // if (\n    //   (formHome.XGOverall - formHome.XGAgainstAvgOverall) < (formHome.last5XG - formHome.XGAgainstlast5)\n    // ) {\n    //   formHome.improving = true;\n    // } else {\n    //   formHome.improving = false;\n    // }\n\n    // if (\n    //   (formAway.XGOverall - formAway.XGAgainstAvgOverall) < (formAway.last5XG - formAway.XGAgainstlast5)\n    // ) {\n    //   formAway.improving = true;\n    // } else {\n    //   formAway.improving = false;\n    // }\n\n    let homeTwoGameAvg = formHome.last2Points / 2;\n    let awayTwoGameAvg = formAway.last2Points / 2;\n\n    // let [last10WeightingHome, last10WeightingAway] = await getPointWeighting(\n    //   pointsDiff10\n    // );\n\n    // let [last2WeightingHome, last2WeightingAway] = await getPointWeighting(\n    //   pointsDiff2\n    // );\n\n    formHome.dangerousAttackConversion =\n      (formHome.ScoredAverageShortAndLongTerm /\n        formHome.AverageDangerousAttacksOverall) *\n      100;\n    formAway.dangerousAttackConversion =\n      (formAway.ScoredAverageShortAndLongTerm /\n        formAway.AverageDangerousAttacksOverall) *\n      100;\n\n    [formHome.clinicalRating, formHome.clinicalScore] = await getClinicalRating(\n      formHome\n    );\n    [formAway.clinicalRating, formAway.clinicalScore] = await getClinicalRating(\n      formAway\n    );\n\n    let XGdifferential = await diff(\n      formHome.XGdifferential,\n      formAway.XGdifferential\n    );\n\n    formHome.teamName = match.homeTeam;\n    formAway.teamName = match.awayTeam;\n\n    match.XGdifferentialValue = Math.abs(XGdifferential);\n    match.XGdifferentialValueRaw = parseFloat(XGdifferential);\n    if (\n      allLeagueResultsArrayOfObjects[match.leagueIndex].fixtures.length > 10 &&\n      match.leagueID !== 7956\n    ) {\n      [\n        formHome.predictedGoalsBasedOnHomeAv,\n        formHome.predictedGoalsBasedOnAwayAv,\n        formHome.allTeamGoalsBasedOnAverages,\n        formHome.predictedGoalsConceededBasedOnHomeAv,\n        formHome.predictedGoalsConceededBasedOnAwayAv,\n        formHome.allTeamGoalsConceededBasedOnAverages,\n        formHome.averageOddsHome,\n        formHome.averageOddsAway,\n        formHome.averageScoredLeague,\n        formHome.averageConceededLeague,\n        formHome.last10btts,\n        formHome.last10bttsHome,\n        formHome.last10bttsAway,\n        match.bttsAllPercentageHome,\n        match.bttsPercentageHomeHome,\n        match.bttsPercentageHomeAway,\n        formHome.forAndAgainstRollingAvHomeOrAway,\n        formHome.forAndAgainstRollingAv,\n      ] = await getPastLeagueResults(match.homeTeam, match, \"home\", formHome);\n\n      [\n        formAway.predictedGoalsBasedOnHomeAv,\n        formAway.predictedGoalsBasedOnAwayAv,\n        formAway.allTeamGoalsBasedOnAverages,\n        formAway.predictedGoalsConceededBasedOnHomeAv,\n        formAway.predictedGoalsConceededBasedOnAwayAv,\n        formAway.allTeamGoalsConceededBasedOnAverages,\n        formAway.averageOddsHome,\n        formAway.averageOddsAway,\n        formAway.averageScoredLeague,\n        formAway.averageConceededLeague,\n        formAway.last10btts,\n        formAway.last10bttsHome,\n        formAway.last10bttsAway,\n        match.bttsAllPercentageAway,\n        match.bttsPercentageAwayHome,\n        match.bttsPercentageAwayAway,\n        formAway.forAndAgainstRollingAvHomeOrAway,\n        formAway.forAndAgainstRollingAv,\n      ] = await getPastLeagueResults(match.awayTeam, match, \"away\", formAway);\n    } else {\n      formHome.completeData = false;\n      formHome.predictedGoalsBasedOnHomeAv = formHome.ScoredAverage;\n      formHome.predictedGoalsBasedOnAwayAv = formHome.ConcededAverage;\n      formHome.allTeamGoalsBasedOnAverages = formHome.ScoredAverage;\n      formHome.forAndAgainstRollingAv = {\n        goalsFor: formHome.ScoredAverage,\n        goalsAgainst: formHome.ConcededAverage,\n      };\n      formHome.forAndAgainstRollingAvHomeOrAway = {\n        goalsFor: formHome.ScoredAverage,\n        goalsAgainst: formHome.ConcededAverage,\n      };\n      formHome.predictedGoalsConceededBasedOnHomeAv = formHome.ConcededAverage;\n      formHome.predictedGoalsConceededBasedOnAwayAv = formHome.ConcededAverage;\n      formHome.allTeamGoalsConceededBasedOnAverages = formHome.ConcededAverage;\n      formHome.averageOddsHome = null;\n      formHome.averageOddsAway = null;\n      formHome.averageScoredLeague = null;\n      formHome.averageConceededLeague = null;\n      formHome.goalDifference =\n        formHome.ScoredOverall - formHome.ConcededOverall;\n      formHome.goalDifferenceHomeOrAway =\n        formHome.ScoredOverall - formHome.ConcededOverall;\n      formHome.last10btts = null;\n      formHome.last10bttsHome = null;\n      formHome.last10bttsAway = null;\n      formHome.allTeamResults = [];\n      formHome.resultsAll = [];\n      formHome.resultsHome = [];\n      formHome.resultsAway = [];\n      match.bttsAllPercentageHome = \"\";\n      match.bttsPercentageHomeHome = \"\";\n      match.bttsPercentageHomeAway = \"\";\n      formAway.completeData = false;\n      formAway.predictedGoalsBasedOnHomeAv = formAway.ScoredAverage;\n      formAway.predictedGoalsBasedOnAwayAv = formAway.ConcededAverage;\n      formAway.allTeamGoalsBasedOnAverages = formAway.ScoredAverage;\n      formAway.forAndAgainstRollingAv = {\n        goalsFor: formAway.ScoredAverage,\n        goalsAgainst: formAway.ConcededAverage,\n      };\n      formAway.forAndAgainstRollingAvHomeOrAway = {\n        goalsFor: formAway.ScoredAverage,\n        goalsAgainst: formAway.ConcededAverage,\n      };\n      formAway.predictedGoalsConceededBasedOnHomeAv = formAway.ConcededAverage;\n      formAway.predictedGoalsConceededBasedOnAwayAv = formAway.ConcededAverage;\n      formAway.allTeamGoalsConceededBasedOnAverages = formAway.ConcededAverage;\n      formAway.averageOddsHome = null;\n      formAway.averageOddsAway = null;\n      formAway.averageScoredLeague = null;\n      formAway.averageConceededLeague = null;\n      formAway.goalDifference =\n        formAway.ScoredOverall - formAway.ConcededOverall;\n      formAway.goalDifferenceHomeOrAway =\n        formAway.ScoredOverall - formAway.ConcededOverall;\n\n      formAway.last10btts = null;\n      formAway.last10bttsHome = null;\n      formAway.last10bttsAway = null;\n      formAway.allTeamResults = [];\n      formAway.resultsAll = [];\n      formAway.resultsHome = [];\n      formAway.resultsAway = [];\n      match.bttsAllPercentageAway = \"\";\n      match.bttsPercentageAwayHome = \"\";\n      match.bttsPercentageAwayAway = \"\";\n    }\n\n    match.directnessRatingHome = formHome.directnessRatingHome;\n    match.directnessRatingAway = formAway.directnessRatingAway;\n\n    if (\n      typeof formHome.homeTeamHomePositionRaw === \"number\" &&\n      typeof formAway.awayTeamAwayPositionRaw === \"number\"\n    ) {\n      formHome.homePositionHomeOnly = parseFloat(\n        formHome.homeTeamHomePositionRaw\n      );\n      formAway.awayPositionAwayOnly = parseFloat(\n        formAway.awayTeamAwayPositionRaw\n      );\n      formHome.homePosition = parseFloat(formHome.homeRawPosition);\n      formAway.awayPosition = parseFloat(formAway.awayRawPosition);\n    } else {\n      formHome.homePositionHomeOnly = \"N/A\";\n      formAway.awayPositionAwayOnly = \"N/A\";\n      formHome.homePosition = \"N/A\";\n      formAway.awayPosition = \"N/A\";\n    }\n\n    if (formHome.last10Goals && formAway.last10Goals !== 0) {\n      if (\n        formHome.last5Goals - formHome.last5GoalsConceeded >\n        formHome.last10Goals - formHome.last10GoalsConceeded\n      ) {\n        formHome.improving = true;\n      } else {\n        formHome.improving = false;\n      }\n\n      if (\n        formAway.last5Goals - formAway.last5GoalsConceeded >\n        formAway.last10Goals - formAway.last10GoalsConceeded\n      ) {\n        formAway.improving = true;\n      } else {\n        formAway.improving = false;\n      }\n    }\n\n    let pointsDiff6 = await getPointsDifferential(\n      formHome.avPoints6,\n      formAway.avPoints6\n    );\n\n    formHome.AttackingPotency = (formHome.XG / formHome.AttacksHome) * 100;\n    formAway.AttackingPotency = (formAway.XG / formAway.AttacksAverage) * 100;\n\n    formHome.lastGame = formHome.resultsAll[0];\n    formHome.previousToLastGame = formHome.resultsAll[1];\n\n    formAway.lastGame = formAway.resultsAll[0];\n    formAway.previousToLastGame = formAway.resultsAll[1];\n\n    let teamComparisonScore;\n\n    const attackingMetricsHome = {\n      \"Average Dangerous Attacks\": formHome.AverageDangerousAttacksOverall,\n      \"Average Shots\": formHome.avgShots,\n      \"Average Shot Value\": formHome.avgShotValue,\n      \"Average Shots On Target\": formHome.AverageShotsOnTargetOverall\n        ? formHome.AverageShotsOnTargetOverall\n        : formHome.AverageShotsOnTarget,\n      \"Average Expected Goals\": formHome.XGOverall\n        ? formHome.XGOverall\n        : formHome.expectedGoals,\n      \"Recent XG\": formHome.XGlast5 ? formHome.XGlast5 : formHome.XGOverall,\n      \"Average Goals\": formHome.avgScored\n        ? formHome.avgScored\n        : formHome.ScoredAverage,\n      Corners: formHome.AverageCorners\n        ? formHome.AverageCorners\n        : formHome.CornersAverage,\n    };\n\n    const attackingMetricsHomeLast5 = {\n      \"Average Dangerous Attacks\": formHome.avDALast5\n        ? formHome.avDALast5\n        : formHome.AverageDangerousAttacksOverall,\n      \"Average Shots\": formHome.avShotsLast5\n        ? formHome.avShotsLast5\n        : formHome.AverageShots,\n      \"Average Shot Value\": formHome.avgShotValueLast5,\n      \"Average Shots On Target\": formHome.avSOTLast5\n        ? formHome.avSOTLast5\n        : formHome.AverageShotsOnTarget,\n      \"Average Expected Goals\": formHome.XGlast5\n        ? formHome.XGlast5\n        : formHome.XGOverall,\n      \"Recent XG\": formHome.XGlast5 ? formHome.XGlast5 : formHome.XGOverall,\n      \"Average Goals\": formHome.avScoredLast5\n        ? formHome.avScoredLast5\n        : formHome.ScoredAverage,\n      Corners: formHome.avCornersLast5\n        ? formHome.avCornersLast5\n        : formHome.CornersAverage,\n    };\n\n    const attackingMetricsHomeOnly = {\n      \"Average Dangerous Attacks\": formHome.avgDangerousAttacksHome\n        ? formHome.avgDangerousAttacksHome\n        : formHome.AverageDangerousAttacksOverall,\n      \"Average Shots\": formHome.avgShotsHome\n        ? formHome.avgShotsHome\n        : formHome.AverageShots,\n      \"Average Shot Value\": formHome.avgShotValueHome,\n      \"Average Shots On Target\": formHome.avgShotsOnTargetHome\n        ? formHome.avgShotsOnTargetHome\n        : formHome.AverageShotsOnTarget,\n      \"Average Expected Goals\": formHome.avgXGScoredHome\n        ? formHome.avgXGScoredHome\n        : formHome.XGOverall,\n      \"Recent XG\": formHome.last5XGAvgForHome\n        ? formHome.last5XGAvgForHome\n        : formHome.XGOverall,\n      \"Average Goals\": formHome.avgScoredHome\n        ? formHome.avgScoredHome\n        : formHome.ScoredAverage,\n      Corners: formHome.cornersAvHome\n        ? formHome.cornersAvHome\n        : formHome.CornersAverage,\n    };\n\n    const attackingMetricsAwayOnly = {\n      \"Average Dangerous Attacks\": formAway.avgDangerousAttacksAway\n        ? formAway.avgDangerousAttacksAway\n        : formAway.AverageDangerousAttacksOverall,\n      \"Average Shots\": formAway.avgShotsAway\n        ? formAway.avgShotsAway\n        : formAway.AverageShots,\n      \"Average Shot Value\": formAway.avgShotValueAway,\n      \"Average Shots On Target\": formAway.avgShotsOnTargetAway\n        ? formAway.avgShotsOnTargetAway\n        : formAway.AverageShotsOnTarget,\n      \"Average Expected Goals\": formAway.avgXGScoredAway\n        ? formAway.avgXGScoredAway\n        : formAway.XGOverall,\n      \"Recent XG\": formAway.last5XGAvgForAway\n        ? formAway.last5XGAvgForAway\n        : formAway.XGOverall,\n      \"Average Goals\": formAway.avgScoredAway\n        ? formAway.avgScoredAway\n        : formAway.ScoredAverage,\n      Corners: formAway.cornersAvAway\n        ? formAway.cornersAvAway\n        : formAway.CornersAverage,\n    };\n\n    const attackingMetricsAway = {\n      \"Average Dangerous Attacks\": formAway.AverageDangerousAttacksOverall,\n      \"Average Shots\": formAway.avgShots,\n      \"Average Shot Value\": formAway.avgShotValue,\n      \"Average Shots On Target\": formAway.AverageShotsOnTargetOverall\n        ? formAway.AverageShotsOnTargetOverall\n        : formAway.AverageShotsOnTarget,\n      \"Average Expected Goals\": formAway.XGOverall\n        ? formAway.XGOverall\n        : formAway.expectedGoals,\n      \"Recent XG\": formAway.XGlast5 ? formAway.XGlast5 : formAway.XGOverall,\n      \"Average Goals\": formAway.avgScored\n        ? formAway.avgScored\n        : formAway.ScoredAverage,\n      Corners: formAway.AverageCorners\n        ? formAway.AverageCorners\n        : formAway.CornersAverage,\n    };\n\n    const attackingMetricsAwayLast5 = {\n      \"Average Dangerous Attacks\": formAway.avDALast5\n        ? formAway.avDALast5\n        : formAway.AverageDangerousAttacksOverall,\n      \"Average Shots\": formAway.avShotsLast5\n        ? formAway.avShotsLast5\n        : formAway.AverageShots,\n      \"Average Shot Value\": formAway.avgShotValueLast5,\n      \"Average Shots On Target\": formAway.avSOTLast5\n        ? formAway.avSOTLast5\n        : formAway.AverageShotsOnTarget,\n      \"Average Expected Goals\": formAway.XGlast5\n        ? formAway.XGlast5\n        : formAway.XGOverall,\n      \"Recent XG\": formAway.XGlast5 ? formAway.XGlast5 : formAway.XGOverall,\n      \"Average Goals\": formAway.avScoredLast5\n        ? formAway.avScoredLast5\n        : formAway.ScoredAverage,\n      Corners: formAway.avCornersLast5\n        ? formAway.avCornersLast5\n        : formAway.CornersAverage,\n    };\n\n    const defensiveMetricsHome = {\n      \"Average XG Against\": formHome.XGAgainstAvgOverall\n        ? formHome.XGAgainstAvgOverall\n        : formHome.XGAgainstAvgOverall,\n      \"Recent XG Against\": formHome.XGAgainstlast5\n        ? formHome.XGAgainstlast5\n        : formHome.XGAgainstAvgOverall,\n      \"Average Goals Against\": formHome.avgConceeded\n        ? formHome.avgConceeded\n        : formHome.ConcededAverage,\n      \"Average SOT Against\": formHome.AverageShotsOnTargetAgainstOverall\n        ? formHome.AverageShotsOnTargetAgainstOverall\n        : 5,\n    };\n\n    const defensiveMetricsHomeLast5 = {\n      \"Average XG Against\": formHome.XGAgainstlast5\n        ? formHome.XGAgainstlast5\n        : formHome.XGAgainstAvgOverall,\n      \"Recent XG Against\": formHome.avXGAgainstLast5\n        ? formHome.avXGAgainstLast5\n        : formHome.XGAgainstAvgOverall,\n      \"Average Goals Against\": formHome.avConceededLast5\n        ? formHome.avConceededLast5\n        : formHome.ConcededAverage,\n      \"Average SOT Against\": formHome.avSOTAgainstLast5\n        ? formHome.avSOTAgainstLast5\n        : 5,\n    };\n\n    const defensiveMetricsAway = {\n      \"Average XG Against\": formAway.XGAgainstAvgOverall\n        ? formAway.XGAgainstAvgOverall\n        : formAway.XGAgainstAvgOverall,\n      \"Recent XG Against\": formAway.XGAgainstlast5\n        ? formAway.XGAgainstlast5\n        : formAway.XGAgainstAvgOverall,\n      \"Average Goals Against\": formAway.avgConceeded\n        ? formAway.avgConceeded\n        : formAway.ConcededAverage,\n      \"Average SOT Against\": formAway.AverageShotsOnTargetAgainstOverall\n        ? formAway.AverageShotsOnTargetAgainstOverall\n        : 5,\n    };\n\n    const defensiveMetricsAwayLast5 = {\n      \"Average XG Against\": formAway.XGAgainstlast5\n        ? formAway.XGAgainstlast5\n        : formAway.XGAgainstAvgOverall,\n      \"Recent XG Against\": formAway.avXGAgainstLast5\n        ? formAway.avXGAgainstLast5\n        : formAway.XGAgainstAvgOverall,\n      \"Average Goals Against\": formAway.avConceededLast5\n        ? formAway.avConceededLast5\n        : formAway.ConcededAverage,\n      \"Average SOT Against\": formAway.avSOTAgainstLast5\n        ? formAway.avSOTAgainstLast5\n        : 5,\n    };\n\n    const defensiveMetricsHomeOnly = {\n      \"Average XG Against\": formHome.avgXGConceededHome\n        ? formHome.avgXGConceededHome\n        : formHome.XGAgainstAvgOverall,\n      \"Recent XG Against\": formHome.last5XGAvgAgainstHome\n        ? formHome.last5XGAvgAgainstHome\n        : formHome.XGAgainstAvgOverall,\n      \"Average Goals Against\": formHome.teamConceededAvgHomeOnly\n        ? formHome.teamConceededAvgHomeOnly\n        : formHome.ConcededAverage,\n      \"Average SOT Against\": formHome.avgShotsOnTargetAgainstHome\n        ? formHome.avgShotsOnTargetAgainstHome\n        : 5,\n    };\n\n    const defensiveMetricsAwayOnly = {\n      \"Average XG Against\": formAway.avgXGConceededAway\n        ? formAway.avgXGConceededAway\n        : formAway.XGAgainstAvgOverall,\n      \"Recent XG Against\": formAway.last5XGAvgAgainstAway\n        ? formAway.last5XGAvgAgainstAway\n        : formAway.XGAgainstAvgOverall,\n      \"Average Goals Against\": formAway.teamConceededAvgAwayOnly\n        ? formAway.teamConceededAvgAwayOnly\n        : formAway.ConcededAverage,\n      \"Average SOT Against\": formAway.avgShotsOnTargetAgainstAway\n        ? formAway.avgShotsOnTargetAgainstAway\n        : 5,\n    };\n\n    formHome.attackingMetrics = attackingMetricsHome;\n    formHome.defensiveMetrics = defensiveMetricsHome;\n    formAway.attackingMetrics = attackingMetricsAway;\n    formAway.defensiveMetrics = defensiveMetricsAway;\n\n    formHome.attackingStrength = await calculateAttackingStrength(\n      attackingMetricsHome\n    );\n\n    formHome.attackingStrengthScoreGeneration =\n      await calculateAttackingStrength(attackingMetricsHome);\n\n    formHome.attackingStrengthLast5 = await calculateAttackingStrength(\n      attackingMetricsHomeLast5\n    );\n\n    formHome.attackingStrengthHomeOnly = await calculateAttackingStrength(\n      attackingMetricsHomeOnly\n    );\n\n    formAway.attackingStrength = await calculateAttackingStrength(\n      attackingMetricsAway\n    );\n\n    formAway.attackingStrengthLast5 = await calculateAttackingStrength(\n      attackingMetricsAwayLast5\n    );\n\n    formAway.attackingStrengthAwayOnly = await calculateAttackingStrength(\n      attackingMetricsAwayOnly\n    );\n\n    formHome.defensiveStrength = await calculateDefensiveStrength(\n      defensiveMetricsHome\n    );\n\n    formHome.defensiveStrengthScoreGeneration =\n      await calculateDefensiveStrength(defensiveMetricsHome, 0.75);\n\n    formHome.defensiveStrengthLast5 = await calculateDefensiveStrength(\n      defensiveMetricsHomeLast5\n    );\n\n    formHome.defensiveStrengthScoreGenerationLast5 =\n      await calculateDefensiveStrength(defensiveMetricsHomeLast5, 0.75);\n\n    formHome.defensiveStrengthHomeOnly = await calculateDefensiveStrength(\n      defensiveMetricsHomeOnly\n    );\n\n    formHome.defensiveStrengthScoreGenerationHomeOnly =\n      await calculateDefensiveStrength(defensiveMetricsHomeOnly, 0.75);\n\n    formAway.defensiveStrength = await calculateDefensiveStrength(\n      defensiveMetricsAway\n    );\n\n    formAway.defensiveStrengthScoreGeneration =\n      await calculateDefensiveStrength(defensiveMetricsAway, 0.75);\n\n    formAway.defensiveStrengthLast5 = await calculateDefensiveStrength(\n      defensiveMetricsAwayLast5\n    );\n\n    formAway.defensiveStrengthScoreGenerationLast5 =\n      await calculateDefensiveStrength(defensiveMetricsAwayLast5, 0.75);\n\n    formAway.defensiveStrengthAwayOnly = await calculateDefensiveStrength(\n      defensiveMetricsAwayOnly\n    );\n\n    formAway.defensiveStrengthScoreGenerationAwayOnly =\n      await calculateDefensiveStrength(defensiveMetricsAwayOnly, 0.75);\n\n    formHome.possessionStrength = await calculateMetricStrength(\n      \"averagePossession\",\n      formHome.AveragePossessionOverall\n        ? formHome.AveragePossessionOverall\n        : formHome.AveragePossessionOverall\n    );\n\n    formHome.possessionStrengthLast5 = await calculateMetricStrength(\n      \"averagePossession\",\n      formHome.avPosessionLast5\n        ? formHome.avPosessionLast5\n        : formHome.AveragePossessionOverall\n    );\n\n    formHome.possessionStrengthHomeOnly = await calculateMetricStrength(\n      \"averagePossession\",\n      formHome.avgPossessionHome\n        ? formHome.avgPossessionHome\n        : formHome.AveragePossessionOverall\n    );\n\n    formAway.possessionStrengthLast5 = await calculateMetricStrength(\n      \"averagePossession\",\n      formAway.avPosessionLast5\n        ? formAway.avPosessionLast5\n        : formAway.AveragePossessionOverall\n    );\n\n    formAway.possessionStrength = await calculateMetricStrength(\n      \"averagePossession\",\n      formAway.AveragePossessionOverall\n        ? formAway.AveragePossessionOverall\n        : formAway.AveragePossessionOverall\n    );\n\n    formAway.possessionStrengthAwayOnly = await calculateMetricStrength(\n      \"averagePossession\",\n      formAway.avgPossessionAway\n        ? formAway.avgPossessionAway\n        : formAway.AveragePossessionOverall\n    );\n\n    formHome.XGdifferentialRecent = await diff(\n      formHome.XGlast5,\n      formHome.XGAgainstlast5\n    );\n\n    formHome.actualToXGDifferenceRecent = await diff(\n      formHome.XGdifferentialRecent,\n      formHome.last5GoalDiff\n    );\n\n    formAway.XGdifferentialRecent = await diff(\n      formAway.XGlast5,\n      formAway.XGAgainstlast5\n    );\n\n    formAway.actualToXGDifferenceRecent = await diff(\n      formAway.XGdifferentialRecent,\n      formAway.last5GoalDiff\n    );\n\n    formHome.directnessOverall =\n      (formHome.AverageShots / formHome.AveragePossessionOverall) * 10;\n\n    formHome.directnessOverallLast5 =\n      (formHome.avShotsLast5 / formHome.avPosessionLast5) * 10;\n\n    formAway.directnessOverallLast5 =\n      (formAway.avShotsLast5 / formAway.avPosessionLast5) * 10;\n\n    formHome.directnessHomeOnly =\n      (formHome.avgShotsHome / formHome.avgPossessionHome) * 10;\n\n    formAway.directnessOverall =\n      (formAway.AverageShots / formAway.AveragePossessionOverall) * 10;\n\n    formAway.directnessAwayOnly =\n      (formAway.avgShotsAway / formAway.avgPossessionAway) * 10;\n\n    formHome.directnessOverallStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formHome.directnessOverall\n    );\n\n    formHome.directnessOverallStrengthLast5 = await calculateMetricStrength(\n      \"directnessOverall\",\n      formHome.directnessOverallLast5\n    );\n\n    formHome.directnessHomeStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formHome.directnessHomeOnly\n    );\n\n    formAway.directnessOverallStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formAway.directnessOverall\n    );\n\n    formAway.directnessOverallStrengthLast5 = await calculateMetricStrength(\n      \"directnessOverall\",\n      formAway.directnessOverallLast5\n    );\n\n    formAway.directnessAwayStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formAway.directnessAwayOnly\n    );\n\n    formHome.shootingAccuracy =\n      (formHome.AverageShotsOnTargetOverall\n        ? formHome.AverageShotsOnTargetOverall / formHome.avgShots\n        : formHome.AverageShotsOnTarget / formHome.avgShots) *\n      formHome.AverageShotsOnTargetOverall\n        ? formHome.AverageShotsOnTargetOverall\n        : formHome.AverageShotsOnTarget;\n\n    formHome.shootingAccuracyLast5 =\n      (formHome.avSOTLast5 / formHome.avShotsLast5) * formHome.avSOTLast5;\n\n    formAway.shootingAccuracyLast5 =\n      (formAway.avSOTLast5 / formAway.avShotsLast5) * formAway.avSOTLast5;\n\n    formHome.shootingAccuracyHomeOnly =\n      (formHome.avgShotsOnTargetHome / formHome.avgShotsHome) *\n      formHome.avgShotsOnTargetHome;\n\n    formAway.shootingAccuracy =\n      (formAway.AverageShotsOnTargetOverall\n        ? formAway.AverageShotsOnTargetOverall / formAway.avgShots\n        : formAway.AverageShotsOnTarget / formAway.avgShots) *\n      formAway.AverageShotsOnTargetOverall\n        ? formAway.AverageShotsOnTargetOverall\n        : formAway.AverageShotsOnTarget;\n\n    formAway.shootingAccuracyAwayOnly =\n      (formAway.avgShotsOnTargetAway / formAway.avgShotsAway) *\n      formAway.avgShotsOnTargetAway;\n\n    formHome.accuracyOverallStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formHome.avgShotValue\n    );\n\n    formHome.accuracyOverallStrengthLast5 = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formHome.avgShotValueLast5\n    );\n\n    formHome.accuracyHomeStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formHome.avgShotValueHome\n    );\n\n    formAway.accuracyOverallStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formAway.avgShotValue\n    );\n\n    formAway.accuracyOverallStrengthLast5 = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formAway.avgShotValueLast5\n    );\n\n    formAway.accuracyAwayStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formAway.avgShotValueAway\n    );\n\n    formHome.xgForStrength = await calculateMetricStrength(\n      \"xgFor\",\n      formHome.XGOverall\n    );\n\n    formHome.xgForStrengthLast5 = await calculateMetricStrength(\n      \"xgFor\",\n      formHome.XGlast5\n    );\n\n    formHome.xgForStrengthHomeOnly = await calculateMetricStrength(\n      \"xgFor\",\n      formHome.avgXGScoredHome\n    );\n\n    formHome.xgAgainstStrength = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formHome.XGAgainstAvgOverall\n    );\n\n    formHome.xgAgainstStrengthLast5 = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formHome.XGAgainstlast5\n    );\n\n    formHome.xgAgainstStrengthHomeOnly = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formHome.avgXGConceededHome\n    );\n\n    formAway.xgForStrength = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.XGOverall\n    );\n\n    formAway.xgForStrengthLast5 = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.last5XGAvgFor\n    );\n\n    formAway.xgForStrengthLast5 = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.XGlast5\n    );\n\n    formAway.xgForStrengthAwayOnly = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.avgXGScoredAway\n    );\n\n    formAway.xgAgainstStrength = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formAway.XGAgainstAvgOverall\n    );\n\n    formAway.xgAgainstStrengthLast5 = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formAway.XGAgainstlast5\n    );\n\n    formAway.xgAgainstStrengthAwayOnly = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formAway.avgXGConceededAway\n    );\n\n    formHome.styleOfPlayOverall = await calculatePlayingStyle(\n      formHome.directnessRating,\n      formHome.AveragePossessionOverall\n    );\n    formHome.styleOfPlayHome = await calculatePlayingStyle(\n      formHome.directnessRatingHome,\n      formHome.avgPossessionHome\n    );\n\n    formAway.styleOfPlayOverall = await calculatePlayingStyle(\n      formAway.directnessRating,\n      formAway.AveragePossessionOverall\n    );\n    formAway.styleOfPlayAway = await calculatePlayingStyle(\n      formAway.directnessRatingAway,\n      formAway.avgPossessionAway\n    );\n\n    formHome.actualToXGDifference = parseInt(\n      await diff(formHome.XGDiffNonAverage, formHome.goalDifference)\n    );\n\n    formAway.actualToXGDifference = parseInt(\n      await diff(formAway.XGDiffNonAverage, formAway.goalDifference)\n    );\n\n    // teamComparisonScore = await compareTeams(formHome, formAway, match);\n\n    [formHome.teamGoalsCalc, formAway.teamGoalsCalc] = await generateGoals(\n      formHome,\n      formAway,\n      match\n    );\n\n    // teamComparisonScore = teamComparisonScore * 0.3;\n    // LEAVE\n\n    // if (teamComparisonScore > 0.45) {\n    //   teamComparisonScore = 0.45;\n    // } else if (teamComparisonScore < -0.45) {\n    //   teamComparisonScore = -0.45;\n    // }\n\n    // if (teamComparisonScore < 0) {\n    //   formHome.teamStrengthWeighting = 1 + teamComparisonScore / 1;\n    //   formAway.teamStrengthWeighting = 1 - teamComparisonScore / 1;\n    // } else if (teamComparisonScore >= 0) {\n    //   formHome.teamStrengthWeighting = 1 + teamComparisonScore / 1;\n    //   formAway.teamStrengthWeighting = 1 - teamComparisonScore / 1;\n    // }\n\n    // teamComparisonScore = 0;\n\n    // match.teamComparisonScore = teamComparisonScore.toFixed(2);\n    // match.goalWeighting = 1 + parseFloat(match.teamComparisonScore)\n\n    // let team1Metrics = {\n    //   weighting: formHome.teamGoalsCalc,\n    //   odds: match.homeOdds,\n    //   XGRating: formHome.XGRating,\n    //   actualToXGDifference: formHome.actualToXGDifference,\n    //   // Add other relevant metrics here\n    // };\n\n    // let team2Metrics = {\n    //   weighting: formAway.teamGoalsCalc,\n    //   odds: match.awayOdds,\n    //   XGRating: formAway.XGRating,\n    //   actualToXGDifference: formAway.actualToXGDifference,\n    //   // Add other relevant metrics here\n    // };\n\n    // // pass arrays of league goals and conceeded\n    // let scorePredictions;\n    // let scorePredictionsHA;\n    // let scorePredictionsRecent;\n\n    // if (\n    //   formHome.allConceededArrayHome !== undefined &&\n    //   formAway.allConceededArrayAway !== undefined\n    // ) {\n    //   scorePredictionsRecent = await predictScore(\n    //     formHome.allGoalsArrayHomeRecent,\n    //     formHome.allConceededArrayHomeRecent,\n    //     formAway.allGoalsArrayAwayRecent,\n    //     formAway.allConceededArrayAwayRecent,\n    //     team1Metrics,\n    //     team2Metrics,\n    //     match.game\n    //   );\n    //   scorePredictionsHA = await predictScore(\n    //     formHome.allGoalsArrayHomeOnly,\n    //     formHome.allConceededArrayHomeOnly,\n    //     formAway.allGoalsArrayAwayOnly,\n    //     formAway.allConceededArrayAwayOnly,\n    //     team1Metrics,\n    //     team2Metrics,\n    //     match.game\n    //   );\n    //   scorePredictions = await predictScore(\n    //     formHome.allGoalsArrayHome,\n    //     formHome.allConceededArrayHome,\n    //     formAway.allGoalsArrayAway,\n    //     formAway.allConceededArrayAway,\n    //     team1Metrics,\n    //     team2Metrics,\n    //     match.game\n    //   );\n    // }\n\n    let finalHomeGoals;\n    let finalAwayGoals;\n\n    const homeGoalDiff =\n      formHome.ScoredAverageShortAndLongTerm -\n      formHome.conceededAverageShortAndLongTerm;\n    const awayGoalDiff =\n      formAway.ScoredAverageShortAndLongTerm -\n      formAway.conceededAverageShortAndLongTerm;\n\n    formHome.goalsDifferential =\n      parseFloat(await diff(homeGoalDiff, awayGoalDiff)) / 1;\n    formAway.goalsDifferential =\n      parseFloat(await diff(awayGoalDiff, homeGoalDiff)) / 1;\n\n    formHome.rollingAverageGoalsDifferential = parseFloat(\n      formHome.allTeamGoalsBasedOnAverages -\n        formHome.allTeamGoalsConceededBasedOnAverages\n    );\n    formAway.rollingAverageGoalsDifferential = parseFloat(\n      formAway.allTeamGoalsBasedOnAverages -\n        formAway.allTeamGoalsConceededBasedOnAverages\n    );\n\n    match.GoalsInGamesAverageHome =\n      formHome.avScoredLast5 + formHome.avConceededLast5;\n\n    match.GoalsInGamesAverageAway =\n      formAway.avScoredLast5 + formAway.avConceededLast5;\n\n    let factorOneHome;\n    let factorOneAway;\n\n    factorOneHome =\n      // homeLeagueOrAllFormAverageGoals * 1 +\n      // formHome.last5Goals * 0.5 +\n      // formAway.last5GoalsConceeded * 0.5 +\n      (formHome.forAndAgainstRollingAvHomeOrAway.goalsFor * 2 +\n        formAway.forAndAgainstRollingAvHomeOrAway.goalsAgainst * 2 +\n        formHome.forAndAgainstRollingAv.goalsFor * 0 +\n        formAway.forAndAgainstRollingAv.goalsAgainst * 0 +\n        formHome.allTeamGoalsBasedOnAverages * 0 +\n        formAway.allTeamGoalsConceededBasedOnAverages * 0) /\n      // formHome.XGOverall * 1 +\n      // formAway.XGAgainstAvgOverall * 1 +\n\n      8;\n\n    factorOneAway =\n      // awayLeagueOrAllFormAverageGoals * 1 +\n      // formAway.last5Goals * 0.5 +\n      // formHome.last5GoalsConceeded * 0.5 +\n      (formAway.forAndAgainstRollingAvHomeOrAway.goalsFor * 2 +\n        formHome.forAndAgainstRollingAvHomeOrAway.goalsAgainst * 2 +\n        formAway.forAndAgainstRollingAv.goalsFor * 0 +\n        formHome.forAndAgainstRollingAv.goalsAgainst * 0 +\n        formAway.allTeamGoalsBasedOnAverages * 0 +\n        formHome.allTeamGoalsConceededBasedOnAverages * 0) /\n      // formAway.XGOverall * 1 +\n      // formHome.XGAgainstAvgOverall * 1 +\n      8;\n\n    // let factorTwoHome;\n    // let factorTwoAway;\n\n    // // if (\n    //   scorePredictions !== undefined &&\n    //   scorePredictions[0].probability !== 1\n    // ) {\n    //   factorTwoHome =\n    //     // scorePredictions[0].team1Score +\n    //     // scorePredictionsRecent[0].team1Score +\n    //     scorePredictionsHA[0].team1Score / 2;\n    //   factorTwoAway =\n    //     // scorePredictions[0].team2Score +\n    //     // scorePredictionsRecent[0].team2Score +\n    //     scorePredictionsHA[0].team2Score / 2;\n    // } else {\n    //   factorTwoHome = factorOneHome;\n    //   factorTwoAway = factorOneAway;\n    // }\n\n    let homeComparisonWeighting;\n    let awayComparisonWeighting;\n    match.scoreDiff = await diff(factorOneHome, factorOneAway);\n\n    if (teamComparisonScore > 0) {\n      homeComparisonWeighting = 1 + Math.abs(teamComparisonScore);\n      awayComparisonWeighting = 1 + -Math.abs(teamComparisonScore);\n    } else if (teamComparisonScore < 0) {\n      homeComparisonWeighting = 1 + -Math.abs(teamComparisonScore);\n      awayComparisonWeighting = 1 + Math.abs(teamComparisonScore);\n    } else {\n      homeComparisonWeighting = 1;\n      awayComparisonWeighting = 1;\n    }\n\n    // ROI\n    // Cumalative ROI for all 1402 match outcomes: + 7.58%\n\n    // const adjustmentHome =\n    //   formHome.avgShotValue > 10.5\n    //     ? parseFloat(formHome.actualToXGDifferenceRecent * 0.25)\n    //     : parseFloat(formHome.actualToXGDifferenceRecent * 0.5);\n    // const adjustmentAway =\n    //   formAway.twoGameAverage > 10.5\n    //     ? parseFloat(formAway.actualToXGDifferenceRecent * 0.25)\n    //     : parseFloat(formAway.actualToXGDifferenceRecent * 0.5);\n\n    // const homeAdj = formHome.actualToXGDifferenceRecent / 2;\n    // const awayAdj = formAway.actualToXGDifferenceRecent / 2;\n\n    // let experimentalHomeGoals = formHome.teamGoalsCalc;\n\n    // console.log(match.game)\n    // console.log(formHome)\n    // console.log(formAway)\n\n    let experimentalHomeGoals =\n      // factorOneHome * 1 +\n      // (formHome.allTeamGoalsBasedOnAverages +\n      // formAway.allTeamGoalsConceededBasedOnAverages +\n      // formHome.predictedGoalsBasedOnHomeAv +\n      // formAway.predictedGoalsConceededBasedOnAwayAv +\n      // formHome.XGPredictionHome.goalsFor +\n      // formAway.XGPredictionAway.goalsAgainst +\n      (formHome.teamGoalsCalc * 2 +\n        formHome.forAndAgainstRollingAvHomeOrAway.goalsFor * 1 +\n        formAway.forAndAgainstRollingAvHomeOrAway.goalsAgainst * 1 +\n        formHome.forAndAgainstRollingAv.goalsFor * 1 +\n        formAway.forAndAgainstRollingAv.goalsAgainst * 1) /\n      6;\n    // + homeAdj;\n\n    // (factorOneHome * homeComparisonWeighting +\n    //   (formHome.teamGoalsCalc * 2) +\n    //   factorTwoHome) /\n    // 4;\n    // (formHome.forAndAgainstRollingAvHomeOrAway.goalsFor + formAway.forAndAgainstRollingAvHomeOrAway.goalsAgainst) / 2\n\n    // let experimentalAwayGoals = formAway.teamGoalsCalc;\n    let experimentalAwayGoals =\n      // factorOneAway * 1 +\n      // (formAway.allTeamGoalsBasedOnAverages +\n      // formHome.allTeamGoalsConceededBasedOnAverages +\n      // formAway.predictedGoalsBasedOnAwayAv +\n      // formHome.predictedGoalsConceededBasedOnHomeAv +\n      // formAway.XGPredictionAway.goalsFor +\n      // formHome.XGPredictionHome.goalsAgainst +\n      (formAway.teamGoalsCalc * 2 +\n        formAway.forAndAgainstRollingAvHomeOrAway.goalsFor * 1 +\n        formHome.forAndAgainstRollingAvHomeOrAway.goalsAgainst * 1 +\n        formAway.forAndAgainstRollingAv.goalsFor * 1 +\n        formHome.forAndAgainstRollingAv.goalsAgainst * 1) /\n      6;\n    // + awayAdj;\n\n    // console.log(experimentalHomeGoals);\n    // console.log(adjustmentHome);\n\n    // (factorOneAway * awayComparisonWeighting +\n    //   (formAway.teamGoalsCalc * 2) +\n    //   factorTwoAway) /\n    // 4;\n    // (formAway.forAndAgainstRollingAvHomeOrAway.goalsFor + formHome.forAndAgainstRollingAvHomeOrAway.goalsAgainst) / 2\n\n    let rawFinalHomeGoals = experimentalHomeGoals;\n    let rawFinalAwayGoals = experimentalAwayGoals;\n\n    // if(rawFinalHomeGoals < 0){\n    //   rawFinalHomeGoals = 0\n    // }\n\n    // if(rawFinalAwayGoals < 0){\n    //   rawFinalAwayGoals = 0\n    // }\n\n    match.rawFinalHomeGoals = rawFinalHomeGoals;\n    match.rawFinalAwayGoals = rawFinalAwayGoals;\n\n    // if (rawFinalHomeGoals < 1 && rawFinalHomeGoals > 0 && rawFinalAwayGoals < 1 && rawFinalAwayGoals > 0) {\n    //   if (\n    //     formHome.CleanSheetPercentage < 45 &&\n    //     formAway.CleanSheetPercentage < 45\n    //   ) {\n    //     finalHomeGoals = Math.ceil(rawFinalHomeGoals);\n    //     finalAwayGoals = Math.ceil(rawFinalAwayGoals);\n    //   } else {\n    //     finalHomeGoals = Math.floor(rawFinalHomeGoals);\n    //     finalAwayGoals = Math.floor(rawFinalAwayGoals);\n    //   }\n    // }\n    // else if (rawFinalHomeGoals < 0 && rawFinalAwayGoals < 0) {\n    //   if (\n    //     formHome.CleanSheetPercentage < 45 &&\n    //     formAway.CleanSheetPercentage < 45\n    //   ) {\n    //     finalHomeGoals = 1;\n    //     finalAwayGoals = 1;\n    //   } else {\n    //     finalHomeGoals = Math.floor(rawFinalHomeGoals);\n    //     finalAwayGoals = Math.floor(rawFinalAwayGoals);\n    //   }\n    // }\n    // else {\n    //   finalHomeGoals = Math.floor(rawFinalHomeGoals);\n    //   finalAwayGoals = Math.floor(rawFinalAwayGoals);\n    // }\n\n    if (rawFinalHomeGoals < 0) {\n      rawFinalHomeGoals = 0;\n    }\n\n    if (rawFinalAwayGoals < 0) {\n      rawFinalAwayGoals = 0;\n    }\n\n    // if(rawFinalHomeGoals > formHome.avgScored && rawFinalAwayGoals > formAway.avgScored){\n    //   rawFinalHomeGoals -= Math.abs(-1)\n    //   rawFinalAwayGoals -= Math.abs(-1)\n    // }\n\n    finalHomeGoals = Math.floor(rawFinalHomeGoals);\n    finalAwayGoals = Math.floor(rawFinalAwayGoals);\n\n    // finalHomeGoals = rawFinalHomeGoals;\n    // finalAwayGoals = rawFinalAwayGoals;\n\n    // finalHomeGoals = await roundCustom(rawFinalHomeGoals, formHome, formAway);\n    // finalAwayGoals = await roundCustom(rawFinalAwayGoals, formAway, formHome);\n\n    // if (finalHomeGoals > formHome.avgScored + 2) {\n    //   finalHomeGoals = Math.round((finalHomeGoals + formHome.avgScored) / 2);\n    // }\n\n    // if (finalAwayGoals > formAway.avgScored + 2) {\n    //   finalAwayGoals = Math.round((finalAwayGoals + formAway.avgScored) / 2);\n    // }\n\n    // if (finalAwayGoals < 0) {\n    //   let difference = Math.abs(\n    //     parseFloat((await diff(0, finalAwayGoals)) / 2)\n    //   );\n    //   rawFinalHomeGoals = rawFinalHomeGoals + difference;\n    //   finalAwayGoals = 0;\n    // }\n\n    // if (finalHomeGoals < 0) {\n    //   let difference = Math.abs(\n    //     parseFloat((await diff(0, finalHomeGoals)) / 2)\n    //   );\n    //   rawFinalAwayGoals = rawFinalAwayGoals + difference;\n    //   finalHomeGoals = 0;\n    // }\n\n    if (match.status !== \"suspended\") {\n      if (finalHomeGoals > finalAwayGoals) {\n        match.prediction = \"homeWin\";\n        homePredictions = homePredictions + 1;\n        if (\n          formHome.lastGame === \"L\" ||\n          formHome.last2Points < 3 ||\n          formAway.last2Points > 4 ||\n          formHome.oddsReliabilityWin < 50\n        ) {\n          match.includeInMultis = false;\n        } else {\n          match.includeInMultis = true;\n        }\n      } else if (finalAwayGoals > finalHomeGoals) {\n        match.prediction = \"awayWin\";\n        awayPredictions = awayPredictions + 1;\n        if (\n          formAway.lastGame === \"L\" ||\n          formAway.last2Points < 3 ||\n          formHome.last2Points > 4 ||\n          formAway.oddsReliabilityWin < 50\n        ) {\n          match.includeInMultis = false;\n        } else {\n          match.includeInMultis = true;\n        }\n      } else if (finalHomeGoals === finalAwayGoals) {\n        match.prediction = \"draw\";\n        drawPredictions = drawPredictions + 1;\n      }\n    }\n\n    console.log(`drawPredictions: ${drawPredictions}`);\n\n    if (\n      (XGdifferential > 1 && match.prediction === \"homeWin\") ||\n      (XGdifferential < -1.6 && match.prediction === \"awayWin\")\n    ) {\n      match.XGdifferential = true;\n    } else {\n      match.XGdifferential = false;\n    }\n\n    if (\n      (pointsDiff6 > 1.2 && match.prediction === \"homeWin\") ||\n      (pointsDiff6 < -1.2 && match.prediction === \"awayWin\")\n    ) {\n      match.pointsDifferential = true;\n      match.pointsDifferentialValue = Math.abs(pointsDiff6);\n      match.pointsDifferentialValueRaw = parseFloat(pointsDiff6);\n    } else {\n      match.pointsDifferential = false;\n      match.pointsDifferentialValue = Math.abs(pointsDiff6);\n      match.pointsDifferentialValueRaw = parseFloat(pointsDiff6);\n    }\n\n    let rollingGoalDiffDifferential = await diff(\n      formHome.rollingAverageGoalsDifferential,\n      formAway.rollingAverageGoalsDifferential\n    );\n\n    if (\n      (rollingGoalDiffDifferential > 1.5 && match.prediction === \"homeWin\") ||\n      (rollingGoalDiffDifferential < -1.5 && match.prediction === \"awayWin\")\n    ) {\n      match.rollingGoalDiff = true;\n      match.rollingGoalDiffValue = rollingGoalDiffDifferential;\n    } else {\n      match.rollingGoalDiff = false;\n      match.rollingGoalDiffValue = rollingGoalDiffDifferential;\n    }\n\n    let dangerousAttacksDifferential = await diff(\n      formHome.AverageDangerousAttacksOverall,\n      formAway.AverageDangerousAttacksOverall\n    );\n\n    if (\n      (dangerousAttacksDifferential > 20 && match.prediction === \"homeWin\") ||\n      (dangerousAttacksDifferential < -20 && match.prediction === \"awayWin\")\n    ) {\n      match.dangerousAttacksDiff = true;\n      match.dangerousAttacksDiffValue = dangerousAttacksDifferential;\n    } else {\n      match.dangerousAttacksDiff = false;\n      match.dangerousAttacksDiffValue = dangerousAttacksDifferential;\n    }\n\n    switch (true) {\n      case match.status !== \"complete\":\n        break;\n      case match.homeGoals > match.awayGoals:\n        match.winner = match.homeTeam;\n        match.outcome = \"homeWin\";\n        homeOutcomes = homeOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formHome.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formAway.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formHome.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formAway.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formHome.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formAway.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formHome.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formAway.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += homeOdds;\n        sumOddsLoss = sumOddsLoss += awayOdds;\n        sumXGForWin = sumXGForWin += formHome.XGOverall;\n        sumXGForLoss = sumXGForLoss += formAway.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formHome.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formAway.XGAgainstAvgOverall;\n        break;\n      case match.homeGoals === match.awayGoals:\n        match.winner = \"draw\";\n        match.outcome = \"draw\";\n        allOutcomes = allOutcomes + 1;\n        allDrawOutcomes = allDrawOutcomes + 1;\n        break;\n      case match.homeGoals < match.awayGoals:\n        match.winner = match.awayTeam;\n        match.outcome = \"awayWin\";\n        allOutcomes = allOutcomes + 1;\n        awayOutcomes = awayOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formAway.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formHome.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formAway.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formHome.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formAway.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formHome.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formAway.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formHome.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += awayOdds;\n        sumOddsLoss = sumOddsLoss += homeOdds;\n        sumXGForWin = sumXGForWin += formAway.XGOverall;\n        sumXGForLoss = sumXGForLoss += formHome.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formAway.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formHome.XGAgainstAvgOverall;\n        break;\n      default:\n        break;\n    }\n\n    console.log(`allDrawOutcomes: ${allDrawOutcomes}`);\n\n    if (match.status === \"complete\") {\n      if (match.prediction === match.outcome) {\n        match.predictionOutcome = \"Won\";\n        winAmount = winAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      } else if (match.prediction !== match.outcome) {\n        match.predictionOutcome = \"Lost\";\n        lossAmount = lossAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      }\n    }\n\n    if (match.status === \"complete\") {\n      if (match.homeGoals + match.awayGoals > 2) {\n        match.over25PredictionOutcome = \"Won\";\n      } else {\n        match.over25PredictionOutcome = \"Lost\";\n      }\n    }\n\n    if (\n      match.status === \"complete\" &&\n      match.homeGoals > 0 &&\n      match.awayGoals > 0\n    ) {\n      match.bttsOutcome = \"bttsWon\";\n    } else {\n      match.bttsOutcome = \"bttsLost\";\n    }\n\n    match.formHome = formHome;\n    match.formAway = formAway;\n\n    // formObjectHome = formHome;\n    // formObjectAway = formAway;\n\n    // console.log(formObjectHome)\n    // console.log(formObjectAway)\n\n    let total = parseInt(finalHomeGoals + finalAwayGoals);\n    totalGoals = totalGoals + total;\n\n    let total2 = parseInt(match.homeGoals + match.awayGoals);\n    totalGoals2 = totalGoals2 + total2;\n\n    numberOfGames = numberOfGames + 1;\n\n    if (finalHomeGoals < 0) {\n      finalHomeGoals = 0;\n    }\n\n    if (finalAwayGoals < 0) {\n      finalAwayGoals = 0;\n    }\n\n    if (match.status === \"suspended\") {\n      finalHomeGoals = \"P\";\n      finalAwayGoals = \"P\";\n    }\n\n    if (\n      finalHomeGoals > finalAwayGoals &&\n      (match.homeOdds < rangeValue[0] || match.homeOdds > rangeValue[1])\n    ) {\n      match.omit = true;\n    } else if (\n      finalAwayGoals > finalHomeGoals &&\n      (match.awayOdds < rangeValue[0] || match.awayOdds > rangeValue[1])\n    ) {\n      match.omit = true;\n    } else if (\n      finalHomeGoals === finalAwayGoals &&\n      (match.drawOdds < rangeValue[0] || match.drawOdds > rangeValue[1])\n    ) {\n      match.omit = true;\n    }\n\n    const last10PointDiffHomePerspective = Math.abs(\n      formHome.pointsSum6 - formAway.pointsSum6\n    );\n\n    const last6PointDiffAwayPerspective = Math.abs(\n      formAway.pointsSum6 - formHome.pointsSum6\n    );\n\n    const XGDiffBetweenTeamsHomePerspective = Math.abs(\n      formHome.XGDiffNonAverage - formAway.XGDiffNonAverage\n    );\n    const XGDiffBetweenTeamsAwayPerspective = Math.abs(\n      formAway.XGDiffNonAverage - formHome.XGDiffNonAverage\n    );\n\n    match.goalDiffHomeOrAwayComparison =\n      parseFloat(formHome.goalDifferenceHomeOrAway) -\n      parseFloat(formAway.goalDifferenceHomeOrAway);\n\n    match.goalDifferenceComparison =\n      parseFloat(formHome.goalDifference) - parseFloat(formAway.goalDifference);\n\n    switch (true) {\n      case finalHomeGoals > finalAwayGoals:\n        if (minimumXG !== 0 && XGDiffBetweenTeamsHomePerspective < minimumXG) {\n          match.omit = true;\n        }\n        if (\n          minimumLast6 !== 0 &&\n          last10PointDiffHomePerspective < minimumLast6\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGDHorA !== 0 &&\n          match.goalDiffHomeOrAwayComparison < minimumGDHorA\n        ) {\n          match.omit = true;\n        }\n        if (minimumGD !== 0 && match.goalDifferenceComparison < minimumGD) {\n          match.omit = true;\n        }\n        break;\n      case finalHomeGoals < finalAwayGoals:\n        if (minimumXG !== 0 && XGDiffBetweenTeamsAwayPerspective < minimumXG) {\n          match.omit = true;\n        }\n        if (\n          minimumLast6 !== 0 &&\n          last6PointDiffAwayPerspective < minimumLast6\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGDHorA !== 0 &&\n          Math.abs(match.goalDiffHomeOrAwayComparison) < minimumGDHorA\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGD !== 0 &&\n          Math.abs(match.goalDifferenceComparison) < minimumGD\n        ) {\n          match.omit = true;\n        }\n        break;\n      case finalHomeGoals === finalAwayGoals:\n        if (\n          minimumXG !== 0 &&\n          Math.abs(XGDiffBetweenTeamsHomePerspective) < minimumXG\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumLast6 !== 0 &&\n          last10PointDiffHomePerspective < minimumLast6\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGDHorA !== 0 &&\n          Math.abs(match.goalDiffHomeOrAwayComparison) < minimumGDHorA\n        ) {\n          match.omit = true;\n        }\n        if (\n          minimumGD !== 0 &&\n          Math.abs(match.goalDifferenceComparison) < minimumGD\n        ) {\n          match.omit = true;\n        }\n        break;\n      default:\n        break;\n    }\n\n    // if (\n    //   match.game_week < 4\n    //   // match.omit === true\n    //   // match.game_week < 3 &&\n    // ) {\n    //   finalHomeGoals = \"-\";\n    //   finalAwayGoals = \"-\";\n    //   match.status = \"notEnoughData\";\n    // }\n\n    return [\n      finalHomeGoals,\n      finalAwayGoals,\n      rawFinalHomeGoals,\n      rawFinalAwayGoals,\n    ];\n  } else {\n    finalHomeGoals = \"\";\n    finalAwayGoals = \"\";\n    rawFinalHomeGoals = \"\";\n    rawFinalAwayGoals = \"\";\n    match.status = \"notEnoughData\";\n    match.profit = 0;\n  }\n\n  return [finalHomeGoals, finalAwayGoals, rawFinalHomeGoals, rawFinalAwayGoals];\n}\n\nlet specificLeagueResults = {}; // Initialize outside the function to persist data\n\nasync function getSuccessMeasure(fixtures) {\n  let sumProfit = 0;\n  let investment = 0;\n  let exactScores = 0;\n  let successCount = 0;\n  let profit = 0;\n  let netProfit = 0;\n\n  for (let i = 0; i < fixtures.length; i++) {\n    console.log(fixtures[i]);\n\n    if (\n      fixtures[i].status === \"complete\" &&\n      fixtures[i].hasOwnProperty(\"prediction\") &&\n      fixtures[i].omit !== true\n    ) {\n      sumProfit += fixtures[i].profit;\n      investment += 1;\n      netProfit = (sumProfit - investment).toFixed(2);\n      profit = parseFloat(netProfit);\n\n      if (fixtures[i].exactScore === true) {\n        exactScores += 1;\n      }\n      if (fixtures[i].predictionOutcome === \"Won\") {\n        successCount += 1;\n      }\n\n      // Handle league-specific results\n      const leagueName = fixtures[i].leagueDesc || \"Unknown League\";\n\n      if (!specificLeagueResults[leagueName]) {\n        specificLeagueResults[leagueName] = {\n          totalProfit: 0,\n          totalInvestment: 0,\n          totalROI: 0,\n          exactScores: 0,\n          successCount: 0,\n        };\n      }\n\n      // Update the league-specific results\n      const league = specificLeagueResults[leagueName];\n      league.totalProfit += fixtures[i].profit;\n      league.totalInvestment += 1;\n      league.exactScores += fixtures[i].exactScore ? 1 : 0;\n      league.successCount += fixtures[i].predictionOutcome === \"Won\" ? 1 : 0;\n\n      // Calculate ROI for the league\n      const netLeagueProfit = league.totalProfit - league.totalInvestment;\n      league.totalROI = (\n        (netLeagueProfit / league.totalInvestment) *\n        100\n      ).toFixed(2);\n    }\n  }\n\n  // Update cumulative totals\n  totalInvestment += investment;\n  totalProfit += profit;\n  const ROI = (profit / investment) * 100;\n  totalROI = (totalProfit / totalInvestment) * 100;\n\n  console.log(`Total Profit: ${totalProfit}`);\n  console.log(`Total Investment: ${totalInvestment}`);\n  console.log(`Total ROI: ${totalROI}`);\n\n  if (investment > 0) {\n    ReactDOM.render(\n      <Fragment>\n        <h3\n          className={\"SuccessMeasureText\"}>ROI for all {investment} W/D/W outcomes: {\n            ROI >= 0 ? \"+\" : \" \"\n          } {ROI.toFixed(2)}%</h3>\n        <p>{`Correct W/D/W predictions: ${successCount} (${(\n          (successCount / investment) *\n          100\n        ).toFixed(1)}%)`}</p>\n        <p>{`Exact scores predicted: ${exactScores} (${(\n          (exactScores / investment) *\n          100\n        ).toFixed(1)}%)`}</p>\n        <p\n          className={\"SuccessMeasureText\"}\n        >Cumulative ROI for all {totalInvestment} match outcomes: {\n            totalROI >= 0 ? \"+\" : \"\"\n          } {totalROI.toFixed(2)}%</p>\n        <CollapsableStats buttonText=\"ROI by League\">\n          {Object.entries(specificLeagueResults)\n            .sort(([, a], [, b]) => b.totalROI - a.totalROI) // Sort by ROI in descending order\n            .map(([leagueName, league]) => {\n              return (\n                <div className=\"SuccessMeasure\" key={leagueName}>\n                  <h3\n                    className={`${\n                      league.totalROI >= 0\n                        ? \"ProfitableLeague\"\n                        : \"NonProfitableLeague\"\n                    }`}\n                  >\n                    {leagueName}: ROI {league.totalROI >= 0 ? \"+\" : \" \"}\n                    {league.totalROI}%\n                  </h3>\n                  <p>\n                    Successful Predictions: {league.successCount} /{\" \"}\n                    {specificLeagueResults[leagueName].totalInvestment} :{\" \"}\n                    {(\n                      (league.successCount /\n                        specificLeagueResults[leagueName].totalInvestment) *\n                      100\n                    ).toFixed(2)}\n                    %\n                  </p>\n                  <p>\n                    Exact Scores: {league.exactScores} /{\" \"}\n                    {specificLeagueResults[leagueName].totalInvestment} :{\" \"}\n                    {(\n                      (league.exactScores /\n                        specificLeagueResults[leagueName].totalInvestment) *\n                      100\n                    ).toFixed(2)}\n                  </p>\n                </div>\n              );\n            })}\n        </CollapsableStats>\n      </Fragment>,\n      document.getElementById(\"successMeasure2\")\n    );\n  } else {\n    return;\n  }\n}\n\nexport var tips = [];\nexport var allTips = [];\nlet allTipsSorted = [];\nvar newArray = [];\nvar bestBets = [];\nvar price;\nvar Over25Tips = [];\nvar XGDiffTips = [];\nvar rollingDiffTips = [];\nvar dangerousAttacksDiffTips = [];\nvar pointsDiffTips = [];\nvar combinations;\nvar exoticArray = [];\nvar gamesInExotic;\nvar minimumExotic;\nvar exoticStake;\nvar exoticString;\nvar bttsArray = [];\nvar accumulatedOdds = 1;\nlet predictions = [];\n\nexport async function getNewTips(array) {\n  // allTips = [];\n  newArray = [];\n  accumulatedOdds = 1;\n\n  if (array.length > 1 && incrementValue > 0) {\n    array.forEach((tip) => {\n      if (\n        array.indexOf(tip) < incrementValue\n        // tip.goalDifferential >= incrementValue && tip.comparisonScore > 0\n      ) {\n        newArray.push(tip);\n        accumulatedOdds = parseFloat(accumulatedOdds) * parseFloat(tip.rawOdds);\n      }\n    });\n  }\n  await renderTips(newArray);\n}\n\nexport async function getScorePrediction(day, mocked) {\n  let mock = mocked;\n  clicked = true;\n  tips = [];\n  bestBets = [];\n  // price = 0\n  bttsArray = [];\n  Over25Tips = [];\n  XGDiffTips = [];\n  pointsDiffTips = [];\n  rollingDiffTips = [];\n  dangerousAttacksDiffTips = [];\n  allTips = [];\n\n  let index = 2;\n  let divider = 10;\n\n  ReactDOM.render(<div></div>, document.getElementById(\"GeneratePredictions\"));\n\n  await Promise.all(\n    matches.map(async (match) => {\n      // if there are no stored predictions, calculate them based on live data\n      if (match) {\n        switch (true) {\n          case match.status === \"canceled\":\n            match.goalsA = \"P\";\n            match.goalsB = \"P\";\n            match.completeData = false;\n            await calculateScore(match, index, divider, false);\n            break;\n          case match.leagueID === 6935 ||\n            match.leagueID === 7061 ||\n            (match.game_week < 3 && match.game_week !== 0):\n            match.goalsA = \"x\";\n            match.goalsB = \"x\";\n            match.completeData = false;\n            await calculateScore(match, index, divider, true);\n            break;\n          default:\n            [\n              match.goalsA,\n              match.goalsB,\n              match.unroundedGoalsA,\n              match.unroundedGoalsB,\n              match.completeData = true,\n            ] = await calculateScore(match, index, divider, true);\n            break;\n        }\n      } else {\n        [\n          match.goalsA,\n          match.goalsB,\n          match.unroundedGoalsA,\n          match.unroundedGoalsB,\n        ] = await calculateScore(match, index, divider, true);\n      }\n\n      await getBTTSPotential(\n        match,\n        match.goalsA,\n        match.goalsB,\n        match.directnessRatingHome,\n        match.directnessRatingAway\n      );\n\n      let predictionObject;\n      let Over25PredictionObject;\n      let XGPredictionObject;\n      let pointsDiffObject;\n      let rollingDiffObject;\n      let dangerousAttacksDiffObject;\n\n      if (match.status === \"complete\" && match.prediction) {\n        match.outcomeSymbol =\n          match.predictionOutcome === \"Won\" ? \"\\u2714\" : \"\\u2718\";\n        match.over25PredictionOutcomeSymbol =\n          match.over25PredictionOutcome === \"Won\" ? \"\\u2714\" : \"\\u2718\";\n        match.bttsOutcomeSymbol =\n          match.bttsOutcome === \"bttsWon\" ? \"\\u2714\" : \"\\u2718\";\n      } else {\n        match.outcomeSymbol = \"\";\n        match.over25PredictionOutcomeSymbol = \"\";\n        match.bttsOutcomeSymbol = \"\";\n      }\n\n      //STICK\n\n      if (\n        match.unroundedGoalsA - match.unroundedGoalsB > 0.65 &&\n        match.homeOdds !== 0 &&\n        match.fractionHome !== \"N/A\" &&\n        match.includeInMultis !== false &&\n        match.omit !== true\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.status !== \"notEnoughData\" &&\n          match.homeOdds < 3\n        ) {\n          predictionObject = {\n            team: `${match.homeTeam} to win`,\n            game:\n              match.status === \"complete\"\n                ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n                : match.game,\n            odds: match.fractionHome,\n            rawOdds: match.homeOdds,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            outcome: match.predictionOutcome,\n            outcomeSymbol: match.outcomeSymbol,\n            goalDifferential: parseFloat(\n              await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n            ),\n            experimentalCalc: (\n              (match.unroundedGoalsA - match.unroundedGoalsB) *\n              Math.abs(match.teamComparisonScore)\n            ).toFixed(2),\n            XGdifferentialValue: parseFloat(match.XGdifferentialValue),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formHome.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n\n            if (\n              match.unroundedGoalsA - match.unroundedGoalsB >\n              incrementValue\n            ) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      } else if (\n        match.unroundedGoalsB - match.unroundedGoalsA > 1.75 &&\n        match.awayOdds !== 0 &&\n        match.fractionAway !== \"N/A\" &&\n        match.includeInMultis !== false &&\n        match.omit !== true\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.status !== \"notEnoughData\" &&\n          match.awayOdds < 3.5\n        ) {\n          predictionObject = {\n            team: `${match.awayTeam} to win`,\n            game:\n              match.status === \"complete\"\n                ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n                : match.game,\n            rawOdds: match.awayOdds,\n            odds: match.fractionAway,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            outcome: match.predictionOutcome,\n            outcomeSymbol: match.outcomeSymbol,\n            goalDifferential:\n              parseFloat(\n                await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n              ) - 1,\n            experimentalCalc: (\n              (match.unroundedGoalsB - match.unroundedGoalsA) *\n              Math.abs(match.teamComparisonScore)\n            ).toFixed(2),\n            XGdifferentialValue: parseFloat(match.XGdifferentialValue),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formAway.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n            if (match.unroundedGoalsB - match.unroundedGoalsA > 2) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      }\n\n      if (\n        match.btts === true &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\" &&\n        match.status !== \"notEnoughData\"\n      ) {\n        bttsArray.push(match);\n      }\n      if (\n        match.unroundedGoalsA + match.unroundedGoalsB > 4 &&\n        match.goalsA + match.goalsB > 2 &&\n        match.GoalsInGamesAverageHome > 3 &&\n        match.GoalsInGamesAverageAway > 3\n      ) {\n        Over25PredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: match.homeTeam,\n          decimalOdds: match.homeDoubleChance,\n          rawOdds: match.over25Odds,\n          odds: match.over25Odds,\n          comparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.over25PredictionOutcomeSymbol,\n          doubleChanceOutcome: match.over25PredictionOutcome,\n          goalTotalUnrounded: match.unroundedGoalsA + match.unroundedGoalsB,\n        };\n        Over25Tips.push(Over25PredictionObject);\n      }\n\n      if (\n        match.XGdifferential === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        XGPredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          XGdifferentialValue: match.XGdifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        XGDiffTips.push(XGPredictionObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        XGPredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          XGdifferentialValue: match.XGdifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        XGDiffTips.push(XGPredictionObject);\n      }\n\n      if (\n        match.pointsDifferential === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        pointsDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          pointsDifferentialValue: match.pointsDifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        pointsDiffTips.push(pointsDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        pointsDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          pointsDifferentialValue: match.pointsDifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        pointsDiffTips.push(pointsDiffObject);\n      }\n\n      if (\n        match.rollingGoalDiff === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        rollingDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        rollingDiffTips.push(rollingDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        rollingDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        rollingDiffTips.push(rollingDiffObject);\n      }\n\n      if (\n        match.dangerousAttacksDiff === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        dangerousAttacksDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        dangerousAttacksDiffTips.push(dangerousAttacksDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        dangerousAttacksDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        dangerousAttacksDiffTips.push(dangerousAttacksDiffObject);\n      }\n\n      predictions.push(match);\n    })\n  );\n  ReactDOM.render(\n    <RenderAllFixtures matches={matches} result={true} bool={mock} />,\n    document.getElementById(\"FixtureContainer\")\n  );\n  await getSuccessMeasure(matches);\n  await getMultis();\n  await getNewTips(allTipsSorted);\n\n  // await renderTips();\n}\n\nasync function getMultis() {\n  allTipsSorted = allTips.sort(function (a, b) {\n    return b.goalDifferential - a.goalDifferential;\n  });\n\n  bestBets.sort(function (a, b) {\n    if (a.goalDifferential === b.goalDifferential) {\n      return b.comparisonScore - a.comparisonScore;\n    } else {\n      return b.goalDifferential > a.goalDifferential ? 1 : -1;\n    }\n  });\n\n  bttsArray.sort(function (a, b) {\n    return b.combinedBTTS - a.combinedBTTS;\n  });\n\n  Over25Tips.sort(function (a, b) {\n    return b.goalTotalUnrounded - a.goalTotalUnrounded;\n  });\n\n  XGDiffTips.sort(function (a, b) {\n    return Math.abs(b.XGdifferentialValue) - Math.abs(a.XGdifferentialValue);\n  });\n\n  pointsDiffTips.sort(function (a, b) {\n    return (\n      Math.abs(b.pointsDifferentialValue) - Math.abs(a.pointsDifferentialValue)\n    );\n  });\n\n  rollingDiffTips.sort(function (a, b) {\n    return Math.abs(b.rollingGoalDiffValue) - Math.abs(a.rollingGoalDiffValue);\n  });\n\n  dangerousAttacksDiffTips.sort(function (a, b) {\n    return (\n      Math.abs(b.dangerousAttacksDiffValue) -\n      Math.abs(a.dangerousAttacksDiffValue)\n    );\n  });\n\n  exoticArray = [];\n  gamesInExotic = 0;\n  exoticStake = 0;\n  exoticString = \"\";\n\n  switch (true) {\n    case allTips.length >= 10:\n      for (let i = 0; i < 10; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 10;\n      minimumExotic = 8;\n      exoticStake = 0.1;\n      exoticString = \"45 8-folds, 10 9-folds and 1 10-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 9:\n      for (let i = 0; i < 9; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 9;\n      minimumExotic = 7;\n      exoticStake = 0.1;\n      exoticString = \"36 7-folds, 9 8-folds and 1 9-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 8:\n      for (let i = 0; i < 8; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 8;\n      minimumExotic = 6;\n      exoticStake = 0.1;\n      exoticString = \"28 6-folds, 8 7-folds and 1 8-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 7:\n      for (let i = 0; i < 7; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 7;\n      minimumExotic = 6;\n      exoticStake = 1;\n      exoticString = \"7 6-folds and 1 7-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 6:\n      for (let i = 0; i < 6; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 6;\n      minimumExotic = 5;\n      exoticStake = 1;\n      exoticString = \"6 5-folds and 1 6-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 5:\n      for (let i = 0; i < 5; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 5;\n      minimumExotic = 4;\n      exoticStake = 1;\n      exoticString = \"5 4-folds and 1 5-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case Over25Tips.length >= 4:\n      for (let i = 0; i < 4; i++) {\n        let game = Over25Tips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 4;\n      minimumExotic = 3;\n      exoticStake = 1;\n      exoticString = \"4 3-folds and 1 4-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    default:\n      break;\n  }\n}\n\nexport function getAccumulatorPrice(priceArray) {\n  var result = 1;\n  for (var i = 0; i < priceArray.length; i++)\n    result = result * priceArray[i].rawOdds;\n\n  return result;\n}\n\nexport function getCoverBetMaxReturns(priceArray, minAccSize, stake) {\n  var total = 0;\n  combinations = 0;\n\n  for (var i = minAccSize; i <= priceArray.length; i++) {\n    var perms = getUniquePermutations(priceArray, i);\n    combinations = combinations + perms.length;\n\n    for (var j = 0; j < perms.length; j++)\n      total += getAccumulatorPrice(perms[j]) * stake;\n  }\n  return parseFloat(total.toFixed(2));\n}\n\nfunction getUniquePermutations(arr, permLength) {\n  if (arr.length <= permLength) return [arr];\n\n  var permutations = [];\n  var newArr = [];\n\n  newArr = arr.slice(0);\n\n  for (var i = 0; i < arr.length; i++) {\n    newArr = arr.slice(0);\n    newArr.splice(i, 1);\n    permutations = twoDimArrayUnion(\n      permutations,\n      getUniquePermutations(newArr, permLength)\n    );\n  }\n  return permutations;\n}\n\nfunction twoDimArrayUnion(arr1, arr2) {\n  for (var i = 0; i < arr2.length; i++) {\n    var duplicate = false;\n\n    for (var j = 0; j < arr1.length; j++)\n      if (arr1[j].length === arr2[i].length)\n        for (var k = 0; k < arr1[j].length; k++)\n          if (arr1[j][k] !== arr2[i][k]) break;\n          else if (k === arr1[j].length - 1) duplicate = true;\n\n    if (!duplicate) arr1.push(arr2[i]);\n  }\n\n  return arr1;\n}\n\nfunction NewlineText(props) {\n  const text = props.text;\n  const newText = text.split(\"\\n\").map((str) => <p>{str}</p>);\n\n  return newText;\n}\n\nasync function renderTips() {\n  if (newArray.length > 0) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <div className=\"BestPredictionsExplainer\">\n                  Add or remove a selection using the buttons below. Predictions\n                  are ordered by confidence in the outcome.\n                </div>\n                {newArray.map((tip) => (\n                  <li key={`${tip.game}acca`}>\n                    <div>\n                      {tip.team}: {tip.odds}{\" \"}\n                      <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                    </div>\n                    <div className=\"TipGame\">{tip.game}</div>\n                  </li>\n                ))}\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  No games fit the criteria\n                </h4>\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  }\n\n  if (exoticArray.length > 4) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Exotic of the day\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  <NewlineText\n                    text={`${gamesInExotic} games: ${exoticString}\\nStake per multi: ${exoticStake} units - ${combinations} combinations\\nTotal stake: ${(\n                      exoticStake * combinations\n                    ).toFixed(2)} unit(s)`}\n                  />\n                  {`Potential winnings: ${price.toFixed(2)} units`}\n                </h4>\n                {exoticArray.map((tip) => (\n                  <li key={tip.team}>\n                    {tip.team}: {tip.odds}{\" \"}\n                    <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                    <div>{tip.game}</div>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Exotic of the day\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  Not enough games for this feature\n                </h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  }\n\n  if (Over25Tips.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Over 2.5 goals tips\"}\n            element={\n              <ul className=\"LongshotPredictions\" id=\"LongshotPredictions\">\n                <h4>Over 2.5 goals</h4>\n                {Over25Tips.map((tip) => (\n                  <li key={tip.team}>\n                    {tip.game} - Odds: {tip.odds}{\" \"}\n                    <span className={`${tip.doubleChanceOutcome}`}>\n                      {tip.outcomeSymbol}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Over 2.5 goals tips\"}\n            element={\n              <ul className=\"LongshotPredictions\" id=\"LongshotPredictions\">\n                <h4>No games fit the criteria</h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  }\n\n  if (bttsArray.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"BTTS games\"}\n            element={\n              <ul className=\"BTTSGames\" id=\"BTTSGames\">\n                <h4>Games with highest chance of BTTS</h4>\n                {bttsArray.map((game) => (\n                  <li key={game.game}>\n                    {`${game.game} odds: ${game.bttsFraction}`}{\" \"}\n                    <span className={game.bttsOutcome}>\n                      {game.bttsOutcomeSymbol}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"BTTS games\"}\n            element={\n              <ul className=\"BTTSGames\" id=\"BTTSGames\">\n                <h4>No games fit the criteria</h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  }\n\n  ReactDOM.render(\n    <div>\n      <Collapsable\n        buttonText={\"XG tips\"}\n        element={\n          <Slider\n            element={\n              XGDiffTips.length > 0 ? (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>Games with greatest XG Differentials</h4>\n                  {XGDiffTips.map((tip) => (\n                    <li key={tip.game}>\n                      {tip.game} | {tip.prediction} {tip.odds}{\" \"}\n                      <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>Games with greatest XG Differentials</h4>\n                  <li key={\"noPPGDiff\"}>\n                    Sorry, no games fit this criteria today\n                  </li>\n                </ul>\n              )\n            }\n            element2={\n              pointsDiffTips.length > 0 ? (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest points per game differentials (last 6)\n                  </h4>\n                  {pointsDiffTips.map((game) => (\n                    <li key={game.game}>\n                      {game.game} | {game.prediction} {game.odds}{\" \"}\n                      <span className={game.outcome}>{game.outcomeSymbol}</span>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest points per game differentials (last 6)\n                  </h4>\n                  <li key={\"noPPGDiff\"}>\n                    Sorry, no games fit this criteria today\n                  </li>\n                </ul>\n              )\n            }\n            element3={\n              rollingDiffTips.length > 0 ? (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest rolling goal difference differentials\n                  </h4>\n                  {rollingDiffTips.map((game) => (\n                    <li key={game.game}>\n                      {game.game} | {game.prediction} {game.odds}{\" \"}\n                      <span className={game.outcome}>{game.outcomeSymbol}</span>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest rolling goal difference differentials\n                  </h4>\n                  <li key={\"noPPGDiff\"}>\n                    Sorry, no games fit this criteria today\n                  </li>\n                </ul>\n              )\n            }\n            element4={\n              dangerousAttacksDiffTips.length > 0 ? (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest average dangerous attacks differentials\n                  </h4>\n                  {dangerousAttacksDiffTips.map((game) => (\n                    <li key={game.game}>\n                      {game.game} | {game.prediction} {game.odds}{\" \"}\n                      <span className={game.outcome}>{game.outcomeSymbol}</span>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest average dangerous attacks differentials\n                  </h4>\n                  <li key={\"noPPGDiff\"}>\n                    Sorry, no games fit this criteria today\n                  </li>\n                </ul>\n              )\n            }\n            element5={\n              <div className=\"DonationButton\">\n                <h2>Help with running costs</h2>\n                <h4>\n                  Monthly costs are rising and each donation helps keep XG\n                  Tipping free to use\n                </h4>\n                <StyledKofiButton buttonText=\"No sign up donation\" />\n              </div>\n            }\n          ></Slider>\n        }\n      ></Collapsable>\n      <div className=\"FiltersSelected\">\n        <h4>Filters selected:</h4>\n        <ul className=\"FiltersSelectedList\">\n          <li>Minimum goal difference spread: {minimumGD}</li>\n          <li>\n            Minimum goal difference spread (home or away only): {minimumGDHorA}\n          </li>\n          <li>Minimum XG difference spread: {minimumXG}</li>\n          <li>Minimum PPG difference spread: {minimumLast6}</li>\n          <li>\n            Odds range: {rangeValue[0]} - {rangeValue[1]}\n          </li>\n        </ul>\n      </div>\n    </div>,\n    document.getElementById(\"insights\")\n  );\n}\n","import React, { useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Collapsable from \"../components/CollapsableElement\";\n// import TeamOfTheWeek from \"../components/TeamOfTheWeek\";\n// import TeamOfTheSeason from \"../components/TeamOfTheSeason\";\n\nexport var toggleState = false;\nexport var setIsOff = false;\n\nconst upArrow = \"\\u{25B2}\";\n\nconst StyledTableCell2 = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"rgba(226, 226, 226, 1)\",\n    color: \"white\",\n    padding: \"0.35em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    textAlign: \"left\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    fontSize: \"1.9em\",\n    textAlign: \"left\",\n    fontFamily: \"inherit\",\n    padding: \"0.5em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"#030061\",\n  },\n}))(TableCell);\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"white\",\n    color: \"#030061\",\n    padding: \"0.5em\",\n    paddingTop: \"1em\",\n    paddingBottom: \"1em\",\n    textAlign: \"center\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    // backgroundColor: \"#030061\",\n    fontSize: \"1.9em\",\n    textAlign: \"center\",\n    fontFamily: \"inherit\",\n    padding: \"0.35em\",\n    paddingTop: \"1em\",\n    paddingBottom: \"1em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"#030061\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#rgba(226, 226, 226, 0.424)\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#rgba(226, 226, 226, 1)\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\nfunction styleForm(formIndicator) {\n  let className;\n  if (formIndicator === \"W\") {\n    className = \"winLeague\";\n  } else if (formIndicator === \"D\") {\n    className = \"drawLeague\";\n  } else if (formIndicator === \"L\") {\n    className = \"lossLeague\";\n  }\n  return className;\n}\n\nexport default function LeagueTable(props) {\n  [toggleState, setIsOff] = useState(false);\n\n  let rows = props.Teams.map((team, i) => (\n    <StyledTableRow key={`${props.Key}row${i}`}>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${i + 1}`}\n      </StyledTableCell>\n      <StyledTableCell2 component=\"th\" scope=\"row\" style={{ width: \"15em\" }}>\n        {`${team.Name}`}\n      </StyledTableCell2>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Played}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Wins}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Draws}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Losses}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.For}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Against}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.GoalDifference}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Points}`}\n      </StyledTableCell>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ textAlign: \"center\" }}\n      >\n        <span className={styleForm(team.Form[0])}>\n          {team.Form[0] !== undefined ? team.Form[0] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[1])}>\n          {team.Form[1] !== undefined ? team.Form[1] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[2])}>\n          {team.Form[2] !== undefined ? team.Form[2] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[3])}>\n          {team.Form[3] !== undefined ? team.Form[3] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[4])}>\n          {team.Form[4] !== undefined ? team.Form[4] : \"\"}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  ));\n\n  const leagueResults = [];\n  let singleResult;\n  if (props.Results) {\n    props.Results.forEach((result) => {\n      singleResult = (\n        <div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_xg}</span>\n            <span className=\"column\">XG</span>\n            <span className=\"column\">{result.team_b_xg}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shots}</span>\n            <span className=\"column\">Shots</span>\n            <span className=\"column\">{result.team_b_shots}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shotsOnTarget}</span>\n            <span className=\"column\">SOT</span>\n            <span className=\"column\">{result.team_b_shotsOnTarget}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_dangerous_attacks}</span>\n            <span className=\"column\">Dangerous Attacks</span>\n            <span className=\"column\">{result.team_b_dangerous_attacks}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_possession}%</span>\n            <span className=\"column\">Possession</span>\n            <span className=\"column\">{result.team_b_possession}%</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_red_cards}</span>\n            <span className=\"column\">Red cards</span>\n            <span className=\"column\">{result.team_b_red_cards}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.odds_ft_1}</span>\n            <span className=\"column\">Odds (pre-match)</span>\n            <span className=\"column\">{result.odds_ft_2}</span>\n          </div>\n        </div>\n      );\n\n      leagueResults.push(\n        <Collapsable\n          classNameButton=\"ResultButton\"\n          buttonText={\n            <div className=\"ResultRowOverview\">\n              <div className=\"columnOverviewHome\">{result.home_name}</div>\n              <span className=\"columnOverviewScore\">\n                {result.homeGoalCount} : {result.awayGoalCount}\n              </span>\n              <div className=\"columnOverviewAway\">{result.away_name}</div>\n            </div>\n          }\n          element={singleResult}\n        />\n      );\n    });\n  }\n\n  const leagueResultsOlder = [];\n  if (props.LastWeeksResults) {\n    props.LastWeeksResults.forEach((result) => {\n      singleResult = (\n        <div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_xg}</span>\n            <span className=\"column\">XG</span>\n            <span className=\"column\">{result.team_b_xg}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shots}</span>\n            <span className=\"column\">Shots</span>\n            <span className=\"column\">{result.team_b_shots}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shotsOnTarget}</span>\n            <span className=\"column\">SOT</span>\n            <span className=\"column\">{result.team_b_shotsOnTarget}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_dangerous_attacks}</span>\n            <span className=\"column\">Dangerous Attacks</span>\n            <span className=\"column\">{result.team_b_dangerous_attacks}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_possession}</span>\n            <span className=\"column\">Possession</span>\n            <span className=\"column\">{result.team_b_possession}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_red_cards}</span>\n            <span className=\"column\">Red cards</span>\n            <span className=\"column\">{result.team_b_red_cards}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.odds_ft_1}</span>\n            <span className=\"column\">Odds (pre-match)</span>\n            <span className=\"column\">{result.odds_ft_2}</span>\n          </div>\n        </div>\n      );\n\n      leagueResultsOlder.push(\n        <Collapsable\n          classNameButton=\"ResultButton\"\n          buttonText={\n            <div className=\"ResultRowOverview\">\n              <div className=\"columnOverviewHome\">{result.home_name}</div>\n              <span className=\"columnOverviewScore\">\n                {result.homeGoalCount} : {result.awayGoalCount}\n              </span>\n              <div className=\"columnOverviewAway\">{result.away_name}</div>\n            </div>\n          }\n          element={singleResult}\n        />\n      );\n    });\n  }\n\n  function getTopScorersTeam(id) {\n    let found = props.Teams.find((team) => team.ID === id);\n    return found.Name;\n  }\n\n  async function sorted(league, value, order) {\n    let sortedByForm;\n    if (order === \"desc\") {\n      sortedByForm = league.sort((a, b) => b[value] - a[value]);\n    } else {\n      sortedByForm = league.sort((a, b) => a[value] - b[value]);\n    }\n    setIsOff(!toggleState);\n    return sortedByForm;\n  }\n\n  if (\n    props.GamesPlayed > 3 &&\n    props.Teams[0].LeagueID !== 7956 &&\n    props.Teams[0].LeagueID !== 6969 &&\n    props.Teams[0].LeagueID !== 11084\n  ) {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table\n            className=\"Table\"\n            aria-label=\"customized table\"\n            key={props.Key}\n            style={{ marginTop: \"2em\", marginBottom: \"1em\" }}\n          >\n            <TableHead>\n              <TableRow>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"Points\", \"desc\")}\n                  >\n                    Pts {upArrow}\n                  </button>\n                </td>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"LastXPoints\", \"desc\")}\n                  >\n                    Last 5 {upArrow}\n                  </button>\n                </td>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n          <h5>{`${props.mostRecentGameweek} results`}</h5>\n          <div className=\"ResultsList\" id=\"ResultsList\">\n            <ul>{leagueResults}</ul>\n          </div>\n          <div className=\"LeagueStatisticsHeader\">League Statistics</div>\n          {/* <TeamOfTheWeek></TeamOfTheWeek>\n          <TeamOfTheSeason></TeamOfTheSeason> */}\n          <div className=\"LeagueStatistics\">\n            <ul className=\"LeagueStatsColumn\">\n              <li>Average home goals: {props.Stats.seasonAVG_home}</li>\n              <li>Average away goals: {props.Stats.seasonAVG_away}</li>\n              <li>BTTS: {props.Stats.seasonBTTSPercentage}%</li>\n              <li>\n                Over 0.5 goals: {props.Stats.seasonOver05Percentage_overall}%\n              </li>\n              <li>\n                Over 1.5 goals: {props.Stats.seasonOver15Percentage_overall}%\n              </li>\n              <li>\n                Over 2.5 goals: {props.Stats.seasonOver25Percentage_overall}%\n              </li>\n              <li>\n                Over 3.5 goals: {props.Stats.seasonOver35Percentage_overall}%\n              </li>\n              <li>\n                Over 4.5 goals: {props.Stats.seasonOver45Percentage_overall}%\n              </li>\n            </ul>\n            <ul className=\"LeagueStatsColumn\">\n              <li>\n                Over 7.5 corners: {props.Stats.over75CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 8.5 corners: {props.Stats.over85CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 9.5 corners: {props.Stats.over95CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 10.5 corners:{\" \"}\n                {props.Stats.over105CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 11.5 corners:{\" \"}\n                {props.Stats.over115CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 12.5 corners:{\" \"}\n                {props.Stats.over125CornersPercentage_overall}%\n              </li>\n              <li>Corners average: {props.Stats.cornersAVG_overall}</li>\n              <li>Cards average: {props.Stats.cardsAVG_overall}</li>\n            </ul>\n            <ul className=\"TopScorersColumn\">\n              <h4>Top scorers</h4>\n              <li>\n                {props.Stats.top_scorers[0].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[0].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[0].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[1].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[1].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[1].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[2].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[2].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[2].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[3].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[3].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[3].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[4].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[4].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[4].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[5].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[5].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[5].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[6].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[6].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[6].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[7].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[7].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[7].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[8].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[8].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[8].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[9].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[9].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[9].goals_overall}\n              </li>\n            </ul>\n          </div>\n        </TableContainer>\n      );\n    }\n  } else if (props.Teams[0].LeagueID === 4340) {\n    return null;\n  } else {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table aria-label=\"customized table\" key={props.Key}>\n            <TableHead>\n              <TableRow>\n                <button\n                  className=\"SortedColumn\"\n                  style={{ textAlign: \"center\" }}\n                  onClick={() => sorted(props.Teams, \"Position\")}\n                >\n                  {upArrow}\n                </button>{\" \"}\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <StyledTableCell>Pts</StyledTableCell>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"LastXPoints\", \"desc\")}\n                  >\n                    Last 5 {upArrow}\n                  </button>\n                </td>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n        </TableContainer>\n      );\n    }\n  }\n}\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { orderedLeagues } from \"../App\";\nimport { getForm } from \"./getForm\";\nimport { Fixture } from \"../components/Fixture\";\nimport { Button } from \"../components/Button\";\nimport { Slide } from \"../components/Slider\";\nimport { getScorePrediction } from \"../logic/getScorePredictions\";\nimport { ThreeDots } from \"react-loading-icons\";\nimport { selectedOdds } from \"../components/OddsRadio\";\nimport LeagueTable from \"../components/LeagueTable\";\nimport { getPointsFromLastX } from \"../logic/getScorePredictions\";\nimport SlideDiff from \"../components/SliderDiff\";\nimport Collapsable from \"../components/CollapsableElement\";\n\nvar oddslib = require(\"oddslib\");\n\n// require(\"dotenv\").config();\n\nvar fixtureResponse;\nvar fixtureArray = [];\nexport var matches = [];\nexport var resultedMatches = [];\nexport let arrayOfGames = [];\n\nvar league;\nvar leagueID;\nvar leagueGames = [];\nexport var leagueArray = [];\nvar leagueIdArray = [];\nexport var leagueStatsArray = [];\nexport let leagueInstance;\nexport let groupInstance;\nexport let allLeagueResultsArrayOfObjects = [];\nvar lastThreeFormHome;\nvar lastThreeFormAway;\nvar lastFiveFormHome;\nvar lastFiveFormAway;\nvar lastSixFormHome;\nvar lastSixFormAway;\nvar lastTenFormHome;\nvar lastTenFormAway;\nvar leagueOrAll;\nvar formRunHome;\nvar formRunAway;\nlet WDLinLeagueHome;\nlet WDLinLeagueAway;\nlet HomeAverageGoals;\nlet homeAverageGoals;\nlet HomeAverageConceded;\nlet homeAverageConceded;\nlet AwayAverageGoals;\nlet awayAverageGoals;\nlet AwayAverageConceded;\nlet awayAverageConceded;\n\n// export var [currentDay, month, year] = new Date()\n//   .toLocaleDateString(\"en-US\", { timeZone: \"Europe/London\" })\n//   .split(\"/\");\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nexport let allForm = [];\nexport let tableArray = [];\nexport let worldCupArray = [];\ngroupInstance = [];\nleagueInstance = [];\n\nasync function convertTimestampForSofaScore(timestamp) {\n  let newDate = new Date(timestamp);\n\n  let year = newDate.getFullYear();\n  let month = String(newDate.getMonth() + 1).padStart(2, '0'); // Adding 1 to month because it is zero-based\n  let day = String(newDate.getDate()).padStart(2, '0');\n  \n  let converted = `${year}-${month}-${day}`;\n\n  return converted;\n}\n\nasync function convertTimestamp(timestamp) {\n  let newDate = new Date(timestamp);\n  let [day, month, year] = newDate.toLocaleDateString(\"en-US\").split(\"/\");\n\n  let converted = `${year}-${day}-${month}`;\n\n  return converted;\n}\n\n\nexport async function generateTables(a, leagueIdArray, allResults) {\n  // leagueIdArray = [];\n  tableArray = [];\n  worldCupArray = [];\n  let i = 0;\n  leagueArray.forEach(function (league) {\n    let currentLeagueId = leagueIdArray[i];\n    i++;\n    leagueInstance = [];\n    //Skip MLS which has a weird format\n    if (\n      !league.data.specific_tables[0].groups &&\n      currentLeagueId !== 6969 &&\n      league.data.specific_tables[0].table\n    ) {\n      for (\n        let index = 0;\n        index < league.data.specific_tables[0].table.length;\n        index++\n      ) {\n        let currentTeam = league.data.specific_tables[0].table[index];\n        let last5;\n        if (currentTeam.wdl_record.length < 5) {\n          last5 = currentTeam.wdl_record\n            .slice(`-${currentTeam.wdl_record.length}`)\n            .toUpperCase();\n        } else {\n          last5 = currentTeam.wdl_record.slice(-5).toUpperCase();\n        }\n\n        const team = {\n          LeagueID: currentLeagueId,\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          ID: currentTeam.id,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: last5,\n          LastXPoints: getPointsFromLastX(last5.split(\"\")),\n          Points: currentTeam.points,\n          wdl: currentTeam.wdl_record,\n          seasonGoals: currentTeam.seasonGoals,\n          seasonConceded: currentTeam.seasonConceded,\n        };\n        leagueInstance.push(team);\n      }\n      tableArray.push({ id: currentLeagueId, table: leagueInstance });\n    } else if (currentLeagueId === 11084) {\n      // for (let x = 0; x < league.data.specific_tables[0].groups.length; x++) {\n      // for (\n      //   let index = 0;\n      //   index < league.data.specific_tables[0].groups[x].table.length;\n      //   index++\n      // )\n      league.data.specific_tables[0].groups.forEach((group) => {\n        leagueInstance = [];\n        for (let index = 0; index < group.table.length; index++) {\n          let currentTeam = group.table[index];\n          let last5 = \"N/A\";\n          const team = {\n            LeagueID: currentLeagueId,\n            Position: index + 1,\n            Name: currentTeam.cleanName,\n            ID: currentTeam.id,\n            Played: currentTeam.matchesPlayed,\n            Wins: currentTeam.seasonWins_overall,\n            Draws: currentTeam.seasonDraws_overall,\n            Losses: currentTeam.seasonLosses_overall,\n            For: currentTeam.seasonGoals,\n            Against:\n              currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n            GoalDifference: currentTeam.seasonGoalDifference,\n            Form: last5,\n            LastXPoints: getPointsFromLastX(last5.split(\"\")),\n            Points: currentTeam.points,\n            wdl: currentTeam.wdl_record,\n            seasonGoals: currentTeam.seasonGoals,\n            seasonConceded: currentTeam.seasonConceded,\n          };\n          leagueInstance.push(team);\n        }\n        worldCupArray.push({\n          group: group.name,\n          table: leagueInstance,\n        });\n      });\n    } else if (league.data.league_table === null) {\n      for (\n        let index = 0;\n        index < league.data.all_matches_table_overall.length;\n        index++\n      ) {\n        let currentTeam = league.data.all_matches_table_overall[index];\n        let last5 = \"N/A\";\n        const team = {\n          LeagueID: currentLeagueId,\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          ID: currentTeam.id,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: last5,\n          LastXPoints: getPointsFromLastX(last5.split(\"\")),\n          Points: currentTeam.points,\n          wdl: currentTeam.wdl_record,\n          seasonGoals: currentTeam.seasonGoals,\n          seasonConceded: currentTeam.seasonConceded,\n        };\n        leagueInstance.push(team);\n      }\n\n      tableArray.push({ id: currentLeagueId, table: leagueInstance });\n    }\n  });\n}\n\nexport async function renderTable(index, results, id) {\n  let league;\n  //World cup table rendering\n\n  // let mostRecentGame = results.fixtures.pop();\n  let mostRecentGame = results.fixtures.pop();\n\n  let mostRecentGameweek = \"Latest\";\n\n  const gameweeksResults = results.fixtures.filter(\n    (games) => games.game_week === mostRecentGame.game_week\n  );\n\n  // const lastGameweeksResults = results.fixtures.filter(\n  //   (games) => games.game_week === mostRecentGameweek - 1\n  // );\n\n  const leagueTable = tableArray.filter((table) => table.id === id);\n\n  league = leagueTable[0].table;\n\n  let statistics;\n  let leagueStatistics = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}leagueStats/${id}`\n  );\n  await leagueStatistics.json().then((stats) => {\n    statistics = stats.data;\n  });\n\n  if (league !== undefined) {\n    ReactDOM.render(\n      <LeagueTable\n        Teams={league}\n        Stats={statistics}\n        Key={`League${index}`}\n        GamesPlayed={statistics.game_week}\n        Results={gameweeksResults}\n        mostRecentGameweek={mostRecentGameweek}\n      />,\n      document.getElementById(`leagueName${id}`)\n    );\n  }\n}\n\nasync function createFixture(match, result, mockBool) {\n  let roundedHomeOdds;\n  let roundedAwayOdds;\n  let roundedBTTSOdds;\n  let homeFraction;\n  let awayFraction;\n  let bttsFraction;\n\n  if (selectedOdds === \"Fractional odds\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      roundedHomeOdds = (Math.round(match.homeOdds * 5) / 5).toFixed(1);\n      roundedAwayOdds = (Math.round(match.awayOdds * 5) / 5).toFixed(1);\n\n      if (roundedHomeOdds < 1.1) {\n        roundedHomeOdds = 1.1;\n      }\n      if (roundedAwayOdds < 1.1) {\n        roundedAwayOdds = 1.1;\n      }\n\n      if (match.homeOdds === 0.1 && match.awayOdds === 0.1) {\n        match.homeOdds = 3;\n        roundedHomeOdds = 3;\n        match.awayOdds = 3;\n        roundedAwayOdds = 3;\n      }\n\n      try {\n        homeFraction = oddslib\n          .from(\"decimal\", roundedHomeOdds)\n          .to(\"fractional\", { precision: 1 });\n        awayFraction = oddslib\n          .from(\"decimal\", roundedAwayOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      roundedBTTSOdds = (Math.round(match.bttsOdds * 5) / 5).toFixed(1);\n\n      if (roundedBTTSOdds < 1.1) {\n        roundedBTTSOdds = 1.1;\n      }\n\n      try {\n        bttsFraction = oddslib\n          .from(\"decimal\", roundedBTTSOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  } else if (selectedOdds === \"Decimal odds\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      homeFraction = match.homeOdds;\n      awayFraction = match.awayOdds;\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      bttsFraction = match.bttsOdds;\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  }\n\n  match.omit = false;\n  match.homeTeamWinsPercentage = match.homeTeamWinPercentage;\n  match.homeTeamLossesPercentage = match.homeTeamLossPercentage;\n  match.homeTeamDrawsPercentage = match.homeTeamDrawPercentage;\n\n  match.awayTeamWinsPercentage = match.awayTeamWinPercentage;\n  match.awayTeamLossesPercentage = match.awayTeamLossPercentage;\n  match.awayTeamDrawsPercentage = match.awayTeamDrawPercentage;\n  match.fractionHome = homeFraction;\n  match.fractionAway = awayFraction;\n\n  match.bttsFraction = bttsFraction;\n\n  match.game = match.homeTeam + \" v \" + match.awayTeam;\n\n  // ReactDOM.render(\n  //   <Fixture\n  //     fixtures={matches}\n  //     result={result}\n  //     mock={mockBool}\n  //     className={\"individualFixture\"}\n  //   />,\n  //   document.getElementById(\"FixtureContainer\")\n  // );\n}\n\nexport function RenderAllFixtures(props) {\n  return (\n    <Fixture\n      fixtures={props.matches}\n      result={props.result}\n      mock={false}\n      className={\"individualFixture\"}\n    />\n  );\n}\n//     document.getElementById(\"FixtureContainer\")\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nlet isFunctionRunning = false;\n\nexport async function generateFixtures(\n  day,\n  date,\n  selectedOdds,\n  footyStatsFormattedDate,\n  current,\n  todaysDate,\n  dateSS\n) {\n  if (!isFunctionRunning) {\n    isFunctionRunning = true;\n    // const randomInt = Math.random() * 10\n\n    // if(randomInt >= 7){\n    //   alert(\"XGTipping is now serving over 2000 users a month,1 relying on donations to cover increasing running costs. If you can afford to do so and like what we do, please, help us stay subscription fee today by tapping to Donation button at the bottom of the page\")\n    // }\n\n    ReactDOM.render(\n      <div>\n        <div className=\"LoadingText\">\n          Loading all league, fixture & form data, please be patient...\n        </div>\n        <ThreeDots height=\"3em\" fill=\"#030061\" />\n      </div>,\n      document.getElementById(\"Loading\")\n    );\n\n    //cleanup if different day is selected\n    ReactDOM.render(\n      <div></div>,\n      document.getElementById(\"GeneratePredictions\")\n    );\n    ReactDOM.render(<div></div>, document.getElementById(\"successMeasure2\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"bestPredictions\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"exoticOfTheDay\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"insights\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"longShots\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"BTTS\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"draws\"));\n\n    const url = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${footyStatsFormattedDate}`;\n    const formUrl = `${process.env.REACT_APP_EXPRESS_SERVER}form/${date}`;\n\n    matches = [];\n    fixtureArray = [];\n\n    league = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${todaysDate}`\n    );\n\n    ReactDOM.render(<div></div>, document.getElementById(\"FixtureContainer\"));\n\n    fixtureResponse = await fetch(url);\n\n    await fixtureResponse.json().then((fixtures) => {\n      fixtureArray = Array.from(fixtures.data);\n    });\n\n    let form;\n    let formArray = [];\n    allForm = [];\n    var isFormStored;\n    var isStoredLocally;\n    var leaguesStored = false;\n    let storedForm = await fetch(formUrl);\n    if (storedForm.status === 201 || storedForm.status === 200) {\n      await storedForm.json().then((form) => {\n        formArray = Array.from(form.allForm);\n        isFormStored = true;\n        isStoredLocally = true;\n        allForm = formArray;\n      });\n    } else {\n      isFormStored = false;\n      isStoredLocally = false;\n    }\n\n    leagueIdArray = [];\n    for (let i = 0; i < orderedLeagues.length; i++) {\n      leagueID = orderedLeagues[i].element.id;\n      leagueIdArray.push(leagueID);\n    }\n\n    var leaguePositions = [];\n    leagueArray = [];\n\n    let allLeagueResults;\n\n    allLeagueResults = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}results`\n    );\n\n    if(league.status === 200){\n      leaguesStored = true;\n      console.log(\"leagues fetched from s3\")\n    }\n\n    if (league.status === 200 && allLeagueResults.status === 201) {\n      console.log(\"Not fetching leagues\");\n      await league.json().then((leagues) => {\n        leagueArray = Array.from(leagues.leagueArray);\n      });\n      updateResults(false);\n\n      await allLeagueResults.json().then((allGames) => {\n        allLeagueResultsArrayOfObjects = Array.from(allGames);\n      });\n\n      leaguesStored = true;\n      generateTables(\n        leagueArray,\n        leagueIdArray,\n        allLeagueResultsArrayOfObjects\n      );\n      arrayOfGames = []\n\n      const sofaScore = await fetch(`https://www.sofascore.com/api/v1/sport/football/scheduled-events/${dateSS}`)\n      await sofaScore.json().then((games) => {\n        games.events.forEach((game) => {\n          arrayOfGames.push({\n            homeTeam: game.homeTeam.name,\n            awayTeam: game.awayTeam.name,\n            id: game.id,\n            time: game.startTimestamp,\n            homeGoals: game.homeScore.display != undefined ? game.homeScore.display : \"-\",\n            awayGoals: game.awayScore.display != undefined ? game.awayScore.display : \"-\"\n          })\n        })\n      })\n\n      const sofaScoreLeagues = await fetch('')\n    } else {\n      allLeagueResultsArrayOfObjects = [];\n      console.log(\"Fetching leagues\");\n      for (let i = 0; i < orderedLeagues.length; i++) {\n        league = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}tables/${orderedLeagues[i].element.id}/${todaysDate}`\n        );\n        // eslint-disable-next-line no-loop-func\n        await league.json().then((table) => {\n          leagueArray.push(table);\n        });\n        leaguesStored = false;\n      }\n\n      //set variable for date X amount of days in the past and use that to filter the results\n\n      let startDate = (new Date().getTime() / 1000).toFixed(0);\n      // deduct 3 months\n      let targetDate = startDate - 23778463;\n\n      for (const orderedLeague of orderedLeagues) {\n        let fixtures = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${orderedLeague.element.id}`\n        );\n\n        let games = await fixtures.json();\n        let gamesFiltered;\n        let gamesShortened;\n        if (games.pager.current_page < games.pager.max_page) {\n          const page2 = await fetch(\n            `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${orderedLeague.element.id}&page=2`\n          );\n          let page2Data = await page2.json();\n\n          const gamesConcat = games.data.concat(page2Data.data);\n          const gamesConcatFiltered = gamesConcat.filter((game) => game.status === \"complete\");\n\n          let mostRecentResults = gamesConcatFiltered.filter(\n            (game) => game.date_unix > targetDate\n          );\n          let sorted = mostRecentResults.sort((a, b) => a.date_unix - b.date_unix);\n          gamesShortened = sorted.slice(-600);\n          gamesFiltered = gamesShortened;\n        } else {\n\n          gamesFiltered = games.data.filter(\n            (game) => game.status === \"complete\"\n          );\n\n          if (current) {\n            let mostRecentResults = gamesFiltered.filter(\n              (game) => game.date_unix > targetDate\n            );\n            gamesFiltered = mostRecentResults.slice(-600);\n          }\n        }\n\n        // let mostRecentResults = gamesFiltered.filter(\n        //   (game) => game.date_unix > targetDate\n        // );\n\n        const shortenedResults = gamesFiltered.map(\n          ({\n            home_name,\n            away_name,\n            homeGoalCount,\n            awayGoalCount,\n            date_unix,\n            team_a_xg,\n            team_b_xg,\n            odds_ft_1,\n            odds_ft_2,\n            team_a_shots,\n            team_b_shots,\n            team_a_corners,\n            team_b_corners,\n            team_a_shotsOnTarget,\n            team_b_shotsOnTarget,\n            team_a_red_cards,\n            team_b_red_cards,\n            team_a_possession,\n            team_b_possession,\n            team_a_dangerous_attacks,\n            team_b_dangerous_attacks,\n            pre_match_teamA_overall_ppg,\n            pre_match_teamB_overall_ppg,\n            game_week,\n          }) => ({\n            home_name,\n            away_name,\n            homeGoalCount,\n            awayGoalCount,\n            date_unix,\n            team_a_xg,\n            team_b_xg,\n            odds_ft_1,\n            odds_ft_2,\n            team_a_shots,\n            team_b_shots,\n            team_a_corners,\n            team_b_corners,\n            team_a_shotsOnTarget,\n            team_b_shotsOnTarget,\n            team_a_red_cards,\n            team_b_red_cards,\n            team_a_possession,\n            team_b_possession,\n            team_a_dangerous_attacks,\n            team_b_dangerous_attacks,\n            pre_match_teamA_overall_ppg,\n            pre_match_teamB_overall_ppg,\n            game_week,\n          })\n        );\n\n        let leagueObj = {\n          // leagueObject[orderedLeague] = {\n          name: orderedLeague.name,\n          id: orderedLeague.element.id,\n          fixtures: shortenedResults,\n        };\n\n        allLeagueResultsArrayOfObjects.push(leagueObj);\n      }\n      updateResults(true);\n      generateTables(\n        leagueArray,\n        leagueIdArray,\n        allLeagueResultsArrayOfObjects\n      );\n    }\n\n    let teamPositionPrefix;\n\n    async function getPrefix(position) {\n      switch (position) {\n        case 1:\n        case 21:\n        case 31:\n        case 41:\n          teamPositionPrefix = \"st\";\n          break;\n        case 2:\n        case 22:\n        case 32:\n        case 42:\n          teamPositionPrefix = \"nd\";\n          break;\n        case 3:\n        case 23:\n        case 33:\n        case 43:\n          teamPositionPrefix = \"rd\";\n          break;\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18:\n        case 19:\n        case 20:\n        case 24:\n        case 25:\n        case 26:\n        case 27:\n        case 28:\n        case 29:\n        case 30:\n        case 34:\n        case 35:\n        case 36:\n        case 37:\n        case 38:\n        case 39:\n        case 40:\n        case 44:\n        case 45:\n        case 46:\n        case 47:\n        case 48:\n          teamPositionPrefix = \"th\";\n          break;\n        default:\n          break;\n      }\n      return teamPositionPrefix;\n    }\n\n    for (let i = 0; i < leagueArray.length; i++) {\n      let leagueInstance;\n      let homeLeague;\n      let awayLeague;\n\n      if (leagueArray[i].data.league_table !== null) {\n        leagueInstance = leagueArray[i].data.league_table;\n        homeLeague = leagueArray[i].data.all_matches_table_home;\n        awayLeague = leagueArray[i].data.all_matches_table_away;\n      } else {\n        leagueInstance = leagueArray[i].data.all_matches_table_overall;\n        homeLeague = leagueArray[i].data.all_matches_table_home;\n        awayLeague = leagueArray[i].data.all_matches_table_away;\n      }\n\n      for (let x = 0; x < leagueInstance.length; x++) {\n        let regularSeason = leagueArray[i].data.specific_tables.find(\n          (season) =>\n            season.round === \"Regular Season\" ||\n            season.round === \"2024\" ||\n            season.round === \"2024/2025\" ||\n            season.round === \"Apertura\" ||\n            season.round === \"1st Phase\"\n          // season.round === \"North\" ||\n          // season.round === \"South\"\n        );\n        let string;\n\n        if (regularSeason !== undefined && regularSeason.table) {\n          string = regularSeason.table[x];\n          homeLeague = leagueArray[i].data.all_matches_table_home;\n          awayLeague = leagueArray[i].data.all_matches_table_away;\n        } else {\n          string = leagueArray[i].data.all_matches_table_overall[x];\n          homeLeague = leagueArray[i].data.all_matches_table_home;\n          awayLeague = leagueArray[i].data.all_matches_table_away;\n        }\n\n        let stringHome = homeLeague[x];\n        let stringAway = awayLeague[x];\n\n\n        if(string){\n          leaguePositions.push({\n            name: string.cleanName,\n            position: x + 1,\n            rawPosition: x + 1,\n            homeFormName: stringHome ? stringHome.cleanName : string.cleanName,\n            awayFormName: stringAway ? stringAway.cleanName : string.cleanName,\n            homeSeasonWinPercentage: stringHome\n              ? stringHome.seasonWins\n              : string.seasonWins,\n            awaySeasonWinPercentage: stringAway\n              ? stringAway.seasonWins\n              : string.seasonWins,\n            homeSeasonLossPercentage: stringHome\n              ? stringHome.seasonLosses_home\n              : string.seasonLosses_home,\n            awaySeasonLossPercentage: stringAway\n              ? stringAway.seasonLosses_away\n              : string.seasonLosses_away,\n            homeSeasonDrawPercentage: stringHome\n              ? stringHome.seasonDraws\n              : string.seasonDraws,\n            awaySeasonDrawPercentage: stringAway\n              ? stringAway.seasonDraws\n              : string.seasonDraws,\n            homeSeasonMatchesPlayed: stringHome\n              ? stringHome.matchesPlayed\n              : string.matchesPlayed,\n            awaySeasonMatchesPlayed: stringAway\n              ? stringAway.matchesPlayed\n              : string.matchesPlayed,\n            ppg: string.points / string.matchesPlayed,\n            wdl: string.wdl_record ? string.wdl_record : \"\",\n            played: string.matchesPlayed,\n            seasonGoals: string.seasonGoals,\n            seasonConceded: string.seasonConceded,\n          });\n        }\n      }\n    }\n\n    let previousLeagueName;\n\n    for (let i = 0; i < orderedLeagues.length; i++) {\n      leagueID = orderedLeagues[i].element.id;\n      leagueGames = fixtureArray.filter(\n        (game) => game.competition_id === orderedLeagues[i].element.id\n      );\n\n      for (const fixture of leagueGames) {\n        const unixTimestamp = fixture.date_unix;\n        const milliseconds = unixTimestamp * 1000;\n        const dateObject = new Date(milliseconds);\n\n        let match = {};\n        if (orderedLeagues[i].name !== previousLeagueName) {\n          match.leagueName = orderedLeagues[i].name;\n          match.leagueDesc = orderedLeagues[i].name;\n          match.leagueIndex = i;\n          match.leagueID = leagueID;\n        } else {\n          match.leagueName = null;\n          match.leagueDesc = orderedLeagues[i].name;\n          match.leagueIndex = i;\n          match.leagueID = leagueID;\n        }\n        match.id = fixture.id;\n        match.competition_id = fixture.competition_id;\n        match.date = fixture.date_unix;\n        match.time = dateObject.toLocaleString(\"en-GB\", {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n        });\n        match.homeTeam = fixture.home_name;\n        match.awayTeam = fixture.away_name;\n\n        match.homeOdds = +fixture.odds_ft_1.toFixed(2);\n        match.awayOdds = +fixture.odds_ft_2.toFixed(2);\n        match.drawOdds = +fixture.odds_ft_x.toFixed(2);\n        match.homeDoubleChance = fixture.odds_doublechance_1x;\n        match.awayDoubleChance = fixture.odds_doublechance_x2;\n        match.bttsOdds = fixture.odds_btts_yes;\n        match.homeId = fixture.homeID;\n        match.awayId = fixture.awayID;\n        match.form = [];\n        match.homeTeamInfo = [];\n        match.awayTeamInfo = [];\n        match.btts = false;\n\n        previousLeagueName = orderedLeagues[i].name;\n\n        let homeTeaminLeague;\n        let awayTeaminLeague;\n        let teamPositionHome;\n        let teamPositionHomeTable;\n        let teamPositionAwayTable;\n        let homeTeamWinPercentageHome;\n        let awayTeamWinPercentageAway;\n        let homeTeamLossPercentageHome;\n        let awayTeamLossPercentageAway;\n        let homeTeamDrawPercentageHome;\n        let awayTeamDrawPercentageAway;\n        let teamPositionAway;\n        let homePrefix;\n        let homePrefixHomeTable;\n        let awayPrefix;\n        let awayPrefixAwayTable;\n        let homeSeasonPPG;\n        let awaySeasonPPG;\n\n        try {\n          homeTeaminLeague = leaguePositions.find(\n            (team) => team.name === match.homeTeam\n          );\n\n          let homeTeaminHomeLeague = leaguePositions.find(\n            (team) => team.homeFormName === match.homeTeam\n          );\n\n          teamPositionHome = homeTeaminLeague.position;\n          teamPositionHomeTable = homeTeaminHomeLeague.position;\n\n          WDLinLeagueHome = Array.from(homeTeaminLeague.wdl.toUpperCase());\n          HomeAverageGoals =\n            homeTeaminLeague.seasonGoals / homeTeaminLeague.played;\n          HomeAverageConceded =\n            homeTeaminLeague.seasonConceded / homeTeaminLeague.played;\n\n          homeTeamWinPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonWinPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homeTeamLossPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonLossPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homeTeamDrawPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonDrawPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homePrefix = await getPrefix(teamPositionHome);\n          homePrefixHomeTable = await getPrefix(teamPositionHomeTable);\n\n          homeSeasonPPG = homeTeaminLeague.ppg.toFixed(2);\n        } catch (error) {\n          console.log(error);\n          teamPositionHome = \"N/A\";\n          homePrefix = \"\";\n          homePrefixHomeTable = \"\";\n          homeSeasonPPG = \"N/A\";\n          homeTeaminLeague = {\n            rawPosition: \"N/A\",\n          };\n          WDLinLeagueHome = [];\n        }\n\n        try {\n          awayTeaminLeague = leaguePositions.find(\n            (team) => team.name === match.awayTeam\n          );\n\n          let awayTeaminAwayLeague = leaguePositions.find(\n            (team) => team.awayFormName === match.awayTeam\n          );\n\n          teamPositionAway = awayTeaminLeague.position;\n          teamPositionAwayTable = awayTeaminAwayLeague.position;\n\n          WDLinLeagueAway = Array.from(awayTeaminLeague.wdl.toUpperCase());\n          AwayAverageGoals =\n            awayTeaminLeague.seasonGoals / awayTeaminLeague.played;\n          AwayAverageConceded =\n            awayTeaminLeague.seasonConceded / awayTeaminLeague.played;\n\n          awayTeamWinPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonWinPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayTeamLossPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonLossPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayTeamDrawPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonDrawPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayPrefix = await getPrefix(teamPositionAway);\n          awayPrefixAwayTable = await getPrefix(teamPositionAwayTable);\n\n          awaySeasonPPG = awayTeaminLeague.ppg.toFixed(2);\n        } catch (error) {\n          console.log(error);\n          teamPositionAway = \"N/A\";\n          awayPrefix = \"\";\n          awaySeasonPPG = \"N/A\";\n          awayTeaminLeague = {\n            rawPosition: \"N/A\",\n          };\n          WDLinLeagueAway = [];\n        }\n\n        if (!isFormStored) {\n          form = await getForm(match);\n\n          let homeFormString5 =\n            form[0].data[0].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString5 =\n            form[1].data[0].stats.additional_info.formRun_overall.toUpperCase();\n          let homeFormString6 =\n            form[0].data[1].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString6 =\n            form[1].data[1].stats.additional_info.formRun_overall.toUpperCase();\n          let homeFormString10 =\n            form[0].data[2].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString10 =\n            form[1].data[2].stats.additional_info.formRun_overall.toUpperCase();\n\n          let homeFormRun =\n            form[0].data[2].stats.additional_info.formRun_home.toUpperCase();\n          let awayFormRun =\n            form[1].data[2].stats.additional_info.formRun_away.toUpperCase();\n\n          if (WDLinLeagueHome.length >= 10) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = WDLinLeagueHome.slice(-6);\n            lastTenFormHome = WDLinLeagueHome.slice(-10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = WDLinLeagueAway.slice(-6);\n            lastTenFormAway = WDLinLeagueAway.slice(-10);\n            leagueOrAll = \"League\";\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else if (WDLinLeagueHome.length >= 6) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = WDLinLeagueHome.slice(-6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = WDLinLeagueAway.slice(-6);\n            lastTenFormAway = Array.from(awayFormString10);\n            leagueOrAll = \"League\";\n\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else if (WDLinLeagueHome.length >= 5) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = Array.from(homeFormString6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = Array.from(awayFormString6);\n            lastTenFormAway = Array.from(awayFormString10);\n            leagueOrAll = \"League\";\n\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else {\n            lastThreeFormHome = [\n              homeFormString5[2],\n              homeFormString5[3],\n              homeFormString5[4],\n            ];\n            lastFiveFormHome = Array.from(homeFormString5);\n            lastSixFormHome = Array.from(homeFormString6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = [\n              awayFormString5[2],\n              awayFormString5[3],\n              awayFormString5[4],\n            ];\n\n            lastFiveFormAway = Array.from(awayFormString5);\n            lastSixFormAway = Array.from(awayFormString6);\n            lastTenFormAway = Array.from(awayFormString10);\n\n            leagueOrAll = \"All\";\n\n            homeAverageGoals = undefined;\n            homeAverageConceded = undefined;\n            awayAverageGoals = undefined;\n            awayAverageConceded = undefined;\n          }\n\n          formRunHome = Array.from(homeFormRun);\n          formRunAway = Array.from(awayFormRun);\n\n          if (\n            teamPositionHome === 0 ||\n            form[0].data[0].season_format !== \"Domestic League\"\n          ) {\n            teamPositionHome = \"N/A\";\n            teamPositionHomeTable = \"N/A\";\n            homePrefix = \"\";\n            homePrefixHomeTable = \"\";\n          }\n\n          if (\n            teamPositionAway === 0 ||\n            form[0].data[0].season_format !== \"Domestic League\"\n          ) {\n            teamPositionAway = \"N/A\";\n            teamPositionAwayTable = \"N/A\";\n            awayPrefix = \"\";\n            awayPrefixAwayTable = \"\";\n          }\n          allForm.push({\n            id: match.id,\n            teamIDHome: match.homeId,\n            teamIDAway: match.awayId,\n            leagueId: leagueID,\n            home: {\n              teamName: match.homeTeam,\n              0: {\n                XGOverall: parseFloat(form[0].data[0].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[0].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[0].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[0].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[0].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[0].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[0].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[0].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[0].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[0].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[0].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[0].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[0].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[0].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[0].stats.shotsOnTargetAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[0].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[0].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[0].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[0].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[0].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[0].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[0].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[0].stats.seasonBTTSPercentage_home\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition: homeTeaminLeague.rawPosition !== undefined\n                  ? homeTeaminLeague.rawPosition\n                  : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n              1: {\n                XGOverall: parseFloat(form[0].data[1].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[1].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[1].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[1].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[1].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[1].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[1].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[1].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[1].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[1].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[1].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[1].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[1].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[1].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[1].stats.shotsOnTargetAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[1].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[1].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[1].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[1].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[1].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[1].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[1].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[1].stats.seasonBTTSPercentage_home\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition: homeTeaminLeague.rawPosition !== undefined\n                  ? homeTeaminLeague.rawPosition\n                  : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n              2: {\n                XGOverall: parseFloat(form[0].data[2].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[2].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[2].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[2].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[2].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[2].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[2].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[2].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[2].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[2].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[2].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[2].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[2].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[2].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[2].stats.shotsOnTargetAVG_home\n                ),\n                AverageShots: parseFloat(\n                  form[0].data[2].stats.shotsAVG_overall\n                ),\n                AverageShotsHomeOrAway: parseFloat(\n                  form[0].data[2].stats.shotsAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[2].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[2].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[2].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[2].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[2].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[2].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[2].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[2].stats.seasonBTTSPercentage_home\n                ),\n                lastThreeForm: lastThreeFormHome !== undefined ? lastThreeFormHome.reverse() : \"N/A\",\n                LastFiveForm: lastFiveFormHome !== undefined ? lastFiveFormHome.reverse() : \"N/A\", \n                LastSixForm: lastSixFormHome !== undefined ? lastSixFormHome.reverse() : \"N/A\",\n                LastTenForm: lastTenFormHome !== undefined ? lastTenFormHome.reverse() : \"N/A\",\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition: homeTeaminLeague.rawPosition !== undefined\n                  ? homeTeaminLeague.rawPosition\n                  : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                SeasonPPG: homeSeasonPPG,\n                WinPercentage: homeTeamWinPercentageHome,\n                LossPercentage: homeTeamLossPercentageHome,\n                DrawPercentage: homeTeamDrawPercentageHome,\n                formRun: formRunHome,\n                goalDifference:\n                  form[0].data[2].stats.seasonGoalDifference_overall,\n                goalDifferenceHomeOrAway:\n                  form[0].data[2].stats.seasonGoalDifference_home,\n                BttsPercentage:\n                  form[0].data[2].stats.seasonBTTSPercentage_overall,\n                BttsPercentageHomeOrAway:\n                  form[0].data[2].stats.seasonBTTSPercentage_home,\n                CardsTotal: form[0].data[2].stats.cardsTotal_overall,\n                CornersAverage: form[0].data[2].stats.cornersAVG_overall,\n                ScoredBothHalvesPercentage:\n                  form[0].data[2].stats.scoredBothHalvesPercentage_overall,\n                LastMatch: await convertTimestamp(\n                  form[0].data[0].last_updated_match_timestamp\n                ),\n                WDLRecord: WDLinLeagueHome,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n            },\n            away: {\n              teamName: match.awayTeam,\n              0: {\n                XGOverall: parseFloat(form[1].data[0].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[0].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[0].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[0].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[0].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[0].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[0].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[0].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[0].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[0].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[0].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[0].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[0].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[0].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[0].stats.shotsOnTargetAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[0].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[0].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[0].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[0].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[0].stats.seasonBTTSPercentage_away\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n              1: {\n                XGOverall: parseFloat(form[1].data[1].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[1].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[1].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[1].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[1].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[1].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[1].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[1].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[1].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[1].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[1].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[1].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[1].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[1].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[1].stats.shotsOnTargetAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[1].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[1].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[1].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[1].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[1].stats.seasonBTTSPercentage_away\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n              2: {\n                XGOverall: parseFloat(form[1].data[2].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[2].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[2].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[2].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[2].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[2].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[2].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[2].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[2].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[2].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[2].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[2].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[2].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[2].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[2].stats.shotsOnTargetAVG_away\n                ),\n                AverageShots: parseFloat(\n                  form[1].data[2].stats.shotsAVG_overall\n                ),\n                AverageShotsHomeOrAway: parseFloat(\n                  form[1].data[2].stats.shotsAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[2].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[2].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[2].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[2].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[2].stats.seasonBTTSPercentage_away\n                ),\n                lastThreeForm: lastThreeFormAway !== undefined ? lastThreeFormAway.reverse() : \"N/A\",\n                LastFiveForm: lastFiveFormAway !== undefined ? lastFiveFormAway.reverse() : \"N/A\", \n                LastSixForm: lastSixFormAway !== undefined ? lastSixFormAway.reverse() : \"N/A\",\n                LastTenForm: lastTenFormAway !== undefined ? lastTenFormAway.reverse() : \"N/A\",\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                SeasonPPG: awaySeasonPPG,\n                WinPercentage: awayTeamWinPercentageAway,\n                LossPercentage: awayTeamLossPercentageAway,\n                DrawPercentage: awayTeamDrawPercentageAway,\n                formRun: formRunAway,\n                goalDifference:\n                  form[1].data[2].stats.seasonGoalDifference_overall,\n                goalDifferenceHomeOrAway:\n                  form[1].data[2].stats.seasonGoalDifference_away,\n                BttsPercentage:\n                  form[1].data[2].stats.seasonBTTSPercentage_overall,\n                BttsPercentageHomeOrAway:\n                  form[1].data[2].stats.seasonBTTSPercentage_away,\n                CardsTotal: form[1].data[2].stats.cardsTotal_overall,\n                CornersAverage: form[1].data[2].stats.cornersAVG_overall,\n                ScoredBothHalvesPercentage:\n                  form[1].data[2].stats.scoredBothHalvesPercentage_overall,\n                LastMatch: await convertTimestamp(\n                  form[1].data[0].last_updated_match_timestamp\n                ),\n                WDLRecord: WDLinLeagueAway,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n            },\n          });\n        }\n\n        match.homeBadge = fixture.home_image;\n        match.awayBadge = fixture.away_image;\n\n        match.homePpg = fixture.home_ppg.toFixed(2);\n        match.awayPpg = fixture.away_ppg.toFixed(2);\n\n        match.lastFiveFormHome = lastFiveFormHome;\n        match.lastFiveFormAway = lastFiveFormAway;\n\n        match.homeRawPosition = homeTeaminLeague.rawPosition;\n        match.awayRawPosition = awayTeaminLeague.rawPosition;\n\n        match.homeTeamHomePosition = `${teamPositionHomeTable}${homePrefixHomeTable}`;\n        match.awayTeamAwayPosition = `${teamPositionAwayTable}${awayPrefixAwayTable}`;\n\n        match.homeTeamHomePositionRaw = teamPositionHomeTable;\n        match.awayTeamAwayPositionRaw = teamPositionAwayTable;\n\n        match.homeTeamWinPercentage = homeTeamWinPercentageHome;\n        match.awayTeamWinPercentage = awayTeamWinPercentageAway;\n\n        match.homeTeamLossPercentage = homeTeamLossPercentageHome;\n        match.awayTeamLossPercentage = awayTeamLossPercentageAway;\n\n        match.homeTeamDrawPercentage = homeTeamDrawPercentageHome;\n        match.awayTeamDrawPercentage = awayTeamDrawPercentageAway;\n        match.status = fixture.status;\n        match.over25Odds = fixture.odds_ft_over25;\n        match.btts_potential = fixture.btts_potential;\n        match.game = match.homeTeam + \" v \" + match.awayTeam;\n        match.stadium = fixture.stadium_name;\n        match.homeGoals = fixture.homeGoalCount;\n        match.awayGoals = fixture.awayGoalCount;\n\n        match.expectedGoalsHomeToDate = fixture.team_a_xg_prematch;\n        match.expectedGoalsAwayToDate = fixture.team_b_xg_prematch;\n        match.game_week = fixture.game_week;\n\n        if (match.status !== \"canceled\" || match.status !== \"suspended\") {\n          matches.push(match);\n          await createFixture(match, false);\n        }\n      }\n\n      if (matches.length > 0) {\n        ReactDOM.render(\n          <Fragment>\n            <Button\n              text={\"Get Predictions & League stats\"}\n              onClickEvent={() => getScorePrediction(day)}\n              className={\"GeneratePredictions\"}\n            />\n            <div className=\"Version\">Prediction engine v1.1.5 (17/01/25)</div>\n            <Collapsable\n              buttonText={\"Filters\"}\n              element={\n                <div className=\"FilterContainer\">\n                  <h6>\n                    Use the below filters to remove predictions that don't meet\n                    the set criteria. These will be greyed out and not included\n                    in multi-builders and ROI stats\n                  </h6>\n                  <h6>Goals for/against differential filter (BETA)</h6>\n                  <div>\n                    I'm looking for tips where the goal differential between\n                    teams is at least...\n                  </div>\n                  <SlideDiff\n                    value=\"0\"\n                    text=\"all games\"\n                    useCase=\"gd\"\n                    lower=\"0\"\n                    upper=\"30\"\n                  ></SlideDiff>\n                  <h6>\n                    Goals for/against home or away differential filter (BETA)\n                  </h6>\n                  <div>\n                    I'm looking for tips where the goal differential (home or\n                    away only) between teams is at least...\n                  </div>\n                  <SlideDiff\n                    value=\"0\"\n                    text=\"all games\"\n                    useCase=\"gdHorA\"\n                    lower=\"0\"\n                    upper=\"30\"\n                  ></SlideDiff>\n                  <Fragment>\n                    <h6>XG for/against differential filter (BETA)</h6>\n                    <div>\n                      I'm looking for tips where the XG differential between\n                      teams is at least...\n                    </div>\n                    <SlideDiff\n                      value=\"0\"\n                      text=\"all games\"\n                      useCase=\"xg\"\n                      lower=\"0\"\n                      upper=\"30\"\n                    ></SlideDiff>\n                  </Fragment>\n                  <Fragment>\n                    <h6>Last 6 points differential filter (BETA)</h6>\n                    <div>\n                      I'm looking for tips where the points differential between\n                      teams is at least...\n                    </div>\n                    <SlideDiff\n                      value=\"0\"\n                      text=\"all games\"\n                      useCase=\"last10\"\n                      lower=\"0\"\n                      upper=\"18\"\n                    ></SlideDiff>\n                  </Fragment>\n                  <Fragment>\n                    <h6>Choose your risk profile</h6>\n                    <div>\n                      I'm looking for tips where the odds are between...\n                    </div>\n                    <Slide value=\"1\" text=\"all games\"></Slide>\n                  </Fragment>\n                </div>\n              }\n            />\n            ,\n          </Fragment>,\n          document.getElementById(\"GeneratePredictions\")\n        );\n      }\n\n      // }\n    }\n\n    ReactDOM.render(\n      <div>\n        <div className=\"LoadingText\"></div>\n      </div>,\n      document.getElementById(\"Loading\")\n    );\n\n    async function updateResults(bool) {\n      console.log(\"updating results\");\n      if (allLeagueResultsArrayOfObjects.length > 0 && bool === true) {\n        await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}results`, {\n          method: \"DELETE\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }).then(async () => {\n          await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}results`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(allLeagueResultsArrayOfObjects),\n          });\n        });\n      } else {\n        console.log(\"EMPTY RESULTS\");\n      }\n    }\n\n    if (!isStoredLocally) {\n      await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}allForm/${date}`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ allForm }),\n      });\n      await updateResults(true);\n    }\n    if (!leaguesStored) {\n      await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${todaysDate}`,\n        {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ leagueArray }),\n        }\n      );\n    }\n    // const allFixtures = await RenderAllFixtures(matches, false)\n    ReactDOM.render(\n      <RenderAllFixtures matches={matches} result={false} bool={false} />,\n      document.getElementById(\"FixtureContainer\")\n    );\n    // ReactDOM.render(<RenderAllFixtures matches={matches} bool={false}/>),document.getElementById(\"FixtureContainer\")\n    setTimeout(() => {\n      isFunctionRunning = false;\n    }, 3000);\n  }\n}\n","import React from \"react\";\n\nfunction PreviousGames(props) {\n  // Function to find the key(s) from a given value\n  function getKeysByValue(object, value) {\n    // Use Object.keys() and filter to find keys with the given value\n    return Object.keys(object).filter((key) => object[key] === value);\n  }\n\n  // Capture the array of JSX elements created by map\n  const games = props.reducedArr.map((result, index) => {\n    // Example usage\n    const home = result.team_a_id; // The value you want to find the key for\n    const away = result.team_b_id; // The value you want to find the key for\n\n    const teamNameHome = getKeysByValue(props.teamObject, home);\n    const teamNameAway = getKeysByValue(props.teamObject, away);\n    const unixTimestamp = result.date_unix;\n    const milliseconds = unixTimestamp * 1000;\n    const dateObject = new Date(milliseconds);\n    const date = `${dateObject.getDate()}/${\n      dateObject.getMonth() + 1\n    }/${dateObject.getFullYear()}`;\n\n    return (\n      <>\n        <li key=\"lastGameDetail\" className=\"LastGameDetail\">\n          {`${date}`}\n        </li>\n        <div className=\"LastGameOverview\" key={index}>\n          <div className=\"LastGameHome\">{`${teamNameHome}`}</div>\n          <span className=\"LastGameScore\">{`${result.team_a_goals}`}</span>\n          <span className=\"LastGameScore\">{`${result.team_b_goals}`}</span>\n          <div className=\"LastGameAway\">{`${teamNameAway}`}</div>{\" \"}\n          {/* Changed team_b_id */}\n        </div>\n      </>\n    );\n  });\n\n  // Return the array of JSX elements\n  return <>{games}</>;\n}\n\nexport default PreviousGames;\n","import React from \"react\";\nimport PreviousGames from \"../components/PreviousGames\"\n\nfunction HeadToHead(props) {\n  return (\n    <ul className={props.className} style={props.style}>\n      <li key=\"Stadium\" className=\"Stadium\" data-cy={props.name + \"Stadium\"}>\n        {`Venue - ${props.stadium}`}\n      </li>\n      <div className=\"KeyStatsOne\">\n      <li key=\"h2h\" className=\"h2h\" data-cy={props.name + \"h2h\"}>\n        {`Matches played: ${props.matches}`}\n      </li>\n      <li key=\"homeWins\" className=\"homeWins\" data-cy={props.name + \"homeWins\"}>\n        {`${props.homeTeam} wins: ${props.homeWins}`}\n      </li>\n      <li key=\"awayWins\" className=\"awayWins\" data-cy={props.name + \"awayWins\"}>\n        {`${props.awayTeam} wins: ${props.awayWins}`}\n      </li>\n      <li key=\"draws\" className=\"draws\" data-cy={props.name + \"draws\"}>\n        {`Draws: ${props.draws}`}\n      </li>\n      </div>\n      <div className=\"KeyStatsTwo\">\n      <li\n        key=\"averageGoals\"\n        className=\"averageGoals\"\n        data-cy={props.name + \"averageGoals\"}\n      >\n        {`Average goals in fixture: ${props.averageGoals}`}\n      </li>\n      <li\n        key=\"bestHomeOdds\"\n        className=\"bestHomeOdds\"\n        data-cy={props.name + \"bestHomeOdds\"}\n      >\n        {`Best oods for home win @: ${props.bestHomeOdds}`}\n      </li>\n      <li\n        key=\"bestAwayOdds\"\n        className=\"bestAwayOdds\"\n        data-cy={props.name + \"bestAwayOdds\"}\n      >\n        {`Best oods for away win @: ${props.bestAwayOdds}`}\n      </li>\n      </div>\n      {/* <li\n        key=\"lastGameDetail\"\n        className=\"LastGameDetail\"\n        data-cy={props.name + \"Last\"}\n      >\n        {`Last meeting - ${props.lastGameStadiumName} ${props.lastGameDate}`}\n      </li> */}\n      <PreviousGames reducedArr={props.reducedArr} teamObject={props.teamObject}></PreviousGames>\n      {/* <div className=\"LastGameOverview\">\n        <div\n          key=\"lastGame\"\n          className=\"LastGameHome\"\n          data-cy={props.name + \"LastGame\"}\n        >\n          {`${props.lastGameHomeTeam}`}\n        </div>\n        <span className=\"LastGameScore\">{`${props.lastGameHomeGoals}`}</span>\n        <span className=\"LastGameScore\">{`${props.lastGameAwayGoals}`}</span>\n        <div className=\"LastGameAway\">{`${props.lastGameAwayTeam}`}</div>\n      </div> */}\n\n      {/* <li\n        key=\"secondToLastGameDetail\"\n        className=\"secondToLastGameDetail\"\n        data-cy={props.name + \"secondToLast\"}\n      >\n        {`Second to last meeting - ${props.secondToLastGameStadiumName} ${props.secondToLastGameDate}`}\n      </li>\n      <div className=\"LastGameOverview\">\n        <div\n          key=\"lastGame\"\n          className=\"LastGameHome\"\n          data-cy={props.name + \"LastGame\"}\n        >\n          {`${props.secondToLastGameHomeTeam}`}\n        </div>\n        <span className=\"LastGameScore\">{`${props.secondToLastGameHomeGoals}`}</span>\n        <span className=\"LastGameScore\">{`${props.secondToLastGameAwayGoals}`}</span>\n        <div className=\"LastGameAway\">\n          {`${props.secondToLastGameAwayTeam}`}\n        </div>\n      </div> */}\n    </ul>\n  );\n}\n\nexport default HeadToHead;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    // backgroundColor: \"#dedddd\",\n    padding: 10,\n    textAlign: \"center\",\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    // border: \"none\",\n    margin: \"none\",\n    color: 'white',\n    lineHeight: '2em',\n    backgroundColor: '#030061',\n  },\n  body: {\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    padding: 10,\n    color: 'white',\n    // border: \"none\",\n    margin: \"none\",\n    backgroundColor: '#030061',\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#030061\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#030052\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\n\nexport default function CustomizedTables(props) {\n\n\n  return (\n    <TableContainer className=\"StatsTable\">\n      <Table aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Stat</StyledTableCell>\n            <StyledTableCell>H2H history</StyledTableCell>\n            <StyledTableCell>XGTipping forecast</StyledTableCell>\n            <StyledTableCell>Odds (yes)</StyledTableCell>\n            <StyledTableCell>Odds (no)</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        <StyledTableRow key=\"O05\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 0.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o05Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o05Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u05Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O15\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 1.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o15Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o15Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u15Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O25\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 2.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o25Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o25Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u25Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O35\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 3.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o35Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o35Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u35Odds}</StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport HeadToHead from \"../components/HeadToHead\";\nimport { Fragment } from \"react\";\nimport CustomizedTables from \"../components/Table\";\n\nexport async function getTeamStats(\n  id,\n  home,\n  away,\n  homeBTTS,\n  homeOnlyBTTS,\n  awayBTTS,\n  awayOnlyBTTS\n) {\n  let identifier = id;\n  let bestHomeOdds;\n  let bestHomeOddsProvider;\n  let bestAwayOdds;\n  let bestAwayOddsProvider;\n\n  let match = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}match/${identifier}`\n  );\n  await match.json().then(async (match) => {\n    const matchArr = match.data.h2h.previous_matches_ids;\n    const reducedMatchArr = matchArr.slice(0, 10)\n\n    let oddsComparisonHomeArray = [];\n    let oddsComparisonAwayArray = [];\n\n    if (match.data.odds_comparison) {\n      oddsComparisonHomeArray = match.data.odds_comparison[\"FT Result\"][1];\n      oddsComparisonAwayArray = match.data.odds_comparison[\"FT Result\"][2];\n\n      let sortedHomeOdds = Object.entries(oddsComparisonHomeArray).sort(\n        (a, b) => b[1] - a[1]\n      );\n      let sortedAwayOdds = Object.entries(oddsComparisonAwayArray).sort(\n        (a, b) => b[1] - a[1]\n      );\n\n      bestHomeOddsProvider = sortedHomeOdds[0][0];\n      bestHomeOdds = sortedHomeOdds[0][1];\n      bestAwayOddsProvider = sortedAwayOdds[0][0];\n      bestAwayOdds = sortedAwayOdds[0][1];\n    } else {\n      bestHomeOddsProvider = \"N/A\";\n      bestHomeOdds = \"N/A\";\n      bestAwayOddsProvider = \"N/A\";\n      bestAwayOdds = \"N/A\";\n    }\n\n    async function getBTTSPercentage(\n      homeToal,\n      home,\n      awayTotal,\n      away,\n      fixtureHistory\n    ) {\n\n      let total = homeToal + home + awayTotal + away + fixtureHistory;\n      return total / 5;\n    }\n\n    async function getFairOdds(impliedProbability) {\n      let impliedProbabilityDivided = impliedProbability / 100;\n      return (1 / impliedProbabilityDivided).toFixed(2);\n    }\n\n\n\n    if (match.data.h2h.previous_matches_results.totalMatches > 0) {\n\n      let homeTeam = match.data.home_name;\n      let awayTeam = match.data.away_name;\n\n      let teamMappings = {\n        [homeTeam]: match.data.homeID,\n        [awayTeam]: match.data.awayID\n      };\n\n      reducedMatchArr.sort((a, b) => b.date_unix - a.date_unix);\n\n      let date;\n      // await previousMatch.json().then(async (game) => {\n      //   previousMatchDetails = game.data;\n      //   const unixTimestamp = previousMatchDetails.date_unix;\n      //   const milliseconds = unixTimestamp * 1000;\n      //   dateObject = new Date(milliseconds);\n      //   date = `${dateObject.getDate()}/${\n      //     dateObject.getMonth() + 1\n      //   }/${dateObject.getFullYear()}`;\n\n      //   let secondToPreviousMatch;\n      //   let dateObject2;\n\n      //   // if (secondMatchExists !== false) {\n      //   //   secondToPreviousMatch = await fetch(\n      //   //     `${process.env.REACT_APP_EXPRESS_SERVER}match/${secondToLastMatch}`\n      //   //   );\n      //   //   await secondToPreviousMatch.json().then((game) => {\n      //   //     secondToPreviousMatchDetails = game.data;\n      //   //     const unixTimestamp = secondToPreviousMatchDetails.date_unix;\n      //   //     const milliseconds = unixTimestamp * 1000;\n      //   //     dateObject2 = new Date(milliseconds);\n      //   //     date2 = `${dateObject2.getDate()}/${\n      //   //       dateObject2.getMonth() + 1\n      //   //     }/${dateObject2.getFullYear()}`;\n      //   //   });\n      //   // }\n      // });\n\n\n      const BTTSForecast = await getBTTSPercentage(\n        homeBTTS,\n        homeOnlyBTTS,\n        awayBTTS,\n        awayOnlyBTTS,\n        match.data.h2h.betting_stats.bttsPercentage\n      );\n      const fairOddsBTTSYes = await getFairOdds(BTTSForecast);\n      const fairOddsBTTSNo = await getFairOdds(100 - BTTSForecast);\n\n      ReactDOM.render(\n        <Fragment>\n          <h3>Fixture history</h3>\n          <HeadToHead\n            className={\"PreviousMatchStats\"}\n            homeTeam={home}\n            awayTeam={away}\n            reducedArr={reducedMatchArr}\n            teamObject={teamMappings}\n            stadium={match.data.stadium_name}\n            matches={match.data.h2h.previous_matches_results.totalMatches}\n            homeWins={match.data.h2h.previous_matches_results.team_a_wins}\n            awayWins={match.data.h2h.previous_matches_results.team_b_wins}\n            draws={match.data.h2h.previous_matches_results.draw}\n            averageGoals={match.data.h2h.betting_stats.avg_goals}\n            bestHomeOdds={`${bestHomeOddsProvider} - ${bestHomeOdds}`}\n            bestAwayOdds={`${bestAwayOddsProvider} - ${bestAwayOdds}`}\n            // lastGameStadiumName={\n            //   previousMatchDetails.stadium_name\n            //     ? previousMatchDetails.stadium_name\n            //     : \"-\"\n            // }\n            // lastGameHomeGoals={\n            //   previousMatchDetails.homeGoalCount !== undefined\n            //     ? previousMatchDetails.homeGoalCount\n            //     : \"-\"\n            // }\n            // lastGameAwayGoals={\n            //   previousMatchDetails.awayGoalCount !== undefined\n            //     ? previousMatchDetails.awayGoalCount\n            //     : \"-\"\n            // }\n            // lastGameHomeTeam={\n            //   previousMatchDetails.home_name\n            //     ? previousMatchDetails.home_name\n            //     : \"-\"\n            // }\n            // lastGameAwayTeam={\n            //   previousMatchDetails.away_name\n            //     ? previousMatchDetails.away_name\n            //     : \"-\"\n            // }\n            // lastGameDate={!isNaN(date) ? date : \"-\"}\n            // secondToLastGameStadiumName={\n            //   secondToPreviousMatchDetails.stadium_name\n            //     ? secondToPreviousMatchDetails.stadium_name\n            //     : \"-\"\n            // }\n            // secondToLastGameHomeGoals={\n            //   secondToPreviousMatchDetails.homeGoalCount !== undefined\n            //     ? secondToPreviousMatchDetails.homeGoalCount\n            //     : \"-\"\n            // }\n            // secondToLastGameAwayGoals={\n            //   secondToPreviousMatchDetails.awayGoalCount !== undefined\n            //     ? secondToPreviousMatchDetails.awayGoalCount\n            //     : \"-\"\n            // }\n            // secondToLastGameHomeTeam={\n            //   secondToPreviousMatchDetails.home_name\n            //     ? secondToPreviousMatchDetails.home_name\n            //     : \"-\"\n            // }\n            // secondToLastGameAwayTeam={\n            //   secondToPreviousMatchDetails.away_name\n            //     ? secondToPreviousMatchDetails.away_name\n            //     : \"-\"\n            // }\n            // secondToLastGameDate={!isNaN(date2) ? date2 : \"-\"}\n          ></HeadToHead>\n          <CustomizedTables\n            o05Stat={match.data.h2h.betting_stats.over05Percentage}\n            o15Stat={match.data.h2h.betting_stats.over15Percentage}\n            o15Forecast={match.data.o15_potential}\n            o05Odds={match.data.odds_ft_over05}\n            u05Odds={match.data.odds_ft_under05}\n            o15Odds={match.data.odds_ft_over15}\n            u15Odds={match.data.odds_ft_under15}\n            o25Stat={match.data.h2h.betting_stats.over25Percentage}\n            o25Forecast={match.data.o25_potential}\n            o25Odds={match.data.odds_ft_over25}\n            u25Odds={match.data.odds_ft_under25}\n            o35Stat={match.data.h2h.betting_stats.over35Percentage}\n            o35Forecast={match.data.o35_potential}\n            o35Odds={match.data.odds_ft_over35}\n            u35Odds={match.data.odds_ft_under35}\n            BTTSStat={match.data.h2h.betting_stats.bttsPercentage}\n            BTTSForecast={`${BTTSForecast}%`}\n            BTTSOdds={`${match.data.odds_btts_yes}\\n Fair odds: ${fairOddsBTTSYes}`}\n            BTTSOddsNo={`${match.data.odds_btts_no}\\n Fair odds: ${fairOddsBTTSNo}`}\n            CornersStat={\"–\"}\n            CornersForecast={match.data.corners_potential}\n            CornersOdds={match.data.odds_corners_over_105}\n          />\n        </Fragment>,\n        document.getElementById(`H2HStats${identifier}`)\n      );\n    } else {\n      ReactDOM.render(\n        <div>No fixture history found</div>,\n        document.getElementById(`H2HStats${identifier}`)\n      );\n    }\n  });\n}\n","async function getOverOrUnderText(xgSum) {\n  let overUnderAchievingSum = xgSum;\n  let text;\n  switch (true) {\n    case overUnderAchievingSum > 1.5:\n      text = \"Underachieving drastically against expected goals.\";\n      break;\n    case overUnderAchievingSum > 1.25 && overUnderAchievingSum <= 1.5:\n      text = \"Underachieving significantly against expected goals.\";\n      break;\n    case overUnderAchievingSum > 1 && overUnderAchievingSum <= 1.25:\n      text = \"Underachieving moderately against expected goals.\";\n      break;\n    case overUnderAchievingSum > 0.75 && overUnderAchievingSum <= 1:\n      text = \"Underachieving slightly against expected goals.\";\n      break;\n    case overUnderAchievingSum > 0.4 && overUnderAchievingSum <= 0.75:\n      text = \"Underachieving very slightly against expected goals.\";\n      break;\n    case overUnderAchievingSum > -0.4 && overUnderAchievingSum <= 0.4:\n      text = \"Roughly matching expected goal difference overall.\";\n      break;\n    case overUnderAchievingSum < -0.4 && overUnderAchievingSum >= -0.75:\n      text = \"Overachieving very slightly against expected goals.\";\n      break;\n    case overUnderAchievingSum < -0.75 && overUnderAchievingSum >= -1:\n      text = \"Overachieving slightly against expected goals overall.\";\n      break;\n    case overUnderAchievingSum < -1 && overUnderAchievingSum >= -1.25:\n      text = \"Overachieving moderately against expected goals.\";\n      break;\n    case overUnderAchievingSum < -1.25 && overUnderAchievingSum >= -1.5:\n      text = \"Overachieving significantly against expected goals.\";\n      break;\n    case overUnderAchievingSum < -1.5:\n      text = \"Overachieving drastically against expected goals.\";\n      break;\n    default:\n      text = \"\";\n      break;\n  }\n  \n  return text;\n}\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nasync function getXGDifferential(xgFor, xgAgainst, goalsFor, goalsAgainst) {\n  let xgDiff = xgFor - xgAgainst;\n  let goalDiff = goalsFor - goalsAgainst;\n  let compareXgAndGoalDiff = await diff(xgDiff, goalDiff);\n\n  return compareXgAndGoalDiff;\n}\n\nasync function getAttackingSummary(goalsRecent, goalsLongTerm) {\n\n  let text;\n  if (goalsRecent >= 3) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Free-scoring and improving recently in front of goal.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Free-scoring and consistent recently in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Free-scoring overall, but less so recently in games.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 3 && goalsRecent >= 2) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Impressive scoring; improving recently in front of goal.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Impressive scoring; consistent recently in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Impressive scoring, but less impressive in recent games.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 2 && goalsRecent >= 1) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Decent scoring; improving recently in front of goal.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Decent scoring; consistent recently in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Decent scoring, but less impressive in recent games.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 1 && goalsRecent > 0) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Poor scoring, but signs of improvement in recent games.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Poor scoring and consistently so in most recent games.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Poor scoring with no improvement in most recent games.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent === 0) {\n    switch (true) {\n      case goalsRecent === 0:\n        text = \"Woeful scoring; no goals scored recently at all.\";\n        break;\n      default:\n        text = \"\";\n        break;\n    }\n  }\n  return text;  \n}\n\nasync function getDefenceSummary(cleansheetStat) {\n  let text;\n  switch (true) {\n    case cleansheetStat > 80:\n      text = `Rock solid at the back; ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    case cleansheetStat > 60 && cleansheetStat <= 80:\n      text = `Very strong defensively; ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    case cleansheetStat > 40 && cleansheetStat <= 60:\n      text = `Defensively impressive; ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    case cleansheetStat > 20 && cleansheetStat <= 40:\n      text = `Average at the back; only ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    case cleansheetStat > 1 && cleansheetStat <= 20:\n      text = `Defensively frail; only ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    case cleansheetStat === 0:\n      text = `Defensively shambolic; ${cleansheetStat}% of games end in a cleansheet.`;\n      break;\n    default:\n      break;\n  }  \n  return text;\n}\n\nasync function GenerateFormSummary(form, lastx, recentForm) {\n  let text;\n  // let six = lastx[2];\n  let ten = lastx[1];\n  let five = lastx[0];\n\n  let xgSum = await getXGDifferential(\n    form.XGOverall,\n    form.XGAgainstAvgOverall,\n    form.ScoredOverall / 10,\n    form.ConcededOverall / 10\n  );\n  let xgText = await getOverOrUnderText(xgSum);\n  let attackString = await getAttackingSummary(\n    form.last5Goals,\n    form.last10Goals\n  );\n  let defenceString = await getDefenceSummary(form.CleanSheetPercentage);\n  let pointsAverageTotal =\n    (parseFloat(five) + parseFloat(ten)) / 2;\n\n    if (pointsAverageTotal >= 2.6) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Outstanding recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Outstanding recent form, consistent over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Outstanding recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 2.3) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Excellent recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Excellent recent form, consistent over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Excellent recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 2) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Very good recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Very good recent form, consistent over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Very good recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 1.7) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Good recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Good recent form, consistent over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Good recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 1.4) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Decent recent form; improving over last 5 games.\";\n          break;\n        case five === ten:\n          text =\n            \"Decent recent form, consistent over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Decent recent form, worsened in last 5 fixtures.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 1.1) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Average recent form; improving over last 5 fixtures.\";\n          break;\n        case five === ten:\n          text =\n            \"Average recent form, consistent over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Average recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 0.8) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Poor recent form; improving over last 5 fixtures.\";\n          break;\n        case five === ten:\n          text =\n            \"Poor recent form, consistent over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Poor recent form, worsened in the last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal >= 0.5) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Very poor recent form; improving over last 5 fixtures.\";\n          break;\n        case five === ten:\n          text =\n            \"Very poor recent form, consistent over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Very poor recent form, worsening still in last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else if (pointsAverageTotal < 0.5) {\n      switch (true) {\n        case five > ten:\n          text =\n            \"Terrible recent form; improving over last 5 fixtures.\";\n          break;\n        case five === ten:\n          text =\n            \"Terrible recent form, consistent over past 10 games.\";\n          break;\n        case five < ten:\n          text = \n            \"Terrible recent form, worsening still in last 5 games.\";\n          break;\n        default:\n          break;\n      }\n    } else {\n      console.log(pointsAverageTotal);\n    }\n  \n  return text + ` ${xgText} ${attackString} ${defenceString}`;\n}\n\nexport default GenerateFormSummary;\n","// import { light } from \"@material-ui/core/styles/createPalette\";\n// import { toBePartiallyChecked } from \"@testing-library/jest-dom/dist/matchers\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  ArcElement,\n  LineElement,\n  Filler,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  SubTitle,\n} from \"chart.js\";\nimport { Line, Radar, Bar, Doughnut } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  ArcElement,\n  Filler,\n  BarElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  SubTitle\n);\n\nexport function Chart(props) {\n  let length;\n  let depth;\n\n  if (props.type === \"Points over time\") {\n    length = props.data1.length * 3;\n    depth = 0;\n  } else if (props.type === \"Rolling average points over last 10\") {\n    length = Math.abs(props.height);\n    depth = 0;\n  } else if (Math.abs(props.height) > Math.abs(props.depth)) {\n    length = Math.abs(props.height);\n    depth = -Math.abs(props.height);\n  } else if (Math.abs(props.height) < Math.abs(props.depth)) {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  } else {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  }\n\n  const options = {\n    color: \"#030061\",\n    responsive: true,\n    aspectRatio: 1.2,\n    maintainAspectRatio: true,\n    layout: {\n      padding: 3,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    scales: {\n      y: {\n        suggestedMin: depth,\n        suggestedMax: length,\n        // suggestedMax: Math.max(...props.data1) > 3 ? Math.max(...props.data1) : 3,\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          font: {\n            size: 12,\n          },\n        },\n      },\n      x: {\n        title: {\n          display: false,\n          text: \"Last X Games\",\n          font: {\n            size: 14,\n          },\n        },\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          display: false,\n          font: {\n            size: 14,\n          },\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 5,\n        },\n      },\n      title: {\n        display: true,\n        text: props.type,\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  const labels = Array.from(props.data1.keys());\n\n  console.log(props.data1)\n  console.log(props.data3)\n\n  let data = {\n    labels,\n    datasets: [\n      {\n        label: props.team1,\n        font: {\n          color: \"black\",\n        },\n        data: props.data1,\n        borderColor: \"#030061\",\n        borderWidth: 3,\n        backgroundColor: \"#030061\",\n        tension: props.tension,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        borderColor: \"#970d00\",\n        borderWidth: 3,\n        backgroundColor: \"#970d00\",\n        tension: props.tension,\n      }\n    ],\n  };\n\n  return <Line options={options} data={data} />;\n}\n\nexport function MultilineChart(props) {\n  let length;\n  let depth;\n\n  if (props.type === \"Points over time\") {\n    length = props.data1.length * 3;\n    depth = 0;\n  } else if (props.type === \"Rolling average points over last 10\") {\n    length = Math.abs(props.height);\n    depth = 0;\n  } else if (Math.abs(props.height) > Math.abs(props.depth)) {\n    length = Math.abs(props.height);\n    depth = -Math.abs(props.height);\n  } else if (Math.abs(props.height) < Math.abs(props.depth)) {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  } else {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  }\n\n  const options = {\n    color: \"#030061\",\n    responsive: true,\n    aspectRatio: 1.2,\n    maintainAspectRatio: true,\n    layout: {\n      padding: 3,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    scales: {\n      y: {\n        suggestedMin: depth,\n        suggestedMax: length,\n        // suggestedMax: Math.max(...props.data1) > 3 ? Math.max(...props.data1) : 3,\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          font: {\n            size: 12,\n          },\n        },\n      },\n      x: {\n        title: {\n          display: false,\n          text: \"Last X Games\",\n          font: {\n            size: 14,\n          },\n        },\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          display: false,\n          font: {\n            size: 14,\n          },\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 5,\n        },\n      },\n      title: {\n        display: true,\n        text: props.type,\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  const labels = Array.from(props.data1.keys());\n\n  let data = {\n    labels,\n    datasets: [\n      {\n        label: props.team1,\n        font: {\n          color: \"black\",\n        },\n        data: props.data1,\n        borderColor: \"#030061\",\n        borderWidth: 3,\n        backgroundColor: \"#030061\",\n        tension: props.tension,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        borderColor: \"#970d00\",\n        borderWidth: 3,\n        backgroundColor: \"#970d00\",\n        tension: props.tension,\n      },\n      {\n        label: `${props.team1} XG Diff`,\n        font: {\n          color: \"black\",\n        },\n        data: props.data3,\n        borderColor: \"#0600d6\",\n        borderWidth: 3,\n        backgroundColor: \"#0600d6\",\n        tension: props.tension,\n        hidden: true,\n      },\n      {\n        label: `${props.team2} XG Diff`,\n        font: {\n          color: \"black\",\n        },\n        data: props.data4,\n        borderColor: \"#be1000\",\n        borderWidth: 3,\n        backgroundColor: \"#be1000\",\n        tension: props.tension,\n        hidden: true,\n      },\n    ],\n  };\n\n  return <Line options={options} data={data} />;\n}\n\n\nexport function DoughnutChart(props) {\n  const options = {\n    color: \"#030061\",\n\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 10,\n          color: \"#030061\",\n        },\n      },\n      title: {\n        display: true,\n        text: \"XG Tipping Form Comparison\",\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  const data = {\n    labels: [props.homeTeam, props.awayTeam],\n    datasets: [\n      {\n        data: props.data,\n        backgroundColor: [\"#030061\", \"#970d00\"],\n        rotation: 270,\n        hoverOffset: 4,\n        cutout: \"75%\",\n        circumference: 180,\n      },\n    ],\n  };\n\n  const config = {\n    type: \"doughnut\",\n    data: data,\n  };\n\n  return <Doughnut options={options} data={data} />;\n}\n\nexport function RadarChart(props) {\n  const options = {\n    color: \"#030061\",\n    scales: {\n      r: {\n        angleLines: {\n          display: false,\n        },\n        suggestedMin: 0,\n        suggestedMax: 1,\n        ticks: {\n          precision: 0,\n          display: false,\n        },\n        // grid: {\n        //     circular: true,\n        //   }\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 10,\n          color: \"#030061\",\n        },\n      },\n      title: {\n        display: true,\n        text: props.title,\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  let data = {\n    labels: [\n      \"Attack rating\",\n      \"Defence rating\",\n      \"Ball retention\",\n      \"XG For\",\n      \"XG Against\",\n      \"Directness\",\n      \"Attacking precision\",\n    ],\n    datasets: [\n      {\n        label: props.team1,\n        data: props.data,\n        fill: true,\n        backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n        borderColor: \"#030061\",\n        pointBackgroundColor: \"#030061\",\n        pointBorderColor: \"#fff\",\n        pointHoverBackgroundColor: \"#fff\",\n        pointHoverBorderColor: \"rgb(255, 99, 132)\",\n        borderWidth: 2,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        fill: true,\n        backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n        borderColor: \"#970d00\",\n        pointBackgroundColor: \"#970d00\",\n        pointBorderColor: \"#fff\",\n        pointHoverBackgroundColor: \"#fff\",\n        pointHoverBorderColor: \"rgb(54, 162, 235)\",\n        borderWidth: 2,\n      },\n    ],\n  };\n\n  return <Radar options={options} data={data} />;\n}\n\nexport function BarChart(props) {\n  const datasetOne = props.data1;\n  const datasetTwo = props.data2;\n  const sum = datasetTwo.map(function (num, idx) {\n    return num - datasetOne[idx];\n  });\n\n  const max = Math.max(...sum);\n  const min = Math.min(...sum);\n\n  const largest = findLargestNum(max, min);\n\n  function findLargestNum(numOne, numTwo) {\n    const tempArr = [];\n    const firstNum = Math.abs(numOne);\n    const secondNum = Math.abs(numTwo);\n    tempArr.push(firstNum, secondNum);\n\n    return Math.max(...tempArr);\n  }\n\n  const options = {\n    color: \"#030061\",\n    indexAxis: \"y\",\n    // Elements options apply to all of the options unless overridden in a dataset\n    // In this case, we are setting the border of each horizontal bar to be 2px wide\n    aspectRatio: 1.3,\n    elements: {\n      bar: {\n        borderWidth: 2,\n      },\n    },\n    scales: {\n      x: {\n        min: -4,\n        max: 4,\n        ticks: {\n          display: false,\n        },\n      },\n      y: {\n        ticks: {\n          font: {\n            size: 10,\n          },\n        },\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: false,\n      },\n      title: {\n        display: true,\n        text: props.text,\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  const labels = [\n    \"Highest Goals\",\n    \"Fewest Conceeded\",\n    \"PPG\",\n    \"Highest XG\",\n    \"Fewest XG Conceeded\",\n    \"Shots On Target\",\n    \"Dangerous Attacks\",\n    \"Av. Possession\",\n    \"Home/Away Goal Diff\",\n    \"Corners\",\n  ];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        // label: 'Dataset 1',\n        legend: {\n          display: false,\n        },\n        data: sum,\n        backgroundColor(context) {\n          const index = context.dataIndex;\n          const value = context.dataset.data[index];\n          return value < 0 ? \"#030061\" : \"#970d00\";\n        },\n      },\n    ],\n  };\n\n  return <Bar options={options} data={data} />;\n}\n\nexport function BarChartTwo(props) {\n  const dataset = [props.data1, props.data2]\n\n  const options = {\n    color: \"#030061\",\n    indexAxis: \"x\",\n    // Elements options apply to all of the options unless overridden in a dataset\n    // In this case, we are setting the border of each horizontal bar to be 2px wide\n    aspectRatio: 1.3,\n    elements: {\n      bar: {\n        borderWidth: 2,\n      },\n    },\n    scales: {\n      y: {\n        min: -0.8,\n        max: 0.8,\n        ticks: {\n          display: true,\n          font: {\n            size: 10,\n          },\n        },\n      },\n      // y: {\n      //   suggestedMin: -0.8,\n      //   suggestedMax: 0.8,\n      //   ticks: {\n      //     font: {\n      //       size: 10,\n      //     },\n      //   },\n      // },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: true,\n      },\n      title: {\n        display: true,\n        text: [props.text],\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n      subtitle: {\n        display: true,\n        text: \"Green - Improving | Red - Worsening\",\n        color: \"#030061\",\n        font: {\n          size: 12,\n        },\n        padding: {\n          bottom: 10,\n        },\n      },\n    },\n  };\n\n  const labels = [\n    props.homeTeam,\n    props.awayTeam,\n  ];\n\n  const data = {\n    labels: labels,\n    datasets: [\n      {\n        legend: {\n          display: false,\n        },\n        // label: \"XG Recent Swing\",\n        data: dataset,\n        ticks: {\n          font: {\n            size: 14,\n          },\n        },\n        barThickness: 120,\n        backgroundColor(context) {\n          const index = context.dataIndex;\n          const value = context.dataset.data[index];\n          return value < 0 ? \"#730a00\" : \"#016001\";\n        },\n      },\n    ],\n  };\n\n  return <Bar options={options} data={data} />;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SofaLineupsWidget = ({ id, team1, team2, time, homeGoals, awayGoals }) => {\n  const iframeSrc = `https://widgets.sofascore.com/embed/lineups?id=${id}&widgetTheme=light`;\n\n  let differenceInSeconds, minutes\n  const currentTime = new Date().getTime() / 1000;\n  // Calculate the difference in seconds\n    if(time > 0){\n        differenceInSeconds = time - currentTime;\n        minutes = Math.floor(differenceInSeconds / 60);\n    } else {\n        minutes = -99999999\n    }\n\n\n\n  if(team1 === \"N/A\") {\n    return <h6>No lineups available for this match yet</h6>\n  } else if (minutes > 60) {\n    return (\n      <div>\n        <h6>Predicted lineups</h6>\n        <iframe\n          id={`sofa-lineups-embed-${id}`}\n          src={iframeSrc}\n          style={{\n            height: \"786px\",\n            maxWidth: \"800px\",\n            width: \"100%\",\n            border: \"0\",\n          }}\n          scrolling=\"no\"\n          title=\"SofaScore Lineups\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n      </div>\n    );\n  } else if (minutes < 60 && minutes > 0) {\n    return (\n      <div>\n        <h6>Lineups</h6>\n        <iframe\n          id={`sofa-lineups-embed-${id}`}\n          src={iframeSrc}\n          style={{\n            height: \"786px\",\n            maxWidth: \"800px\",\n            width: \"100%\",\n            border: \"0\",\n          }}\n          scrolling=\"no\"\n          title=\"SofaScore Lineups\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n      </div>\n    );\n  } else if (minutes < 0) {\n    return (\n      <div>\n        <div className=\"CurrentScore\">Score: {`${team1}: ${homeGoals} - ${team2}: ${awayGoals}`}</div>\n        <span>Score not live updated</span>\n        <h6 className=\"AttackingMomentum\">Live attacking momentum and goals</h6>\n        <iframe\n          width=\"100%\"\n          height=\"286\"\n          src={`https://widgets.sofascore.com/embed/attackMomentum?id=${id}&widgetTheme=light`}\n          frameborder=\"0\"\n          scrolling=\"no\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n        <h6>Lineups and in-play ratings</h6>\n        <iframe\n          id={`sofa-lineups-embed-${id}`}\n          src={iframeSrc}\n          style={{\n            height: \"786px\",\n            maxWidth: \"800px\",\n            width: \"100%\",\n            border: \"0\",\n          }}\n          scrolling=\"no\"\n          title=\"SofaScore Lineups\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n      </div>\n    );\n  }\n  else {\n    return <h6>{`Lineups coming in approximately ${minutes - 60} minutes`}</h6>;\n  }\n};\n\n\nSofaLineupsWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  team1: PropTypes.string.isRequired,\n  team2: PropTypes.string.isRequired,\n};\n\nexport default SofaLineupsWidget;\n","import ReactDOM from \"react-dom\";\nimport { Button } from \"../components/Button\";\nimport Stats from \"../components/createStatsDiv\";\nimport Div from \"../components/Div\";\nimport { allForm } from \"../logic/getFixtures\";\nimport { getTeamStats } from \"../logic/getTeamStats\";\nimport { getPointsFromLastX } from \"../logic/getScorePredictions\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport GenerateFormSummary from \"../logic/compareFormTrend\";\nimport {\n  Chart,\n  MultilineChart,\n  RadarChart,\n  BarChart,\n  BarChartTwo,\n  DoughnutChart,\n} from \"../components/Chart\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { clicked } from \"../logic/getScorePredictions\";\nimport SofaLineupsWidget from \"../components/SofaScore\";\nimport { arrayOfGames } from \"../logic/getFixtures\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nexport async function calculateAttackingStrength(stats) {\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    // averagePossession: 0.15,\n    \"Average Dangerous Attacks\": 0.05,\n    \"Average Shots\": 0.05,\n    \"Average Shots On Target\": 0.15,\n    \"Average Expected Goals\": 0.15,\n    \"Recent XG\": 0.15,\n    \"Average Goals\": 0.3,\n    Corners: 0,\n    \"Average Shot Value\": 0.1,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    // averagePossession: { min: 25, max: 75 },\n    \"Average Dangerous Attacks\": { min: 25, max: 75 }, // Adjust the max value as needed\n    \"Average Shots\": { min: 4, max: 25 }, // Adjust the max value as needed\n    \"Average Shots On Target\": { min: 3, max: 7 }, // Adjust the max value as needed\n    \"Average Expected Goals\": { min: 0.75, max: 2.25 }, // Adjust the max value as needed\n    \"Recent XG\": { min: 0.5, max: 2.25 }, // Adjust the max value as needed\n    \"Average Goals\": { min: 0, max: 3 }, // Adjust the max value as needed\n    Corners: { min: 2, max: 9 },\n    \"Average Shot Value\": { min: 8.5, max: 13 },\n  };\n\n  // Normalize each metric value and calculate the weighted sum\n  let weightedSum = 0;\n  for (const metric in stats) {\n    if (\n      stats.hasOwnProperty(metric) &&\n      weights.hasOwnProperty(metric) &&\n      ranges.hasOwnProperty(metric)\n    ) {\n      const normalizedValue = Math.max(\n        0,\n        Math.min(\n          1,\n          (stats[metric] - ranges[metric].min) /\n            (ranges[metric].max - ranges[metric].min)\n        )\n      );\n      weightedSum += normalizedValue * weights[metric];\n    } else {\n      console.log(metric);\n    }\n  }\n\n  return parseFloat(weightedSum.toFixed(2));\n}\n\nexport async function calculateDefensiveStrength(stats, normalizedValue = 1) {\n  let normValue = normalizedValue;\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    \"Average XG Against\": 0.2,\n    \"Recent XG Against\": 0.3,\n    \"Average Goals Against\": 0.4,\n    \"Average SOT Against\": 0.1,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    \"Average XG Against\": { min: 0.5, max: 2.25 }, // Adjust the max value as needed\n    \"Recent XG Against\": { min: 0.75, max: 2.25 },\n    \"Average Goals Against\": { min: 0, max: 3 }, // Adjust the max value as needed\n    \"Average SOT Against\": { min: 3, max: 7 },\n  };\n\n  // Normalize each metric value and calculate the weighted sum\n  let weightedSum = 0;\n  for (const metric in stats) {\n    if (\n      stats.hasOwnProperty(metric) &&\n      weights.hasOwnProperty(metric) &&\n      ranges.hasOwnProperty(metric)\n    ) {\n     // Normalize the value and clamp it between 0 and 1\n     let normalizedValue = (stats[metric] - ranges[metric].min) / (ranges[metric].max - ranges[metric].min);\n     normalizedValue = Math.max(0, Math.min(1, normalizedValue));\n\n     // Reverse logic for defensive strength: better defense, lower metric value\n     let val = normValue - normalizedValue;\n     \n     // Add the weighted value to the weightedSum\n     weightedSum += val * weights[metric];\n    }\n  }\n\n  return parseFloat(weightedSum.toFixed(2));\n}\n\nexport async function calculateMetricStrength(metricName, metricValue) {\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    averagePossession: 1,\n    xgFor: 1,\n    xgAgainst: 1,\n    directnessOverall: 1,\n    accuracyOverall: 1,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    averagePossession: { min: 20, max: 80 },\n    xgFor: { min: 0.25, max: 2.75 },\n    xgAgainst: { min: 0.25, max: 2.75 },\n    directnessOverall: { min: 0.5, max: 7 },\n    accuracyOverall: { min: 6, max: 14 },\n  };\n\n  // Ensure the metric is valid and exists in the weights and ranges objects\n  if (\n    !weights.hasOwnProperty(metricName) ||\n    !ranges.hasOwnProperty(metricName)\n  ) {\n    throw new Error(\"Invalid metric name or missing normalization range.\");\n  }\n\n  // Normalize the metric value\n  const normalizedValue =\n    (metricValue - ranges[metricName].min) /\n    (ranges[metricName].max - ranges[metricName].min);\n\n  // Calculate the weighted score\n  const weightedScore = normalizedValue * weights[metricName];\n\n  return parseFloat(weightedScore.toFixed(2));\n}\n\n// export async function getDefenceStrength(goalsAgainst) {\n//   let strength;\n//   switch (true) {\n//     case goalsAgainst >= 2.8:\n//       strength = 1;\n//       break;\n//     case goalsAgainst >= 2.5 && goalsAgainst < 2.8:\n//       strength = 2;\n//       break;\n//     case goalsAgainst >= 2.2 && goalsAgainst < 2.5:\n//       strength = 3;\n//       break;\n//     case goalsAgainst >= 1.9 && goalsAgainst < 2.2:\n//       strength = 4;\n//       break;\n//     case goalsAgainst >= 1.6 && goalsAgainst < 1.9:\n//       strength = 5;\n//       break;\n//     case goalsAgainst >= 1.3 && goalsAgainst < 1.6:\n//       strength = 6;\n//       break;\n//     case goalsAgainst >= 1 && goalsAgainst < 1.3:\n//       strength = 7;\n//       break;\n//     case goalsAgainst >= 0.7 && goalsAgainst < 1:\n//       strength = 8;\n//       break;\n//     case goalsAgainst >= 0.4 && goalsAgainst < 0.7:\n//       strength = 9;\n//       break;\n//     case goalsAgainst < 0.4:\n//       strength = 10;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getPossessionStrength(possession) {\n//   let strength;\n//   switch (true) {\n//     case possession >= 68:\n//       strength = 10;\n//       break;\n//     case possession >= 64 && possession < 68:\n//       strength = 9;\n//       break;\n//     case possession >= 60 && possession < 64:\n//       strength = 8;\n//       break;\n//     case possession >= 56 && possession < 60:\n//       strength = 7;\n//       break;\n//     case possession >= 52 && possession < 56:\n//       strength = 6;\n//       break;\n//     case possession >= 48 && possession < 52:\n//       strength = 5;\n//       break;\n//     case possession >= 44 && possession < 48:\n//       strength = 4;\n//       break;\n//     case possession >= 40 && possession < 44:\n//       strength = 3;\n//       break;\n//     case possession >= 35 && possession < 40:\n//       strength = 2;\n//       break;\n//     case possession < 35:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getShotsStrength(Shots) {\n//   let strength;\n//   switch (true) {\n//     case Shots >= 15:\n//       strength = 10;\n//       break;\n//     case Shots >= 14.25 && Shots < 15:\n//       strength = 9;\n//       break;\n//     case Shots >= 13.5 && Shots < 14.25:\n//       strength = 8;\n//       break;\n//     case Shots >= 12.75 && Shots < 13.5:\n//       strength = 7;\n//       break;\n//     case Shots >= 12 && Shots < 12.75:\n//       strength = 6;\n//       break;\n//     case Shots >= 11.25 && Shots < 12:\n//       strength = 5;\n//       break;\n//     case Shots >= 10.5 && Shots < 11.25:\n//       strength = 4;\n//       break;\n//     case Shots >= 9.75 && Shots < 10.5:\n//       strength = 3;\n//       break;\n//     case Shots >= 9 && Shots < 9.75:\n//       strength = 2;\n//       break;\n//     case Shots < 9:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getShotsStrengthHorA(Shots) {\n//   let strength;\n//   switch (true) {\n//     case Shots >= 19.5:\n//       strength = 10;\n//       break;\n//     case Shots >= 18 && Shots < 19.5:\n//       strength = 9;\n//       break;\n//     case Shots >= 17 && Shots < 18:\n//       strength = 8;\n//       break;\n//     case Shots >= 15.5 && Shots < 17:\n//       strength = 7;\n//       break;\n//     case Shots >= 14 && Shots < 15.5:\n//       strength = 6;\n//       break;\n//     case Shots >= 12.5 && Shots < 14:\n//       strength = 5;\n//       break;\n//     case Shots >= 11 && Shots < 12.5:\n//       strength = 4;\n//       break;\n//     case Shots >= 9.5 && Shots < 11:\n//       strength = 3;\n//       break;\n//     case Shots >= 8 && Shots < 9.5:\n//       strength = 2;\n//       break;\n//     case Shots < 8:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGForStrength(XG) {\n//   let strength;\n//   switch (true) {\n//     case XG >= 2.9:\n//       strength = 10;\n//       break;\n//     case XG >= 2.6 && XG < 2.9:\n//       strength = 9;\n//       break;\n//     case XG >= 2.3 && XG < 2.6:\n//       strength = 8;\n//       break;\n//     case XG >= 2 && XG < 2.3:\n//       strength = 7;\n//       break;\n//     case XG >= 1.7 && XG < 2:\n//       strength = 6;\n//       break;\n//     case XG >= 1.4 && XG < 1.7:\n//       strength = 5;\n//       break;\n//     case XG >= 1.1 && XG < 1.4:\n//       strength = 4;\n//       break;\n//     case XG >= 0.8 && XG < 1.1:\n//       strength = 3;\n//       break;\n//     case XG >= 0.5 && XG < 0.8:\n//       strength = 2;\n//       break;\n//     case XG < 0.5:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGAgainstStrength(XGAgainst) {\n//   let strength;\n//   switch (true) {\n//     case XGAgainst >= 2.9:\n//       strength = 1;\n//       break;\n//     case XGAgainst >= 2.6 && XGAgainst < 2.9:\n//       strength = 2;\n//       break;\n//     case XGAgainst >= 2.3 && XGAgainst < 2.6:\n//       strength = 3;\n//       break;\n//     case XGAgainst >= 2 && XGAgainst < 2.3:\n//       strength = 4;\n//       break;\n//     case XGAgainst >= 1.7 && XGAgainst < 2:\n//       strength = 5;\n//       break;\n//     case XGAgainst >= 1.4 && XGAgainst < 1.7:\n//       strength = 6;\n//       break;\n//     case XGAgainst >= 1.1 && XGAgainst < 1.4:\n//       strength = 7;\n//       break;\n//     case XGAgainst >= 0.8 && XGAgainst < 1.1:\n//       strength = 8;\n//       break;\n//     case XGAgainst >= 0.5 && XGAgainst < 0.8:\n//       strength = 9;\n//       break;\n//     case XGAgainst < 0.5:\n//       strength = 10;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGDifferentialStrength(XGDiff) {\n//   let strength;\n//   switch (true) {\n//     case XGDiff >= 1.5:\n//       strength = 10;\n//       break;\n//     case XGDiff >= 1 && XGDiff < 1.5:\n//       strength = 9;\n//       break;\n//     case XGDiff >= 0.5 && XGDiff < 1:\n//       strength = 8;\n//       break;\n//     case XGDiff >= 0.25 && XGDiff < 0.5:\n//       strength = 7;\n//       break;\n//     case XGDiff > 0 && XGDiff < 0.25:\n//       strength = 6;\n//       break;\n//     case XGDiff <= 0 && XGDiff > -0.25:\n//       strength = 5;\n//       break;\n//     case XGDiff <= -0.25 && XGDiff > -0.5:\n//       strength = 4;\n//       break;\n//     case XGDiff <= -0.5 && XGDiff > -1:\n//       strength = 3;\n//       break;\n//     case XGDiff <= -1 && XGDiff > -1.5:\n//       strength = 2;\n//       break;\n//     case XGDiff <= -1.5:\n//       strength = 1;\n//       break;\n//     default:\n//       console.log(\"default clause triggered\");\n//       break;\n//   }\n//   return strength;\n// }\n\nexport async function getXGtoActualDifferentialStrength(XGDiff) {\n  let strength;\n  switch (true) {\n    case XGDiff >= 1.5:\n      strength = 10;\n      break;\n    case XGDiff >= 1 && XGDiff < 1.5:\n      strength = 9;\n      break;\n    case XGDiff >= 0.5 && XGDiff < 1:\n      strength = 8;\n      break;\n    case XGDiff >= 0.25 && XGDiff < 0.5:\n      strength = 7;\n      break;\n    case XGDiff > 0 && XGDiff < 0.25:\n      strength = 6;\n      break;\n    case XGDiff <= 0 && XGDiff > -0.25:\n      strength = 5;\n      break;\n    case XGDiff <= -0.25 && XGDiff > -0.5:\n      strength = 4;\n      break;\n    case XGDiff <= -0.5 && XGDiff > -1:\n      strength = 3;\n      break;\n    case XGDiff <= -1 && XGDiff > -1.5:\n      strength = 2;\n      break;\n    case XGDiff <= -1.5:\n      strength = 1;\n      break;\n    default:\n      strength = 1;\n      break;\n  }\n  return strength;\n}\n\nlet rollingGoalDiffTotalHome = [];\nlet rollingGoalDiffTotalAway = [];\nlet rollingXGDiffTotalHome = [];\nlet rollingXGDiffTotalAway = [];\nlet rollingSOTDiffTotalHome = [];\nlet rollingSOTDiffTotalAway = [];\n\nexport async function createStatsDiv(game, displayBool) {\n  if (game.status !== \"void\") {\n    // takes the displayBool boolean from the fixture onClick and sets the styling of the stats div from there\n    function styling(testBool) {\n      let bool = testBool;\n      if (bool === true && clicked === true) {\n        // set stats element to display flex\n        return { display: \"block\" };\n      } else {\n        // set stats element to display none\n        return { display: \"none\" };\n      }\n    }\n    let style = styling(displayBool);\n\n    if (clicked === false) {\n      alert(\"Tap Get Predictions to fetch all game stats first\");\n    } else {\n      let index = 2;\n      let divider = 10;\n\n      let gameStats = allForm.find((match) => match.id === game.id);\n      const gameArrayHome = [];\n      const gameArrayAway = [];\n      const gameArrayHomeTeamHomeGames = [];\n      const gameArrayAwayTeamAwayGames = [];\n      let goalDiffArrayHome;\n      let goalDiffArrayAway;\n      let xgDiffArrayHome;\n      let xgDiffArrayAway;\n      let sotDiffArrayHome;\n      let sotDiffArrayAway;\n      let latestHomeGoalDiff;\n      let latestAwayGoalDiff;\n\n      var getEMA = (a, r) =>\n        a.reduce(\n          (p, n, i) =>\n            i\n              ? p.concat(\n                  (2 * n) / (r + 1) + (p[p.length - 1] * (r - 1)) / (r + 1)\n                )\n              : p,\n          [a[0]]\n        );\n\n      const homeForm = gameStats.home[index];\n      const awayForm = gameStats.away[index];\n\n      if (displayBool === true) {\n        // let fixtures = await fetch(\n        //   `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${gameStats.leagueId}`\n        // );\n\n        const pos = allLeagueResultsArrayOfObjects\n          .map((i) => i.id)\n          .indexOf(gameStats.leagueId);\n        let matches = allLeagueResultsArrayOfObjects[pos];\n        // await fixtures.json().then((matches) => {\n        const resultHome = matches.fixtures.filter(\n          (game) =>\n            game.home_name === gameStats.home.teamName ||\n            game.away_name === gameStats.home.teamName\n        );\n\n        const resultHomeOnly = matches.fixtures.filter(\n          (game) => game.home_name === gameStats.home.teamName\n        );\n\n        resultHome.sort((a, b) => b.date_unix - a.date_unix);\n        resultHomeOnly.sort((a, b) => b.date_unix - a.date_unix);\n\n        for (let i = 0; i < resultHome.length; i++) {\n          let unixTimestamp = resultHome[i].date_unix;\n          let milliseconds = unixTimestamp * 1000;\n          let dateObject = new Date(milliseconds).toLocaleString(\"en-GB\", {\n            timeZone: \"UTC\",\n          });\n\n          let won;\n          let goalsScored;\n          let goalsConceeded;\n\n          switch (true) {\n            case resultHome[i].home_name === gameStats.home.teamName:\n              switch (true) {\n                case resultHome[i].homeGoalCount > resultHome[i].awayGoalCount:\n                  won = \"W\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                case resultHome[i].homeGoalCount ===\n                  resultHome[i].awayGoalCount:\n                  won = \"D\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                case resultHome[i].homeGoalCount < resultHome[i].awayGoalCount:\n                  won = \"L\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                default:\n                  break;\n              }\n              break;\n            case resultHome[i].away_name === gameStats.home.teamName:\n              switch (true) {\n                case resultHome[i].homeGoalCount > resultHome[i].awayGoalCount:\n                  won = \"L\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                case resultHome[i].homeGoalCount ===\n                  resultHome[i].awayGoalCount:\n                  won = \"D\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                case resultHome[i].homeGoalCount < resultHome[i].awayGoalCount:\n                  won = \"W\";\n                  goalsScored = resultHome[i].homeGoalCount;\n                  goalsConceeded = resultHome[i].awayGoalCount;\n                  break;\n                default:\n                  break;\n              }\n              break;\n            default:\n              break;\n          }\n\n          gameArrayHome.push({\n            id: resultHome[i].id,\n            date: dateObject,\n            homeTeam: resultHome[i].home_name,\n            homeGoals: resultHome[i].homeGoalCount,\n            homeXG: resultHome[i].team_a_xg,\n            homeOdds: resultHome[i].odds_ft_1,\n            awayTeam: resultHome[i].away_name,\n            awayGoals: resultHome[i].awayGoalCount,\n            awayXG: resultHome[i].team_b_xg,\n            awayOdds: resultHome[i].odds_ft_2,\n            won: won,\n            homeShots: resultHome[i].team_a_shots,\n            awayShots: resultHome[i].team_b_shots,\n            homeSot: resultHome[i].team_a_shotsOnTarget,\n            awaySot: resultHome[i].team_b_shotsOnTarget,\n            homeRed: resultHome[i].team_a_red_cards,\n            awayRed: resultHome[i].team_b_red_cards,\n            homePossession: resultHome[i].team_a_possession,\n            awayPossession: resultHome[i].team_b_possession,\n            homeDangerousAttacks: resultHome[i].team_a_dangerous_attacks,\n            awayDangerousAttacks: resultHome[i].team_b_dangerous_attacks,\n            homePPG: resultHome[i].pre_match_teamA_overall_ppg,\n            awayPPG: resultHome[i].pre_match_teamB_overall_ppg,\n            unixTimestamp: resultHome[i].date_unix,\n            goalsFor: goalsScored,\n            goalsAgainst: goalsConceeded,\n            btts:\n              resultHome[i].homeGoalCount > 0 && resultHome[i].awayGoalCount > 0\n                ? \"\\u2714\"\n                : \"\\u2718\",\n          });\n        }\n\n        for (let i = 0; i < resultHomeOnly.length; i++) {\n          let wonHomeOrAwayOnly;\n\n          switch (true) {\n            case resultHomeOnly[i].home_name === gameStats.home.teamName:\n              switch (true) {\n                case resultHomeOnly[i].homeGoalCount >\n                  resultHomeOnly[i].awayGoalCount:\n                  wonHomeOrAwayOnly = \"W\";\n                  gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n                  break;\n                case resultHomeOnly[i].homeGoalCount ===\n                  resultHomeOnly[i].awayGoalCount:\n                  wonHomeOrAwayOnly = \"D\";\n                  gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n                  break;\n                case resultHomeOnly[i].homeGoalCount <\n                  resultHomeOnly[i].awayGoalCount:\n                  wonHomeOrAwayOnly = \"L\";\n                  gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n                  break;\n                default:\n                  break;\n              }\n              break;\n\n            default:\n              break;\n          }\n        }\n\n        goalDiffArrayHome = homeForm.allTeamResults.map(\n          (a) => a.scored - a.conceeded\n        );\n        goalDiffArrayHome = goalDiffArrayHome.reverse()\n        xgDiffArrayHome = homeForm.allTeamResults.map(\n          (a) => a.XG - a.XGAgainst\n        );\n        xgDiffArrayHome = xgDiffArrayHome.reverse()\n\n        sotDiffArrayHome = homeForm.allTeamResults.map(\n          (a) => a.sot - a.sotAgainst\n        );\n        sotDiffArrayHome = sotDiffArrayHome.reverse()\n        \n        // goalDiffArrayHome = gameArrayHome.map(\n        //   (a) => a.goalsFor - a.goalsAgainst\n        // );\n\n\n        gameArrayHome.sort((a, b) => b.unixTimestamp - a.unixTimestamp);\n\n        rollingGoalDiffTotalHome = goalDiffArrayHome.map((sum => value => sum += value)(0));\n        rollingXGDiffTotalHome = xgDiffArrayHome.map((sum => value => sum += value)(0));;\n        rollingSOTDiffTotalHome = sotDiffArrayHome.map((sum => value => sum += value)(0));\n\n        const resultAway = matches.fixtures.filter(\n          (game) =>\n            game.away_name === gameStats.away.teamName ||\n            game.home_name === gameStats.away.teamName\n        );\n\n        const resultAwayOnly = matches.fixtures.filter(\n          (game) => game.away_name === gameStats.away.teamName\n        );\n\n        resultAway.sort((a, b) => b.date_unix - a.date_unix);\n        resultAwayOnly.sort((a, b) => b.date_unix - a.date_unix);\n\n        for (let i = 0; i < resultAway.length; i++) {\n          let unixTimestamp = resultAway[i].date_unix;\n          let milliseconds = unixTimestamp * 1000;\n          let dateObject = new Date(milliseconds).toLocaleString(\"en-GB\", {\n            timeZone: \"UTC\",\n          });\n\n          let won;\n          let goalsScored;\n          let goalsConceeded;\n\n          switch (true) {\n            case resultAway[i].home_name === gameStats.away.teamName:\n              switch (true) {\n                case resultAway[i].homeGoalCount > resultAway[i].awayGoalCount:\n                  won = \"W\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                case resultAway[i].awayGoalCount ===\n                  resultAway[i].homeGoalCount:\n                  won = \"D\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                case resultAway[i].homeGoalCount < resultAway[i].awayGoalCount:\n                  won = \"L\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                default:\n                  break;\n              }\n              break;\n\n            case resultAway[i].away_name === gameStats.away.teamName:\n              switch (true) {\n                case resultAway[i].homeGoalCount > resultAway[i].awayGoalCount:\n                  won = \"L\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                case resultAway[i].homeGoalCount ===\n                  resultAway[i].awayGoalCount:\n                  won = \"D\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                case resultAway[i].homeGoalCount < resultAway[i].awayGoalCount:\n                  won = \"W\";\n                  goalsScored = resultAway[i].awayGoalCount;\n                  goalsConceeded = resultAway[i].homeGoalCount;\n                  break;\n                default:\n                  break;\n              }\n              break;\n            default:\n              break;\n          }\n\n          gameArrayAway.push({\n            id: resultAway[i].id,\n            date: dateObject,\n            homeTeam: resultAway[i].home_name,\n            homeGoals: resultAway[i].homeGoalCount,\n            homeXG: resultAway[i].team_a_xg,\n            homeOdds: resultAway[i].odds_ft_1,\n            awayTeam: resultAway[i].away_name,\n            awayGoals: resultAway[i].awayGoalCount,\n            awayXG: resultAway[i].team_b_xg,\n            awayOdds: resultAway[i].odds_ft_2,\n            won: won,\n            homeShots: resultAway[i].team_a_shots,\n            awayShots: resultAway[i].team_b_shots,\n            homeSot: resultAway[i].team_a_shotsOnTarget,\n            awaySot: resultAway[i].team_b_shotsOnTarget,\n            homeRed: resultAway[i].team_a_red_cards,\n            awayRed: resultAway[i].team_b_red_cards,\n            homePossession: resultAway[i].team_a_possession,\n            awayPossession: resultAway[i].team_b_possession,\n            homeDangerousAttacks: resultAway[i].team_a_dangerous_attacks,\n            awayDangerousAttacks: resultAway[i].team_b_dangerous_attacks,\n            homePPG: resultAway[i].pre_match_teamA_overall_ppg,\n            awayPPG: resultAway[i].pre_match_teamB_overall_ppg,\n            unixTimestamp: resultAway[i].date_unix,\n            goalsFor: goalsScored,\n            goalsAgainst: goalsConceeded,\n            btts:\n              resultAway[i].homeGoalCount > 0 && resultAway[i].awayGoalCount > 0\n                ? \"\\u2714\"\n                : \"\\u2718\",\n          });\n        }\n\n        for (let i = 0; i < resultAwayOnly.length; i++) {\n          let wonAwayOrAwayOnly;\n\n          switch (true) {\n            case resultAwayOnly[i].away_name === gameStats.away.teamName:\n              switch (true) {\n                case resultAwayOnly[i].awayGoalCount >\n                  resultAwayOnly[i].homeGoalCount:\n                  wonAwayOrAwayOnly = \"W\";\n                  gameArrayAwayTeamAwayGames.push(wonAwayOrAwayOnly);\n                  break;\n                case resultAwayOnly[i].awayGoalCount ===\n                  resultAwayOnly[i].homeGoalCount:\n                  wonAwayOrAwayOnly = \"D\";\n                  gameArrayAwayTeamAwayGames.push(wonAwayOrAwayOnly);\n                  break;\n                case resultAwayOnly[i].awayGoalCount <\n                  resultAwayOnly[i].homeGoalCount:\n                  wonAwayOrAwayOnly = \"L\";\n                  gameArrayAwayTeamAwayGames.push(wonAwayOrAwayOnly);\n                  break;\n                default:\n                  break;\n              }\n              break;\n\n            default:\n              break;\n          }\n        }\n\n        goalDiffArrayAway = awayForm.allTeamResults.map(\n          (a) => a.scored - a.conceeded\n        );\n        goalDiffArrayAway = goalDiffArrayAway.reverse()\n        xgDiffArrayAway = awayForm.allTeamResults.map(\n          (a) => a.XG - a.XGAgainst\n        );\n        xgDiffArrayAway = xgDiffArrayAway.reverse()\n\n        sotDiffArrayAway = awayForm.allTeamResults.map(\n          (a) => a.sot - a.sotAgainst\n        );\n        sotDiffArrayAway = sotDiffArrayAway.reverse()\n\n        gameArrayAway.sort((a, b) => b.unixTimestamp - a.unixTimestamp);\n\n        rollingGoalDiffTotalAway = goalDiffArrayAway.map((sum => value => sum += value)(0));\n        rollingXGDiffTotalAway = xgDiffArrayAway.map((sum => value => sum += value)(0));\n        rollingSOTDiffTotalAway = sotDiffArrayAway.map((sum => value => sum += value)(0));\n        // });\n      }\n\n      const bttsArrayHome = Array.from(gameArrayHome, (x) => x.btts);\n      const bttsArrayAway = Array.from(gameArrayAway, (x) => x.btts);\n      const resultsArrayHome = Array.from(gameArrayHome, (x) => x.won);\n      const resultsArrayAway = Array.from(gameArrayAway, (x) => x.won);\n\n      let homeTeam = gameStats.home.teamName;\n      let awayTeam = gameStats.away.teamName;\n\n      let time = game.time;\n\n      if (homeForm.last3Points === undefined) {\n        homeForm.last3Points = getPointsFromLastX(homeForm.lastThreeForm);\n\n        homeForm.last5Points = getPointsFromLastX(homeForm.LastFiveForm);\n\n        homeForm.last6Points = getPointsFromLastX(homeForm.LastSixForm);\n\n        homeForm.last10Points = getPointsFromLastX(homeForm.LastTenForm);\n\n        awayForm.last3Points = getPointsFromLastX(awayForm.lastThreeForm);\n\n        awayForm.last5Points = getPointsFromLastX(awayForm.LastFiveForm);\n\n        awayForm.last6Points = getPointsFromLastX(awayForm.LastSixForm);\n\n        awayForm.last10Points = getPointsFromLastX(awayForm.LastTenForm);\n      }\n\n      async function getPointAverage(pointTotal, games) {\n        return pointTotal / games;\n      }\n\n      // let homeThreeGameAverage = await getPointAverage(\n      //   homeForm.last3Points,\n      //   3\n      // );\n\n      let homeFiveGameAverage = await getPointAverage(homeForm.last5Points, 5);\n\n      let homeSixGameAverage = await getPointAverage(homeForm.last6Points, 6);\n\n      let homeTenGameAverage = await getPointAverage(homeForm.last10Points, 10);\n\n      // let awayThreeGameAverage = await getPointAverage(\n      //   awayForm.last3Points,\n      //   3\n      // );\n\n      let awayFiveGameAverage = await getPointAverage(awayForm.last5Points, 5);\n\n      let awaySixGameAverage = await getPointAverage(awayForm.last6Points, 6);\n\n      let awayTenGameAverage = await getPointAverage(awayForm.last10Points, 10);\n\n      async function getPointsFromGames(formArr) {\n        const pairings = {\n          W: 3,\n          D: 1,\n          L: 0,\n        };\n        let newArr = [];\n        let arrayOfIndividualPoints = [];\n        let sum = 0;\n\n        for (let i = 0; i < formArr.length; i++) {\n          sum = sum + pairings[formArr[i]];\n          newArr.push(sum);\n          arrayOfIndividualPoints.push(pairings[formArr[i]]);\n        }\n        return [newArr, arrayOfIndividualPoints];\n      }\n\n      async function getLastGameResult(lastGame) {\n        let text;\n        switch (true) {\n          case lastGame === \"L\":\n            text = \"Lost\";\n            break;\n          case lastGame === \"D\":\n            text = \"Drew\";\n            break;\n          case lastGame === \"W\":\n            text = \"Won\";\n            break;\n          default:\n            break;\n        }\n        return text;\n      }\n\n      let homeFormTrend = [\n        homeFiveGameAverage.toFixed(2),\n        homeTenGameAverage.toFixed(2),\n      ];\n\n      let awayFormTrend = [\n        awayFiveGameAverage.toFixed(2),\n        awayTenGameAverage.toFixed(2),\n      ];\n\n      let formTextStringHome;\n      let formTextStringAway;\n\n      if (displayBool === true && gameStats.home[2].LeagueOrAll === \"League\") {\n        formTextStringHome = await GenerateFormSummary(\n          gameStats.home[2],\n          homeFormTrend,\n          gameStats.home[0]\n        );\n        formTextStringAway = await GenerateFormSummary(\n          gameStats.away[2],\n          awayFormTrend,\n          gameStats.away[0]\n        );\n      } else {\n        formTextStringHome = \"\";\n        formTextStringAway = \"\";\n      }\n\n      let favouriteRecordHome, favouriteRecordAway;\n      console.log(homeForm.teamName)\n      console.log(homeForm.oddsReliabilityWin)\n\n      console.log(awayForm.teamName)\n      console.log(awayForm.oddsReliabilityWin)\n      if (homeForm.underdogCount && awayForm.underdogCount && homeForm.favouriteCount && awayForm.favouriteCount) {\n        favouriteRecordHome =\n          game.homeOdds < game.awayOdds || game.homeOdds === game.awayOdds\n            ? `${homeForm.teamName} have been favourites ${\n                homeForm.favouriteCount\n              } times. Of these games, they have Won: ${homeForm.oddsReliabilityWin.toFixed(\n                0\n              )}%, Drawn:  ${homeForm.oddsReliabilityDraw.toFixed(\n                0\n              )}%, Lost:  ${homeForm.oddsReliabilityLose.toFixed(0)}%`\n            : `${homeForm.teamName} have been underdogs ${\n                homeForm.underdogCount\n              } times. Of these games, they have Won: ${homeForm.oddsReliabilityWinAsUnderdog.toFixed(\n                0\n              )}%, Drawn:  ${homeForm.oddsReliabilityDrawAsUnderdog.toFixed(\n                0\n              )}%, Lost:  ${homeForm.oddsReliabilityLoseAsUnderdog.toFixed(\n                0\n              )}%`;\n        favouriteRecordAway =\n          game.homeOdds > game.awayOdds || game.homeOdds === game.awayOdds\n            ? `${awayForm.teamName} have been favourites ${\n                awayForm.favouriteCount\n              } times. Of these games, they have Won: ${awayForm.oddsReliabilityWin.toFixed(\n                0\n              )}%, Drawn:  ${awayForm.oddsReliabilityDraw.toFixed(\n                0\n              )}%, Lost:  ${awayForm.oddsReliabilityLose.toFixed(0)}%`\n            : `${awayForm.teamName} have been underdogs ${\n                awayForm.underdogCount\n              } times. Of these games, they have Won: ${awayForm.oddsReliabilityWinAsUnderdog.toFixed(\n                0\n              )}%, Drawn:  ${awayForm.oddsReliabilityDrawAsUnderdog.toFixed(\n                0\n              )}%, Lost:  ${awayForm.oddsReliabilityLoseAsUnderdog.toFixed(\n                0\n              )}%`;\n      } else if (!homeForm.favouriteCount && awayForm.favouriteCount && !homeForm.underdogCount && awayForm.underdogCount) {\n        favouriteRecordHome = 'No previous fixtures match the profile of this game.'\n        favouriteRecordAway =\n          game.homeOdds > game.awayOdds || game.homeOdds === game.awayOdds\n            ? `${awayForm.teamName} have been favourites ${\n                awayForm.favouriteCount\n              } times. Of these games, they have Won: ${awayForm.oddsReliabilityWin.toFixed(\n                0\n              )}%, Drawn:  ${awayForm.oddsReliabilityDraw.toFixed(\n                0\n              )}%, Lost:  ${awayForm.oddsReliabilityLose.toFixed(0)}%`\n            : `${awayForm.teamName} have been underdogs ${\n                awayForm.underdogCount\n              } times. Of these games, they have Won: ${awayForm.oddsReliabilityWinAsUnderdog.toFixed(\n                0\n              )}%, Drawn:  ${awayForm.oddsReliabilityDrawAsUnderdog.toFixed(\n                0\n              )}%, Lost:  ${awayForm.oddsReliabilityLoseAsUnderdog.toFixed(\n                0\n              )}%`;\n      } else if (homeForm.oddsReliabilityWin && !awayForm.oddsReliabilityWin){\n        favouriteRecordHome =\n          game.homeOdds < game.awayOdds || game.homeOdds === game.awayOdds\n            ? `${homeForm.teamName} have been favourites ${\n                homeForm.favouriteCount\n              } times. Of these games, they have Won: ${homeForm.oddsReliabilityWin.toFixed(\n                0\n              )}%, Drawn:  ${homeForm.oddsReliabilityDraw.toFixed(\n                0\n              )}%, Lost:  ${homeForm.oddsReliabilityLose.toFixed(0)}%`\n            : `${homeForm.teamName} have been underdogs ${\n                homeForm.underdogCount\n              } times. Of these games, they have Won: ${homeForm.oddsReliabilityWinAsUnderdog.toFixed(\n                0\n              )}%, Drawn:  ${homeForm.oddsReliabilityDrawAsUnderdog.toFixed(\n                0\n              )}%, Lost:  ${homeForm.oddsReliabilityLoseAsUnderdog.toFixed(\n                0\n              )}%`;\n        favouriteRecordAway = 'No previous fixtures match the profile of this game.'\n      } else if(!homeForm.oddsReliabilityWin && !awayForm.oddsReliabilityWin){\n        favouriteRecordHome = 'No previous fixtures match the profile of this game.'\n        favouriteRecordAway = 'No previous fixtures match the profile of this game.'\n      }\n\n\n      // let homeAttackStrength = await getAttackStrength(\n      //   homeForm.ScoredOverall / 10\n      // );\n\n      const attackingMetricsHome = {\n        // averagePossession: homeForm.AveragePossessionOverall,\n        \"Average Dangerous Attacks\": homeForm.AverageDangerousAttacksOverall,\n        \"Average Shots\": homeForm.AverageShots,\n        \"Average Shots On Target\": homeForm.AverageShotsOnTargetOverall,\n        \"Average Expected Goals\": homeForm.XGOverall,\n        \"Recent XG\": homeForm.XGlast5 ? homeForm.XGlast5 : homeForm.XGOverall,\n        \"Average Goals\":\n          homeForm.averageScoredLeague !== undefined &&\n          homeForm.averageScoredLeague !== null\n            ? homeForm.averageScoredLeague\n            : homeForm.ScoredOverall / 10,\n      };\n      const attackingMetricsAway = {\n        // averagePossession: awayForm.AveragePossessionOverall,\n        \"Average Dangerous Attacks\": awayForm.AverageDangerousAttacksOverall,\n        \"Average Shots\": awayForm.AverageShots,\n        \"Average Shots On Target\": awayForm.AverageShotsOnTargetOverall,\n        \"Average Expected Goals\": awayForm.XGOverall,\n        \"Recent XG\": awayForm.XGlast5 ? awayForm.XGlast5 : awayForm.XGOverall,\n        \"Average Goals\":\n          awayForm.averageScoredLeague !== undefined &&\n          awayForm.averageScoredLeague !== null\n            ? awayForm.averageScoredLeague\n            : awayForm.ScoredOverall / 10,\n      };\n\n      const defensiveMetricsHome = {\n        \"Clean Sheet Percentage\": 100 - homeForm.CleanSheetPercentage,\n        \"Average XG Against\": homeForm.XGAgainstAvgOverall,\n        \"Recent XG Against\": homeForm.XGAgainstlast5\n          ? homeForm.XGAgainstlast5\n          : homeForm.XGAgainstAvgOverall,\n        \"Average Goals Against\":\n          homeForm.averageConceededLeague !== undefined &&\n          homeForm.averageConceededLeague !== null\n            ? homeForm.averageConceededLeague\n            : homeForm.ConcededOverall / 10,\n      };\n\n      const defensiveMetricsAway = {\n        \"Clean Sheet Percentage\": 100 - awayForm.CleanSheetPercentage,\n        \"Average XG Against\": awayForm.XGAgainstAvgOverall,\n        \"Recent XG Against\": awayForm.XGAgainstlast5\n          ? awayForm.XGAgainstlast5\n          : awayForm.XGAgainstAvgOverall,\n        \"Average Goals Against\":\n          awayForm.averageConceededLeague !== undefined &&\n          awayForm.averageConceededLeague !== null\n            ? awayForm.averageConceededLeague\n            : awayForm.ConcededOverall / 10,\n      };\n\n      let homeXGRating;\n      let awayXGRating;\n      let homeAttackStrength;\n      let homeAttackStrengthLast5;\n      let homeOnlyAttackStrength;\n      let homeDefenceStrength;\n      let homeDefenceStrengthLast5;\n      let homeOnlyDefenceStrength;\n      let homePossessionStrength;\n      let homePossessionStrengthLast5;\n      let homeOnlyPossessionStrength;\n      let homeXGForStrength;\n      let homeXGForStrengthLast5;\n      let homeOnlyXGForStrength;\n      let homeXGAgainstStrength;\n      let homeXGAgainstStrengthLast5;\n      let homeOnlyXGAgainstStrength;\n      let awayAttackStrength;\n      let awayAttackStrengthLast5;\n      let awayOnlyAttackStrength;\n      let awayDefenceStrength;\n      let awayDefenceStrengthLast5;\n      let awayOnlyDefenceStrength;\n      let awayPossessionStrength;\n      let awayPossessionStrengthLast5;\n      let awayOnlyPossessionStrength;\n      let awayXGForStrength;\n      let awayXGForStrengthLast5;\n      let awayOnlyXGForStrength;\n      let awayXGAgainstStrength;\n      let awayXGAgainstStrengthLast5;\n      let awayOnlyXGAgainstStrength;\n      let homeDirectnessStrength;\n      let homeDirectnessStrengthLast5;\n      let homeOnlyDirectnessStrength;\n      let awayDirectnessStrength;\n      let awayDirectnessStrengthLast5;\n      let awayOnlyDirectnessStrength;\n      let homeAccuracyOverallStrength;\n      let homeAccuracyOverallStrengthLast5;\n      let homeOnlyAccuracyOverallStrength;\n      let awayAccuracyOverallStrength;\n      let awayAccuracyOverallStrengthLast5;\n      let awayOnlyAccuracyOverallStrength;\n\n      if (homeForm.xgForStrength) {\n        console.log(\"not calculating\");\n        homeXGRating = homeForm.XGRating;\n        awayXGRating = awayForm.XGRating;\n        homeAttackStrength = homeForm.attackingStrength;\n        homeAttackStrengthLast5 = homeForm.attackingStrengthLast5;\n        homeOnlyAttackStrength = homeForm.attackingStrengthHomeOnly;\n        homeDefenceStrength = homeForm.defensiveStrength;\n        homeDefenceStrengthLast5 = homeForm.defensiveStrengthLast5;\n        homeOnlyDefenceStrength = homeForm.defensiveStrengthHomeOnly;\n        homePossessionStrength = homeForm.possessionStrength;\n        homePossessionStrengthLast5 = homeForm.possessionStrengthLast5;\n        homeOnlyPossessionStrength = homeForm.possessionStrengthHomeOnly;\n        homeXGForStrength = homeForm.xgForStrength;\n        homeXGForStrengthLast5 = homeForm.xgForStrengthLast5;\n        homeOnlyXGForStrength = homeForm.xgForStrengthHomeOnly;\n        homeXGAgainstStrength = homeForm.xgAgainstStrength;\n        homeXGAgainstStrengthLast5 = homeForm.xgAgainstStrengthLast5;\n        homeOnlyXGAgainstStrength = homeForm.xgAgainstStrengthHomeOnly;\n        homeDirectnessStrength = homeForm.directnessOverallStrength;\n        homeDirectnessStrengthLast5 = homeForm.directnessOverallStrengthLast5;\n        homeOnlyDirectnessStrength = homeForm.directnessHomeStrength;\n        homeAccuracyOverallStrength = homeForm.accuracyOverallStrength;\n        homeAccuracyOverallStrengthLast5 =\n          homeForm.accuracyOverallStrengthLast5;\n        homeOnlyAccuracyOverallStrength = homeForm.accuracyHomeStrength;\n        awayAttackStrength = awayForm.attackingStrength;\n        awayAttackStrengthLast5 = awayForm.attackingStrengthLast5;\n        awayOnlyAttackStrength = awayForm.attackingStrengthAwayOnly;\n        awayDefenceStrength = awayForm.defensiveStrength;\n        awayDefenceStrengthLast5 = awayForm.defensiveStrengthLast5;\n        awayOnlyDefenceStrength = awayForm.defensiveStrengthAwayOnly;\n        awayPossessionStrength = awayForm.possessionStrength;\n        awayPossessionStrengthLast5 = awayForm.possessionStrengthLast5;\n        awayOnlyPossessionStrength = awayForm.possessionStrengthAwayOnly;\n        awayXGForStrength = awayForm.xgForStrength;\n        awayXGForStrengthLast5 = awayForm.xgForStrengthLast5;\n        awayOnlyXGForStrength = awayForm.xgForStrengthAwayOnly;\n        awayXGAgainstStrength = awayForm.xgAgainstStrength;\n        awayXGAgainstStrengthLast5 = awayForm.xgAgainstStrengthLast5;\n        awayOnlyXGAgainstStrength = awayForm.xgAgainstStrengthAwayOnly;\n        awayDirectnessStrength = awayForm.directnessOverallStrength;\n        awayDirectnessStrengthLast5 = awayForm.directnessOverallStrengthLast5;\n        awayOnlyDirectnessStrength = awayForm.directnessAwayStrength;\n        awayAccuracyOverallStrength = awayForm.accuracyOverallStrength;\n        awayAccuracyOverallStrengthLast5 =\n          awayForm.accuracyOverallStrengthLast5;\n        awayOnlyAccuracyOverallStrength = awayForm.accuracyAwayStrength;\n      } else {\n        homeAttackStrength = await calculateAttackingStrength(\n          attackingMetricsHome\n        );\n\n        homeDefenceStrength = await calculateDefensiveStrength(\n          defensiveMetricsHome\n        );\n\n        homePossessionStrength = await calculateMetricStrength(\n          \"averagePossession\",\n          homeForm.AveragePossessionOverall\n        );\n\n        homeXGForStrength = await calculateMetricStrength(\n          \"xgFor\",\n          gameStats.home[2].XGOverall\n        );\n\n        homeXGAgainstStrength = await calculateMetricStrength(\n          \"xgAgainst\",\n          3 - gameStats.home[2].XGAgainstAvgOverall\n        );\n        homeDirectnessStrength = await calculateMetricStrength(\n          \"directnessOverall\",\n          homeForm.directnessOverall\n        );\n        homeAccuracyOverallStrength = await calculateMetricStrength(\n          \"accuracyOverall\",\n          homeForm.avgShotValue\n        );\n\n        awayAttackStrength = await calculateAttackingStrength(\n          attackingMetricsAway\n        );\n        awayDefenceStrength = await calculateDefensiveStrength(\n          defensiveMetricsAway\n        );\n        awayPossessionStrength = await calculateMetricStrength(\n          \"averagePossession\",\n          awayForm.AveragePossessionOverall\n        );\n        awayXGForStrength = await calculateMetricStrength(\n          \"xgFor\",\n          gameStats.away[2].XGOverall\n        );\n\n        awayXGAgainstStrength = await calculateMetricStrength(\n          \"xgAgainst\",\n          3 - gameStats.away[2].XGAgainstAvgOverall\n        );\n        awayDirectnessStrength = await calculateMetricStrength(\n          \"directnessOverall\",\n          awayForm.directnessOverall\n        );\n        awayAccuracyOverallStrength = await calculateMetricStrength(\n          \"accuracyOverall\",\n          awayForm.avgShotValue\n        );\n      }\n\n      let [formPointsHome, testArrayHome] = await getPointsFromGames(\n        gameStats.home[2].WDLRecord\n      );\n      let [formPointsAway, testArrayAway] = await getPointsFromGames(\n        gameStats.away[2].WDLRecord\n      );\n\n      let rollingGoalDiffHome = [\n        (gameStats.home[0].ScoredOverall - gameStats.home[0].ConcededOverall) /\n          10,\n        (gameStats.home[1].ScoredOverall - gameStats.home[1].ConcededOverall) /\n          6,\n        (gameStats.home[2].ScoredOverall - gameStats.home[2].ConcededOverall) /\n          5,\n      ];\n\n      let rollingGoalDiffAway = [\n        (gameStats.away[0].ScoredOverall - gameStats.away[0].ConcededOverall) /\n          10,\n        (gameStats.away[1].ScoredOverall - gameStats.away[1].ConcededOverall) /\n          6,\n        (gameStats.away[2].ScoredOverall - gameStats.away[2].ConcededOverall) /\n          5,\n      ];\n\n      const formDataMatch = [];\n\n      formDataMatch.push({\n        btts: game.btts_potential,\n      });\n\n      const formDataHome = [];\n\n      formDataHome.push({\n        name: game.homeTeam,\n        Last5: gameStats.home[2].LastFiveForm,\n        LeagueOrAll: gameStats.home[2].LeagueOrAll,\n        AverageGoals: homeForm.ScoredOverall / 10,\n        AverageConceeded: homeForm.ConcededOverall / 10,\n        AverageXG: homeForm.XGOverall,\n        AverageXGConceded: homeForm.XGAgainstAvgOverall,\n        AveragePossession: homeForm.AveragePossessionOverall,\n        AverageShotsOnTarget: homeForm.AverageShotsOnTargetOverall,\n        AverageDangerousAttacks: homeForm.AverageDangerousAttacksOverall,\n        homeOrAway: \"Home\",\n        leaguePosition: homeForm.LeaguePosition,\n        Last5PPG: homeForm.PPG,\n        SeasonPPG: homeForm.SeasonPPG,\n        formRun: homeForm.formRun,\n        goalDifference: homeForm.goalDifference,\n        goalDifferenceHomeOrAway: homeForm.goalDifferenceHomeOrAway,\n        // BttsPercentage: homeForm.BttsPercentage || \"-\",\n        // BttsPercentageHomeOrAway: homeForm.BttsPercentageHomeOrAway || \"-\",\n        CardsTotal: homeForm.CardsTotal || \"-\",\n        CornersAverage: homeForm.AverageCorners || \"-\",\n        FormTextStringHome: formTextStringHome,\n        FavouriteRecord:\n          favouriteRecordHome + `. ${homeForm.reliabilityString}`,\n        BTTSArray: bttsArrayHome,\n        Results: homeForm.resultsAll,\n        ResultsHorA: homeForm.resultsHome.reverse(),\n        XGSwing: homeForm.XGChangeRecently,\n        styleOfPlayOverall: homeForm.styleOfPlayOverall,\n        styleOfPlayHome: homeForm.styleOfPlayHome\n        // BTTSAll: homeForm.last10btts,\n        // BTTSHorA: homeForm.last10bttsHome,\n      });\n\n      const formDataAway = [];\n\n      formDataAway.push({\n        name: game.awayTeam,\n        Last5: gameStats.away[2].LastFiveForm,\n        LeagueOrAll: gameStats.away[2].LeagueOrAll,\n        AverageGoals: awayForm.ScoredOverall / 10,\n        AverageConceeded: awayForm.ConcededOverall / 10,\n        AverageXG: awayForm.XGOverall,\n        AverageXGConceded: awayForm.XGAgainstAvgOverall,\n        AveragePossession: awayForm.AveragePossessionOverall,\n        AverageShotsOnTarget: awayForm.AverageShotsOnTargetOverall,\n        AverageDangerousAttacks: awayForm.AverageDangerousAttacksOverall,\n        homeOrAway: \"Away\",\n        leaguePosition: awayForm.LeaguePosition,\n        Last5PPG: awayForm.PPG,\n        SeasonPPG: awayForm.SeasonPPG,\n        formRun: awayForm.formRun,\n        goalDifference: awayForm.goalDifference,\n        goalDifferenceHomeOrAway: awayForm.goalDifferenceHomeOrAway,\n        // BttsPercentage: awayForm.BttsPercentage || \"-\",\n        // BttsPercentageHomeOrAway: awayForm.BttsPercentageHomeOrAway || \"-\",\n        CardsTotal: awayForm.CardsTotal || \"-\",\n        CornersAverage: awayForm.AverageCorners || \"-\",\n        FormTextStringAway: formTextStringAway,\n        FavouriteRecord:\n          favouriteRecordAway + `. ${awayForm.reliabilityString}`,\n        BTTSArray: bttsArrayAway,\n        Results: awayForm.resultsAll,\n        ResultsHorA: awayForm.resultsAway.reverse(),\n        XGSwing: awayForm.XGChangeRecently,\n        styleOfPlayOverall: awayForm.styleOfPlayOverall,\n        styleOfPlayAway: awayForm.styleOfPlayAway,\n        // BTTSAll: awayForm.last10btts,\n        // BTTSHorA: awayForm.last10bttsAway,\n      });\n\n      let formArrayHome;\n      let formArrayAway;\n      let chartType;\n\n      if (formPointsHome.length > 1) {\n        formArrayHome = formPointsHome;\n        formArrayAway = formPointsAway;\n        chartType = \"Points over time\";\n      } else {\n        formArrayHome = [\n          homeTenGameAverage,\n          homeSixGameAverage,\n          homeFiveGameAverage,\n        ];\n        formArrayAway = [\n          awayTenGameAverage,\n          awaySixGameAverage,\n          awayFiveGameAverage,\n        ];\n        chartType = \"Rolling average points over last 10\";\n      }\n\n      ReactDOM.render(\n        <div style={style}>\n          <div className=\"H2HStats\" id={`H2HStats${game.id}`}></div>\n          <div className=\"TrendsHome\" id={`TrendsHome${game.id}`}></div>\n          <div className=\"TrendsAway\" id={`TrendsAway${game.id}`}></div>\n        </div>,\n        document.getElementById(\"history\" + homeTeam)\n      );\n\n      //This tournament does not have league positions\n      if (game.leagueName === \"Europe UEFA Women's Euro\") {\n        game.homeTeamHomePosition = \"N/A\";\n        game.awayTeamAwayPosition = \"N/A\";\n      }\n\n      function singleResult(game) {\n        return (\n          <div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeXG}</span>\n              <span className=\"column\">XG</span>\n              <span className=\"column\">{game.awayXG}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeShots}</span>\n              <span className=\"column\">Shots</span>\n              <span className=\"column\">{game.awayShots}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeSot}</span>\n              <span className=\"column\">SOT</span>\n              <span className=\"column\">{game.awaySot}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeDangerousAttacks}</span>\n              <span className=\"column\">Dangerous Attacks</span>\n              <span className=\"column\">{game.awayDangerousAttacks}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homePossession}%</span>\n              <span className=\"column\">Possession</span>\n              <span className=\"column\">{game.awayPossession}%</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeRed}</span>\n              <span className=\"column\">Red cards</span>\n              <span className=\"column\">{game.awayRed}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homePPG}</span>\n              <span className=\"column\">PPG (pre-match)</span>\n              <span className=\"column\">{game.awayPPG}</span>\n            </div>\n          </div>\n        );\n      }\n\n      function singleSimilarResult(game) {\n        return (\n          <div>\n            <div className=\"ResultRowSmallDate\">\n              <span>{game.date}</span>\n            </div>\n            {/* <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.XG}</span>\n              <span className=\"column\">XG</span>\n              <span className=\"column\">{game.XGAgainst}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.sot}</span>\n              <span className=\"column\">SOT</span>\n              <span className=\"column\">{game.sotAgainst}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.possession}%</span>\n              <span className=\"column\">Possession</span>\n              <span className=\"column\">{100 - game.possession}%</span>\n            </div> */}\n          </div>\n        );\n      }\n\n      const overviewHome = gameArrayHome.slice(0, 10).map((game) => (\n        <div>\n          <Collapsable\n            classNameButton=\"ResultButton\"\n            buttonText={\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {game.homeGoals} : {game.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n              </div>\n            }\n            element={singleResult(game)}\n          />\n        </div>\n      ));\n\n      const overviewAway = gameArrayAway.slice(0, 10).map((game) => (\n        <div>\n          <Collapsable\n            classNameButton=\"ResultButton\"\n            buttonText={\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {game.homeGoals} : {game.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n              </div>\n            }\n            element={singleResult(game)}\n          />\n        </div>\n      ));\n\n      let similarGamesHome;\n\n      if (game.simlarGameResultsHome) {\n        similarGamesHome = game.simlarGameResultsHome.reverse().map((game) => (\n          <div>\n            <Collapsable\n              classNameButton=\"ResultButton\"\n              buttonText={\n                <div className={`ResultRowOverviewSmall${game.result}`}>\n                  <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                  <span className=\"columnOverviewScoreSmall\">\n                    {game.homeGoals} : {game.awayGoals}\n                  </span>\n                  <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n                </div>\n              }\n              element={singleSimilarResult(game)}\n            />\n          </div>\n        ));\n      } else {\n        similarGamesHome = (\n          <h4 className=\"NoGames\">No previous games fit this profile</h4>\n        );\n      }\n\n      let similarGamesAway;\n      if (game.simlarGameResultsAway) {\n        similarGamesAway = game.simlarGameResultsAway.reverse().map((game) => (\n          <div>\n            <Collapsable\n              classNameButton=\"ResultButton\"\n              buttonText={\n                <div className={`ResultRowOverviewSmall${game.result}`}>\n                  <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                  <span className=\"columnOverviewScoreSmall\">\n                    {game.homeGoals} : {game.awayGoals}\n                  </span>\n                  <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n                </div>\n              }\n              element={singleSimilarResult(game)}\n            />\n          </div>\n        ));\n      } else {\n        similarGamesAway = <h4>No previous games fit this profile</h4>;\n      }\n\n      function StatsHome() {\n        return (\n          <div className=\"flex-childOne\">\n            <ul style={style}>\n              <Stats\n                style={style}\n                homeOrAway=\"Home\"\n                gameCount={divider}\n                key={formDataHome[0].name}\n                last5={formDataHome[0].Last5}\n                homeOrAwayResults={gameArrayHomeTeamHomeGames}\n                LeagueOrAll={formDataHome[0].LeagueOrAll}\n                className={\"KeyStatsHome\"}\n                name={formDataHome[0].name}\n                goals={homeForm.avgScored}\n                conceeded={homeForm.avgConceeded}\n                XG={homeForm.XGOverall.toFixed(2)}\n                XGConceded={homeForm.XGAgainstAvgOverall.toFixed(2)}\n                XGSwing={homeForm.XGChangeRecently}\n                possession={homeForm.AveragePossessionOverall.toFixed(2)}\n                sot={homeForm.AverageShotsOnTargetOverall.toFixed(2)}\n                dangerousAttacks={\n                  homeForm.AverageDangerousAttacksOverall !== 0\n                    ? homeForm.AverageDangerousAttacksOverall.toFixed(2)\n                    : homeForm.AverageDangerousAttacks\n                }\n                leaguePosition={\n                  formDataHome[0].leaguePosition !== undefined &&\n                  formDataHome[0].leaguePosition !== \"undefined\"\n                    ? formDataHome[0].leaguePosition\n                    : 0\n                }\n                rawPosition={\n                  game.homeRawPosition !== undefined &&\n                  game.homeRawPosition !== \"undefined\"\n                    ? game.homeRawPosition\n                    : 0\n                }\n                homeOrAwayLeaguePosition={\n                  game.homeTeamHomePosition !== undefined &&\n                  game.homeTeamHomePosition !== \"undefined\"\n                    ? game.homeTeamHomePosition\n                    : 0\n                }\n                winPercentage={\n                  game.homeTeamWinPercentage ? game.homeTeamWinPercentage : 0\n                }\n                lossPercentage={\n                  game.homeTeamLossPercentage ? game.homeTeamLossPercentage : 0\n                }\n                drawPercentage={\n                  game.homeTeamDrawPercentage ? game.homeTeamDrawPercentage : 0\n                }\n                ppg={formDataHome[0].SeasonPPG}\n                formTrend={[\n                  homeTenGameAverage.toFixed(2),\n                  homeSixGameAverage.toFixed(2),\n                  homeFiveGameAverage.toFixed(2),\n                ]}\n                formRun={homeForm.resultsAll.reverse()}\n                goalDifference={formDataHome[0].goalDifference}\n                goalDifferenceHomeOrAway={\n                  formDataHome[0].goalDifferenceHomeOrAway\n                }\n                BttsPercentage={formDataHome[0].BttsPercentage}\n                BttsPercentageHomeOrAway={\n                  formDataHome[0].BttsPercentageHomeOrAway\n                }\n                // BTTSAll={\n                //   formDataHome[0].BTTSAll\n                //     ? formDataHome[0].BTTSAll\n                //     : '\"Get Predictions\" first'\n                // }\n                // BTTSHorA={\n                //   formDataHome[0].BTTSHorA\n                //     ? formDataHome[0].BTTSHorA\n                //     : '\"Get Predictions\" first'\n                // }\n                BTTSArray={formDataHome[0].BTTSArray}\n                Results={formDataHome[0].Results}\n                ResultsHorA={formDataHome[0].ResultsHorA}\n                CardsTotal={formDataHome[0].CardsTotal}\n                CornersAverage={homeForm.AverageCorners}\n                ScoredBothHalvesPercentage={\n                  formDataHome[0].ScoredBothHalvesPercentage\n                }\n                FormTextString={formDataHome[0].FormTextStringHome}\n                FavouriteRecord={formDataHome[0].FavouriteRecord}\n                StyleOfPlay={formDataHome[0].styleOfPlayOverall}\n                StyleOfPlayHomeOrAway={formDataHome[0].styleOfPlayHome}\n              />\n            </ul>\n          </div>\n        );\n      }\n\n      function StatsAway() {\n        return (\n          <div className=\"flex-childTwo\">\n            <ul style={style}>\n              <Stats\n                style={style}\n                homeOrAway=\"Away\"\n                gameCount={divider}\n                key={formDataAway[0].name}\n                last5={formDataAway[0].Last5}\n                homeOrAwayResults={gameArrayAwayTeamAwayGames}\n                LeagueOrAll={formDataAway[0].LeagueOrAll}\n                className={\"KeyStatsAway\"}\n                classNameTwo={\"FormStatsAway\"}\n                name={formDataAway[0].name}\n                goals={awayForm.avgScored}\n                conceeded={awayForm.avgConceeded}\n                XG={awayForm.XGOverall.toFixed(2)}\n                XGConceded={awayForm.XGAgainstAvgOverall.toFixed(2)}\n                XGSwing={awayForm.XGChangeRecently}\n                //todo add goal diff and btts percentages\n                possession={awayForm.AveragePossessionOverall.toFixed(2)}\n                rawPosition={game.awayRawPosition ? game.awayRawPosition : 0}\n                sot={awayForm.AverageShotsOnTargetOverall.toFixed(2)}\n                dangerousAttacks={\n                  awayForm.AverageDangerousAttacksOverall !== 0\n                    ? awayForm.AverageDangerousAttacksOverall.toFixed(2)\n                    : awayForm.AverageDangerousAttacks\n                }\n                leaguePosition={\n                  formDataAway[0].leaguePosition !== undefined &&\n                  formDataAway[0].leaguePosition !== \"undefined\"\n                    ? formDataAway[0].leaguePosition\n                    : 0\n                }\n                homeOrAwayLeaguePosition={\n                  game.awayTeamAwayPosition !== undefined &&\n                  game.awayTeamAwayPosition !== \"undefinedundefined\"\n                    ? game.awayTeamAwayPosition\n                    : 0\n                }\n                winPercentage={\n                  game.awayTeamWinPercentage ? game.awayTeamWinPercentage : 0\n                }\n                lossPercentage={\n                  game.awayTeamLossPercentage ? game.awayTeamLossPercentage : 0\n                }\n                drawPercentage={\n                  game.awayTeamDrawPercentage ? game.awayTeamDrawPercentage : 0\n                }\n                ppg={formDataAway[0].SeasonPPG}\n                formTrend={[\n                  awayTenGameAverage.toFixed(2),\n                  awaySixGameAverage.toFixed(2),\n                  awayFiveGameAverage.toFixed(2),\n                ]}\n                formRun={awayForm.resultsAll.reverse()}\n                goalDifference={formDataAway[0].goalDifference}\n                goalDifferenceHomeOrAway={\n                  formDataAway[0].goalDifferenceHomeOrAway\n                }\n                BttsPercentage={formDataAway[0].BttsPercentage}\n                BttsPercentageHomeOrAway={\n                  formDataAway[0].BttsPercentageHomeOrAway\n                }\n                // BTTSAll={\n                //   formDataAway[0].BTTSAll\n                //     ? formDataAway[0].BTTSAll\n                //     : '\"Get Predictions\" first'\n                // }\n                // BTTSHorA={\n                //   formDataAway[0].BTTSHorA\n                //     ? formDataAway[0].BTTSHorA\n                //     : '\"Get Predictions\" first'\n                // }\n                BTTSArray={formDataAway[0].BTTSArray}\n                Results={formDataAway[0].Results}\n                ResultsHorA={formDataAway[0].ResultsHorA}\n                CardsTotal={formDataAway[0].CardsTotal}\n                CornersAverage={awayForm.AverageCorners}\n                ScoredBothHalvesPercentage={\n                  formDataAway[0].ScoredBothHalvesPercentage\n                }\n                FormTextString={formDataAway[0].FormTextStringAway}\n                FavouriteRecord={formDataAway[0].FavouriteRecord}\n                StyleOfPlay={formDataAway[0].styleOfPlayOverall}\n                StyleOfPlayHomeOrAway={formDataAway[0].styleOfPlayAway}\n              />\n            </ul>\n          </div>\n        );\n      }\n\n      // const allHomeGames = homeForm.WDLRecord.reverse();\n      // const allAwayGames = awayForm.WDLRecord.reverse();\n\n      // // const pointsHome = getPointsFromLastX(formDataHome[0].Last5);\n      // const pointsHome = getPointsFromLastX(allHomeGames);\n      // const pointsHomeAv = await getPointAverage(\n      //   pointsHome,\n      //   allHomeGames.length\n      // );\n      // const pointsHomeLast5 = getPointsFromLastX(allHomeGames.slice(0, 5));\n      // const pointsHomeAvLast5 = await getPointAverage(pointsHomeLast5, 5);\n      // const pointsAway = getPointsFromLastX(allAwayGames);\n      // const pointsAwayAv = await getPointAverage(\n      //   pointsAway,\n      //   allAwayGames.length\n      // );\n      // const pointsAwayLast5 = getPointsFromLastX(allAwayGames.slice(0, 5));\n      // const pointsAwayAvLast5 = await getPointAverage(pointsAwayLast5, 5);\n\n      // console.log(homeForm.WDLRecord.length);\n      // console.log(pointsHomeAvLast5);\n      // console.log(pointsAwayAvLast5);\n\n      let id, team1, team2, timestamp, homeGoals, awayGoals;\n\n      async function getGameIdByHomeTeam(games, homeTeamName) {\n        const matchingGames = games.filter((game) =>\n          game.homeTeam.includes(homeTeamName)\n        );\n        if (matchingGames.length > 0) {\n          return matchingGames[0];\n        } else {\n          return null; // or any other value you prefer to return if no match is found\n        }\n      }\n\n      const matchingGame = await getGameIdByHomeTeam(\n        arrayOfGames,\n        game.homeTeam\n      );\n\n      console.log(matchingGame);\n      if (matchingGame) {\n        id = matchingGame.id.toString();\n        team1 = matchingGame.homeTeam;\n        team2 = matchingGame.awayTeam;\n        timestamp = matchingGame.time;\n        homeGoals = matchingGame.homeGoals;\n        awayGoals = matchingGame.awayGoals;\n      } else {\n        id = \"0\";\n        team1 = \"N/A\";\n        team2 = \"N/A\";\n        timestamp = 1;\n        homeGoals = \"-\";\n        awayGoals = \"-\";\n      }\n\n      if (homeForm.completeData === true && game.completeData === true) {\n        ReactDOM.render(\n          <>\n            <div style={style}>\n              <Collapsable\n                buttonText={\"Lineups & match action\"}\n                classNameButton=\"Lineups\"\n                element={\n                  <>\n                    <SofaLineupsWidget\n                      id={id}\n                      team1={team1}\n                      team2={team2}\n                      time={timestamp}\n                      homeGoals={homeGoals}\n                      awayGoals={awayGoals}\n                    ></SofaLineupsWidget>\n                  </>\n                }\n              />\n              <div style={style}>\n                <Div className=\"MatchTime\" text={`Kick off: ${time} GMT`}></Div>\n              </div>\n              <div className=\"flex-container\">\n                <StatsHome />\n                <StatsAway />\n              </div>\n              <div className=\"Chart\" id={`Chart${game.id}`} style={style}>\n                <RadarChart\n                  title=\"XG Tipping Strength Ratings - All Games\"\n                  data={[\n                    homeAttackStrength,\n                    homeDefenceStrength,\n                    homePossessionStrength,\n                    homeXGForStrength,\n                    homeXGAgainstStrength,\n                    homeDirectnessStrength,\n                    homeAccuracyOverallStrength,\n                  ]}\n                  data2={[\n                    awayAttackStrength,\n                    awayDefenceStrength,\n                    awayPossessionStrength,\n                    awayXGForStrength,\n                    awayXGAgainstStrength,\n                    awayDirectnessStrength,\n                    awayAccuracyOverallStrength,\n                  ]}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                ></RadarChart>\n                <RadarChart\n                  title=\"XG Tipping Strength Ratings - Last 5 games\"\n                  data={[\n                    homeAttackStrengthLast5,\n                    homeDefenceStrengthLast5,\n                    homePossessionStrengthLast5,\n                    homeXGForStrengthLast5,\n                    homeXGAgainstStrengthLast5,\n                    homeDirectnessStrengthLast5,\n                    homeAccuracyOverallStrengthLast5,\n                  ]}\n                  data2={[\n                    awayAttackStrengthLast5,\n                    awayDefenceStrengthLast5,\n                    awayPossessionStrengthLast5,\n                    awayXGForStrengthLast5,\n                    awayXGAgainstStrengthLast5,\n                    awayDirectnessStrengthLast5,\n                    awayAccuracyOverallStrengthLast5,\n                  ]}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                ></RadarChart>\n                <RadarChart\n                  title=\"XG Tipping Strength Ratings - Home/Away Games Only\"\n                  data={[\n                    homeOnlyAttackStrength,\n                    homeOnlyDefenceStrength,\n                    homeOnlyPossessionStrength,\n                    homeOnlyXGForStrength,\n                    homeOnlyXGAgainstStrength,\n                    homeOnlyDirectnessStrength,\n                    homeOnlyAccuracyOverallStrength,\n                  ]}\n                  data2={[\n                    awayOnlyAttackStrength,\n                    awayOnlyDefenceStrength,\n                    awayOnlyPossessionStrength,\n                    awayOnlyXGForStrength,\n                    awayOnlyXGAgainstStrength,\n                    awayOnlyDirectnessStrength,\n                    awayOnlyAccuracyOverallStrength,\n                  ]}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                ></RadarChart>\n                <DoughnutChart\n                  data={[homeXGRating, awayXGRating]}\n                  homeTeam={game.homeTeam}\n                  awayTeam={game.awayTeam}\n                ></DoughnutChart>\n                <BarChartTwo\n                  text=\"Recent XG Differential Swing\"\n                  homeTeam={homeForm.teamName}                  \n                  awayTeam={awayForm.teamName}\n                  data1={[\n                    homeForm.XGChangeRecently.toFixed(2)\n                  ]}\n                  data2={[\n                    awayForm.XGChangeRecently.toFixed(2)\n                  ]}\n                ></BarChartTwo>\n                <BarChart\n                  text=\"H2H - Home Team | Away Team\"\n                  data1={[\n                    homeForm.avgScored * 2,\n                    awayForm.avgConceeded * 2,\n                    homeForm.avPointsAll * 3,\n                    homeForm.XGOverall * 2,\n                    awayForm.XGAgainstAvgOverall * 2,\n                    homeForm.AverageShotsOnTargetOverall,\n                    homeForm.AverageDangerousAttacksOverall !== 0\n                      ? homeForm.AverageDangerousAttacksOverall / 7.5\n                      : homeForm.AverageDangerousAttacks / 7.5,\n                    homeForm.AveragePossessionOverall / 7.5,\n                    homeForm.goalDifferenceHomeOrAway / 10,\n                    homeForm.AverageCorners,\n                  ]}\n                  data2={[\n                    awayForm.avgScored * 2,\n                    homeForm.avgConceeded * 2,\n                    awayForm.avPointsAll * 3,\n                    awayForm.XGOverall * 2,\n                    homeForm.XGAgainstAvgOverall * 2,\n                    awayForm.AverageShotsOnTargetOverall,\n                    awayForm.AverageDangerousAttacksOverall !== 0\n                      ? awayForm.AverageDangerousAttacksOverall / 7.5\n                      : awayForm.AverageDangerousAttacks / 7.5,\n                    awayForm.AveragePossessionOverall / 7.5,\n                    awayForm.goalDifferenceHomeOrAway / 10,\n                    awayForm.AverageCorners,\n                  ]}\n                ></BarChart>\n                <Chart\n                  height={3}\n                  depth={0}\n                  data1={formArrayHome}\n                  data2={formArrayAway}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                  type={chartType}\n                  tension={0}\n                ></Chart>\n                <MultilineChart\n                  height={\n                    Math.max(\n                      rollingGoalDiffTotalHome[\n                        rollingGoalDiffTotalHome.length - 1\n                      ],\n                      rollingGoalDiffTotalAway[\n                        rollingGoalDiffTotalAway.length - 1\n                      ]\n                    ) > 2\n                      ? Math.max(\n                        rollingGoalDiffTotalHome[\n                          rollingGoalDiffTotalHome.length - 1\n                          ],\n                          rollingGoalDiffTotalAway[\n                            rollingGoalDiffTotalAway.length - 1\n                          ]\n                        )\n                      : 2\n                  }\n                  depth={\n                    Math.min(\n                      rollingGoalDiffTotalHome[\n                        rollingGoalDiffTotalHome.length - 1\n                      ],\n                      rollingGoalDiffTotalAway[\n                        rollingGoalDiffTotalAway.length - 1\n                      ]\n                    ) < -2\n                      ? Math.min(\n                        rollingGoalDiffTotalHome[\n                          rollingGoalDiffTotalHome.length - 1\n                          ],\n                          rollingGoalDiffTotalAway[\n                            rollingGoalDiffTotalAway.length - 1\n                          ]\n                        )\n                      : -2\n                  }\n                  data1={rollingGoalDiffTotalHome}\n                  data2={rollingGoalDiffTotalAway}\n                  data3={rollingXGDiffTotalHome}\n                  data4={rollingXGDiffTotalAway}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                  type={\"Goal/XG difference over time\"}\n                  tension={0.5}\n                ></MultilineChart>\n              </div>\n              <Div\n                text={`Last league games (most recent first)`}\n                className={\"LastGameHeader\"}\n              ></Div>\n              <div className=\"flex-container\">\n                <div className=\"flex-childOneOverviewSmall\">{overviewHome}</div>\n                <div className=\"flex-childTwoOverviewSmall\">{overviewAway}</div>\n              </div>\n              <h2>Results from similar profile games</h2>\n              <span>(Games where each team had similar odds)</span>\n              <h3>Most recent first</h3>\n              <div className=\"flex-container-similar\">\n                <div className=\"flex-childOneOverviewSmall\">\n                  {similarGamesHome}\n                </div>\n                <div className=\"flex-childTwoOverviewSmall\">\n                  {similarGamesAway}\n                </div>\n              </div>\n              <input type=\"hidden\" name=\"IL_IN_ARTICLE\" />\n              <Button\n                className=\"MoreStats\"\n                onClickEvent={() =>\n                  getTeamStats(\n                    game.id,\n                    game.homeTeam,\n                    game.awayTeam,\n                    formDataHome[0].BttsPercentage,\n                    formDataHome[0].BttsPercentageHomeOrAway,\n                    formDataAway[0].BttsPercentage,\n                    formDataAway[0].BttsPercentageHomeOrAway\n                  )\n                }\n                text={\"Fixture trends\"}\n              ></Button>\n            </div>\n          </>,\n          document.getElementById(\"stats\" + homeTeam)\n        );\n      } else if (\n        (homeForm.completeData = false || game.completeData == false)\n      ) {\n        ReactDOM.render(\n          <>\n            <div style={style}>\n              <Collapsable\n                buttonText={\"Lineups & match action\"}\n                classNameButton=\"Lineups\"\n                element={\n                  <>\n                    <SofaLineupsWidget\n                      id={id}\n                      team1={team1}\n                      team2={team2}\n                      time={timestamp}\n                      homeGoals={homeGoals}\n                      awayGoals={awayGoals}\n                    ></SofaLineupsWidget>\n                  </>\n                }\n              />\n              <div className=\"Chart\" id={`Chart${game.id}`} style={style}>\n                <RadarChart\n                  title=\"XG Tipping Strength Ratings - All Games\"\n                  data={[\n                    homeAttackStrength,\n                    homeDefenceStrength,\n                    homePossessionStrength,\n                    homeXGForStrength,\n                    homeXGAgainstStrength,\n                    homeDirectnessStrength,\n                    homeAccuracyOverallStrength,\n                  ]}\n                  data2={[\n                    awayAttackStrength,\n                    awayDefenceStrength,\n                    awayPossessionStrength,\n                    awayXGForStrength,\n                    awayXGAgainstStrength,\n                    awayDirectnessStrength,\n                    awayAccuracyOverallStrength,\n                  ]}\n                  team1={game.homeTeam}\n                  team2={game.awayTeam}\n                ></RadarChart>\n              </div>\n              <div style={style}>\n                <Div className=\"MatchTime\" text={`Kick off: ${time} GMT`}></Div>\n                {/* <Div\n                  text={`Last league games (most recent first)`}\n                  className={\"LastGameHeader\"}\n                ></Div> */}\n              </div>\n              {/* <div className=\"flex-container\">\n                <div className=\"flex-childOneOverviewSmall\">{overviewHome}</div>\n                <div className=\"flex-childTwoOverviewSmall\">{overviewAway}</div>\n              </div>\n              <div className=\"flex-container\">\n                <StatsHome />\n                <StatsAway />\n              </div> */}\n              <h2>Results from similar profile games</h2>\n              <span>(Games where each team had similar odds)</span>\n              <h3>Most recent first</h3>\n              <div className=\"flex-container-similar\">\n                <div className=\"flex-childOneOverviewSmall\">\n                  {similarGamesHome}\n                </div>\n                <div className=\"flex-childTwoOverviewSmall\">\n                  {similarGamesAway}\n                </div>\n              </div>\n              <input type=\"hidden\" name=\"IL_IN_ARTICLE\" />\n              <Button\n                className=\"MoreStats\"\n                onClickEvent={() =>\n                  getTeamStats(\n                    game.id,\n                    game.homeTeam,\n                    game.awayTeam,\n                    formDataHome[0].BttsPercentage,\n                    formDataHome[0].BttsPercentageHomeOrAway,\n                    formDataAway[0].BttsPercentage,\n                    formDataAway[0].BttsPercentageHomeOrAway\n                  )\n                }\n                text={\"Fixture trends\"}\n              ></Button>\n            </div>\n          </>,\n          document.getElementById(\"stats\" + homeTeam)\n        );\n      }\n    }\n\n    // ReactDOM.render(\n    //   <Button\n    //     className=\"MoreStats\"\n    //     style={style}\n    //     onClickEvent={() =>\n    //       getTeamStats(\n    //         game.id,\n    //         game.homeTeam,\n    //         game.awayTeam,\n    //         formDataHome[0].BttsPercentage,\n    //         formDataHome[0].BttsPercentageHomeOrAway,\n    //         formDataAway[0].BttsPercentage,\n    //         formDataAway[0].BttsPercentageHomeOrAway\n    //       )\n    //     }\n    //     text={\"Fixture trends\"}\n    //   ></Button>,\n    //   document.getElementById(`H2HStats${game.id}`)\n    // );\n  }\n}\n","import React, { Fragment, useState } from \"react\";\nimport { CreateBadge } from \"./createBadge\";\nimport { createStatsDiv } from \"../logic/getStats\";\nimport { renderTable } from \"../logic/getFixtures\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport { useDispatch } from \"react-redux\";\nimport { setData } from \"../logic/dataSlice\";\nimport { Provider } from \"react-redux\";\nimport store from \"../logic/store\"; // Import your Redux store\nimport { formObjectHome } from \"../logic/getScorePredictions\";\nimport { clicked } from \"../logic/getScorePredictions\";\n\nlet resultValue;\nvar count;\nlet mockValue;\nvar setCount;\n\nfunction toggle(bool) {\n  count = !bool;\n  return count;\n}\n\nfunction GetDivider(fixture, mock) {\n  const matchStatus = fixture.status;\n  let isPrediction = resultValue;\n\n  if (fixture.fixture.omit === true && matchStatus !== \"complete\") {\n    isPrediction = true;\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"Omitted\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (mockValue === true && matchStatus === \"complete\") {\n    isPrediction = false;\n    return (\n      <Fragment>\n        <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n        <div\n          className=\"CorrectScore\"\n          key={fixture.fixture.homeTeam}\n          data-cy={\"score-\" + fixture.fixture.id}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (mockValue === true && matchStatus !== \"complete\") {\n    isPrediction = true;\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (isPrediction === false && matchStatus !== \"complete\") {\n    return (\n      <div className=\"divider\" data-cy={\"divider-\" + fixture.fixture.id}>\n        {\"V\"}\n      </div>\n    );\n  } else if (isPrediction === false && matchStatus === \"complete\") {\n    return (\n      <div\n        className=\"Result\"\n        data-cy={\"result-\" + fixture.fixture.id}\n      >{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n    );\n  } else if (isPrediction === true && matchStatus === \"complete\") {\n    let outcome;\n    let prediction;\n\n    switch (true) {\n      case fixture.fixture.homeGoals > fixture.fixture.awayGoals:\n        outcome = 0;\n        fixture.fixture.winner = fixture.fixture.homeTeam;\n        fixture.fixture.outcome = \"homeWin\";\n        break;\n      case fixture.fixture.homeGoals === fixture.fixture.awayGoals:\n        outcome = 1;\n        fixture.fixture.winner = \"draw\";\n        fixture.fixture.outcome = \"draw\";\n\n        break;\n      case fixture.fixture.homeGoals < fixture.fixture.awayGoals:\n        outcome = 2;\n        fixture.fixture.winner = fixture.fixture.awayTeam;\n        fixture.fixture.outcome = \"awayWin\";\n\n        break;\n      default:\n        break;\n    }\n\n    switch (true) {\n      case fixture.fixture.goalsA > fixture.fixture.goalsB:\n        prediction = 0;\n        break;\n      case fixture.fixture.goalsA === fixture.fixture.goalsB:\n        prediction = 1;\n        break;\n      case fixture.fixture.goalsA < fixture.fixture.goalsB:\n        prediction = 2;\n        break;\n      default:\n        break;\n    }\n\n    if (fixture.fixture.omit === true) {\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"Omitted\"\n            key={fixture.fixture.homeTeam}\n            data-cy={\"score-\" + fixture.fixture.id}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    } else if (outcome === prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        switch (true) {\n          case outcome === 0:\n            fixture.fixture.profit = fixture.fixture.homeOdds;\n            break;\n          case outcome === 1:\n            fixture.fixture.profit = fixture.fixture.drawOdds;\n            break;\n          case outcome === 2:\n            fixture.fixture.profit = fixture.fixture.awayOdds;\n            break;\n          default:\n            break;\n        }\n      } else fixture.fixture.profit = 1;\n\n      if (\n        fixture.fixture.goalsA === fixture.fixture.homeGoals &&\n        fixture.fixture.goalsB === fixture.fixture.awayGoals\n      ) {\n        fixture.fixture.exactScore = true;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"ExactScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      } else {\n        fixture.fixture.exactScore = false;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"CorrectScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      }\n    } else if (outcome !== prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        fixture.fixture.profit = 0;\n      } else {\n        fixture.fixture.profit = 1;\n      }\n      fixture.fixture.exactScore = false;\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"IncorrectScore\"\n            key={fixture.fixture.awayTeam}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    }\n  } else {\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  }\n}\n\nfunction renderLeagueName(fixture, mock) {\n  mockValue = mock;\n\n  let name = fixture.leagueName;\n  let id =\n    allLeagueResultsArrayOfObjects.length > 0\n      ? allLeagueResultsArrayOfObjects[fixture.leagueIndex].id\n      : null;\n  if (name === null || mock === true) {\n    return <div></div>;\n  } else {\n    return (\n      <div>\n        <div\n          className=\"leagueName\"\n          id={`league${id}`}\n          key={`leagueName${id}div`}\n          onClick={() =>\n            renderTable(\n              fixture.leagueIndex,\n              allLeagueResultsArrayOfObjects[fixture.leagueIndex],\n              id\n            )\n          }\n        >\n          {fixture.leagueName} &#9776;\n        </div>\n        <div\n          className=\"LeagueTable\"\n          key={`leagueName${id}`}\n          id={`leagueName${id}`}\n        ></div>\n      </div>\n    );\n  }\n}\n\nconst downArrow = \"\\u{2195}\";\nconst rightArrow = \"\\u{29C9}\";\n\nexport let testing;\n\nfunction SingleFixture({ fixture, count, mock }) {\n  const dispatch = useDispatch();\n  function StoreData() {\n    const fixtureDetails = {\n      id: fixture.id,\n      homeTeamName: fixture.homeTeam,\n      homeId: fixture.homeId,\n      homeTeamBadge: fixture.homeBadge,\n      awayTeamName: fixture.awayTeam,\n      awayId: fixture.awayId,\n      awayTeamBadge: fixture.awayBadge,\n      stadium: fixture.stadium,\n      time: fixture.time,\n      homeGoals: fixture.goalsA,\n      awayGoals: fixture.goalsB,\n    };\n\n    const homeDetails = {\n      \"Attacking Strength\": fixture.formHome.attackingStrength,\n      \"Defensive Strength\": fixture.formHome.defensiveStrength,\n    };\n\n    const awayDetails = {\n      \"Attacking Strength\": fixture.formAway.attackingStrength,\n      \"Defensive Strength\": fixture.formAway.defensiveStrength,\n    };\n\n    const dataToSend = {\n      key1: \"value1\",\n      key2: \"value2\",\n    };\n    fixture.formHome.defensiveMetrics[\"Clean Sheet Percentage\"] =\n      fixture.formHome.CleanSheetPercentage;\n    fixture.formAway.defensiveMetrics[\"Clean Sheet Percentage\"] =\n      fixture.formAway.CleanSheetPercentage;\n\n    console.log(fixture.formHome)\n\n    localStorage.setItem(\n      \"homeForm\",\n      JSON.stringify(fixture.formHome.attackingMetrics)\n    );\n    localStorage.setItem(\n      \"homeFormDef\",\n      JSON.stringify(fixture.formHome.defensiveMetrics)\n    );\n    localStorage.setItem(\n      \"allTeamResultsHome\",\n      JSON.stringify(fixture.formHome.allTeamResults)\n    );\n    localStorage.setItem(\"homeDetails\", JSON.stringify(homeDetails));\n\n    localStorage.setItem(\n      \"awayForm\",\n      JSON.stringify(fixture.formAway.attackingMetrics)\n    );\n    localStorage.setItem(\n      \"awayFormDef\",\n      JSON.stringify(fixture.formAway.defensiveMetrics)\n    );\n    localStorage.setItem(\n      \"allTeamResultsAway\",\n      JSON.stringify(fixture.formAway.allTeamResults)\n    );\n    localStorage.setItem(\"awayDetails\", JSON.stringify(awayDetails));\n\n    localStorage.setItem(\"fixtureDetails\", JSON.stringify(fixtureDetails));\n\n    dispatch(setData(dataToSend));\n  }\n\n  async function handleButtonClick(game) {\n    if (clicked === true) {\n      StoreData(formObjectHome);\n      window.open(\"/#/fixture\");\n    } else return;\n  }\n  return (\n    <div key={fixture.game}>\n      {renderLeagueName(fixture, mock)}\n      <div className={`individualFixtureContainer${fixture.omit}`}>\n        <li\n          className={`individualFixture${fixture.omit}`}\n          key={fixture.id}\n          data-cy={fixture.id}\n        >\n          <div className=\"HomeOdds\">{fixture.fractionHome}</div>\n          <div className=\"homeTeam\">{fixture.homeTeam}</div>\n          <GetDivider\n            result={resultValue}\n            status={fixture.status}\n            fixture={fixture}\n          />\n          {/* <div className=\"divider\">{\"V\"}</div> */}\n          <div className=\"awayTeam\">{fixture.awayTeam}</div>\n          <CreateBadge\n            image={fixture.homeBadge}\n            ClassName=\"HomeBadge\"\n            alt=\"Home team badge\"\n            flexShrink={5}\n          />\n          <CreateBadge\n            image={fixture.awayBadge}\n            ClassName=\"AwayBadge\"\n            alt=\"Away team badge\"\n          />\n          <div className=\"AwayOdds\">{fixture.fractionAway}</div>\n        </li>\n        <button\n          className=\"GameStats\"\n          onClick={() =>\n            mock === false ? createStatsDiv(fixture, count) : null\n          }\n          onMouseDown={() => (count = toggle(count))}\n        >\n          Game overview {downArrow}\n        </button>\n        <button\n          className=\"GameStatsTwo\"\n          onClick={() => handleButtonClick(fixture)}\n        >\n          More detail {rightArrow}\n        </button>\n        {/* <Checkbox/> */}\n      </div>\n      <div id={\"stats\" + fixture.homeTeam} />\n      <div className=\"MatchHistory\" id={\"history\" + fixture.homeTeam} />\n    </div>\n  );\n}\n\nconst List = ({ fixtures, mock }) => (\n  <div>\n    <div id=\"Headers\"></div>\n    <ul className=\"FixtureList\" id=\"FixtureList\">\n      {fixtures.map((fixture, i) => (\n        <SingleFixture\n          fixture={fixture}\n          key={fixture.game}\n          count={count}\n          mock={mock}\n        />\n      ))}\n    </ul>\n  </div>\n);\n\nexport function Fixture(props) {\n  [count, setCount] = useState(false);\n  resultValue = props.result;\n  return (\n    <Provider store={store}>\n      <List\n        fixtures={props.fixtures}\n        result={resultValue}\n        count={count}\n        mock={props.mock}\n      />\n    </Provider>\n  );\n}\n","// src/dataSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\n\n// src/dataSlice.js\nconst initialState = {\n  dataHome: localStorage.getItem('homeForm'),\n  dataAway: localStorage.getItem('awayForm'),\n  dataHomeDef: localStorage.getItem('homeFormDef'),\n  dataAwayDef: localStorage.getItem('awayFormDef'),\n  allTeamResultsHome: localStorage.getItem('allTeamResultsHome'),\n  allTeamResultsAway: localStorage.getItem('allTeamResultsAway'),\n  homeDetails:localStorage.getItem('homeDetails'),\n  awayDetails:localStorage.getItem('awayDetails'),\n  fixtureDetails: localStorage.getItem('fixtureDetails')\n};\n\nconst dataSlice = createSlice({\n  name: 'data',\n  initialState,\n  reducers: {\n    setData: (state, action) => {\n      state.data = action.payload;\n    },\n  },\n});\n\nexport const { setData } = dataSlice.actions;\n\nexport default dataSlice.reducer;\n","// src/store.js\nimport { configureStore } from '@reduxjs/toolkit';\nimport dataReducer from './dataSlice'; // Your data reducer\n\nconst store = configureStore({\n  reducer: {\n    data: dataReducer, // Ensure this key matches the key in your initialState\n  },\n});\n\nexport default store;\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./components/Header\";\nimport { Button } from \"./components/Button\";\nimport OddsRadio from \"./components/OddsRadio\";\nimport { Fixture } from \"./components/Fixture\";\nimport mockedFixtures from \"./data/mockedFixtures.json\";\nimport { selectedOdds } from \"./components/OddsRadio\";\nimport Collapsable from \"./components/CollapsableElement\";\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  RedditShareButton,\n  RedditIcon,\n  TelegramShareButton,\n  TelegramIcon,\n  TwitterShareButton,\n  TwitterIcon,\n  WhatsappShareButton,\n  WhatsappIcon,\n} from \"react-share\";\nimport { generateFixtures } from \"./logic/getFixtures\";\nimport { ThreeDots } from \"react-loading-icons\";\nimport Logo from \"./components/Logo\";\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\nimport reactDom from \"react-dom\";\n// require(\"dotenv\").config();\n\nexport const proxyurl = \"https://safe-caverns-99679.herokuapp.com/\";\nexport var fixtureList = [];\nexport let allLeagueData = [];\n\nexport const availableLeagues = [];\nexport var orderedLeagues = [];\n\nconst leagueOrder = [\n  11084, //Euro 2024\n  7432, //World Cup 22\n  12325, //premier league 22/23\n  12451, //championship 22/23\n  12446, //league 1 22/23\n  12422, //league 2 22/23\n  12622, //National league 22/23\n  12316, //La Liga 22/23\n  12455, //Scottish Prem 22/23\n  12529, //Bundesliga 22/23\n  12530, //Serie A 22/23\n  12337, //French Prem 22/23\n  12931, //Portagul Prem 22/23\n  12322, //Dutch Prem 22/23\n  12137, //Belgian Pro League 22/23\n  10969, //sweden 24\n  12132, //Danish Prem 24/25\n  10976, //Norway Prem 23\n  12472, //Austrian Prem 22/23\n  12734, //Greek Prem 22/23\n  12120, //Polish prem 22/23\n  12326, //Swiss prem 22/23\n  10946, //Irish Prem 23\n  12467, //Spanish secunda 22/23\n  12621, //Italy serie B 22/23\n  12528, //Bundesliga 2 22/23\n  12623, //German 3rd tier 22/23\n  12338, //French League 2 22/23\n  12456, //Scottish Championship 22/23\n  12474, //Scottish league 1 22/23\n  12453, //Scottish league 2 22/23\n  12827, //Women's prem 23/24\n  10977, //MLS 23\n  11321, //Brazil prem 24\n  11212, //Argentina prem 23\n  12136, //Mexico prem 23/24\n  12933, //National league North and South 22/23\n  // 13703, //Australian A league 23/24\n  11102, //S Korea 23\n];\n\nlet today;\nlet todayFootyStats;\nlet todaySS\nlet tomorrow;\nlet tomorrowFootyStats;\nlet tomorrowSS;\nlet date;\nlet dateSS;\nlet dateFootyStats;\nlet yesterday;\nlet yesterdayFootyStats;\nlet yesterdaySS\nlet lastSaturday;\nlet lastSaturdayFootyStats;\nlet lastSaturdaySS;\nlet historic;\nlet historicFootyStats;\nlet historicSS;\nlet tomorrowsDate;\nlet yesterdaysDate;\nlet saturdayDate;\nlet historicDate;\nlet string;\nlet dateString;\n\n(async function fetchLeagueData() {\n  let leagueList;\n\n  leagueList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}leagueList`);\n\n  let leagueArray;\n  await leagueList.json().then((leagues) => {\n    leagueArray = Array.from(leagues.data);\n  });\n\n  for (let i = 0; i < leagueArray.length; i++) {\n    const league = leagueArray[i];\n    const name = leagueArray[i].name;\n\n    for (let x = 0; x < league.season.length; x++) {\n      const element = league.season[x];\n\n      if (element.year === 2024 || element.year === 20242025) {\n        if (element.id !== 13703 && element.id !== 6935 && element.id !== 7061) {\n          availableLeagues.push({ name: name, element });\n        }\n      }\n    }\n\n    async function mapOrder(array, order, key) {\n      array.sort(function (a, b) {\n        var A = a.element[key],\n          B = b.element[key];\n\n        if (order.indexOf(A) > order.indexOf(B)) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n      return array;\n    }\n    //leagues ordered by id\n    orderedLeagues = await mapOrder(availableLeagues, leagueOrder, \"id\");\n  }\n  return orderedLeagues;\n})();\n\nexport async function getLeagueList() {\n  let i = 0;\n  date = new Date();\n  string = \"Today\";\n\n  async function incrementDate(num, date) {\n    i = i + num;\n    date.setDate(date.getDate() + num);\n    dateSS = await convertTimestampForSofaScore(date);\n\n    [date, dateFootyStats] = await calculateDate(date);\n    string = dateFootyStats;\n    await renderButtons();\n  }\n\n  async function decrementDate(num, date) {\n    i = i - num;\n    console.log(i);\n    if (i > -120) {\n      date.setDate(date.getDate() - num);\n      dateSS = await convertTimestampForSofaScore(date);\n      [date, dateFootyStats] = await calculateDate(date);\n      string = dateFootyStats;\n      dateString = date;\n      await renderButtons();\n    }\n  }\n\n  async function calculateDate(dateString) {\n    const day = dateString.getDate();\n    const month = dateString.getMonth() + 1;\n    const year = dateString.getFullYear();\n    return [`${month}${day}${year}`, `${year}-${month}-${day}`];\n  }\n\n  [today, todayFootyStats] = await calculateDate(new Date());\n\n  tomorrowsDate = new Date();\n  tomorrowsDate.setDate(tomorrowsDate.getDate() + 1);\n  [tomorrow, tomorrowFootyStats] = await calculateDate(tomorrowsDate);\n\n  yesterdaysDate = new Date();\n  yesterdaysDate.setDate(yesterdaysDate.getDate() - 1);\n  [yesterday, yesterdayFootyStats] = await calculateDate(yesterdaysDate);\n\n  saturdayDate = new Date();\n  saturdayDate.setDate(\n    saturdayDate.getDate() - ((saturdayDate.getDay() + 6) % 7)\n  );\n  saturdayDate.setDate(saturdayDate.getDate() - 2);\n  [lastSaturday, lastSaturdayFootyStats] = await calculateDate(saturdayDate);\n\n  historicDate = new Date();\n  historicDate.setDate(\n    historicDate.getDate() - ((historicDate.getDay() + 6) % 7)\n  );\n  historicDate.setDate(historicDate.getDate() - 9);\n  [historic, historicFootyStats] = await calculateDate(historicDate);\n\n\n  async function convertTimestampForSofaScore(timestamp) {\n    let newDate = new Date(timestamp);\n  \n    let year = newDate.getFullYear();\n    let month = String(newDate.getMonth() + 1).padStart(2, '0'); // Adding 1 to month because it is zero-based\n    let day = String(newDate.getDate()).padStart(2, '0');\n    \n    let converted = `${year}-${month}-${day}`;\n  \n    return converted;\n  }\n\n  todaySS = await convertTimestampForSofaScore(new Date());\n  tomorrowSS = await convertTimestampForSofaScore(tomorrowsDate);\n  yesterdaySS = await convertTimestampForSofaScore(yesterdaysDate);\n  lastSaturdaySS = await convertTimestampForSofaScore(saturdayDate);\n  historicSS = await convertTimestampForSofaScore(historicDate);\n\n  const text =\n    \"Select a day you would like to retrieve fixtures for from the options above\\n A list of games will be returned once the data has loaded\\n Once all fixtures have loaded, click on “Get Predictions” to see XGTipping's forecasted outcomes for every game\\n If a game has completed, the predictions is displayed on the right and the actual result on the left\\n Each individual fixture is tappable/clickable. By doing so, you can access a range of detailed stats, from comparative charts, granular performance measures to previous meetings.\\n All games are subject to the same automated prediction algorithm with the outcome being a score prediction. Factors that determine the tip include the following, amongst others:\\n - Goal differentials\\n - Expected goal differentials \\n - Attack/Defence performance\\n - Form trends over time\\n - Home/Away records\\n - WDL records\\n - Points per game \\n - A range of other comparative factors\\n  –\\n\";\n\n  const text2 =\n    \"A range of tools are available should you wish to use them\\n Build a multi - Use the '+' or '-' buttons to add or remove a game deemed to be one of XGTIpping's highest confidence tips from the day\\n Exotic of the day: A pre-built exotic multi comprising of XGTipping's highest confidence tips\\n BTTS games: Games where both teams to score is deemed a likely outcome\\n Over 2.5 goals tips: Games where over 2.5 goals are most likely to be scored\\n XG tips: Comprises only games where the expected goal differentials between each team are at their greatest. We believe this shows a true disparity in the form of the two opposing teams\\n Tap the 'How to use' option to hide this text\";\n\n  let textJoined = text.concat(text2);\n\n  let newText = textJoined.split(\"\\n\").map((i) => {\n    return <p>{i}</p>;\n  });\n\n  async function renderButtons() {\n    ReactDOM.render(\n      <div className=\"FixtureButtons\">\n        <div className=\"historicResults\">\n          <Button\n            text={\"Last Saturday\"}\n            className=\"HistoricFixturesButton\"\n            onClickEvent={async () =>\n              fixtureList.push(\n                await generateFixtures(\n                  \"lastSaturday\",\n                  lastSaturday,\n                  selectedOdds,\n                  lastSaturdayFootyStats,\n                  false,\n                  today,\n                  lastSaturdaySS\n                )\n              )\n            }\n          />\n        </div>\n        <Button\n          text={`<`}\n          className=\"FixturesButton\"\n          onClickEvent={async () => await decrementDate(1, date)}\n        />\n        <Button\n          text={dateFootyStats !== undefined ? dateFootyStats : date}\n          className=\"FixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"todaysFixtures\",\n                dateString,\n                selectedOdds,\n                dateFootyStats,\n                false,\n                today,\n                dateSS\n              )\n            )\n          }\n        />\n        <Button\n          text={`Today`}\n          className=\"FixturesButtonToday\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"todaysFixtures\",\n                today,\n                selectedOdds,\n                todayFootyStats,\n                true,\n                today,\n                todaySS\n              )\n            )\n          }\n        />\n        <Button\n          text={\"Tomorrow\"}\n          className=\"FixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"tomorrowsFixtures\",\n                tomorrow,\n                selectedOdds,\n                tomorrowFootyStats,\n                true,\n                today,\n                tomorrowSS\n              )\n            )\n          }\n        />\n      </div>,\n      document.getElementById(\"Buttons\")\n    );\n  }\n\n  ReactDOM.render(\n    <div className=\"FixtureButtons\">\n      <div className=\"historicResults\">\n        <Button\n          text={\"Last Saturday\"}\n          className=\"HistoricFixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"lastSaturday\",\n                lastSaturday,\n                selectedOdds,\n                lastSaturdayFootyStats,\n                false,\n                today,\n                lastSaturdaySS\n              )\n            )\n          }\n        />\n        {/* <Button\n          text={\"Historic predictions\"}\n          className=\"HistoricFixturesButtonRight\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"historic\",\n                historic,\n                selectedOdds,\n                historicFootyStats\n              )\n            )\n          }\n        /> */}\n      </div>\n      <Button\n        text={`<`}\n        className=\"FixturesButton\"\n        onClickEvent={async () => await decrementDate(1, date)}\n      />\n      <Button\n        text={`${string}`}\n        className=\"FixturesButtonToday\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"todaysFixtures\",\n              today,\n              selectedOdds,\n              todayFootyStats,\n              true,\n              today,\n              todaySS\n            )\n          )\n        }\n      />\n      <Button\n        text={\"Tomorrow\"}\n        className=\"FixturesButton\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"tomorrowsFixtures\",\n              tomorrow,\n              selectedOdds,\n              tomorrowFootyStats,\n              true,\n              today,\n              tomorrowSS\n            )\n          )\n        }\n      />\n    </div>,\n    document.getElementById(\"Buttons\")\n  );\n  ReactDOM.render(\n    <div className=\"OddsRadios\">\n      <OddsRadio value=\"Fractional odds\"></OddsRadio>\n      <OddsRadio value=\"Decimal odds\"></OddsRadio>\n    </div>,\n    document.getElementById(\"Checkbox\")\n  );\n  ReactDOM.render(\n    <Fragment>\n      <Collapsable\n        // className={\"HowToUse\"}\n        buttonText={\"How to use\"}\n        element={newText}\n      />\n    </Fragment>,\n    document.getElementById(\"XGDiff\")\n  );\n\n  // ReactDOM.render(\n  //   <Button\n  //     text={\"Lowest scoring leagues\"}\n  //     className={\"Under25TeamsButton\"}\n  //     onClickEvent={async () => {\n  //       let leagues = await getLowestScoringLeagues();\n  //       const leagueList = [];\n\n  //       leagues.forEach(async (league) =>\n  //         leagueList.push(\n  //           <ul className=\"GlobalStat\">\n  //             <p className=\"TeamName\">\n  //               {league.league} ({league.leagueCountry})\n  //             </p>\n  //             <li>Average goals: {league.averageGoals}</li>\n  //             <li>Under 2.5 goals %: {league.under25Percentage}%</li>\n  //           </ul>\n  //         )\n  //       );\n\n  //       reactDom.render(\n  //         <div>\n  //           <h3>Leagues with the lowest scoring games</h3>\n  //           <ul>{leagueList}</ul>\n  //         </div>,\n  //         document.getElementById(\"Under25Games\")\n  //       );\n  //     }}\n  //   ></Button>,\n  //   document.getElementById(\"Under25Games\")\n  // );\n\n  // ReactDOM.render(\n  //   <Button\n  //     text={\"Highest scoring leagues\"}\n  //     className={\"Over25TeamsButton\"}\n  //     onClickEvent={async () => {\n  //       let leagues = await getHighestScoringLeagues();\n  //       const leagueList = [];\n\n  //       leagues.forEach(async (league) =>\n  //         leagueList.push(\n  //           <ul className=\"GlobalStat\">\n  //             <p className=\"TeamName\">\n  //               {league.league} ({league.leagueCountry})\n  //             </p>\n  //             <li>Average goals: {league.averageGoals}</li>\n  //             <li>Over 2.5 goals %: {league.over25Percentage}%</li>\n  //           </ul>\n  //         )\n  //       );\n\n  //       reactDom.render(\n  //         <div>\n  //           <h3>Leagues with the highest scoring games</h3>\n  //           <ul>{leagueList}</ul>\n  //         </div>,\n  //         document.getElementById(\"Over25Games\")\n  //       );\n  //     }}\n  //   ></Button>,\n  //   document.getElementById(\"Over25Games\")\n  // );\n}\n\nasync function getHighestScoringLeagues() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}over25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    for (let index = 0; index < 215; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        over25Percentage:\n          leagues.data.top_leagues.data[index].seasonOver25Percentage_overall,\n        division: leagues.data.top_leagues.data[index].division,\n        leagueId: leagues.data.top_leagues.data[index].id,\n      };\n      arr.push(league);\n    }\n  });\n\n  const finalArray = arr.filter(\n    (league) =>\n      leagueOrder.find((element) => element === league.leagueId) &&\n      league.averageGoals >= 2.5\n  );\n\n  let sortedArray = finalArray.sort((a, b) => b.averageGoals - a.averageGoals);\n\n  return sortedArray;\n}\n\nasync function getLowestScoringLeagues() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}under25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    for (let index = 0; index < 215; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        under25Percentage:\n          leagues.data.top_leagues.data[index].seasonUnder25Percentage_overall,\n        leagueId: leagues.data.top_leagues.data[index].id,\n      };\n      arr.push(league);\n    }\n  });\n\n  const finalArray = arr.filter(\n    (league) =>\n      leagueOrder.find((element) => element === league.leagueId) &&\n      league.averageGoals < 2.5\n  );\n\n  let sortedArray = finalArray.sort((a, b) => a.averageGoals - b.averageGoals);\n\n  return sortedArray;\n}\n\nconst welcomeTextUnsplitOne = `Welcome to XGTipping. Your go-to resource for all things football, from predictions, comprehensive head to head stats, results, xg scores, odds, league tables, form, and bespoke multi-builders underpinned by expected goal (XG) data.\\n `;\nlet welcomeTextOne = welcomeTextUnsplitOne.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nconst welcomeTextUnsplitTwo = `XGTipping is completely independent and free to use, relying on a donation model to support running costs. For feedback or feature ideas, get in touch at @TippingXg.`;\nlet welcomeTextTwo = welcomeTextUnsplitTwo.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nfunction App() {\n  getLeagueList();\n  return (\n    <>\n      <div className=\"App\">\n        <Logo />\n        <a\n          className=\"SocialLink\"\n          href=\"https://www.reddit.com/r/xgtipping/\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          r/xgtipping\n        </a>\n        <div id=\"LoadingContainer\" className=\"LoadingContainer\" />\n        <div id=\"RadioContainer\" className=\"RadioContainer\">\n          <div id=\"RadioText\" />\n          <div id=\"RadioButtons\" />\n        </div>\n        <div id=\"Day\" />\n        <div id=\"Checkbox\" />\n        <div id=\"ExplainerText\" />\n        <div id=\"Loading\" className=\"Loading\"></div>\n        <div id=\"Buttons\" className=\"Buttons\">\n          <ThreeDots className=\"MainLoading\" fill=\"#030061\" />\n          <div>Loading all fixture and form data...</div>\n        </div>\n        <div id=\"GeneratePredictions\" className=\"GeneratePredictions\" />\n        <div id=\"bestPredictions\" className=\"bestPredictions\" />\n        <div id=\"exoticOfTheDay\" className=\"exoticOfTheDay\" />\n        <div id=\"successMeasure2\" />\n        <div id=\"RowOneContainer\" className=\"RowOneContainer\">\n          <div id=\"BTTS\" className=\"RowOne\" />\n          <div id=\"longShots\" className=\"RowOne\" />\n          <div id=\"draws\" className=\"RowOne\" />\n        </div>\n        <div id=\"insights\" />\n        <div id=\"risk\" />\n        <div id=\"successMeasure\" />\n        <div id=\"tables\" />\n        <div id=\"homeBadge\" />\n        <div id=\"FixtureContainerHeaders\"></div>\n        {/* <StyledKofiButton buttonText=\"Donations\"></StyledKofiButton> */}\n        <div id=\"XGDiff\" />\n        <div id=\"FixtureContainer\">\n          <h6 className=\"WelcomeText\">{welcomeTextOne}</h6>\n          <h6 className=\"GetMatchStatText\">\n            Below is an example of our tips/results overview for you to\n            familiarise yourself with. Get real fixtures using the date buttons,\n            above. When loaded, tap on one to see full match stats\n          </h6>\n          <div className=\"ExplainerContainer\">\n            <span className=\"oddsHomeExplainer\">Home odds</span>\n            <span className=\"emptyHomeTeam\"></span>\n            <span className=\"scoreExplainer\">Result / KO Time</span>\n            <span className=\"predictionExplainer\">Our Prediction</span>\n            <span className=\"emptyAwayTeam\"></span>\n            <span className=\"oddsAwayExplainer\">Away odds</span>\n          </div>\n          <Fixture\n            fixtures={mockedFixtures.matches}\n            // result={false}\n            mock={true}\n            className={\"individualFixture\"}\n          />\n          <div>\n            <h6 className=\"WelcomeText\">{welcomeTextTwo}</h6>\n            <h6 className=\"WelcomeText\">\n              We cover a range of leagues, including\n              <ul className=\"AllLeagues\">\n                <li className=\"League\">Premier League</li>\n                <li className=\"League\">English Football League</li>\n                <li className=\"League\">La Liga</li>\n                <li className=\"League\">Serie A</li>\n                <li className=\"League\">Bundesliga</li>\n                <li className=\"League\">Ligue 1</li>\n                <li className=\"League\">MLS</li>\n                <li className=\"League\">Primeira Liga</li>\n                <li className=\"League\">Loads more...</li>\n              </ul>\n            </h6>\n          </div>\n          <div>\n            <div className=\"DataText\">Raw data from</div>\n            <a\n              className=\"DataLink\"\n              href=\"https://www.footystats.org\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              footystats.org\n            </a>\n          </div>\n          <div className=\"bitcoin\" id=\"bitcoin\">\n            We aim to remain free to use, contributions are always appreciated\n            though:\n            <a\n              href=\"https://www.ko-fi.com/xgtipping\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Donations\n            </a>\n            <span className=\"bitcoinSymbol\">&#x20bf;itcoin address</span>\n            <span className=\"bitcoinAddress\">\n              bc1q7j62txkvhfu0dt3l0s07saze6pjnyzs26wfgp0\n            </span>\n          </div>\n        </div>\n        <div>\n    </div>\n        <div className=\"Social\">\n          <TwitterShareButton\n            url={\"www.xgtipping.com\"}\n            title={\"#XGTipping\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <TwitterIcon size={\"3em\"} round={true} />\n          </TwitterShareButton>\n          <RedditShareButton\n            url={\"www.xgtipping.com\"}\n            title={\"XGTipping\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <RedditIcon size={\"3em\"} round={true} />\n          </RedditShareButton>\n          <FacebookShareButton\n            url={\"www.xgtipping.com\"}\n            quote={\"XGTipping - data-driven football predictions\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <FacebookIcon size={\"3em\"} round={true} />\n          </FacebookShareButton>\n          <WhatsappShareButton\n            url={\"www.xgtipping.com\"}\n            title={\"XGTipping\"}\n            separator=\": \"\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <WhatsappIcon size={\"3em\"} round={true} />\n          </WhatsappShareButton>\n          <TelegramShareButton\n            url={\"XGTipping\"}\n            title={\"XGTipping\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <TelegramIcon size={\"3em\"} round={true} />\n          </TelegramShareButton>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n// import React from \"react\";\n// import { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\n// import HomePage from \"./components/HomePage\";\n// import TeamPage from \"./components/Team\";\n\n// const App = () => {\n//   return (\n//     <Router>\n//       <Routes>\n//       <Route path=\"/team\" element={<TeamPage />} />\n//         <Route path=\"/\" element={<HomePage />} />\n//         {/* Add more routes */}\n//       </Routes>\n//     </Router>\n//   );\n// };\n\n// export default App;\n","export default __webpack_public_path__ + \"static/media/xg-tipping-high-resolution-logo-transparent.90176ea6.png\";","import React from 'react';\nimport myImage from './images/xg-tipping-high-resolution-logo-transparent.png';\n\nconst Logo = () => {\n  return (\n    <div className=\"logo-container\">\n      <img src={myImage} alt=\"XG Tipping logo\" className='responsive-logo'/>\n    </div>\n  );\n};\n\nexport default Logo;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CreateBadge } from \"./createBadge\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction TeamPage() {\n  const [dataState, setData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const responseHome = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}team/${storedFixtureDetailsJson.homeId}`\n      );\n      const resultHome = await responseHome.json();\n\n      const responseAway = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}team/${storedFixtureDetailsJson.awayId}`\n      );\n      const resultAway = await responseAway.json();\n      // setData(result.data.stadium_name);\n\n      let indexHome = resultHome.data.findIndex(\n        (x) => x.season_format === \"Domestic League\"\n      );\n      let indexAway = resultAway.data.findIndex(\n        (x) => x.season_format === \"Domestic League\"\n      );\n\n      if (resultHome.data[indexHome].stats.seasonScoredNum_overall) {\n        setData((test) => ({\n          ...test,\n          scoredOverallHome:\n            resultHome.data[indexHome].stats.seasonScoredNum_overall,\n          playedHomeOnly:\n            resultHome.data[indexHome].stats.seasonMatchesPlayed_home,\n          scoredOverallHomeOnly:\n            resultHome.data[indexHome].stats.seasonScoredNum_home,\n          conceededOverallHome:\n            resultHome.data[indexHome].stats.seasonConcededNum_overall,\n          conceededOverallHomeOnly:\n            resultHome.data[indexHome].stats.seasonConcededNum_home,\n\n          PPGOverallHome: resultHome.data[indexHome].stats.seasonPPG_overall,\n          PPGOverallHomeOnly: resultHome.data[indexHome].stats.seasonPPG_home,\n          leaguePosition_overallHome:\n            resultHome.data[indexHome].stats.leaguePosition_overall,\n          leaguePosition_HomeOnly:\n            resultHome.data[indexHome].stats.leaguePosition_home,\n          averageAttendance:\n            resultHome.data[indexHome].stats.average_attendance_home,\n          BTTSPercentage_overallHome:\n            resultHome.data[indexHome].stats.seasonBTTSPercentage_overall,\n          BTTSAndWinPercentage_Home:\n            resultHome.data[indexHome].stats.BTTS_and_win_percentage_overall,\n          BTTSAndLosePercentage_Home:\n            resultHome.data[indexHome].stats.BTTS_and_lose_percentage_overall,\n          BTTSBothHalvesHome:\n            resultHome.data[indexHome].stats\n              .BTTS_both_halves_percentage_overall,\n          GoalDifferenceHT_overall_Home:\n            resultHome.data[indexHome].stats.GoalDifferenceHT_overall,\n          GD_2hg_overall_Home: resultHome.data[indexHome].stats.gd_2hg_overall,\n          leadingAtHTPercentage_overallHome:\n            resultHome.data[indexHome].stats.leadingAtHTPercentage_overall,\n          seasonOver15Percentage_overallHome:\n            resultHome.data[indexHome].stats.seasonOver15Percentage_overall,\n          seasonOver25Percentage_overallHome:\n            resultHome.data[indexHome].stats.seasonOver25Percentage_overall,\n          seasonOver35Percentage_overallHome:\n            resultHome.data[indexHome].stats.seasonOver35Percentage_overall,\n          seasonOver45Percentage_overallHome:\n            resultHome.data[indexHome].stats.seasonOver45Percentage_overall,\n          scoredBothHalvesPercentage_overallHome:\n            resultHome.data[indexHome].stats.scoredBothHalvesPercentage_overall,\n          shots_on_target_per_goals_scored_overallHome:\n            resultHome.data[indexHome].stats.additional_info\n              .shots_on_target_per_goals_scored_overall,\n          cornersTotalAVG_overallHome:\n            resultHome.data[indexHome].stats.cornersTotalAVG_overall,\n          cardsAVG_overallHome:\n            resultHome.data[indexHome].stats.cardsAVG_overall,\n          foulsAVG_overallHome:\n            resultHome.data[indexHome].stats.foulsAVG_overall,\n          penalties_won_per_match_overallHome:\n            resultHome.data[indexHome].stats.additional_info\n              .penalties_won_per_match_overall,\n          penalty_in_a_match_percentage_overallHome:\n            resultHome.data[indexHome].stats.additional_info\n              .penalty_in_a_match_percentage_overall,\n\n          scoredOverallAway:\n            resultAway.data[indexAway].stats.seasonScoredNum_overall,\n          playedAwayOnly:\n            resultAway.data[indexAway].stats.seasonMatchesPlayed_away,\n          scoredOverallAwayOnly:\n            resultAway.data[indexAway].stats.seasonScoredNum_away,\n          conceededOverallAway:\n            resultAway.data[indexAway].stats.seasonConcededNum_overall,\n          conceededOverallAwayOnly:\n            resultAway.data[indexAway].stats.seasonConcededNum_away,\n\n          PPGOverallAway: resultAway.data[indexAway].stats.seasonPPG_overall,\n          PPGOverallAwayOnly: resultAway.data[indexAway].stats.seasonPPG_away,\n          leaguePosition_overallAway:\n            resultAway.data[indexAway].stats.leaguePosition_overall,\n          leaguePosition_AwayOnly:\n            resultAway.data[indexAway].stats.leaguePosition_away,\n          BTTSPercentage_overallAway:\n            resultAway.data[indexAway].stats.seasonBTTSPercentage_overall,\n          BTTSAndWinPercentage_Away:\n            resultAway.data[indexAway].stats.BTTS_and_win_percentage_overall,\n          BTTSAndLosePercentage_Away:\n            resultAway.data[indexAway].stats.BTTS_and_lose_percentage_overall,\n          BTTSBothHalvesAway:\n            resultAway.data[indexAway].stats\n              .BTTS_both_halves_percentage_overall,\n          GoalDifferenceHT_overall_Away:\n            resultAway.data[indexAway].stats.GoalDifferenceHT_overall,\n          GD_2hg_overall_Away: resultAway.data[indexAway].stats.gd_2hg_overall,\n          leadingAtHTPercentage_overallAway:\n            resultAway.data[indexAway].stats.leadingAtHTPercentage_overall,\n          seasonOver15Percentage_overallAway:\n            resultAway.data[indexAway].stats.seasonOver15Percentage_overall,\n          seasonOver25Percentage_overallAway:\n            resultAway.data[indexAway].stats.seasonOver25Percentage_overall,\n          seasonOver35Percentage_overallAway:\n            resultAway.data[indexAway].stats.seasonOver35Percentage_overall,\n          seasonOver45Percentage_overallAway:\n            resultAway.data[indexAway].stats.seasonOver45Percentage_overall,\n          scoredBothHalvesPercentage_overallAway:\n            resultAway.data[indexAway].stats.scoredBothHalvesPercentage_overall,\n          shots_on_target_per_goals_scored_overallAway:\n            resultAway.data[indexAway].stats.additional_info\n              .shots_on_target_per_goals_scored_overall,\n\n          cornersTotalAVG_overallAway:\n            resultAway.data[indexAway].stats.cornersTotalAVG_overall,\n          cardsAVG_overallAway:\n            resultAway.data[indexAway].stats.cardsAVG_overall,\n          foulsAVG_overallAway:\n            resultAway.data[indexAway].stats.foulsAVG_overall,\n          penalties_won_per_match_overallAway:\n            resultAway.data[indexAway].stats.additional_info\n              .penalties_won_per_match_overall,\n          penalty_in_a_match_percentage_overallAway:\n            resultAway.data[indexAway].stats.additional_info\n              .penalty_in_a_match_percentage_overall,\n        }));\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  const storedDataHome = useSelector((state) => state.data.dataHome);\n  const jsonDataHome = JSON.parse(storedDataHome);\n  const propertyNamesHome = Object.entries(jsonDataHome);\n\n  const storedDataHomeDef = useSelector((state) => state.data.dataHomeDef);\n  const jsonDataHomeDef = JSON.parse(storedDataHomeDef);\n  const propertyNamesHomeDef = Object.entries(jsonDataHomeDef);\n\n  const storedDataallTeamResultsHome = useSelector(\n    (state) => state.data.allTeamResultsHome\n  );\n  const jsonDataallTeamResultsHome = JSON.parse(storedDataallTeamResultsHome);\n  const propertyNamesallTeamResultsHome = Object.values(\n    jsonDataallTeamResultsHome\n  );\n\n  const homeDetails = useSelector((state) => state.data.homeDetails);\n  const jsonHomeDetails = JSON.parse(homeDetails);\n\n  const storedDataAway = useSelector((state) => state.data.dataAway);\n  const jsonDataAway = JSON.parse(storedDataAway);\n  const propertyNamesAway = Object.entries(jsonDataAway);\n\n  const storedDataAwayDef = useSelector((state) => state.data.dataAwayDef);\n  const jsonDataAwayDef = JSON.parse(storedDataAwayDef);\n  const propertyNamesAwayDef = Object.entries(jsonDataAwayDef);\n\n  const storedDataallTeamResultsAway = useSelector(\n    (state) => state.data.allTeamResultsAway\n  );\n  const jsonDataallTeamResultsAway = JSON.parse(storedDataallTeamResultsAway);\n  const propertyNamesallTeamResultsAway = Object.values(\n    jsonDataallTeamResultsAway\n  );\n\n  const awayDetails = useSelector((state) => state.data.awayDetails);\n  const jsonAwayDetails = JSON.parse(awayDetails);\n\n  const storedFixtureDetails = useSelector(\n    (state) => state.data.fixtureDetails\n  );\n  const storedFixtureDetailsJson = JSON.parse(storedFixtureDetails);\n\n  const options = {\n    plugins: {\n      title: {\n        display: true,\n        text: \"Team comparison\",\n      },\n    },\n    aspectRatio: 0.5,\n    maintainAspectRatio: true,\n    responsive: true,\n    scales: {\n      x: {\n        stacked: true,\n      },\n      y: {\n        stacked: true,\n        display: false,\n      },\n    },\n  };\n  const labels = [\n    storedFixtureDetailsJson.homeTeamName,\n    storedFixtureDetailsJson.awayTeamName,\n  ];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        data: [\n          jsonHomeDetails[\"Attacking Strength\"],\n          jsonAwayDetails[\"Attacking Strength\"],\n        ],\n        label: \"Attacking Strength\",\n        backgroundColor: \"#030061\",\n      },\n      {\n        data: [\n          jsonHomeDetails[\"Defensive Strength\"],\n          jsonAwayDetails[\"Defensive Strength\"],\n        ],\n        label: \"Defensive Strength\",\n        backgroundColor: \"#CC3314\",\n      },\n    ],\n  };\n\n  return (\n    <div className=\"TeamStatsContainer\">\n      <div className=\"FixtureHeadingContiner\">\n        <CreateBadge\n          image={storedFixtureDetailsJson.homeTeamBadge}\n          ClassName=\"HomeTeamBadge\"\n          alt=\"Home team badge\"\n        ></CreateBadge>\n        {`${storedFixtureDetailsJson.homeTeamName} v ${storedFixtureDetailsJson.awayTeamName}`}\n        <CreateBadge\n          image={storedFixtureDetailsJson.awayTeamBadge}\n          ClassName=\"AwayTeamBadge\"\n          alt=\"Away team badge\"\n        ></CreateBadge>\n      </div>\n      <h3>\n        {storedFixtureDetailsJson.stadium} KO: {storedFixtureDetailsJson.time} |\n        Average Attendance: {dataState.averageAttendance}\n      </h3>\n      <h3>\n        XGTipping Prediction: {storedFixtureDetailsJson.homeGoals} -{\" \"}\n        {storedFixtureDetailsJson.awayGoals}\n      </h3>\n      <div className=\"TeamStats\">\n        <ul className=\"HomeTeamStats\">\n          <iframe\n            src={`https://footystats.org/api/club?id=${storedFixtureDetailsJson.homeId}`}\n            height=\"100%\"\n            width=\"100%\"\n            style={{\n              height: \"420px\",\n              width: \"100%\",\n              border: \"0.1em solid #030061\",\n            }}\n          ></iframe>\n          <h3>{storedFixtureDetailsJson.homeTeamName}</h3>\n          {propertyNamesHome.map(([key, value], index) => (\n            <li key={index}>\n              <strong>{key}:</strong>{\" \"}\n              {typeof value === \"object\" ? JSON.stringify(value) : value}\n            </li>\n          ))}\n          <ul className=\"HomeTeamStats\">\n            {propertyNamesHomeDef.map(([key, value], index) => (\n              <li key={index}>\n                <strong>{key}:</strong>{\" \"}\n                {typeof value === \"object\" ? JSON.stringify(value) : value}\n              </li>\n            ))}\n          </ul>\n          <li>Scored overall: {dataState.scoredOverallHome}</li>\n          <li>Conceeded overall: {dataState.conceededOverallHome}</li>\n          <li>\n            Average scored home only:{\" \"}\n            {(\n              dataState.scoredOverallHomeOnly / dataState.playedHomeOnly\n            ).toFixed(2)}\n          </li>\n          <li>\n            Average conceeded home only:{\" \"}\n            {(\n              dataState.conceededOverallHomeOnly / dataState.playedHomeOnly\n            ).toFixed(2)}\n          </li>\n          <li>PPG overall: {dataState.PPGOverallHome}</li>\n          <li>PPG home only: {dataState.PPGOverallHomeOnly}</li>\n          <li>League position: {dataState.leaguePosition_overallHome}</li>\n          <li>\n            League position home only: {dataState.leaguePosition_HomeOnly}\n          </li>\n          <li>BTTS {dataState.BTTSPercentage_overallHome}%</li>\n          <li>BTTS and win: {dataState.BTTSAndWinPercentage_Home}%</li>\n          <li>BTTS and lose: {dataState.BTTSAndLosePercentage_Home}%</li>\n          <li>BTTS both halves: {dataState.BTTSBothHalvesHome}%</li>\n          <li>\n            Goal diff 1st half only: {dataState.GoalDifferenceHT_overall_Home}\n          </li>\n          <li>Goal diff 2nd half only: {dataState.GD_2hg_overall_Home}</li>\n          <li>\n            Leading at half time: {dataState.leadingAtHTPercentage_overallHome}%\n          </li>\n          <li>\n            Over 1.5 goals in games:{\" \"}\n            {dataState.seasonOver15Percentage_overallHome}%\n          </li>\n          <li>\n            Over 2.5 goals in games:{\" \"}\n            {dataState.seasonOver25Percentage_overallHome}%\n          </li>\n          <li>\n            Over 3.5 goals in games:{\" \"}\n            {dataState.seasonOver35Percentage_overallHome}%\n          </li>\n          <li>\n            Over 4.5 goals in games:{\" \"}\n            {dataState.seasonOver45Percentage_overallHome}%\n          </li>\n          <li>\n            Scored both halves:{\" \"}\n            {dataState.scoredBothHalvesPercentage_overallHome}%\n          </li>\n          <li>\n            SOTs per goal:{\" \"}\n            {dataState.shots_on_target_per_goals_scored_overallHome}\n          </li>\n          <li>Corners in game avg: {dataState.cornersTotalAVG_overallHome}</li>\n          <li>Cards avg: {dataState.cardsAVG_overallHome}</li>\n          <li>Fouls against avg: {dataState.foulsAVG_overallHome}</li>\n          <li>\n            Penalties won avg: {dataState.penalties_won_per_match_overallHome}\n          </li>\n          <li>\n            Penalties in match:{\" \"}\n            {dataState.penalty_in_a_match_percentage_overallHome}%\n          </li>\n        </ul>\n        <ul className=\"AwayTeamStats\">\n          <iframe\n            src={`https://footystats.org/api/club?id=${storedFixtureDetailsJson.awayId}`}\n            height=\"100%\"\n            width=\"100%\"\n            style={{\n              height: \"420px\",\n              width: \"100%\",\n              color: \"#030061\",\n              border: \"0.1em solid #030061\",\n            }}\n          ></iframe>\n          <h3>{storedFixtureDetailsJson.awayTeamName}</h3>\n          {propertyNamesAway.map(([key, value], index) => (\n            <li key={index}>\n              <strong>{key}:</strong>{\" \"}\n              {typeof value === \"object\" ? JSON.stringify(value) : value}\n            </li>\n          ))}\n          <ul className=\"AwayTeamStats\">\n            {propertyNamesAwayDef.map(([key, value], index) => (\n              <li key={index}>\n                <strong>{key}:</strong>{\" \"}\n                {typeof value === \"object\" ? JSON.stringify(value) : value}\n              </li>\n            ))}\n          </ul>\n          <li>Scored overall: {dataState.scoredOverallAway}</li>\n          <li>Conceeded overall: {dataState.conceededOverallAway}</li>\n          <li>\n            Average scored away only:{\" \"}\n            {(\n              dataState.scoredOverallAwayOnly / dataState.playedAwayOnly\n            ).toFixed(2)}\n          </li>\n          <li>\n            Average conceeded away only:{\" \"}\n            {(\n              dataState.conceededOverallAwayOnly / dataState.playedAwayOnly\n            ).toFixed(2)}\n          </li>\n          <li>PPG overall: {dataState.PPGOverallAway}</li>\n          <li>PPG away only: {dataState.PPGOverallAwayOnly}</li>\n          <li>League position: {dataState.leaguePosition_overallAway}</li>\n          <li>\n            League position away only: {dataState.leaguePosition_AwayOnly}\n          </li>\n          <li>BTTS: {dataState.BTTSPercentage_overallAway}%</li>\n          <li>BTTS and win: {dataState.BTTSAndWinPercentage_Away}%</li>\n          <li>BTTS and lose: {dataState.BTTSAndLosePercentage_Away}%</li>\n          <li>BTTS both halves: {dataState.BTTSBothHalvesAway}%</li>\n          <li>\n            Goal diff 1st half only: {dataState.GoalDifferenceHT_overall_Away}\n          </li>\n          <li>Goal diff 2nd half only: {dataState.GD_2hg_overall_Away}</li>\n          <li>\n            Leading at half time: {dataState.leadingAtHTPercentage_overallAway}%\n          </li>\n          <li>\n            Over 1.5 goals in games:{\" \"}\n            {dataState.seasonOver15Percentage_overallAway}%\n          </li>\n          <li>\n            Over 2.5 goals in games:{\" \"}\n            {dataState.seasonOver25Percentage_overallAway}%\n          </li>\n          <li>\n            Over 3.5 goals in games:{\" \"}\n            {dataState.seasonOver35Percentage_overallAway}%\n          </li>\n          <li>\n            Over 4.5 goals in games:{\" \"}\n            {dataState.seasonOver45Percentage_overallAway}%\n          </li>\n          <li>\n            Scored both halves:{\" \"}\n            {dataState.scoredBothHalvesPercentage_overallAway}%\n          </li>\n          <li>\n            SOTs per goal:{\" \"}\n            {dataState.shots_on_target_per_goals_scored_overallAway}\n          </li>\n          <li>Corners in game avg: {dataState.cornersTotalAVG_overallAway}</li>\n          <li>Cards avg: {dataState.cardsAVG_overallAway}</li>\n          <li>Fouls against avg: {dataState.foulsAVG_overallAway}</li>\n          <li>\n            Penalties won avg: {dataState.penalties_won_per_match_overallAway}\n          </li>\n          <li>\n            Penalties in match:{\" \"}\n            {dataState.penalty_in_a_match_percentage_overallAway}%\n          </li>\n        </ul>\n        <div className=\"ChartContainer\">\n          <span className=\"Spacer\"></span>\n          <Bar options={options} data={data} className=\"ComparisonBar\" />\n          <span className=\"Spacer\"></span>\n        </div>\n        <ul className=\"HomeTeamResults\">\n          {propertyNamesallTeamResultsHome.map((match, index) => (\n            <>\n              <div className=\"MatchDate\">{match.date}</div>\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{match.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {match.homeGoals} : {match.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{match.awayTeam}</div>\n              </div>\n            </>\n          ))}\n        </ul>\n        <ul className=\"AwayTeamResults\">\n          {propertyNamesallTeamResultsAway.map((match, index) => (\n            <>\n              <div className=\"MatchDate\">{match.date}</div>\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{match.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {match.homeGoals} : {match.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{match.awayTeam}</div>\n              </div>\n            </>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default TeamPage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router, Route, Routes, HashRouter } from \"react-router-dom\";\nimport TeamPage from \"./components/Team\";\nimport { Provider } from \"react-redux\";\nimport store from \"./logic/store\"; // Import your Redux store\n\nimport {Fixture} from \"./components/Fixture\"\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n    <HashRouter>\n        <Routes>\n          <Route path=\"/fixture\" element={<TeamPage />} />\n          <Route path=\"/\" exact element={<App />} />\n          {/* <Route path=\"/\" element={<Fixture />} /> */}\n        </Routes>\n        </HashRouter>\n    </Provider>\n    ,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}