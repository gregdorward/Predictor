{"version":3,"sources":["components/Header.js","components/Button.js","components/OddsRadio.js","components/createBadge.js","components/createStatsDiv.js","components/Div.js","logic/getForm.js","components/Slider.js","components/CollapsableElement.js","components/Increment.js","logic/getBTTSPotential.js","components/Carousel.js","components/KofiButton.js","components/SliderDiff.js","logic/getScorePredictions.js","components/LeagueTable.js","logic/getFixtures.js","components/HeadToHead.js","components/Table.js","logic/getTeamStats.js","logic/compareFormTrend.js","components/Chart.js","logic/getStats.js","components/Fixture.js","logic/dataSlice.js","logic/store.js","App.js","reportWebVitals.js","components/Team.js","index.js"],"names":["Header","className","Button","props","id","text","variant","type","onClick","onClickEvent","style","selectedOdds","OddsRadio","handleOptionChange","setState","value","state","this","name","checked","onChange","Component","CreateBadge","image","ClassName","src","alt","flexShrink","Stats","styleForm","formIndicator","styleBTTS","BTTSBoolean","clicked","formRun","FormTextString","FavouriteRecord","Results","homeOrAway","homeOrAwayResults","BTTSArray","goals","conceeded","possession","XG","XGConceded","goalDifference","goalDifferenceHomeOrAway","sot","dangerousAttacks","leaguePosition","homeOrAwayLeaguePosition","winPercentage","toFixed","drawPercentage","lossPercentage","ppg","formTrend","CardsTotal","CornersAverage","Div","getForm","match","teams","homeId","awayId","fixtureForm","i","team","fetch","process","response","json","then","formData","lastMatchTimestamp","last_updated_match_timestamp","length","rangeValue","Slide","useState","range","setRange","fractionalValue","setFractionalValue","useEffect","roundedValueOne","Math","round","roundedValueTwo","fractionalOne","oddslib","from","to","precision","fractionalTwo","console","log","error","sx","width","color","event","newValue","valueLabelDisplay","step","min","max","valueLabelFormat","index","Collapsable","transitionTime","trigger","classNameButton","buttonText","classNameFlex","classNameTwo","element","classNameThree","elementTwo","incrementValue","riskLevel","Increment","IncrementItem","getNewTips","allTips","DecreaseItem","show","getBTTSPotential","homeGoals","awayGoals","unroundedHomeGoals","unroundedAwayGoals","homeBTTS","bttsAllPercentageHome","homeOnlyBTTS","bttsPercentageHomeHome","awayOnlyBTTS","bttsPercentageAwayAway","awayBTTS","bttsAllPercentageAway","homeG","awayG","combinedBTTS","bttsFraction","status","awayOdds","btts","bttsChosen","totalGoals","rawFinalHomeGoals","rawFinalAwayGoals","SwiperCore","use","EffectCoverflow","Pagination","Slider","effect","autoHeight","grabCursor","centeredSlides","slidesPerView","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","pagination","clickable","element2","element3","element4","element5","StyledKofiButton","title","kofiID","minimumXG","minimumGD","minimumGDHorA","minimumLast10","SlideDiff","finalHomeGoals","finalAwayGoals","homeOdds","setValue","useCase","marks","parseFloat","lower","upper","Headers","append","drawPredictions","sumStatDAWin","sumStatDALoss","sumStatPossessionWin","sumStatPossessionLoss","sumStatSOTWin","sumStatSOTLoss","sumStatPPGLast10Win","sumStatPPGLast10Loss","sumOddsWin","sumOddsLoss","sumXGForWin","sumXGForLoss","sumXGAgainstWin","sumXGAgainstLoss","allDrawOutcomes","totalROI","totalInvestment","totalProfit","convertTimestamp","timestamp","newDate","Date","toLocaleDateString","split","day","month","year","converted","getPointsFromLastX","lastX","pointsAddition","points","forEach","game","getPastLeagueResults","hOrA","form","date","allLeagueResultsArrayOfObjects","leagueIndex","fixtures","teamsHomeResults","filter","fixture","home_name","item","date_unix","sort","a","b","teamsAwayResults","away_name","homeResults","awayResults","oddsSumHome","oddsSumAway","favouriteCount","underdogCount","winningFavouriteCount","drawingFavouriteCount","beatenFavouriteCount","winningUnderdogCount","drawingUnderdogCount","beatenUnderdogCount","resultedGame","homeGoalCount","team_a_xg","awayGoalCount","team_b_xg","team_a_possession","team_a_shots","team_a_shotsOnTarget","team_a_dangerous_attacks","team_a_corners","odds_ft_1","odds_ft_2","homeTeam","awayTeam","XGAgainst","scored","shots","corners","dateRaw","oddsHome","oddsAway","push","team_b_possession","team_b_shots","team_b_shotsOnTarget","team_b_dangerous_attacks","team_b_corners","reversedResultsAway","allTeamResults","reversedResultsHome","concat","averageOddsHome","averageOddsAway","oddsReliabilityWin","oddsReliabilityDraw","oddsReliabilityLose","oddsReliabilityWinAsUnderdog","oddsReliabilityDrawAsUnderdog","oddsReliabilityLoseAsUnderdog","reliableIndicator","unreliableIndicator","predictabilityScore","reliabilityString","teamGoalsHome","map","res","teamGoalsAway","teamGoalsAll","teamConceededHome","teamConceededAway","teamConceededAll","teamXGForAll","teamXGAgainstAll","XGSum","reduce","avgXGScored","XGAgainstSum","avgXGConceeded","possessionSum","avgPossession","dangerousAttacksSum","avgDangerousAttacks","shotsSum","avgShots","shotsOnTarget","shotsOnTargetSum","avgShotsOnTarget","cornersSum","cornersAv","last5XG","slice","last5XGSum","last5XGAvgFor","last5XGAgainst","last5XGAgainstSum","last5XGAvgAgainst","XGDiffNonAverage","XGDiffNonAverageLast5","XGOverall","XGlast5","XGAgainstAvgOverall","XGAgainstlast5","AveragePossessionOverall","AverageDangerousAttacksOverall","AverageCorners","AverageShotsOnTargetOverall","alpha","beta","allGoalsArrayHome","allConceededArrayHome","sum","sumTwo","teamName","predictGoalsWithExponentialSmoothing","reverse","forAndAgainstRollingAv","forAndAgainstRollingAvHomeOrAway","allGoalsArrayAway","allConceededArrayAway","bttsHome","bttsAway","bttsAll","bttsHomeCount","bttsHomeString","bttsHomePercentage","bttsAwayCount","bttsAwayString","bttsAwayPercentage","bttsAllCount","bttsAllString","bttsAllPercentage","r","x","predictNextWeightedMovingAverage","teamGoalsHomeRollingAverage","teamGoalsAwayRollingAverage","teamConceededHomeRollingAverage","teamConceededAwayRollingAverage","avgScored","last5","last5Sum","last5AvgScored","last5Conceeded","last5ConceededSum","last5AvgConceeded","last10","last10Sum","last10AvgScored","last10Conceeded","last10ConceededSum","last10AvgConceeded","last5Goals","last5GoalsConceeded","last5GoalDiff","last10Goals","last10GoalsConceeded","teamGoalsAllRollingAverage","teamGoalsConceededAllRollingAverage","avgConceeded","numbers","windowSize","startIndex","window","weights","Array","_","acc","num","movingAverage","w","calculateWeightedAverage","arr","weightedSum","totalWeight","weight","pow","teamGoalsFor","teamGoalsAgainst","lambdaFor","lambdaAgainst","predictedGoalsFor","predictedGoalsAgainst","goalsFor","goalsAgainst","compareStat","statOne","statTwo","stat1","stat2","normalizeValues","normalizedValue1","normalizedValue2","finalValue1","finalValue2","diff","statDiff","getClinicalRating","dangerousAttackConversion","rating","score","getPointsDifferential","pointsHomeAvg","pointsAwayAvg","differential","getPointWeighting","pointsDiff","pointsDiffWeightingHome","pointsDiffWeightingAway","compareFormTrend","recentForm","distantForm","scoreTotal","recent","distant","getPointAverage","pointTotal","games","poissonDistribution","lambda","k","numerator","exp","denominator","factorial","n","result","calculateAverageGoals","adjustGoalsAvg","goalsAvg","strengthRatio","predictScore","goalsForTeam1","goalsAgainstTeam1","goalsForTeam2","goalsAgainstTeam2","team1Metrics","team2Metrics","team1AverageGoalsFor","team1AverageGoalsAgainst","team2AverageGoalsFor","team2AverageGoalsAgainst","team1StrengthRatio","weighting","team2StrengthRatio","adjustedTeam1AverageGoals","adjustedTeam2AverageGoals","adjustedTeam1AverageGoalsAgainst","adjustedTeam2AverageGoalsAgainst","maxGoals","scores","j","team1GoalExpectation","team2GoalExpectation","isFinite","probability","team1Score","team2Score","top5Scores","value1","value2","minRange","maxRange","Error","absValue1","abs","absValue2","normalizedAbsValue1","totalAbs","normalizedAbsValue2","compareTeams","homeForm","awayForm","homeAttackStrength","attackingStrength","homeDefenceStrength","defensiveStrength","homePossessionStrength","possessionStrength","awayAttackStrength","awayDefenceStrength","awayPossessionStrength","getXGtoActualDifferentialStrength","actualToXGDifference","homeXGtoActualDiffStrength","awayXGtoActualDiffStrength","attackStrengthComparison","defenceStrengthComparison","possessiontrengthComparison","xgActualComparison","XGComparison","homeOrAwayAverage","homeAwayPointAverageComparison","last5Points","fiveGameComparison","oddsComparison","homeAttackAdvantage","homeAdvantage","goalDiffHomeOrAwayComparison","goalDifferenceComparison","directnessOverallStrength","overallDirectnessComparison","directnessHome","directnessAway","hOrADirectnessComparison","accuracyOverallStrength","accuracyComparison","calculation","homeWinOutcomeProbability","homeTeamWinPercentage","awayTeamLossPercentage","awayWinOutcomeProbability","homeTeamLossPercentage","awayTeamWinPercentage","drawOutcomeProbability","homeTeamDrawPercentage","awayTeamDrawPercentage","lastGame","last2Points","XGdifferentialValueRaw","improving","calculateScore","divider","calculate","allForm","find","home","away","PlayedHome","PlayedAway","LastFiveForm","previousToLastGame","last2","last6Points","LastSixForm","last10Points","LastTenForm","twoGameAverage","last3Points","threeGameAverage","fiveGameAverage","sixGameAverage","tenGameAverage","lastHomeOrAwayPoints","ScoredAverage","ScoredOverall","ConcededAverage","ConcededOverall","ScoredAverageShortTerm","ConcededAverageShortTerm","longTermAverageGoals","longTermAverageConceeded","GoalsInGamesAverageHome","GoalsInGamesAverageAway","recentGoalDiff","distantGoalDiff","recentDA","distantDA","recentPosession","distantPosession","recentCleanSheet","CleanSheetPercentage","distantCleanSheet","recentFormArray","distantFormArray","formTrendScore","expectedGoals","ScoredAverageShortAndLongTerm","conceededAverageShortAndLongTerm","longTermGoalDifference","shortTermGoalDifference","XGdifferential","XGdifferentialRecent","actualToXGDifferenceRecent","formHome","formAway","homeTenGameAvg","awayTenGameAvg","homeTwoGameAvg","awayTwoGameAvg","pointsDiff10","pointsDiff2","last10WeightingHome","last10WeightingAway","last2WeightingHome","last2WeightingAway","clinicalRating","clinicalScore","XGdifferentialValue","leagueID","predictedGoalsBasedOnHomeAv","predictedGoalsBasedOnAwayAv","allTeamGoalsBasedOnAverages","predictedGoalsConceededBasedOnHomeAv","predictedGoalsConceededBasedOnAwayAv","allTeamGoalsConceededBasedOnAverages","averageScoredLeague","averageConceededLeague","last10btts","last10bttsHome","last10bttsAway","bttsPercentageHomeAway","bttsPercentageAwayHome","homeTeamHomePositionRaw","awayTeamAwayPositionRaw","homePositionHomeOnly","awayPositionAwayOnly","homePosition","homeRawPosition","awayPosition","awayRawPosition","AttackingPotency","AttacksHome","AttacksAverage","attackingMetricsHome","AverageShots","undefined","attackingMetricsAway","defensiveMetricsHome","defensiveMetricsAway","attackingMetrics","defensiveMetrics","calculateAttackingStrength","calculateDefensiveStrength","calculateMetricStrength","directnessOverall","AverageShotsHomeOrAway","AveragePossession","shootingAccuracy","xgForStrength","xgAgainstStrength","teamComparisonScore","teamStrengthWeighting","scorePredictions","homeGoalDiff","awayGoalDiff","goalsDifferential","rollingAverageGoalsDifferential","factorOneHome","factorOneAway","factorTwoHome","factorTwoAway","scoreDiff","homeComparisonWeighting","awayComparisonWeighting","ceil","floor","difference","omit","prediction","includeInMultis","pointsDifferential","pointsDifferentialValue","pointsDifferentialValueRaw","rollingGoalDiffDifferential","rollingGoalDiff","rollingGoalDiffValue","dangerousAttacksDifferential","dangerousAttacksDiff","dangerousAttacksDiffValue","winner","outcome","predictionOutcome","over25PredictionOutcome","bttsOutcome","total","parseInt","total2","drawOdds","last10PointDiffHomePerspective","last10PointDiffAwayPerspective","XGDiffBetweenTeamsHomePerspective","XGDiffBetweenTeamsAwayPerspective","game_week","profit","getSuccessMeasure","sumProfit","investment","exactScores","successCount","netProfit","hasOwnProperty","exactScore","ROI","operand","operandTwo","exactScoreHitRate","successRate","ReactDOM","render","document","getElementById","price","combinations","gamesInExotic","exoticStake","exoticString","allTipsSorted","newArray","bestBets","Over25Tips","XGDiffTips","rollingDiffTips","dangerousAttacksDiffTips","pointsDiffTips","exoticArray","bttsArray","accumulatedOdds","predictions","array","tip","indexOf","rawOdds","renderTips","getScorePrediction","mocked","mock","Promise","all","matches","goalsA","goalsB","unroundedGoalsA","unroundedGoalsB","outcomeSymbol","over25PredictionOutcomeSymbol","bttsOutcomeSymbol","fractionHome","predictionObject","odds","comparisonScore","rawComparisonScore","goalDifferential","experimentalCalc","fractionAway","Over25PredictionObject","decimalOdds","homeDoubleChance","over25Odds","doubleChanceOutcome","goalTotalUnrounded","XGPredictionObject","otherTeam","pointsDiffObject","rollingDiffObject","dangerousAttacksDiffObject","RenderAllFixtures","bool","getMultis","getCoverBetMaxReturns","getAccumulatorPrice","priceArray","minAccSize","stake","perms","getUniquePermutations","permLength","permutations","newArr","splice","twoDimArrayUnion","arr1","arr2","duplicate","NewlineText","str","toggleState","setIsOff","upArrow","StyledTableCell2","withStyles","theme","head","backgroundColor","padding","paddingTop","paddingBottom","textAlign","fontSize","fontFamily","margin","body","TableCell","StyledTableCell","StyledTableRow","root","TableRow","LeagueTable","singleResult","rows","Teams","component","scope","Name","Played","Wins","Draws","Losses","For","Against","GoalDifference","Points","Form","Key","leagueResults","team_a_red_cards","team_b_red_cards","leagueResultsOlder","getTopScorersTeam","ID","sorted","league","order","sortedByForm","LastWeeksResults","GamesPlayed","LeagueID","TableContainer","Paper","Table","marginTop","marginBottom","TableHead","TableBody","mostRecentGameweek","seasonAVG_home","seasonAVG_away","seasonBTTSPercentage","seasonOver05Percentage_overall","seasonOver15Percentage_overall","seasonOver25Percentage_overall","seasonOver35Percentage_overall","seasonOver45Percentage_overall","over75CornersPercentage_overall","over85CornersPercentage_overall","over95CornersPercentage_overall","over105CornersPercentage_overall","over115CornersPercentage_overall","over125CornersPercentage_overall","cornersAVG_overall","cardsAVG_overall","top_scorers","known_as","club_team_id","goals_overall","fixtureResponse","leagueInstance","lastThreeFormHome","lastThreeFormAway","lastFiveFormHome","lastFiveFormAway","lastSixFormHome","lastSixFormAway","lastTenFormHome","lastTenFormAway","leagueOrAll","formRunHome","formRunAway","WDLinLeagueHome","WDLinLeagueAway","HomeAverageGoals","homeAverageGoals","HomeAverageConceded","homeAverageConceded","AwayAverageGoals","awayAverageGoals","AwayAverageConceded","awayAverageConceded","require","fixtureArray","leagueGames","leagueArray","leagueIdArray","tableArray","worldCupArray","generateTables","allResults","currentLeagueId","data","specific_tables","groups","table","currentTeam","wdl_record","toUpperCase","Position","cleanName","matchesPlayed","seasonWins_overall","seasonDraws_overall","seasonLosses_overall","seasonGoals","seasonConceded_home","seasonConceded_away","seasonGoalDifference","LastXPoints","wdl","seasonConceded","group","league_table","all_matches_table_overall","results","mostRecentGame","pop","gameweeksResults","leagueTable","leagueStatistics","stats","statistics","createFixture","mockBool","roundedHomeOdds","roundedAwayOdds","homeFraction","awayFraction","bttsOdds","roundedBTTSOdds","homeTeamWinsPercentage","homeTeamLossesPercentage","homeTeamDrawsPercentage","awayTeamWinsPercentage","awayTeamLossesPercentage","awayTeamDrawsPercentage","Fixture","isFunctionRunning","generateFixtures","footyStatsFormattedDate","current","todaysDate","getPrefix","position","teamPositionPrefix","updateResults","method","headers","Accept","JSON","stringify","height","fill","url","formUrl","formArray","leaguesStored","storedForm","isFormStored","isStoredLocally","orderedLeagues","leaguePositions","allLeagueResults","leagues","allGames","startDate","getTime","targetDate","orderedLeague","gamesFiltered","mostRecentResults","shortenedResults","pre_match_teamA_overall_ppg","pre_match_teamB_overall_ppg","leagueObj","homeLeague","awayLeague","all_matches_table_home","all_matches_table_away","regularSeason","season","string","stringHome","stringAway","rawPosition","homeFormName","awayFormName","homeSeasonWinPercentage","seasonWins","awaySeasonWinPercentage","homeSeasonLossPercentage","seasonLosses_home","awaySeasonLossPercentage","seasonLosses_away","homeSeasonDrawPercentage","seasonDraws","awaySeasonDrawPercentage","homeSeasonMatchesPlayed","awaySeasonMatchesPlayed","played","competition_id","unixTimestamp","dateObject","previousLeagueName","leagueName","time","toLocaleString","hour","minute","odds_ft_x","odds_doublechance_1x","awayDoubleChance","odds_doublechance_x2","odds_btts_yes","homeID","awayID","homeTeamInfo","awayTeamInfo","homeTeaminLeague","awayTeaminLeague","teamPositionHome","teamPositionHomeTable","teamPositionAwayTable","homeTeamWinPercentageHome","awayTeamWinPercentageAway","homeTeamLossPercentageHome","awayTeamLossPercentageAway","homeTeamDrawPercentageHome","awayTeamDrawPercentageAway","teamPositionAway","homePrefix","homePrefixHomeTable","awayPrefix","awayPrefixAwayTable","homeSeasonPPG","awaySeasonPPG","homeTeaminHomeLeague","awayTeaminAwayLeague","homeFormString5","additional_info","formRun_overall","awayFormString5","homeFormString6","awayFormString6","homeFormString10","awayFormString10","homeFormRun","formRun_home","awayFormRun","formRun_away","season_format","xg_for_avg_overall","xg_for_avg_home","seasonScoredNum_overall","seasonScoredAVG_home","seasonMatchesPlayed_home","seasonMatchesPlayed_away","seasonConcededNum_overall","seasonConcededAVG_home","xg_against_avg_overall","XGAgainstAverage","xg_against_avg_home","seasonCSPercentage_overall","possessionAVG_overall","possessionAVG_home","shotsOnTargetAVG_overall","AverageShotsOnTarget","shotsOnTargetAVG_home","dangerous_attacks_avg_overall","PPG","seasonPPG_overall","attacks_avg_home","AttacksAway","attacks_avg_away","AverageDangerousAttacks","dangerous_attacks_avg_home","homeDefenceAdvantage","BTTSPercentage","seasonBTTSPercentage_home","LeagueOrAll","LeaguePosition","LeagueAverageGoals","LeagueAverageConceded","shotsAVG_overall","shotsAVG_home","seasonGoalDifference_overall","seasonGoalDifference_home","seasonBTTSPercentage_overall","cardsTotal_overall","scoredBothHalvesPercentage_overall","lastThreeForm","SeasonPPG","WinPercentage","LossPercentage","DrawPercentage","BttsPercentage","BttsPercentageHomeOrAway","ScoredBothHalvesPercentage","LastMatch","WDLRecord","xg_for_avg_away","seasonScoredAVG_away","seasonConcededAVG_away","xg_against_avg_away","possessionAVG_away","shotsOnTargetAVG_away","dangerous_attacks_avg_away","seasonBTTSPercentage_away","shotsAVG_away","seasonGoalDifference_away","teamIDHome","teamIDAway","leagueId","homeBadge","home_image","awayBadge","away_image","homePpg","home_ppg","awayPpg","away_ppg","homeTeamHomePosition","awayTeamAwayPosition","odds_ft_over25","btts_potential","stadium","stadium_name","expectedGoalsHomeToDate","team_a_xg_prematch","expectedGoalsAwayToDate","team_b_xg_prematch","setTimeout","HeadToHead","homeWins","awayWins","draws","averageGoals","bestHomeOdds","bestAwayOdds","lastGameStadiumName","lastGameDate","lastGameHomeTeam","lastGameHomeGoals","lastGameAwayGoals","lastGameAwayTeam","secondToLastGameStadiumName","secondToLastGameDate","secondToLastGameHomeTeam","secondToLastGameHomeGoals","secondToLastGameAwayGoals","secondToLastGameAwayTeam","lineHeight","CustomizedTables","align","o05Stat","o05Odds","u05Odds","o15Stat","o15Odds","u15Odds","o25Stat","o25Odds","u25Odds","o35Stat","o35Odds","u35Odds","BTTSStat","BTTSForecast","BTTSOdds","BTTSOddsNo","getTeamStats","identifier","getBTTSPercentage","getFairOdds","impliedProbability","impliedProbabilityDivided","homeToal","awayTotal","fixtureHistory","matchArr","h2h","previous_matches_ids","oddsComparisonHomeArray","oddsComparisonAwayArray","odds_comparison","sortedHomeOdds","Object","entries","sortedAwayOdds","bestHomeOddsProvider","bestAwayOddsProvider","previous_matches_results","totalMatches","lastMatch","secondMatchExists","secondToLastMatch","previousMatch","previousMatchDetails","getDate","getMonth","getFullYear","secondToPreviousMatch","secondToPreviousMatchDetails","dateObject2","date2","betting_stats","bttsPercentage","fairOddsBTTSYes","fairOddsBTTSNo","team_a_wins","team_b_wins","draw","avg_goals","isNaN","over05Percentage","over15Percentage","o15Forecast","o15_potential","odds_ft_over05","odds_ft_under05","odds_ft_over15","odds_ft_under15","over25Percentage","o25Forecast","o25_potential","odds_ft_under25","over35Percentage","o35Forecast","o35_potential","odds_ft_over35","odds_ft_under35","odds_btts_no","CornersStat","CornersForecast","corners_potential","CornersOdds","odds_corners_over_105","getOverOrUnderText","xgSum","overUnderAchievingSum","getXGDifferential","xgFor","xgAgainst","xgDiff","goalDiff","compareXgAndGoalDiff","getAttackingSummary","goalsRecent","goalsLongTerm","getDefenceSummary","cleansheetStat","lastx","ten","five","xgText","attackString","defenceString","pointsAverageTotal","GenerateFormSummary","Chart","data1","options","responsive","aspectRatio","maintainAspectRatio","layout","elements","point","radius","scales","y","suggestedMin","suggestedMax","grid","borderWidth","borderColor","ticks","font","size","display","plugins","legend","labels","boxHeight","keys","datasets","label","team1","tension","team2","data2","RadarChart","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","angleLines","BarChart","datasetOne","idx","numOne","numTwo","tempArr","firstNum","secondNum","findLargestNum","context","dataIndex","dataset","indexAxis","bar","tooltip","enabled","metric","ranges","normalizedValue","metricName","metricValue","averagePossession","accuracyOverall","weightedScore","XGDiff","strength","ChartJS","register","CategoryScale","LinearScale","RadialLinearScale","PointElement","ArcElement","Filler","BarElement","LineElement","Title","Tooltip","Legend","rollingGoalDiffTotalHome","rollingGoalDiffTotalAway","displayBool","testBool","styling","alert","getPointsFromGames","formArr","pairings","W","D","L","arrayOfIndividualPoints","getLastGameResult","homeXG","awayXG","homeShots","awayShots","homeSot","awaySot","homeDangerousAttacks","awayDangerousAttacks","homePossession","awayPossession","homeRed","awayRed","homePPG","awayPPG","StatsHome","gameCount","formDataHome","Last5","gameArrayHomeTeamHomeGames","AverageGoals","AverageConceeded","AverageXG","AverageXGConceded","homeTenGameAverage","homeSixGameAverage","homeFiveGameAverage","homeLastGame","ResultsHomeOrAway","wonHomeOrAwayOnly","FormTextStringHome","StatsAway","formDataAway","gameArrayAwayTeamAwayGames","awayTenGameAverage","awaySixGameAverage","awayFiveGameAverage","awayLastGame","FormTextStringAway","gameStats","gameArrayHome","gameArrayAway","goalDiffHomeMovingAv","goalDiffAwayMovingAv","getEMA","p","resultHome","resultHomeOnly","timeZone","won","goalsScored","goalsConceeded","winningTeam","goalDiffArrayHome","cumulativeSumHome","resultAway","resultAwayOnly","goalDiffArrayAway","cumulativeSumAway","bttsArrayHome","bttsArrayAway","resultsArrayHome","resultsArrayAway","homeFormTrend","awayFormTrend","formTextStringHome","formTextStringAway","favouriteRecordHome","favouriteRecordAway","homeXGForStrength","homeXGAgainstStrength","homeDirectnessStrength","homeAccuracyOverallStrength","awayXGForStrength","awayXGAgainstStrength","awayDirectnessStrength","awayAccuracyOverallStrength","formPointsHome","formPointsAway","Last5PPG","formArrayHome","formArrayAway","chartType","overviewHome","overviewAway","pointsHome","pointsHomeAv","pointsAway","pointsAwayAv","resultValue","count","mockValue","initialState","dataHome","localStorage","getItem","dataAway","dataHomeDef","dataAwayDef","allTeamResultsHome","allTeamResultsAway","homeDetails","awayDetails","fixtureDetails","dataSlice","createSlice","reducers","setData","action","payload","actions","store","configureStore","reducer","dataReducer","GetDivider","matchStatus","isPrediction","renderLeagueName","renderTable","SingleFixture","dispatch","useDispatch","StoreData","homeTeamName","homeTeamBadge","awayTeamName","awayTeamBadge","setItem","key1","key2","open","createStatsDiv","onMouseDown","handleButtonClick","List","today","todayFootyStats","tomorrow","tomorrowFootyStats","dateFootyStats","lastSaturday","lastSaturdayFootyStats","tomorrowsDate","yesterdaysDate","saturdayDate","historicDate","dateString","fixtureList","availableLeagues","leagueOrder","decrementDate","calculateDate","renderButtons","setDate","getDay","textJoined","newText","leagueList","mapOrder","key","A","B","welcomeTextOne","welcomeTextTwo","App","getLeagueList","href","target","rel","mockedFixtures","TwitterShareButton","boxShadow","TwitterIcon","RedditShareButton","RedditIcon","FacebookShareButton","quote","FacebookIcon","WhatsappShareButton","separator","WhatsappIcon","TelegramShareButton","TelegramIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","TeamPage","dataState","fetchData","storedFixtureDetailsJson","responseHome","responseAway","indexHome","findIndex","indexAway","test","scoredOverallHome","playedHomeOnly","scoredOverallHomeOnly","seasonScoredNum_home","conceededOverallHome","conceededOverallHomeOnly","seasonConcededNum_home","PPGOverallHome","PPGOverallHomeOnly","seasonPPG_home","leaguePosition_overallHome","leaguePosition_overall","leaguePosition_HomeOnly","leaguePosition_home","averageAttendance","average_attendance_home","BTTSPercentage_overallHome","BTTSAndWinPercentage_Home","BTTS_and_win_percentage_overall","BTTSAndLosePercentage_Home","BTTS_and_lose_percentage_overall","BTTSBothHalvesHome","BTTS_both_halves_percentage_overall","GoalDifferenceHT_overall_Home","GoalDifferenceHT_overall","GD_2hg_overall_Home","gd_2hg_overall","leadingAtHTPercentage_overallHome","leadingAtHTPercentage_overall","seasonOver15Percentage_overallHome","seasonOver25Percentage_overallHome","seasonOver35Percentage_overallHome","seasonOver45Percentage_overallHome","scoredBothHalvesPercentage_overallHome","shots_on_target_per_goals_scored_overallHome","shots_on_target_per_goals_scored_overall","cornersTotalAVG_overallHome","cornersTotalAVG_overall","cardsAVG_overallHome","foulsAVG_overallHome","foulsAVG_overall","penalties_won_per_match_overallHome","penalties_won_per_match_overall","penalty_in_a_match_percentage_overallHome","penalty_in_a_match_percentage_overall","scoredOverallAway","playedAwayOnly","scoredOverallAwayOnly","seasonScoredNum_away","conceededOverallAway","conceededOverallAwayOnly","seasonConcededNum_away","PPGOverallAway","PPGOverallAwayOnly","seasonPPG_away","leaguePosition_overallAway","leaguePosition_AwayOnly","leaguePosition_away","BTTSPercentage_overallAway","BTTSAndWinPercentage_Away","BTTSAndLosePercentage_Away","BTTSBothHalvesAway","GoalDifferenceHT_overall_Away","GD_2hg_overall_Away","leadingAtHTPercentage_overallAway","seasonOver15Percentage_overallAway","seasonOver25Percentage_overallAway","seasonOver35Percentage_overallAway","seasonOver45Percentage_overallAway","scoredBothHalvesPercentage_overallAway","shots_on_target_per_goals_scored_overallAway","cornersTotalAVG_overallAway","cardsAVG_overallAway","foulsAVG_overallAway","penalties_won_per_match_overallAway","penalty_in_a_match_percentage_overallAway","storedDataHome","useSelector","jsonDataHome","parse","propertyNamesHome","storedDataHomeDef","jsonDataHomeDef","propertyNamesHomeDef","storedDataallTeamResultsHome","jsonDataallTeamResultsHome","propertyNamesallTeamResultsHome","values","jsonHomeDetails","storedDataAway","jsonDataAway","propertyNamesAway","storedDataAwayDef","jsonDataAwayDef","propertyNamesAwayDef","storedDataallTeamResultsAway","jsonDataallTeamResultsAway","propertyNamesallTeamResultsAway","jsonAwayDetails","storedFixtureDetails","stacked","path","Team","exact"],"mappings":"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","file":"static/js/main.ddc4bdef.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n      <h1 className=\"HeaderContainer\">XG Tipping</h1>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nexport function Button(props) {\n  return (\n    <div id=\"Button\">\n      <button data-cy={props.text} variant=\"primary\" type=\"button\" onClick={props.onClickEvent} className={props.className} style={props.style}>\n        {props.text}\n      </button>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nexport var selectedOdds = \"Fractional odds\";\n\nexport class OddsRadio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOdds: this.props.value,\n    };\n  }\n\n  handleOptionChange = () => {\n    this.setState({\n      selectedOdds: this.props.value,\n    });\n    selectedOdds = this.state.selectedOdds;\n  };\n\n  render() {\n    return (\n      <section className=\"dark2\">\n        <div className={this.props.className}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"odds\"\n              checked={this.state.checked}\n              onChange={this.handleOptionChange}\n              data-cy={this.props.value}\n            />\n            <span className=\"design\"></span>\n            <span className=\"text\">{this.props.value}</span>\n          </label>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default OddsRadio;\n","import React from \"react\";\n\nexport function CreateBadge(props) {\n\n  if(props.image === \"-\"){\n    return (\n      <div className={props.ClassName} />\n    );\n  } else {\n    return (\n      <img\n        src={`https://cdn.footystats.org/img/${props.image}`}\n        className={props.ClassName}\n        alt={props.alt}\n        flex-shrink={props.flexShrink}\n      />\n    );\n  }\n}\n","import React, { Fragment } from \"react\";\n\nfunction Stats(props) {\n  let shouldOpen = props.clicked\n  function styleForm(formIndicator) {\n    let className;\n    if (formIndicator === \"W\") {\n      className = \"win\";\n    } else if (formIndicator === \"D\") {\n      className = \"draw\";\n    } else if (formIndicator === \"L\") {\n      className = \"loss\";\n    }\n    return className;\n  }\n\n  function styleBTTS(BTTSBoolean) {\n    let className;\n    if (BTTSBoolean === \"\\u2714\") {\n      className = \"BTTSTrue\";\n    } else if (BTTSBoolean === \"\\u2718\") {\n      className = \"BTTSFalse\";\n    }\n    return className;\n  }\n\n  if (props.formRun) {\n    return (\n      <Fragment>\n        <ul className={props.className} style={props.style}>\n          <li className=\"FormSummaryHome\">{props.FormTextString}</li>\n          <li className=\"FavouriteSummaryHome\">{props.FavouriteRecord}</li>\n          <li className=\"FormHeader\">\n            League results (most recent on right)\n          </li>\n          <li key={`last5League`} className=\"last5League\">\n          <span className={styleForm(props.Results[5])}>\n              {props.Results[5]}\n            </span>\n            <span className={styleForm(props.Results[4])}>\n              {props.Results[4]}\n            </span>\n            <span className={styleForm(props.Results[3])}>\n              {props.Results[3]}\n            </span>\n            <span className={styleForm(props.Results[2])}>\n              {props.Results[2]}\n            </span>\n            <span className={styleForm(props.Results[1])}>\n              {props.Results[1]}\n            </span>\n            <span className={styleForm(props.Results[0])}>\n              {props.Results[0]}\n            </span>\n          </li>\n          <li className=\"FormHeader\">\n            {props.homeOrAway} form (most recent on right)\n          </li>\n          <li key={`last5${props.homeOrAwayResults}`} className=\"FormHomeOrAway\">\n          <span className={styleForm(props.homeOrAwayResults[5])}>\n              {props.homeOrAwayResults[5]}\n            </span>\n            <span className={styleForm(props.homeOrAwayResults[4])}>\n              {props.homeOrAwayResults[4]}\n            </span>\n            <span className={styleForm(props.homeOrAwayResults[3])}>\n              {props.homeOrAwayResults[3]}\n            </span>\n            <span className={styleForm(props.homeOrAwayResults[2])}>\n              {props.homeOrAwayResults[2]}\n            </span>\n            <span className={styleForm(props.homeOrAwayResults[1])}>\n              {props.homeOrAwayResults[1]}\n            </span>\n            <span className={styleForm(props.homeOrAwayResults[0])}>\n              {props.homeOrAwayResults[0]}\n            </span>\n          </li>\n          <li\n            key=\"BTTSArrayHomeOrAway\"\n            className=\"BTTSArrayHomeOrAway\"\n            data-cy={props.name + \"BTTSArrayHomeOrAway\"}\n          >\n            <div className=\"BTTSResults\">BTTS</div>\n            <span className={styleBTTS(props.BTTSArray[5])}>{props.BTTSArray[5]}</span>\n            <span className={styleBTTS(props.BTTSArray[4])}>{props.BTTSArray[4]}</span>\n            <span className={styleBTTS(props.BTTSArray[3])}>{props.BTTSArray[3]}</span>\n            <span className={styleBTTS(props.BTTSArray[2])}>{props.BTTSArray[2]}</span>\n            <span className={styleBTTS(props.BTTSArray[1])}>{props.BTTSArray[1]}</span>\n            <span className={styleBTTS(props.BTTSArray[0])}>{props.BTTSArray[0]}</span>\n          </li>\n          <li\n            key=\"TeamScored\"\n            className=\"TeamScored\"\n            data-cy={props.name + \"teamScored\"}\n          >\n            {`Avg goals scored - ${props.goals}`}\n          </li>\n          <li\n            key=\"TeamConceeded\"\n            className=\"TeamConceeded\"\n            data-cy={props.name + \"teamConceded\"}\n          >\n            {`Avg goals conceeded - ${props.conceeded}`}\n          </li>\n          <li\n            key=\"TeamPossession\"\n            className=\"TeamPossession\"\n            data-cy={props.name + \"teamPossession\"}\n          >\n            {`Avg possession - ${props.possession}%`}\n          </li>\n          <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name + \"teamXG\"}>\n            {`Avg XG - ${props.XG}`}\n          </li>\n          <li\n            key=\"TeamXGConceded\"\n            className=\"TeamXGConceded\"\n            data-cy={props.name + \"teamXGConceded\"}\n          >\n            {`Avg XG conceded - ${props.XGConceded}`}\n          </li>\n          <li\n            key=\"goalDifference\"\n            className=\"goalDifference\"\n            data-cy={props.name + \"goalDifference\"}\n          >\n            {`Goal difference : `}\n            <span>{props.goalDifference}</span>\n          </li>\n          <li\n            key=\"goalDifferenceHorA\"\n            className=\"goalDifferenceHorA\"\n            data-cy={props.name + \"goalDifference\"}\n          >\n            {`Goal difference ${props.homeOrAway} : ${props.goalDifferenceHomeOrAway}`}\n          </li>\n          <li\n            key=\"AverageSOT\"\n            className=\"AverageSOT\"\n            data-cy={props.name + \"averageSOT\"}\n          >\n            {`Avg shots on target - ${props.sot}`}\n          </li>\n          <li\n            key=\"DangerousAttacks\"\n            className=\"DangerousAttacks\"\n            data-cy={props.name + \"dangerousAttacks\"}\n          >\n            {`Avg dangerous attacks - ${props.dangerousAttacks}`}\n          </li>\n          <li\n            key=\"LeaguePosition\"\n            className=\"LeaguePosition\"\n            data-cy={props.name + \"leaguePosition\"}\n          >\n            {`League position - ${props.leaguePosition}`}\n          </li>\n\n          <li\n            key=\"LeaguePositionHomeOrAway\"\n            className=\"LeaguePositionHomeOrAway\"\n            data-cy={props.name + \"LeaguePositionHomeOrAway\"}\n          >\n            {`Position (${props.homeOrAway} only) - ${props.homeOrAwayLeaguePosition}`}\n          </li>\n          <li\n            key=\"WinPercentage\"\n            className=\"WinPercentage\"\n            data-cy={props.name + \"WinPercentage\"}\n          >\n            {`${props.homeOrAway} wins - ${props.winPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"DrawPercentage\"\n            className=\"DrawPercentage\"\n            data-cy={props.name + \"DrawPercentage\"}\n          >\n            {`${props.homeOrAway} draws - ${props.drawPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"LossPercentage\"\n            className=\"LossPercentage\"\n            data-cy={props.name + \"LossPercentage\"}\n          >\n            {`${props.homeOrAway} losses - ${props.lossPercentage.toFixed(1)}%`}\n          </li>\n          <li key=\"PPG\" className=\"PPG\" data-cy={props.name + \"PPG\"}>\n            {`Season PPG - ${props.ppg}`}\n          </li>\n          <li\n            key=\"FormTrend10a\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 10 PPG: ${props.formTrend[0]}`}\n          </li>\n          <li\n            key=\"FormTrend10b\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 6 PPG: ${props.formTrend[1]}`}\n          </li>\n          <li\n            key=\"FormTrend10c\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 5 PPG: ${props.formTrend[2]}.`}\n          </li>\n          <li\n            key=\"CardsTotal\"\n            className=\"CardsTotal\"\n            data-cy={props.name + \"CardsTotal\"}\n          >\n            {`Cards total: ${props.CardsTotal}`}\n          </li>\n          <li\n            key=\"CornersAverage\"\n            className=\"CornersAverage\"\n            data-cy={props.name + \"CornersAverage\"}\n          >\n            {`Corners average: ${props.CornersAverage}`}\n          </li>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  } else {\n    return (\n      <Fragment>\n        <ul className={props.className} style={props.style}>\n          <li className=\"FormSummaryHome\">{props.FormTextString}</li>\n          <li className=\"FavouriteSummaryAway\">{props.FavouriteRecord}</li>\n          <li\n            key=\"TeamScored\"\n            className=\"TeamScored\"\n            data-cy={props.name + \"teamScored\"}\n          >\n            {`Avg goals scored - ${props.goals}`}\n          </li>\n          <li\n            key=\"TeamConceeded\"\n            className=\"TeamConceeded\"\n            data-cy={props.name + \"teamConceded\"}\n          >\n            {`Avg goals conceeded - ${props.conceeded}`}\n          </li>\n          <li\n            key=\"TeamPossession\"\n            className=\"TeamPossession\"\n            data-cy={props.name + \"teamPossession\"}\n          >\n            {`Avg possession - ${props.possession}%`}\n          </li>\n          <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name + \"teamXG\"}>\n            {`Avg XG - ${props.XG}`}\n          </li>\n          <li\n            key=\"TeamXGConceded\"\n            className=\"TeamXGConceded\"\n            data-cy={props.name + \"teamXGConceded\"}\n          >\n            {`Avg XG conceded - ${props.XGConceded}`}\n          </li>\n          <li\n            key=\"AverageSOT\"\n            className=\"AverageSOT\"\n            data-cy={props.name + \"averageSOT\"}\n          >\n            {`Avg shots on target - ${props.sot}`}\n          </li>\n          <li\n            key=\"DangerousAttacks\"\n            className=\"DangerousAttacks\"\n            data-cy={props.name + \"dangerousAttacks\"}\n          >\n            {`Avg dangerous attacks - ${props.dangerousAttacks}`}\n          </li>\n          <li\n            key=\"LeaguePosition\"\n            className=\"LeaguePosition\"\n            data-cy={props.name + \"leaguePosition\"}\n          >\n            {`League position - ${props.leaguePosition}`}\n          </li>\n\n          <li\n            key=\"LeaguePositionHomeOrAway\"\n            className=\"LeaguePositionHomeOrAway\"\n            data-cy={props.name + \"LeaguePositionHomeOrAway\"}\n          >\n            {`Position (${props.homeOrAway} only) - ${props.homeOrAwayLeaguePosition}`}\n          </li>\n          <li\n            key=\"WinPercentage\"\n            className=\"WinPercentage\"\n            data-cy={props.name + \"WinPercentage\"}\n          >\n            {`${props.homeOrAway} wins - ${props.winPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"DrawPercentage\"\n            className=\"DrawPercentage\"\n            data-cy={props.name + \"DrawPercentage\"}\n          >\n            {`${props.homeOrAway} draws - ${props.drawPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"LossPercentage\"\n            className=\"LossPercentage\"\n            data-cy={props.name + \"LossPercentage\"}\n          >\n            {`${props.homeOrAway} losses - ${props.lossPercentage.toFixed(1)}%`}\n          </li>\n          <li key=\"PPG\" className=\"PPG\" data-cy={props.name + \"PPG\"}>\n            {`Season PPG - ${props.ppg}`}\n          </li>\n          <li\n            key=\"FormTrend10a\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 10 PPG: ${props.formTrend[0]}`}\n          </li>\n          <li\n            key=\"FormTrend10b\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 6 PPG: ${props.formTrend[1]}`}\n          </li>\n          <li\n            key=\"FormTrend10c\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 5 PPG: ${props.formTrend[2]}.`}\n          </li>\n          <li\n            key=\"CardsTotal\"\n            className=\"CardsTotal\"\n            data-cy={props.name + \"CardsTotal\"}\n          >\n            {`Cards total: ${props.CardsTotal}`}\n          </li>\n          <li\n            key=\"CornersAverage\"\n            className=\"CornersAverage\"\n            data-cy={props.name + \"CornersAverage\"}\n          >\n            {`Corners average: ${props.CornersAverage}`}\n          </li>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Stats;\n","import React from \"react\";\n\nfunction Div(props) {\n  return (\n    <div id={props.id} onClick={props.onClick} style={props.style} className={props.className}>{props.text}</div>\n  );\n}\n\nexport default Div;\n","export async function getForm(match) {\n  const teams = [match.homeId, match.awayId];\n  const fixtureForm = [];\n\n  for (let i = 0; i < teams.length; i++) {\n    const team = teams[i];\n\n    let response = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}formTeam/${team}`\n    );\n    await response.json().then((formData) => {\n      formData.lastMatchTimestamp = formData.last_updated_match_timestamp\n      fixtureForm[i] = formData;\n    });\n  }\n  return fixtureForm;\n}\n","import React, { useState, useEffect } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport { selectedOdds } from \"../components/OddsRadio\";\nimport oddslib from \"oddslib\";\nexport let rangeValue = [1, 10];\n\nexport const Slide = (props) => {\n  const [range, setRange] = useState([1.1, 10]);\n  const [fractionalValue, setFractionalValue] = useState([\"1/9\", \"10/1\"]);\n\n  useEffect(() => {\n    if (selectedOdds === \"Fractional odds\") {\n      let roundedValueOne = (Math.round(range[0] * 5) / 5).toFixed(1);\n      let roundedValueTwo = (Math.round(range[1] * 5) / 5).toFixed(1);\n\n      try {\n        const fractionalOne = oddslib\n          .from(\"decimal\", roundedValueOne)\n          .to(\"fractional\", { precision: 1 });\n        const fractionalTwo = oddslib\n          .from(\"decimal\", roundedValueTwo)\n          .to(\"fractional\", { precision: 1 });\n          console.log(fractionalOne);\n          console.log(fractionalTwo);\n        setFractionalValue([fractionalOne, fractionalTwo]);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [range]);\n\n  const handleChange = (event, newValue) => {\n    setRange(newValue);\n    console.log(newValue);\n    rangeValue = newValue;\n  };\n\n  return (\n    <Slider\n      aria-label=\"Always visible\"\n      value={range}\n      sx={{\n        width: \"90%\",\n        color: \"#030061\",\n      }}\n      onChange={handleChange}\n      valueLabelDisplay=\"auto\"\n      step={0.1}\n      min={1.1}\n      max={10}\n      valueLabelFormat={(value, index) =>\n        selectedOdds === \"Fractional odds\" ? fractionalValue[index] : value\n      }\n    />\n  );\n};\n","import React from \"react\";\nimport Collapsible from \"react-collapsible\";\n\nconst Collapsable = (props) => {\n  return (\n    <Collapsible transitionTime={300} trigger={<button className={props.classNameButton}>{props.buttonText}</button>} className={props.className? props.className: \"Collapsable\"}>\n      <div className={props.classNameFlex? props.classNameFlex: \"\"}>\n      <span className={props.classNameTwo? props.classNameTwo: props.buttonText} style={props.style} key={`123${props.buttonText}`}>{props.element}</span>\n      <span className={props.classNameThree? props.classNameTwo: props.buttonText} key={`456${props.buttonText}`}>{props.elementTwo}</span>\n      </div>\n    </Collapsible>\n  );\n};\n\n\nexport default Collapsable;","import React, { Component, Fragment } from \"react\";\nimport { getNewTips } from \"../logic/getScorePredictions\"\nimport {allTips} from \"../logic/getScorePredictions\"\nexport var incrementValue = 3;\n\nexport var riskLevel = 10;\n\nclass Increment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      incrementValue,\n      riskLevel,\n      show: true,\n    };\n  }\n\n  IncrementItem = () => {\n    if(incrementValue > 1){\n    this.setState({ incrementValue: this.state.incrementValue - 1 });\n    this.setState({ riskLevel: this.state.riskLevel - 1 });\n    incrementValue = (this.state.incrementValue - 1);\n    riskLevel = this.state.riskLevel - 1;\n    }\n    getNewTips(allTips)\n  };\n  DecreaseItem = () => {\n    if(incrementValue > 0){\n      this.setState({ incrementValue: this.state.incrementValue + 1 });\n      this.setState({ riskLevel: this.state.riskLevel + 1 });\n      incrementValue = (this.state.incrementValue + 1);\n      riskLevel = this.state.riskLevel + 1;\n    }\n    getNewTips(allTips)\n  };\n\n  render() {\n    return (\n      <Fragment>\n          <button className=\"IncrementButton\" onClick={this.IncrementItem}>\n            -\n          </button>\n          <button className=\"DecrementButton\" onClick={this.DecreaseItem}>\n            +\n          </button>\n      </Fragment>\n\n    );\n  }\n}\n\nexport default Increment;\n","export async function getBTTSPotential(\n  match,\n  homeGoals,\n  awayGoals,\n  unroundedHomeGoals,\n  unroundedAwayGoals\n) {\n  const homeBTTS = match.bttsAllPercentageHome;\n  const homeOnlyBTTS = match.bttsPercentageHomeHome;\n  const awayOnlyBTTS = match.bttsPercentageAwayAway;\n  const awayBTTS = match.bttsAllPercentageAway;\n  const homeG = homeGoals;\n  const awayG = awayGoals;\n\n  match.combinedBTTS = (homeBTTS + awayBTTS) / 2;\n\n  if (\n    match.bttsFraction !== \"N/A\" &&\n    match.status !== \"suspended\" &&\n    match.status !== \"canceled\"\n  ) {\n    if (\n      homeBTTS > 55 &&\n      awayBTTS > 55 &&\n      homeOnlyBTTS > 55 &&\n      awayOnlyBTTS > 55 &&\n      match.awayOdds < 4 &&\n      match.awayOdds > 1.3 &&\n      homeG >= 1 &&\n      awayG >= 1 \n    ) {\n      match.btts = true;\n      match.bttsChosen = true;\n      match.totalGoals = match.rawFinalHomeGoals + match.rawFinalAwayGoals;\n    } else {\n      match.btts = false;\n      match.bttsChosen = false;\n    }\n  }\n  return match;\n}\n","import SwiperCore, { EffectCoverflow, Pagination } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/swiper-bundle.min.css\";\nimport \"swiper/swiper.min.css\";\n\nSwiperCore.use([EffectCoverflow, Pagination]);\n\nexport const Slider = (props) => {\n  return (\n    <Swiper\n      effect={\"coverflow\"}\n      autoHeight={true}\n      grabCursor={true}\n      centeredSlides={true}\n      slidesPerView={1}\n      coverflowEffect={{\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: false,\n      }}\n      pagination={{ clickable: true }}\n      className=\"mySwiper\"\n    >\n      <SwiperSlide>\n       {props.element}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element2}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element3}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element4}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element5}\n      </SwiperSlide>\n    </Swiper>\n  );\n};\n","import KofiButton from \"kofi-button\"\n\nexport const StyledKofiButton = (props) => {\n  return (\n    <KofiButton className=\"kofi-button\" color=\"#030061\" title={props.buttonText} kofiID=\"H2H0AX25Z\" />\n  )\n}","import React, { useState } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nexport let minimumXG = 0;\nexport let minimumGD = 0;\nexport let minimumGDHorA = 0;\nexport let minimumLast10 = 0;\n\nfunction SlideDiff(props) {\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n\n    switch (true) {\n      case props.useCase === \"xg\":\n        minimumXG = newValue;\n        break;\n      case props.useCase === \"gd\":\n        minimumGD = newValue;\n        break;\n      case props.useCase === \"gdHorA\":\n        minimumGDHorA = newValue;\n        break;\n      case props.useCase === \"last10\":\n        minimumLast10 = newValue;\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Slider\n      aria-label=\"Always visible\"\n      value={value}\n      sx={{\n        width: \"90%\",\n        color: \"#030061\",\n      }}\n      onChange={handleChange}\n      step={1}\n      marks={props.marks}\n      valueLabelDisplay=\"auto\"\n      min={parseFloat(props.lower)}\n      max={parseFloat(props.upper)}\n    />\n  );\n}\n\nexport default SlideDiff;\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { matches, diff } from \"./getFixtures\";\nimport { RenderAllFixtures } from \"../logic/getFixtures\";\nimport Div from \"../components/Div\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { allForm } from \"../logic/getFixtures\";\nimport Increment from \"../components/Increment\";\nimport { incrementValue } from \"../components/Increment\";\nimport { getBTTSPotential } from \"../logic/getBTTSPotential\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport { Slider } from \"../components/Carousel\";\nimport { StyledKofiButton } from \"../components/KofiButton\";\nimport {\n  calculateAttackingStrength,\n  calculateDefensiveStrength,\n  calculateMetricStrength,\n  getXGtoActualDifferentialStrength,\n} from \"./getStats\";\nimport { rangeValue } from \"../components/Slider\";\nimport {\n  minimumGD,\n  minimumXG,\n  minimumLast10,\n  minimumGDHorA,\n} from \"../components/SliderDiff\";\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nlet finalHomeGoals;\nlet finalAwayGoals;\nlet rawFinalHomeGoals;\nlet rawFinalAwayGoals;\nlet homeOdds;\nlet awayOdds;\nlet totalGoals = 0;\nlet totalGoals2 = 0;\nlet numberOfGames = 0;\nlet drawPredictions = 0;\nlet homePredictions = 0;\nlet awayPredictions = 0;\nlet allOutcomes = 0;\nlet homeOutcomes = 0;\nlet awayOutcomes = 0;\nlet winAmount = 0;\nlet lossAmount = 0;\nlet sumStatDAWin = 0;\nlet sumStatDALoss = 0;\nlet sumStatPossessionWin = 0;\nlet sumStatPossessionLoss = 0;\nlet sumStatSOTWin = 0;\nlet sumStatSOTLoss = 0;\nlet sumStatPPGLast10Win = 0;\nlet sumStatPPGLast10Loss = 0;\nlet sumOddsWin = 0;\nlet sumOddsLoss = 0;\nlet sumXGForWin = 0;\nlet sumXGForLoss = 0;\nlet sumXGAgainstWin = 0;\nlet sumXGAgainstLoss = 0;\nlet allWinOutcomes = 0;\nlet allLossOutcomes = 0;\nlet allDrawOutcomes = 0;\nlet totalROI = 0;\nlet totalInvestment = 0;\nlet totalProfit = 0;\nexport let formObjectHome;\nexport let formObjectAway;\nexport let clicked = false;\n\nexport var renderPredictions;\n\nasync function convertTimestamp(timestamp) {\n  let newDate = new Date(timestamp * 1000);\n  let [day, month, year] = newDate.toLocaleDateString(\"en-US\").split(\"/\");\n\n  let converted = `${year}-${day}-${month}`;\n\n  return converted;\n}\n\nexport function getPointsFromLastX(lastX) {\n  let points = 0;\n  let pointsAddition;\n\n  try {\n    lastX.forEach((game) => {\n      switch (true) {\n        case game === \"W\":\n          pointsAddition = 3;\n          break;\n        case game === \"D\":\n          pointsAddition = 1;\n          break;\n        case game === \"L\":\n          pointsAddition = 0;\n          break;\n        default:\n          break;\n      }\n\n      points = points + pointsAddition;\n    });\n    return points;\n  } catch (error) {\n    console.log(error);\n    return \"N/A\";\n  }\n}\n\nasync function getPastLeagueResults(team, game, hOrA, form) {\n  let date = game.date;\n  if (allLeagueResultsArrayOfObjects[game.leagueIndex].fixtures.length > 35) {\n    let teamsHomeResults = allLeagueResultsArrayOfObjects[\n      game.leagueIndex\n    ].fixtures.filter((fixture) => fixture.home_name === team);\n\n    teamsHomeResults = teamsHomeResults\n      .filter(function (item) {\n        return item.date_unix < date;\n      })\n      .sort((a, b) => a.date_unix - b.date_unix);\n\n    let teamsAwayResults = allLeagueResultsArrayOfObjects[\n      game.leagueIndex\n    ].fixtures.filter((fixture) => fixture.away_name === team);\n\n    teamsAwayResults = teamsAwayResults\n      .filter(function (item) {\n        return item.date_unix < date;\n      })\n      .sort((a, b) => a.date_unix - b.date_unix);\n\n    let homeResults = [];\n    let awayResults = [];\n    let oddsSumHome = 0;\n    let oddsSumAway = 0;\n    let favouriteCount = 0;\n    let underdogCount = 0;\n    let winningFavouriteCount = 0;\n    let drawingFavouriteCount = 0;\n    let beatenFavouriteCount = 0;\n    let winningUnderdogCount = 0;\n    let drawingUnderdogCount = 0;\n    let beatenUnderdogCount = 0;\n    for (let index = 0; index < teamsHomeResults.length; index++) {\n      const resultedGame = teamsHomeResults[index];\n\n      homeResults.push({\n        homeTeam: resultedGame.home_name,\n        homeGoals: resultedGame.homeGoalCount,\n        XG: resultedGame.team_a_xg,\n        awayTeam: resultedGame.away_name,\n        awayGoals: resultedGame.awayGoalCount,\n        XGAgainst: resultedGame.team_b_xg,\n        possession: resultedGame.team_a_possession,\n        scored: resultedGame.homeGoalCount,\n        conceeded: resultedGame.awayGoalCount,\n        shots: resultedGame.team_a_shots,\n        sot: resultedGame.team_a_shotsOnTarget,\n        dangerousAttacks: resultedGame.team_a_dangerous_attacks,\n        corners: resultedGame.team_a_corners,\n        date: await convertTimestamp(resultedGame.date_unix),\n        dateRaw: resultedGame.date_unix,\n        oddsHome: resultedGame.odds_ft_1,\n        oddsAway: resultedGame.odds_ft_2,\n        btts:\n          resultedGame.homeGoalCount > 0 && resultedGame.awayGoalCount > 0\n            ? true\n            : false,\n      });\n      oddsSumHome = oddsSumHome + resultedGame.odds_ft_1;\n      favouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2\n          ? favouriteCount + 1\n          : favouriteCount + 0;\n      winningFavouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? winningFavouriteCount + 1\n          : winningFavouriteCount + 0;\n      drawingFavouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingFavouriteCount + 1\n          : drawingFavouriteCount + 0;\n      beatenFavouriteCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? beatenFavouriteCount + 1\n          : beatenFavouriteCount + 0;\n\n      underdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2\n          ? underdogCount + 1\n          : underdogCount + 0;\n      winningUnderdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? winningUnderdogCount + 1\n          : winningUnderdogCount + 0;\n      drawingUnderdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingUnderdogCount + 1\n          : drawingUnderdogCount + 0;\n      beatenUnderdogCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? beatenUnderdogCount + 1\n          : beatenUnderdogCount + 0;\n    }\n    for (let index = 0; index < teamsAwayResults.length; index++) {\n      const resultedGame = teamsAwayResults[index];\n      awayResults.push({\n        homeTeam: resultedGame.home_name,\n        homeGoals: resultedGame.homeGoalCount,\n        XG: resultedGame.team_b_xg,\n        awayTeam: resultedGame.away_name,\n        awayGoals: resultedGame.awayGoalCount,\n        XGAgainst: resultedGame.team_a_xg,\n        possession: resultedGame.team_b_possession,\n        scored: resultedGame.awayGoalCount,\n        conceeded: resultedGame.homeGoalCount,\n        shots: resultedGame.team_b_shots,\n        sot: resultedGame.team_b_shotsOnTarget,\n        dangerousAttacks: resultedGame.team_b_dangerous_attacks,\n        corners: resultedGame.team_b_corners,\n        date: await convertTimestamp(resultedGame.date_unix),\n        dateRaw: resultedGame.date_unix,\n        oddsHome: resultedGame.odds_ft_1,\n        oddsAway: resultedGame.odds_ft_2,\n        btts:\n          resultedGame.homeGoalCount > 0 && resultedGame.awayGoalCount > 0\n            ? true\n            : false,\n      });\n      oddsSumAway = oddsSumAway + resultedGame.odds_ft_2;\n      favouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2\n          ? favouriteCount + 1\n          : favouriteCount + 0;\n      winningFavouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? winningFavouriteCount + 1\n          : winningFavouriteCount + 0;\n      drawingFavouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingFavouriteCount + 1\n          : drawingFavouriteCount + 0;\n      beatenFavouriteCount =\n        resultedGame.odds_ft_1 > resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? beatenFavouriteCount + 1\n          : beatenFavouriteCount + 0;\n\n      underdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2\n          ? underdogCount + 1\n          : underdogCount + 0;\n      winningUnderdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount < resultedGame.awayGoalCount\n          ? winningUnderdogCount + 1\n          : winningUnderdogCount + 0;\n      drawingUnderdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount === resultedGame.awayGoalCount\n          ? drawingUnderdogCount + 1\n          : drawingUnderdogCount + 0;\n      beatenUnderdogCount =\n        resultedGame.odds_ft_1 < resultedGame.odds_ft_2 &&\n        resultedGame.homeGoalCount > resultedGame.awayGoalCount\n          ? beatenUnderdogCount + 1\n          : beatenUnderdogCount + 0;\n    }\n\n    let reversedResultsHome = homeResults;\n    let reversedResultsAway = awayResults;\n\n    const allTeamResults = reversedResultsHome\n      .concat(reversedResultsAway)\n      .sort((a, b) => a.dateRaw - b.dateRaw);\n\n    form.allTeamResults = allTeamResults.sort((b, a) => a.dateRaw - b.dateRaw);\n\n    const averageOddsHome = oddsSumHome / teamsHomeResults.length;\n    const averageOddsAway = oddsSumAway / teamsAwayResults.length;\n    form.favouriteCount = favouriteCount;\n    form.winningFavouriteCount = winningFavouriteCount;\n    form.drawingFavouriteCount = drawingFavouriteCount;\n    form.beatenFavouriteCount = beatenFavouriteCount;\n\n    form.underdogCount = underdogCount;\n    form.winningUnderdogCount = winningUnderdogCount;\n    form.drawingUnderdogCount = drawingUnderdogCount;\n    form.beatenUnderdogCount = beatenUnderdogCount;\n\n    form.oddsReliabilityWin =\n      favouriteCount > 0\n        ? (form.winningFavouriteCount / form.favouriteCount) * 100\n        : 0;\n    form.oddsReliabilityDraw =\n      favouriteCount > 0\n        ? (form.drawingFavouriteCount / form.favouriteCount) * 100\n        : 0;\n    form.oddsReliabilityLose =\n      favouriteCount > 0\n        ? (form.beatenFavouriteCount / form.favouriteCount) * 100\n        : 0;\n\n    form.oddsReliabilityWinAsUnderdog =\n      underdogCount > 0\n        ? (form.winningUnderdogCount / form.underdogCount) * 100\n        : 0;\n    form.oddsReliabilityDrawAsUnderdog =\n      underdogCount > 0\n        ? (form.drawingUnderdogCount / form.underdogCount) * 100\n        : 0;\n    form.oddsReliabilityLoseAsUnderdog =\n      underdogCount > 0\n        ? (form.beatenUnderdogCount / form.underdogCount) * 100\n        : 0;\n\n    form.reliableIndicator =\n      form.winningFavouriteCount + form.beatenUnderdogCount;\n    form.unreliableIndicator =\n      form.beatenFavouriteCount +\n      form.drawingFavouriteCount +\n      form.winningUnderdogCount +\n      form.drawingUnderdogCount;\n\n    form.predictabilityScore =\n      form.reliableIndicator / form.unreliableIndicator;\n\n    let reliabilityString;\n\n    switch (true) {\n      case form.predictabilityScore < 0.3:\n        reliabilityString =\n          \"Odds have been an extremely unreliable indicator of actual performance so far this season. Maybe best avoided?\";\n        break;\n      case form.predictabilityScore >= 0.3 && form.predictabilityScore < 0.8:\n        reliabilityString =\n          \"Odds have been an unreliable indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 0.8 && form.predictabilityScore < 1.2:\n        reliabilityString =\n          \"Odds have been a decent indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 1.2 && form.predictabilityScore < 1.7:\n        reliabilityString =\n          \"Odds have been a good indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 1.7 && form.predictabilityScore < 2.2:\n        reliabilityString =\n          \"Odds have been a very good indicator of actual performance so far this season\";\n        break;\n      case form.predictabilityScore >= 2.2:\n        reliabilityString =\n          \"Odds have been an excellent indicator of actual performance so far this season. One for the multi?\";\n        break;\n      default:\n        break;\n    }\n\n    form.reliabilityString = reliabilityString;\n\n    const teamGoalsHome = reversedResultsHome.map((res) => res.scored);\n\n    const teamGoalsAway = reversedResultsAway.map((res) => res.scored);\n    const teamGoalsAll = allTeamResults.map((res) => res.scored);\n\n    const teamConceededHome = reversedResultsHome.map((res) => res.conceeded);\n    const teamConceededAway = reversedResultsAway.map((res) => res.conceeded);\n    const teamConceededAll = allTeamResults.map((res) => res.conceeded);\n\n    const teamXGForAll = allTeamResults.map((res) => res.XG);\n    const teamXGAgainstAll = allTeamResults.map((res) => res.XGAgainst);\n    const XGSum = teamXGForAll.reduce((a, b) => a + b, 0);\n    const avgXGScored = XGSum / teamXGForAll.length || 0;\n    const XGAgainstSum = teamXGAgainstAll.reduce((a, b) => a + b, 0);\n    const avgXGConceeded = XGAgainstSum / teamXGAgainstAll.length || 0;\n\n    const possession = allTeamResults.map((res) => res.possession);\n    const possessionSum = possession.reduce((a, b) => a + b, 0);\n    const avgPossession = possessionSum / possession.length || 0;\n\n    const dangerousAttacks = allTeamResults.map((res) => res.dangerousAttacks);\n    const dangerousAttacksSum = dangerousAttacks.reduce((a, b) => a + b, 0);\n    const avgDangerousAttacks =\n      dangerousAttacksSum / dangerousAttacks.length || 0;\n\n    const shots = allTeamResults.map((res) => res.shots);\n    const shotsSum = shots.reduce((a, b) => a + b, 0);\n    const avgShots = shotsSum / shots.length || 0;\n\n    const shotsOnTarget = allTeamResults.map((res) => res.sot);\n    const shotsOnTargetSum = shotsOnTarget.reduce((a, b) => a + b, 0);\n    const avgShotsOnTarget = shotsOnTargetSum / shotsOnTarget.length || 0;\n\n    const corners = allTeamResults.map((res) => res.corners);\n    const cornersSum = corners.reduce((a, b) => a + b, 0);\n    const cornersAv = cornersSum / corners.length || 0;\n\n    const last5XG = teamXGForAll.slice(0, 5);\n    const last5XGSum = last5XG.reduce((a, b) => a + b, 0);\n    const last5XGAvgFor = last5XGSum / last5XG.length || 0;\n\n    const last5XGAgainst = teamXGAgainstAll.slice(0, 5);\n    const last5XGAgainstSum = last5XGAgainst.reduce((a, b) => a + b, 0);\n    const last5XGAvgAgainst = last5XGAgainstSum / last5XGAgainst.length || 0;\n\n    form.XGDiffNonAverage = XGSum - XGAgainstSum;\n    form.XGDiffNonAverageLast5 = last5XGSum - last5XGAgainstSum;\n\n    form.XGOverall = parseFloat(avgXGScored.toFixed(2));\n    form.XGlast5 = parseFloat(last5XGAvgFor.toFixed(2));\n\n    form.XGAgainstAvgOverall = parseFloat(avgXGConceeded.toFixed(2));\n    form.XGAgainstlast5 = parseFloat(last5XGAvgAgainst.toFixed(2));\n\n    form.AveragePossessionOverall = parseFloat(avgPossession.toFixed(1));\n    form.AverageDangerousAttacksOverall = parseFloat(\n      avgDangerousAttacks.toFixed(1)\n    );\n    form[\"Average Shots\"] = parseFloat(avgShots.toFixed(1));\n    form.AverageCorners = parseFloat(cornersAv.toFixed(1));\n    form.AverageShotsOnTargetOverall = parseFloat(avgShotsOnTarget.toFixed(1));\n    const alpha = 0.55;\n    const beta = 0.55;\n\n    let forAndAgainstRollingAv;\n    let forAndAgainstRollingAvHomeOrAway;\n    if (hOrA === \"home\") {\n      form.allGoalsArrayHome = teamGoalsAll;\n      form.allConceededArrayHome = teamConceededAll;\n      const sum = teamGoalsHome.reduce((a, b) => a + b, 0);\n      const sumTwo = teamConceededHome.reduce((a, b) => a + b, 0);\n      form.goalDifferenceHomeOrAway = sum - sumTwo;\n\n      console.log(form.teamName);\n      console.log(teamGoalsAll);\n      console.log(teamGoalsHome);\n\n      forAndAgainstRollingAv = await predictGoalsWithExponentialSmoothing(\n        teamGoalsAll.reverse(),\n        teamConceededAll.reverse(),\n        alpha\n      );\n      forAndAgainstRollingAvHomeOrAway =\n        await predictGoalsWithExponentialSmoothing(\n          teamGoalsHome,\n          teamConceededHome,\n          beta\n        );\n    } else if (hOrA === \"away\") {\n      form.allGoalsArrayAway = teamGoalsAll;\n      form.allConceededArrayAway = teamConceededAll;\n      const sum = teamGoalsAway.reduce((a, b) => a + b, 0);\n      const sumTwo = teamConceededAway.reduce((a, b) => a + b, 0);\n      form.goalDifferenceHomeOrAway = sum - sumTwo;\n      forAndAgainstRollingAv = await predictGoalsWithExponentialSmoothing(\n        teamGoalsAll.reverse(),\n        teamConceededAll.reverse(),\n        alpha\n      );\n      forAndAgainstRollingAvHomeOrAway =\n        await predictGoalsWithExponentialSmoothing(\n          teamGoalsAway,\n          teamConceededAway,\n          beta\n        );\n    }\n\n\n    let bttsHome = reversedResultsHome.map((res) => res.btts);\n    if (bttsHome.length > 10) {\n      bttsHome = bttsHome.slice(-10);\n    }\n\n    let bttsAway = reversedResultsAway.map((res) => res.btts);\n    if (bttsAway.length > 10) {\n      bttsAway = bttsAway.slice(-10);\n    }\n\n    let bttsAll = allTeamResults.map((res) => res.btts);\n    if (bttsAll.length > 10) {\n      bttsAll = bttsAll.slice(-10);\n    }\n\n    const bttsHomeCount = bttsHome.filter((btts) => btts === true);\n    const bttsHomeString = `${bttsHomeCount.length}/${bttsHome.length}`;\n    const bttsHomePercentage = (\n      (bttsHomeCount.length / bttsHome.length) *\n      100\n    ).toFixed(0);\n    const bttsAwayCount = bttsAway.filter((btts) => btts === true);\n    const bttsAwayString = `${bttsAwayCount.length}/${bttsAway.length}`;\n    const bttsAwayPercentage = (\n      (bttsAwayCount.length / bttsAway.length) *\n      100\n    ).toFixed(0);\n    const bttsAllCount = bttsAll.filter((btts) => btts === true);\n    const bttsAllString = `${bttsAllCount.length}/${bttsAll.length}`;\n    const bttsAllPercentage = (\n      (bttsAllCount.length / bttsAll.length) *\n      100\n    ).toFixed(0);\n\n    let r = 10;\n    let x = 10;\n\n    const teamGoalsHomeRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsHome,\n      teamGoalsHome.length < x ? teamGoalsHome.length : x\n    );\n\n    const teamGoalsAwayRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsAway,\n      teamGoalsAway.length < x ? teamGoalsAway.length : x\n    );\n\n    const teamConceededHomeRollingAverage =\n      await predictNextWeightedMovingAverage(\n        teamConceededHome,\n        teamConceededHome.length < x ? teamConceededHome.length : x\n      );\n\n    const teamConceededAwayRollingAverage =\n      await predictNextWeightedMovingAverage(\n        teamConceededAway,\n        teamConceededAway.length < x ? teamConceededAway.length : x\n      );\n\n    const sum = teamGoalsAll.reduce((a, b) => a + b, 0);\n    const avgScored = sum / teamGoalsAll.length || 0;\n\n    const last5 = teamGoalsAll.slice(0, 5);\n    const last5Sum = last5.reduce((a, b) => a + b, 0);\n    const last5AvgScored = last5Sum / last5.length || 0;\n\n    //is this sorted backwards???\n    const last5Conceeded = teamConceededAll.slice(0, 5);\n    const last5ConceededSum = last5Conceeded.reduce((a, b) => a + b, 0);\n    const last5AvgConceeded = last5ConceededSum / last5Conceeded.length || 0;\n\n    const last10 = teamGoalsAll.slice(0, 10);\n    const last10Sum = last10.reduce((a, b) => a + b, 0);\n    const last10AvgScored = last10Sum / last10.length || 0;\n\n    const last10Conceeded = teamConceededAll.slice(0, 10);\n    const last10ConceededSum = last10Conceeded.reduce((a, b) => a + b, 0);\n    const last10AvgConceeded = last10ConceededSum / last10Conceeded.length || 0;\n\n    form.last5Goals = parseFloat(last5AvgScored.toFixed(2));\n    form.last5GoalsConceeded = parseFloat(last5AvgConceeded.toFixed(2));\n    form.last5GoalDiff = form.last5Goals - form.last5GoalsConceeded;\n    form.last10Goals = parseFloat(last10AvgScored.toFixed(2));\n    form.last10GoalsConceeded = parseFloat(last10AvgConceeded.toFixed(2));\n\n    const teamGoalsAllRollingAverage = await predictNextWeightedMovingAverage(\n      last10,\n      last10.length < r ? last10.length : r\n    );\n\n    const teamGoalsConceededAllRollingAverage =\n      await predictNextWeightedMovingAverage(\n        last10Conceeded,\n        last10Conceeded.length < r ? last10Conceeded.length : r\n      );\n\n    const sumTwo = teamConceededAll.reduce((a, b) => a + b, 0);\n    const avgConceeded = sumTwo / teamConceededAll.length || 0;\n\n    form.goalDifference = sum - sumTwo;\n\n    // console.log(teamGoalsHomeRollingAverage)\n    // console.log(teamGoalsAwayRollingAverage)\n    // console.log(teamGoalsAllRollingAverage)\n    // console.log(teamConceededHomeRollingAverage)\n    // console.log(teamConceededAwayRollingAverage)\n    // console.log(teamGoalsConceededAllRollingAverage)\n    // console.log(averageOddsHome)\n    // console.log(averageOddsAway)\n    // console.log(avgScored)\n    // console.log(avgConceeded)\n    // console.log(bttsAllString)\n    // console.log(bttsHomeString)\n    // console.log(bttsAwayString)\n    // console.log(bttsAllPercentage)\n    // console.log(bttsHomePercentage)\n    // console.log(bttsAwayPercentage)\n    // console.log(forAndAgainstRollingAvHomeOrAway)\n    // console.log(forAndAgainstRollingAv)\n\n    return [\n      teamGoalsHomeRollingAverage,\n      teamGoalsAwayRollingAverage,\n      teamGoalsAllRollingAverage,\n      teamConceededHomeRollingAverage,\n      teamConceededAwayRollingAverage,\n      teamGoalsConceededAllRollingAverage,\n      averageOddsHome,\n      averageOddsAway,\n      avgScored,\n      avgConceeded,\n      bttsAllString,\n      bttsHomeString,\n      bttsAwayString,\n      bttsAllPercentage,\n      bttsHomePercentage,\n      bttsAwayPercentage,\n      forAndAgainstRollingAvHomeOrAway,\n      forAndAgainstRollingAv,\n    ];\n  } else {\n    return null;\n  }\n}\n\nasync function predictNextWeightedMovingAverage(numbers, windowSize) {\n  const startIndex = numbers.length - windowSize;\n  const window = numbers.slice(startIndex);\n  const weights = Array.from(\n    { length: windowSize },\n    (_, i) => (i + 1) / ((windowSize * (windowSize + 1)) / 2)\n  );\n  const sum = window.reduce((acc, num, i) => acc + num * weights[i], 0);\n  const movingAverage = sum / weights.reduce((acc, w) => acc + w, 0);\n  return parseFloat(movingAverage.toFixed(2));\n}\n\n// Function to calculate the weighted average using exponential smoothing\nasync function calculateWeightedAverage(arr, alpha) {\n  let weightedSum = 0;\n  let totalWeight = 0;\n\n  for (let i = arr.length - 1; i >= 0; i--) {\n    const weight = Math.pow(1 - alpha, arr.length - 1 - i);\n    weightedSum += arr[i] * weight;\n    totalWeight += weight;\n  }\n\n  return weightedSum / totalWeight;\n}\n\n// Function to predict goals scored and conceded for a team with exponential smoothing\nasync function predictGoalsWithExponentialSmoothing(\n  teamGoalsFor,\n  teamGoalsAgainst,\n  alpha\n) {\n  const lambdaFor = await calculateWeightedAverage(teamGoalsFor, alpha);\n  const lambdaAgainst = await calculateWeightedAverage(teamGoalsAgainst, alpha);\n\n  // You can fine-tune these values based on your model and data\n  const predictedGoalsFor = lambdaFor;\n  const predictedGoalsAgainst = lambdaAgainst;\n\n  return {\n    goalsFor: predictedGoalsFor,\n    goalsAgainst: predictedGoalsAgainst,\n  };\n}\n\nexport async function compareStat(statOne, statTwo) {\n  let stat1 = parseFloat(statOne);\n  let stat2 = parseFloat(statTwo);\n  let statDiff;\n  // console.log( await normalizeValues(12, 2, 0, 1))\n  // console.log(await diff(1.8571428571428571, 1.14285714285714285))\n\n  if (statOne !== 0 && statTwo !== 0) {\n    const { normalizedValue1, normalizedValue2 } = await normalizeValues(\n      stat1,\n      stat2,\n      0,\n      1\n    );\n\n    const finalValue1 = normalizedValue1;\n    const finalValue2 = normalizedValue2;\n\n    statDiff = await diff(finalValue1, finalValue2);\n  } else {\n    statDiff = 0;\n  }\n\n  return statDiff;\n}\n\nexport async function getClinicalRating(form) {\n  let rating;\n  let score;\n  switch (true) {\n    case form.dangerousAttackConversion <= 15:\n      rating = \"excellent\";\n      score = 0.8;\n      break;\n\n    case form.dangerousAttackConversion > 15 &&\n      form.dangerousAttackConversion <= 20:\n      rating = \"great\";\n      score = 0.9;\n      break;\n\n    case form.dangerousAttackConversion > 20 &&\n      form.dangerousAttackConversion <= 25:\n      rating = \"very good\";\n      score = 0.95;\n      break;\n\n    case form.dangerousAttackConversion > 25 &&\n      form.dangerousAttackConversion <= 32.5:\n      rating = \"good\";\n      score = 0.98;\n      break;\n\n    case form.dangerousAttackConversion > 30 &&\n      form.dangerousAttackConversion <= 35:\n      rating = \"above average\";\n      score = 0.99;\n      break;\n\n    case form.dangerousAttackConversion > 35 &&\n      form.dangerousAttackConversion <= 40:\n      rating = \"average\";\n      score = 1;\n      break;\n\n    case form.dangerousAttackConversion > 40 &&\n      form.dangerousAttackConversion <= 45:\n      rating = \"below average\";\n      score = 1.01;\n      break;\n\n    case form.dangerousAttackConversion > 45 &&\n      form.dangerousAttackConversion <= 50:\n      rating = \"poor\";\n      score = 1.05;\n      break;\n\n    case form.dangerousAttackConversion > 50 &&\n      form.dangerousAttackConversion <= 55:\n      rating = \"very poor\";\n      score = 1.1;\n      break;\n\n    case form.dangerousAttackConversion > 55 &&\n      form.dangerousAttackConversion <= 60:\n      rating = \"terrible\";\n      score = 1.2;\n      break;\n\n    case form.dangerousAttackConversion > 60:\n      rating = \"awful\";\n      score = 1.3;\n      break;\n\n    default:\n      break;\n  }\n\n  return [rating, score];\n}\n\nexport async function getPointsDifferential(pointsHomeAvg, pointsAwayAvg) {\n  const differential = await diff(pointsHomeAvg, pointsAwayAvg);\n  return parseFloat(differential);\n}\n\nexport async function getPointWeighting(pointsDiff) {\n  let pointsDiffWeightingHome;\n  let pointsDiffWeightingAway;\n\n  switch (true) {\n    case pointsDiff >= 2.5:\n      pointsDiffWeightingHome = 0.3;\n      pointsDiffWeightingAway = -0.3;\n      break;\n    case pointsDiff >= 2 && pointsDiff < 2.5:\n      pointsDiffWeightingHome = 0.2;\n      pointsDiffWeightingAway = -0.2;\n      break;\n    case pointsDiff >= 1.5 && pointsDiff < 2:\n      pointsDiffWeightingHome = 0.15;\n      pointsDiffWeightingAway = -0.15;\n      break;\n    case pointsDiff >= 1 && pointsDiff < 1.5:\n      pointsDiffWeightingHome = 0.1;\n      pointsDiffWeightingAway = -0.1;\n      break;\n    case pointsDiff >= 0.5 && pointsDiff < 1:\n      pointsDiffWeightingHome = 0.05;\n      pointsDiffWeightingAway = -0.05;\n      break;\n    case pointsDiff > -0.5 && pointsDiff < 0.5:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n      break;\n    case pointsDiff <= -0.5 && pointsDiff > -1:\n      pointsDiffWeightingHome = -0.05;\n      pointsDiffWeightingAway = 0.05;\n      break;\n    case pointsDiff <= -1 && pointsDiff > -1.5:\n      pointsDiffWeightingHome = -0.1;\n      pointsDiffWeightingAway = 0.1;\n      break;\n    case pointsDiff <= -1.5 && pointsDiff > -2:\n      pointsDiffWeightingHome = -0.15;\n      pointsDiffWeightingAway = 0.15;\n      break;\n    case pointsDiff <= -2 && pointsDiff > -2.5:\n      pointsDiffWeightingHome = -0.2;\n      pointsDiffWeightingAway = 0.2;\n      break;\n    case pointsDiff <= -2.5:\n      pointsDiffWeightingHome = -0.3;\n      pointsDiffWeightingAway = 0.3;\n      break;\n    default:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n  }\n  return [pointsDiffWeightingHome, pointsDiffWeightingAway];\n}\n\nexport async function compareFormTrend(recentForm, distantForm) {\n  let score;\n  let scoreTotal = 0;\n\n  for (let index = 0; index < recentForm.length; index++) {\n    const recent = recentForm[index];\n    const distant = distantForm[index];\n\n    if (recent > distant) {\n      score = 1.05;\n    } else if (recent === distant) {\n      score = 1;\n    } else if (recent < distant) {\n      score = 0.95;\n    }\n    scoreTotal = scoreTotal + score / recentForm.length;\n  }\n\n  return scoreTotal;\n}\n\nexport async function getPointAverage(pointTotal, games) {\n  return pointTotal / games;\n}\n\nasync function poissonDistribution(lambda, k) {\n  const numerator = Math.exp(-lambda) * Math.pow(lambda, k);\n  const denominator = factorial(k);\n  return numerator / denominator;\n}\n\nfunction factorial(n) {\n  if (n === 0 || n === 1) {\n    return 1;\n  }\n  let result = 1;\n  for (let i = 2; i <= n; i++) {\n    result *= i;\n  }\n  return result;\n}\n\nasync function calculateAverageGoals(goalsFor) {\n  const totalGoals = goalsFor.reduce((sum, goals) => sum + goals, 0);\n  return totalGoals / goalsFor.length;\n}\n\nasync function adjustGoalsAvg(goalsAvg, strengthRatio) {\n  return goalsAvg * strengthRatio;\n}\n\nasync function predictScore(\n  goalsForTeam1,\n  goalsAgainstTeam1,\n  goalsForTeam2,\n  goalsAgainstTeam2,\n  team1Metrics,\n  team2Metrics,\n  game\n) {\n  let team1AverageGoalsFor = await calculateAverageGoals(goalsForTeam1);\n  let team1AverageGoalsAgainst = await calculateAverageGoals(goalsAgainstTeam1);\n  let team2AverageGoalsFor = await calculateAverageGoals(goalsForTeam2);\n  let team2AverageGoalsAgainst = await calculateAverageGoals(goalsAgainstTeam2);\n\n  let team1StrengthRatio = team1Metrics.weighting / 1.75;\n  let team2StrengthRatio = team2Metrics.weighting / 1.75;\n\n  let adjustedTeam1AverageGoals = await adjustGoalsAvg(\n    team1AverageGoalsFor,\n    team1StrengthRatio\n  );\n  let adjustedTeam2AverageGoals = await adjustGoalsAvg(\n    team2AverageGoalsFor,\n    team2StrengthRatio\n  );\n\n  let adjustedTeam1AverageGoalsAgainst = await adjustGoalsAvg(\n    team1AverageGoalsAgainst,\n    team2StrengthRatio\n  );\n  let adjustedTeam2AverageGoalsAgainst = await adjustGoalsAvg(\n    team2AverageGoalsAgainst,\n    team1StrengthRatio\n  );\n\n  let maxGoals = 5; // Set the maximum number of goals to predict\n\n  const scores = [];\n\n  for (let i = 0; i <= maxGoals; i++) {\n    for (let j = 0; j <= maxGoals; j++) {\n      let team1GoalExpectation =\n        (adjustedTeam1AverageGoals + adjustedTeam2AverageGoalsAgainst) / 2;\n      // (adjustedTeam2AverageGoalsAgainst / adjustedTeam1AverageGoalsAgainst);\n      let team2GoalExpectation =\n        (adjustedTeam2AverageGoals + adjustedTeam1AverageGoalsAgainst) / 2;\n      // (adjustedTeam1AverageGoalsAgainst / adjustedTeam2AverageGoalsAgainst);\n\n      if (!isFinite(team1GoalExpectation)) {\n        team1GoalExpectation = 0;\n      }\n\n      if (!isFinite(team2GoalExpectation)) {\n        team2GoalExpectation = 0;\n      }\n\n      const probability =\n        (await poissonDistribution(team1GoalExpectation, i)) *\n        (await poissonDistribution(team2GoalExpectation, j));\n      scores.push({\n        team1Score: i,\n        team2Score: j,\n        probability,\n      });\n    }\n  }\n\n  scores.sort((a, b) => b.probability - a.probability); // Sort scores in descending order by probability\n  const top5Scores = scores.slice(0, 5); // Get the top 5 scores\n\n  // for (const score of top5Scores) {\n  //   console.log(\n  //     `Team 1: ${score.team1Score} - Team 2: ${score.team2Score} (${(\n  //       score.probability * 100\n  //     ).toFixed(2)}%)`\n  //   );\n  // }\n  return top5Scores;\n}\n\nasync function normalizeValues(value1, value2, minRange, maxRange) {\n  if (\n    typeof value1 !== \"number\" ||\n    typeof value2 !== \"number\" ||\n    typeof minRange !== \"number\" ||\n    typeof maxRange !== \"number\"\n  ) {\n    throw new Error(\"All arguments must be numbers.\");\n  }\n\n  // Calculate the absolute values of the inputs\n\n  const absValue1 = Math.abs(value1);\n  const absValue2 = Math.abs(value2);\n\n  // Calculate the total sum of the absolute values\n  const totalAbs = absValue1 + absValue2;\n\n  // Calculate the normalized values based on the ratio of absolute values\n  const normalizedAbsValue1 =\n    (absValue1 / totalAbs) * (maxRange - minRange) + minRange;\n  const normalizedAbsValue2 =\n    (absValue2 / totalAbs) * (maxRange - minRange) + minRange;\n\n  // Adjust the signs of the normalized values based on the original values\n  const normalizedValue1 =\n    value1 >= 0 ? normalizedAbsValue1 : -normalizedAbsValue1;\n  const normalizedValue2 =\n    value2 >= 0 ? normalizedAbsValue2 : -normalizedAbsValue2;\n\n  return { normalizedValue1, normalizedValue2 };\n}\n\nexport async function compareTeams(homeForm, awayForm, match) {\n  let homeAttackStrength = homeForm.attackingStrength;\n  let homeDefenceStrength = homeForm.defensiveStrength;\n  let homePossessionStrength = homeForm.possessionStrength;\n  let awayAttackStrength = awayForm.attackingStrength;\n  let awayDefenceStrength = awayForm.defensiveStrength;\n  let awayPossessionStrength = awayForm.possessionStrength;\n\n  let homeXGtoActualDiffStrength = await getXGtoActualDifferentialStrength(\n    parseFloat(homeForm.actualToXGDifference)\n  );\n\n  let awayXGtoActualDiffStrength = await getXGtoActualDifferentialStrength(\n    parseFloat(awayForm.actualToXGDifference)\n  );\n\n  const attackStrengthComparison = await compareStat(\n    homeAttackStrength,\n    awayAttackStrength\n  );\n\n  const defenceStrengthComparison = await compareStat(\n    homeDefenceStrength,\n    awayDefenceStrength\n  );\n\n  const possessiontrengthComparison = await compareStat(\n    homePossessionStrength,\n    awayPossessionStrength\n  );\n\n  const xgActualComparison = await compareStat(\n    homeXGtoActualDiffStrength,\n    awayXGtoActualDiffStrength\n  );\n\n  const XGComparison = await compareStat(\n    homeForm.XGDiffNonAverage,\n    awayForm.XGDiffNonAverage\n  );\n\n  // const XGComparisonLast5 = await compareStat(\n  //   homeForm.XGDiffNonAverageLast5,\n  //   awayForm.XGDiffNonAverageLast5\n  // )\n\n  const homeAwayPointAverageComparison = await compareStat(\n    homeForm.homeOrAwayAverage,\n    awayForm.homeOrAwayAverage\n  );\n\n  const fiveGameComparison = await compareStat(\n    homeForm.last5Points,\n    awayForm.last5Points\n  );\n\n  // const last5GDComparison = await compareStat(\n  //   homeForm.last5GoalDiff,\n  //   awayForm.last5GoalDiff\n  // )\n\n  let oddsComparison;\n  if (homeForm.predictabilityScore > 1 && awayForm.predictabilityScore > 1) {\n    oddsComparison = await compareStat(match.awayOdds, match.homeOdds);\n  } else {\n    oddsComparison = await compareStat(1, 1);\n  }\n\n  const homeAdvantage = await compareStat(\n    parseFloat(homeForm.homeAttackAdvantage) / 2,\n    1\n  );\n\n  // const dangerousAttacksWithConverstionComparison = await compareStat(\n  //   homeForm.AverageDangerousAttacksOverall *\n  //     homeForm.dangerousAttackConversion,\n  //   awayForm.AverageDangerousAttacksOverall * awayForm.dangerousAttackConversion\n  // );\n\n  match.goalDiffHomeOrAwayComparison =\n    homeForm.goalDifferenceHomeOrAway - awayForm.goalDifferenceHomeOrAway;\n\n  match.goalDifferenceComparison =\n    homeForm.goalDifference - awayForm.goalDifference;\n\n  const goalDiffHomeOrAwayComparison = await compareStat(\n    homeForm.goalDifferenceHomeOrAway,\n    awayForm.goalDifferenceHomeOrAway\n  );\n\n  const overallDirectnessComparison = await compareStat(\n    homeForm.directnessOverallStrength,\n    awayForm.directnessOverallStrength\n  );\n\n  const hOrADirectnessComparison = await compareStat(\n    homeForm.directnessHome,\n    awayForm.directnessAway\n  );\n\n  const accuracyComparison = await compareStat(\n    homeForm.accuracyOverallStrength,\n    awayForm.accuracyOverallStrength\n  );\n\n  let calculation =\n  attackStrengthComparison * 3 +\n  defenceStrengthComparison * 3 +\n  possessiontrengthComparison * 1 +\n  // xgToActualDiffComparison * 1 +\n  // xgForStrengthRecentComparison * 1 +\n  // xgAgainstStrengthRecentComparison * 1 +\n  homeAwayPointAverageComparison * 1 +\n  goalDiffHomeOrAwayComparison * 1.5 +\n  xgActualComparison * 1 +\n  // xgForComparison * 1 +\n  // xgAgainstComparison * 1 +\n  XGComparison * 3 +\n  oddsComparison * 2 +\n  // dangerousAttacksWithConverstionComparison * 0.05 +\n  homeAdvantage * 0 +\n  fiveGameComparison * 0 +\n  overallDirectnessComparison * 1.5 +\n  hOrADirectnessComparison * 1 +\n  accuracyComparison * 1.5;\n\n\n    // attackStrengthComparison * 3 +\n    // defenceStrengthComparison * 3 +\n    // possessiontrengthComparison * 1 +\n    // // xgToActualDiffComparison * 1 +\n    // // xgForStrengthRecentComparison * 1 +\n    // // xgAgainstStrengthRecentComparison * 1 +\n    // homeAwayPointAverageComparison * 1 +\n    // goalDiffHomeOrAwayComparison * 2 +\n    // xgActualComparison * 1 +\n    // // xgForComparison * 1 +\n    // // xgAgainstComparison * 1 +\n    // XGComparison * 1 +\n    // // XGComparisonLast5 * 0.5 +\n    // oddsComparison * 1 +\n    // // dangerousAttacksWithConverstionComparison * 0.05 +\n    // homeAdvantage * 0 +\n    // fiveGameComparison * 0 +\n    // overallDirectnessComparison * 1.5 +\n    // hOrADirectnessComparison * 1 +\n    // accuracyComparison * 1.5;\n\n  let homeWinOutcomeProbability =\n    match.homeTeamWinPercentage + match.awayTeamLossPercentage;\n  let awayWinOutcomeProbability =\n    match.homeTeamLossPercentage + match.awayTeamWinPercentage;\n  let drawOutcomeProbability =\n    match.homeTeamDrawPercentage + match.awayTeamDrawPercentage;\n\n  if (\n    drawOutcomeProbability > homeWinOutcomeProbability &&\n    drawOutcomeProbability > awayWinOutcomeProbability\n  ) {\n    switch (true) {\n      case drawOutcomeProbability > 100:\n        calculation = calculation / 3;\n        break;\n      default:\n        calculation = calculation * 1;\n        break;\n    }\n  } else {\n    calculation = calculation * 1;\n  }\n\n  if (calculation > 0) {\n    if (\n      homeForm.lastGame === \"L\" ||\n      homeForm.last2Points < 2 ||\n      awayForm.last2Points >= 5 ||\n      match.XGdifferentialValueRaw < 0\n    ) {\n      calculation = calculation / 4;\n    }\n  } else if (calculation < 0) {\n    if (\n      awayForm.lastGame === \"L\" ||\n      awayForm.last2Points < 2 ||\n      homeForm.last2Points >= 5 ||\n      match.XGdifferentialValueRaw > 0\n    ) {\n      calculation = calculation / 4;\n    }\n  }\n\n  if (homeForm.averageOddsHome !== null || awayForm.averageOddsAway !== null) {\n    if (\n      calculation > 0 &&\n      homeForm.averageOddsHome < match.homeOdds &&\n      awayForm.averageOddsAway > match.awayOdds\n    ) {\n      calculation = calculation / 2;\n    } else if (\n      calculation > 0 &&\n      homeForm.averageOddsHome > match.homeOdds &&\n      awayForm.averageOddsAway < match.awayOdds\n    ) {\n      calculation = calculation * 1.25;\n    } else {\n      calculation = calculation * 1;\n    }\n\n    if (\n      calculation < 0 &&\n      awayForm.averageOddsAway < match.awayOdds &&\n      homeForm.averageOddsHome > match.homeOdds\n    ) {\n      calculation = calculation / 2;\n    } else if (\n      calculation < 0 &&\n      awayForm.averageOddsAway > match.awayOdds &&\n      homeForm.averageOddsHome < match.homeOdds\n    ) {\n      calculation = calculation * 1.25;\n    } else {\n      calculation = calculation * 1;\n    }\n  }\n\n  if (\n    calculation > 0 &&\n    homeForm.improving === true &&\n    awayForm.improving === false\n  ) {\n    console.log(homeForm);\n    calculation = calculation * 1.5;\n  } else if (\n    calculation < 0 &&\n    awayForm.improving === true &&\n    awayForm.improving === false\n  ) {\n    calculation = calculation * 1.5;\n  } else if (\n    calculation > 0 &&\n    homeForm.improving === false &&\n    awayForm.improving === true\n  ) {\n    calculation = calculation / 2;\n  } else if (\n    calculation < 0 &&\n    awayForm.improving === false &&\n    homeForm.improving === true\n  ) {\n    calculation = calculation / 2;\n  }\n\n  // if (\n  //   (calculation < 0 && homeForm.oddsReliabilityWin < 50) ||\n  //   (calculation < 0 && awayForm.oddsReliabilityWinAsUnderdog > 45)\n  // ) {\n  //   calculation = calculation / 2;\n  // } else if (\n  //   (calculation > 0 && awayForm.oddsReliabilityWin < 50) ||\n  //   (calculation > 0 && homeForm.oddsReliabilityWinAsUnderdog > 45)\n  // ) {\n  //   calculation = calculation / 2;\n  // }\n\n  // if (calculation < 0 && homeForm.predictabilityScore < 0.3) {\n  //   calculation = calculation / 2;\n  // } else if (calculation > 0 && awayForm.predictabilityScore < 0.3) {\n  //   calculation = calculation / 2;\n  // }\n\n  return calculation;\n}\n\nexport async function roundCustom(num, form, otherForm) {\n  const DAConversion =\n    form.AverageDangerousAttacksOverall * form.dangerousAttackConversion;\n\n  if (DAConversion >= 200) {\n    return Math.ceil(num);\n  } else {\n    return Math.floor(num);\n  }\n\n  // if (remainder > 0.9 && form.clinicalScore < 0.95) {\n  //   return Math.ceil(num);\n  // } else {\n  // }\n\n  // if (remainder > 0.5) {\n  //   return Math.ceil(num);\n  // } else {\n  //   return Math.floor(num);\n  // }\n}\n\n//Calculates scores based on prior XG figures, weighted by odds\nlet i = 0;\n\nexport async function calculateScore(match, index, divider, calculate) {\n  i++;\n\n  let teams;\n\n  if (\n    calculate === true &&\n    allForm.find(\n      (game) =>\n        game.home.teamName === match.homeTeam &&\n        game.away.teamName === match.awayTeam\n    )\n  ) {\n    teams = [\n      allForm.find((game) => game.home.teamName === match.homeTeam).home,\n      allForm.find((game) => game.away.teamName === match.awayTeam).away,\n    ];\n  } else {\n    calculate = false;\n  }\n\n  let formHome;\n  let formAway;\n\n  if (calculate) {\n    for (let i = 0; i < teams.length; i++) {\n      if (teams[0][index].PlayedHome <= 1 || teams[1][index].PlayedAway <= 1) {\n        index = 2;\n        divider = 10;\n      }\n\n      teams[i][index].lastGame = teams[i][index].LastFiveForm[4];\n      teams[i][index].previousToLastGame = teams[i][index].LastFiveForm[3];\n\n      let last2 = [\n        teams[i][index].lastGame,\n        teams[i][index].previousToLastGame,\n      ];\n\n      teams[i][index].last5Points = getPointsFromLastX(\n        teams[i][index].LastFiveForm\n      );\n\n      teams[i][index].last6Points = getPointsFromLastX(\n        teams[i][index].LastSixForm\n      );\n\n      teams[i][index].last10Points = getPointsFromLastX(\n        teams[i][index].LastTenForm\n      );\n\n      teams[i][index].last2Points = getPointsFromLastX(last2);\n\n      teams[i][index].twoGameAverage = await getPointAverage(\n        teams[i][index].last2Points,\n        2\n      );\n      teams[i][index].threeGameAverage = await getPointAverage(\n        teams[i][index].last3Points,\n        3\n      );\n      teams[i][index].fiveGameAverage = await getPointAverage(\n        teams[i][index].last5Points,\n        5\n      );\n      teams[i][index].sixGameAverage = await getPointAverage(\n        teams[i][index].last6Points,\n        6\n      );\n      teams[i][index].tenGameAverage = await getPointAverage(\n        teams[i][index].last10Points,\n        10\n      );\n\n      if (teams[i][index].formRun) {\n        teams[i][index].lastHomeOrAwayPoints = getPointsFromLastX(\n          teams[i][index].formRun\n        );\n\n        teams[i][index].homeOrAwayAverage = await getPointAverage(\n          teams[i][index].lastHomeOrAwayPoints,\n          teams[i][index].formRun.length\n        );\n      }\n\n      teams[i][0].ScoredAverage = teams[i][0].ScoredOverall / 5;\n      teams[i][1].ScoredAverage = teams[i][1].ScoredOverall / 6;\n      teams[i][2].ScoredAverage = teams[i][2].ScoredOverall / 10;\n\n      teams[i][0].ConcededAverage = teams[i][0].ConcededOverall / 5;\n      teams[i][1].ConcededAverage = teams[i][1].ConcededOverall / 6;\n      teams[i][2].ConcededAverage = teams[i][2].ConcededOverall / 10;\n\n      if (teams[i][1].ScoredAverage === 0) {\n        teams[i][1].ScoredAverage = teams[i][index].ScoredOverall / 10;\n        teams[i][1].ScoredOverall = teams[i][2].ScoredOverall / 2;\n      }\n\n      if (teams[i][1].ConcededAverage === 0) {\n        teams[i][1].ConcededAverage = teams[i][index].ConcededOverall / 10;\n        teams[i][1].ConcededOverall = teams[i][2].ConcededOverall / 2;\n      }\n\n      teams[i][index].ScoredAverageShortTerm = teams[i][0].ScoredOverall / 5;\n      teams[i][index].ConcededAverageShortTerm =\n        teams[i][0].ConcededOverall / 5;\n\n      teams[i][index].longTermAverageGoals = teams[i][2].ScoredOverall / 10;\n      teams[i][index].longTermAverageConceeded =\n        teams[i][2].ConcededOverall / 10;\n\n      match.GoalsInGamesAverageHome =\n        teams[0][0].ScoredAverage + teams[0][0].ConcededAverage;\n\n      match.GoalsInGamesAverageAway =\n        teams[1][0].ScoredAverage + teams[1][0].ConcededAverage;\n\n      let recentGoalDiff =\n        teams[i][index].ScoredAverageShortTerm -\n        teams[i][index].ConcededAverageShortTerm;\n      let distantGoalDiff =\n        teams[i][index].longTermAverageGoals -\n        teams[i][index].longTermAverageConceeded;\n\n      let recentDA = teams[i][0].AverageDangerousAttacksOverall;\n      let distantDA = teams[i][2].AverageDangerousAttacksOverall;\n\n      let recentPosession = teams[i][0].AveragePossessionOverall;\n      let distantPosession = teams[i][2].AveragePossessionOverall;\n\n      let recentCleanSheet = teams[i][0].CleanSheetPercentage;\n      let distantCleanSheet = teams[i][2].CleanSheetPercentage;\n\n      let recentFormArray = [\n        recentGoalDiff,\n        recentDA,\n        recentPosession,\n        recentCleanSheet,\n      ];\n      let distantFormArray = [\n        distantGoalDiff,\n        distantDA,\n        distantPosession,\n        distantCleanSheet,\n      ];\n\n      teams[i][index].formTrendScore = await compareFormTrend(\n        recentFormArray,\n        distantFormArray\n      );\n\n      teams[i][index].expectedGoals = parseFloat(teams[i][index].XG);\n\n      teams[i][index].ScoredAverageShortAndLongTerm =\n        (teams[i][index].ScoredOverall / 10 +\n          teams[i][index].ScoredAverageShortTerm) /\n        2;\n\n      teams[i][index].conceededAverageShortAndLongTerm =\n        (teams[i][index].ConcededOverall / 10 +\n          teams[i][index].ConcededAverageShortTerm) /\n        2;\n\n      teams[i][index].longTermGoalDifference =\n        teams[i][2].ScoredAverage - teams[i][2].ConcededAverage;\n\n      teams[i][index].shortTermGoalDifference =\n        teams[i][0].ScoredAverage - teams[i][0].ConcededAverage;\n\n      teams[i][index].XGdifferential = await diff(\n        teams[i][index].XGOverall,\n        teams[i][index].XGAgainstAvgOverall\n      );\n\n      teams[i][index].XGdifferentialRecent = await diff(\n        teams[i][0].XGOverall,\n        teams[i][0].XGAgainstAvgOverall\n      );\n\n      teams[i][index].actualToXGDifference = await diff(\n        teams[i][index].XGdifferential,\n        teams[i][index].goalDifference\n      );\n\n      teams[i][index].actualToXGDifferenceRecent = await diff(\n        teams[i][index].shortTermGoalDifference,\n        teams[i][index].XGdifferentialRecent\n      );\n    }\n\n    homeOdds = match.homeOdds;\n    awayOdds = match.awayOdds;\n\n    formHome = teams[0][index];\n    formAway = teams[1][index];\n\n    // if (\n    //   (formHome.XGOverall - formHome.XGAgainstAvgOverall) < (formHome.last5XG - formHome.XGAgainstlast5)\n    // ) {\n    //   formHome.improving = true;\n    // } else {\n    //   formHome.improving = false;\n    // }\n\n    // if (\n    //   (formAway.XGOverall - formAway.XGAgainstAvgOverall) < (formAway.last5XG - formAway.XGAgainstlast5)\n    // ) {\n    //   formAway.improving = true;\n    // } else {\n    //   formAway.improving = false;\n    // }\n\n    let homeTenGameAvg = formHome.last10Points / 10;\n    let awayTenGameAvg = formAway.last10Points / 10;\n\n    let homeTwoGameAvg = formHome.last2Points / 2;\n    let awayTwoGameAvg = formAway.last2Points / 2;\n\n    let pointsDiff10 = await getPointsDifferential(\n      homeTenGameAvg,\n      awayTenGameAvg\n    );\n\n    let pointsDiff2 = await getPointsDifferential(\n      homeTwoGameAvg,\n      awayTwoGameAvg\n    );\n\n    let [last10WeightingHome, last10WeightingAway] = await getPointWeighting(\n      pointsDiff10\n    );\n\n    let [last2WeightingHome, last2WeightingAway] = await getPointWeighting(\n      pointsDiff2\n    );\n\n    formHome.dangerousAttackConversion =\n      (formHome.ScoredAverageShortAndLongTerm /\n        formHome.AverageDangerousAttacksOverall) *\n      100;\n    formAway.dangerousAttackConversion =\n      (formAway.ScoredAverageShortAndLongTerm /\n        formAway.AverageDangerousAttacksOverall) *\n      100;\n\n    [formHome.clinicalRating, formHome.clinicalScore] = await getClinicalRating(\n      formHome\n    );\n    [formAway.clinicalRating, formAway.clinicalScore] = await getClinicalRating(\n      formAway\n    );\n\n    let XGdifferential = await diff(\n      formHome.XGdifferential,\n      formAway.XGdifferential\n    );\n\n    formHome.teamName = match.homeTeam;\n    formAway.teamName = match.awayTeam;\n\n    match.XGdifferentialValue = Math.abs(XGdifferential);\n    console.log(match.XGdifferentialValue);\n    match.XGdifferentialValueRaw = parseFloat(XGdifferential);\n    if (\n      allLeagueResultsArrayOfObjects[match.leagueIndex].fixtures.length > 35 &&\n      match.leagueID !== 7956\n    ) {\n      [\n        formHome.predictedGoalsBasedOnHomeAv,\n        formHome.predictedGoalsBasedOnAwayAv,\n        formHome.allTeamGoalsBasedOnAverages,\n        formHome.predictedGoalsConceededBasedOnHomeAv,\n        formHome.predictedGoalsConceededBasedOnAwayAv,\n        formHome.allTeamGoalsConceededBasedOnAverages,\n        formHome.averageOddsHome,\n        formHome.averageOddsAway,\n        formHome.averageScoredLeague,\n        formHome.averageConceededLeague,\n        formHome.last10btts,\n        formHome.last10bttsHome,\n        formHome.last10bttsAway,\n        match.bttsAllPercentageHome,\n        match.bttsPercentageHomeHome,\n        match.bttsPercentageHomeAway,\n        formHome.forAndAgainstRollingAv,\n        formHome.forAndAgainstRollingAvHomeOrAway,\n      ] = await getPastLeagueResults(match.homeTeam, match, \"home\", formHome);\n\n      [\n        formAway.predictedGoalsBasedOnHomeAv,\n        formAway.predictedGoalsBasedOnAwayAv,\n        formAway.allTeamGoalsBasedOnAverages,\n        formAway.predictedGoalsConceededBasedOnHomeAv,\n        formAway.predictedGoalsConceededBasedOnAwayAv,\n        formAway.allTeamGoalsConceededBasedOnAverages,\n        formAway.averageOddsHome,\n        formAway.averageOddsAway,\n        formAway.averageScoredLeague,\n        formAway.averageConceededLeague,\n        formAway.last10btts,\n        formAway.last10bttsHome,\n        formAway.last10bttsAway,\n        match.bttsAllPercentageAway,\n        match.bttsPercentageAwayHome,\n        match.bttsPercentageAwayAway,\n        formAway.forAndAgainstRollingAv,\n        formAway.forAndAgainstRollingAvHomeOrAway,\n      ] = await getPastLeagueResults(match.awayTeam, match, \"away\", formAway);\n    } else {\n      formHome.predictedGoalsBasedOnHomeAv = formHome.ScoredAverage;\n      formHome.predictedGoalsBasedOnAwayAv = formHome.ConcededAverage;\n      formHome.allTeamGoalsBasedOnAverages = formHome.ScoredAverage;\n      formHome.forAndAgainstRollingAv = {\n        goalsFor: formHome.ScoredAverage,\n        goalsAgainst: formHome.ConcededAverage,\n      };\n      formHome.forAndAgainstRollingAvHomeOrAway = {\n        goalsFor: formHome.ScoredAverage,\n        goalsAgainst: formHome.ConcededAverage,\n      };\n      formHome.predictedGoalsConceededBasedOnHomeAv = formHome.ConcededAverage;\n      formHome.predictedGoalsConceededBasedOnAwayAv = formHome.ConcededAverage;\n      formHome.allTeamGoalsConceededBasedOnAverages = formHome.ConcededAverage;\n      formHome.averageOddsHome = null;\n      formHome.averageOddsAway = null;\n      formHome.averageScoredLeague = null;\n      formHome.averageConceededLeague = null;\n      formHome.goalDifference =\n        formHome.ScoredOverall - formHome.ConcededOverall;\n      formHome.goalDifferenceHomeOrAway =\n        formHome.ScoredOverall - formHome.ConcededOverall;\n      formHome.last10btts = null;\n      formHome.last10bttsHome = null;\n      formHome.last10bttsAway = null;\n      formHome.allTeamResults = [];\n      match.bttsAllPercentageHome = \"\";\n      match.bttsPercentageHomeHome = \"\";\n      match.bttsPercentageHomeAway = \"\";\n      formAway.predictedGoalsBasedOnHomeAv = formAway.ScoredAverage;\n      formAway.predictedGoalsBasedOnAwayAv = formAway.ConcededAverage;\n      formAway.allTeamGoalsBasedOnAverages = formAway.ScoredAverage;\n      formAway.forAndAgainstRollingAv = {\n        goalsFor: formAway.ScoredAverage,\n        goalsAgainst: formAway.ConcededAverage,\n      };\n      formAway.forAndAgainstRollingAvHomeOrAway = {\n        goalsFor: formAway.ScoredAverage,\n        goalsAgainst: formAway.ConcededAverage,\n      };\n      formAway.predictedGoalsConceededBasedOnHomeAv = formAway.ConcededAverage;\n      formAway.predictedGoalsConceededBasedOnAwayAv = formAway.ConcededAverage;\n      formAway.allTeamGoalsConceededBasedOnAverages = formAway.ConcededAverage;\n      formAway.averageOddsHome = null;\n      formAway.averageOddsAway = null;\n      formAway.averageScoredLeague = null;\n      formAway.averageConceededLeague = null;\n      formAway.goalDifference =\n        formAway.ScoredOverall - formAway.ConcededOverall;\n      formAway.goalDifferenceHomeOrAway =\n        formAway.ScoredOverall - formAway.ConcededOverall;\n\n      formAway.last10btts = null;\n      formAway.last10bttsHome = null;\n      formAway.last10bttsAway = null;\n      formAway.allTeamResults = [];\n      match.bttsAllPercentageAway = \"\";\n      match.bttsPercentageAwayHome = \"\";\n      match.bttsPercentageAwayAway = \"\";\n    }\n\n    if (\n      typeof formHome.homeTeamHomePositionRaw === \"number\" &&\n      typeof formAway.awayTeamAwayPositionRaw === \"number\"\n    ) {\n      formHome.homePositionHomeOnly = parseFloat(\n        formHome.homeTeamHomePositionRaw\n      );\n      formAway.awayPositionAwayOnly = parseFloat(\n        formAway.awayTeamAwayPositionRaw\n      );\n      formHome.homePosition = parseFloat(formHome.homeRawPosition);\n      formAway.awayPosition = parseFloat(formAway.awayRawPosition);\n    } else {\n      formHome.homePositionHomeOnly = \"N/A\";\n      formAway.awayPositionAwayOnly = \"N/A\";\n      formHome.homePosition = \"N/A\";\n      formAway.awayPosition = \"N/A\";\n    }\n\n    if (formHome.last10Goals && formAway.last10Goals !== 0) {\n      if (\n        formHome.last5Goals - formHome.last5GoalsConceeded >\n        formHome.last10Goals - formHome.last10GoalsConceeded\n      ) {\n        formHome.improving = true;\n      } else {\n        formHome.improving = false;\n      }\n\n      if (\n        formAway.last5Goals - formAway.last5GoalsConceeded >\n        formAway.last10Goals - formAway.last10GoalsConceeded\n      ) {\n        formAway.improving = true;\n      } else {\n        formAway.improving = false;\n      }\n    }\n\n    formHome.AttackingPotency = (formHome.XG / formHome.AttacksHome) * 100;\n    formAway.AttackingPotency = (formAway.XG / formAway.AttacksAverage) * 100;\n\n    let teamComparisonScore;\n\n    const attackingMetricsHome = {\n      \"Average Dangerous Attacks\": formHome.AverageDangerousAttacksOverall,\n      \"Average Shots\": formHome.AverageShots,\n      \"Average Shots On Target\": formHome.AverageShotsOnTargetOverall,\n      \"Average Expected Goals\": formHome.XGOverall,\n      \"Recent XG\": formHome.XGlast5 ? formHome.XGlast5 : formHome.XGOverall,\n      \"Average Goals\":\n        formHome.averageScoredLeague !== undefined &&\n        formHome.averageScoredLeague !== null\n          ? formHome.averageScoredLeague.toFixed(2)\n          : (formHome.ScoredOverall / 10).toFixed(2),\n    };\n    const attackingMetricsAway = {\n      \"Average Dangerous Attacks\": formAway.AverageDangerousAttacksOverall,\n      \"Average Shots\": formAway.AverageShots,\n      \"Average Shots On Target\": formAway.AverageShotsOnTargetOverall,\n      \"Average Expected Goals\": formAway.XGOverall,\n      \"Recent XG\": formAway.XGlast5 ? formAway.XGlast5 : formAway.XGOverall,\n      \"Average Goals\":\n        formAway.averageScoredLeague !== undefined &&\n        formAway.averageScoredLeague !== null\n          ? formAway.averageScoredLeague.toFixed(2)\n          : (formAway.ScoredOverall / 10).toFixed(2),\n    };\n\n    const defensiveMetricsHome = {\n      \"Clean Sheet Percentage\": 100 - formHome.CleanSheetPercentage,\n      \"Average XG Against\": formHome.XGAgainstAvgOverall,\n      \"Recent XG Against\": formHome.XGAgainstlast5\n        ? formHome.XGAgainstlast5\n        : formHome.XGAgainstAvgOverall,\n      \"Average Goals Against\":\n        formHome.averageConceededLeague !== null\n          ? formHome.averageConceededLeague.toFixed(2)\n          : formHome.ConcededAverage.toFixed(2),\n    };\n\n    const defensiveMetricsAway = {\n      \"Clean Sheet Percentage\": 100 - formAway.CleanSheetPercentage,\n      \"Average XG Against\": formAway.XGAgainstAvgOverall,\n      \"Recent XG Against\": formAway.XGAgainstlast5\n        ? formAway.XGAgainstlast5\n        : formAway.XGAgainstAvgOverall,\n      \"Average Goals Against\":\n        formAway.averageConceededLeague !== null\n          ? formAway.averageConceededLeague.toFixed(2)\n          : formAway.ConcededAverage.toFixed(2),\n    };\n\n    formHome.attackingMetrics = attackingMetricsHome;\n    formHome.defensiveMetrics = defensiveMetricsHome;\n    formAway.attackingMetrics = attackingMetricsAway;\n    formAway.defensiveMetrics = defensiveMetricsAway;\n\n    formHome.attackingStrength = await calculateAttackingStrength(\n      attackingMetricsHome\n    );\n    formAway.attackingStrength = await calculateAttackingStrength(\n      attackingMetricsAway\n    );\n    formHome.defensiveStrength = await calculateDefensiveStrength(\n      defensiveMetricsHome\n    );\n    formAway.defensiveStrength = await calculateDefensiveStrength(\n      defensiveMetricsAway\n    );\n\n    formHome.possessionStrength = await calculateMetricStrength(\n      \"averagePossession\",\n      formHome.AveragePossessionOverall\n    );\n\n    formHome.directnessOverall =\n      (formHome.AverageShots / formHome.AveragePossessionOverall) * 10;\n    formAway.directnessOverall =\n      (formAway.AverageShots / formAway.AveragePossessionOverall) * 10;\n\n    formHome.directnessOverallStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formHome.directnessOverall\n    );\n    formAway.directnessOverallStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formAway.directnessOverall\n    );\n\n    formHome.directnessHome =\n      (formHome.AverageShotsHomeOrAway / formHome.AveragePossession) * 10;\n    formAway.directnessAway =\n      (formAway.AverageShotsHomeOrAway / formAway.AveragePossession) * 10;\n\n    formHome.shootingAccuracy =\n      (formHome.AverageShotsOnTargetOverall / formHome.AverageShots) *\n      formHome.AverageShots;\n    formAway.shootingAccuracy =\n      (formAway.AverageShotsOnTargetOverall / formAway.AverageShots) *\n      formAway.AverageShots;\n\n    formHome.accuracyOverallStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formHome.shootingAccuracy\n    );\n    formAway.accuracyOverallStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formAway.shootingAccuracy\n    );\n\n    formHome.xgForStrength = await calculateMetricStrength(\n      \"xgFor\",\n      formHome.XGOverall\n    );\n    formHome.xgAgainstStrength = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formHome.XGAgainstAvgOverall\n    );\n\n    formAway.possessionStrength = await calculateMetricStrength(\n      \"averagePossession\",\n      formAway.AveragePossessionOverall\n    );\n    formAway.xgForStrength = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.XGOverall\n    );\n    formAway.xgAgainstStrength = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formAway.XGAgainstAvgOverall\n    );\n\n    teamComparisonScore = await compareTeams(formHome, formAway, match);\n    teamComparisonScore = teamComparisonScore * 0.1;\n\n    if (teamComparisonScore > 0.5) {\n      teamComparisonScore = 0.5;\n    } else if (teamComparisonScore < -0.5) {\n      teamComparisonScore = -0.5;\n    }\n\n    console.log(teamComparisonScore)\n\n    if (teamComparisonScore < 0) {\n      formHome.teamStrengthWeighting = 1 + teamComparisonScore / 1;\n      formAway.teamStrengthWeighting = 1 - teamComparisonScore / 1;\n    } else if (teamComparisonScore >= 0) {\n      formHome.teamStrengthWeighting = 1 + teamComparisonScore / 1;\n      formAway.teamStrengthWeighting = 1 - teamComparisonScore / 1;\n    }\n\n    // teamComparisonScore = 0;\n\n    match.teamComparisonScore = teamComparisonScore.toFixed(2);\n    // match.goalWeighting = 1 + parseFloat(match.teamComparisonScore)\n\n    let team1Metrics = {\n      weighting: formHome.teamStrengthWeighting,\n      // Add other relevant metrics here\n    };\n\n    let team2Metrics = {\n      weighting: formAway.teamStrengthWeighting,\n      // Add other relevant metrics here\n    };\n\n    // pass arrays of league goals and conceeded\n    let scorePredictions;\n    if (\n      formHome.allConceededArrayHome !== undefined &&\n      formAway.allConceededArrayAway !== undefined\n    ) {\n      scorePredictions = await predictScore(\n        formHome.allGoalsArrayHome,\n        formHome.allConceededArrayHome,\n        formAway.allGoalsArrayAway,\n        formAway.allConceededArrayAway,\n        team1Metrics,\n        team2Metrics,\n        match.game\n      );\n    }\n\n    let finalHomeGoals;\n    let finalAwayGoals;\n\n    const homeGoalDiff =\n      formHome.ScoredAverageShortAndLongTerm -\n      formHome.conceededAverageShortAndLongTerm;\n    const awayGoalDiff =\n      formAway.ScoredAverageShortAndLongTerm -\n      formAway.conceededAverageShortAndLongTerm;\n\n    formHome.goalsDifferential =\n      parseFloat(await diff(homeGoalDiff, awayGoalDiff)) / 1;\n    formAway.goalsDifferential =\n      parseFloat(await diff(awayGoalDiff, homeGoalDiff)) / 1;\n\n    formHome.rollingAverageGoalsDifferential = parseFloat(\n      formHome.allTeamGoalsBasedOnAverages -\n        formHome.allTeamGoalsConceededBasedOnAverages\n    );\n    formAway.rollingAverageGoalsDifferential = parseFloat(\n      formAway.allTeamGoalsBasedOnAverages -\n        formAway.allTeamGoalsConceededBasedOnAverages\n    );\n\n    let factorOneHome;\n    let factorOneAway;\n\n    factorOneHome =\n      // homeLeagueOrAllFormAverageGoals * 1 +\n      // formHome.last5Goals * 0.5 +\n      // formAway.last5GoalsConceeded * 0.5 +\n      (formHome.forAndAgainstRollingAvHomeOrAway.goalsFor * 2 +\n        formAway.forAndAgainstRollingAvHomeOrAway.goalsAgainst * 2 +\n        formHome.forAndAgainstRollingAv.goalsFor * 1 +\n        formAway.forAndAgainstRollingAv.goalsAgainst * 1 +\n        formHome.allTeamGoalsBasedOnAverages * 1 +\n        formAway.allTeamGoalsConceededBasedOnAverages * 1 +\n        // formHome.XGOverall * 0.5 +\n        // formAway.XGAgainstAvgOverall * 0.5 +\n        last10WeightingHome * 1 +\n        last2WeightingHome * 1) /\n      8;\n\n    factorOneAway =\n      // awayLeagueOrAllFormAverageGoals * 1 +\n      // formAway.last5Goals * 0.5 +\n      // formHome.last5GoalsConceeded * 0.5 +\n      (formAway.forAndAgainstRollingAvHomeOrAway.goalsFor * 2 +\n        formHome.forAndAgainstRollingAvHomeOrAway.goalsAgainst * 2 +\n        formAway.forAndAgainstRollingAv.goalsFor * 1 +\n        formHome.forAndAgainstRollingAv.goalsAgainst * 1 +\n        formAway.allTeamGoalsBasedOnAverages * 1 +\n        formHome.allTeamGoalsConceededBasedOnAverages * 1 +\n        // formAway.XGOverall * 0.5 +\n        // formHome.XGAgainstAvgOverall * 0.5 +\n        last10WeightingAway * 1 +\n        last2WeightingAway * 1) /\n      8;\n\n    let factorTwoHome;\n    let factorTwoAway;\n\n    if (\n      scorePredictions !== undefined &&\n      scorePredictions[0].probability !== 1\n    ) {\n      factorTwoHome = scorePredictions[0].team1Score;\n      factorTwoAway = scorePredictions[0].team2Score;\n    } else {\n      factorTwoHome = factorOneHome;\n      factorTwoAway = factorOneAway;\n    }\n\n    let homeComparisonWeighting;\n    let awayComparisonWeighting;\n    match.scoreDiff = await diff(factorOneHome, factorOneAway);\n\n    if (teamComparisonScore > 0) {\n      homeComparisonWeighting = 1 + Math.abs(teamComparisonScore);\n      awayComparisonWeighting = 1 + -Math.abs(teamComparisonScore);\n    } else if (teamComparisonScore < 0) {\n      homeComparisonWeighting = 1 + -Math.abs(teamComparisonScore);\n      awayComparisonWeighting = 1 + Math.abs(teamComparisonScore);\n    } else {\n      homeComparisonWeighting = 1;\n      awayComparisonWeighting = 1;\n    }\n\n    console.log(formHome.teamName);\n    console.log(formHome);\n    console.log(formHome.predictabilityScore);\n\n    let experimentalHomeGoals =\n      (((factorOneHome * 1.25 + factorTwoHome * 1) * homeComparisonWeighting) /\n        2.25) *\n      1;\n    // (formHome.forAndAgainstRollingAvHomeOrAway.goalsFor + formAway.forAndAgainstRollingAvHomeOrAway.goalsAgainst) / 2\n\n    let experimentalAwayGoals =\n      (((factorOneAway * 1.25 + factorTwoAway * 1) * awayComparisonWeighting) /\n        2.25) *\n      1;\n    // (formAway.forAndAgainstRollingAvHomeOrAway.goalsFor + formHome.forAndAgainstRollingAvHomeOrAway.goalsAgainst) / 2\n\n    let rawFinalHomeGoals = experimentalHomeGoals;\n    let rawFinalAwayGoals = experimentalAwayGoals;\n\n    match.rawFinalHomeGoals = rawFinalHomeGoals;\n    match.rawFinalAwayGoals = rawFinalAwayGoals;\n\n    // if (\n    //   formHome.CleanSheetPercentage > 50 &&\n    //   formAway.CleanSheetPercentage > 50\n    // ) {\n    //   rawFinalHomeGoals = rawFinalHomeGoals - 0.5;\n    //   rawFinalAwayGoals = rawFinalAwayGoals - 0.5;\n    // }\n\n    if (\n      formHome.CleanSheetPercentage < 20 &&\n      formAway.CleanSheetPercentage < 20\n    ) {\n      finalHomeGoals = Math.ceil(rawFinalHomeGoals);\n      finalAwayGoals = Math.ceil(rawFinalAwayGoals);\n    } else if (\n      formHome.CleanSheetPercentage < 30 &&\n      formAway.CleanSheetPercentage < 30 &&\n      rawFinalHomeGoals < 1 &&\n      rawFinalAwayGoals < 1\n    ) {\n      finalHomeGoals = Math.ceil(rawFinalHomeGoals);\n      finalAwayGoals = Math.ceil(rawFinalAwayGoals);\n    } else {\n      finalHomeGoals = Math.floor(rawFinalHomeGoals);\n      finalAwayGoals = Math.floor(rawFinalAwayGoals);\n    }\n\n    if (finalHomeGoals > formHome.averageScoredLeague + 2) {\n      finalHomeGoals = Math.round(\n        (finalHomeGoals + formHome.averageScoredLeague) / 2\n      );\n    }\n\n    if (finalAwayGoals > formAway.averageScoredLeague + 2) {\n      finalAwayGoals = Math.round(\n        (finalAwayGoals + formAway.averageScoredLeague) / 2\n      );\n    }\n\n    if (finalAwayGoals < 0) {\n      let difference = Math.abs(\n        parseFloat((await diff(0, finalAwayGoals)) / 2)\n      );\n      rawFinalHomeGoals = rawFinalHomeGoals + difference;\n      finalAwayGoals = 0;\n    }\n\n    if (finalHomeGoals < 0) {\n      let difference = Math.abs(\n        parseFloat((await diff(0, finalHomeGoals)) / 2)\n      );\n      rawFinalAwayGoals = rawFinalAwayGoals + difference;\n      finalHomeGoals = 0;\n    }\n\n    console.log(match.omit);\n\n    if (match.status !== \"suspended\") {\n      if (finalHomeGoals > finalAwayGoals) {\n        match.prediction = \"homeWin\";\n        homePredictions = homePredictions + 1;\n        if (\n          formHome.lastGame === \"L\" ||\n          formHome.last2Points < 3 ||\n          formAway.last2Points > 4 ||\n          formHome.oddsReliabilityWin < 50\n        ) {\n          match.includeInMultis = false;\n        } else {\n          match.includeInMultis = true;\n        }\n      } else if (finalAwayGoals > finalHomeGoals) {\n        match.prediction = \"awayWin\";\n        awayPredictions = awayPredictions + 1;\n        if (\n          formAway.lastGame === \"L\" ||\n          formAway.last2Points < 3 ||\n          formHome.last2Points > 4 ||\n          formAway.oddsReliabilityWin < 50\n        ) {\n          match.includeInMultis = false;\n        } else {\n          match.includeInMultis = true;\n        }\n      } else if (finalHomeGoals === finalAwayGoals) {\n        match.prediction = \"draw\";\n        drawPredictions = drawPredictions + 1;\n      }\n    }\n\n    console.log(`drawPredictions: ${drawPredictions}`);\n\n    if (\n      (XGdifferential > 1 && match.prediction === \"homeWin\") ||\n      (XGdifferential < -1.6 && match.prediction === \"awayWin\")\n    ) {\n      match.XGdifferential = true;\n    } else {\n      match.XGdifferential = false;\n    }\n\n    if (\n      (pointsDiff10 > 1.2 && match.prediction === \"homeWin\") ||\n      (pointsDiff10 < -1.2 && match.prediction === \"awayWin\")\n    ) {\n      match.pointsDifferential = true;\n      match.pointsDifferentialValue = Math.abs(pointsDiff10);\n      match.pointsDifferentialValueRaw = parseFloat(pointsDiff10);\n    } else {\n      match.pointsDiff10 = false;\n      match.pointsDifferentialValue = Math.abs(pointsDiff10);\n      match.pointsDifferentialValueRaw = parseFloat(pointsDiff10);\n    }\n\n    let rollingGoalDiffDifferential = await diff(\n      formHome.rollingAverageGoalsDifferential,\n      formAway.rollingAverageGoalsDifferential\n    );\n\n    if (\n      (rollingGoalDiffDifferential > 1.5 && match.prediction === \"homeWin\") ||\n      (rollingGoalDiffDifferential < -1.5 && match.prediction === \"awayWin\")\n    ) {\n      match.rollingGoalDiff = true;\n      match.rollingGoalDiffValue = rollingGoalDiffDifferential;\n    } else {\n      match.rollingGoalDiff = false;\n      match.rollingGoalDiffValue = rollingGoalDiffDifferential;\n    }\n\n    let dangerousAttacksDifferential = await diff(\n      formHome.AverageDangerousAttacksOverall,\n      formAway.AverageDangerousAttacksOverall\n    );\n\n    if (\n      (dangerousAttacksDifferential > 20 && match.prediction === \"homeWin\") ||\n      (dangerousAttacksDifferential < -20 && match.prediction === \"awayWin\")\n    ) {\n      match.dangerousAttacksDiff = true;\n      match.dangerousAttacksDiffValue = dangerousAttacksDifferential;\n    } else {\n      match.dangerousAttacksDiff = false;\n      match.dangerousAttacksDiffValue = dangerousAttacksDifferential;\n    }\n\n    switch (true) {\n      case match.status !== \"complete\":\n        break;\n      case match.homeGoals > match.awayGoals:\n        match.winner = match.homeTeam;\n        match.outcome = \"homeWin\";\n        homeOutcomes = homeOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formHome.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formAway.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formHome.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formAway.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formHome.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formAway.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formHome.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formAway.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += homeOdds;\n        sumOddsLoss = sumOddsLoss += awayOdds;\n        sumXGForWin = sumXGForWin += formHome.XGOverall;\n        sumXGForLoss = sumXGForLoss += formAway.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formHome.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formAway.XGAgainstAvgOverall;\n        break;\n      case match.homeGoals === match.awayGoals:\n        match.winner = \"draw\";\n        match.outcome = \"draw\";\n        allOutcomes = allOutcomes + 1;\n        allDrawOutcomes = allDrawOutcomes + 1;\n        break;\n      case match.homeGoals < match.awayGoals:\n        match.winner = match.awayTeam;\n        match.outcome = \"awayWin\";\n        allOutcomes = allOutcomes + 1;\n        awayOutcomes = awayOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formAway.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formHome.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formAway.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formHome.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formAway.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formHome.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formAway.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formHome.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += awayOdds;\n        sumOddsLoss = sumOddsLoss += homeOdds;\n        sumXGForWin = sumXGForWin += formAway.XGOverall;\n        sumXGForLoss = sumXGForLoss += formHome.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formAway.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formHome.XGAgainstAvgOverall;\n        break;\n      default:\n        break;\n    }\n\n    console.log(`allDrawOutcomes: ${allDrawOutcomes}`);\n\n    if (match.status === \"complete\") {\n      if (match.prediction === match.outcome) {\n        match.predictionOutcome = \"Won\";\n        winAmount = winAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      } else if (match.prediction !== match.outcome) {\n        match.predictionOutcome = \"Lost\";\n        lossAmount = lossAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      }\n    }\n\n    if (match.status === \"complete\") {\n      if (match.homeGoals + match.awayGoals > 2) {\n        match.over25PredictionOutcome = \"Won\";\n      } else {\n        match.over25PredictionOutcome = \"Lost\";\n      }\n    }\n\n    if (\n      match.status === \"complete\" &&\n      match.homeGoals > 0 &&\n      match.awayGoals > 0\n    ) {\n      match.bttsOutcome = \"bttsWon\";\n    } else {\n      match.bttsOutcome = \"bttsLost\";\n    }\n\n    match.formHome = formHome;\n    match.formAway = formAway;\n\n    // formObjectHome = formHome;\n    // formObjectAway = formAway;\n\n    // console.log(formObjectHome)\n    // console.log(formObjectAway)\n\n    let total = parseInt(finalHomeGoals + finalAwayGoals);\n    totalGoals = totalGoals + total;\n\n    let total2 = parseInt(match.homeGoals + match.awayGoals);\n    totalGoals2 = totalGoals2 + total2;\n\n    numberOfGames = numberOfGames + 1;\n\n    if (finalHomeGoals < 0) {\n      finalHomeGoals = 0;\n    }\n\n    if (finalAwayGoals < 0) {\n      finalAwayGoals = 0;\n    }\n\n    if (match.status === \"suspended\") {\n      finalHomeGoals = \"P\";\n      finalAwayGoals = \"P\";\n    }\n\n    if (\n      finalHomeGoals > finalAwayGoals &&\n      (match.homeOdds < rangeValue[0] || match.homeOdds > rangeValue[1])\n    ) {\n      match.omit = true;\n    } else if (\n      finalAwayGoals > finalHomeGoals &&\n      (match.awayOdds < rangeValue[0] || match.awayOdds > rangeValue[1])\n    ) {\n      match.omit = true;\n    } else if (\n      finalHomeGoals === finalAwayGoals &&\n      (match.drawOdds < rangeValue[0] || match.drawOdds > rangeValue[1])\n    ) {\n      match.omit = true;\n    }\n\n    const last10PointDiffHomePerspective = Math.abs(\n      formHome.last10Points - formAway.last10Points\n    );\n\n    const last10PointDiffAwayPerspective = Math.abs(\n      formAway.last10Points - formHome.last10Points\n    );\n\n    const XGDiffBetweenTeamsHomePerspective = Math.abs(\n      formHome.XGDiffNonAverage - formAway.XGDiffNonAverage\n    );\n    const XGDiffBetweenTeamsAwayPerspective = Math.abs(\n      formAway.XGDiffNonAverage - formHome.XGDiffNonAverage\n    );\n\n    console.log(XGDiffBetweenTeamsHomePerspective);\n\n    switch (true) {\n      case finalHomeGoals > finalAwayGoals:\n        if (minimumXG !== 0 && XGDiffBetweenTeamsHomePerspective < minimumXG) {\n          match.omit = true;\n        }\n        if (minimumLast10 !== 0 && last10PointDiffHomePerspective < minimumLast10) {\n          match.omit = true;\n        }\n        if (minimumGDHorA !== 0 && match.goalDiffHomeOrAwayComparison < minimumGDHorA) {\n          match.omit = true;\n        }\n        if (minimumGD !== 0 && match.goalDifferenceComparison < minimumGD) {\n          match.omit = true;\n        }\n        break;\n      case finalHomeGoals < finalAwayGoals:\n        if (minimumXG !== 0 && XGDiffBetweenTeamsAwayPerspective < minimumXG) {\n          match.omit = true;\n        }\n        if (minimumLast10 !== 0 && last10PointDiffAwayPerspective < minimumLast10) {\n          match.omit = true;\n        }\n        if (minimumGDHorA !== 0 && Math.abs(match.goalDiffHomeOrAwayComparison) < minimumGDHorA) {\n          match.omit = true;\n        }\n        if (minimumGD !== 0 && Math.abs(match.goalDifferenceComparison) < minimumGD) {\n          match.omit = true;\n        }\n        break;\n      case finalHomeGoals === finalAwayGoals:\n        if (minimumXG !== 0 && Math.abs(XGDiffBetweenTeamsHomePerspective) < minimumXG) {\n          match.omit = true;\n        }\n        if (minimumLast10 !== 0 && last10PointDiffHomePerspective < minimumLast10) {\n          match.omit = true;\n        }\n        if (minimumGDHorA !== 0 && Math.abs(match.goalDiffHomeOrAwayComparison) < minimumGDHorA) {\n          match.omit = true;\n        }\n        if (minimumGD !== 0 && Math.abs(match.goalDifferenceComparison) < minimumGD) {\n          match.omit = true;\n        }\n        break;\n      default:\n        break;\n    }\n\n    if (\n      match.game_week < 0\n      // match.omit === true\n      // match.game_week < 3 &&\n    ) {\n      finalHomeGoals = \"-\";\n      finalAwayGoals = \"-\";\n      match.status = \"notEnoughData\";\n    }\n    console.log(match.game);\n    console.log(match.omit);\n    console.log(finalHomeGoals);\n    console.log(finalAwayGoals);\n\n    return [\n      finalHomeGoals,\n      finalAwayGoals,\n      rawFinalHomeGoals,\n      rawFinalAwayGoals,\n    ];\n  } else {\n    finalHomeGoals = \"\";\n    finalAwayGoals = \"\";\n    rawFinalHomeGoals = \"\";\n    rawFinalAwayGoals = \"\";\n    match.status = \"notEnoughData\";\n    match.profit = 0;\n  }\n\n  return [finalHomeGoals, finalAwayGoals, rawFinalHomeGoals, rawFinalAwayGoals];\n}\n\nasync function getSuccessMeasure(fixtures) {\n  let sumProfit = 0;\n  let investment = 0;\n  let exactScores = 0;\n  let successCount = 0;\n  let profit = 0;\n  let netProfit = 0;\n\n  // await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}tips/${dateStamp}`, {\n  //   method: \"PUT\",\n  //   headers: {\n  //     Accept: \"application/json\",\n  //     \"Content-Type\": \"application/json\",\n  //   },\n  //   body: JSON.stringify(matches)\n  // })\n\n  for (let i = 0; i < fixtures.length; i++) {\n    if (\n      fixtures[i].status === \"complete\" &&\n      fixtures[i].hasOwnProperty(\"prediction\") &&\n      fixtures[i].omit !== true\n    ) {\n      sumProfit = sumProfit + fixtures[i].profit;\n      investment = investment + 1;\n      netProfit = (sumProfit - investment).toFixed(2);\n      profit = parseFloat(netProfit);\n      if (fixtures[i].exactScore === true) {\n        exactScores = exactScores + 1;\n      }\n      if (fixtures[i].predictionOutcome === \"Won\") {\n        successCount = successCount + 1;\n      }\n    }\n  }\n\n  totalInvestment = totalInvestment + investment;\n  totalProfit = totalProfit + profit;\n  let ROI = (profit / investment) * 100;\n  totalROI = (totalProfit / totalInvestment) * 100;\n  console.log(`Total Profit : ${totalProfit}`);\n  console.log(`Total Investment : ${totalInvestment}`);\n  console.log(`Total ROI : ${totalROI}`);\n  var operand = ROI >= 0 ? \"+\" : \"\";\n  var operandTwo = totalROI >= 0 ? \"+\" : \"\";\n  let exactScoreHitRate = ((exactScores / investment) * 100).toFixed(1);\n  let successRate = ((successCount / investment) * 100).toFixed(1);\n\n  if (investment > 0) {\n    ReactDOM.render(\n      <Fragment>\n        <Div\n          className={\"SuccessMeasure\"}\n          text={`ROI for \n            all ${investment} W/D/W \n            outcomes: ${operand} ${ROI.toFixed(2)}%`}\n        />\n        <p>{`Correct W/D/W predictions: ${successCount} (${successRate}%)`}</p>\n        <p>{`Exact scores predicted: ${exactScores} (${exactScoreHitRate}%)`}</p>\n        <Div\n          className={\"SuccessMeasure\"}\n          text={`Cumalative ROI for \n            all ${totalInvestment} match outcomes: ${operandTwo} ${totalROI.toFixed(\n            2\n          )}%`}\n        />\n      </Fragment>,\n      document.getElementById(\"successMeasure2\")\n    );\n  } else {\n    return;\n  }\n}\n\nexport var tips = [];\nexport var allTips = [];\nlet allTipsSorted = [];\nvar newArray = [];\nvar bestBets = [];\nvar price;\nvar Over25Tips = [];\nvar XGDiffTips = [];\nvar rollingDiffTips = [];\nvar dangerousAttacksDiffTips = [];\nvar pointsDiffTips = [];\nvar combinations;\nvar exoticArray = [];\nvar gamesInExotic;\nvar minimumExotic;\nvar exoticStake;\nvar exoticString;\nvar bttsArray = [];\nvar accumulatedOdds = 1;\nlet predictions = [];\n\nexport async function getNewTips(array) {\n  // allTips = [];\n  newArray = [];\n  accumulatedOdds = 1;\n\n  if (array.length > 1 && incrementValue > 0) {\n    array.forEach((tip) => {\n      if (\n        array.indexOf(tip) < incrementValue\n        // tip.goalDifferential >= incrementValue && tip.comparisonScore > 0\n      ) {\n        newArray.push(tip);\n        accumulatedOdds = parseFloat(accumulatedOdds) * parseFloat(tip.rawOdds);\n      }\n    });\n  }\n  await renderTips(newArray);\n}\n\nexport async function getScorePrediction(day, mocked) {\n  let mock = mocked;\n  clicked = true;\n  tips = [];\n  bestBets = [];\n  // price = 0\n  bttsArray = [];\n  Over25Tips = [];\n  XGDiffTips = [];\n  pointsDiffTips = [];\n  rollingDiffTips = [];\n  dangerousAttacksDiffTips = [];\n  allTips = [];\n\n  let index = 2;\n  let divider = 10;\n\n  ReactDOM.render(<div></div>, document.getElementById(\"GeneratePredictions\"));\n\n  await Promise.all(\n    matches.map(async (match) => {\n      // if there are no stored predictions, calculate them based on live data\n      if (match) {\n        switch (true) {\n          case match.status === \"canceled\":\n            match.goalsA = \"P\";\n            match.goalsB = \"P\";\n            await calculateScore(match, index, divider, false);\n            break;\n          case match.leagueID === 6935 ||\n            match.leagueID === 7061 ||\n            (match.game_week < 3 && match.game_week !== 0):\n            match.goalsA = \"x\";\n            match.goalsB = \"x\";\n            await calculateScore(match, index, divider, false);\n            break;\n          default:\n            [\n              match.goalsA,\n              match.goalsB,\n              match.unroundedGoalsA,\n              match.unroundedGoalsB,\n            ] = await calculateScore(match, index, divider, true);\n            break;\n        }\n      } else {\n        [\n          match.goalsA,\n          match.goalsB,\n          match.unroundedGoalsA,\n          match.unroundedGoalsB,\n        ] = await calculateScore(match, index, divider, true);\n      }\n\n      await getBTTSPotential(\n        match,\n        match.goalsA,\n        match.goalsB,\n        match.unroundedGoalsA,\n        match.unroundedGoalsB\n      );\n\n      let predictionObject;\n      let Over25PredictionObject;\n      let XGPredictionObject;\n      let pointsDiffObject;\n      let rollingDiffObject;\n      let dangerousAttacksDiffObject;\n\n      if (match.status === \"complete\" && match.prediction) {\n        match.outcomeSymbol =\n          match.predictionOutcome === \"Won\" ? \"\\u2714\" : \"\\u2718\";\n        match.over25PredictionOutcomeSymbol =\n          match.over25PredictionOutcome === \"Won\" ? \"\\u2714\" : \"\\u2718\";\n        match.bttsOutcomeSymbol =\n          match.bttsOutcome === \"bttsWon\" ? \"\\u2714\" : \"\\u2718\";\n      } else {\n        match.outcomeSymbol = \"\";\n        match.over25PredictionOutcomeSymbol = \"\";\n        match.bttsOutcomeSymbol = \"\";\n      }\n\n      if (\n        match.unroundedGoalsA - match.unroundedGoalsB > 0.65 &&\n        match.homeOdds !== 0 &&\n        match.fractionHome !== \"N/A\" &&\n        match.includeInMultis !== false &&\n        match.omit !== true\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.status !== \"notEnoughData\" &&\n          match.homeOdds < 3\n        ) {\n          predictionObject = {\n            team: `${match.homeTeam} to win`,\n            game:\n              match.status === \"complete\"\n                ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n                : match.game,\n            odds: match.fractionHome,\n            rawOdds: match.homeOdds,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            outcome: match.predictionOutcome,\n            outcomeSymbol: match.outcomeSymbol,\n            goalDifferential: parseFloat(\n              await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n            ),\n            experimentalCalc: (\n              (match.unroundedGoalsA - match.unroundedGoalsB) *\n              Math.abs(match.teamComparisonScore)\n            ).toFixed(2),\n            XGdifferentialValue: parseFloat(match.XGdifferentialValue),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formHome.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n\n            if (\n              match.unroundedGoalsA - match.unroundedGoalsB >\n              incrementValue\n            ) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      } else if (\n        match.unroundedGoalsB - match.unroundedGoalsA > 1.75 &&\n        match.awayOdds !== 0 &&\n        match.fractionAway !== \"N/A\" &&\n        match.includeInMultis !== false &&\n        match.omit !== true\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.status !== \"notEnoughData\" &&\n          match.awayOdds < 3.5\n        ) {\n          predictionObject = {\n            team: `${match.awayTeam} to win`,\n            game:\n              match.status === \"complete\"\n                ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n                : match.game,\n            rawOdds: match.awayOdds,\n            odds: match.fractionAway,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            outcome: match.predictionOutcome,\n            outcomeSymbol: match.outcomeSymbol,\n            goalDifferential:\n              parseFloat(\n                await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n              ) - 1,\n            experimentalCalc: (\n              (match.unroundedGoalsB - match.unroundedGoalsA) *\n              Math.abs(match.teamComparisonScore)\n            ).toFixed(2),\n            XGdifferentialValue: parseFloat(match.XGdifferentialValue),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formAway.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n            if (match.unroundedGoalsB - match.unroundedGoalsA > 2) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      }\n\n      if (\n        match.btts === true &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\" &&\n        match.status !== \"notEnoughData\"\n      ) {\n        bttsArray.push(match);\n      }\n      if (\n        match.unroundedGoalsA + match.unroundedGoalsB > 2.7 &&\n        match.goalsA + match.goalsB > 2 &&\n        match.GoalsInGamesAverageHome > 2.5 &&\n        match.GoalsInGamesAverageAway > 2.5\n      ) {\n        Over25PredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: match.homeTeam,\n          decimalOdds: match.homeDoubleChance,\n          rawOdds: match.over25Odds,\n          odds: match.over25Odds,\n          comparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.over25PredictionOutcomeSymbol,\n          doubleChanceOutcome: match.over25PredictionOutcome,\n          goalTotalUnrounded: match.unroundedGoalsA + match.unroundedGoalsB,\n        };\n        Over25Tips.push(Over25PredictionObject);\n      }\n\n      if (\n        match.XGdifferential === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        XGPredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          XGdifferentialValue: match.XGdifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        XGDiffTips.push(XGPredictionObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        XGPredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          XGdifferentialValue: match.XGdifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        XGDiffTips.push(XGPredictionObject);\n      }\n\n      if (\n        match.pointsDifferential === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        pointsDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          pointsDifferentialValue: match.pointsDifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        pointsDiffTips.push(pointsDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        pointsDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          pointsDifferentialValue: match.pointsDifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        pointsDiffTips.push(pointsDiffObject);\n      }\n\n      if (\n        match.rollingGoalDiff === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        rollingDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        rollingDiffTips.push(rollingDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        rollingDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        rollingDiffTips.push(rollingDiffObject);\n      }\n\n      if (\n        match.dangerousAttacksDiff === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        dangerousAttacksDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        dangerousAttacksDiffTips.push(dangerousAttacksDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        dangerousAttacksDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        dangerousAttacksDiffTips.push(dangerousAttacksDiffObject);\n      }\n\n      predictions.push(match);\n    })\n  );\n  ReactDOM.render(\n    <RenderAllFixtures matches={matches} result={true} bool={mock} />,\n    document.getElementById(\"FixtureContainer\")\n  );\n  await getSuccessMeasure(matches);\n  await getMultis();\n  await getNewTips(allTipsSorted);\n\n  // await renderTips();\n}\n\nasync function getMultis() {\n  allTipsSorted = allTips.sort(function (a, b) {\n    return b.goalDifferential - a.goalDifferential;\n  });\n\n  bestBets.sort(function (a, b) {\n    if (a.goalDifferential === b.goalDifferential) {\n      return b.comparisonScore - a.comparisonScore;\n    } else {\n      return b.goalDifferential > a.goalDifferential ? 1 : -1;\n    }\n  });\n\n  bttsArray.sort(function (a, b) {\n    return b.combinedBTTS - a.combinedBTTS;\n  });\n\n  Over25Tips.sort(function (a, b) {\n    return b.goalTotalUnrounded - a.goalTotalUnrounded;\n  });\n\n  XGDiffTips.sort(function (a, b) {\n    return Math.abs(b.XGdifferentialValue) - Math.abs(a.XGdifferentialValue);\n  });\n\n  pointsDiffTips.sort(function (a, b) {\n    return (\n      Math.abs(b.pointsDifferentialValue) - Math.abs(a.pointsDifferentialValue)\n    );\n  });\n\n  rollingDiffTips.sort(function (a, b) {\n    return Math.abs(b.rollingGoalDiffValue) - Math.abs(a.rollingGoalDiffValue);\n  });\n\n  dangerousAttacksDiffTips.sort(function (a, b) {\n    return (\n      Math.abs(b.dangerousAttacksDiffValue) -\n      Math.abs(a.dangerousAttacksDiffValue)\n    );\n  });\n\n  exoticArray = [];\n  gamesInExotic = 0;\n  exoticStake = 0;\n  exoticString = \"\";\n\n  switch (true) {\n    case allTips.length >= 10:\n      for (let i = 0; i < 10; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 10;\n      minimumExotic = 8;\n      exoticStake = 0.1;\n      exoticString = \"45 8-folds, 10 9-folds and 1 10-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 9:\n      for (let i = 0; i < 9; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 9;\n      minimumExotic = 7;\n      exoticStake = 0.1;\n      exoticString = \"36 7-folds, 9 8-folds and 1 9-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 8:\n      for (let i = 0; i < 8; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 8;\n      minimumExotic = 6;\n      exoticStake = 0.1;\n      exoticString = \"28 6-folds, 8 7-folds and 1 8-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 7:\n      for (let i = 0; i < 7; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 7;\n      minimumExotic = 6;\n      exoticStake = 1;\n      exoticString = \"7 6-folds and 1 7-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 6:\n      for (let i = 0; i < 6; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 6;\n      minimumExotic = 5;\n      exoticStake = 1;\n      exoticString = \"6 5-folds and 1 6-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 5:\n      for (let i = 0; i < 5; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 5;\n      minimumExotic = 4;\n      exoticStake = 1;\n      exoticString = \"5 4-folds and 1 5-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case Over25Tips.length >= 4:\n      for (let i = 0; i < 4; i++) {\n        let game = Over25Tips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 4;\n      minimumExotic = 3;\n      exoticStake = 1;\n      exoticString = \"4 3-folds and 1 4-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    default:\n      break;\n  }\n}\n\nexport function getAccumulatorPrice(priceArray) {\n  var result = 1;\n  for (var i = 0; i < priceArray.length; i++)\n    result = result * priceArray[i].rawOdds;\n\n  return result;\n}\n\nexport function getCoverBetMaxReturns(priceArray, minAccSize, stake) {\n  var total = 0;\n  combinations = 0;\n\n  for (var i = minAccSize; i <= priceArray.length; i++) {\n    var perms = getUniquePermutations(priceArray, i);\n    combinations = combinations + perms.length;\n\n    for (var j = 0; j < perms.length; j++)\n      total += getAccumulatorPrice(perms[j]) * stake;\n  }\n  return parseFloat(total.toFixed(2));\n}\n\nfunction getUniquePermutations(arr, permLength) {\n  if (arr.length <= permLength) return [arr];\n\n  var permutations = [];\n  var newArr = [];\n\n  newArr = arr.slice(0);\n\n  for (var i = 0; i < arr.length; i++) {\n    newArr = arr.slice(0);\n    newArr.splice(i, 1);\n    permutations = twoDimArrayUnion(\n      permutations,\n      getUniquePermutations(newArr, permLength)\n    );\n  }\n  return permutations;\n}\n\nfunction twoDimArrayUnion(arr1, arr2) {\n  for (var i = 0; i < arr2.length; i++) {\n    var duplicate = false;\n\n    for (var j = 0; j < arr1.length; j++)\n      if (arr1[j].length === arr2[i].length)\n        for (var k = 0; k < arr1[j].length; k++)\n          if (arr1[j][k] !== arr2[i][k]) break;\n          else if (k === arr1[j].length - 1) duplicate = true;\n\n    if (!duplicate) arr1.push(arr2[i]);\n  }\n\n  return arr1;\n}\n\nfunction NewlineText(props) {\n  const text = props.text;\n  const newText = text.split(\"\\n\").map((str) => <p>{str}</p>);\n\n  return newText;\n}\n\nasync function renderTips() {\n  if (newArray.length > 0) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <div className=\"BestPredictionsExplainer\">\n                  Add or remove a selection using the buttons below. Predictions\n                  are ordered by confidence in the outcome.\n                </div>\n                {newArray.map((tip) => (\n                  <li key={`${tip.game}acca`}>\n                    <div>\n                      {tip.team}: {tip.odds}{\" \"}\n                      <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                    </div>\n                    <div className=\"TipGame\">{tip.game}</div>\n                  </li>\n                ))}\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  No games fit the criteria\n                </h4>\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  }\n\n  if (exoticArray.length > 4) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Exotic of the day\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  <NewlineText\n                    text={`${gamesInExotic} games: ${exoticString}\\nStake per multi: ${exoticStake} units - ${combinations} combinations\\nTotal stake: ${(\n                      exoticStake * combinations\n                    ).toFixed(2)} unit(s)`}\n                  />\n                  {`Potential winnings: ${price.toFixed(2)} units`}\n                </h4>\n                {exoticArray.map((tip) => (\n                  <li key={tip.team}>\n                    {tip.team}: {tip.odds}{\" \"}\n                    <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                    <div>{tip.game}</div>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Exotic of the day\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  Not enough games for this feature\n                </h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  }\n\n  if (Over25Tips.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Over 2.5 goals tips\"}\n            element={\n              <ul className=\"LongshotPredictions\" id=\"LongshotPredictions\">\n                <h4>Over 2.5 goals</h4>\n                {Over25Tips.map((tip) => (\n                  <li key={tip.team}>\n                    {tip.game} - Odds: {tip.odds}{\" \"}\n                    <span className={`${tip.doubleChanceOutcome}`}>\n                      {tip.outcomeSymbol}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Over 2.5 goals tips\"}\n            element={\n              <ul className=\"LongshotPredictions\" id=\"LongshotPredictions\">\n                <h4>No games fit the criteria</h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  }\n\n  if (bttsArray.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"BTTS games\"}\n            element={\n              <ul className=\"BTTSGames\" id=\"BTTSGames\">\n                <h4>Games with highest chance of BTTS</h4>\n                {bttsArray.map((game) => (\n                  <li key={game.game}>\n                    {`${game.game} odds: ${game.bttsFraction}`}{\" \"}\n                    <span className={game.bttsOutcome}>\n                      {game.bttsOutcomeSymbol}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"BTTS games\"}\n            element={\n              <ul className=\"BTTSGames\" id=\"BTTSGames\">\n                <h4>No games fit the criteria</h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  }\n\n  ReactDOM.render(\n    <div>\n      <Collapsable\n        buttonText={\"XG tips\"}\n        element={\n          <Slider\n            element={\n              XGDiffTips.length > 0 ? (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>Games with greatest XG Differentials</h4>\n                  {XGDiffTips.map((tip) => (\n                    <li key={tip.game}>\n                      {tip.game} | {tip.prediction} {tip.odds}{\" \"}\n                      <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>Games with greatest XG Differentials</h4>\n                  <li key={\"noPPGDiff\"}>\n                    Sorry, no games fit this criteria today\n                  </li>\n                </ul>\n              )\n            }\n            element2={\n              pointsDiffTips.length > 0 ? (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest points per game differentials (last 10)\n                  </h4>\n                  {pointsDiffTips.map((game) => (\n                    <li key={game.game}>\n                      {game.game} | {game.prediction} {game.odds}{\" \"}\n                      <span className={game.outcome}>{game.outcomeSymbol}</span>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest points per game differentials (last 10)\n                  </h4>\n                  <li key={\"noPPGDiff\"}>\n                    Sorry, no games fit this criteria today\n                  </li>\n                </ul>\n              )\n            }\n            element3={\n              rollingDiffTips.length > 0 ? (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest rolling goal difference differentials\n                  </h4>\n                  {rollingDiffTips.map((game) => (\n                    <li key={game.game}>\n                      {game.game} | {game.prediction} {game.odds}{\" \"}\n                      <span className={game.outcome}>{game.outcomeSymbol}</span>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest rolling goal difference differentials\n                  </h4>\n                  <li key={\"noPPGDiff\"}>\n                    Sorry, no games fit this criteria today\n                  </li>\n                </ul>\n              )\n            }\n            element4={\n              dangerousAttacksDiffTips.length > 0 ? (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest average dangerous attacks differentials\n                  </h4>\n                  {dangerousAttacksDiffTips.map((game) => (\n                    <li key={game.game}>\n                      {game.game} | {game.prediction} {game.odds}{\" \"}\n                      <span className={game.outcome}>{game.outcomeSymbol}</span>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                  <h4>\n                    Games with greatest average dangerous attacks differentials\n                  </h4>\n                  <li key={\"noPPGDiff\"}>\n                    Sorry, no games fit this criteria today\n                  </li>\n                </ul>\n              )\n            }\n            element5={\n              <div className=\"DonationButton\">\n                <h2>Help with running costs</h2>\n                <h4>\n                  Monthly costs are rising and each donation helps keep XG\n                  Tipping free to use\n                </h4>\n                <StyledKofiButton buttonText=\"No sign up donation\" />\n              </div>\n            }\n          ></Slider>\n        }\n      ></Collapsable>\n      <div className=\"FiltersSelected\">\n        <h4>Filters selected:</h4>\n        <ul className=\"FiltersSelectedList\">\n          <li>Minimum goal difference spread: {minimumGD}</li>\n          <li>Minimum goal difference spread (home or away only): {minimumGDHorA}</li>\n          <li>Minimum XG difference spread: {minimumXG}</li>\n          <li>Minimum PPG difference spread: {minimumLast10}</li>\n          <li>\n            Odds range: {rangeValue[0]} - {rangeValue[1]}\n          </li>\n        </ul>\n      </div>\n    </div>,\n    document.getElementById(\"insights\")\n  );\n}","import React, { useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Collapsable from \"../components/CollapsableElement\";\nexport var toggleState = false;\nexport var setIsOff = false;\n\nconst upArrow = \"\\u{25B2}\";\n\nconst StyledTableCell2 = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"rgba(226, 226, 226, 1)\",\n    color: \"white\",\n    padding: \"0.35em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    textAlign: \"left\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    fontSize: \"1.9em\",\n    textAlign: \"left\",\n    fontFamily: \"inherit\",\n    padding: \"0.5em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"#030061\",\n  },\n}))(TableCell);\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"white\",\n    color: \"#030061\",\n    padding: \"0.5em\",\n    paddingTop: \"1em\",\n    paddingBottom: \"1em\",\n    textAlign: \"center\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    // backgroundColor: \"#030061\",\n    fontSize: \"1.9em\",\n    textAlign: \"center\",\n    fontFamily: \"inherit\",\n    padding: \"0.35em\",\n    paddingTop: \"1em\",\n    paddingBottom: \"1em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"#030061\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#rgba(226, 226, 226, 0.424)\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#rgba(226, 226, 226, 1)\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\nfunction styleForm(formIndicator) {\n  let className;\n  if (formIndicator === \"W\") {\n    className = \"winLeague\";\n  } else if (formIndicator === \"D\") {\n    className = \"drawLeague\";\n  } else if (formIndicator === \"L\") {\n    className = \"lossLeague\";\n  }\n  return className;\n}\n\nexport default function LeagueTable(props) {\n  [toggleState, setIsOff] = useState(false);\n\n  let rows = props.Teams.map((team, i) => (\n    <StyledTableRow key={`${props.Key}row${i}`}>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${i + 1}`}\n      </StyledTableCell>\n      <StyledTableCell2 component=\"th\" scope=\"row\" style={{ width: \"15em\" }}>\n        {`${team.Name}`}\n      </StyledTableCell2>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Played}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Wins}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Draws}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Losses}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.For}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Against}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.GoalDifference}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Points}`}\n      </StyledTableCell>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ textAlign: \"center\" }}\n      >\n        <span className={styleForm(team.Form[0])}>\n          {team.Form[0] !== undefined ? team.Form[0] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[1])}>\n          {team.Form[1] !== undefined ? team.Form[1] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[2])}>\n          {team.Form[2] !== undefined ? team.Form[2] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[3])}>\n          {team.Form[3] !== undefined ? team.Form[3] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[4])}>\n          {team.Form[4] !== undefined ? team.Form[4] : \"\"}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  ));\n\n  const leagueResults = [];\n  let singleResult;\n  if (props.Results) {\n    props.Results.forEach((result) => {\n      singleResult = (\n        <div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_xg}</span>\n            <span className=\"column\">XG</span>\n            <span className=\"column\">{result.team_b_xg}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shots}</span>\n            <span className=\"column\">Shots</span>\n            <span className=\"column\">{result.team_b_shots}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shotsOnTarget}</span>\n            <span className=\"column\">SOT</span>\n            <span className=\"column\">{result.team_b_shotsOnTarget}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_dangerous_attacks}</span>\n            <span className=\"column\">Dangerous Attacks</span>\n            <span className=\"column\">{result.team_b_dangerous_attacks}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_possession}%</span>\n            <span className=\"column\">Possession</span>\n            <span className=\"column\">{result.team_b_possession}%</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_red_cards}</span>\n            <span className=\"column\">Red cards</span>\n            <span className=\"column\">{result.team_b_red_cards}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.odds_ft_1}</span>\n            <span className=\"column\">Odds (pre-match)</span>\n            <span className=\"column\">{result.odds_ft_2}</span>\n          </div>\n        </div>\n      );\n\n      leagueResults.push(\n        <Collapsable\n          classNameButton=\"ResultButton\"\n          buttonText={\n            <div className=\"ResultRowOverview\">\n              <div className=\"columnOverviewHome\">{result.home_name}</div>\n              <span className=\"columnOverviewScore\">\n                {result.homeGoalCount} : {result.awayGoalCount}\n              </span>\n              <div className=\"columnOverviewAway\">{result.away_name}</div>\n            </div>\n          }\n          element={singleResult}\n        />\n      );\n    });\n  }\n\n  const leagueResultsOlder = [];\n  if (props.LastWeeksResults) {\n    props.LastWeeksResults.forEach((result) => {\n      singleResult = (\n        <div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_xg}</span>\n            <span className=\"column\">XG</span>\n            <span className=\"column\">{result.team_b_xg}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shots}</span>\n            <span className=\"column\">Shots</span>\n            <span className=\"column\">{result.team_b_shots}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shotsOnTarget}</span>\n            <span className=\"column\">SOT</span>\n            <span className=\"column\">{result.team_b_shotsOnTarget}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_dangerous_attacks}</span>\n            <span className=\"column\">Dangerous Attacks</span>\n            <span className=\"column\">{result.team_b_dangerous_attacks}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_possession}</span>\n            <span className=\"column\">Possession</span>\n            <span className=\"column\">{result.team_b_possession}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_red_cards}</span>\n            <span className=\"column\">Red cards</span>\n            <span className=\"column\">{result.team_b_red_cards}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.odds_ft_1}</span>\n            <span className=\"column\">Odds (pre-match)</span>\n            <span className=\"column\">{result.odds_ft_2}</span>\n          </div>\n        </div>\n      );\n\n      leagueResultsOlder.push(\n        <Collapsable\n          classNameButton=\"ResultButton\"\n          buttonText={\n            <div className=\"ResultRowOverview\">\n              <div className=\"columnOverviewHome\">{result.home_name}</div>\n              <span className=\"columnOverviewScore\">\n                {result.homeGoalCount} : {result.awayGoalCount}\n              </span>\n              <div className=\"columnOverviewAway\">{result.away_name}</div>\n            </div>\n          }\n          element={singleResult}\n        />\n      );\n    });\n  }\n\n  function getTopScorersTeam(id) {\n    let found = props.Teams.find((team) => team.ID === id);\n    return found.Name;\n  }\n\n  async function sorted(league, value, order) {\n    let sortedByForm;\n    if (order === \"desc\") {\n      sortedByForm = league.sort((a, b) => b[value] - a[value]);\n    } else {\n      sortedByForm = league.sort((a, b) => a[value] - b[value]);\n    }\n    setIsOff(!toggleState);\n    return sortedByForm;\n  }\n\n  if (\n    props.GamesPlayed > 3 &&\n    props.Teams[0].LeagueID !== 7956 &&\n    props.Teams[0].LeagueID !== 6969 &&\n    props.Teams[0].LeagueID !== 7432\n  ) {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table\n            className=\"Table\"\n            aria-label=\"customized table\"\n            key={props.Key}\n            style={{ marginTop: \"2em\", marginBottom: \"1em\" }}\n          >\n            <TableHead>\n              <TableRow>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"Points\", \"desc\")}\n                  >\n                    Pts {upArrow}\n                  </button>\n                </td>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"LastXPoints\", \"desc\")}\n                  >\n                    Last 5 {upArrow}\n                  </button>\n                </td>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n          <h5>{`${props.mostRecentGameweek} results`}</h5>\n          <div className=\"ResultsList\" id=\"ResultsList\">\n            <ul>{leagueResults}</ul>\n          </div>\n          <div className=\"LeagueStatisticsHeader\">League Statistics</div>\n          <div className=\"LeagueStatistics\">\n            <ul className=\"LeagueStatsColumn\">\n              <li>Average home goals: {props.Stats.seasonAVG_home}</li>\n              <li>Average away goals: {props.Stats.seasonAVG_away}</li>\n              <li>BTTS: {props.Stats.seasonBTTSPercentage}%</li>\n              <li>\n                Over 0.5 goals: {props.Stats.seasonOver05Percentage_overall}%\n              </li>\n              <li>\n                Over 1.5 goals: {props.Stats.seasonOver15Percentage_overall}%\n              </li>\n              <li>\n                Over 2.5 goals: {props.Stats.seasonOver25Percentage_overall}%\n              </li>\n              <li>\n                Over 3.5 goals: {props.Stats.seasonOver35Percentage_overall}%\n              </li>\n              <li>\n                Over 4.5 goals: {props.Stats.seasonOver45Percentage_overall}%\n              </li>\n            </ul>\n            <ul className=\"LeagueStatsColumn\">\n              <li>\n                Over 7.5 corners: {props.Stats.over75CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 8.5 corners: {props.Stats.over85CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 9.5 corners: {props.Stats.over95CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 10.5 corners:{\" \"}\n                {props.Stats.over105CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 11.5 corners:{\" \"}\n                {props.Stats.over115CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 12.5 corners:{\" \"}\n                {props.Stats.over125CornersPercentage_overall}%\n              </li>\n              <li>Corners average: {props.Stats.cornersAVG_overall}</li>\n              <li>Cards average: {props.Stats.cardsAVG_overall}</li>\n            </ul>\n            <ul className=\"TopScorersColumn\">\n              <h4>Top scorers</h4>\n              <li>\n                {props.Stats.top_scorers[0].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[0].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[0].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[1].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[1].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[1].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[2].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[2].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[2].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[3].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[3].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[3].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[4].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[4].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[4].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[5].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[5].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[5].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[6].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[6].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[6].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[7].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[7].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[7].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[8].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[8].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[8].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[9].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[9].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[9].goals_overall}\n              </li>\n            </ul>\n          </div>\n        </TableContainer>\n      );\n    }\n  } else if (props.Teams[0].LeagueID === 4340) {\n    return null;\n  } else {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table aria-label=\"customized table\" key={props.Key}>\n            <TableHead>\n              <TableRow>\n                <button\n                  className=\"SortedColumn\"\n                  style={{ textAlign: \"center\" }}\n                  onClick={() => sorted(props.Teams, \"Position\")}\n                >\n                  {upArrow}\n                </button>{\" \"}\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <StyledTableCell>Pts</StyledTableCell>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"LastXPoints\", \"desc\")}\n                  >\n                    Last 5 {upArrow}\n                  </button>\n                </td>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n        </TableContainer>\n      );\n    }\n  }\n}\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { orderedLeagues } from \"../App\";\nimport { getForm } from \"./getForm\";\nimport { Fixture } from \"../components/Fixture\";\nimport { Button } from \"../components/Button\";\nimport { Slide } from \"../components/Slider\";\nimport { getScorePrediction } from \"../logic/getScorePredictions\";\nimport { ThreeDots } from \"react-loading-icons\";\nimport { selectedOdds } from \"../components/OddsRadio\";\nimport LeagueTable from \"../components/LeagueTable\";\nimport { getPointsFromLastX } from \"../logic/getScorePredictions\";\nimport SlideDiff from \"../components/SliderDiff\";\nimport Collapsable from \"../components/CollapsableElement\";\n\nvar oddslib = require(\"oddslib\");\n\n// require(\"dotenv\").config();\n\nvar fixtureResponse;\nvar fixtureArray = [];\nexport var matches = [];\nexport var resultedMatches = [];\nvar league;\nvar leagueID;\nvar leagueGames = [];\nexport var leagueArray = [];\nvar leagueIdArray = [];\nexport var leagueStatsArray = [];\nexport let leagueInstance;\nexport let groupInstance;\nexport let allLeagueResultsArrayOfObjects = [];\nvar lastThreeFormHome;\nvar lastThreeFormAway;\nvar lastFiveFormHome;\nvar lastFiveFormAway;\nvar lastSixFormHome;\nvar lastSixFormAway;\nvar lastTenFormHome;\nvar lastTenFormAway;\nvar leagueOrAll;\nvar formRunHome;\nvar formRunAway;\nlet WDLinLeagueHome;\nlet WDLinLeagueAway;\nlet HomeAverageGoals;\nlet homeAverageGoals;\nlet HomeAverageConceded;\nlet homeAverageConceded;\nlet AwayAverageGoals;\nlet awayAverageGoals;\nlet AwayAverageConceded;\nlet awayAverageConceded;\n\n// export var [currentDay, month, year] = new Date()\n//   .toLocaleDateString(\"en-US\", { timeZone: \"Europe/London\" })\n//   .split(\"/\");\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nexport let allForm = [];\nexport let tableArray = [];\nexport let worldCupArray = [];\ngroupInstance = [];\nleagueInstance = [];\n\nasync function convertTimestamp(timestamp) {\n  let newDate = new Date(timestamp * 1000);\n  let [day, month, year] = newDate.toLocaleDateString(\"en-US\").split(\"/\");\n\n  let converted = `${year}-${day}-${month}`;\n\n  return converted;\n}\n\nexport async function generateTables(a, leagueIdArray, allResults) {\n  // leagueIdArray = [];\n  tableArray = [];\n  worldCupArray = [];\n  let i = 0;\n  leagueArray.forEach(function (league) {\n    let currentLeagueId = leagueIdArray[i];\n    i++;\n    leagueInstance = [];\n    //Skip MLS which has a weird format\n    if (\n      !league.data.specific_tables[0].groups &&\n      currentLeagueId !== 6969 &&\n      league.data.specific_tables[0].table\n    ) {\n      for (\n        let index = 0;\n        index < league.data.specific_tables[0].table.length;\n        index++\n      ) {\n        let currentTeam = league.data.specific_tables[0].table[index];\n        let last5;\n        if (currentTeam.wdl_record.length < 5) {\n          last5 = currentTeam.wdl_record\n            .slice(`-${currentTeam.wdl_record.length}`)\n            .toUpperCase();\n        } else {\n          last5 = currentTeam.wdl_record.slice(-5).toUpperCase();\n        }\n\n        const team = {\n          LeagueID: currentLeagueId,\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          ID: currentTeam.id,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: last5,\n          LastXPoints: getPointsFromLastX(last5.split(\"\")),\n          Points: currentTeam.points,\n          wdl: currentTeam.wdl_record,\n          seasonGoals: currentTeam.seasonGoals,\n          seasonConceded: currentTeam.seasonConceded,\n        };\n        leagueInstance.push(team);\n      }\n      tableArray.push({ id: currentLeagueId, table: leagueInstance });\n    } else if (currentLeagueId === 7432) {\n      // for (let x = 0; x < league.data.specific_tables[0].groups.length; x++) {\n      // for (\n      //   let index = 0;\n      //   index < league.data.specific_tables[0].groups[x].table.length;\n      //   index++\n      // )\n      league.data.specific_tables[0].groups.forEach((group) => {\n        leagueInstance = [];\n        for (let index = 0; index < group.table.length; index++) {\n          let currentTeam = group.table[index];\n          let last5 = \"N/A\";\n          const team = {\n            LeagueID: currentLeagueId,\n            Position: index + 1,\n            Name: currentTeam.cleanName,\n            ID: currentTeam.id,\n            Played: currentTeam.matchesPlayed,\n            Wins: currentTeam.seasonWins_overall,\n            Draws: currentTeam.seasonDraws_overall,\n            Losses: currentTeam.seasonLosses_overall,\n            For: currentTeam.seasonGoals,\n            Against:\n              currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n            GoalDifference: currentTeam.seasonGoalDifference,\n            Form: last5,\n            LastXPoints: getPointsFromLastX(last5.split(\"\")),\n            Points: currentTeam.points,\n            wdl: currentTeam.wdl_record,\n            seasonGoals: currentTeam.seasonGoals,\n            seasonConceded: currentTeam.seasonConceded,\n          };\n          leagueInstance.push(team);\n        }\n        worldCupArray.push({\n          group: group.name,\n          table: leagueInstance,\n        });\n      });\n    } else if (league.data.league_table === null) {\n      for (\n        let index = 0;\n        index < league.data.all_matches_table_overall.length;\n        index++\n      ) {\n        let currentTeam = league.data.all_matches_table_overall[index];\n        let last5 = \"N/A\";\n        const team = {\n          LeagueID: currentLeagueId,\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          ID: currentTeam.id,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: last5,\n          LastXPoints: getPointsFromLastX(last5.split(\"\")),\n          Points: currentTeam.points,\n          wdl: currentTeam.wdl_record,\n          seasonGoals: currentTeam.seasonGoals,\n          seasonConceded: currentTeam.seasonConceded,\n        };\n        leagueInstance.push(team);\n      }\n\n      tableArray.push({ id: currentLeagueId, table: leagueInstance });\n    }\n  });\n}\n\n\nexport async function renderTable(index, results, id) {\n  let league;\n  //World cup table rendering\n\n  // let mostRecentGame = results.fixtures.pop();\n  let mostRecentGame = results.fixtures.pop();\n\n  let mostRecentGameweek = \"Latest\";\n\n  const gameweeksResults = results.fixtures.filter(\n    (games) => games.game_week === mostRecentGame.game_week\n  );\n\n  // const lastGameweeksResults = results.fixtures.filter(\n  //   (games) => games.game_week === mostRecentGameweek - 1\n  // );\n\n  const leagueTable = tableArray.filter((table) => table.id === id);\n\n  league = leagueTable[0].table;\n\n  let statistics;\n  let leagueStatistics = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}leagueStats/${id}`\n  );\n  await leagueStatistics.json().then((stats) => {\n    statistics = stats.data;\n  });\n\n  if (league !== undefined) {\n    ReactDOM.render(\n      <LeagueTable\n        Teams={league}\n        Stats={statistics}\n        Key={`League${index}`}\n        GamesPlayed={statistics.game_week}\n        Results={gameweeksResults}\n        mostRecentGameweek={mostRecentGameweek}\n      />,\n      document.getElementById(`leagueName${id}`)\n    );\n  }\n}\n\nasync function createFixture(match, result, mockBool) {\n  let roundedHomeOdds;\n  let roundedAwayOdds;\n  let roundedBTTSOdds;\n  let homeFraction;\n  let awayFraction;\n  let bttsFraction;\n\n  if (selectedOdds === \"Fractional odds\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      roundedHomeOdds = (Math.round(match.homeOdds * 5) / 5).toFixed(1);\n      roundedAwayOdds = (Math.round(match.awayOdds * 5) / 5).toFixed(1);\n\n      if (roundedHomeOdds < 1.1) {\n        roundedHomeOdds = 1.1;\n      }\n      if (roundedAwayOdds < 1.1) {\n        roundedAwayOdds = 1.1;\n      }\n\n      if (match.homeOdds === 0.1 && match.awayOdds === 0.1) {\n        match.homeOdds = 3;\n        roundedHomeOdds = 3;\n        match.awayOdds = 3;\n        roundedAwayOdds = 3;\n      }\n\n      try {\n        homeFraction = oddslib\n          .from(\"decimal\", roundedHomeOdds)\n          .to(\"fractional\", { precision: 1 });\n        awayFraction = oddslib\n          .from(\"decimal\", roundedAwayOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      roundedBTTSOdds = (Math.round(match.bttsOdds * 5) / 5).toFixed(1);\n\n      if (roundedBTTSOdds < 1.1) {\n        roundedBTTSOdds = 1.1;\n      }\n\n      try {\n        bttsFraction = oddslib\n          .from(\"decimal\", roundedBTTSOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  } else if (selectedOdds === \"Decimal odds\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      homeFraction = match.homeOdds;\n      awayFraction = match.awayOdds;\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      bttsFraction = match.bttsOdds;\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  }\n\n  match.omit = false;\n  match.homeTeamWinsPercentage = match.homeTeamWinPercentage;\n  match.homeTeamLossesPercentage = match.homeTeamLossPercentage;\n  match.homeTeamDrawsPercentage = match.homeTeamDrawPercentage;\n\n  match.awayTeamWinsPercentage = match.awayTeamWinPercentage;\n  match.awayTeamLossesPercentage = match.awayTeamLossPercentage;\n  match.awayTeamDrawsPercentage = match.awayTeamDrawPercentage;\n  match.fractionHome = homeFraction;\n  match.fractionAway = awayFraction;\n\n  match.bttsFraction = bttsFraction;\n\n  match.game = match.homeTeam + \" v \" + match.awayTeam;\n\n  // ReactDOM.render(\n  //   <Fixture\n  //     fixtures={matches}\n  //     result={result}\n  //     mock={mockBool}\n  //     className={\"individualFixture\"}\n  //   />,\n  //   document.getElementById(\"FixtureContainer\")\n  // );\n}\n\nexport function RenderAllFixtures(props) {\n  return (\n    <Fixture\n      fixtures={props.matches}\n      result={props.result}\n      mock={false}\n      className={\"individualFixture\"}\n    />\n  );\n}\n//     document.getElementById(\"FixtureContainer\")\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nlet isFunctionRunning = false;\n\nexport async function generateFixtures(\n  day,\n  date,\n  selectedOdds,\n  footyStatsFormattedDate,\n  current,\n  todaysDate\n) {\n  if (!isFunctionRunning) {\n    isFunctionRunning = true;\n\n    // const randomInt = Math.random() * 10\n\n    // if(randomInt >= 7){\n    //   alert(\"XGTipping is now serving over 2000 users a month,1 relying on donations to cover increasing running costs. If you can afford to do so and like what we do, please, help us stay subscription fee today by tapping to Donation button at the bottom of the page\")\n    // }\n\n    ReactDOM.render(\n      <div>\n        <div className=\"LoadingText\">\n          Loading all league, fixture & form data, please be patient...\n        </div>\n        <ThreeDots height=\"3em\" fill=\"#030061\" />\n      </div>,\n      document.getElementById(\"Loading\")\n    );\n\n    //cleanup if different day is selected\n    ReactDOM.render(\n      <div></div>,\n      document.getElementById(\"GeneratePredictions\")\n    );\n    ReactDOM.render(<div></div>, document.getElementById(\"successMeasure2\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"bestPredictions\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"exoticOfTheDay\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"insights\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"longShots\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"BTTS\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"draws\"));\n\n    const url = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${footyStatsFormattedDate}`;\n    const formUrl = `${process.env.REACT_APP_EXPRESS_SERVER}form/${date}`;\n\n    matches = [];\n    fixtureArray = [];\n\n    league = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${todaysDate}`\n    );\n\n    ReactDOM.render(<div></div>, document.getElementById(\"FixtureContainer\"));\n\n    fixtureResponse = await fetch(url);\n\n    await fixtureResponse.json().then((fixtures) => {\n      fixtureArray = Array.from(fixtures.data);\n    });\n\n    let form;\n    let formArray = [];\n    allForm = [];\n    var isFormStored;\n    var isStoredLocally;\n    var leaguesStored = false;\n    let storedForm = await fetch(formUrl);\n    if (storedForm.status === 201 || storedForm.status === 200) {\n      await storedForm.json().then((form) => {\n        formArray = Array.from(form.allForm);\n        isFormStored = true;\n        isStoredLocally = true;\n        allForm = formArray;\n      });\n    } else {\n      isFormStored = false;\n      isStoredLocally = false;\n    }\n\n    leagueIdArray = [];\n    for (let i = 0; i < orderedLeagues.length; i++) {\n      leagueID = orderedLeagues[i].element.id;\n      leagueIdArray.push(leagueID);\n    }\n\n    var leaguePositions = [];\n    leagueArray = [];\n\n    let allLeagueResults;\n\n    allLeagueResults = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}results`\n    );\n\n    if (league.status === 200 && allLeagueResults.status === 201) {\n      console.log(\"Not fetching leagues\");\n      await league.json().then((leagues) => {\n        leagueArray = Array.from(leagues.leagueArray);\n      });\n      updateResults(false);\n\n      await allLeagueResults.json().then((allGames) => {\n        allLeagueResultsArrayOfObjects = Array.from(allGames);\n      });\n\n      leaguesStored = true;\n      generateTables(\n        leagueArray,\n        leagueIdArray,\n        allLeagueResultsArrayOfObjects\n      );\n    } else {\n      allLeagueResultsArrayOfObjects = [];\n      console.log(\"Fetching leagues\");\n      for (let i = 0; i < orderedLeagues.length; i++) {\n        league = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}tables/${orderedLeagues[i].element.id}/${date}`\n        );\n        // eslint-disable-next-line no-loop-func\n        await league.json().then((table) => {\n          leagueArray.push(table);\n        });\n        leaguesStored = false;\n      }\n\n      //set variable for date X amount of days in the past and use that to filter the results\n\n      let startDate = (new Date().getTime() / 1000).toFixed(0);\n      // deduct 3 months\n      let targetDate = startDate - 15778463;\n\n      for (const orderedLeague of orderedLeagues) {\n        let fixtures = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${orderedLeague.element.id}`\n        );\n\n        let games = await fixtures.json();\n        let gamesFiltered = games.data.filter(\n          (game) => game.status === \"complete\"\n        );\n\n        if (current) {\n          let mostRecentResults = gamesFiltered.filter(\n            (game) => game.date_unix > targetDate\n          );\n          gamesFiltered = mostRecentResults;\n        }\n\n        // let mostRecentResults = gamesFiltered.filter(\n        //   (game) => game.date_unix > targetDate\n        // );\n\n        const shortenedResults = gamesFiltered.map(\n          ({\n            home_name,\n            away_name,\n            homeGoalCount,\n            awayGoalCount,\n            date_unix,\n            team_a_xg,\n            team_b_xg,\n            odds_ft_1,\n            odds_ft_2,\n            team_a_shots,\n            team_b_shots,\n            team_a_corners,\n            team_b_corners,\n            team_a_shotsOnTarget,\n            team_b_shotsOnTarget,\n            team_a_red_cards,\n            team_b_red_cards,\n            team_a_possession,\n            team_b_possession,\n            team_a_dangerous_attacks,\n            team_b_dangerous_attacks,\n            pre_match_teamA_overall_ppg,\n            pre_match_teamB_overall_ppg,\n            game_week,\n          }) => ({\n            home_name,\n            away_name,\n            homeGoalCount,\n            awayGoalCount,\n            date_unix,\n            team_a_xg,\n            team_b_xg,\n            odds_ft_1,\n            odds_ft_2,\n            team_a_shots,\n            team_b_shots,\n            team_a_corners,\n            team_b_corners,\n            team_a_shotsOnTarget,\n            team_b_shotsOnTarget,\n            team_a_red_cards,\n            team_b_red_cards,\n            team_a_possession,\n            team_b_possession,\n            team_a_dangerous_attacks,\n            team_b_dangerous_attacks,\n            pre_match_teamA_overall_ppg,\n            pre_match_teamB_overall_ppg,\n            game_week,\n          })\n        );\n\n        let leagueObj = {\n          // leagueObject[orderedLeague] = {\n          name: orderedLeague.name,\n          id: orderedLeague.element.id,\n          fixtures: shortenedResults,\n        };\n\n        allLeagueResultsArrayOfObjects.push(leagueObj);\n      }\n      updateResults(true);\n      generateTables(\n        leagueArray,\n        leagueIdArray,\n        allLeagueResultsArrayOfObjects\n      );\n    }\n\n    let teamPositionPrefix;\n\n    async function getPrefix(position) {\n      switch (position) {\n        case 1:\n        case 21:\n        case 31:\n        case 41:\n          teamPositionPrefix = \"st\";\n          break;\n        case 2:\n        case 22:\n        case 32:\n        case 42:\n          teamPositionPrefix = \"nd\";\n          break;\n        case 3:\n        case 23:\n        case 33:\n        case 43:\n          teamPositionPrefix = \"rd\";\n          break;\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18:\n        case 19:\n        case 20:\n        case 24:\n        case 25:\n        case 26:\n        case 27:\n        case 28:\n        case 29:\n        case 30:\n        case 34:\n        case 35:\n        case 36:\n        case 37:\n        case 38:\n        case 39:\n        case 40:\n        case 44:\n        case 45:\n        case 46:\n        case 47:\n        case 48:\n          teamPositionPrefix = \"th\";\n          break;\n        default:\n          break;\n      }\n      return teamPositionPrefix;\n    }\n\n    for (let i = 0; i < leagueArray.length; i++) {\n      let leagueInstance;\n      let homeLeague;\n      let awayLeague;\n\n      if (leagueArray[i].data.league_table !== null) {\n        leagueInstance = leagueArray[i].data.league_table;\n        homeLeague = leagueArray[i].data.all_matches_table_home;\n        awayLeague = leagueArray[i].data.all_matches_table_away;\n      } else {\n        leagueInstance = leagueArray[i].data.all_matches_table_overall;\n        homeLeague = leagueArray[i].data.all_matches_table_home;\n        awayLeague = leagueArray[i].data.all_matches_table_away;\n      }\n\n      for (let x = 0; x < leagueInstance.length; x++) {\n        let regularSeason = leagueArray[i].data.specific_tables.find(\n          (season) =>\n            season.round === \"Regular Season\" ||\n            season.round === \"2023\" ||\n            season.round === \"2023/2024\" ||\n            season.round === \"Apertura\" ||\n            season.round === \"1st Phase\"\n          // season.round === \"North\" ||\n          // season.round === \"South\"\n        );\n        let string;\n\n        if (regularSeason !== undefined && regularSeason.table) {\n          string = regularSeason.table[x];\n          homeLeague = leagueArray[i].data.all_matches_table_home;\n          awayLeague = leagueArray[i].data.all_matches_table_away;\n        } else {\n          string = leagueArray[i].data.all_matches_table_overall[x];\n          homeLeague = leagueArray[i].data.all_matches_table_home;\n          awayLeague = leagueArray[i].data.all_matches_table_away;\n        }\n\n        let stringHome = homeLeague[x];\n        let stringAway = awayLeague[x];\n\n        leaguePositions.push({\n          name: string.cleanName,\n          position: x + 1,\n          rawPosition: x + 1,\n          homeFormName: stringHome ? stringHome.cleanName : string.cleanName,\n          awayFormName: stringAway ? stringAway.cleanName : string.cleanName,\n          homeSeasonWinPercentage: stringHome\n            ? stringHome.seasonWins\n            : string.seasonWins,\n          awaySeasonWinPercentage: stringAway\n            ? stringAway.seasonWins\n            : string.seasonWins,\n          homeSeasonLossPercentage: stringHome\n            ? stringHome.seasonLosses_home\n            : string.seasonLosses_home,\n          awaySeasonLossPercentage: stringAway\n            ? stringAway.seasonLosses_away\n            : string.seasonLosses_away,\n          homeSeasonDrawPercentage: stringHome\n            ? stringHome.seasonDraws\n            : string.seasonDraws,\n          awaySeasonDrawPercentage: stringAway\n            ? stringAway.seasonDraws\n            : string.seasonDraws,\n          homeSeasonMatchesPlayed: stringHome\n            ? stringHome.matchesPlayed\n            : string.matchesPlayed,\n          awaySeasonMatchesPlayed: stringAway\n            ? stringAway.matchesPlayed\n            : string.matchesPlayed,\n          ppg: string.points / string.matchesPlayed,\n          wdl: string.wdl_record ? string.wdl_record : \"\",\n          played: string.matchesPlayed,\n          seasonGoals: string.seasonGoals,\n          seasonConceded: string.seasonConceded,\n        });\n      }\n    }\n\n    let previousLeagueName;\n\n    for (let i = 0; i < orderedLeagues.length; i++) {\n      leagueID = orderedLeagues[i].element.id;\n      leagueGames = fixtureArray.filter(\n        (game) => game.competition_id === orderedLeagues[i].element.id\n      );\n\n      for (const fixture of leagueGames) {\n        const unixTimestamp = fixture.date_unix;\n        const milliseconds = unixTimestamp * 1000;\n        const dateObject = new Date(milliseconds);\n\n        let match = {};\n        if (orderedLeagues[i].name !== previousLeagueName) {\n          match.leagueName = orderedLeagues[i].name;\n          match.leagueIndex = i;\n          match.leagueID = leagueID;\n        } else {\n          match.leagueName = null;\n          match.leagueIndex = i;\n          match.leagueID = leagueID;\n        }\n        match.id = fixture.id;\n        match.competition_id = fixture.competition_id;\n        match.date = fixture.date_unix;\n        match.time = dateObject.toLocaleString(\"en-GB\", {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n        });\n        match.homeTeam = fixture.home_name;\n        match.awayTeam = fixture.away_name;\n        match.homeOdds = +fixture.odds_ft_1.toFixed(2);\n        match.awayOdds = +fixture.odds_ft_2.toFixed(2);\n        match.drawOdds = +fixture.odds_ft_x.toFixed(2);\n        match.homeDoubleChance = fixture.odds_doublechance_1x;\n        match.awayDoubleChance = fixture.odds_doublechance_x2;\n        match.bttsOdds = fixture.odds_btts_yes;\n        match.homeId = fixture.homeID;\n        match.awayId = fixture.awayID;\n        match.form = [];\n        match.homeTeamInfo = [];\n        match.awayTeamInfo = [];\n        match.btts = false;\n\n        previousLeagueName = orderedLeagues[i].name;\n\n        let homeTeaminLeague;\n        let awayTeaminLeague;\n        let teamPositionHome;\n        let teamPositionHomeTable;\n        let teamPositionAwayTable;\n        let homeTeamWinPercentageHome;\n        let awayTeamWinPercentageAway;\n        let homeTeamLossPercentageHome;\n        let awayTeamLossPercentageAway;\n        let homeTeamDrawPercentageHome;\n        let awayTeamDrawPercentageAway;\n        let teamPositionAway;\n        let homePrefix;\n        let homePrefixHomeTable;\n        let awayPrefix;\n        let awayPrefixAwayTable;\n        let homeSeasonPPG;\n        let awaySeasonPPG;\n\n        try {\n          homeTeaminLeague = leaguePositions.find(\n            (team) => team.name === match.homeTeam\n          );\n\n          let homeTeaminHomeLeague = leaguePositions.find(\n            (team) => team.homeFormName === match.homeTeam\n          );\n          teamPositionHome = homeTeaminLeague.position;\n          teamPositionHomeTable = homeTeaminHomeLeague.position;\n\n          WDLinLeagueHome = Array.from(homeTeaminLeague.wdl.toUpperCase());\n          HomeAverageGoals =\n            homeTeaminLeague.seasonGoals / homeTeaminLeague.played;\n          HomeAverageConceded =\n            homeTeaminLeague.seasonConceded / homeTeaminLeague.played;\n\n          homeTeamWinPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonWinPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homeTeamLossPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonLossPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homeTeamDrawPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonDrawPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homePrefix = await getPrefix(teamPositionHome);\n          homePrefixHomeTable = await getPrefix(teamPositionHomeTable);\n\n          homeSeasonPPG = homeTeaminLeague.ppg.toFixed(2);\n        } catch (error) {\n          console.log(error);\n          teamPositionHome = \"N/A\";\n          homePrefix = \"\";\n          homePrefixHomeTable = \"\";\n          homeSeasonPPG = \"N/A\";\n          homeTeaminLeague = {\n            rawPosition: \"N/A\",\n          };\n          WDLinLeagueHome = \"N/A\";\n        }\n\n        try {\n          awayTeaminLeague = leaguePositions.find(\n            (team) => team.name === match.awayTeam\n          );\n\n          let awayTeaminAwayLeague = leaguePositions.find(\n            (team) => team.awayFormName === match.awayTeam\n          );\n\n          teamPositionAway = awayTeaminLeague.position;\n          teamPositionAwayTable = awayTeaminAwayLeague.position;\n\n          WDLinLeagueAway = Array.from(awayTeaminLeague.wdl.toUpperCase());\n          AwayAverageGoals =\n            awayTeaminLeague.seasonGoals / awayTeaminLeague.played;\n          AwayAverageConceded =\n            awayTeaminLeague.seasonConceded / awayTeaminLeague.played;\n\n          awayTeamWinPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonWinPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayTeamLossPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonLossPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayTeamDrawPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonDrawPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayPrefix = await getPrefix(teamPositionAway);\n          awayPrefixAwayTable = await getPrefix(teamPositionAwayTable);\n\n          awaySeasonPPG = awayTeaminLeague.ppg.toFixed(2);\n        } catch (error) {\n          console.log(error);\n          teamPositionAway = \"N/A\";\n          awayPrefix = \"\";\n          awaySeasonPPG = \"N/A\";\n          awayTeaminLeague = {\n            rawPosition: \"N/A\",\n          };\n          WDLinLeagueAway = \"N/A\";\n        }\n\n        if (!isFormStored) {\n          form = await getForm(match);\n\n          let homeFormString5 =\n            form[0].data[0].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString5 =\n            form[1].data[0].stats.additional_info.formRun_overall.toUpperCase();\n          let homeFormString6 =\n            form[0].data[1].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString6 =\n            form[1].data[1].stats.additional_info.formRun_overall.toUpperCase();\n          let homeFormString10 =\n            form[0].data[2].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString10 =\n            form[1].data[2].stats.additional_info.formRun_overall.toUpperCase();\n\n          let homeFormRun =\n            form[0].data[2].stats.additional_info.formRun_home.toUpperCase();\n          let awayFormRun =\n            form[1].data[2].stats.additional_info.formRun_away.toUpperCase();\n\n          if (WDLinLeagueHome.length >= 10) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = WDLinLeagueHome.slice(-6);\n            lastTenFormHome = WDLinLeagueHome.slice(-10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = WDLinLeagueAway.slice(-6);\n            lastTenFormAway = WDLinLeagueAway.slice(-10);\n            leagueOrAll = \"League\";\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else if (WDLinLeagueHome.length >= 6) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = WDLinLeagueHome.slice(-6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = WDLinLeagueAway.slice(-6);\n            lastTenFormAway = Array.from(awayFormString10);\n            leagueOrAll = \"League\";\n\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else if (WDLinLeagueHome.length >= 5) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = Array.from(homeFormString6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = Array.from(awayFormString6);\n            lastTenFormAway = Array.from(awayFormString10);\n            leagueOrAll = \"League\";\n\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else {\n            lastThreeFormHome = [\n              homeFormString5[2],\n              homeFormString5[3],\n              homeFormString5[4],\n            ];\n            lastFiveFormHome = Array.from(homeFormString5);\n            lastSixFormHome = Array.from(homeFormString6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = [\n              awayFormString5[2],\n              awayFormString5[3],\n              awayFormString5[4],\n            ];\n\n            lastFiveFormAway = Array.from(awayFormString5);\n            lastSixFormAway = Array.from(awayFormString6);\n            lastTenFormAway = Array.from(awayFormString10);\n\n            leagueOrAll = \"All\";\n\n            homeAverageGoals = undefined;\n            homeAverageConceded = undefined;\n            awayAverageGoals = undefined;\n            awayAverageConceded = undefined;\n          }\n\n          formRunHome = Array.from(homeFormRun);\n          formRunAway = Array.from(awayFormRun);\n\n          if (\n            teamPositionHome === 0 ||\n            form[0].data[0].season_format !== \"Domestic League\"\n          ) {\n            teamPositionHome = \"N/A\";\n            teamPositionHomeTable = \"N/A\";\n            homePrefix = \"\";\n            homePrefixHomeTable = \"\";\n          }\n\n          if (\n            teamPositionAway === 0 ||\n            form[0].data[0].season_format !== \"Domestic League\"\n          ) {\n            teamPositionAway = \"N/A\";\n            teamPositionAwayTable = \"N/A\";\n            awayPrefix = \"\";\n            awayPrefixAwayTable = \"\";\n          }\n\n          allForm.push({\n            id: match.id,\n            teamIDHome: match.homeId,\n            teamIDAway: match.awayId,\n            leagueId: leagueID,\n            home: {\n              teamName: match.homeTeam,\n              0: {\n                XGOverall: parseFloat(form[0].data[0].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[0].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[0].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[0].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[0].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[0].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[0].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[0].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[0].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[0].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[0].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[0].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[0].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[0].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[0].stats.shotsOnTargetAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[0].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[0].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[0].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[0].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[0].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[0].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[0].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[0].stats.seasonBTTSPercentage_home\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition: homeTeaminLeague.rawPosition\n                  ? homeTeaminLeague.rawPosition\n                  : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n              1: {\n                XGOverall: parseFloat(form[0].data[1].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[1].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[1].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[1].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[1].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[1].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[1].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[1].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[1].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[1].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[1].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[1].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[1].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[1].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[1].stats.shotsOnTargetAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[1].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[1].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[1].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[1].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[1].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[1].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[1].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[1].stats.seasonBTTSPercentage_home\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition: homeTeaminLeague.rawPosition\n                  ? homeTeaminLeague.rawPosition\n                  : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n              2: {\n                XGOverall: parseFloat(form[0].data[2].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[2].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[2].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[2].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[2].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[2].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[2].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[2].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[2].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[2].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[2].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[2].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[2].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[2].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[2].stats.shotsOnTargetAVG_home\n                ),\n                AverageShots: parseFloat(\n                  form[0].data[2].stats.shotsAVG_overall\n                ),\n                AverageShotsHomeOrAway: parseFloat(\n                  form[0].data[2].stats.shotsAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[2].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[2].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[2].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[2].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[2].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[2].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[2].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[2].stats.seasonBTTSPercentage_home\n                ),\n                lastThreeForm: lastThreeFormHome,\n                LastFiveForm: lastFiveFormHome,\n                LastSixForm: lastSixFormHome,\n                LastTenForm: lastTenFormHome,\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition: homeTeaminLeague.rawPosition\n                  ? homeTeaminLeague.rawPosition\n                  : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                SeasonPPG: homeSeasonPPG,\n                WinPercentage: homeTeamWinPercentageHome,\n                LossPercentage: homeTeamLossPercentageHome,\n                DrawPercentage: homeTeamDrawPercentageHome,\n                formRun: formRunHome,\n                goalDifference:\n                  form[0].data[2].stats.seasonGoalDifference_overall,\n                goalDifferenceHomeOrAway:\n                  form[0].data[2].stats.seasonGoalDifference_home,\n                BttsPercentage:\n                  form[0].data[2].stats.seasonBTTSPercentage_overall,\n                BttsPercentageHomeOrAway:\n                  form[0].data[2].stats.seasonBTTSPercentage_home,\n                CardsTotal: form[0].data[2].stats.cardsTotal_overall,\n                CornersAverage: form[0].data[2].stats.cornersAVG_overall,\n                ScoredBothHalvesPercentage:\n                  form[0].data[2].stats.scoredBothHalvesPercentage_overall,\n                LastMatch: await convertTimestamp(\n                  form[0].data[0].last_updated_match_timestamp\n                ),\n                WDLRecord: WDLinLeagueHome,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n            },\n            away: {\n              teamName: match.awayTeam,\n              0: {\n                XGOverall: parseFloat(form[1].data[0].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[0].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[0].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[0].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[0].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[0].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[0].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[0].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[0].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[0].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[0].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[0].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[0].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[0].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[0].stats.shotsOnTargetAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[0].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[0].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[0].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[0].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[0].stats.seasonBTTSPercentage_away\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n              1: {\n                XGOverall: parseFloat(form[1].data[1].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[1].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[1].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[1].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[1].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[1].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[1].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[1].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[1].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[1].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[1].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[1].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[1].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[1].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[1].stats.shotsOnTargetAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[1].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[1].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[1].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[1].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[1].stats.seasonBTTSPercentage_away\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n              2: {\n                XGOverall: parseFloat(form[1].data[2].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[2].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[2].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[2].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[2].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[2].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[2].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[2].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[2].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[2].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[2].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[2].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[2].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[2].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[2].stats.shotsOnTargetAVG_away\n                ),\n                AverageShots: parseFloat(\n                  form[1].data[2].stats.shotsAVG_overall\n                ),\n                AverageShotsHomeOrAway: parseFloat(\n                  form[1].data[2].stats.shotsAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[2].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[2].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[2].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[2].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[2].stats.seasonBTTSPercentage_away\n                ),\n                lastThreeForm: lastThreeFormAway,\n                LastFiveForm: lastFiveFormAway,\n                LastSixForm: lastSixFormAway,\n                LastTenForm: lastTenFormAway,\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                SeasonPPG: awaySeasonPPG,\n                WinPercentage: awayTeamWinPercentageAway,\n                LossPercentage: awayTeamLossPercentageAway,\n                DrawPercentage: awayTeamDrawPercentageAway,\n                formRun: formRunAway,\n                goalDifference:\n                  form[1].data[2].stats.seasonGoalDifference_overall,\n                goalDifferenceHomeOrAway:\n                  form[1].data[2].stats.seasonGoalDifference_away,\n                BttsPercentage:\n                  form[1].data[2].stats.seasonBTTSPercentage_overall,\n                BttsPercentageHomeOrAway:\n                  form[1].data[2].stats.seasonBTTSPercentage_away,\n                CardsTotal: form[1].data[2].stats.cardsTotal_overall,\n                CornersAverage: form[1].data[2].stats.cornersAVG_overall,\n                ScoredBothHalvesPercentage:\n                  form[1].data[2].stats.scoredBothHalvesPercentage_overall,\n                LastMatch: await convertTimestamp(\n                  form[1].data[0].last_updated_match_timestamp\n                ),\n                WDLRecord: WDLinLeagueAway,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n            },\n          });\n        }\n\n        match.homeBadge = fixture.home_image;\n        match.awayBadge = fixture.away_image;\n\n        match.homePpg = fixture.home_ppg.toFixed(2);\n        match.awayPpg = fixture.away_ppg.toFixed(2);\n\n        match.lastFiveFormHome = lastFiveFormHome;\n        match.lastFiveFormAway = lastFiveFormAway;\n\n        match.homeRawPosition = homeTeaminLeague.rawPosition;\n        match.awayRawPosition = awayTeaminLeague.rawPosition;\n\n        match.homeTeamHomePosition = `${teamPositionHomeTable}${homePrefixHomeTable}`;\n        match.awayTeamAwayPosition = `${teamPositionAwayTable}${awayPrefixAwayTable}`;\n\n        match.homeTeamHomePositionRaw = teamPositionHomeTable;\n        match.awayTeamAwayPositionRaw = teamPositionAwayTable;\n\n        match.homeTeamWinPercentage = homeTeamWinPercentageHome;\n        match.awayTeamWinPercentage = awayTeamWinPercentageAway;\n\n        match.homeTeamLossPercentage = homeTeamLossPercentageHome;\n        match.awayTeamLossPercentage = awayTeamLossPercentageAway;\n\n        match.homeTeamDrawPercentage = homeTeamDrawPercentageHome;\n        match.awayTeamDrawPercentage = awayTeamDrawPercentageAway;\n        match.status = fixture.status;\n        match.over25Odds = fixture.odds_ft_over25;\n        match.btts_potential = fixture.btts_potential;\n        match.game = match.homeTeam + \" v \" + match.awayTeam;\n        match.stadium = fixture.stadium_name;\n        match.homeGoals = fixture.homeGoalCount;\n        match.awayGoals = fixture.awayGoalCount;\n\n        match.expectedGoalsHomeToDate = fixture.team_a_xg_prematch;\n        match.expectedGoalsAwayToDate = fixture.team_b_xg_prematch;\n        match.game_week = fixture.game_week;\n\n        if (match.status !== \"canceled\" || match.status !== \"suspended\") {\n          matches.push(match);\n          await createFixture(match, false);\n        }\n      }\n\n      if (matches.length > 0) {\n        ReactDOM.render(\n          <Fragment>\n            <Button\n              text={\"Get Predictions & League stats\"}\n              onClickEvent={() => getScorePrediction(day)}\n              className={\"GeneratePredictions\"}\n            />\n            <div className=\"Version\">Prediction engine v3.0.17 (09/02/24)</div>\n            <h4>New beta feature, filters &#8595;</h4>\n            <Collapsable\n              buttonText={\"Filters\"}\n              element={\n                <div className=\"FilterContainer\">\n                  <h6>\n                    Use the below filters to remove predictions that don't meet\n                    the set criteria. These will be greyed out and not included\n                    in multi-builders and ROI stats\n                  </h6>\n                  <h6>Goals for/against differential filter (BETA)</h6>\n                  <div>\n                    I'm looking for tips where the goal differential between\n                    teams is at least...\n                  </div>\n                  <SlideDiff\n                    value=\"0\"\n                    text=\"all games\"\n                    useCase=\"gd\"\n                    lower=\"0\"\n                    upper=\"30\"\n                  ></SlideDiff>\n                  <h6>Goals for/against home or away differential filter (BETA)</h6>\n                  <div>\n                    I'm looking for tips where the goal differential (home or away only) between\n                    teams is at least...\n                  </div>\n                  <SlideDiff\n                    value=\"0\"\n                    text=\"all games\"\n                    useCase=\"gdHorA\"\n                    lower=\"0\"\n                    upper=\"30\"\n                  ></SlideDiff>\n                  <Fragment>\n                    <h6>XG for/against differential filter (BETA)</h6>\n                    <div>\n                      I'm looking for tips where the XG differential between\n                      teams is at least...\n                    </div>\n                    <SlideDiff\n                      value=\"0\"\n                      text=\"all games\"\n                      useCase=\"xg\"\n                      lower=\"0\"\n                      upper=\"30\"\n                    ></SlideDiff>\n                  </Fragment>\n                  <Fragment>\n                    <h6>Last 10 points differential filter (BETA)</h6>\n                    <div>\n                      I'm looking for tips where the points differential between\n                      teams is at least...\n                    </div>\n                    <SlideDiff\n                      value=\"0\"\n                      text=\"all games\"\n                      useCase=\"last10\"\n                      lower=\"0\"\n                      upper=\"30\"\n                    ></SlideDiff>\n                  </Fragment>\n                  <Fragment>\n                    <h6>Choose your risk profile</h6>\n                    <div>\n                      I'm looking for tips where the odds are between...\n                    </div>\n                    <Slide value=\"1\" text=\"all games\"></Slide>\n                  </Fragment>\n                </div>\n              }\n            />\n            ,\n          </Fragment>,\n          document.getElementById(\"GeneratePredictions\")\n        );\n      }\n\n      // }\n    }\n\n    ReactDOM.render(\n      <div>\n        <div className=\"LoadingText\"></div>\n      </div>,\n      document.getElementById(\"Loading\")\n    );\n\n    async function updateResults(bool) {\n      console.log(\"updating results\");\n      if (allLeagueResultsArrayOfObjects.length > 0 && bool === true) {\n        await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}results`, {\n          method: \"DELETE\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }).then(async () => {\n          await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}results`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(allLeagueResultsArrayOfObjects),\n          });\n        });\n      } else {\n        console.log(\"EMPTY RESULTS\");\n      }\n    }\n\n    if (!isStoredLocally) {\n      await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}allForm/${date}`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ allForm }),\n      });\n      await updateResults(true);\n    }\n    if (!leaguesStored) {\n      await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${todaysDate}`,\n        {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ leagueArray }),\n        }\n      );\n    }\n    // const allFixtures = await RenderAllFixtures(matches, false)\n    ReactDOM.render(\n      <RenderAllFixtures matches={matches} result={false} bool={false} />,\n      document.getElementById(\"FixtureContainer\")\n    );\n    // ReactDOM.render(<RenderAllFixtures matches={matches} bool={false}/>),document.getElementById(\"FixtureContainer\")\n    setTimeout(() => {\n      isFunctionRunning = false;\n    }, 3000);\n  }\n}\n","import React from \"react\";\n\nfunction HeadToHead(props) {\n  return (\n    <ul className={props.className} style={props.style}>\n      <li key=\"Stadium\" className=\"Stadium\" data-cy={props.name + \"Stadium\"}>\n        {`Venue - ${props.stadium}`}\n      </li>\n      <div className=\"KeyStatsOne\">\n      <li key=\"h2h\" className=\"h2h\" data-cy={props.name + \"h2h\"}>\n        {`Matches played: ${props.matches}`}\n      </li>\n      <li key=\"homeWins\" className=\"homeWins\" data-cy={props.name + \"homeWins\"}>\n        {`${props.homeTeam} wins: ${props.homeWins}`}\n      </li>\n      <li key=\"awayWins\" className=\"awayWins\" data-cy={props.name + \"awayWins\"}>\n        {`${props.awayTeam} wins: ${props.awayWins}`}\n      </li>\n      <li key=\"draws\" className=\"draws\" data-cy={props.name + \"draws\"}>\n        {`Draws: ${props.draws}`}\n      </li>\n      </div>\n      <div className=\"KeyStatsTwo\">\n      <li\n        key=\"averageGoals\"\n        className=\"averageGoals\"\n        data-cy={props.name + \"averageGoals\"}\n      >\n        {`Average goals in fixture: ${props.averageGoals}`}\n      </li>\n      <li\n        key=\"bestHomeOdds\"\n        className=\"bestHomeOdds\"\n        data-cy={props.name + \"bestHomeOdds\"}\n      >\n        {`Best oods for home win @: ${props.bestHomeOdds}`}\n      </li>\n      <li\n        key=\"bestAwayOdds\"\n        className=\"bestAwayOdds\"\n        data-cy={props.name + \"bestAwayOdds\"}\n      >\n        {`Best oods for away win @: ${props.bestAwayOdds}`}\n      </li>\n      </div>\n      <li\n        key=\"lastGameDetail\"\n        className=\"LastGameDetail\"\n        data-cy={props.name + \"Last\"}\n      >\n        {`Last meeting - ${props.lastGameStadiumName} ${props.lastGameDate}`}\n      </li>\n      <div className=\"LastGameOverview\">\n        <div\n          key=\"lastGame\"\n          className=\"LastGameHome\"\n          data-cy={props.name + \"LastGame\"}\n        >\n          {`${props.lastGameHomeTeam}`}\n        </div>\n        <span className=\"LastGameScore\">{`${props.lastGameHomeGoals}`}</span>\n        <span className=\"LastGameScore\">{`${props.lastGameAwayGoals}`}</span>\n        <div className=\"LastGameAway\">{`${props.lastGameAwayTeam}`}</div>\n      </div>\n\n      <li\n        key=\"secondToLastGameDetail\"\n        className=\"secondToLastGameDetail\"\n        data-cy={props.name + \"secondToLast\"}\n      >\n        {`Second to last meeting - ${props.secondToLastGameStadiumName} ${props.secondToLastGameDate}`}\n      </li>\n      <div className=\"LastGameOverview\">\n        <div\n          key=\"lastGame\"\n          className=\"LastGameHome\"\n          data-cy={props.name + \"LastGame\"}\n        >\n          {`${props.secondToLastGameHomeTeam}`}\n        </div>\n        <span className=\"LastGameScore\">{`${props.secondToLastGameHomeGoals}`}</span>\n        <span className=\"LastGameScore\">{`${props.secondToLastGameAwayGoals}`}</span>\n        <div className=\"LastGameAway\">\n          {`${props.secondToLastGameAwayTeam}`}\n        </div>\n      </div>\n    </ul>\n  );\n}\n\nexport default HeadToHead;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    // backgroundColor: \"#dedddd\",\n    padding: 10,\n    textAlign: \"center\",\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    // border: \"none\",\n    margin: \"none\",\n    color: 'white',\n    lineHeight: '2em',\n    backgroundColor: '#030061',\n  },\n  body: {\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    padding: 10,\n    color: 'white',\n    // border: \"none\",\n    margin: \"none\",\n    backgroundColor: '#030061',\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#030061\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#030052\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\n\nexport default function CustomizedTables(props) {\n\n\n  return (\n    <TableContainer className=\"StatsTable\">\n      <Table aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Stat</StyledTableCell>\n            <StyledTableCell>H2H history</StyledTableCell>\n            <StyledTableCell>XGTipping forecast</StyledTableCell>\n            <StyledTableCell>Odds (yes)</StyledTableCell>\n            <StyledTableCell>Odds (no)</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        <StyledTableRow key=\"O05\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 0.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o05Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o05Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u05Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O15\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 1.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o15Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o15Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u15Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O25\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 2.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o25Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o25Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u25Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O35\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 3.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o35Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o35Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u35Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"BTTS\" className=\"BTTSStats\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              BTTS %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.BTTSStat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSForecast}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSOdds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSOddsNo}</StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport HeadToHead from \"../components/HeadToHead\";\nimport { Fragment } from \"react\";\nimport CustomizedTables from \"../components/Table\";\n\nexport async function getTeamStats(\n  id,\n  home,\n  away,\n  homeBTTS,\n  homeOnlyBTTS,\n  awayBTTS,\n  awayOnlyBTTS\n) {\n  let identifier = id;\n  let bestHomeOdds;\n  let bestHomeOddsProvider;\n  let bestAwayOdds;\n  let bestAwayOddsProvider;\n\n  let match = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}match/${identifier}`\n  );\n  await match.json().then(async (match) => {\n    let matchArr = match.data.h2h.previous_matches_ids;\n    let previousMatchDetails;\n    let secondToPreviousMatchDetails;\n\n    let oddsComparisonHomeArray = [];\n    let oddsComparisonAwayArray = [];\n\n    if (match.data.odds_comparison) {\n      oddsComparisonHomeArray = match.data.odds_comparison[\"FT Result\"][1];\n      oddsComparisonAwayArray = match.data.odds_comparison[\"FT Result\"][2];\n\n      let sortedHomeOdds = Object.entries(oddsComparisonHomeArray).sort(\n        (a, b) => b[1] - a[1]\n      );\n      let sortedAwayOdds = Object.entries(oddsComparisonAwayArray).sort(\n        (a, b) => b[1] - a[1]\n      );\n\n      bestHomeOddsProvider = sortedHomeOdds[0][0];\n      bestHomeOdds = sortedHomeOdds[0][1];\n      bestAwayOddsProvider = sortedAwayOdds[0][0];\n      bestAwayOdds = sortedAwayOdds[0][1];\n    } else {\n      bestHomeOddsProvider = \"N/A\";\n      bestHomeOdds = \"N/A\";\n      bestAwayOddsProvider = \"N/A\";\n      bestAwayOdds = \"N/A\";\n    }\n\n    async function getBTTSPercentage(\n      homeToal,\n      home,\n      awayTotal,\n      away,\n      fixtureHistory\n    ) {\n      let total = homeToal + home + awayTotal + away + fixtureHistory;\n      return total / 5;\n    }\n\n    async function getFairOdds(impliedProbability) {\n      let impliedProbabilityDivided = impliedProbability / 100;\n      return (1 / impliedProbabilityDivided).toFixed(2);\n    }\n\n    if (match.data.h2h.previous_matches_results.totalMatches > 0) {\n      matchArr.sort((a, b) => b.date_unix - a.date_unix);\n      let lastMatch = matchArr[0].id;\n      let secondMatchExists = true;\n      let secondToLastMatch =\n        matchArr[1] !== undefined ? matchArr[1].id : false;\n\n      let previousMatch = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}match/${lastMatch}`\n      );\n      let dateObject;\n      let date;\n      let date2;\n      await previousMatch.json().then(async (game) => {\n        previousMatchDetails = game.data;\n        const unixTimestamp = previousMatchDetails.date_unix;\n        const milliseconds = unixTimestamp * 1000;\n        dateObject = new Date(milliseconds);\n        date = `${dateObject.getDate()}/${\n          dateObject.getMonth() + 1\n        }/${dateObject.getFullYear()}`;\n\n        let secondToPreviousMatch;\n        let dateObject2;\n\n        if (secondMatchExists !== false) {\n          secondToPreviousMatch = await fetch(\n            `${process.env.REACT_APP_EXPRESS_SERVER}match/${secondToLastMatch}`\n          );\n          await secondToPreviousMatch.json().then((game) => {\n            secondToPreviousMatchDetails = game.data;\n            const unixTimestamp = secondToPreviousMatchDetails.date_unix;\n            const milliseconds = unixTimestamp * 1000;\n            dateObject2 = new Date(milliseconds);\n            date2 = `${dateObject2.getDate()}/${\n              dateObject2.getMonth() + 1\n            }/${dateObject2.getFullYear()}`;\n          });\n        }\n      });\n\n      const BTTSForecast = await getBTTSPercentage(\n        homeBTTS,\n        homeOnlyBTTS,\n        awayBTTS,\n        awayOnlyBTTS,\n        match.data.h2h.betting_stats.bttsPercentage\n      );\n      const fairOddsBTTSYes = await getFairOdds(BTTSForecast);\n      const fairOddsBTTSNo = await getFairOdds(100 - BTTSForecast);\n\n      ReactDOM.render(\n        <Fragment>\n          <h3>Fixture history</h3>\n          <HeadToHead\n            className={\"PreviousMatchStats\"}\n            homeTeam={home}\n            awayTeam={away}\n            stadium={match.data.stadium_name}\n            matches={match.data.h2h.previous_matches_results.totalMatches}\n            homeWins={match.data.h2h.previous_matches_results.team_a_wins}\n            awayWins={match.data.h2h.previous_matches_results.team_b_wins}\n            draws={match.data.h2h.previous_matches_results.draw}\n            averageGoals={match.data.h2h.betting_stats.avg_goals}\n            bestHomeOdds={`${bestHomeOddsProvider} - ${bestHomeOdds}`}\n            bestAwayOdds={`${bestAwayOddsProvider} - ${bestAwayOdds}`}\n            lastGameStadiumName={\n              previousMatchDetails.stadium_name\n                ? previousMatchDetails.stadium_name\n                : \"-\"\n            }\n            lastGameHomeGoals={\n              previousMatchDetails.homeGoalCount !== undefined\n                ? previousMatchDetails.homeGoalCount\n                : \"-\"\n            }\n            lastGameAwayGoals={\n              previousMatchDetails.awayGoalCount !== undefined\n                ? previousMatchDetails.awayGoalCount\n                : \"-\"\n            }\n            lastGameHomeTeam={\n              previousMatchDetails.home_name\n                ? previousMatchDetails.home_name\n                : \"-\"\n            }\n            lastGameAwayTeam={\n              previousMatchDetails.away_name\n                ? previousMatchDetails.away_name\n                : \"-\"\n            }\n            lastGameDate={!isNaN(date) ? date : \"-\"}\n            secondToLastGameStadiumName={\n              secondToPreviousMatchDetails.stadium_name\n                ? secondToPreviousMatchDetails.stadium_name\n                : \"-\"\n            }\n            secondToLastGameHomeGoals={\n              secondToPreviousMatchDetails.homeGoalCount !== undefined\n                ? secondToPreviousMatchDetails.homeGoalCount\n                : \"-\"\n            }\n            secondToLastGameAwayGoals={\n              secondToPreviousMatchDetails.awayGoalCount !== undefined\n                ? secondToPreviousMatchDetails.awayGoalCount\n                : \"-\"\n            }\n            secondToLastGameHomeTeam={\n              secondToPreviousMatchDetails.home_name\n                ? secondToPreviousMatchDetails.home_name\n                : \"-\"\n            }\n            secondToLastGameAwayTeam={\n              secondToPreviousMatchDetails.away_name\n                ? secondToPreviousMatchDetails.away_name\n                : \"-\"\n            }\n            secondToLastGameDate={!isNaN(date2) ? date2 : \"-\"}\n          ></HeadToHead>\n          <CustomizedTables\n            o05Stat={match.data.h2h.betting_stats.over05Percentage}\n            o15Stat={match.data.h2h.betting_stats.over15Percentage}\n            o15Forecast={match.data.o15_potential}\n            o05Odds={match.data.odds_ft_over05}\n            u05Odds={match.data.odds_ft_under05}\n            o15Odds={match.data.odds_ft_over15}\n            u15Odds={match.data.odds_ft_under15}\n            o25Stat={match.data.h2h.betting_stats.over25Percentage}\n            o25Forecast={match.data.o25_potential}\n            o25Odds={match.data.odds_ft_over25}\n            u25Odds={match.data.odds_ft_under25}\n            o35Stat={match.data.h2h.betting_stats.over35Percentage}\n            o35Forecast={match.data.o35_potential}\n            o35Odds={match.data.odds_ft_over35}\n            u35Odds={match.data.odds_ft_under35}\n            BTTSStat={match.data.h2h.betting_stats.bttsPercentage}\n            BTTSForecast={`${BTTSForecast}%`}\n            BTTSOdds={`${match.data.odds_btts_yes}\\n Fair odds: ${fairOddsBTTSYes}`}\n            BTTSOddsNo={`${match.data.odds_btts_no}\\n Fair odds: ${fairOddsBTTSNo}`}\n            CornersStat={\"–\"}\n            CornersForecast={match.data.corners_potential}\n            CornersOdds={match.data.odds_corners_over_105}\n          />\n        </Fragment>,\n        document.getElementById(`H2HStats${identifier}`)\n      );\n    } else {\n      ReactDOM.render(\n        <div>No fixture history found</div>,\n        document.getElementById(`H2HStats${identifier}`)\n      );\n    }\n  });\n}\n","async function getOverOrUnderText(xgSum) {\n  let overUnderAchievingSum = xgSum;\n  let text;\n  switch (true) {\n    case overUnderAchievingSum > 1.5:\n      text =\n        \"Underachieving drastically against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > 1.25 && overUnderAchievingSum <= 1.5:\n      text =\n        \"Underachieving to a large degree against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > 1 && overUnderAchievingSum <= 1.25:\n      text = \"Underachieving against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > 0.75 && overUnderAchievingSum <= 1:\n      text =\n        \"Underachieving to a small degree against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > 0.4 && overUnderAchievingSum <= 0.75:\n      text =\n        \"Underachieving slighly against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > -0.4 && overUnderAchievingSum <= 0.4:\n      text =\n        \"Roughly tracking on par with their expected goal difference.\";\n      break;\n\n    case overUnderAchievingSum < -0.4 && overUnderAchievingSum >= -0.75:\n      text =\n        \"Overachieving slighly against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum < -0.75 && overUnderAchievingSum >= -1:\n      text =\n        \"Overachieving to a small degree against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum < -1 && overUnderAchievingSum >= -1.25:\n      text = \"Overachieving against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum < -1.25 && overUnderAchievingSum >= -1.5:\n      text =\n        \"Overachieving to a large degree against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum < -1.5:\n      text =\n        \"Overachieving drastically against their expected goal difference.\";\n      break;\n    default:\n      text = \"\";\n      break;\n  }\n  return text;\n}\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nasync function getXGDifferential(xgFor, xgAgainst, goalsFor, goalsAgainst) {\n  let xgDiff = xgFor - xgAgainst;\n  let goalDiff = goalsFor - goalsAgainst;\n  let compareXgAndGoalDiff = await diff(xgDiff, goalDiff);\n\n  return compareXgAndGoalDiff;\n}\n\nasync function getAttackingSummary(goalsRecent, goalsLongTerm) {\n\n  let text;\n  if (goalsRecent >= 3) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Free scoring and improving in front of goal recently.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Free scoring and consistent in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Free scoring but less so recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 3 && goalsRecent >= 2) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text =\n          \"Impressive scoring stats and improving in front of goal recently.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Impressive scoring stats and consistent in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Impressive scoring stats but less so recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 2 && goalsRecent >= 1) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Decent scoring stats and improving in front of goal recently.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Decent scoring stats and consistent in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Decent scoring stats but less so recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 1 && goalsRecent > 0) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Poor scoring stats but improving in front of goal recently.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Poor scoring stats and consistently poor in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Poor scoring stats showing no signs of improvement.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent === 0) {\n    switch (true) {\n      case goalsRecent === 0:\n        text = \"Woeful goal stats in recent games.\";\n        break;\n      default:\n        text = \"\";\n        break;\n    }\n  }\n  return text;\n}\n\nasync function getDefenceSummary(cleansheetStat) {\n  let text;\n  switch (true) {\n    case cleansheetStat > 80:\n      text = `Incredibly strong defensively, with ${cleansheetStat}% of their games ending in a cleansheet`;\n      break;\n    case cleansheetStat > 60 && cleansheetStat <= 80:\n      text = `Very strong defensively, with ${cleansheetStat}% of their games ending in a cleansheet`;\n      break;\n    case cleansheetStat > 40 && cleansheetStat <= 60:\n      text = `Defensively impressive, with ${cleansheetStat}% of their games ending in a cleansheet`;\n      break;\n    case cleansheetStat > 20 && cleansheetStat <= 40:\n      text = `Defensively, ${cleansheetStat}% of their games have ended in a cleansheet`;\n      break;\n    case cleansheetStat > 1 && cleansheetStat <= 20:\n      text = `Defensively frail, with only ${cleansheetStat}% of their games ending in a cleansheet`;\n      break;\n      case cleansheetStat === 0:\n        text = `Defensively weak, with ${cleansheetStat}% of their games ending in a cleansheet`;\n        break;\n    default:\n      break;\n  }\n  return text;\n}\n\nasync function GenerateFormSummary(form, lastx, recentForm) {\n  let text;\n  // let six = lastx[2];\n  let ten = lastx[1];\n  let five = lastx[0];\n\n  let xgSum = await getXGDifferential(\n    form.XGOverall,\n    form.XGAgainstAvgOverall,\n    form.ScoredOverall / 10,\n    form.ConcededOverall / 10\n  );\n  let xgText = await getOverOrUnderText(xgSum);\n  let attackString = await getAttackingSummary(\n    form.last5Goals,\n    form.last10Goals\n  );\n  let defenceString = await getDefenceSummary(form.CleanSheetPercentage);\n  let pointsAverageTotal =\n    (parseFloat(five) + parseFloat(ten)) / 2;\n\n  if (pointsAverageTotal >= 2.6) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Outstanding recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Outstanding recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Outstanding recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 2.3) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Excellent recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Excellent recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Excellent recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 2) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Very good recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Very good recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Very good recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 1.7) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Good recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Good recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Good recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 1.4) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Fairly good recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Fairly good recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Fairly good recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 1.1) {\n    console.log(2);\n    switch (true) {\n      case five > ten:\n        text =\n          \"Average recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Average recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Average recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 0.8) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Poor recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Poor recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Poor recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 0.5) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Very poor recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Very poor recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Very poor recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal < 0.5) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Terrible recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Terrible recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Terrible recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else {\n    console.log(pointsAverageTotal);\n  }\n  return text + ` ${xgText} ${attackString} ${defenceString}`;\n}\n\nexport default GenerateFormSummary;\n","// import { light } from \"@material-ui/core/styles/createPalette\";\n// import { toBePartiallyChecked } from \"@testing-library/jest-dom/dist/matchers\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  ArcElement,\n  LineElement,\n  Filler,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Line, Radar, Bar } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  ArcElement,\n  Filler,\n  BarElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport function Chart(props) {\n  let length;\n  let depth;\n\n  if (props.type === \"Points over time\") {\n    length = props.data1.length * 3;\n    depth = 0;\n  } else if (props.type === \"Rolling average points over last 10\") {\n    length = Math.abs(props.height);\n    depth = 0;\n  } else if (Math.abs(props.height) > Math.abs(props.depth)) {\n    length = Math.abs(props.height);\n    depth = -Math.abs(props.height);\n  } else if (Math.abs(props.height) < Math.abs(props.depth)) {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  } else {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  }\n\n  const options = {\n    color: \"black\",\n    responsive: true,\n    aspectRatio: 1.2,\n    maintainAspectRatio: true,\n    layout: {\n      padding: 3,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    scales: {\n      y: {\n        suggestedMin: depth,\n        suggestedMax: length,\n        // suggestedMax: Math.max(...props.data1) > 3 ? Math.max(...props.data1) : 3,\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          font: {\n            size: 12,\n          },\n        },\n      },\n      x: {\n        title: {\n          display: false,\n          text: \"Last X Games\",\n          font: {\n            size: 10,\n          },\n        },\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          display: false,\n          font: {\n            size: 12,\n          },\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 5,\n        },\n      },\n      title: {\n        display: true,\n        text: props.type,\n        font: {\n          size: 14,\n          color: \"black\",\n        },\n      },\n    },\n  };\n\n  const labels = Array.from(props.data1.keys());\n\n  let data = {\n    labels,\n    datasets: [\n      {\n        label: props.team1,\n        font: {\n          color: \"black\",\n        },\n        data: props.data1,\n        borderColor: \"#030061\",\n        borderWidth: 2,\n        backgroundColor: \"#030061\",\n        tension: props.tension,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        borderColor: \"#970d00\",\n        borderWidth: 2,\n        backgroundColor: \"#970d00\",\n        tension: props.tension,\n      },\n    ],\n  };\n\n  return <Line options={options} data={data} />;\n}\n\nexport function RadarChart(props) {\n  const options = {\n    color: \"black\",\n    scales: {\n      r: {\n        angleLines: {\n          display: false,\n        },\n        suggestedMin: 0,\n        suggestedMax: 1,\n        ticks: {\n          precision: 0,\n          display: false,\n        },\n        // grid: {\n        //     circular: true,\n        //   }\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 10,\n        },\n      },\n      title: {\n        display: true,\n        text: \"XG Tipping Strength Ratings\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  let data = {\n    labels: [\"Attack rating\", \"Defence rating\", \"Ball retention\", \"XG For\", \"XG Against\", \"Directness\", \"Attacking precision\"],\n    datasets: [\n      {\n        label: props.team1,\n        data: props.data,\n        fill: true,\n        backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n        borderColor: \"#030061\",\n        pointBackgroundColor: \"#030061\",\n        pointBorderColor: \"#fff\",\n        pointHoverBackgroundColor: \"#fff\",\n        pointHoverBorderColor: \"rgb(255, 99, 132)\",\n        borderWidth: 2,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        fill: true,\n        backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n        borderColor: \"#970d00\",\n        pointBackgroundColor: \"#970d00\",\n        pointBorderColor: \"#fff\",\n        pointHoverBackgroundColor: \"#fff\",\n        pointHoverBorderColor: \"rgb(54, 162, 235)\",\n        borderWidth: 2,\n      },\n    ],\n  };\n\n  return <Radar options={options} data={data} />;\n}\n\nexport function BarChart(props) {\n  const datasetOne = props.data1;\n  const datasetTwo = props.data2;\n  const sum = datasetTwo.map(function (num, idx) {\n    return num - datasetOne[idx];\n  });\n\n  const max = Math.max(...sum);\n  const min = Math.min(...sum);\n\n  const largest = findLargestNum(max, min);\n\n  function findLargestNum(numOne, numTwo) {\n    const tempArr = [];\n    const firstNum = Math.abs(numOne);\n    const secondNum = Math.abs(numTwo);\n    tempArr.push(firstNum, secondNum);\n\n    return Math.max(...tempArr);\n  }\n\n  const options = {\n    indexAxis: \"y\",\n    // Elements options apply to all of the options unless overridden in a dataset\n    // In this case, we are setting the border of each horizontal bar to be 2px wide\n    aspectRatio: 1.3,\n    elements: {\n      bar: {\n        borderWidth: 2,\n      },\n    },\n    scales: {\n      x: {\n        min: -4,\n        max: 4,\n        ticks: {\n          display: false,\n        },\n      },\n      y: {\n        ticks: {\n          font: {\n            size: 10,\n          },\n        },\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: false,\n      },\n      title: {\n        display: true,\n        text: \"Comparison - Home Team | Away Team \",\n      },\n    },\n  };\n\n  const labels = [\n    \"Highest Goals\",\n    \"Fewest Conceeded\",\n    \"Last 5 PPG\",\n    \"Highest XG\",\n    \"Fewest XG Conceeded\",\n    \"Shots On Target\",\n    \"Dangerous Attacks\",\n    \"Av. Possession\",\n    \"Home/Away Goal Diff\",\n    \"Corners\",\n  ];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        // label: 'Dataset 1',\n        legend: {\n          display: false,\n        },\n        data: sum,\n        backgroundColor(context) {\n          const index = context.dataIndex;\n          const value = context.dataset.data[index];\n          return value < 0 ? \"#030061\" : \"#970d00\";\n        },\n      },\n    ],\n  };\n\n  return <Bar options={options} data={data} />;\n}\n","import ReactDOM from \"react-dom\";\nimport { Button } from \"../components/Button\";\nimport Stats from \"../components/createStatsDiv\";\nimport Div from \"../components/Div\";\nimport { allForm } from \"../logic/getFixtures\";\nimport { getTeamStats } from \"../logic/getTeamStats\";\nimport { getPointsFromLastX } from \"../logic/getScorePredictions\";\nimport GenerateFormSummary from \"../logic/compareFormTrend\";\nimport { Chart, RadarChart, BarChart } from \"../components/Chart\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { clicked } from \"../logic/getScorePredictions\";\n\nexport async function calculateAttackingStrength(stats) {\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    // averagePossession: 0.15,\n    \"Average Dangerous Attacks\": 0.15,\n    \"Average Shots\": 0.1,\n    \"Average Shots On Target\": 0.15,\n    \"Average Expected Goals\": 0.15,\n    \"Recent XG\": 0.15,\n    \"Average Goals\": 0.3,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    // averagePossession: { min: 25, max: 75 },\n    \"Average Dangerous Attacks\": { min: 30, max: 75 }, // Adjust the max value as needed\n    \"Average Shots\": { min: 5, max: 17 }, // Adjust the max value as needed\n    \"Average Shots On Target\": { min: 2, max: 9 }, // Adjust the max value as needed\n    \"Average Expected Goals\": { min: 0, max: 3 }, // Adjust the max value as needed\n    \"Recent XG\": { min: 0, max: 3 }, // Adjust the max value as needed\n    \"Average Goals\": { min: 0, max: 3 }, // Adjust the max value as needed\n  };\n\n  // Normalize each metric value and calculate the weighted sum\n  let weightedSum = 0;\n  for (const metric in stats) {\n    if (\n      stats.hasOwnProperty(metric) &&\n      weights.hasOwnProperty(metric) &&\n      ranges.hasOwnProperty(metric)\n    ) {\n      const normalizedValue =\n        (stats[metric] - ranges[metric].min) /\n        (ranges[metric].max - ranges[metric].min);\n      weightedSum += normalizedValue * weights[metric];\n    } else {\n      console.log(metric);\n    }\n  }\n\n  return parseFloat(weightedSum.toFixed(2));\n}\n\nexport async function calculateDefensiveStrength(stats) {\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    \"Clean Sheet Percentage\": 0.3,\n    \"Average XG Against\": 0.2,\n    \"Recent XG Against\": 0.2,\n    \"Average Goals Against\": 0.3,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    \"Clean Sheet Percentage\": { min: 0, max: 100 },\n    \"Average XG Against\": { min: 0, max: 3 }, // Adjust the max value as needed\n    \"Recent XG Against\": { min: 0, max: 3 },\n    \"Average Goals Against\": { min: 0, max: 3 }, // Adjust the max value as needed\n  };\n\n  // Normalize each metric value and calculate the weighted sum\n  let weightedSum = 0;\n  for (const metric in stats) {\n    if (\n      stats.hasOwnProperty(metric) &&\n      weights.hasOwnProperty(metric) &&\n      ranges.hasOwnProperty(metric)\n    ) {\n      const normalizedValue =\n        1 -\n        (stats[metric] - ranges[metric].min) /\n          (ranges[metric].max - ranges[metric].min);\n      weightedSum += normalizedValue * weights[metric];\n    }\n  }\n\n  return parseFloat(weightedSum.toFixed(2));\n}\n\nexport async function calculateMetricStrength(metricName, metricValue) {\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    averagePossession: 1,\n    xgFor: 1,\n    xgAgainst: 1,\n    directnessOverall: 1,\n    accuracyOverall: 1,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    averagePossession: { min: 20, max: 80 },\n    xgFor: { min: 0.1, max: 3 },\n    xgAgainst: { min: 0.1, max: 3 },\n    directnessOverall: { min: 0.5, max: 4 },\n    accuracyOverall: { min: 2, max: 10 },\n  };\n\n  // Ensure the metric is valid and exists in the weights and ranges objects\n  if (\n    !weights.hasOwnProperty(metricName) ||\n    !ranges.hasOwnProperty(metricName)\n  ) {\n    throw new Error(\"Invalid metric name or missing normalization range.\");\n  }\n\n  // Normalize the metric value\n  const normalizedValue =\n    (metricValue - ranges[metricName].min) /\n    (ranges[metricName].max - ranges[metricName].min);\n\n  // Calculate the weighted score\n  const weightedScore = normalizedValue * weights[metricName];\n\n  return parseFloat(weightedScore.toFixed(2));\n}\n\n// export async function getDefenceStrength(goalsAgainst) {\n//   let strength;\n//   switch (true) {\n//     case goalsAgainst >= 2.8:\n//       strength = 1;\n//       break;\n//     case goalsAgainst >= 2.5 && goalsAgainst < 2.8:\n//       strength = 2;\n//       break;\n//     case goalsAgainst >= 2.2 && goalsAgainst < 2.5:\n//       strength = 3;\n//       break;\n//     case goalsAgainst >= 1.9 && goalsAgainst < 2.2:\n//       strength = 4;\n//       break;\n//     case goalsAgainst >= 1.6 && goalsAgainst < 1.9:\n//       strength = 5;\n//       break;\n//     case goalsAgainst >= 1.3 && goalsAgainst < 1.6:\n//       strength = 6;\n//       break;\n//     case goalsAgainst >= 1 && goalsAgainst < 1.3:\n//       strength = 7;\n//       break;\n//     case goalsAgainst >= 0.7 && goalsAgainst < 1:\n//       strength = 8;\n//       break;\n//     case goalsAgainst >= 0.4 && goalsAgainst < 0.7:\n//       strength = 9;\n//       break;\n//     case goalsAgainst < 0.4:\n//       strength = 10;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getPossessionStrength(possession) {\n//   let strength;\n//   switch (true) {\n//     case possession >= 68:\n//       strength = 10;\n//       break;\n//     case possession >= 64 && possession < 68:\n//       strength = 9;\n//       break;\n//     case possession >= 60 && possession < 64:\n//       strength = 8;\n//       break;\n//     case possession >= 56 && possession < 60:\n//       strength = 7;\n//       break;\n//     case possession >= 52 && possession < 56:\n//       strength = 6;\n//       break;\n//     case possession >= 48 && possession < 52:\n//       strength = 5;\n//       break;\n//     case possession >= 44 && possession < 48:\n//       strength = 4;\n//       break;\n//     case possession >= 40 && possession < 44:\n//       strength = 3;\n//       break;\n//     case possession >= 35 && possession < 40:\n//       strength = 2;\n//       break;\n//     case possession < 35:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getShotsStrength(Shots) {\n//   let strength;\n//   switch (true) {\n//     case Shots >= 15:\n//       strength = 10;\n//       break;\n//     case Shots >= 14.25 && Shots < 15:\n//       strength = 9;\n//       break;\n//     case Shots >= 13.5 && Shots < 14.25:\n//       strength = 8;\n//       break;\n//     case Shots >= 12.75 && Shots < 13.5:\n//       strength = 7;\n//       break;\n//     case Shots >= 12 && Shots < 12.75:\n//       strength = 6;\n//       break;\n//     case Shots >= 11.25 && Shots < 12:\n//       strength = 5;\n//       break;\n//     case Shots >= 10.5 && Shots < 11.25:\n//       strength = 4;\n//       break;\n//     case Shots >= 9.75 && Shots < 10.5:\n//       strength = 3;\n//       break;\n//     case Shots >= 9 && Shots < 9.75:\n//       strength = 2;\n//       break;\n//     case Shots < 9:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getShotsStrengthHorA(Shots) {\n//   let strength;\n//   switch (true) {\n//     case Shots >= 19.5:\n//       strength = 10;\n//       break;\n//     case Shots >= 18 && Shots < 19.5:\n//       strength = 9;\n//       break;\n//     case Shots >= 17 && Shots < 18:\n//       strength = 8;\n//       break;\n//     case Shots >= 15.5 && Shots < 17:\n//       strength = 7;\n//       break;\n//     case Shots >= 14 && Shots < 15.5:\n//       strength = 6;\n//       break;\n//     case Shots >= 12.5 && Shots < 14:\n//       strength = 5;\n//       break;\n//     case Shots >= 11 && Shots < 12.5:\n//       strength = 4;\n//       break;\n//     case Shots >= 9.5 && Shots < 11:\n//       strength = 3;\n//       break;\n//     case Shots >= 8 && Shots < 9.5:\n//       strength = 2;\n//       break;\n//     case Shots < 8:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGForStrength(XG) {\n//   let strength;\n//   switch (true) {\n//     case XG >= 2.9:\n//       strength = 10;\n//       break;\n//     case XG >= 2.6 && XG < 2.9:\n//       strength = 9;\n//       break;\n//     case XG >= 2.3 && XG < 2.6:\n//       strength = 8;\n//       break;\n//     case XG >= 2 && XG < 2.3:\n//       strength = 7;\n//       break;\n//     case XG >= 1.7 && XG < 2:\n//       strength = 6;\n//       break;\n//     case XG >= 1.4 && XG < 1.7:\n//       strength = 5;\n//       break;\n//     case XG >= 1.1 && XG < 1.4:\n//       strength = 4;\n//       break;\n//     case XG >= 0.8 && XG < 1.1:\n//       strength = 3;\n//       break;\n//     case XG >= 0.5 && XG < 0.8:\n//       strength = 2;\n//       break;\n//     case XG < 0.5:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGAgainstStrength(XGAgainst) {\n//   let strength;\n//   switch (true) {\n//     case XGAgainst >= 2.9:\n//       strength = 1;\n//       break;\n//     case XGAgainst >= 2.6 && XGAgainst < 2.9:\n//       strength = 2;\n//       break;\n//     case XGAgainst >= 2.3 && XGAgainst < 2.6:\n//       strength = 3;\n//       break;\n//     case XGAgainst >= 2 && XGAgainst < 2.3:\n//       strength = 4;\n//       break;\n//     case XGAgainst >= 1.7 && XGAgainst < 2:\n//       strength = 5;\n//       break;\n//     case XGAgainst >= 1.4 && XGAgainst < 1.7:\n//       strength = 6;\n//       break;\n//     case XGAgainst >= 1.1 && XGAgainst < 1.4:\n//       strength = 7;\n//       break;\n//     case XGAgainst >= 0.8 && XGAgainst < 1.1:\n//       strength = 8;\n//       break;\n//     case XGAgainst >= 0.5 && XGAgainst < 0.8:\n//       strength = 9;\n//       break;\n//     case XGAgainst < 0.5:\n//       strength = 10;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGDifferentialStrength(XGDiff) {\n//   let strength;\n//   switch (true) {\n//     case XGDiff >= 1.5:\n//       strength = 10;\n//       break;\n//     case XGDiff >= 1 && XGDiff < 1.5:\n//       strength = 9;\n//       break;\n//     case XGDiff >= 0.5 && XGDiff < 1:\n//       strength = 8;\n//       break;\n//     case XGDiff >= 0.25 && XGDiff < 0.5:\n//       strength = 7;\n//       break;\n//     case XGDiff > 0 && XGDiff < 0.25:\n//       strength = 6;\n//       break;\n//     case XGDiff <= 0 && XGDiff > -0.25:\n//       strength = 5;\n//       break;\n//     case XGDiff <= -0.25 && XGDiff > -0.5:\n//       strength = 4;\n//       break;\n//     case XGDiff <= -0.5 && XGDiff > -1:\n//       strength = 3;\n//       break;\n//     case XGDiff <= -1 && XGDiff > -1.5:\n//       strength = 2;\n//       break;\n//     case XGDiff <= -1.5:\n//       strength = 1;\n//       break;\n//     default:\n//       console.log(\"default clause triggered\");\n//       break;\n//   }\n//   return strength;\n// }\n\nexport async function getXGtoActualDifferentialStrength(XGDiff) {\n  let strength;\n  switch (true) {\n    case XGDiff >= 1.5:\n      strength = 10;\n      break;\n    case XGDiff >= 1 && XGDiff < 1.5:\n      strength = 9;\n      break;\n    case XGDiff >= 0.5 && XGDiff < 1:\n      strength = 8;\n      break;\n    case XGDiff >= 0.25 && XGDiff < 0.5:\n      strength = 7;\n      break;\n    case XGDiff > 0 && XGDiff < 0.25:\n      strength = 6;\n      break;\n    case XGDiff <= 0 && XGDiff > -0.25:\n      strength = 5;\n      break;\n    case XGDiff <= -0.25 && XGDiff > -0.5:\n      strength = 4;\n      break;\n    case XGDiff <= -0.5 && XGDiff > -1:\n      strength = 3;\n      break;\n    case XGDiff <= -1 && XGDiff > -1.5:\n      strength = 2;\n      break;\n    case XGDiff <= -1.5:\n      strength = 1;\n      break;\n    default:\n      console.log(\"default clause triggered\");\n      break;\n  }\n  return strength;\n}\n\nlet rollingGoalDiffTotalHome = [];\nlet rollingGoalDiffTotalAway = [];\n\nexport async function createStatsDiv(game, displayBool) {\n  console.log(displayBool);\n  if (game.status !== \"void\") {\n    // takes the displayBool boolean from the fixture onClick and sets the styling of the stats div from there\n    function styling(testBool) {\n      let bool = testBool;\n      if (bool === true && clicked === true) {\n        // set stats element to display flex\n        return { display: \"block\" };\n      } else {\n        // set stats element to display none\n        return { display: \"none\" };\n      }\n    }\n    let style = styling(displayBool);\n\n    if (clicked === false) {\n      alert(\"Tap Get Predictions to fetch all game stats first\");\n    } else {\n      let index = 2;\n      let divider = 10;\n\n      let gameStats = allForm.find((match) => match.id === game.id);\n      const gameArrayHome = [];\n      const gameArrayAway = [];\n      const gameArrayHomeTeamHomeGames = [];\n      const gameArrayAwayTeamAwayGames = [];\n      let goalDiffArrayHome;\n      let goalDiffArrayAway;\n      let goalDiffHomeMovingAv = [];\n      let goalDiffAwayMovingAv = [];\n      let latestHomeGoalDiff;\n      let latestAwayGoalDiff;\n\n      var getEMA = (a, r) =>\n        a.reduce(\n          (p, n, i) =>\n            i\n              ? p.concat(\n                  (2 * n) / (r + 1) + (p[p.length - 1] * (r - 1)) / (r + 1)\n                )\n              : p,\n          [a[0]]\n        );\n\n      if (displayBool === true) {\n        let fixtures = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${gameStats.leagueId}`\n        );\n\n        await fixtures.json().then((matches) => {\n          const resultHome = matches.data.filter(\n            (game) =>\n              (game.homeID === gameStats.teamIDHome ||\n                game.awayID === gameStats.teamIDHome) &&\n              game.status === \"complete\"\n          );\n\n          const resultHomeOnly = matches.data.filter(\n            (game) =>\n              game.homeID === gameStats.teamIDHome && game.status === \"complete\"\n          );\n\n          resultHomeOnly.sort((a, b) => b.date_unix - a.date_unix);\n\n          for (let i = 0; i < resultHome.length; i++) {\n            let unixTimestamp = resultHome[i].date_unix;\n            let milliseconds = unixTimestamp * 1000;\n            let dateObject = new Date(milliseconds).toLocaleString(\"en-GB\", {\n              timeZone: \"UTC\",\n            });\n\n            let won;\n            let goalsScored;\n            let goalsConceeded;\n\n            if (resultHome[i].winningTeam === gameStats.teamIDHome) {\n              won = \"W\";\n              if (resultHome[i].homeGoalCount > resultHome[i].awayGoalCount) {\n                goalsScored = resultHome[i].homeGoalCount;\n                goalsConceeded = resultHome[i].awayGoalCount;\n              } else {\n                goalsScored = resultHome[i].awayGoalCount;\n                goalsConceeded = resultHome[i].homeGoalCount;\n              }\n            } else if (resultHome[i].winningTeam === -1) {\n              won = \"D\";\n              goalsScored = resultHome[i].awayGoalCount;\n              goalsConceeded = resultHome[i].awayGoalCount;\n            } else {\n              won = \"L\";\n              if (resultHome[i].homeGoalCount > resultHome[i].awayGoalCount) {\n                goalsScored = resultHome[i].awayGoalCount;\n                goalsConceeded = resultHome[i].homeGoalCount;\n              } else {\n                goalsScored = resultHome[i].homeGoalCount;\n                goalsConceeded = resultHome[i].awayGoalCount;\n              }\n            }\n\n            gameArrayHome.push({\n              id: resultHome[i].id,\n              date: dateObject,\n              homeTeam: resultHome[i].home_name,\n              homeGoals: resultHome[i].homeGoalCount,\n              homeXG: resultHome[i].team_a_xg,\n              homeOdds: resultHome[i].odds_ft_1,\n              awayTeam: resultHome[i].away_name,\n              awayGoals: resultHome[i].awayGoalCount,\n              awayXG: resultHome[i].team_b_xg,\n              awayOdds: resultHome[i].odds_ft_2,\n              won: won,\n              homeShots: resultHome[i].team_a_shots,\n              awayShots: resultHome[i].team_b_shots,\n              homeSot: resultHome[i].team_a_shotsOnTarget,\n              awaySot: resultHome[i].team_b_shotsOnTarget,\n              homeRed: resultHome[i].team_a_red_cards,\n              awayRed: resultHome[i].team_b_red_cards,\n              homePossession: resultHome[i].team_a_possession,\n              awayPossession: resultHome[i].team_b_possession,\n              homeDangerousAttacks: resultHome[i].team_a_dangerous_attacks,\n              awayDangerousAttacks: resultHome[i].team_b_dangerous_attacks,\n              homePPG: resultHome[i].pre_match_teamA_overall_ppg,\n              awayPPG: resultHome[i].pre_match_teamB_overall_ppg,\n              unixTimestamp: resultHome[i].date_unix,\n              goalsFor: goalsScored,\n              goalsAgainst: goalsConceeded,\n              btts: resultHome[i].btts === true ? \"\\u2714\" : \"\\u2718\",\n            });\n          }\n\n          for (let i = 0; i < resultHomeOnly.length; i++) {\n            let wonHomeOrAwayOnly;\n\n            if (resultHomeOnly[i].winningTeam === gameStats.teamIDHome) {\n              wonHomeOrAwayOnly = \"W\";\n              gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n            } else if (resultHomeOnly[i].winningTeam === -1) {\n              wonHomeOrAwayOnly = \"D\";\n              gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n            } else {\n              wonHomeOrAwayOnly = \"L\";\n              gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n            }\n          }\n\n          goalDiffArrayHome = gameArrayHome.map(\n            (a) => a.goalsFor - a.goalsAgainst\n          );\n\n          let r = 5;\n\n          goalDiffHomeMovingAv = getEMA(\n            goalDiffArrayHome,\n            goalDiffArrayHome.length < 5 ? goalDiffArrayHome.length : r\n          );\n\n          const cumulativeSumHome = (\n            (sum) => (value) =>\n              (sum += value)\n          )(0);\n\n          gameArrayHome.sort((a, b) => b.unixTimestamp - a.unixTimestamp);\n\n          rollingGoalDiffTotalHome = goalDiffArrayHome.map(cumulativeSumHome);\n\n          const resultAway = matches.data.filter(\n            (game) =>\n              (game.homeID === gameStats.teamIDAway ||\n                game.awayID === gameStats.teamIDAway) &&\n              game.status === \"complete\"\n          );\n\n          const resultAwayOnly = matches.data.filter(\n            (game) =>\n              game.awayID === gameStats.teamIDAway && game.status === \"complete\"\n          );\n\n          resultAwayOnly.sort((a, b) => b.date_unix - a.date_unix);\n\n          for (let i = 0; i < resultAway.length; i++) {\n            let unixTimestamp = resultAway[i].date_unix;\n            let milliseconds = unixTimestamp * 1000;\n            let dateObject = new Date(milliseconds).toLocaleString(\"en-GB\", {\n              timeZone: \"UTC\",\n            });\n\n            let won;\n            let goalsScored;\n            let goalsConceeded;\n\n            if (resultAway[i].winningTeam === gameStats.teamIDAway) {\n              won = \"W\";\n              if (resultAway[i].homeGoalCount > resultAway[i].awayGoalCount) {\n                goalsScored = resultAway[i].homeGoalCount;\n                goalsConceeded = resultAway[i].awayGoalCount;\n              } else {\n                goalsScored = resultAway[i].awayGoalCount;\n                goalsConceeded = resultAway[i].homeGoalCount;\n              }\n            } else if (resultAway[i].winningTeam === -1) {\n              won = \"D\";\n              goalsScored = resultAway[i].awayGoalCount;\n              goalsConceeded = resultAway[i].awayGoalCount;\n            } else {\n              won = \"L\";\n              if (resultAway[i].homeGoalCount > resultAway[i].awayGoalCount) {\n                goalsScored = resultAway[i].awayGoalCount;\n                goalsConceeded = resultAway[i].homeGoalCount;\n              } else {\n                goalsScored = resultAway[i].homeGoalCount;\n                goalsConceeded = resultAway[i].awayGoalCount;\n              }\n            }\n\n            gameArrayAway.push({\n              id: resultAway[i].id,\n              date: dateObject,\n              homeTeam: resultAway[i].home_name,\n              homeGoals: resultAway[i].homeGoalCount,\n              homeXG: resultAway[i].team_a_xg,\n              homeOdds: resultAway[i].odds_ft_1,\n              awayTeam: resultAway[i].away_name,\n              awayGoals: resultAway[i].awayGoalCount,\n              awayXG: resultAway[i].team_b_xg,\n              awayOdds: resultAway[i].odds_ft_2,\n              won: won,\n              homeShots: resultAway[i].team_a_shots,\n              awayShots: resultAway[i].team_b_shots,\n              homeSot: resultAway[i].team_a_shotsOnTarget,\n              awaySot: resultAway[i].team_b_shotsOnTarget,\n              homeRed: resultAway[i].team_a_red_cards,\n              awayRed: resultAway[i].team_b_red_cards,\n              homePossession: resultAway[i].team_a_possession,\n              awayPossession: resultAway[i].team_b_possession,\n              homeDangerousAttacks: resultAway[i].team_a_dangerous_attacks,\n              awayDangerousAttacks: resultAway[i].team_b_dangerous_attacks,\n              homePPG: resultAway[i].pre_match_teamA_overall_ppg,\n              awayPPG: resultAway[i].pre_match_teamB_overall_ppg,\n              unixTimestamp: resultAway[i].date_unix,\n              goalsFor: goalsScored,\n              goalsAgainst: goalsConceeded,\n              btts: resultAway[i].btts === true ? \"\\u2714\" : \"\\u2718\",\n            });\n          }\n\n          for (let i = 0; i < resultAwayOnly.length; i++) {\n            let wonHomeOrAwayOnly;\n\n            if (resultAwayOnly[i].winningTeam === gameStats.teamIDAway) {\n              wonHomeOrAwayOnly = \"W\";\n              gameArrayAwayTeamAwayGames.push(wonHomeOrAwayOnly);\n            } else if (resultAwayOnly[i].winningTeam === -1) {\n              wonHomeOrAwayOnly = \"D\";\n              gameArrayAwayTeamAwayGames.push(wonHomeOrAwayOnly);\n            } else {\n              wonHomeOrAwayOnly = \"L\";\n              gameArrayAwayTeamAwayGames.push(wonHomeOrAwayOnly);\n            }\n          }\n\n          goalDiffArrayAway = gameArrayAway.map(\n            (a) => a.goalsFor - a.goalsAgainst\n          );\n\n          goalDiffAwayMovingAv = getEMA(\n            goalDiffArrayAway,\n            goalDiffArrayAway.length < 5 ? goalDiffArrayAway.length : r\n          );\n\n          const cumulativeSumAway = (\n            (sum) => (value) =>\n              (sum += value)\n          )(0);\n\n          gameArrayAway.sort((a, b) => b.unixTimestamp - a.unixTimestamp);\n\n          rollingGoalDiffTotalAway = goalDiffArrayAway.map(cumulativeSumAway);\n\n          latestHomeGoalDiff =\n            goalDiffHomeMovingAv[goalDiffHomeMovingAv.length - 1];\n          latestAwayGoalDiff =\n            goalDiffAwayMovingAv[goalDiffAwayMovingAv.length - 1];\n        });\n      }\n\n      const bttsArrayHome = Array.from(gameArrayHome, (x) => x.btts);\n      const bttsArrayAway = Array.from(gameArrayAway, (x) => x.btts);\n      const resultsArrayHome = Array.from(gameArrayHome, (x) => x.won);\n      const resultsArrayAway = Array.from(gameArrayAway, (x) => x.won);\n\n      let homeTeam = gameStats.home.teamName;\n      let awayTeam = gameStats.away.teamName;\n\n      let time = game.time;\n\n      const homeForm = gameStats.home[index];\n      const awayForm = gameStats.away[index];\n\n      if (homeForm.last3Points === undefined) {\n        homeForm.last3Points = getPointsFromLastX(homeForm.lastThreeForm);\n\n        homeForm.last5Points = getPointsFromLastX(homeForm.LastFiveForm);\n\n        homeForm.last6Points = getPointsFromLastX(homeForm.LastSixForm);\n\n        homeForm.last10Points = getPointsFromLastX(homeForm.LastTenForm);\n\n        awayForm.last3Points = getPointsFromLastX(awayForm.lastThreeForm);\n\n        awayForm.last5Points = getPointsFromLastX(awayForm.LastFiveForm);\n\n        awayForm.last6Points = getPointsFromLastX(awayForm.LastSixForm);\n\n        awayForm.last10Points = getPointsFromLastX(awayForm.LastTenForm);\n      }\n\n      async function getPointAverage(pointTotal, games) {\n        return pointTotal / games;\n      }\n\n      // let homeThreeGameAverage = await getPointAverage(\n      //   homeForm.last3Points,\n      //   3\n      // );\n\n      let homeFiveGameAverage = await getPointAverage(homeForm.last5Points, 5);\n\n      let homeSixGameAverage = await getPointAverage(homeForm.last6Points, 6);\n\n      let homeTenGameAverage = await getPointAverage(homeForm.last10Points, 10);\n\n      // let awayThreeGameAverage = await getPointAverage(\n      //   awayForm.last3Points,\n      //   3\n      // );\n\n      let awayFiveGameAverage = await getPointAverage(awayForm.last5Points, 5);\n\n      let awaySixGameAverage = await getPointAverage(awayForm.last6Points, 6);\n\n      let awayTenGameAverage = await getPointAverage(awayForm.last10Points, 10);\n\n      async function getPointsFromGames(formArr) {\n        const pairings = {\n          W: 3,\n          D: 1,\n          L: 0,\n        };\n        let newArr = [];\n        let arrayOfIndividualPoints = [];\n        let sum = 0;\n\n        for (let i = 0; i < formArr.length; i++) {\n          sum = sum + pairings[formArr[i]];\n          newArr.push(sum);\n          arrayOfIndividualPoints.push(pairings[formArr[i]]);\n        }\n        return [newArr, arrayOfIndividualPoints];\n      }\n\n      async function getLastGameResult(lastGame) {\n        let text;\n        switch (true) {\n          case lastGame === \"L\":\n            text = \"Lost\";\n            break;\n          case lastGame === \"D\":\n            text = \"Drew\";\n            break;\n          case lastGame === \"W\":\n            text = \"Won\";\n            break;\n          default:\n            break;\n        }\n        return text;\n      }\n\n      let homeFormTrend = [\n        homeFiveGameAverage.toFixed(2),\n        homeTenGameAverage.toFixed(2),\n      ];\n\n      let awayFormTrend = [\n        awayFiveGameAverage.toFixed(2),\n        awayTenGameAverage.toFixed(2),\n      ];\n\n      let formTextStringHome;\n      let formTextStringAway;\n\n      if (displayBool === true && gameStats.home[2].LeagueOrAll === \"League\") {\n        formTextStringHome = await GenerateFormSummary(\n          gameStats.home[2],\n          homeFormTrend,\n          gameStats.home[0]\n        );\n        formTextStringAway = await GenerateFormSummary(\n          gameStats.away[2],\n          awayFormTrend,\n          gameStats.away[0]\n        );\n      } else {\n        formTextStringHome = \"\";\n        formTextStringAway = \"\";\n      }\n\n      console.log(game);\n      console.log(awayForm)\n      const favouriteRecordHome =\n        game.homeOdds < game.awayOdds || game.homeOdds === game.awayOdds\n          ? `${\n              homeForm.teamName\n            } have been favourites ${homeForm.favouriteCount} times. Of these games, they have Won: ${homeForm.oddsReliabilityWin.toFixed(\n              0\n            )}%, Drawn:  ${homeForm.oddsReliabilityDraw.toFixed(\n              0\n            )}%, Lost:  ${homeForm.oddsReliabilityLose.toFixed(0)}%`\n          : `${\n              homeForm.teamName\n            } have been underdogs ${homeForm.underdogCount} times. Of these games, they have Won: ${homeForm.oddsReliabilityWinAsUnderdog.toFixed(\n              0\n            )}%, Drawn:  ${homeForm.oddsReliabilityDrawAsUnderdog.toFixed(\n              0\n            )}%, Lost:  ${homeForm.oddsReliabilityLoseAsUnderdog.toFixed(0)}%`;\n      const favouriteRecordAway =\n        game.homeOdds > game.awayOdds || game.homeOdds === game.awayOdds\n          ? `${\n              awayForm.teamName\n            } have been favourites ${awayForm.favouriteCount} times. Of these games, they have Won: ${awayForm.oddsReliabilityWin.toFixed(\n              0\n            )}%, Drawn:  ${awayForm.oddsReliabilityDraw.toFixed(\n              0\n            )}%, Lost:  ${awayForm.oddsReliabilityLose.toFixed(0)}%`\n          : `${\n              awayForm.teamName\n            } have been underdogs ${awayForm.underdogCount} times. Of these games, they have Won: ${awayForm.oddsReliabilityWinAsUnderdog.toFixed(\n              0\n            )}%, Drawn:  ${awayForm.oddsReliabilityDrawAsUnderdog.toFixed(\n              0\n            )}%, Lost:  ${awayForm.oddsReliabilityLoseAsUnderdog.toFixed(0)}%`;\n\n      let homeLastGame = await getLastGameResult(homeForm.LastFiveForm[4]);\n      let awayLastGame = await getLastGameResult(awayForm.LastFiveForm[4]);\n\n      // let homeAttackStrength = await getAttackStrength(\n      //   homeForm.ScoredOverall / 10\n      // );\n\n      const attackingMetricsHome = {\n        // averagePossession: homeForm.AveragePossessionOverall,\n        \"Average Dangerous Attacks\": homeForm.AverageDangerousAttacksOverall,\n        \"Average Shots\": homeForm.AverageShots,\n        \"Average Shots On Target\": homeForm.AverageShotsOnTargetOverall,\n        \"Average Expected Goals\": homeForm.XGOverall,\n        \"Recent XG\": homeForm.XGlast5 ? homeForm.XGlast5 : homeForm.XGOverall,\n        \"Average Goals\":\n          homeForm.averageScoredLeague !== undefined &&\n          homeForm.averageScoredLeague !== null\n            ? homeForm.averageScoredLeague\n            : homeForm.ScoredOverall / 10,\n      };\n      const attackingMetricsAway = {\n        // averagePossession: awayForm.AveragePossessionOverall,\n        \"Average Dangerous Attacks\": awayForm.AverageDangerousAttacksOverall,\n        \"Average Shots\": awayForm.AverageShots,\n        \"Average Shots On Target\": awayForm.AverageShotsOnTargetOverall,\n        \"Average Expected Goals\": awayForm.XGOverall,\n        \"Recent XG\": awayForm.XGlast5 ? awayForm.XGlast5 : awayForm.XGOverall,\n        \"Average Goals\":\n          awayForm.averageScoredLeague !== undefined &&\n          awayForm.averageScoredLeague !== null\n            ? awayForm.averageScoredLeague\n            : awayForm.ScoredOverall / 10,\n      };\n\n      const defensiveMetricsHome = {\n        \"Clean Sheet Percentage\": 100 - homeForm.CleanSheetPercentage,\n        \"Average XG Against\": homeForm.XGAgainstAvgOverall,\n        \"Recent XG Against\": homeForm.XGAgainstlast5\n          ? homeForm.XGAgainstlast5\n          : homeForm.XGAgainstAvgOverall,\n        \"Average Goals Against\":\n          homeForm.averageConceededLeague !== undefined &&\n          homeForm.averageConceededLeague !== null\n            ? homeForm.averageConceededLeague\n            : homeForm.ConcededOverall / 10,\n      };\n\n      const defensiveMetricsAway = {\n        \"Clean Sheet Percentage\": 100 - awayForm.CleanSheetPercentage,\n        \"Average XG Against\": awayForm.XGAgainstAvgOverall,\n        \"Recent XG Against\": awayForm.XGAgainstlast5\n          ? awayForm.XGAgainstlast5\n          : awayForm.XGAgainstAvgOverall,\n        \"Average Goals Against\":\n          awayForm.averageConceededLeague !== undefined &&\n          awayForm.averageConceededLeague !== null\n            ? awayForm.averageConceededLeague\n            : awayForm.ConcededOverall / 10,\n      };\n\n      let homeAttackStrength;\n      let homeDefenceStrength;\n      let homePossessionStrength;\n      let homeXGForStrength;\n      let homeXGAgainstStrength;\n      let awayAttackStrength;\n      let awayDefenceStrength;\n      let awayPossessionStrength;\n      let awayXGForStrength;\n      let awayXGAgainstStrength;\n      let homeDirectnessStrength;\n      let awayDirectnessStrength;\n      let homeAccuracyOverallStrength;\n      let awayAccuracyOverallStrength;\n\n      if (homeForm.xgForStrength) {\n        console.log(\"not calculating\");\n        homeAttackStrength = homeForm.attackingStrength;\n        homeDefenceStrength = homeForm.defensiveStrength;\n        homePossessionStrength = homeForm.possessionStrength;\n        homeXGForStrength = homeForm.xgForStrength;\n        homeXGAgainstStrength = homeForm.xgAgainstStrength;\n        homeDirectnessStrength = homeForm.directnessOverallStrength;\n        homeAccuracyOverallStrength = homeForm.accuracyOverallStrength;\n\n        awayAttackStrength = awayForm.attackingStrength;\n        awayDefenceStrength = awayForm.defensiveStrength;\n        awayPossessionStrength = awayForm.possessionStrength;\n        awayXGForStrength = awayForm.xgForStrength;\n        awayXGAgainstStrength = awayForm.xgAgainstStrength;\n        awayDirectnessStrength = awayForm.directnessOverallStrength;\n        awayAccuracyOverallStrength = awayForm.accuracyOverallStrength;\n      } else {\n        homeAttackStrength = await calculateAttackingStrength(\n          attackingMetricsHome\n        );\n\n        homeDefenceStrength = await calculateDefensiveStrength(\n          defensiveMetricsHome\n        );\n\n        homePossessionStrength = await calculateMetricStrength(\n          \"averagePossession\",\n          homeForm.AveragePossessionOverall\n        );\n\n        homeXGForStrength = await calculateMetricStrength(\n          \"xgFor\",\n          gameStats.home[2].XGOverall\n        );\n\n        homeXGAgainstStrength = await calculateMetricStrength(\n          \"xgAgainst\",\n          3 - gameStats.home[2].XGAgainstAvgOverall\n        );\n        homeDirectnessStrength = await calculateMetricStrength(\n          \"directnessOverall\",\n          homeForm.directnessOverall\n        );\n        homeAccuracyOverallStrength = await calculateMetricStrength(\n          \"accuracyOverall\",\n          homeForm.shootingAccuracy\n        );\n\n        awayAttackStrength = await calculateAttackingStrength(\n          attackingMetricsAway\n        );\n        awayDefenceStrength = await calculateDefensiveStrength(\n          defensiveMetricsAway\n        );\n        awayPossessionStrength = await calculateMetricStrength(\n          \"averagePossession\",\n          awayForm.AveragePossessionOverall\n        );\n        awayXGForStrength = await calculateMetricStrength(\n          \"xgFor\",\n          gameStats.away[2].XGOverall\n        );\n\n        awayXGAgainstStrength = await calculateMetricStrength(\n          \"xgAgainst\",\n          3 - gameStats.away[2].XGAgainstAvgOverall\n        );\n        awayDirectnessStrength = await calculateMetricStrength(\n          \"directnessOverall\",\n          awayForm.directnessOverall\n        );\n        awayAccuracyOverallStrength = await calculateMetricStrength(\n          \"accuracyOverall\",\n          awayForm.shootingAccuracy\n        );\n      }\n\n      let [formPointsHome, testArrayHome] = await getPointsFromGames(\n        gameStats.home[2].WDLRecord\n      );\n      let [formPointsAway, testArrayAway] = await getPointsFromGames(\n        gameStats.away[2].WDLRecord\n      );\n\n      let rollingGoalDiffHome = [\n        (gameStats.home[0].ScoredOverall - gameStats.home[0].ConcededOverall) /\n          10,\n        (gameStats.home[1].ScoredOverall - gameStats.home[1].ConcededOverall) /\n          6,\n        (gameStats.home[2].ScoredOverall - gameStats.home[2].ConcededOverall) /\n          5,\n      ];\n\n      let rollingGoalDiffAway = [\n        (gameStats.away[0].ScoredOverall - gameStats.away[0].ConcededOverall) /\n          10,\n        (gameStats.away[1].ScoredOverall - gameStats.away[1].ConcededOverall) /\n          6,\n        (gameStats.away[2].ScoredOverall - gameStats.away[2].ConcededOverall) /\n          5,\n      ];\n\n      const formDataMatch = [];\n\n      formDataMatch.push({\n        btts: game.btts_potential,\n      });\n\n      const formDataHome = [];\n\n      formDataHome.push({\n        name: game.homeTeam,\n        Last5: gameStats.home[2].LastFiveForm,\n        LeagueOrAll: gameStats.home[2].LeagueOrAll,\n        AverageGoals: homeForm.ScoredOverall / 10,\n        AverageConceeded: homeForm.ConcededOverall / 10,\n        AverageXG: homeForm.XGOverall,\n        AverageXGConceded: homeForm.XGAgainstAvgOverall,\n        AveragePossession: homeForm.AveragePossessionOverall,\n        AverageShotsOnTarget: homeForm.AverageShotsOnTargetOverall,\n        AverageDangerousAttacks: homeForm.AverageDangerousAttacksOverall,\n        homeOrAway: \"Home\",\n        leaguePosition: homeForm.LeaguePosition,\n        Last5PPG: homeForm.PPG,\n        SeasonPPG: homeForm.SeasonPPG,\n        lastGame: homeLastGame,\n        formRun: homeForm.formRun,\n        goalDifference: homeForm.goalDifference,\n        goalDifferenceHomeOrAway: homeForm.goalDifferenceHomeOrAway,\n        // BttsPercentage: homeForm.BttsPercentage || \"-\",\n        // BttsPercentageHomeOrAway: homeForm.BttsPercentageHomeOrAway || \"-\",\n        CardsTotal: homeForm.CardsTotal || \"-\",\n        CornersAverage: homeForm.AverageCorners || \"-\",\n        FormTextStringHome: formTextStringHome,\n        FavouriteRecord: favouriteRecordHome + `. ${homeForm.reliabilityString}`,\n        BTTSArray: bttsArrayHome,\n        Results: resultsArrayHome,\n        // BTTSAll: homeForm.last10btts,\n        // BTTSHorA: homeForm.last10bttsHome,\n      });\n\n      const formDataAway = [];\n\n      formDataAway.push({\n        name: game.awayTeam,\n        Last5: gameStats.away[2].LastFiveForm,\n        LeagueOrAll: gameStats.away[2].LeagueOrAll,\n        AverageGoals: awayForm.ScoredOverall / 10,\n        AverageConceeded: awayForm.ConcededOverall / 10,\n        AverageXG: awayForm.XGOverall,\n        AverageXGConceded: awayForm.XGAgainstAvgOverall,\n        AveragePossession: awayForm.AveragePossessionOverall,\n        AverageShotsOnTarget: awayForm.AverageShotsOnTargetOverall,\n        AverageDangerousAttacks: awayForm.AverageDangerousAttacksOverall,\n        homeOrAway: \"Away\",\n        leaguePosition: awayForm.LeaguePosition,\n        Last5PPG: awayForm.PPG,\n        SeasonPPG: awayForm.SeasonPPG,\n        lastGame: awayLastGame,\n        formRun: awayForm.formRun,\n        goalDifference: awayForm.goalDifference,\n        goalDifferenceHomeOrAway: awayForm.goalDifferenceHomeOrAway,\n        // BttsPercentage: awayForm.BttsPercentage || \"-\",\n        // BttsPercentageHomeOrAway: awayForm.BttsPercentageHomeOrAway || \"-\",\n        CardsTotal: awayForm.CardsTotal || \"-\",\n        CornersAverage: awayForm.AverageCorners || \"-\",\n        FormTextStringAway: formTextStringAway,\n        FavouriteRecord: favouriteRecordAway + `. ${awayForm.reliabilityString}`,\n        BTTSArray: bttsArrayAway,\n        Results: resultsArrayAway,\n        ResultsHomeOrAway: resultsArrayAway,\n        // BTTSAll: awayForm.last10btts,\n        // BTTSHorA: awayForm.last10bttsAway,\n      });\n\n      let formArrayHome;\n      let formArrayAway;\n      let chartType;\n\n      if (formPointsHome.length > 1) {\n        formArrayHome = formPointsHome;\n        formArrayAway = formPointsAway;\n        chartType = \"Points over time\";\n      } else {\n        formArrayHome = [\n          homeTenGameAverage,\n          homeSixGameAverage,\n          homeFiveGameAverage,\n        ];\n        formArrayAway = [\n          awayTenGameAverage,\n          awaySixGameAverage,\n          awayFiveGameAverage,\n        ];\n        chartType = \"Rolling average points over last 10\";\n      }\n\n      ReactDOM.render(\n        <div style={style}>\n          <div className=\"H2HStats\" id={`H2HStats${game.id}`}></div>\n          <div className=\"TrendsHome\" id={`TrendsHome${game.id}`}></div>\n          <div className=\"TrendsAway\" id={`TrendsAway${game.id}`}></div>\n        </div>,\n        document.getElementById(\"history\" + homeTeam)\n      );\n\n      //This tournament does not have league positions\n      if (game.leagueName === \"Europe UEFA Women's Euro\") {\n        game.homeTeamHomePosition = \"N/A\";\n        game.awayTeamAwayPosition = \"N/A\";\n      }\n\n      function singleResult(game) {\n        return (\n          <div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeXG}</span>\n              <span className=\"column\">XG</span>\n              <span className=\"column\">{game.awayXG}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeShots}</span>\n              <span className=\"column\">Shots</span>\n              <span className=\"column\">{game.awayShots}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeSot}</span>\n              <span className=\"column\">SOT</span>\n              <span className=\"column\">{game.awaySot}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeDangerousAttacks}</span>\n              <span className=\"column\">Dangerous Attacks</span>\n              <span className=\"column\">{game.awayDangerousAttacks}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homePossession}%</span>\n              <span className=\"column\">Possession</span>\n              <span className=\"column\">{game.awayPossession}%</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeRed}</span>\n              <span className=\"column\">Red cards</span>\n              <span className=\"column\">{game.awayRed}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homePPG}</span>\n              <span className=\"column\">PPG (pre-match)</span>\n              <span className=\"column\">{game.awayPPG}</span>\n            </div>\n          </div>\n        );\n      }\n\n      const overviewHome = gameArrayHome.slice(0, 10).map((game) => (\n        <div>\n          <Collapsable\n            classNameButton=\"ResultButton\"\n            buttonText={\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {game.homeGoals} : {game.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n              </div>\n            }\n            element={singleResult(game)}\n          />\n        </div>\n      ));\n\n      const overviewAway = gameArrayAway.slice(0, 10).map((game) => (\n        <div>\n          <Collapsable\n            classNameButton=\"ResultButton\"\n            buttonText={\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {game.homeGoals} : {game.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n              </div>\n            }\n            element={singleResult(game)}\n          />\n        </div>\n      ));\n\n      function StatsHome() {\n        return (\n          <div className=\"flex-childOne\">\n            <ul style={style}>\n              <Stats\n                style={style}\n                homeOrAway=\"Home\"\n                gameCount={divider}\n                key={formDataHome[0].name}\n                last5={formDataHome[0].Last5}\n                homeOrAwayResults={gameArrayHomeTeamHomeGames}\n                LeagueOrAll={formDataHome[0].LeagueOrAll}\n                className={\"KeyStatsHome\"}\n                name={formDataHome[0].name}\n                goals={\n                  homeForm.averageScoredLeague !== undefined &&\n                  homeForm.averageScoredLeague !== null\n                    ? homeForm.averageScoredLeague.toFixed(2)\n                    : formDataHome[0].AverageGoals\n                }\n                conceeded={\n                  homeForm.averageConceededLeague !== undefined &&\n                  homeForm.averageConceededLeague !== null\n                    ? homeForm.averageConceededLeague.toFixed(2)\n                    : formDataHome[0].AverageConceeded\n                }\n                XG={formDataHome[0].AverageXG}\n                XGConceded={formDataHome[0].AverageXGConceded}\n                possession={formDataHome[0].AveragePossession}\n                sot={formDataHome[0].AverageShotsOnTarget}\n                dangerousAttacks={formDataHome[0].AverageDangerousAttacks}\n                leaguePosition={\n                  formDataHome[0].leaguePosition\n                    ? formDataHome[0].leaguePosition\n                    : 0\n                }\n                rawPosition={game.homeRawPosition ? game.homeRawPosition : 0}\n                homeOrAwayLeaguePosition={\n                  game.homeTeamHomePosition ? game.homeTeamHomePosition : 0\n                }\n                winPercentage={\n                  game.homeTeamWinPercentage ? game.homeTeamWinPercentage : 0\n                }\n                lossPercentage={\n                  game.homeTeamLossPercentage ? game.homeTeamLossPercentage : 0\n                }\n                drawPercentage={\n                  game.homeTeamDrawPercentage ? game.homeTeamDrawPercentage : 0\n                }\n                ppg={formDataHome[0].SeasonPPG}\n                formTrend={[\n                  homeTenGameAverage.toFixed(2),\n                  homeSixGameAverage.toFixed(2),\n                  homeFiveGameAverage.toFixed(2),\n                ]}\n                lastGame={homeLastGame}\n                formRun={formDataHome[0].formRun}\n                goalDifference={formDataHome[0].goalDifference}\n                goalDifferenceHomeOrAway={\n                  formDataHome[0].goalDifferenceHomeOrAway\n                }\n                BttsPercentage={formDataHome[0].BttsPercentage}\n                BttsPercentageHomeOrAway={\n                  formDataHome[0].BttsPercentageHomeOrAway\n                }\n                // BTTSAll={\n                //   formDataHome[0].BTTSAll\n                //     ? formDataHome[0].BTTSAll\n                //     : '\"Get Predictions\" first'\n                // }\n                // BTTSHorA={\n                //   formDataHome[0].BTTSHorA\n                //     ? formDataHome[0].BTTSHorA\n                //     : '\"Get Predictions\" first'\n                // }\n                BTTSArray={formDataHome[0].BTTSArray}\n                Results={formDataHome[0].Results}\n                ResultsHomeOrAway={formDataHome[0].wonHomeOrAwayOnly}\n                CardsTotal={formDataHome[0].CardsTotal}\n                CornersAverage={formDataHome[0].CornersAverage}\n                ScoredBothHalvesPercentage={\n                  formDataHome[0].ScoredBothHalvesPercentage\n                }\n                FormTextString={formDataHome[0].FormTextStringHome}\n                FavouriteRecord={formDataHome[0].FavouriteRecord}\n              />\n            </ul>\n          </div>\n        );\n      }\n\n      function StatsAway() {\n        return (\n          <div className=\"flex-childTwo\">\n            <ul style={style}>\n              <Stats\n                style={style}\n                homeOrAway=\"Away\"\n                gameCount={divider}\n                key={formDataAway[0].name}\n                last5={formDataAway[0].Last5}\n                homeOrAwayResults={gameArrayAwayTeamAwayGames}\n                LeagueOrAll={formDataAway[0].LeagueOrAll}\n                className={\"KeyStatsAway\"}\n                name={formDataAway[0].name}\n                goals={\n                  awayForm.averageScoredLeague !== undefined &&\n                  awayForm.averageScoredLeague !== null\n                    ? awayForm.averageScoredLeague.toFixed(2)\n                    : formDataAway[0].AverageGoals\n                }\n                conceeded={\n                  awayForm.averageConceededLeague !== undefined &&\n                  awayForm.averageConceededLeague !== null\n                    ? awayForm.averageConceededLeague.toFixed(2)\n                    : formDataAway[0].AverageConceeded\n                }\n                XG={formDataAway[0].AverageXG}\n                XGConceded={formDataAway[0].AverageXGConceded}\n                //todo add goal diff and btts percentages\n                possession={formDataAway[0].AveragePossession}\n                rawPosition={game.awayRawPosition ? game.awayRawPosition : 0}\n                sot={formDataAway[0].AverageShotsOnTarget}\n                dangerousAttacks={formDataAway[0].AverageDangerousAttacks}\n                leaguePosition={\n                  formDataAway[0].leaguePosition\n                    ? formDataAway[0].leaguePosition\n                    : 0\n                }\n                homeOrAwayLeaguePosition={\n                  game.awayTeamAwayPosition ? game.awayTeamAwayPosition : 0\n                }\n                winPercentage={\n                  game.awayTeamWinPercentage ? game.awayTeamWinPercentage : 0\n                }\n                lossPercentage={\n                  game.awayTeamLossPercentage ? game.awayTeamLossPercentage : 0\n                }\n                drawPercentage={\n                  game.awayTeamDrawPercentage ? game.awayTeamDrawPercentage : 0\n                }\n                ppg={formDataAway[0].SeasonPPG}\n                formTrend={[\n                  awayTenGameAverage.toFixed(2),\n                  awaySixGameAverage.toFixed(2),\n                  awayFiveGameAverage.toFixed(2),\n                ]}\n                lastGame={awayLastGame}\n                formRun={formDataAway[0].formRun}\n                goalDifference={formDataAway[0].goalDifference}\n                goalDifferenceHomeOrAway={\n                  formDataAway[0].goalDifferenceHomeOrAway\n                }\n                BttsPercentage={formDataAway[0].BttsPercentage}\n                BttsPercentageHomeOrAway={\n                  formDataAway[0].BttsPercentageHomeOrAway\n                }\n                // BTTSAll={\n                //   formDataAway[0].BTTSAll\n                //     ? formDataAway[0].BTTSAll\n                //     : '\"Get Predictions\" first'\n                // }\n                // BTTSHorA={\n                //   formDataAway[0].BTTSHorA\n                //     ? formDataAway[0].BTTSHorA\n                //     : '\"Get Predictions\" first'\n                // }\n                BTTSArray={formDataAway[0].BTTSArray}\n                Results={formDataAway[0].Results}\n                CardsTotal={formDataAway[0].CardsTotal}\n                CornersAverage={formDataAway[0].CornersAverage}\n                ScoredBothHalvesPercentage={\n                  formDataAway[0].ScoredBothHalvesPercentage\n                }\n                FormTextString={formDataAway[0].FormTextStringAway}\n                FavouriteRecord={formDataAway[0].FavouriteRecord}\n              />\n            </ul>\n          </div>\n        );\n      }\n\n      const pointsHome = getPointsFromLastX(formDataHome[0].Last5);\n      const pointsHomeAv = await getPointAverage(pointsHome, 5);\n      const pointsAway = getPointsFromLastX(formDataAway[0].Last5);\n      const pointsAwayAv = await getPointAverage(pointsAway, 5);\n\n      ReactDOM.render(\n        <div style={style}>\n          <div className=\"Chart\" id={`Chart${game.id}`} style={style}>\n            <RadarChart\n              data={[\n                homeAttackStrength,\n                homeDefenceStrength,\n                homePossessionStrength,\n                homeXGForStrength,\n                homeXGAgainstStrength,\n                homeDirectnessStrength,\n                homeAccuracyOverallStrength,\n              ]}\n              data2={[\n                awayAttackStrength,\n                awayDefenceStrength,\n                awayPossessionStrength,\n                awayXGForStrength,\n                awayXGAgainstStrength,\n                awayDirectnessStrength,\n                awayAccuracyOverallStrength,\n              ]}\n              team1={game.homeTeam}\n              team2={game.awayTeam}\n            ></RadarChart>\n            <BarChart\n              data1={[\n                homeForm.averageScoredLeague !== undefined &&\n                homeForm.averageScoredLeague !== null\n                  ? homeForm.averageScoredLeague.toFixed(2)\n                  : formDataHome[0].AverageGoals,\n                awayForm.averageConceededLeague !== undefined &&\n                awayForm.averageConceededLeague !== null\n                  ? awayForm.averageConceededLeague.toFixed(2)\n                  : formDataAway[0].AverageConceeded,\n                pointsHomeAv,\n                formDataHome[0].AverageXG,\n                formDataAway[0].AverageXGConceded,\n                formDataHome[0].AverageShotsOnTarget,\n                formDataHome[0].AverageDangerousAttacks / 7.5,\n                formDataHome[0].AveragePossession / 7.5,\n                formDataHome[0].goalDifferenceHomeOrAway / 5,\n                formDataHome[0].CornersAverage,\n              ]}\n              data2={[\n                awayForm.averageScoredLeague !== undefined &&\n                awayForm.averageScoredLeague !== null\n                  ? awayForm.averageScoredLeague.toFixed(2)\n                  : formDataAway[0].AverageGoals,\n                homeForm.averageConceededLeague !== undefined &&\n                homeForm.averageConceededLeague !== null\n                  ? homeForm.averageConceededLeague.toFixed(2)\n                  : formDataHome[0].AverageConceeded,\n                pointsAwayAv,\n                formDataAway[0].AverageXG,\n                formDataHome[0].AverageXGConceded,\n                formDataAway[0].AverageShotsOnTarget,\n                formDataAway[0].AverageDangerousAttacks / 7.5,\n                formDataAway[0].AveragePossession / 7.5,\n                formDataAway[0].goalDifferenceHomeOrAway / 5,\n                formDataAway[0].CornersAverage,\n              ]}\n            ></BarChart>\n            <Chart\n              height={3}\n              depth={0}\n              data1={formArrayHome}\n              data2={formArrayAway}\n              team1={game.homeTeam}\n              team2={game.awayTeam}\n              type={chartType}\n              tension={0}\n            ></Chart>\n            <Chart\n              height={\n                Math.max(\n                  rollingGoalDiffTotalHome[rollingGoalDiffTotalHome.length - 1],\n                  rollingGoalDiffTotalAway[rollingGoalDiffTotalAway.length - 1]\n                ) > 2\n                  ? Math.max(\n                      rollingGoalDiffTotalHome[\n                        rollingGoalDiffTotalHome.length - 1\n                      ],\n                      rollingGoalDiffTotalAway[\n                        rollingGoalDiffTotalAway.length - 1\n                      ]\n                    )\n                  : 2\n              }\n              depth={\n                Math.min(\n                  rollingGoalDiffTotalHome[rollingGoalDiffTotalHome.length - 1],\n                  rollingGoalDiffTotalAway[rollingGoalDiffTotalAway.length - 1]\n                ) < -2\n                  ? Math.min(\n                      rollingGoalDiffTotalHome[\n                        rollingGoalDiffTotalHome.length - 1\n                      ],\n                      rollingGoalDiffTotalAway[\n                        rollingGoalDiffTotalAway.length - 1\n                      ]\n                    )\n                  : -2\n              }\n              data1={rollingGoalDiffTotalHome}\n              data2={rollingGoalDiffTotalAway}\n              team1={game.homeTeam}\n              team2={game.awayTeam}\n              type={\"Goal difference over time\"}\n              tension={0.3}\n            ></Chart>\n          </div>\n          <div style={style}>\n            <Div className=\"MatchTime\" text={`Kick off: ${time} GMT`}></Div>\n            <Div\n              text={`Last league games (most recent first)`}\n              className={\"LastGameHeader\"}\n            ></Div>\n          </div>\n          <div className=\"flex-container\">\n            <div className=\"flex-childOneOverviewSmall\">{overviewHome}</div>\n            <div className=\"flex-childTwoOverviewSmall\">{overviewAway}</div>\n          </div>\n          {/* <Collapsable\n            className={\"Detail\"}\n            classNameTwo={\"flex-childOneOverview\"}\n            classNameThree={\"flex-childTwoOverview\"}\n            classNameFlex={\"flex-element\"}\n            classNameButton={\"DetailedFixtures\"}\n            buttonText={\"Detailed results\"}\n            newText={\"Detailed results\"}\n            element={contentHome}\n            elementTwo={contentAway}\n            // style={style}\n          /> */}\n          <div className=\"flex-container\">\n            <StatsHome />\n            <StatsAway />\n          </div>\n          <input type=\"hidden\" name=\"IL_IN_ARTICLE\" />\n          <Button\n            className=\"MoreStats\"\n            onClickEvent={() =>\n              getTeamStats(\n                game.id,\n                game.homeTeam,\n                game.awayTeam,\n                formDataHome[0].BttsPercentage,\n                formDataHome[0].BttsPercentageHomeOrAway,\n                formDataAway[0].BttsPercentage,\n                formDataAway[0].BttsPercentageHomeOrAway\n              )\n            }\n            text={\"Fixture trends\"}\n          ></Button>\n        </div>,\n        document.getElementById(\"stats\" + homeTeam)\n      );\n    }\n\n    // ReactDOM.render(\n    //   <Button\n    //     className=\"MoreStats\"\n    //     style={style}\n    //     onClickEvent={() =>\n    //       getTeamStats(\n    //         game.id,\n    //         game.homeTeam,\n    //         game.awayTeam,\n    //         formDataHome[0].BttsPercentage,\n    //         formDataHome[0].BttsPercentageHomeOrAway,\n    //         formDataAway[0].BttsPercentage,\n    //         formDataAway[0].BttsPercentageHomeOrAway\n    //       )\n    //     }\n    //     text={\"Fixture trends\"}\n    //   ></Button>,\n    //   document.getElementById(`H2HStats${game.id}`)\n    // );\n  }\n}\n","import React, { Fragment, useState } from \"react\";\nimport { CreateBadge } from \"./createBadge\";\nimport { createStatsDiv } from \"../logic/getStats\";\nimport { renderTable } from \"../logic/getFixtures\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport { useDispatch } from \"react-redux\";\nimport { setData } from \"../logic/dataSlice\";\nimport { Provider } from \"react-redux\";\nimport store from \"../logic/store\"; // Import your Redux store\nimport { formObjectHome } from \"../logic/getScorePredictions\";\nimport { clicked } from \"../logic/getScorePredictions\";\n\nlet resultValue;\nvar count;\nlet mockValue;\nvar setCount;\n\nfunction toggle(bool) {\n  count = !bool;\n  return count;\n}\n\nfunction GetDivider(fixture, mock) {\n  const matchStatus = fixture.status;\n  let isPrediction = resultValue;\n\n  if (fixture.fixture.omit === true && matchStatus !== \"complete\") {\n    isPrediction = true;\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"Omitted\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (mockValue === true && matchStatus === \"complete\") {\n    isPrediction = false;\n    return (\n      <Fragment>\n        <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n        <div\n          className=\"CorrectScore\"\n          key={fixture.fixture.homeTeam}\n          data-cy={\"score-\" + fixture.fixture.id}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (mockValue === true && matchStatus !== \"complete\") {\n    isPrediction = true;\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (isPrediction === false && matchStatus !== \"complete\") {\n    return (\n      <div className=\"divider\" data-cy={\"divider-\" + fixture.fixture.id}>\n        {\"V\"}\n      </div>\n    );\n  } else if (isPrediction === false && matchStatus === \"complete\") {\n    return (\n      <div\n        className=\"Result\"\n        data-cy={\"result-\" + fixture.fixture.id}\n      >{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n    );\n  } else if (isPrediction === true && matchStatus === \"complete\") {\n    let outcome;\n    let prediction;\n\n    switch (true) {\n      case fixture.fixture.homeGoals > fixture.fixture.awayGoals:\n        outcome = 0;\n        fixture.fixture.winner = fixture.fixture.homeTeam;\n        fixture.fixture.outcome = \"homeWin\";\n        break;\n      case fixture.fixture.homeGoals === fixture.fixture.awayGoals:\n        outcome = 1;\n        fixture.fixture.winner = \"draw\";\n        fixture.fixture.outcome = \"draw\";\n\n        break;\n      case fixture.fixture.homeGoals < fixture.fixture.awayGoals:\n        outcome = 2;\n        fixture.fixture.winner = fixture.fixture.awayTeam;\n        fixture.fixture.outcome = \"awayWin\";\n\n        break;\n      default:\n        break;\n    }\n\n    switch (true) {\n      case fixture.fixture.goalsA > fixture.fixture.goalsB:\n        prediction = 0;\n        break;\n      case fixture.fixture.goalsA === fixture.fixture.goalsB:\n        prediction = 1;\n        break;\n      case fixture.fixture.goalsA < fixture.fixture.goalsB:\n        prediction = 2;\n        break;\n      default:\n        break;\n    }\n\n    if (fixture.fixture.omit === true) {\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"Omitted\"\n            key={fixture.fixture.homeTeam}\n            data-cy={\"score-\" + fixture.fixture.id}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    } else if (outcome === prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        switch (true) {\n          case outcome === 0:\n            fixture.fixture.profit = fixture.fixture.homeOdds;\n            break;\n          case outcome === 1:\n            fixture.fixture.profit = fixture.fixture.drawOdds;\n            break;\n          case outcome === 2:\n            fixture.fixture.profit = fixture.fixture.awayOdds;\n            break;\n          default:\n            break;\n        }\n      } else fixture.fixture.profit = 1;\n\n      if (\n        fixture.fixture.goalsA === fixture.fixture.homeGoals &&\n        fixture.fixture.goalsB === fixture.fixture.awayGoals\n      ) {\n        fixture.fixture.exactScore = true;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"ExactScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      } else {\n        fixture.fixture.exactScore = false;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"CorrectScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      }\n    } else if (outcome !== prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        fixture.fixture.profit = 0;\n      } else {\n        fixture.fixture.profit = 1;\n      }\n      fixture.fixture.exactScore = false;\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"IncorrectScore\"\n            key={fixture.fixture.awayTeam}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    }\n  } else {\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  }\n}\n\nfunction renderLeagueName(fixture, mock) {\n  mockValue = mock;\n\n  let name = fixture.leagueName;\n  let id =\n    allLeagueResultsArrayOfObjects.length > 0\n      ? allLeagueResultsArrayOfObjects[fixture.leagueIndex].id\n      : null;\n  if (name === null || mock === true) {\n    return <div></div>;\n  } else {\n    return (\n      <div>\n        <div\n          className=\"leagueName\"\n          id={`league${id}`}\n          key={`leagueName${id}div`}\n          onClick={() =>\n            renderTable(\n              fixture.leagueIndex,\n              allLeagueResultsArrayOfObjects[fixture.leagueIndex],\n              id\n            )\n          }\n        >\n          {fixture.leagueName} &#9776;\n        </div>\n        <div\n          className=\"LeagueTable\"\n          key={`leagueName${id}`}\n          id={`leagueName${id}`}\n        ></div>\n      </div>\n    );\n  }\n}\n\nconst downArrow = \"\\u{2195}\";\nconst rightArrow = \"\\u{29C9}\";\n\nexport let testing;\n\nfunction SingleFixture({ fixture, count, mock }) {\n  const dispatch = useDispatch();\n  function StoreData() {\n    const fixtureDetails = {\n      id: fixture.id,\n      homeTeamName: fixture.homeTeam,\n      homeId: fixture.homeId,\n      homeTeamBadge: fixture.homeBadge,\n      awayTeamName: fixture.awayTeam,\n      awayId: fixture.awayId,\n      awayTeamBadge: fixture.awayBadge,\n      stadium: fixture.stadium,\n      time: fixture.time,\n      homeGoals: fixture.goalsA,\n      awayGoals: fixture.goalsB,\n    };\n\n    const homeDetails = {\n      \"Attacking Strength\": fixture.formHome.attackingStrength,\n      \"Defensive Strength\": fixture.formHome.defensiveStrength,\n    };\n\n    const awayDetails = {\n      \"Attacking Strength\": fixture.formAway.attackingStrength,\n      \"Defensive Strength\": fixture.formAway.defensiveStrength,\n    };\n\n    const dataToSend = {\n      key1: \"value1\",\n      key2: \"value2\",\n    };\n    fixture.formHome.defensiveMetrics[\"Clean Sheet Percentage\"] =\n      fixture.formHome.CleanSheetPercentage;\n    fixture.formAway.defensiveMetrics[\"Clean Sheet Percentage\"] =\n      fixture.formAway.CleanSheetPercentage;\n\n    localStorage.setItem(\n      \"homeForm\",\n      JSON.stringify(fixture.formHome.attackingMetrics)\n    );\n    localStorage.setItem(\n      \"homeFormDef\",\n      JSON.stringify(fixture.formHome.defensiveMetrics)\n    );\n    localStorage.setItem(\n      \"allTeamResultsHome\",\n      JSON.stringify(fixture.formHome.allTeamResults)\n    );\n    localStorage.setItem(\"homeDetails\", JSON.stringify(homeDetails));\n\n    localStorage.setItem(\n      \"awayForm\",\n      JSON.stringify(fixture.formAway.attackingMetrics)\n    );\n    localStorage.setItem(\n      \"awayFormDef\",\n      JSON.stringify(fixture.formAway.defensiveMetrics)\n    );\n    localStorage.setItem(\n      \"allTeamResultsAway\",\n      JSON.stringify(fixture.formAway.allTeamResults)\n    );\n    localStorage.setItem(\"awayDetails\", JSON.stringify(awayDetails));\n\n    localStorage.setItem(\"fixtureDetails\", JSON.stringify(fixtureDetails));\n\n    dispatch(setData(dataToSend));\n  }\n\n  async function handleButtonClick(game) {\n    if (clicked === true) {\n      StoreData(formObjectHome);\n      window.open(\"/#/fixture\");\n    } else return;\n  }\n  return (\n    <div key={fixture.game}>\n      {renderLeagueName(fixture, mock)}\n      <div className={`individualFixtureContainer${fixture.omit}`}>\n        <li\n          className={`individualFixture${fixture.omit}`}\n          key={fixture.id}\n          data-cy={fixture.id}\n        >\n          <div className=\"HomeOdds\">{fixture.fractionHome}</div>\n          <div className=\"homeTeam\">{fixture.homeTeam}</div>\n          <GetDivider\n            result={resultValue}\n            status={fixture.status}\n            fixture={fixture}\n          />\n          {/* <div className=\"divider\">{\"V\"}</div> */}\n          <div className=\"awayTeam\">{fixture.awayTeam}</div>\n          <CreateBadge\n            image={fixture.homeBadge}\n            ClassName=\"HomeBadge\"\n            alt=\"Home team badge\"\n            flexShrink={5}\n          />\n          <CreateBadge\n            image={fixture.awayBadge}\n            ClassName=\"AwayBadge\"\n            alt=\"Away team badge\"\n          />\n          <div className=\"AwayOdds\">{fixture.fractionAway}</div>\n        </li>\n        <button\n          className=\"GameStats\"\n          onClick={() =>\n            mock === false ? createStatsDiv(fixture, count) : null\n          }\n          onMouseDown={() => (count = toggle(count))}\n        >\n          Game overview {downArrow}\n        </button>\n        <button\n          className=\"GameStatsTwo\"\n          onClick={() => handleButtonClick(fixture)}\n        >\n          More detail {rightArrow}\n        </button>\n        {/* <Checkbox/> */}\n      </div>\n      <div id={\"stats\" + fixture.homeTeam} />\n      <div className=\"MatchHistory\" id={\"history\" + fixture.homeTeam} />\n    </div>\n  );\n}\n\nconst List = ({ fixtures, mock }) => (\n  <div>\n    <div id=\"Headers\"></div>\n    <ul className=\"FixtureList\" id=\"FixtureList\">\n      {fixtures.map((fixture, i) => (\n        <SingleFixture\n          fixture={fixture}\n          key={fixture.game}\n          count={count}\n          mock={mock}\n        />\n      ))}\n    </ul>\n  </div>\n);\n\nexport function Fixture(props) {\n  [count, setCount] = useState(false);\n  resultValue = props.result;\n  return (\n    <Provider store={store}>\n      <List\n        fixtures={props.fixtures}\n        result={resultValue}\n        count={count}\n        mock={props.mock}\n      />\n    </Provider>\n  );\n}\n","// src/dataSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\n\n// src/dataSlice.js\nconst initialState = {\n  dataHome: localStorage.getItem('homeForm'),\n  dataAway: localStorage.getItem('awayForm'),\n  dataHomeDef: localStorage.getItem('homeFormDef'),\n  dataAwayDef: localStorage.getItem('awayFormDef'),\n  allTeamResultsHome: localStorage.getItem('allTeamResultsHome'),\n  allTeamResultsAway: localStorage.getItem('allTeamResultsAway'),\n  homeDetails:localStorage.getItem('homeDetails'),\n  awayDetails:localStorage.getItem('awayDetails'),\n  fixtureDetails: localStorage.getItem('fixtureDetails')\n};\n\nconst dataSlice = createSlice({\n  name: 'data',\n  initialState,\n  reducers: {\n    setData: (state, action) => {\n      state.data = action.payload;\n    },\n  },\n});\n\nexport const { setData } = dataSlice.actions;\n\nexport default dataSlice.reducer;\n","// src/store.js\nimport { configureStore } from '@reduxjs/toolkit';\nimport dataReducer from './dataSlice'; // Your data reducer\n\nconst store = configureStore({\n  reducer: {\n    data: dataReducer, // Ensure this key matches the key in your initialState\n  },\n});\n\nexport default store;\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./components/Header\";\nimport { Button } from \"./components/Button\";\nimport OddsRadio from \"./components/OddsRadio\";\nimport { Fixture } from \"./components/Fixture\";\nimport mockedFixtures from \"./data/mockedFixtures.json\";\nimport { selectedOdds } from \"./components/OddsRadio\";\nimport Collapsable from \"./components/CollapsableElement\";\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  RedditShareButton,\n  RedditIcon,\n  TelegramShareButton,\n  TelegramIcon,\n  TwitterShareButton,\n  TwitterIcon,\n  WhatsappShareButton,\n  WhatsappIcon,\n} from \"react-share\";\nimport { generateFixtures } from \"./logic/getFixtures\";\nimport { ThreeDots } from \"react-loading-icons\";\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\nimport reactDom from \"react-dom\";\n// require(\"dotenv\").config();\n\nexport const proxyurl = \"https://safe-caverns-99679.herokuapp.com/\";\nexport var fixtureList = [];\nexport let allLeagueData = [];\n\nexport const availableLeagues = [];\nexport var orderedLeagues = [];\n\nconst leagueOrder = [\n  7432, //World Cup 22\n  9660, //premier league 22/23\n  9663, //championship 22/23\n  9582, //league 1 22/23\n  9581, //league 2 22/23\n  9700, //National league 22/23\n  9665, //La Liga 22/23\n  9636, //Scottish Prem 22/23\n  9655, //Bundesliga 22/23\n  9697, //Serie A 22/23\n  9674, //French Prem 22/23\n  9984, //Portagul Prem 22/23\n  9653, //Dutch Prem 22/23\n  9577, //Belgian Pro League 22/23\n  8737, //sweden 23\n  9545, //Danish Prem 22/23\n  8739, //Norway Prem 23\n  9954, //Austrian Prem 22/23\n  9889, //Greek Prem 22/23\n  9553, //Polish prem 22/23\n  9580, //Swiss prem 22/23\n  8741, //Irish Prem 23\n  9675, //Spanish secunda 22/23\n  9808, //Italy serie B 22/23\n  9656, //Bundesliga 2 22/23\n  9741, //German 3rd tier 22/23\n  9621, //French League 2 22/23\n  9637, //Scottish Championship 22/23\n  9639, //Scottish league 1 22/23\n  9638, //Scottish league 2 22/23\n  9890, //Women's prem 23/24\n  8777, //MLS 23\n  9035, //Brazil prem 23\n  8595, //Argentina prem 23\n  // 6935, //Japan 22\n  9525, //Mexico prem 23/24\n  9972, //National league North and South 22/23\n  10505, //Australian A league 23/24\n  8899, //S Korea 23\n];\n\nlet today;\nlet todayFootyStats;\nlet tomorrow;\nlet tomorrowFootyStats;\nlet date;\nlet dateFootyStats;\nlet yesterday;\nlet yesterdayFootyStats;\nlet lastSaturday;\nlet lastSaturdayFootyStats;\nlet historic;\nlet historicFootyStats;\nlet tomorrowsDate;\nlet yesterdaysDate;\nlet saturdayDate;\nlet historicDate;\nlet string;\nlet dateString;\n\n(async function fetchLeagueData() {\n  let leagueList;\n\n  leagueList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}leagueList`);\n\n  let leagueArray;\n  await leagueList.json().then((leagues) => {\n    leagueArray = Array.from(leagues.data);\n  });\n\n  for (let i = 0; i < leagueArray.length; i++) {\n    const league = leagueArray[i];\n    const name = leagueArray[i].name;\n\n    for (let x = 0; x < league.season.length; x++) {\n      const element = league.season[x];\n\n      if (element.year === 2023 || element.year === 20232024) {\n        if (element.id !== 4340 && element.id !== 6935 && element.id !== 7061) {\n          availableLeagues.push({ name: name, element });\n        }\n      }\n    }\n\n    async function mapOrder(array, order, key) {\n      array.sort(function (a, b) {\n        var A = a.element[key],\n          B = b.element[key];\n\n        if (order.indexOf(A) > order.indexOf(B)) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n      return array;\n    }\n    //leagues ordered by id\n    orderedLeagues = await mapOrder(availableLeagues, leagueOrder, \"id\");\n  }\n  return orderedLeagues;\n})();\n\nexport async function getLeagueList() {\n  let i = 0;\n  date = new Date();\n  string = \"Today\";\n\n  async function incrementDate(num, date) {\n    i = i + num;\n    date.setDate(date.getDate() + num);\n    [date, dateFootyStats] = await calculateDate(date);\n    string = dateFootyStats;\n    await renderButtons();\n  }\n\n  async function decrementDate(num, date) {\n    i = i - num;\n    console.log(i);\n    if (i > -60) {\n      date.setDate(date.getDate() - num);\n      [date, dateFootyStats] = await calculateDate(date);\n      string = dateFootyStats;\n      dateString = date;\n      await renderButtons();\n    }\n  }\n\n  async function calculateDate(dateString) {\n    const day = dateString.getDate();\n    const month = dateString.getMonth() + 1;\n    const year = dateString.getFullYear();\n    return [`${month}${day}${year}`, `${year}-${month}-${day}`];\n  }\n\n  [today, todayFootyStats] = await calculateDate(new Date());\n\n  tomorrowsDate = new Date();\n  tomorrowsDate.setDate(tomorrowsDate.getDate() + 1);\n  [tomorrow, tomorrowFootyStats] = await calculateDate(tomorrowsDate);\n\n  yesterdaysDate = new Date();\n  yesterdaysDate.setDate(yesterdaysDate.getDate() - 1);\n  [yesterday, yesterdayFootyStats] = await calculateDate(yesterdaysDate);\n\n  saturdayDate = new Date();\n  saturdayDate.setDate(\n    saturdayDate.getDate() - ((saturdayDate.getDay() + 6) % 7)\n  );\n  saturdayDate.setDate(saturdayDate.getDate() - 2);\n  [lastSaturday, lastSaturdayFootyStats] = await calculateDate(saturdayDate);\n\n  historicDate = new Date();\n  historicDate.setDate(\n    historicDate.getDate() - ((historicDate.getDay() + 6) % 7)\n  );\n  historicDate.setDate(historicDate.getDate() - 9);\n  [historic, historicFootyStats] = await calculateDate(historicDate);\n\n  const text =\n    \"Select a day you would like to retrieve fixtures for from the options above\\n A list of games will be returned once the data has loaded\\n Once all fixtures have loaded, click on “Get Predictions” to see XGTipping's forecasted outcomes for every game\\n If a game has completed, the predictions is displayed on the right and the actual result on the left\\n Each individual fixture is tappable/clickable. By doing so, you can access a range of detailed stats, from comparative charts, granular performance measures to previous meetings.\\n All games are subject to the same automated prediction algorithm with the outcome being a score prediction. Factors that determine the tip include the following, amongst others:\\n - Goal differentials\\n - Expected goal differentials \\n - Attack/Defence performance\\n - Form trends over time\\n - Home/Away records\\n - WDL records\\n - Points per game \\n - A range of other comparative factors\\n  –\\n\";\n\n  const text2 =\n    \"A range of tools are available should you wish to use them\\n Build a multi - Use the '+' or '-' buttons to add or remove a game deemed to be one of XGTIpping's highest confidence tips from the day\\n Exotic of the day: A pre-built exotic multi comprising of XGTipping's highest confidence tips\\n BTTS games: Games where both teams to score is deemed a likely outcome\\n Over 2.5 goals tips: Games where over 2.5 goals are most likely to be scored\\n XG tips: Comprises only games where the expected goal differentials between each team are at their greatest. We believe this shows a true disparity in the form of the two opposing teams\\n Tap the 'How to use' option to hide this text\";\n\n  let textJoined = text.concat(text2);\n\n  let newText = textJoined.split(\"\\n\").map((i) => {\n    return <p>{i}</p>;\n  });\n\n  async function renderButtons() {\n    ReactDOM.render(\n      <div className=\"FixtureButtons\">\n        <div className=\"historicResults\">\n          <Button\n            text={\"Last Saturday\"}\n            className=\"HistoricFixturesButton\"\n            onClickEvent={async () =>\n              fixtureList.push(\n                await generateFixtures(\n                  \"lastSaturday\",\n                  lastSaturday,\n                  selectedOdds,\n                  lastSaturdayFootyStats,\n                  false,\n                  today\n                )\n              )\n            }\n          />\n        </div>\n        <Button\n          text={`<`}\n          className=\"FixturesButton\"\n          onClickEvent={async () => await decrementDate(1, date)}\n        />\n        <Button\n          text={dateFootyStats !== undefined ? dateFootyStats : date}\n          className=\"FixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"todaysFixtures\",\n                dateString,\n                selectedOdds,\n                dateFootyStats,\n                false,\n                today\n              )\n            )\n          }\n        />\n        <Button\n          text={`Today`}\n          className=\"FixturesButtonToday\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"todaysFixtures\",\n                today,\n                selectedOdds,\n                todayFootyStats,\n                true,\n                today\n              )\n            )\n          }\n        />\n        <Button\n          text={\"Tomorrow\"}\n          className=\"FixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"tomorrowsFixtures\",\n                tomorrow,\n                selectedOdds,\n                tomorrowFootyStats,\n                true,\n                today\n              )\n            )\n          }\n        />\n      </div>,\n      document.getElementById(\"Buttons\")\n    );\n  }\n\n  ReactDOM.render(\n    <div className=\"FixtureButtons\">\n      <div className=\"historicResults\">\n        <Button\n          text={\"Last Saturday\"}\n          className=\"HistoricFixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"lastSaturday\",\n                lastSaturday,\n                selectedOdds,\n                lastSaturdayFootyStats,\n                false,\n                today\n              )\n            )\n          }\n        />\n        {/* <Button\n          text={\"Historic predictions\"}\n          className=\"HistoricFixturesButtonRight\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"historic\",\n                historic,\n                selectedOdds,\n                historicFootyStats\n              )\n            )\n          }\n        /> */}\n      </div>\n      <Button\n        text={`<`}\n        className=\"FixturesButton\"\n        onClickEvent={async () => await decrementDate(1, date)}\n      />\n      <Button\n        text={`${string}`}\n        className=\"FixturesButtonToday\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"todaysFixtures\",\n              today,\n              selectedOdds,\n              todayFootyStats,\n              true,\n              today\n            )\n          )\n        }\n      />\n      <Button\n        text={\"Tomorrow\"}\n        className=\"FixturesButton\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"tomorrowsFixtures\",\n              tomorrow,\n              selectedOdds,\n              tomorrowFootyStats,\n              true,\n              today\n            )\n          )\n        }\n      />\n      <span>\n        *Not enough data to predict games in the first few gameweeks -\n        predictions displayed as 'x - x'\n      </span>\n    </div>,\n    document.getElementById(\"Buttons\")\n  );\n  ReactDOM.render(\n    <div className=\"OddsRadios\">\n      <OddsRadio value=\"Fractional odds\"></OddsRadio>\n      <OddsRadio value=\"Decimal odds\"></OddsRadio>\n    </div>,\n    document.getElementById(\"Checkbox\")\n  );\n  ReactDOM.render(\n    <Fragment>\n      <Collapsable\n        // className={\"HowToUse\"}\n        buttonText={\"How to use\"}\n        element={newText}\n      />\n    </Fragment>,\n    document.getElementById(\"XGDiff\")\n  );\n\n  // ReactDOM.render(\n  //   <Button\n  //     text={\"Lowest scoring leagues\"}\n  //     className={\"Under25TeamsButton\"}\n  //     onClickEvent={async () => {\n  //       let leagues = await getLowestScoringLeagues();\n  //       const leagueList = [];\n\n  //       leagues.forEach(async (league) =>\n  //         leagueList.push(\n  //           <ul className=\"GlobalStat\">\n  //             <p className=\"TeamName\">\n  //               {league.league} ({league.leagueCountry})\n  //             </p>\n  //             <li>Average goals: {league.averageGoals}</li>\n  //             <li>Under 2.5 goals %: {league.under25Percentage}%</li>\n  //           </ul>\n  //         )\n  //       );\n\n  //       reactDom.render(\n  //         <div>\n  //           <h3>Leagues with the lowest scoring games</h3>\n  //           <ul>{leagueList}</ul>\n  //         </div>,\n  //         document.getElementById(\"Under25Games\")\n  //       );\n  //     }}\n  //   ></Button>,\n  //   document.getElementById(\"Under25Games\")\n  // );\n\n  // ReactDOM.render(\n  //   <Button\n  //     text={\"Highest scoring leagues\"}\n  //     className={\"Over25TeamsButton\"}\n  //     onClickEvent={async () => {\n  //       let leagues = await getHighestScoringLeagues();\n  //       const leagueList = [];\n\n  //       leagues.forEach(async (league) =>\n  //         leagueList.push(\n  //           <ul className=\"GlobalStat\">\n  //             <p className=\"TeamName\">\n  //               {league.league} ({league.leagueCountry})\n  //             </p>\n  //             <li>Average goals: {league.averageGoals}</li>\n  //             <li>Over 2.5 goals %: {league.over25Percentage}%</li>\n  //           </ul>\n  //         )\n  //       );\n\n  //       reactDom.render(\n  //         <div>\n  //           <h3>Leagues with the highest scoring games</h3>\n  //           <ul>{leagueList}</ul>\n  //         </div>,\n  //         document.getElementById(\"Over25Games\")\n  //       );\n  //     }}\n  //   ></Button>,\n  //   document.getElementById(\"Over25Games\")\n  // );\n}\n\nasync function getHighestScoringLeagues() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}over25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    for (let index = 0; index < 215; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        over25Percentage:\n          leagues.data.top_leagues.data[index].seasonOver25Percentage_overall,\n        division: leagues.data.top_leagues.data[index].division,\n        leagueId: leagues.data.top_leagues.data[index].id,\n      };\n      arr.push(league);\n    }\n  });\n\n  const finalArray = arr.filter(\n    (league) =>\n      leagueOrder.find((element) => element === league.leagueId) &&\n      league.averageGoals >= 2.5\n  );\n\n  let sortedArray = finalArray.sort((a, b) => b.averageGoals - a.averageGoals);\n\n  return sortedArray;\n}\n\nasync function getLowestScoringLeagues() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}under25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    for (let index = 0; index < 215; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        under25Percentage:\n          leagues.data.top_leagues.data[index].seasonUnder25Percentage_overall,\n        leagueId: leagues.data.top_leagues.data[index].id,\n      };\n      arr.push(league);\n    }\n  });\n\n  const finalArray = arr.filter(\n    (league) =>\n      leagueOrder.find((element) => element === league.leagueId) &&\n      league.averageGoals < 2.5\n  );\n\n  let sortedArray = finalArray.sort((a, b) => a.averageGoals - b.averageGoals);\n\n  return sortedArray;\n}\n\nconst welcomeTextUnsplitOne = `Welcome to XGTipping. Your go-to resource for all things football, from predictions, comprehensive head to head stats, results, xg scores, odds, league tables, form, and bespoke multi-builders underpinned by expected goal (XG) data.\\n `;\nlet welcomeTextOne = welcomeTextUnsplitOne.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nconst welcomeTextUnsplitTwo = `XGTipping is completely independent and free to use, relying on a donation model to support running costs. For feedback or feature ideas, get in touch at @TippingXg.`;\nlet welcomeTextTwo = welcomeTextUnsplitTwo.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nfunction App() {\n  getLeagueList();\n  return (\n    <>\n      <div className=\"App\">\n        <Header />\n        <a\n          className=\"SocialLink\"\n          href=\"https://www.reddit.com/r/xgtipping/\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          r/xgtipping\n        </a>\n        <div id=\"LoadingContainer\" className=\"LoadingContainer\" />\n        <div id=\"RadioContainer\" className=\"RadioContainer\">\n          <div id=\"RadioText\" />\n          <div id=\"RadioButtons\" />\n        </div>\n        <div id=\"Day\" />\n        <div id=\"Checkbox\" />\n        <div id=\"ExplainerText\" />\n        <div id=\"Loading\" className=\"Loading\"></div>\n        <div id=\"Buttons\" className=\"Buttons\">\n          <ThreeDots className=\"MainLoading\" fill=\"#030061\" />\n          <div>Loading all fixture and form data...</div>\n        </div>\n        <div id=\"GeneratePredictions\" className=\"GeneratePredictions\" />\n        <div id=\"bestPredictions\" className=\"bestPredictions\" />\n        <div id=\"exoticOfTheDay\" className=\"exoticOfTheDay\" />\n        <div id=\"successMeasure2\" />\n        <div id=\"RowOneContainer\" className=\"RowOneContainer\">\n          <div id=\"BTTS\" className=\"RowOne\" />\n          <div id=\"longShots\" className=\"RowOne\" />\n          <div id=\"draws\" className=\"RowOne\" />\n        </div>\n        <div id=\"insights\" />\n        <div id=\"risk\" />\n        <div id=\"successMeasure\" />\n        <div id=\"tables\" />\n        <div id=\"homeBadge\" />\n        <div id=\"FixtureContainerHeaders\"></div>\n        {/* <StyledKofiButton buttonText=\"Donations\"></StyledKofiButton> */}\n        <div id=\"XGDiff\" />\n        <div id=\"FixtureContainer\">\n          <h6 className=\"WelcomeText\">{welcomeTextOne}</h6>\n          <h6 className=\"GetMatchStatText\">\n            Below is an example of our tips/results overview for you to\n            familiarise yourself with. Get real fixtures using the date buttons,\n            above. When loaded, tap on one to see full match stats\n          </h6>\n          <div className=\"ExplainerContainer\">\n            <span className=\"oddsHomeExplainer\">Home odds</span>\n            <span className=\"emptyHomeTeam\"></span>\n            <span className=\"scoreExplainer\">Result / KO Time</span>\n            <span className=\"predictionExplainer\">Our Prediction</span>\n            <span className=\"emptyAwayTeam\"></span>\n            <span className=\"oddsAwayExplainer\">Away odds</span>\n          </div>\n          <Fixture\n            fixtures={mockedFixtures.matches}\n            // result={false}\n            mock={true}\n            className={\"individualFixture\"}\n          />\n          <div>\n            <h6 className=\"WelcomeText\">{welcomeTextTwo}</h6>\n            <h6 className=\"WelcomeText\">\n              We cover a range of leagues, including\n              <ul className=\"AllLeagues\">\n                <li className=\"League\">Premier League</li>\n                <li className=\"League\">English Football League</li>\n                <li className=\"League\">La Liga</li>\n                <li className=\"League\">Serie A</li>\n                <li className=\"League\">Bundesliga</li>\n                <li className=\"League\">Ligue 1</li>\n                <li className=\"League\">MLS</li>\n                <li className=\"League\">Primeira Liga</li>\n                <li className=\"League\">Loads more...</li>\n              </ul>\n            </h6>\n          </div>\n          <div>\n            <div className=\"DataText\">Raw data from</div>\n            <a\n              className=\"DataLink\"\n              href=\"https://www.footystats.org\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              footystats.org\n            </a>\n          </div>\n          <div className=\"bitcoin\" id=\"bitcoin\">\n            We aim to remain free to use, contributions are always appreciated\n            though:\n            <a\n              href=\"https://www.ko-fi.com/xgtipping\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Donations\n            </a>\n            <span className=\"bitcoinSymbol\">&#x20bf;itcoin address</span>\n            <span className=\"bitcoinAddress\">\n              bc1q7j62txkvhfu0dt3l0s07saze6pjnyzs26wfgp0\n            </span>\n          </div>\n        </div>\n        <div className=\"Social\">\n          <TwitterShareButton\n            url={\"www.xgtipping.com\"}\n            title={\"#XGTipping\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <TwitterIcon size={\"3em\"} round={true} />\n          </TwitterShareButton>\n          <RedditShareButton\n            url={\"www.xgtipping.com\"}\n            title={\"XGTipping\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <RedditIcon size={\"3em\"} round={true} />\n          </RedditShareButton>\n          <FacebookShareButton\n            url={\"www.xgtipping.com\"}\n            quote={\"XGTipping - data-driven football predictions\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <FacebookIcon size={\"3em\"} round={true} />\n          </FacebookShareButton>\n          <WhatsappShareButton\n            url={\"www.xgtipping.com\"}\n            title={\"XGTipping\"}\n            separator=\": \"\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <WhatsappIcon size={\"3em\"} round={true} />\n          </WhatsappShareButton>\n          <TelegramShareButton\n            url={\"XGTipping\"}\n            title={\"XGTipping\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <TelegramIcon size={\"3em\"} round={true} />\n          </TelegramShareButton>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n// import React from \"react\";\n// import { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\n// import HomePage from \"./components/HomePage\";\n// import TeamPage from \"./components/Team\";\n\n// const App = () => {\n//   return (\n//     <Router>\n//       <Routes>\n//       <Route path=\"/team\" element={<TeamPage />} />\n//         <Route path=\"/\" element={<HomePage />} />\n//         {/* Add more routes */}\n//       </Routes>\n//     </Router>\n//   );\n// };\n\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CreateBadge } from \"./createBadge\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction TeamPage() {\n  const [dataState, setData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const responseHome = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}team/${storedFixtureDetailsJson.homeId}`\n      );\n      const resultHome = await responseHome.json();\n\n      const responseAway = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}team/${storedFixtureDetailsJson.awayId}`\n      );\n      const resultAway = await responseAway.json();\n      // setData(result.data.stadium_name);\n\n      let indexHome = resultHome.data.findIndex(\n        (x) => x.season_format === \"Domestic League\"\n      );\n      let indexAway = resultAway.data.findIndex(\n        (x) => x.season_format === \"Domestic League\"\n      );\n\n      setData((test) => ({\n        ...test,\n        scoredOverallHome:\n          resultHome.data[indexHome].stats.seasonScoredNum_overall,\n        playedHomeOnly:\n          resultHome.data[indexHome].stats.seasonMatchesPlayed_home,\n        scoredOverallHomeOnly:\n          resultHome.data[indexHome].stats.seasonScoredNum_home,\n        conceededOverallHome:\n          resultHome.data[indexHome].stats.seasonConcededNum_overall,\n        conceededOverallHomeOnly:\n          resultHome.data[indexHome].stats.seasonConcededNum_home,\n\n        PPGOverallHome: resultHome.data[indexHome].stats.seasonPPG_overall,\n        PPGOverallHomeOnly: resultHome.data[indexHome].stats.seasonPPG_home,\n        leaguePosition_overallHome:\n          resultHome.data[indexHome].stats.leaguePosition_overall,\n        leaguePosition_HomeOnly:\n          resultHome.data[indexHome].stats.leaguePosition_home,\n        averageAttendance:\n          resultHome.data[indexHome].stats.average_attendance_home,\n        BTTSPercentage_overallHome:\n          resultHome.data[indexHome].stats.seasonBTTSPercentage_overall,\n        BTTSAndWinPercentage_Home:\n          resultHome.data[indexHome].stats.BTTS_and_win_percentage_overall,\n        BTTSAndLosePercentage_Home:\n          resultHome.data[indexHome].stats.BTTS_and_lose_percentage_overall,\n        BTTSBothHalvesHome:\n          resultHome.data[indexHome].stats.BTTS_both_halves_percentage_overall,\n        GoalDifferenceHT_overall_Home:\n          resultHome.data[indexHome].stats.GoalDifferenceHT_overall,\n        GD_2hg_overall_Home: resultHome.data[indexHome].stats.gd_2hg_overall,\n        leadingAtHTPercentage_overallHome:\n          resultHome.data[indexHome].stats.leadingAtHTPercentage_overall,\n        seasonOver15Percentage_overallHome:\n          resultHome.data[indexHome].stats.seasonOver15Percentage_overall,\n        seasonOver25Percentage_overallHome:\n          resultHome.data[indexHome].stats.seasonOver25Percentage_overall,\n        seasonOver35Percentage_overallHome:\n          resultHome.data[indexHome].stats.seasonOver35Percentage_overall,\n        seasonOver45Percentage_overallHome:\n          resultHome.data[indexHome].stats.seasonOver45Percentage_overall,\n        scoredBothHalvesPercentage_overallHome:\n          resultHome.data[indexHome].stats.scoredBothHalvesPercentage_overall,\n        shots_on_target_per_goals_scored_overallHome:\n          resultHome.data[indexHome].stats.additional_info\n            .shots_on_target_per_goals_scored_overall,\n        cornersTotalAVG_overallHome:\n          resultHome.data[indexHome].stats.cornersTotalAVG_overall,\n        cardsAVG_overallHome: resultHome.data[indexHome].stats.cardsAVG_overall,\n        foulsAVG_overallHome: resultHome.data[indexHome].stats.foulsAVG_overall,\n        penalties_won_per_match_overallHome:\n          resultHome.data[indexHome].stats.additional_info\n            .penalties_won_per_match_overall,\n        penalty_in_a_match_percentage_overallHome:\n          resultHome.data[indexHome].stats.additional_info\n            .penalty_in_a_match_percentage_overall,\n\n        scoredOverallAway:\n          resultAway.data[indexAway].stats.seasonScoredNum_overall,\n        playedAwayOnly:\n          resultAway.data[indexAway].stats.seasonMatchesPlayed_away,\n        scoredOverallAwayOnly:\n          resultAway.data[indexAway].stats.seasonScoredNum_away,\n        conceededOverallAway:\n          resultAway.data[indexAway].stats.seasonConcededNum_overall,\n        conceededOverallAwayOnly:\n          resultAway.data[indexAway].stats.seasonConcededNum_away,\n\n        PPGOverallAway: resultAway.data[indexAway].stats.seasonPPG_overall,\n        PPGOverallAwayOnly: resultAway.data[indexAway].stats.seasonPPG_away,\n        leaguePosition_overallAway:\n          resultAway.data[indexAway].stats.leaguePosition_overall,\n        leaguePosition_AwayOnly:\n          resultAway.data[indexAway].stats.leaguePosition_away,\n        BTTSPercentage_overallAway:\n          resultAway.data[indexAway].stats.seasonBTTSPercentage_overall,\n        BTTSAndWinPercentage_Away:\n          resultAway.data[indexAway].stats.BTTS_and_win_percentage_overall,\n        BTTSAndLosePercentage_Away:\n          resultAway.data[indexAway].stats.BTTS_and_lose_percentage_overall,\n        BTTSBothHalvesAway:\n          resultAway.data[indexAway].stats.BTTS_both_halves_percentage_overall,\n        GoalDifferenceHT_overall_Away:\n          resultAway.data[indexAway].stats.GoalDifferenceHT_overall,\n        GD_2hg_overall_Away: resultAway.data[indexAway].stats.gd_2hg_overall,\n        leadingAtHTPercentage_overallAway:\n          resultAway.data[indexAway].stats.leadingAtHTPercentage_overall,\n        seasonOver15Percentage_overallAway:\n          resultAway.data[indexAway].stats.seasonOver15Percentage_overall,\n        seasonOver25Percentage_overallAway:\n          resultAway.data[indexAway].stats.seasonOver25Percentage_overall,\n        seasonOver35Percentage_overallAway:\n          resultAway.data[indexAway].stats.seasonOver35Percentage_overall,\n        seasonOver45Percentage_overallAway:\n          resultAway.data[indexAway].stats.seasonOver45Percentage_overall,\n        scoredBothHalvesPercentage_overallAway:\n          resultAway.data[indexAway].stats.scoredBothHalvesPercentage_overall,\n        shots_on_target_per_goals_scored_overallAway:\n          resultAway.data[indexAway].stats.additional_info\n            .shots_on_target_per_goals_scored_overall,\n\n        cornersTotalAVG_overallAway:\n          resultAway.data[indexAway].stats.cornersTotalAVG_overall,\n        cardsAVG_overallAway: resultAway.data[indexAway].stats.cardsAVG_overall,\n        foulsAVG_overallAway: resultAway.data[indexAway].stats.foulsAVG_overall,\n        penalties_won_per_match_overallAway:\n          resultAway.data[indexAway].stats.additional_info\n            .penalties_won_per_match_overall,\n        penalty_in_a_match_percentage_overallAway:\n          resultAway.data[indexAway].stats.additional_info\n            .penalty_in_a_match_percentage_overall,\n      }));\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  const storedDataHome = useSelector((state) => state.data.dataHome);\n  const jsonDataHome = JSON.parse(storedDataHome);\n  const propertyNamesHome = Object.entries(jsonDataHome);\n\n  const storedDataHomeDef = useSelector((state) => state.data.dataHomeDef);\n  const jsonDataHomeDef = JSON.parse(storedDataHomeDef);\n  const propertyNamesHomeDef = Object.entries(jsonDataHomeDef);\n\n  const storedDataallTeamResultsHome = useSelector(\n    (state) => state.data.allTeamResultsHome\n  );\n  const jsonDataallTeamResultsHome = JSON.parse(storedDataallTeamResultsHome);\n  const propertyNamesallTeamResultsHome = Object.values(\n    jsonDataallTeamResultsHome\n  );\n\n  const homeDetails = useSelector((state) => state.data.homeDetails);\n  const jsonHomeDetails = JSON.parse(homeDetails);\n\n  const storedDataAway = useSelector((state) => state.data.dataAway);\n  const jsonDataAway = JSON.parse(storedDataAway);\n  const propertyNamesAway = Object.entries(jsonDataAway);\n\n  const storedDataAwayDef = useSelector((state) => state.data.dataAwayDef);\n  const jsonDataAwayDef = JSON.parse(storedDataAwayDef);\n  const propertyNamesAwayDef = Object.entries(jsonDataAwayDef);\n\n  const storedDataallTeamResultsAway = useSelector(\n    (state) => state.data.allTeamResultsAway\n  );\n  const jsonDataallTeamResultsAway = JSON.parse(storedDataallTeamResultsAway);\n  const propertyNamesallTeamResultsAway = Object.values(\n    jsonDataallTeamResultsAway\n  );\n\n  const awayDetails = useSelector((state) => state.data.awayDetails);\n  const jsonAwayDetails = JSON.parse(awayDetails);\n\n  const storedFixtureDetails = useSelector(\n    (state) => state.data.fixtureDetails\n  );\n  const storedFixtureDetailsJson = JSON.parse(storedFixtureDetails);\n\n  const options = {\n    plugins: {\n      title: {\n        display: true,\n        text: \"Team comparison\",\n      },\n    },\n    aspectRatio: 0.5,\n    maintainAspectRatio: true,\n    responsive: true,\n    scales: {\n      x: {\n        stacked: true,\n      },\n      y: {\n        stacked: true,\n        display: false,\n      },\n    },\n  };\n  const labels = [\n    storedFixtureDetailsJson.homeTeamName,\n    storedFixtureDetailsJson.awayTeamName,\n  ];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        data: [\n          jsonHomeDetails[\"Attacking Strength\"],\n          [jsonAwayDetails[\"Attacking Strength\"]],\n        ],\n        label: \"Attacking Strength\",\n        backgroundColor: \"#030061\",\n      },\n      {\n        data: [\n          jsonHomeDetails[\"Defensive Strength\"],\n          [jsonAwayDetails[\"Defensive Strength\"]],\n        ],\n        label: \"Defensive Strength\",\n        backgroundColor: \"#CC3314\",\n      },\n    ],\n  };\n\n  return (\n    <div className=\"TeamStatsContainer\">\n      <div className=\"FixtureHeadingContiner\">\n        <CreateBadge\n          image={storedFixtureDetailsJson.homeTeamBadge}\n          ClassName=\"HomeTeamBadge\"\n          alt=\"Home team badge\"\n        ></CreateBadge>\n        {`${storedFixtureDetailsJson.homeTeamName} v ${storedFixtureDetailsJson.awayTeamName}`}\n        <CreateBadge\n          image={storedFixtureDetailsJson.awayTeamBadge}\n          ClassName=\"AwayTeamBadge\"\n          alt=\"Away team badge\"\n        ></CreateBadge>\n      </div>\n      <h3>\n        {storedFixtureDetailsJson.stadium} KO: {storedFixtureDetailsJson.time} |\n        Average Attendance: {dataState.averageAttendance}\n      </h3>\n      <h3>\n        XGTipping Prediction: {storedFixtureDetailsJson.homeGoals} -{\" \"}\n        {storedFixtureDetailsJson.awayGoals}\n      </h3>\n      <div className=\"TeamStats\">\n        <ul className=\"HomeTeamStats\">\n          <h3>{storedFixtureDetailsJson.homeTeamName}</h3>\n          {propertyNamesHome.map(([key, value], index) => (\n            <li key={index}>\n              <strong>{key}:</strong>{\" \"}\n              {typeof value === \"object\" ? JSON.stringify(value) : value}\n            </li>\n          ))}\n          <ul className=\"HomeTeamStats\">\n            {propertyNamesHomeDef.map(([key, value], index) => (\n              <li key={index}>\n                <strong>{key}:</strong>{\" \"}\n                {typeof value === \"object\" ? JSON.stringify(value) : value}\n              </li>\n            ))}\n          </ul>\n          <li>Scored overall: {dataState.scoredOverallHome}</li>\n          <li>Conceeded overall: {dataState.conceededOverallHome}</li>\n          <li>\n            Average scored home only:{\" \"}\n            {(\n              dataState.scoredOverallHomeOnly / dataState.playedHomeOnly\n            ).toFixed(2)}\n          </li>\n          <li>\n            Average conceeded home only:{\" \"}\n            {(\n              dataState.conceededOverallHomeOnly / dataState.playedHomeOnly\n            ).toFixed(2)}\n          </li>\n          <li>PPG overall: {dataState.PPGOverallHome}</li>\n          <li>PPG home only: {dataState.PPGOverallHomeOnly}</li>\n          <li>League position: {dataState.leaguePosition_overallHome}</li>\n          <li>\n            League position home only: {dataState.leaguePosition_HomeOnly}\n          </li>\n          <li>BTTS {dataState.BTTSPercentage_overallHome}%</li>\n          <li>BTTS and win: {dataState.BTTSAndWinPercentage_Home}%</li>\n          <li>BTTS and lose: {dataState.BTTSAndLosePercentage_Home}%</li>\n          <li>BTTS both halves: {dataState.BTTSBothHalvesHome}%</li>\n          <li>\n            Goal diff 1st half only: {dataState.GoalDifferenceHT_overall_Home}\n          </li>\n          <li>Goal diff 2nd half only: {dataState.GD_2hg_overall_Home}</li>\n          <li>\n            Leading at half time: {dataState.leadingAtHTPercentage_overallHome}%\n          </li>\n          <li>\n            Over 1.5 goals in games:{\" \"}\n            {dataState.seasonOver15Percentage_overallHome}%\n          </li>\n          <li>\n            Over 2.5 goals in games:{\" \"}\n            {dataState.seasonOver25Percentage_overallHome}%\n          </li>\n          <li>\n            Over 3.5 goals in games:{\" \"}\n            {dataState.seasonOver35Percentage_overallHome}%\n          </li>\n          <li>\n            Over 4.5 goals in games:{\" \"}\n            {dataState.seasonOver45Percentage_overallHome}%\n          </li>\n          <li>\n            Scored both halves:{\" \"}\n            {dataState.scoredBothHalvesPercentage_overallHome}%\n          </li>\n          <li>\n            SOTs per goal:{\" \"}\n            {dataState.shots_on_target_per_goals_scored_overallHome}\n          </li>\n          <li>Corners in game avg: {dataState.cornersTotalAVG_overallHome}</li>\n          <li>Cards avg: {dataState.cardsAVG_overallHome}</li>\n          <li>Fouls against avg: {dataState.foulsAVG_overallHome}</li>\n          <li>\n            Penalties won avg: {dataState.penalties_won_per_match_overallHome}\n          </li>\n          <li>\n            Penalties in match:{\" \"}\n            {dataState.penalty_in_a_match_percentage_overallHome}%\n          </li>\n        </ul>\n        <ul className=\"AwayTeamStats\">\n          <h3>{storedFixtureDetailsJson.awayTeamName}</h3>\n          {propertyNamesAway.map(([key, value], index) => (\n            <li key={index}>\n              <strong>{key}:</strong>{\" \"}\n              {typeof value === \"object\" ? JSON.stringify(value) : value}\n            </li>\n          ))}\n          <ul className=\"AwayTeamStats\">\n            {propertyNamesAwayDef.map(([key, value], index) => (\n              <li key={index}>\n                <strong>{key}:</strong>{\" \"}\n                {typeof value === \"object\" ? JSON.stringify(value) : value}\n              </li>\n            ))}\n          </ul>\n          <li>Scored overall: {dataState.scoredOverallAway}</li>\n          <li>Conceeded overall: {dataState.conceededOverallAway}</li>\n          <li>\n            Average scored away only:{\" \"}\n            {(\n              dataState.scoredOverallAwayOnly / dataState.playedAwayOnly\n            ).toFixed(2)}\n          </li>\n          <li>\n            Average conceeded away only:{\" \"}\n            {(\n              dataState.conceededOverallAwayOnly / dataState.playedAwayOnly\n            ).toFixed(2)}\n          </li>\n          <li>PPG overall: {dataState.PPGOverallAway}</li>\n          <li>PPG away only: {dataState.PPGOverallAwayOnly}</li>\n          <li>League position: {dataState.leaguePosition_overallAway}</li>\n          <li>\n            League position away only: {dataState.leaguePosition_AwayOnly}\n          </li>\n          <li>BTTS: {dataState.BTTSPercentage_overallAway}%</li>\n          <li>BTTS and win: {dataState.BTTSAndWinPercentage_Away}%</li>\n          <li>BTTS and lose: {dataState.BTTSAndLosePercentage_Away}%</li>\n          <li>BTTS both halves: {dataState.BTTSBothHalvesAway}%</li>\n          <li>\n            Goal diff 1st half only: {dataState.GoalDifferenceHT_overall_Away}\n          </li>\n          <li>Goal diff 2nd half only: {dataState.GD_2hg_overall_Away}</li>\n          <li>\n            Leading at half time: {dataState.leadingAtHTPercentage_overallAway}%\n          </li>\n          <li>\n            Over 1.5 goals in games:{\" \"}\n            {dataState.seasonOver15Percentage_overallAway}%\n          </li>\n          <li>\n            Over 2.5 goals in games:{\" \"}\n            {dataState.seasonOver25Percentage_overallAway}%\n          </li>\n          <li>\n            Over 3.5 goals in games:{\" \"}\n            {dataState.seasonOver35Percentage_overallAway}%\n          </li>\n          <li>\n            Over 4.5 goals in games:{\" \"}\n            {dataState.seasonOver45Percentage_overallAway}%\n          </li>\n          <li>\n            Scored both halves:{\" \"}\n            {dataState.scoredBothHalvesPercentage_overallAway}%\n          </li>\n          <li>\n            SOTs per goal:{\" \"}\n            {dataState.shots_on_target_per_goals_scored_overallAway}\n          </li>\n          <li>Corners in game avg: {dataState.cornersTotalAVG_overallAway}</li>\n          <li>Cards avg: {dataState.cardsAVG_overallAway}</li>\n          <li>Fouls against avg: {dataState.foulsAVG_overallAway}</li>\n          <li>\n            Penalties won avg: {dataState.penalties_won_per_match_overallAway}\n          </li>\n          <li>\n            Penalties in match:{\" \"}\n            {dataState.penalty_in_a_match_percentage_overallAway}%\n          </li>\n        </ul>\n        <div className=\"ChartContainer\">\n          <span className=\"Spacer\"></span>\n          <Bar options={options} data={data} className=\"ComparisonBar\" />\n          <span className=\"Spacer\"></span>\n        </div>\n        <ul className=\"HomeTeamResults\">\n          {propertyNamesallTeamResultsHome.map((match, index) => (\n            <>\n              <div className=\"MatchDate\">{match.date}</div>\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{match.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {match.homeGoals} : {match.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{match.awayTeam}</div>\n              </div>\n            </>\n          ))}\n        </ul>\n        <ul className=\"AwayTeamResults\">\n          {propertyNamesallTeamResultsAway.map((match, index) => (\n            <>\n              <div className=\"MatchDate\">{match.date}</div>\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{match.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {match.homeGoals} : {match.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{match.awayTeam}</div>\n              </div>\n            </>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default TeamPage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router, Route, Routes, HashRouter } from \"react-router-dom\";\nimport TeamPage from \"./components/Team\";\nimport { Provider } from \"react-redux\";\nimport store from \"./logic/store\"; // Import your Redux store\nimport {Fixture} from \"./components/Fixture\"\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n    <HashRouter>\n        <Routes>\n          <Route path=\"/fixture\" element={<TeamPage />} />\n          <Route path=\"/\" exact element={<App />} />\n          {/* <Route path=\"/\" element={<Fixture />} /> */}\n        </Routes>\n        </HashRouter>\n    </Provider>\n    ,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}