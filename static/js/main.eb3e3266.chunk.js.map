{"version":3,"sources":["components/Header.js","components/Button.js","components/OddsRadio.js","components/createBadge.js","components/CollapsableElement.js","components/createStatsDiv.js","components/Div.js","logic/getForm.js","components/Increment.js","logic/getBTTSPotential.js","components/Carousel.js","logic/getScorePredictions.js","components/KofiButton.js","components/LeagueTable.js","logic/getFixtures.js","components/HeadToHead.js","components/Table.js","logic/getTeamStats.js","logic/compareFormTrend.js","components/Chart.js","logic/getStats.js","components/Fixture.js","logic/dataSlice.js","logic/store.js","components/DateForm.js","components/Team.js","App.js","components/radio.js","reportWebVitals.js","index.js"],"names":["Header","className","Button","props","id","text","variant","type","onClick","onClickEvent","style","selectedOdds","OddsRadio","handleOptionChange","setState","value","state","this","name","checked","onChange","Component","CreateBadge","image","ClassName","src","alt","flexShrink","Collapsable","transitionTime","trigger","classNameButton","buttonText","classNameFlex","classNameTwo","element","classNameThree","elementTwo","Stats","styleForm","formIndicator","styleBTTS","BTTSBoolean","clicked","formRun","FormTextString","Results","homeOrAway","homeOrAwayResults","BTTSArray","goals","conceeded","possession","XG","XGConceded","goalDifference","goalDifferenceHomeOrAway","sot","dangerousAttacks","leaguePosition","homeOrAwayLeaguePosition","winPercentage","toFixed","drawPercentage","lossPercentage","ppg","formTrend","CardsTotal","CornersAverage","Div","getForm","match","teams","homeId","awayId","fixtureForm","i","team","fetch","process","response","json","then","formData","lastMatchTimestamp","last_updated_match_timestamp","length","incrementValue","riskLevel","Increment","IncrementItem","getNewTips","allTips","DecreaseItem","show","getBTTSPotential","homeGoals","awayGoals","unroundedHomeGoals","unroundedAwayGoals","homeBTTS","bttsAllPercentageHome","homeOnlyBTTS","bttsPercentageHomeHome","awayOnlyBTTS","bttsPercentageAwayAway","awayBTTS","bttsAllPercentageAway","homeG","awayG","combinedBTTS","bttsFraction","status","awayOdds","btts","bttsChosen","totalGoals","rawFinalHomeGoals","rawFinalAwayGoals","SwiperCore","use","EffectCoverflow","Pagination","finalHomeGoals","finalAwayGoals","homeOdds","Slider","effect","autoHeight","grabCursor","centeredSlides","slidesPerView","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","pagination","clickable","element2","element3","element4","element5","StyledKofiButton","color","title","kofiID","Headers","append","drawPredictions","sumStatDAWin","sumStatDALoss","sumStatPossessionWin","sumStatPossessionLoss","sumStatSOTWin","sumStatSOTLoss","sumStatPPGLast10Win","sumStatPPGLast10Loss","sumOddsWin","sumOddsLoss","sumXGForWin","sumXGForLoss","sumXGAgainstWin","sumXGAgainstLoss","allDrawOutcomes","totalROI","totalInvestment","totalProfit","convertTimestamp","timestamp","newDate","Date","toLocaleDateString","split","day","month","year","converted","getPointsFromLastX","lastX","console","log","pointsAddition","points","forEach","game","error","getPastLeagueResults","hOrA","form","date","allLeagueResultsArrayOfObjects","leagueIndex","fixtures","teamsHomeResults","filter","fixture","home_name","item","date_unix","sort","a","b","teamsAwayResults","away_name","homeResults","awayResults","oddsSumHome","oddsSumAway","index","resultedGame","homeGoalCount","team_a_xg","awayGoalCount","team_b_xg","team_a_possession","team_a_shots","team_a_shotsOnTarget","team_a_dangerous_attacks","team_a_corners","odds_ft_1","odds_ft_2","homeTeam","awayTeam","XGAgainst","scored","shots","corners","dateRaw","oddsHome","oddsAway","push","team_b_possession","team_b_shots","team_b_shotsOnTarget","team_b_dangerous_attacks","team_b_corners","reversedResultsAway","allTeamResults","reversedResultsHome","concat","averageOddsHome","averageOddsAway","teamGoalsHome","map","res","teamGoalsAway","teamGoalsAll","teamConceededHome","teamConceededAway","teamConceededAll","teamXGForAll","teamXGAgainstAll","XGSum","reduce","avgXGScored","XGAgainstSum","avgXGConceeded","possessionSum","avgPossession","dangerousAttacksSum","avgDangerousAttacks","shotsSum","avgShots","shotsOnTarget","shotsOnTargetSum","avgShotsOnTarget","cornersSum","cornersAv","last5XG","slice","last5XGSum","last5XGAvgFor","last5XGAgainst","last5XGAgainstSum","last5XGAvgAgainst","XGOverall","parseFloat","XGlast5","XGAgainstAvgOverall","XGAgainstlast5","AveragePossessionOverall","AverageDangerousAttacksOverall","AverageCorners","AverageShotsOnTargetOverall","alpha","beta","allGoalsArrayHome","allConceededArrayHome","sum","sumTwo","predictGoalsWithExponentialSmoothing","forAndAgainstRollingAv","forAndAgainstRollingAvHomeOrAway","allGoalsArrayAway","allConceededArrayAway","bttsHome","bttsAway","bttsAll","bttsHomeCount","bttsHomeString","bttsHomePercentage","bttsAwayCount","bttsAwayString","bttsAwayPercentage","bttsAllCount","bttsAllString","bttsAllPercentage","r","x","predictNextWeightedMovingAverage","teamGoalsHomeRollingAverage","teamGoalsAwayRollingAverage","teamConceededHomeRollingAverage","teamConceededAwayRollingAverage","avgScored","last5","teamName","last5Sum","last5AvgScored","last5Conceeded","last5ConceededSum","last5AvgConceeded","last10","last10Sum","last10AvgScored","last10Conceeded","last10ConceededSum","last10AvgConceeded","last5Goals","last10Goals","last5GoalsConceeded","last10GoalsConceeded","teamGoalsAllRollingAverage","teamGoalsConceededAllRollingAverage","avgConceeded","numbers","windowSize","startIndex","window","weights","Array","from","_","acc","num","movingAverage","w","calculateWeightedAverage","arr","weightedSum","totalWeight","weight","Math","pow","teamGoalsFor","teamGoalsAgainst","lambdaFor","lambdaAgainst","predictedGoalsFor","predictedGoalsAgainst","goalsFor","goalsAgainst","compareStat","statOne","statTwo","stat1","stat2","normalizeValues","normalizedValue1","normalizedValue2","finalValue1","finalValue2","diff","statDiff","getClinicalRating","dangerousAttackConversion","rating","score","getPointsDifferential","pointsHomeAvg","pointsAwayAvg","differential","getPointWeighting","pointsDiff","pointsDiffWeightingHome","pointsDiffWeightingAway","compareFormTrend","recentForm","distantForm","scoreTotal","recent","distant","getPointAverage","pointTotal","games","poissonDistribution","lambda","k","numerator","exp","denominator","factorial","n","result","calculateAverageGoals","adjustGoalsAvg","goalsAvg","strengthRatio","predictScore","goalsForTeam1","goalsAgainstTeam1","goalsForTeam2","goalsAgainstTeam2","team1Metrics","team2Metrics","team1AverageGoalsFor","team1AverageGoalsAgainst","team2AverageGoalsFor","team2AverageGoalsAgainst","team1StrengthRatio","weighting","team2StrengthRatio","adjustedTeam1AverageGoals","adjustedTeam2AverageGoals","adjustedTeam1AverageGoalsAgainst","adjustedTeam2AverageGoalsAgainst","maxGoals","scores","j","team1GoalExpectation","team2GoalExpectation","isFinite","probability","team1Score","team2Score","top5Scores","value1","value2","minRange","maxRange","Error","absValue1","abs","absValue2","normalizedAbsValue1","totalAbs","normalizedAbsValue2","compareTeams","homeForm","awayForm","homeAttackStrength","attackingStrength","homeDefenceStrength","defensiveStrength","homePossessionStrength","possessionStrength","awayAttackStrength","awayDefenceStrength","awayPossessionStrength","getXGtoActualDifferentialStrength","actualToXGDifference","homeXGtoActualDiffStrength","awayXGtoActualDiffStrength","attackStrengthComparison","defenceStrengthComparison","possessiontrengthComparison","xgActualComparison","xgForStrength","xgAgainstStrength","recentXGComparison","homeOrAwayAverage","homeAwayPointAverageComparison","last5Points","fiveGameComparison","oddsComparison","homeAttackAdvantage","homeAdvantage","dangerousAttacksWithConverstionComparison","goalDiffHomeOrAwayComparison","directnessOverallStrength","overallDirectnessComparison","directnessHome","directnessAway","hOrADirectnessComparison","accuracyOverallStrength","accuracyComparison","oddsWeighting","game_week","calculation","homeWinOutcomeProbability","homeTeamWinPercentage","awayTeamLossPercentage","awayWinOutcomeProbability","homeTeamLossPercentage","awayTeamWinPercentage","drawOutcomeProbability","homeTeamDrawPercentage","awayTeamDrawPercentage","lastGame","last2Points","XGdifferentialValueRaw","improving","calculateScore","divider","calculate","allForm","find","home","away","PlayedHome","PlayedAway","LastFiveForm","previousToLastGame","last2","last6Points","LastSixForm","last10Points","LastTenForm","twoGameAverage","last3Points","threeGameAverage","fiveGameAverage","sixGameAverage","tenGameAverage","lastHomeOrAwayPoints","ScoredAverage","ScoredOverall","ConcededAverage","ConcededOverall","ScoredAverageShortTerm","ConcededAverageShortTerm","longTermAverageGoals","longTermAverageConceeded","GoalsInGamesAverageHome","GoalsInGamesAverageAway","recentGoalDiff","distantGoalDiff","recentDA","distantDA","recentPosession","distantPosession","recentCleanSheet","CleanSheetPercentage","distantCleanSheet","recentFormArray","distantFormArray","formTrendScore","expectedGoals","ScoredAverageShortAndLongTerm","conceededAverageShortAndLongTerm","longTermGoalDifference","shortTermGoalDifference","XGdifferential","XGdifferentialRecent","actualToXGDifferenceRecent","formHome","formAway","homeTenGameAvg","awayTenGameAvg","homeTwoGameAvg","awayTwoGameAvg","pointsDiff10","pointsDiff2","last10WeightingHome","last10WeightingAway","last2WeightingHome","last2WeightingAway","clinicalRating","clinicalScore","XGdifferentialValue","leagueID","predictedGoalsBasedOnHomeAv","predictedGoalsBasedOnAwayAv","allTeamGoalsBasedOnAverages","predictedGoalsConceededBasedOnHomeAv","predictedGoalsConceededBasedOnAwayAv","allTeamGoalsConceededBasedOnAverages","averageScoredLeague","averageConceededLeague","last10btts","last10bttsHome","last10bttsAway","bttsPercentageHomeAway","bttsPercentageAwayHome","homeTeamHomePositionRaw","awayTeamAwayPositionRaw","homePositionHomeOnly","awayPositionAwayOnly","homePosition","homeRawPosition","awayPosition","awayRawPosition","AttackingPotency","AttacksHome","AttacksAverage","attackingMetricsHome","AverageShots","undefined","attackingMetricsAway","defensiveMetricsHome","defensiveMetricsAway","attackingMetrics","defensiveMetrics","calculateAttackingStrength","calculateDefensiveStrength","calculateMetricStrength","directnessOverall","AverageShotsHomeOrAway","AveragePossession","shootingAccuracy","teamComparisonScore","teamStrengthWeighting","scorePredictions","homeGoalDiff","awayGoalDiff","goalsDifferential","rollingAverageGoalsDifferential","goalCalcHomeShortTerm","goalCalcAwayShortTerm","homeLeagueOrAllFormAverageGoals","LeagueAverageGoals","LeagueAverageConceded","awayLeagueOrAllFormAverageGoals","factorOneHome","factorOneAway","factorTwoHome","factorTwoAway","scoreDiff","homeComparisonWeighting","awayComparisonWeighting","ceil","floor","round","difference","prediction","includeInMultis","pointsDifferential","pointsDifferentialValue","pointsDifferentialValueRaw","rollingGoalDiffDifferential","rollingGoalDiff","rollingGoalDiffValue","dangerousAttacksDifferential","dangerousAttacksDiff","dangerousAttacksDiffValue","winner","outcome","predictionOutcome","over25PredictionOutcome","bttsOutcome","total","parseInt","total2","profit","getSuccessMeasure","sumProfit","investment","exactScores","successCount","netProfit","hasOwnProperty","exactScore","ROI","operand","operandTwo","exactScoreHitRate","successRate","ReactDOM","render","document","getElementById","price","combinations","gamesInExotic","exoticStake","exoticString","allTipsSorted","newArray","bestBets","Over25Tips","XGDiffTips","rollingDiffTips","dangerousAttacksDiffTips","pointsDiffTips","exoticArray","bttsArray","accumulatedOdds","predictions","array","tip","indexOf","rawOdds","renderTips","getScorePrediction","mocked","mock","Promise","all","matches","goalsA","goalsB","unroundedGoalsA","unroundedGoalsB","outcomeSymbol","over25PredictionOutcomeSymbol","bttsOutcomeSymbol","fractionHome","predictionObject","odds","comparisonScore","rawComparisonScore","goalDifferential","experimentalCalc","fractionAway","Over25PredictionObject","decimalOdds","homeDoubleChance","over25Odds","doubleChanceOutcome","goalTotalUnrounded","XGPredictionObject","otherTeam","pointsDiffObject","rollingDiffObject","dangerousAttacksDiffObject","RenderAllFixtures","bool","getMultis","getCoverBetMaxReturns","getAccumulatorPrice","priceArray","minAccSize","stake","perms","getUniquePermutations","permLength","permutations","newArr","splice","twoDimArrayUnion","arr1","arr2","duplicate","NewlineText","str","toggleState","setIsOff","upArrow","StyledTableCell2","withStyles","theme","head","backgroundColor","padding","paddingTop","paddingBottom","textAlign","fontSize","fontFamily","margin","body","TableCell","StyledTableCell","StyledTableRow","root","TableRow","LeagueTable","useState","singleResult","rows","Teams","component","scope","width","Name","Played","Wins","Draws","Losses","For","Against","GoalDifference","Points","Form","Key","leagueResults","team_a_red_cards","team_b_red_cards","leagueResultsOlder","getTopScorersTeam","ID","sorted","league","order","sortedByForm","LastWeeksResults","GamesPlayed","LeagueID","TableContainer","Paper","Table","marginTop","marginBottom","TableHead","TableBody","mostRecentGameweek","seasonAVG_home","seasonAVG_away","seasonBTTSPercentage","seasonOver05Percentage_overall","seasonOver15Percentage_overall","seasonOver25Percentage_overall","seasonOver35Percentage_overall","seasonOver45Percentage_overall","over75CornersPercentage_overall","over85CornersPercentage_overall","over95CornersPercentage_overall","over105CornersPercentage_overall","over115CornersPercentage_overall","over125CornersPercentage_overall","cornersAVG_overall","cardsAVG_overall","top_scorers","known_as","club_team_id","goals_overall","fixtureResponse","leagueInstance","lastThreeFormHome","lastThreeFormAway","lastFiveFormHome","lastFiveFormAway","lastSixFormHome","lastSixFormAway","lastTenFormHome","lastTenFormAway","leagueOrAll","formRunHome","formRunAway","WDLinLeagueHome","WDLinLeagueAway","HomeAverageGoals","homeAverageGoals","HomeAverageConceded","homeAverageConceded","AwayAverageGoals","awayAverageGoals","AwayAverageConceded","awayAverageConceded","oddslib","require","fixtureArray","leagueGames","leagueArray","leagueIdArray","tableArray","worldCupArray","generateTables","allResults","currentLeagueId","data","specific_tables","groups","table","currentTeam","wdl_record","toUpperCase","Position","cleanName","matchesPlayed","seasonWins_overall","seasonDraws_overall","seasonLosses_overall","seasonGoals","seasonConceded_home","seasonConceded_away","seasonGoalDifference","LastXPoints","wdl","seasonConceded","group","league_table","all_matches_table_overall","results","mostRecentGame","pop","gameweeksResults","leagueTable","leagueStatistics","stats","statistics","createFixture","mockBool","roundedHomeOdds","roundedAwayOdds","homeFraction","to","precision","awayFraction","bttsOdds","roundedBTTSOdds","homeTeamWinsPercentage","homeTeamLossesPercentage","homeTeamDrawsPercentage","awayTeamWinsPercentage","awayTeamLossesPercentage","awayTeamDrawsPercentage","Fixture","isFunctionRunning","generateFixtures","footyStatsFormattedDate","current","todaysDate","getPrefix","position","teamPositionPrefix","updateResults","method","headers","Accept","JSON","stringify","height","fill","url","formUrl","formArray","leaguesStored","storedForm","isFormStored","isStoredLocally","orderedLeagues","leaguePositions","allLeagueResults","leagues","allGames","startDate","getTime","targetDate","orderedLeague","gamesFiltered","mostRecentResults","shortenedResults","pre_match_teamA_overall_ppg","pre_match_teamB_overall_ppg","leagueObj","homeLeague","awayLeague","all_matches_table_home","all_matches_table_away","regularSeason","season","string","stringHome","stringAway","rawPosition","homeFormName","awayFormName","homeSeasonWinPercentage","seasonWins","awaySeasonWinPercentage","homeSeasonLossPercentage","seasonLosses_home","awaySeasonLossPercentage","seasonLosses_away","homeSeasonDrawPercentage","seasonDraws","awaySeasonDrawPercentage","homeSeasonMatchesPlayed","awaySeasonMatchesPlayed","played","o","competition_id","unixTimestamp","dateObject","previousLeagueName","leagueName","time","toLocaleString","hour","minute","drawOdds","odds_ft_x","odds_doublechance_1x","awayDoubleChance","odds_doublechance_x2","odds_btts_yes","homeID","awayID","homeTeamInfo","awayTeamInfo","homeTeaminLeague","awayTeaminLeague","teamPositionHome","teamPositionHomeTable","teamPositionAwayTable","homeTeamWinPercentageHome","awayTeamWinPercentageAway","homeTeamLossPercentageHome","awayTeamLossPercentageAway","homeTeamDrawPercentageHome","awayTeamDrawPercentageAway","teamPositionAway","homePrefix","homePrefixHomeTable","awayPrefix","awayPrefixAwayTable","homeSeasonPPG","awaySeasonPPG","homeTeaminHomeLeague","awayTeaminAwayLeague","homeFormString5","additional_info","formRun_overall","awayFormString5","homeFormString6","awayFormString6","homeFormString10","awayFormString10","homeFormRun","formRun_home","awayFormRun","formRun_away","season_format","xg_for_avg_overall","xg_for_avg_home","seasonScoredNum_overall","seasonScoredAVG_home","seasonMatchesPlayed_home","seasonMatchesPlayed_away","seasonConcededNum_overall","seasonConcededAVG_home","xg_against_avg_overall","XGAgainstAverage","xg_against_avg_home","seasonCSPercentage_overall","possessionAVG_overall","possessionAVG_home","shotsOnTargetAVG_overall","AverageShotsOnTarget","shotsOnTargetAVG_home","dangerous_attacks_avg_overall","PPG","seasonPPG_overall","attacks_avg_home","AttacksAway","attacks_avg_away","AverageDangerousAttacks","dangerous_attacks_avg_home","homeDefenceAdvantage","BTTSPercentage","seasonBTTSPercentage_home","LeagueOrAll","LeaguePosition","shotsAVG_overall","shotsAVG_home","seasonGoalDifference_overall","seasonGoalDifference_home","seasonBTTSPercentage_overall","cardsTotal_overall","scoredBothHalvesPercentage_overall","lastThreeForm","SeasonPPG","WinPercentage","LossPercentage","DrawPercentage","BttsPercentage","BttsPercentageHomeOrAway","ScoredBothHalvesPercentage","LastMatch","WDLRecord","xg_for_avg_away","seasonScoredAVG_away","seasonConcededAVG_away","xg_against_avg_away","possessionAVG_away","shotsOnTargetAVG_away","dangerous_attacks_avg_away","seasonBTTSPercentage_away","shotsAVG_away","seasonGoalDifference_away","teamIDHome","teamIDAway","leagueId","homeBadge","home_image","awayBadge","away_image","homePpg","home_ppg","awayPpg","away_ppg","homeTeamHomePosition","awayTeamAwayPosition","odds_ft_over25","btts_potential","stadium","stadium_name","expectedGoalsHomeToDate","team_a_xg_prematch","expectedGoalsAwayToDate","team_b_xg_prematch","setTimeout","HeadToHead","homeWins","awayWins","draws","averageGoals","bestHomeOdds","bestAwayOdds","lastGameStadiumName","lastGameDate","lastGameHomeTeam","lastGameHomeGoals","lastGameAwayGoals","lastGameAwayTeam","secondToLastGameStadiumName","secondToLastGameDate","secondToLastGameHomeTeam","secondToLastGameHomeGoals","secondToLastGameAwayGoals","secondToLastGameAwayTeam","lineHeight","CustomizedTables","align","o05Stat","o05Odds","u05Odds","o15Stat","o15Odds","u15Odds","o25Stat","o25Odds","u25Odds","o35Stat","o35Odds","u35Odds","BTTSStat","BTTSForecast","BTTSOdds","BTTSOddsNo","getTeamStats","identifier","getBTTSPercentage","getFairOdds","impliedProbability","impliedProbabilityDivided","homeToal","awayTotal","fixtureHistory","matchArr","h2h","previous_matches_ids","oddsComparisonHomeArray","oddsComparisonAwayArray","odds_comparison","sortedHomeOdds","Object","entries","sortedAwayOdds","bestHomeOddsProvider","bestAwayOddsProvider","previous_matches_results","totalMatches","lastMatch","secondMatchExists","secondToLastMatch","previousMatch","previousMatchDetails","getDate","getMonth","getFullYear","secondToPreviousMatch","secondToPreviousMatchDetails","dateObject2","date2","betting_stats","bttsPercentage","fairOddsBTTSYes","fairOddsBTTSNo","team_a_wins","team_b_wins","draw","avg_goals","isNaN","over05Percentage","over15Percentage","o15Forecast","o15_potential","odds_ft_over05","odds_ft_under05","odds_ft_over15","odds_ft_under15","over25Percentage","o25Forecast","o25_potential","odds_ft_under25","over35Percentage","o35Forecast","o35_potential","odds_ft_over35","odds_ft_under35","odds_btts_no","CornersStat","CornersForecast","corners_potential","CornersOdds","odds_corners_over_105","getOverOrUnderText","xgSum","overUnderAchievingSum","getXGDifferential","xgFor","xgAgainst","xgDiff","goalDiff","compareXgAndGoalDiff","getAttackingSummary","goalsRecent","goalsLongTerm","getDefenceSummary","cleansheetStat","lastx","ten","five","xgText","attackString","defenceString","pointsAverageTotal","GenerateFormSummary","Chart","data1","options","responsive","aspectRatio","maintainAspectRatio","layout","elements","point","radius","scales","y","suggestedMin","suggestedMax","grid","borderWidth","borderColor","ticks","font","size","display","plugins","legend","labels","boxHeight","keys","datasets","label","team1","tension","team2","data2","RadarChart","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","angleLines","BarChart","datasetOne","idx","numOne","numTwo","tempArr","firstNum","secondNum","max","findLargestNum","min","context","dataIndex","dataset","indexAxis","bar","tooltip","enabled","metric","ranges","normalizedValue","metricName","metricValue","averagePossession","accuracyOverall","weightedScore","XGDiff","strength","ChartJS","register","CategoryScale","LinearScale","RadialLinearScale","PointElement","ArcElement","Filler","BarElement","LineElement","Title","Tooltip","Legend","rollingGoalDiffTotalHome","rollingGoalDiffTotalAway","displayBool","testBool","styling","alert","getPointsFromGames","formArr","pairings","W","D","L","arrayOfIndividualPoints","getLastGameResult","homeXG","awayXG","homeShots","awayShots","homeSot","awaySot","homeDangerousAttacks","awayDangerousAttacks","homePossession","awayPossession","homeRed","awayRed","homePPG","awayPPG","StatsHome","gameCount","formDataHome","Last5","gameArrayHomeTeamHomeGames","AverageGoals","AverageConceeded","AverageXG","AverageXGConceded","homeTenGameAverage","homeSixGameAverage","homeFiveGameAverage","homeLastGame","ResultsHomeOrAway","wonHomeOrAwayOnly","FormTextStringHome","StatsAway","formDataAway","gameArrayAwayTeamAwayGames","awayTenGameAverage","awaySixGameAverage","awayFiveGameAverage","awayLastGame","FormTextStringAway","gameStats","gameArrayHome","gameArrayAway","goalDiffHomeMovingAv","goalDiffAwayMovingAv","getEMA","p","resultHome","resultHomeOnly","timeZone","won","goalsScored","goalsConceeded","winningTeam","goalDiffArrayHome","cumulativeSumHome","resultAway","resultAwayOnly","goalDiffArrayAway","cumulativeSumAway","bttsArrayHome","bttsArrayAway","resultsArrayHome","resultsArrayAway","homeFormTrend","awayFormTrend","formTextStringHome","formTextStringAway","homeXGForStrength","homeXGAgainstStrength","homeDirectnessStrength","homeAccuracyOverallStrength","awayXGForStrength","awayXGAgainstStrength","awayDirectnessStrength","awayAccuracyOverallStrength","formPointsHome","formPointsAway","Last5PPG","formArrayHome","formArrayAway","chartType","overviewHome","overviewAway","pointsHome","pointsHomeAv","pointsAway","pointsAwayAv","resultValue","count","mockValue","initialState","dataHome","localStorage","getItem","dataAway","dataHomeDef","dataAwayDef","allTeamResultsHome","allTeamResultsAway","homeDetails","awayDetails","fixtureDetails","dataSlice","createSlice","reducers","setData","action","payload","actions","store","configureStore","reducer","dataReducer","GetDivider","matchStatus","isPrediction","renderLeagueName","renderTable","SingleFixture","dispatch","useDispatch","StoreData","homeTeamName","homeTeamBadge","awayTeamName","awayTeamBadge","setItem","key1","key2","open","createStatsDiv","onMouseDown","handleButtonClick","List","DateField","TeamPage","today","todayFootyStats","tomorrow","tomorrowFootyStats","dateFootyStats","lastSaturday","lastSaturdayFootyStats","tomorrowsDate","yesterdaysDate","saturdayDate","historicDate","dateString","dataState","useEffect","fetchData","storedFixtureDetailsJson","responseHome","responseAway","indexHome","findIndex","indexAway","test","scoredOverallHome","playedHomeOnly","scoredOverallHomeOnly","seasonScoredNum_home","conceededOverallHome","conceededOverallHomeOnly","seasonConcededNum_home","PPGOverallHome","PPGOverallHomeOnly","seasonPPG_home","leaguePosition_overallHome","leaguePosition_overall","leaguePosition_HomeOnly","leaguePosition_home","averageAttendance","average_attendance_home","BTTSPercentage_overallHome","BTTSAndWinPercentage_Home","BTTS_and_win_percentage_overall","BTTSAndLosePercentage_Home","BTTS_and_lose_percentage_overall","BTTSBothHalvesHome","BTTS_both_halves_percentage_overall","GoalDifferenceHT_overall_Home","GoalDifferenceHT_overall","GD_2hg_overall_Home","gd_2hg_overall","leadingAtHTPercentage_overallHome","leadingAtHTPercentage_overall","seasonOver15Percentage_overallHome","seasonOver25Percentage_overallHome","seasonOver35Percentage_overallHome","seasonOver45Percentage_overallHome","scoredBothHalvesPercentage_overallHome","shots_on_target_per_goals_scored_overallHome","shots_on_target_per_goals_scored_overall","cornersTotalAVG_overallHome","cornersTotalAVG_overall","cardsAVG_overallHome","foulsAVG_overallHome","foulsAVG_overall","penalties_won_per_match_overallHome","penalties_won_per_match_overall","penalty_in_a_match_percentage_overallHome","penalty_in_a_match_percentage_overall","scoredOverallAway","playedAwayOnly","scoredOverallAwayOnly","seasonScoredNum_away","conceededOverallAway","conceededOverallAwayOnly","seasonConcededNum_away","PPGOverallAway","PPGOverallAwayOnly","seasonPPG_away","leaguePosition_overallAway","leaguePosition_AwayOnly","leaguePosition_away","BTTSPercentage_overallAway","BTTSAndWinPercentage_Away","BTTSAndLosePercentage_Away","BTTSBothHalvesAway","GoalDifferenceHT_overall_Away","GD_2hg_overall_Away","leadingAtHTPercentage_overallAway","seasonOver15Percentage_overallAway","seasonOver25Percentage_overallAway","seasonOver35Percentage_overallAway","seasonOver45Percentage_overallAway","scoredBothHalvesPercentage_overallAway","shots_on_target_per_goals_scored_overallAway","cornersTotalAVG_overallAway","cardsAVG_overallAway","foulsAVG_overallAway","penalties_won_per_match_overallAway","penalty_in_a_match_percentage_overallAway","storedDataHome","useSelector","jsonDataHome","parse","propertyNamesHome","storedDataHomeDef","jsonDataHomeDef","propertyNamesHomeDef","storedDataallTeamResultsHome","jsonDataallTeamResultsHome","propertyNamesallTeamResultsHome","values","jsonHomeDetails","storedDataAway","jsonDataAway","propertyNamesAway","storedDataAwayDef","jsonDataAwayDef","propertyNamesAwayDef","storedDataallTeamResultsAway","jsonDataallTeamResultsAway","propertyNamesallTeamResultsAway","jsonAwayDetails","storedFixtureDetails","key","stacked","fixtureList","availableLeagues","leagueOrder","decrementDate","calculateDate","renderButtons","setDate","getDay","textJoined","newText","leagueList","mapOrder","A","B","welcomeTextOne","welcomeTextTwo","App","getLeagueList","href","target","rel","mockedFixtures","TwitterShareButton","boxShadow","TwitterIcon","RedditShareButton","RedditIcon","FacebookShareButton","quote","FacebookIcon","WhatsappShareButton","separator","WhatsappIcon","TelegramShareButton","TelegramIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","path","Team","exact"],"mappings":"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","file":"static/js/main.eb3e3266.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n      <h1 className=\"HeaderContainer\">XG Tipping</h1>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nexport function Button(props) {\n  return (\n    <div id=\"Button\">\n      <button data-cy={props.text} variant=\"primary\" type=\"button\" onClick={props.onClickEvent} className={props.className} style={props.style}>\n        {props.text}\n      </button>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nexport var selectedOdds = \"Fractional odds\";\n\nexport class OddsRadio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOdds: this.props.value,\n    };\n  }\n\n  handleOptionChange = () => {\n    this.setState({\n      selectedOdds: this.props.value,\n    });\n    selectedOdds = this.state.selectedOdds;\n  };\n\n  render() {\n    return (\n      <section className=\"dark2\">\n        <div className={this.props.className}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"odds\"\n              checked={this.state.checked}\n              onChange={this.handleOptionChange}\n              data-cy={this.props.value}\n            />\n            <span className=\"design\"></span>\n            <span className=\"text\">{this.props.value}</span>\n          </label>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default OddsRadio;\n","import React from \"react\";\n\nexport function CreateBadge(props) {\n\n  if(props.image === \"-\"){\n    return (\n      <div className={props.ClassName} />\n    );\n  } else {\n    return (\n      <img\n        src={`https://cdn.footystats.org/img/${props.image}`}\n        className={props.ClassName}\n        alt={props.alt}\n        flex-shrink={props.flexShrink}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Collapsible from \"react-collapsible\";\n\nconst Collapsable = (props) => {\n  return (\n    <Collapsible transitionTime={300} trigger={<button className={props.classNameButton}>{props.buttonText}</button>} className={props.className? props.className: \"Collapsable\"}>\n      <div className={props.classNameFlex? props.classNameFlex: \"\"}>\n      <span className={props.classNameTwo? props.classNameTwo: props.buttonText} style={props.style} key={`123${props.buttonText}`}>{props.element}</span>\n      <span className={props.classNameThree? props.classNameTwo: props.buttonText} key={`456${props.buttonText}`}>{props.elementTwo}</span>\n      </div>\n    </Collapsible>\n  );\n};\n\n\nexport default Collapsable;","import React, { Fragment } from \"react\";\n\nfunction Stats(props) {\n  let shouldOpen = props.clicked\n  function styleForm(formIndicator) {\n    let className;\n    if (formIndicator === \"W\") {\n      className = \"win\";\n    } else if (formIndicator === \"D\") {\n      className = \"draw\";\n    } else if (formIndicator === \"L\") {\n      className = \"loss\";\n    }\n    return className;\n  }\n\n  function styleBTTS(BTTSBoolean) {\n    let className;\n    if (BTTSBoolean === \"\\u2714\") {\n      className = \"BTTSTrue\";\n    } else if (BTTSBoolean === \"\\u2718\") {\n      className = \"BTTSFalse\";\n    }\n    return className;\n  }\n\n  if (props.formRun) {\n    return (\n      <Fragment>\n        <ul className={props.className} style={props.style}>\n          <li className=\"FormSummaryHome\">{props.FormTextString}</li>\n          <li className=\"FormHeader\">\n            League results (most recent on right)\n          </li>\n          <li key={`last5League`} className=\"last5League\">\n          <span className={styleForm(props.Results[5])}>\n              {props.Results[5]}\n            </span>\n            <span className={styleForm(props.Results[4])}>\n              {props.Results[4]}\n            </span>\n            <span className={styleForm(props.Results[3])}>\n              {props.Results[3]}\n            </span>\n            <span className={styleForm(props.Results[2])}>\n              {props.Results[2]}\n            </span>\n            <span className={styleForm(props.Results[1])}>\n              {props.Results[1]}\n            </span>\n            <span className={styleForm(props.Results[0])}>\n              {props.Results[0]}\n            </span>\n          </li>\n          <li className=\"FormHeader\">\n            {props.homeOrAway} form (most recent on right)\n          </li>\n          <li key={`last5${props.homeOrAwayResults}`} className=\"FormHomeOrAway\">\n          <span className={styleForm(props.homeOrAwayResults[5])}>\n              {props.homeOrAwayResults[5]}\n            </span>\n            <span className={styleForm(props.homeOrAwayResults[4])}>\n              {props.homeOrAwayResults[4]}\n            </span>\n            <span className={styleForm(props.homeOrAwayResults[3])}>\n              {props.homeOrAwayResults[3]}\n            </span>\n            <span className={styleForm(props.homeOrAwayResults[2])}>\n              {props.homeOrAwayResults[2]}\n            </span>\n            <span className={styleForm(props.homeOrAwayResults[1])}>\n              {props.homeOrAwayResults[1]}\n            </span>\n            <span className={styleForm(props.homeOrAwayResults[0])}>\n              {props.homeOrAwayResults[0]}\n            </span>\n          </li>\n          <li\n            key=\"BTTSArrayHomeOrAway\"\n            className=\"BTTSArrayHomeOrAway\"\n            data-cy={props.name + \"BTTSArrayHomeOrAway\"}\n          >\n            <div className=\"BTTSResults\">BTTS</div>\n            <span className={styleBTTS(props.BTTSArray[5])}>{props.BTTSArray[5]}</span>\n            <span className={styleBTTS(props.BTTSArray[4])}>{props.BTTSArray[4]}</span>\n            <span className={styleBTTS(props.BTTSArray[3])}>{props.BTTSArray[3]}</span>\n            <span className={styleBTTS(props.BTTSArray[2])}>{props.BTTSArray[2]}</span>\n            <span className={styleBTTS(props.BTTSArray[1])}>{props.BTTSArray[1]}</span>\n            <span className={styleBTTS(props.BTTSArray[0])}>{props.BTTSArray[0]}</span>\n          </li>\n          <li\n            key=\"TeamScored\"\n            className=\"TeamScored\"\n            data-cy={props.name + \"teamScored\"}\n          >\n            {`Avg goals scored - ${props.goals}`}\n          </li>\n          <li\n            key=\"TeamConceeded\"\n            className=\"TeamConceeded\"\n            data-cy={props.name + \"teamConceded\"}\n          >\n            {`Avg goals conceeded - ${props.conceeded}`}\n          </li>\n          <li\n            key=\"TeamPossession\"\n            className=\"TeamPossession\"\n            data-cy={props.name + \"teamPossession\"}\n          >\n            {`Avg possession - ${props.possession}%`}\n          </li>\n          <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name + \"teamXG\"}>\n            {`Avg XG - ${props.XG}`}\n          </li>\n          <li\n            key=\"TeamXGConceded\"\n            className=\"TeamXGConceded\"\n            data-cy={props.name + \"teamXGConceded\"}\n          >\n            {`Avg XG conceded - ${props.XGConceded}`}\n          </li>\n          <li\n            key=\"goalDifference\"\n            className=\"goalDifference\"\n            data-cy={props.name + \"goalDifference\"}\n          >\n            {`Goal difference : `}\n            <span>{props.goalDifference}</span>\n          </li>\n          <li\n            key=\"goalDifferenceHorA\"\n            className=\"goalDifferenceHorA\"\n            data-cy={props.name + \"goalDifference\"}\n          >\n            {`Goal difference ${props.homeOrAway} : ${props.goalDifferenceHomeOrAway}`}\n          </li>\n          <li\n            key=\"AverageSOT\"\n            className=\"AverageSOT\"\n            data-cy={props.name + \"averageSOT\"}\n          >\n            {`Avg shots on target - ${props.sot}`}\n          </li>\n          <li\n            key=\"DangerousAttacks\"\n            className=\"DangerousAttacks\"\n            data-cy={props.name + \"dangerousAttacks\"}\n          >\n            {`Avg dangerous attacks - ${props.dangerousAttacks}`}\n          </li>\n          <li\n            key=\"LeaguePosition\"\n            className=\"LeaguePosition\"\n            data-cy={props.name + \"leaguePosition\"}\n          >\n            {`League position - ${props.leaguePosition}`}\n          </li>\n\n          <li\n            key=\"LeaguePositionHomeOrAway\"\n            className=\"LeaguePositionHomeOrAway\"\n            data-cy={props.name + \"LeaguePositionHomeOrAway\"}\n          >\n            {`Position (${props.homeOrAway} only) - ${props.homeOrAwayLeaguePosition}`}\n          </li>\n          <li\n            key=\"WinPercentage\"\n            className=\"WinPercentage\"\n            data-cy={props.name + \"WinPercentage\"}\n          >\n            {`${props.homeOrAway} wins - ${props.winPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"DrawPercentage\"\n            className=\"DrawPercentage\"\n            data-cy={props.name + \"DrawPercentage\"}\n          >\n            {`${props.homeOrAway} draws - ${props.drawPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"LossPercentage\"\n            className=\"LossPercentage\"\n            data-cy={props.name + \"LossPercentage\"}\n          >\n            {`${props.homeOrAway} losses - ${props.lossPercentage.toFixed(1)}%`}\n          </li>\n          <li key=\"PPG\" className=\"PPG\" data-cy={props.name + \"PPG\"}>\n            {`Season PPG - ${props.ppg}`}\n          </li>\n          <li\n            key=\"FormTrend10a\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 10 PPG: ${props.formTrend[0]}`}\n          </li>\n          <li\n            key=\"FormTrend10b\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 6 PPG: ${props.formTrend[1]}`}\n          </li>\n          <li\n            key=\"FormTrend10c\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 5 PPG: ${props.formTrend[2]}.`}\n          </li>\n          <li\n            key=\"CardsTotal\"\n            className=\"CardsTotal\"\n            data-cy={props.name + \"CardsTotal\"}\n          >\n            {`Cards total: ${props.CardsTotal}`}\n          </li>\n          <li\n            key=\"CornersAverage\"\n            className=\"CornersAverage\"\n            data-cy={props.name + \"CornersAverage\"}\n          >\n            {`Corners average: ${props.CornersAverage}`}\n          </li>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  } else {\n    return (\n      <Fragment>\n        <ul className={props.className} style={props.style}>\n          <li className=\"FormSummaryHome\">{props.FormTextString}</li>\n          <li\n            key=\"TeamScored\"\n            className=\"TeamScored\"\n            data-cy={props.name + \"teamScored\"}\n          >\n            {`Avg goals scored - ${props.goals}`}\n          </li>\n          <li\n            key=\"TeamConceeded\"\n            className=\"TeamConceeded\"\n            data-cy={props.name + \"teamConceded\"}\n          >\n            {`Avg goals conceeded - ${props.conceeded}`}\n          </li>\n          <li\n            key=\"TeamPossession\"\n            className=\"TeamPossession\"\n            data-cy={props.name + \"teamPossession\"}\n          >\n            {`Avg possession - ${props.possession}%`}\n          </li>\n          <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name + \"teamXG\"}>\n            {`Avg XG - ${props.XG}`}\n          </li>\n          <li\n            key=\"TeamXGConceded\"\n            className=\"TeamXGConceded\"\n            data-cy={props.name + \"teamXGConceded\"}\n          >\n            {`Avg XG conceded - ${props.XGConceded}`}\n          </li>\n          <li\n            key=\"AverageSOT\"\n            className=\"AverageSOT\"\n            data-cy={props.name + \"averageSOT\"}\n          >\n            {`Avg shots on target - ${props.sot}`}\n          </li>\n          <li\n            key=\"DangerousAttacks\"\n            className=\"DangerousAttacks\"\n            data-cy={props.name + \"dangerousAttacks\"}\n          >\n            {`Avg dangerous attacks - ${props.dangerousAttacks}`}\n          </li>\n          <li\n            key=\"LeaguePosition\"\n            className=\"LeaguePosition\"\n            data-cy={props.name + \"leaguePosition\"}\n          >\n            {`League position - ${props.leaguePosition}`}\n          </li>\n\n          <li\n            key=\"LeaguePositionHomeOrAway\"\n            className=\"LeaguePositionHomeOrAway\"\n            data-cy={props.name + \"LeaguePositionHomeOrAway\"}\n          >\n            {`Position (${props.homeOrAway} only) - ${props.homeOrAwayLeaguePosition}`}\n          </li>\n          <li\n            key=\"WinPercentage\"\n            className=\"WinPercentage\"\n            data-cy={props.name + \"WinPercentage\"}\n          >\n            {`${props.homeOrAway} wins - ${props.winPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"DrawPercentage\"\n            className=\"DrawPercentage\"\n            data-cy={props.name + \"DrawPercentage\"}\n          >\n            {`${props.homeOrAway} draws - ${props.drawPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"LossPercentage\"\n            className=\"LossPercentage\"\n            data-cy={props.name + \"LossPercentage\"}\n          >\n            {`${props.homeOrAway} losses - ${props.lossPercentage.toFixed(1)}%`}\n          </li>\n          <li key=\"PPG\" className=\"PPG\" data-cy={props.name + \"PPG\"}>\n            {`Season PPG - ${props.ppg}`}\n          </li>\n          <li\n            key=\"FormTrend10a\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 10 PPG: ${props.formTrend[0]}`}\n          </li>\n          <li\n            key=\"FormTrend10b\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 6 PPG: ${props.formTrend[1]}`}\n          </li>\n          <li\n            key=\"FormTrend10c\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 5 PPG: ${props.formTrend[2]}.`}\n          </li>\n          <li\n            key=\"CardsTotal\"\n            className=\"CardsTotal\"\n            data-cy={props.name + \"CardsTotal\"}\n          >\n            {`Cards total: ${props.CardsTotal}`}\n          </li>\n          <li\n            key=\"CornersAverage\"\n            className=\"CornersAverage\"\n            data-cy={props.name + \"CornersAverage\"}\n          >\n            {`Corners average: ${props.CornersAverage}`}\n          </li>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Stats;\n","import React from \"react\";\n\nfunction Div(props) {\n  return (\n    <div id={props.id} onClick={props.onClick} style={props.style} className={props.className}>{props.text}</div>\n  );\n}\n\nexport default Div;\n","export async function getForm(match) {\n  const teams = [match.homeId, match.awayId];\n  const fixtureForm = [];\n\n  for (let i = 0; i < teams.length; i++) {\n    const team = teams[i];\n\n    let response = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}formTeam/${team}`\n    );\n    await response.json().then((formData) => {\n      formData.lastMatchTimestamp = formData.last_updated_match_timestamp\n      fixtureForm[i] = formData;\n    });\n  }\n  return fixtureForm;\n}\n","import React, { Component, Fragment } from \"react\";\nimport { getNewTips } from \"../logic/getScorePredictions\"\nimport {allTips} from \"../logic/getScorePredictions\"\nexport var incrementValue = 3;\n\nexport var riskLevel = 10;\n\nclass Increment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      incrementValue,\n      riskLevel,\n      show: true,\n    };\n  }\n\n  IncrementItem = () => {\n    if(incrementValue > 1){\n    this.setState({ incrementValue: this.state.incrementValue - 1 });\n    this.setState({ riskLevel: this.state.riskLevel - 1 });\n    incrementValue = (this.state.incrementValue - 1);\n    riskLevel = this.state.riskLevel - 1;\n    }\n    getNewTips(allTips)\n  };\n  DecreaseItem = () => {\n    if(incrementValue > 0){\n      this.setState({ incrementValue: this.state.incrementValue + 1 });\n      this.setState({ riskLevel: this.state.riskLevel + 1 });\n      incrementValue = (this.state.incrementValue + 1);\n      riskLevel = this.state.riskLevel + 1;\n    }\n    getNewTips(allTips)\n  };\n\n  render() {\n    return (\n      <Fragment>\n          <button className=\"IncrementButton\" onClick={this.IncrementItem}>\n            -\n          </button>\n          <button className=\"DecrementButton\" onClick={this.DecreaseItem}>\n            +\n          </button>\n      </Fragment>\n\n    );\n  }\n}\n\nexport default Increment;\n","export async function getBTTSPotential(\n  match,\n  homeGoals,\n  awayGoals,\n  unroundedHomeGoals,\n  unroundedAwayGoals\n) {\n  const homeBTTS = match.bttsAllPercentageHome;\n  const homeOnlyBTTS = match.bttsPercentageHomeHome;\n  const awayOnlyBTTS = match.bttsPercentageAwayAway;\n  const awayBTTS = match.bttsAllPercentageAway;\n  const homeG = homeGoals;\n  const awayG = awayGoals;\n\n  match.combinedBTTS = (homeBTTS + awayBTTS) / 2;\n\n  if (\n    match.bttsFraction !== \"N/A\" &&\n    match.status !== \"suspended\" &&\n    match.status !== \"canceled\"\n  ) {\n    if (\n      homeBTTS > 55 &&\n      awayBTTS > 55 &&\n      homeOnlyBTTS > 55 &&\n      awayOnlyBTTS > 55 &&\n      match.awayOdds < 4 &&\n      match.awayOdds > 1.3 &&\n      homeG >= 1 &&\n      awayG >= 1 \n    ) {\n      match.btts = true;\n      match.bttsChosen = true;\n      match.totalGoals = match.rawFinalHomeGoals + match.rawFinalAwayGoals;\n    } else {\n      match.btts = false;\n      match.bttsChosen = false;\n    }\n  }\n  return match;\n}\n","import { getThemeProps } from \"@material-ui/styles\";\nimport SwiperCore, { EffectCoverflow, Pagination } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/swiper-bundle.min.css\";\nimport \"swiper/swiper.min.css\";\n\nSwiperCore.use([EffectCoverflow, Pagination]);\n\nexport const Slider = (props) => {\n  return (\n    <Swiper\n      effect={\"coverflow\"}\n      autoHeight={true}\n      grabCursor={true}\n      centeredSlides={true}\n      slidesPerView={1}\n      coverflowEffect={{\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: false,\n      }}\n      pagination={{ clickable: true }}\n      className=\"mySwiper\"\n    >\n      <SwiperSlide>\n       {props.element}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element2}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element3}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element4}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element5}\n      </SwiperSlide>\n    </Swiper>\n  );\n};\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { matches, diff } from \"./getFixtures\";\nimport { Fixture } from \"../components/Fixture\";\nimport { RenderAllFixtures } from \"../logic/getFixtures\";\nimport Div from \"../components/Div\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { allForm, dateStamp } from \"../logic/getFixtures\";\nimport Increment from \"../components/Increment\";\nimport { incrementValue } from \"../components/Increment\";\nimport { getBTTSPotential } from \"../logic/getBTTSPotential\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport { Slider } from \"../components/Carousel\";\nimport { StyledKofiButton } from \"../components/KofiButton\";\nimport {\n  calculateAttackingStrength,\n  calculateDefensiveStrength,\n  calculateMetricStrength,\n  getXGtoActualDifferentialStrength,\n} from \"./getStats\";\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nlet finalHomeGoals;\nlet finalAwayGoals;\nlet rawFinalHomeGoals;\nlet rawFinalAwayGoals;\nlet homeOdds;\nlet awayOdds;\nlet totalGoals = 0;\nlet totalGoals2 = 0;\nlet numberOfGames = 0;\nlet drawPredictions = 0;\nlet homePredictions = 0;\nlet awayPredictions = 0;\nlet allOutcomes = 0;\nlet homeOutcomes = 0;\nlet awayOutcomes = 0;\nlet winAmount = 0;\nlet lossAmount = 0;\nlet sumStatDAWin = 0;\nlet sumStatDALoss = 0;\nlet sumStatPossessionWin = 0;\nlet sumStatPossessionLoss = 0;\nlet sumStatSOTWin = 0;\nlet sumStatSOTLoss = 0;\nlet sumStatPPGLast10Win = 0;\nlet sumStatPPGLast10Loss = 0;\nlet sumOddsWin = 0;\nlet sumOddsLoss = 0;\nlet sumXGForWin = 0;\nlet sumXGForLoss = 0;\nlet sumXGAgainstWin = 0;\nlet sumXGAgainstLoss = 0;\nlet allWinOutcomes = 0;\nlet allLossOutcomes = 0;\nlet allDrawOutcomes = 0;\nlet totalROI = 0;\nlet totalInvestment = 0;\nlet totalProfit = 0;\nlet userTips = [];\nexport let formObjectHome;\nexport let formObjectAway;\nexport let clicked = false;\n\nexport var renderPredictions;\n\nasync function convertTimestamp(timestamp) {\n  let newDate = new Date(timestamp * 1000);\n  let [day, month, year] = newDate.toLocaleDateString(\"en-US\").split(\"/\");\n\n  let converted = `${year}-${day}-${month}`;\n\n  return converted;\n}\n\nexport function getPointsFromLastX(lastX) {\n  console.log()\n  let points = 0;\n  let pointsAddition;\n\n  try {\n    lastX.forEach((game) => {\n      switch (true) {\n        case game === \"W\":\n          pointsAddition = 3;\n          break;\n        case game === \"D\":\n          pointsAddition = 1;\n          break;\n        case game === \"L\":\n          pointsAddition = 0;\n          break;\n        default:\n          break;\n      }\n\n      points = points + pointsAddition;\n    });\n    return points;\n  } catch (error) {\n    console.log(error);\n    return \"N/A\";\n  }\n}\n\nasync function getPastLeagueResults(team, game, hOrA, form) {\n  let date = game.date;\n  if (allLeagueResultsArrayOfObjects[game.leagueIndex].fixtures.length > 35) {\n    let teamsHomeResults = allLeagueResultsArrayOfObjects[\n      game.leagueIndex\n    ].fixtures.filter((fixture) => fixture.home_name === team);\n\n    teamsHomeResults = teamsHomeResults\n      .filter(function (item) {\n        return item.date_unix < date;\n      })\n      .sort((a, b) => a.date_unix - b.date_unix);\n\n    let teamsAwayResults = allLeagueResultsArrayOfObjects[\n      game.leagueIndex\n    ].fixtures.filter((fixture) => fixture.away_name === team);\n\n    teamsAwayResults = teamsAwayResults\n      .filter(function (item) {\n        return item.date_unix < date;\n      })\n      .sort((a, b) => a.date_unix - b.date_unix);\n\n    let homeResults = [];\n    let awayResults = [];\n    let oddsSumHome = 0;\n    let oddsSumAway = 0;\n    for (let index = 0; index < teamsHomeResults.length; index++) {\n      const resultedGame = teamsHomeResults[index];\n\n      homeResults.push({\n        homeTeam: resultedGame.home_name,\n        homeGoals: resultedGame.homeGoalCount,\n        XG: resultedGame.team_a_xg,\n        awayTeam: resultedGame.away_name,\n        awayGoals: resultedGame.awayGoalCount,\n        XGAgainst: resultedGame.team_b_xg,\n        possession: resultedGame.team_a_possession,\n        scored: resultedGame.homeGoalCount,\n        conceeded: resultedGame.awayGoalCount,\n        shots: resultedGame.team_a_shots,\n        sot: resultedGame.team_a_shotsOnTarget,\n        dangerousAttacks: resultedGame.team_a_dangerous_attacks,\n        corners: resultedGame.team_a_corners,\n        date: await convertTimestamp(resultedGame.date_unix),\n        dateRaw: resultedGame.date_unix,\n        oddsHome: resultedGame.odds_ft_1,\n        oddsAway: resultedGame.odds_ft_2,\n        btts:\n          resultedGame.homeGoalCount > 0 && resultedGame.awayGoalCount > 0\n            ? true\n            : false,\n      });\n      oddsSumHome = oddsSumHome + resultedGame.odds_ft_1;\n    }\n    for (let index = 0; index < teamsAwayResults.length; index++) {\n      const resultedGame = teamsAwayResults[index];\n      awayResults.push({\n        homeTeam: resultedGame.home_name,\n        homeGoals: resultedGame.homeGoalCount,\n        XG: resultedGame.team_b_xg,\n        awayTeam: resultedGame.away_name,\n        awayGoals: resultedGame.awayGoalCount,\n        XGAgainst: resultedGame.team_a_xg,\n        possession: resultedGame.team_b_possession,\n        scored: resultedGame.awayGoalCount,\n        conceeded: resultedGame.homeGoalCount,\n        shots: resultedGame.team_b_shots,\n        sot: resultedGame.team_b_shotsOnTarget,\n        dangerousAttacks: resultedGame.team_b_dangerous_attacks,\n        corners: resultedGame.team_b_corners,\n        date: await convertTimestamp(resultedGame.date_unix),\n        dateRaw: resultedGame.date_unix,\n        oddsHome: resultedGame.odds_ft_1,\n        oddsAway: resultedGame.odds_ft_2,\n        btts:\n          resultedGame.homeGoalCount > 0 && resultedGame.awayGoalCount > 0\n            ? true\n            : false,\n      });\n      oddsSumAway = oddsSumAway + resultedGame.odds_ft_2;\n    }\n\n    let reversedResultsHome = homeResults;\n    let reversedResultsAway = awayResults;\n\n    const allTeamResults = reversedResultsHome\n      .concat(reversedResultsAway)\n      .sort((a, b) => a.dateRaw - b.dateRaw);\n\n    form.allTeamResults = allTeamResults.sort((b, a) => a.dateRaw - b.dateRaw);\n\n    const averageOddsHome = oddsSumHome / teamsHomeResults.length;\n    const averageOddsAway = oddsSumAway / teamsAwayResults.length;\n\n    const teamGoalsHome = reversedResultsHome.map((res) => res.scored);\n\n    const teamGoalsAway = reversedResultsAway.map((res) => res.scored);\n    const teamGoalsAll = allTeamResults.map((res) => res.scored);\n\n    const teamConceededHome = reversedResultsHome.map((res) => res.conceeded);\n    const teamConceededAway = reversedResultsAway.map((res) => res.conceeded);\n    const teamConceededAll = allTeamResults.map((res) => res.conceeded);\n\n    const teamXGForAll = allTeamResults.map((res) => res.XG);\n    const teamXGAgainstAll = allTeamResults.map((res) => res.XGAgainst);\n    const XGSum = teamXGForAll.reduce((a, b) => a + b, 0);\n    const avgXGScored = XGSum / teamXGForAll.length || 0;\n    const XGAgainstSum = teamXGAgainstAll.reduce((a, b) => a + b, 0);\n    const avgXGConceeded = XGAgainstSum / teamXGAgainstAll.length || 0;\n\n    const possession = allTeamResults.map((res) => res.possession);\n    const possessionSum = possession.reduce((a, b) => a + b, 0);\n    const avgPossession = possessionSum / possession.length || 0;\n\n    const dangerousAttacks = allTeamResults.map((res) => res.dangerousAttacks);\n    const dangerousAttacksSum = dangerousAttacks.reduce((a, b) => a + b, 0);\n    const avgDangerousAttacks =\n      dangerousAttacksSum / dangerousAttacks.length || 0;\n\n    const shots = allTeamResults.map((res) => res.shots);\n    const shotsSum = shots.reduce((a, b) => a + b, 0);\n    const avgShots = shotsSum / shots.length || 0;\n\n    const shotsOnTarget = allTeamResults.map((res) => res.sot);\n    const shotsOnTargetSum = shotsOnTarget.reduce((a, b) => a + b, 0);\n    const avgShotsOnTarget = shotsOnTargetSum / shotsOnTarget.length || 0;\n\n    const corners = allTeamResults.map((res) => res.corners);\n    const cornersSum = corners.reduce((a, b) => a + b, 0);\n    const cornersAv = cornersSum / corners.length || 0;\n\n    const last5XG = teamXGForAll.slice(0, 5);\n    const last5XGSum = last5XG.reduce((a, b) => a + b, 0);\n    const last5XGAvgFor = last5XGSum / last5XG.length || 0;\n\n    const last5XGAgainst = teamXGAgainstAll.slice(0, 5);\n    const last5XGAgainstSum = last5XGAgainst.reduce((a, b) => a + b, 0);\n    const last5XGAvgAgainst = last5XGAgainstSum / last5XGAgainst.length || 0;\n\n    form.XGOverall = parseFloat(avgXGScored.toFixed(2));\n    form.XGlast5 = parseFloat(last5XGAvgFor.toFixed(2));\n\n    form.XGAgainstAvgOverall = parseFloat(avgXGConceeded.toFixed(2));\n    form.XGAgainstlast5 = parseFloat(last5XGAvgAgainst.toFixed(2));\n\n    form.AveragePossessionOverall = parseFloat(avgPossession.toFixed(1));\n    form.AverageDangerousAttacksOverall = parseFloat(\n      avgDangerousAttacks.toFixed(1)\n    );\n    form[\"Average Shots\"] = parseFloat(avgShots.toFixed(1));\n    form.AverageCorners = parseFloat(cornersAv.toFixed(1));\n    form.AverageShotsOnTargetOverall = parseFloat(avgShotsOnTarget.toFixed(1));\n    const alpha = 0.5;\n    const beta = 0.25;\n\n    let forAndAgainstRollingAv;\n    let forAndAgainstRollingAvHomeOrAway;\n    if (hOrA === \"home\") {\n      form.allGoalsArrayHome = teamGoalsAll;\n      form.allConceededArrayHome = teamConceededAll;\n      const sum = teamGoalsHome.reduce((a, b) => a + b, 0);\n      const sumTwo = teamConceededHome.reduce((a, b) => a + b, 0);\n      form.goalDifferenceHomeOrAway = sum - sumTwo;\n      forAndAgainstRollingAv = await predictGoalsWithExponentialSmoothing(\n        teamGoalsAll,\n        teamConceededAll,\n        alpha\n      );\n      forAndAgainstRollingAvHomeOrAway =\n        await predictGoalsWithExponentialSmoothing(\n          teamGoalsHome,\n          teamConceededHome,\n          beta\n        );\n    } else if (hOrA === \"away\") {\n      form.allGoalsArrayAway = teamGoalsAll;\n      form.allConceededArrayAway = teamConceededAll;\n      const sum = teamGoalsAway.reduce((a, b) => a + b, 0);\n      const sumTwo = teamConceededAway.reduce((a, b) => a + b, 0);\n      form.goalDifferenceHomeOrAway = sum - sumTwo;\n      forAndAgainstRollingAv = await predictGoalsWithExponentialSmoothing(\n        teamGoalsAll,\n        teamConceededAll,\n        alpha\n      );\n      forAndAgainstRollingAvHomeOrAway =\n        await predictGoalsWithExponentialSmoothing(\n          teamGoalsAway,\n          teamConceededAway,\n          beta\n        );\n    }\n\n    let bttsHome = reversedResultsHome.map((res) => res.btts);\n    if (bttsHome.length > 10) {\n      bttsHome = bttsHome.slice(-10);\n    }\n\n    let bttsAway = reversedResultsAway.map((res) => res.btts);\n    if (bttsAway.length > 10) {\n      bttsAway = bttsAway.slice(-10);\n    }\n\n    let bttsAll = allTeamResults.map((res) => res.btts);\n    if (bttsAll.length > 10) {\n      bttsAll = bttsAll.slice(-10);\n    }\n\n    const bttsHomeCount = bttsHome.filter((btts) => btts === true);\n    const bttsHomeString = `${bttsHomeCount.length}/${bttsHome.length}`;\n    const bttsHomePercentage = (\n      (bttsHomeCount.length / bttsHome.length) *\n      100\n    ).toFixed(0);\n    const bttsAwayCount = bttsAway.filter((btts) => btts === true);\n    const bttsAwayString = `${bttsAwayCount.length}/${bttsAway.length}`;\n    const bttsAwayPercentage = (\n      (bttsAwayCount.length / bttsAway.length) *\n      100\n    ).toFixed(0);\n    const bttsAllCount = bttsAll.filter((btts) => btts === true);\n    const bttsAllString = `${bttsAllCount.length}/${bttsAll.length}`;\n    const bttsAllPercentage = (\n      (bttsAllCount.length / bttsAll.length) *\n      100\n    ).toFixed(0);\n\n    let r = 6;\n    let x = 4;\n\n    const teamGoalsHomeRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsHome,\n      teamGoalsHome.length < x ? teamGoalsHome.length : x\n    );\n\n    const teamGoalsAwayRollingAverage = await predictNextWeightedMovingAverage(\n      teamGoalsAway,\n      teamGoalsAway.length < x ? teamGoalsAway.length : x\n    );\n\n    const teamConceededHomeRollingAverage =\n      await predictNextWeightedMovingAverage(\n        teamConceededHome,\n        teamConceededHome.length < x ? teamConceededHome.length : x\n      );\n\n    const teamConceededAwayRollingAverage =\n      await predictNextWeightedMovingAverage(\n        teamConceededAway,\n        teamConceededAway.length < x ? teamConceededAway.length : x\n      );\n\n    const sum = teamGoalsAll.reduce((a, b) => a + b, 0);\n    const avgScored = sum / teamGoalsAll.length || 0;\n\n    const last5 = teamGoalsAll.slice(0, 5);\n    console.log(form.teamName)\n    console.log(allTeamResults)\n    console.log(last5)\n    const last5Sum = last5.reduce((a, b) => a + b, 0);   \n    const last5AvgScored = last5Sum / last5.length || 0;\n\n    //is this sorted backwards???\n    const last5Conceeded = teamConceededAll.slice(0, 5);\n    const last5ConceededSum = last5Conceeded.reduce((a, b) => a + b, 0);\n    const last5AvgConceeded = last5ConceededSum / last5Conceeded.length || 0;\n\n    const last10 = teamGoalsAll.slice(0, 10);\n    const last10Sum = last10.reduce((a, b) => a + b, 0);\n    const last10AvgScored = last10Sum / last10.length || 0;\n\n\n    const last10Conceeded = teamConceededAll.slice(0, 10);\n    const last10ConceededSum = last10Conceeded.reduce((a, b) => a + b, 0);\n    const last10AvgConceeded = last10ConceededSum / last10Conceeded.length || 0;\n    console.log(last5AvgScored)\n\n    form.last5Goals = parseFloat(last5AvgScored.toFixed(2));\n    form.last10Goals = parseFloat(last10AvgScored.toFixed(2));\n    form.last5GoalsConceeded = parseFloat(last5AvgConceeded.toFixed(2));\n    form.last10GoalsConceeded = parseFloat(last10AvgConceeded.toFixed(2));\n\n    const teamGoalsAllRollingAverage = await predictNextWeightedMovingAverage(\n      last10,\n      last10.length < r ? last10.length : r\n    );\n\n    const teamGoalsConceededAllRollingAverage =\n    await predictNextWeightedMovingAverage(\n      last10Conceeded,\n      last10Conceeded.length < r ? last10Conceeded.length : r\n    );\n\n    const sumTwo = teamConceededAll.reduce((a, b) => a + b, 0);\n    const avgConceeded = sumTwo / teamConceededAll.length || 0;\n\n    form.goalDifference = sum - sumTwo;\n\n    // console.log(teamGoalsHomeRollingAverage)\n    // console.log(teamGoalsAwayRollingAverage)\n    // console.log(teamGoalsAllRollingAverage)\n    // console.log(teamConceededHomeRollingAverage)\n    // console.log(teamConceededAwayRollingAverage)\n    // console.log(teamGoalsConceededAllRollingAverage)\n    // console.log(averageOddsHome)\n    // console.log(averageOddsAway)\n    // console.log(avgScored)\n    // console.log(avgConceeded)\n    // console.log(bttsAllString)\n    // console.log(bttsHomeString)\n    // console.log(bttsAwayString)\n    // console.log(bttsAllPercentage)\n    // console.log(bttsHomePercentage)\n    // console.log(bttsAwayPercentage)\n    // console.log(forAndAgainstRollingAvHomeOrAway)\n    // console.log(forAndAgainstRollingAv)\n\n    return [\n      teamGoalsHomeRollingAverage,\n      teamGoalsAwayRollingAverage,\n      teamGoalsAllRollingAverage,\n      teamConceededHomeRollingAverage,\n      teamConceededAwayRollingAverage,\n      teamGoalsConceededAllRollingAverage,\n      averageOddsHome,\n      averageOddsAway,\n      avgScored,\n      avgConceeded,\n      bttsAllString,\n      bttsHomeString,\n      bttsAwayString,\n      bttsAllPercentage,\n      bttsHomePercentage,\n      bttsAwayPercentage,\n      forAndAgainstRollingAvHomeOrAway,\n      forAndAgainstRollingAv,\n    ];\n  } else {\n    return null;\n  }\n}\n\nvar getEMA = (a, r) =>\n  a.reduce(\n    (p, n, i) =>\n      i\n        ? p.concat((2 * n) / (r + 1) + (p[p.length - 1] * (r - 1)) / (r + 1))\n        : p,\n    [a[0]]\n  );\n\nasync function predictNextWeightedMovingAverage(numbers, windowSize) {\n  const startIndex = numbers.length - windowSize;\n  const window = numbers.slice(startIndex);\n  const weights = Array.from(\n    { length: windowSize },\n    (_, i) => (i + 1) / ((windowSize * (windowSize + 1)) / 2)\n  );\n  const sum = window.reduce((acc, num, i) => acc + num * weights[i], 0);\n  const movingAverage = sum / weights.reduce((acc, w) => acc + w, 0);\n  return parseFloat(movingAverage.toFixed(2));\n}\n\n// Function to calculate the weighted average using exponential smoothing\nasync function calculateWeightedAverage(arr, alpha) {\n  let weightedSum = 0;\n  let totalWeight = 0;\n\n  for (let i = arr.length - 1; i >= 0; i--) {\n    const weight = Math.pow(1 - alpha, arr.length - 1 - i);\n    weightedSum += arr[i] * weight;\n    totalWeight += weight;\n  }\n\n  return weightedSum / totalWeight;\n}\n\n// Function to predict goals scored and conceded for a team with exponential smoothing\nasync function predictGoalsWithExponentialSmoothing(\n  teamGoalsFor,\n  teamGoalsAgainst,\n  alpha\n) {\n  const lambdaFor = await calculateWeightedAverage(teamGoalsFor, alpha);\n  const lambdaAgainst = await calculateWeightedAverage(teamGoalsAgainst, alpha);\n\n  // You can fine-tune these values based on your model and data\n  const predictedGoalsFor = lambdaFor;\n  const predictedGoalsAgainst = lambdaAgainst;\n\n  return {\n    goalsFor: predictedGoalsFor,\n    goalsAgainst: predictedGoalsAgainst,\n  };\n}\n\nexport async function compareStat(statOne, statTwo) {\n  let stat1 = parseFloat(statOne);\n  let stat2 = parseFloat(statTwo);\n  let statDiff;\n  // console.log( await normalizeValues(12, 2, 0, 1))\n  // console.log(await diff(1.8571428571428571, 1.14285714285714285))\n\n  if (statOne !== 0 && statTwo !== 0) {\n    const { normalizedValue1, normalizedValue2 } = await normalizeValues(\n      stat1,\n      stat2,\n      0,\n      1\n    );\n\n    const finalValue1 = normalizedValue1 + 1;\n    const finalValue2 = normalizedValue2 + 1;\n\n    statDiff = await diff(finalValue1, finalValue2);\n  } else {\n    statDiff = 0;\n  }\n\n  return statDiff;\n}\n\nexport async function getClinicalRating(form) {\n  let rating;\n  let score;\n  switch (true) {\n    case form.dangerousAttackConversion <= 15:\n      rating = \"excellent\";\n      score = 0.8;\n      break;\n\n    case form.dangerousAttackConversion > 15 &&\n      form.dangerousAttackConversion <= 20:\n      rating = \"great\";\n      score = 0.9;\n      break;\n\n    case form.dangerousAttackConversion > 20 &&\n      form.dangerousAttackConversion <= 25:\n      rating = \"very good\";\n      score = 0.95;\n      break;\n\n    case form.dangerousAttackConversion > 25 &&\n      form.dangerousAttackConversion <= 32.5:\n      rating = \"good\";\n      score = 0.98;\n      break;\n\n    case form.dangerousAttackConversion > 30 &&\n      form.dangerousAttackConversion <= 35:\n      rating = \"above average\";\n      score = 0.99;\n      break;\n\n    case form.dangerousAttackConversion > 35 &&\n      form.dangerousAttackConversion <= 40:\n      rating = \"average\";\n      score = 1;\n      break;\n\n    case form.dangerousAttackConversion > 40 &&\n      form.dangerousAttackConversion <= 45:\n      rating = \"below average\";\n      score = 1.01;\n      break;\n\n    case form.dangerousAttackConversion > 45 &&\n      form.dangerousAttackConversion <= 50:\n      rating = \"poor\";\n      score = 1.05;\n      break;\n\n    case form.dangerousAttackConversion > 50 &&\n      form.dangerousAttackConversion <= 55:\n      rating = \"very poor\";\n      score = 1.1;\n      break;\n\n    case form.dangerousAttackConversion > 55 &&\n      form.dangerousAttackConversion <= 60:\n      rating = \"terrible\";\n      score = 1.2;\n      break;\n\n    case form.dangerousAttackConversion > 60:\n      rating = \"awful\";\n      score = 1.3;\n      break;\n\n    default:\n      break;\n  }\n\n  return [rating, score];\n}\n\nexport async function getPointsDifferential(pointsHomeAvg, pointsAwayAvg) {\n  const differential = await diff(pointsHomeAvg, pointsAwayAvg);\n  return parseFloat(differential);\n}\n\nexport async function getPointWeighting(pointsDiff) {\n  let pointsDiffWeightingHome;\n  let pointsDiffWeightingAway;\n\n  switch (true) {\n    case pointsDiff >= 2.5:\n      pointsDiffWeightingHome = 0.3;\n      pointsDiffWeightingAway = -0.3;\n      break;\n    case pointsDiff >= 2 && pointsDiff < 2.5:\n      pointsDiffWeightingHome = 0.2;\n      pointsDiffWeightingAway = -0.2;\n      break;\n    case pointsDiff >= 1.5 && pointsDiff < 2:\n      pointsDiffWeightingHome = 0.15;\n      pointsDiffWeightingAway = -0.15;\n      break;\n    case pointsDiff >= 1 && pointsDiff < 1.5:\n      pointsDiffWeightingHome = 0.1;\n      pointsDiffWeightingAway = -0.1;\n      break;\n    case pointsDiff >= 0.5 && pointsDiff < 1:\n      pointsDiffWeightingHome = 0.05;\n      pointsDiffWeightingAway = -0.05;\n      break;\n    case pointsDiff > -0.5 && pointsDiff < 0.5:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n      break;\n    case pointsDiff <= -0.5 && pointsDiff > -1:\n      pointsDiffWeightingHome = -0.05;\n      pointsDiffWeightingAway = 0.05;\n      break;\n    case pointsDiff <= -1 && pointsDiff > -1.5:\n      pointsDiffWeightingHome = -0.1;\n      pointsDiffWeightingAway = 0.1;\n      break;\n    case pointsDiff <= -1.5 && pointsDiff > -2:\n      pointsDiffWeightingHome = -0.15;\n      pointsDiffWeightingAway = 0.15;\n      break;\n    case pointsDiff <= -2 && pointsDiff > -2.5:\n      pointsDiffWeightingHome = -0.2;\n      pointsDiffWeightingAway = 0.2;\n      break;\n    case pointsDiff <= -2.5:\n      pointsDiffWeightingHome = -0.3;\n      pointsDiffWeightingAway = 0.3;\n      break;\n    default:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n  }\n  return [pointsDiffWeightingHome, pointsDiffWeightingAway];\n}\n\nexport async function compareFormTrend(recentForm, distantForm) {\n  let score;\n  let scoreTotal = 0;\n\n  for (let index = 0; index < recentForm.length; index++) {\n    const recent = recentForm[index];\n    const distant = distantForm[index];\n\n    if (recent > distant) {\n      score = 1.05;\n    } else if (recent === distant) {\n      score = 1;\n    } else if (recent < distant) {\n      score = 0.95;\n    }\n    scoreTotal = scoreTotal + score / recentForm.length;\n  }\n\n  return scoreTotal;\n}\n\nexport async function getPointAverage(pointTotal, games) {\n  return pointTotal / games;\n}\n\nasync function getOddsMultiplier(odds, team) {\n  let multiplier;\n  switch (true) {\n    case odds <= 1.2:\n      multiplier = 1.4;\n      break;\n    case odds <= 1.4:\n      multiplier = 1.3;\n      break;\n    case odds <= 1.6:\n      multiplier = 1.2;\n      break;\n    case odds <= 1.8:\n      multiplier = 1.1;\n      break;\n    case odds < 2:\n      multiplier = 1.05;\n      break;\n\n    // case odds <= 3.5 && odds > 3:\n    //   multiplier = 0.975;\n    //   break;\n    // case odds > 3.5 && odds <= 4:\n    //   multiplier = 0.95;\n    //   break;\n    // case odds > 4 && odds <= 4.5:\n    //   multiplier = 0.9;\n    //   break;\n    // case odds > 4.5 && odds <= 5:\n    //   multiplier = 0.8;\n    //   break;\n    //   case odds > 5:\n    //     multiplier = 0.7;\n    //     break;\n    default:\n      multiplier = 1;\n      break;\n  }\n\n  return multiplier;\n}\n\nasync function poissonDistribution(lambda, k) {\n  const numerator = Math.exp(-lambda) * Math.pow(lambda, k);\n  const denominator = factorial(k);\n  return numerator / denominator;\n}\n\nfunction factorial(n) {\n  if (n === 0 || n === 1) {\n    return 1;\n  }\n  let result = 1;\n  for (let i = 2; i <= n; i++) {\n    result *= i;\n  }\n  return result;\n}\n\nasync function calculateAverageGoals(goalsFor) {\n  const totalGoals = goalsFor.reduce((sum, goals) => sum + goals, 0);\n  return totalGoals / goalsFor.length;\n}\n\nasync function adjustGoalsAvg(goalsAvg, strengthRatio) {\n  return goalsAvg\n   * strengthRatio;\n}\n\nasync function predictScore(\n  goalsForTeam1,\n  goalsAgainstTeam1,\n  goalsForTeam2,\n  goalsAgainstTeam2,\n  team1Metrics,\n  team2Metrics,\n  game\n) {\n  let team1AverageGoalsFor = await calculateAverageGoals(goalsForTeam1);\n  let team1AverageGoalsAgainst = await calculateAverageGoals(goalsAgainstTeam1);\n  let team2AverageGoalsFor = await calculateAverageGoals(goalsForTeam2);\n  let team2AverageGoalsAgainst = await calculateAverageGoals(goalsAgainstTeam2);\n\n  let team1StrengthRatio = team1Metrics.weighting / 1.75;\n  let team2StrengthRatio = team2Metrics.weighting / 1.75;\n\n  let adjustedTeam1AverageGoals = await adjustGoalsAvg(\n    team1AverageGoalsFor,\n    team1StrengthRatio\n  );\n  let adjustedTeam2AverageGoals = await adjustGoalsAvg(\n    team2AverageGoalsFor,\n    team2StrengthRatio\n  );\n\n  let adjustedTeam1AverageGoalsAgainst = await adjustGoalsAvg(\n    team1AverageGoalsAgainst,\n    team2StrengthRatio\n  );\n  let adjustedTeam2AverageGoalsAgainst = await adjustGoalsAvg(\n    team2AverageGoalsAgainst,\n    team1StrengthRatio\n  );\n\n  let maxGoals = 5; // Set the maximum number of goals to predict\n\n  const scores = [];\n\n  for (let i = 0; i <= maxGoals; i++) {\n    for (let j = 0; j <= maxGoals; j++) {\n      let team1GoalExpectation =\n        (adjustedTeam1AverageGoals + adjustedTeam2AverageGoalsAgainst) / 2;\n      // (adjustedTeam2AverageGoalsAgainst / adjustedTeam1AverageGoalsAgainst);\n      let team2GoalExpectation =\n        (adjustedTeam2AverageGoals + adjustedTeam1AverageGoalsAgainst) / 2;\n      // (adjustedTeam1AverageGoalsAgainst / adjustedTeam2AverageGoalsAgainst);\n\n      if (!isFinite(team1GoalExpectation)) {\n        team1GoalExpectation = 0;\n      }\n\n      if (!isFinite(team2GoalExpectation)) {\n        team2GoalExpectation = 0;\n      }\n\n      const probability =\n        (await poissonDistribution(team1GoalExpectation, i)) *\n        (await poissonDistribution(team2GoalExpectation, j));\n      scores.push({\n        team1Score: i,\n        team2Score: j,\n        probability,\n      });\n    }\n  }\n\n  scores.sort((a, b) => b.probability - a.probability); // Sort scores in descending order by probability\n  const top5Scores = scores.slice(0, 5); // Get the top 5 scores\n\n  // for (const score of top5Scores) {\n  //   console.log(\n  //     `Team 1: ${score.team1Score} - Team 2: ${score.team2Score} (${(\n  //       score.probability * 100\n  //     ).toFixed(2)}%)`\n  //   );\n  // }\n  return top5Scores;\n}\n\nasync function normalizeValues(value1, value2, minRange, maxRange) {\n  if (\n    typeof value1 !== \"number\" ||\n    typeof value2 !== \"number\" ||\n    typeof minRange !== \"number\" ||\n    typeof maxRange !== \"number\"\n  ) {\n    throw new Error(\"All arguments must be numbers.\");\n  }\n\n  // Calculate the absolute values of the inputs\n\n  const absValue1 = Math.abs(value1);\n  const absValue2 = Math.abs(value2);\n\n  // Calculate the total sum of the absolute values\n  const totalAbs = absValue1 + absValue2;\n\n  // Calculate the normalized values based on the ratio of absolute values\n  const normalizedAbsValue1 =\n    (absValue1 / totalAbs) * (maxRange - minRange) + minRange;\n  const normalizedAbsValue2 =\n    (absValue2 / totalAbs) * (maxRange - minRange) + minRange;\n\n  // Adjust the signs of the normalized values based on the original values\n  const normalizedValue1 =\n    value1 >= 0 ? normalizedAbsValue1 : -normalizedAbsValue1;\n  const normalizedValue2 =\n    value2 >= 0 ? normalizedAbsValue2 : -normalizedAbsValue2;\n\n  return { normalizedValue1, normalizedValue2 };\n}\n\nexport async function compareTeams(homeForm, awayForm, match) {\n  let homeAttackStrength = homeForm.attackingStrength;\n  let homeDefenceStrength = homeForm.defensiveStrength;\n  let homePossessionStrength = homeForm.possessionStrength;\n  let awayAttackStrength = awayForm.attackingStrength;\n  let awayDefenceStrength = awayForm.defensiveStrength;\n  let awayPossessionStrength = awayForm.possessionStrength;\n\n  let homeXGtoActualDiffStrength = await getXGtoActualDifferentialStrength(\n    parseFloat(homeForm.actualToXGDifference)\n  );\n\n  let awayXGtoActualDiffStrength = await getXGtoActualDifferentialStrength(\n    parseFloat(awayForm.actualToXGDifference)\n  );\n\n  const attackStrengthComparison = await compareStat(\n    homeAttackStrength,\n    awayAttackStrength\n  );\n\n  const defenceStrengthComparison = await compareStat(\n    homeDefenceStrength,\n    awayDefenceStrength\n  );\n\n  const possessiontrengthComparison = await compareStat(\n    homePossessionStrength,\n    awayPossessionStrength\n  );\n\n  const xgActualComparison = await compareStat(\n    homeXGtoActualDiffStrength,\n    awayXGtoActualDiffStrength\n  );\n\n  const xgForComparison = await compareStat(\n    homeForm.xgForStrength,\n    awayForm.xgForStrength\n  );\n\n  const xgAgainstComparison = await compareStat(\n    homeForm.xgAgainstStrength,\n    awayForm.xgAgainstStrength\n  );\n\n  const recentXGComparison = await compareStat(\n    (homeForm.XGlast5 - homeForm.XGAgainstlast5),\n    (awayForm.XGlast5 - awayForm.XGAgainstlast5)\n  )\n  \n\n  const homeAwayPointAverageComparison = await compareStat(\n    homeForm.homeOrAwayAverage,\n    awayForm.homeOrAwayAverage\n  );\n\n  const fiveGameComparison = await compareStat(\n    homeForm.last5Points,\n    awayForm.last5Points\n  );\n\n  const oddsComparison = await compareStat(match.awayOdds, match.homeOdds);\n\n  const homeAdvantage = await compareStat(\n    parseFloat(homeForm.homeAttackAdvantage) / 2,\n    1\n  );\n\n  const dangerousAttacksWithConverstionComparison = await compareStat(\n    homeForm.AverageDangerousAttacksOverall *\n      homeForm.dangerousAttackConversion,\n    awayForm.AverageDangerousAttacksOverall * awayForm.dangerousAttackConversion\n  );\n\n  const goalDiffHomeOrAwayComparison = await compareStat(\n    homeForm.goalDifferenceHomeOrAway,\n    awayForm.goalDifferenceHomeOrAway\n  );\n\n  const overallDirectnessComparison = await compareStat(\n    homeForm.directnessOverallStrength,\n    awayForm.directnessOverallStrength\n  );\n\n  const hOrADirectnessComparison = await compareStat(\n    homeForm.directnessHome,\n    awayForm.directnessAway\n  );\n\n  const accuracyComparison = await compareStat(\n    homeForm.accuracyOverallStrength,\n    awayForm.accuracyOverallStrength\n  );\n\n  let oddsWeighting;\n\n  if (match.game_week > 0 && match.game_week < 4) {\n    oddsWeighting = 1;\n  } else {\n    oddsWeighting = 1;\n  }\n\n  let calculation =\n    attackStrengthComparison * 1 +\n    defenceStrengthComparison * 1 +\n    possessiontrengthComparison * 1 +\n    // xgToActualDiffComparison * 1 +\n    // xgForStrengthRecentComparison * 1 +\n    // xgAgainstStrengthRecentComparison * 1 +\n    homeAwayPointAverageComparison * 1 +\n    goalDiffHomeOrAwayComparison * 1 +\n    xgActualComparison * 1 +\n    // xgForComparison * 1 +\n    // xgAgainstComparison * 1 +\n    recentXGComparison * 4 +\n    oddsComparison * oddsWeighting +\n    dangerousAttacksWithConverstionComparison * 0.1 +\n    homeAdvantage * 0 +\n    fiveGameComparison * 1 +\n    overallDirectnessComparison * 1 +\n    hOrADirectnessComparison * 1 +\n    accuracyComparison * 1;\n\n  let homeWinOutcomeProbability =\n    match.homeTeamWinPercentage + match.awayTeamLossPercentage;\n  let awayWinOutcomeProbability =\n    match.homeTeamLossPercentage + match.awayTeamWinPercentage;\n  let drawOutcomeProbability =\n    match.homeTeamDrawPercentage + match.awayTeamDrawPercentage;\n\n  if (\n    drawOutcomeProbability > homeWinOutcomeProbability &&\n    drawOutcomeProbability > awayWinOutcomeProbability\n  ) {\n    switch (true) {\n      case drawOutcomeProbability > 100:\n        calculation = calculation / 1.5;\n        break;\n      default:\n        calculation = calculation * 1;\n        break;\n    }\n  } else {\n    calculation = calculation * 1;\n  }\n\n  if (calculation > 0) {\n    if (\n      homeForm.lastGame === \"L\" ||\n      homeForm.last2Points < 2 ||\n      awayForm.last2Points >= 5 ||\n      match.XGdifferentialValueRaw < 0\n    ) {\n      calculation = calculation / 4;\n    }\n  } else if (calculation < 0) {\n    if (\n      awayForm.lastGame === \"L\" ||\n      awayForm.last2Points < 2 ||\n      homeForm.last2Points >= 5 ||\n      match.XGdifferentialValueRaw > 0\n    ) {\n      calculation = calculation / 4;\n    }\n  }\n\n  if (homeForm.averageOddsHome !== null || awayForm.averageOddsAway !== null) {\n    if (calculation > 0 && homeForm.averageOddsHome < match.homeOdds && awayForm.averageOddsAway > match.awayOdds) {\n      calculation = calculation / 1.25;\n    } else if (\n      calculation > 0 &&\n      homeForm.averageOddsHome > match.homeOdds && awayForm.averageOddsAway < match.awayOdds\n    ) {\n      calculation = calculation * 1.25;\n    } else {\n      calculation = calculation * 1;\n    }\n\n    if (calculation < 0 && awayForm.averageOddsAway < match.awayOdds && homeForm.averageOddsHome > match.homeOdds) {\n      calculation = calculation / 1.25;\n    } else if (\n      calculation < 0 &&\n      awayForm.averageOddsAway > match.awayOdds && homeForm.averageOddsHome < match.homeOdds\n    ) {\n      calculation = calculation * 1.25;\n    } else {\n      calculation = calculation * 1;\n    }\n  }\n\n  if(calculation > 0 && homeForm.improving === true){\n    console.log(homeForm)\n    calculation = calculation * 1.5\n  } else if (calculation < 0 && awayForm.improving === true){\n    calculation = calculation * 1.5\n  } else if (calculation > 0 && homeForm.improving === false && awayForm.improving === true){\n    calculation = calculation / 2\n  } else if (calculation < 0 && awayForm.improving === false && homeForm.improving === true){\n    calculation = calculation / 2\n  }\n\n  return calculation;\n}\n\nexport async function roundCustom(num, form, otherForm) {\n  let wholeNumber = Math.floor(num);\n  let remainder = num - wholeNumber;\n  const DAConversion =\n    form.AverageDangerousAttacksOverall * form.dangerousAttackConversion;\n\n  if (DAConversion >= 200) {\n    return Math.ceil(num);\n  } else {\n    return Math.floor(num);\n  }\n\n  // if (remainder > 0.9 && form.clinicalScore < 0.95) {\n  //   return Math.ceil(num);\n  // } else {\n  // }\n\n  // if (remainder > 0.5) {\n  //   return Math.ceil(num);\n  // } else {\n  //   return Math.floor(num);\n  // }\n}\n\n//Calculates scores based on prior XG figures, weighted by odds\nlet i = 0;\n\nexport async function calculateScore(match, index, divider, calculate) {\n  i++;\n\n  let teams;\n\n  if (\n    calculate === true &&\n    allForm.find(\n      (game) =>\n        game.home.teamName === match.homeTeam &&\n        game.away.teamName === match.awayTeam\n    )\n  ) {\n    teams = [\n      allForm.find((game) => game.home.teamName === match.homeTeam).home,\n      allForm.find((game) => game.away.teamName === match.awayTeam).away,\n    ];\n  } else {\n    calculate = false;\n  }\n\n  let formHome;\n  let formAway;\n\n  if (calculate) {\n    for (let i = 0; i < teams.length; i++) {\n      if (teams[0][index].PlayedHome <= 1 || teams[1][index].PlayedAway <= 1) {\n        index = 2;\n        divider = 10;\n      }\n\n      teams[i][index].lastGame = teams[i][index].LastFiveForm[4];\n      teams[i][index].previousToLastGame = teams[i][index].LastFiveForm[3];\n\n      let last2 = [\n        teams[i][index].lastGame,\n        teams[i][index].previousToLastGame,\n      ];\n\n      teams[i][index].last5Points = getPointsFromLastX(\n        teams[i][index].LastFiveForm\n      );\n\n      teams[i][index].last6Points = getPointsFromLastX(\n        teams[i][index].LastSixForm\n      );\n\n      teams[i][index].last10Points = getPointsFromLastX(\n        teams[i][index].LastTenForm\n      );\n\n      teams[i][index].last2Points = getPointsFromLastX(last2);\n\n      teams[i][index].twoGameAverage = await getPointAverage(\n        teams[i][index].last2Points,\n        2\n      );\n      teams[i][index].threeGameAverage = await getPointAverage(\n        teams[i][index].last3Points,\n        3\n      );\n      teams[i][index].fiveGameAverage = await getPointAverage(\n        teams[i][index].last5Points,\n        5\n      );\n      teams[i][index].sixGameAverage = await getPointAverage(\n        teams[i][index].last6Points,\n        6\n      );\n      teams[i][index].tenGameAverage = await getPointAverage(\n        teams[i][index].last10Points,\n        10\n      );\n\n      if (teams[i][index].formRun) {\n        teams[i][index].lastHomeOrAwayPoints = getPointsFromLastX(\n          teams[i][index].formRun\n        );\n\n        teams[i][index].homeOrAwayAverage = await getPointAverage(\n          teams[i][index].lastHomeOrAwayPoints,\n          teams[i][index].formRun.length\n        );\n      }\n\n      teams[i][0].ScoredAverage = teams[i][0].ScoredOverall / 5;\n      teams[i][1].ScoredAverage = teams[i][1].ScoredOverall / 6;\n      teams[i][2].ScoredAverage = teams[i][2].ScoredOverall / 10;\n\n      teams[i][0].ConcededAverage = teams[i][0].ConcededOverall / 5;\n      teams[i][1].ConcededAverage = teams[i][1].ConcededOverall / 6;\n      teams[i][2].ConcededAverage = teams[i][2].ConcededOverall / 10;\n\n      if (teams[i][1].ScoredAverage === 0) {\n        teams[i][1].ScoredAverage = teams[i][index].ScoredOverall / 10;\n        teams[i][1].ScoredOverall = teams[i][2].ScoredOverall / 2;\n      }\n\n      if (teams[i][1].ConcededAverage === 0) {\n        teams[i][1].ConcededAverage = teams[i][index].ConcededOverall / 10;\n        teams[i][1].ConcededOverall = teams[i][2].ConcededOverall / 2;\n      }\n\n      teams[i][index].ScoredAverageShortTerm = teams[i][0].ScoredOverall / 5;\n      teams[i][index].ConcededAverageShortTerm =\n        teams[i][0].ConcededOverall / 5;\n\n      teams[i][index].longTermAverageGoals = teams[i][2].ScoredOverall / 10;\n      teams[i][index].longTermAverageConceeded =\n        teams[i][2].ConcededOverall / 10;\n\n      match.GoalsInGamesAverageHome =\n        teams[0][0].ScoredAverage + teams[0][0].ConcededAverage;\n\n      match.GoalsInGamesAverageAway =\n        teams[1][0].ScoredAverage + teams[1][0].ConcededAverage;\n\n      let recentGoalDiff =\n        teams[i][index].ScoredAverageShortTerm -\n        teams[i][index].ConcededAverageShortTerm;\n      let distantGoalDiff =\n        teams[i][index].longTermAverageGoals -\n        teams[i][index].longTermAverageConceeded;\n\n      let recentDA = teams[i][0].AverageDangerousAttacksOverall;\n      let distantDA = teams[i][2].AverageDangerousAttacksOverall;\n\n      let recentPosession = teams[i][0].AveragePossessionOverall;\n      let distantPosession = teams[i][2].AveragePossessionOverall;\n\n      let recentCleanSheet = teams[i][0].CleanSheetPercentage;\n      let distantCleanSheet = teams[i][2].CleanSheetPercentage;\n\n      let recentFormArray = [\n        recentGoalDiff,\n        recentDA,\n        recentPosession,\n        recentCleanSheet,\n      ];\n      let distantFormArray = [\n        distantGoalDiff,\n        distantDA,\n        distantPosession,\n        distantCleanSheet,\n      ];\n\n      teams[i][index].formTrendScore = await compareFormTrend(\n        recentFormArray,\n        distantFormArray\n      );\n\n      teams[i][index].expectedGoals = parseFloat(teams[i][index].XG);\n\n      teams[i][index].ScoredAverageShortAndLongTerm =\n        (teams[i][index].ScoredOverall / 10 +\n          teams[i][index].ScoredAverageShortTerm) /\n        2;\n\n      teams[i][index].conceededAverageShortAndLongTerm =\n        (teams[i][index].ConcededOverall / 10 +\n          teams[i][index].ConcededAverageShortTerm) /\n        2;\n\n      teams[i][index].longTermGoalDifference =\n        teams[i][2].ScoredAverage - teams[i][2].ConcededAverage;\n\n      teams[i][index].shortTermGoalDifference =\n        teams[i][0].ScoredAverage - teams[i][0].ConcededAverage;\n\n      teams[i][index].XGdifferential = await diff(\n        teams[i][index].XGOverall,\n        teams[i][index].XGAgainstAvgOverall\n      );\n\n      teams[i][index].XGdifferentialRecent = await diff(\n        teams[i][0].XGOverall,\n        teams[i][0].XGAgainstAvgOverall\n      );\n\n      teams[i][index].actualToXGDifference = await diff(\n        teams[i][index].XGdifferential,\n        teams[i][index].goalDifference\n      );\n\n      teams[i][index].actualToXGDifferenceRecent = await diff(\n        teams[i][index].shortTermGoalDifference,\n        teams[i][index].XGdifferentialRecent\n      );\n    }\n\n    homeOdds = match.homeOdds;\n    awayOdds = match.awayOdds;\n\n    formHome = teams[0][index];\n    formAway = teams[1][index];\n\n\n    // if (\n    //   (formHome.XGOverall - formHome.XGAgainstAvgOverall) < (formHome.last5XG - formHome.XGAgainstlast5)\n    // ) {\n    //   formHome.improving = true;\n    // } else {\n    //   formHome.improving = false;\n    // }\n\n    // if (\n    //   (formAway.XGOverall - formAway.XGAgainstAvgOverall) < (formAway.last5XG - formAway.XGAgainstlast5)\n    // ) {\n    //   formAway.improving = true;\n    // } else {\n    //   formAway.improving = false;\n    // }\n\n    let homeTenGameAvg = formHome.last10Points / 10;\n    let awayTenGameAvg = formAway.last10Points / 10;\n\n    let homeTwoGameAvg = formHome.last2Points / 2;\n    let awayTwoGameAvg = formAway.last2Points / 2;\n\n    let pointsDiff10 = await getPointsDifferential(\n      homeTenGameAvg,\n      awayTenGameAvg\n    );\n\n    let pointsDiff2 = await getPointsDifferential(\n      homeTwoGameAvg,\n      awayTwoGameAvg\n    );\n\n    let [last10WeightingHome, last10WeightingAway] = await getPointWeighting(\n      pointsDiff10\n    );\n\n    let [last2WeightingHome, last2WeightingAway] = await getPointWeighting(\n      pointsDiff2\n    );\n\n    formHome.dangerousAttackConversion =\n      (formHome.ScoredAverageShortAndLongTerm /\n        formHome.AverageDangerousAttacksOverall) *\n      100;\n    formAway.dangerousAttackConversion =\n      (formAway.ScoredAverageShortAndLongTerm /\n        formAway.AverageDangerousAttacksOverall) *\n      100;\n\n    [formHome.clinicalRating, formHome.clinicalScore] = await getClinicalRating(\n      formHome\n    );\n    [formAway.clinicalRating, formAway.clinicalScore] = await getClinicalRating(\n      formAway\n    );\n\n    let XGdifferential = await diff(\n      formHome.XGdifferential,\n      formAway.XGdifferential\n    );\n\n    formHome.teamName = match.homeTeam;\n    formAway.teamName = match.awayTeam;\n\n    match.XGdifferentialValue = Math.abs(XGdifferential);\n    match.XGdifferentialValueRaw = parseFloat(XGdifferential);\n    if (\n      allLeagueResultsArrayOfObjects[match.leagueIndex].fixtures.length > 35 &&\n      match.leagueID !== 7956\n    ) {\n      [\n        formHome.predictedGoalsBasedOnHomeAv,\n        formHome.predictedGoalsBasedOnAwayAv,\n        formHome.allTeamGoalsBasedOnAverages,\n        formHome.predictedGoalsConceededBasedOnHomeAv,\n        formHome.predictedGoalsConceededBasedOnAwayAv,\n        formHome.allTeamGoalsConceededBasedOnAverages,\n        formHome.averageOddsHome,\n        formHome.averageOddsAway,\n        formHome.averageScoredLeague,\n        formHome.averageConceededLeague,\n        formHome.last10btts,\n        formHome.last10bttsHome,\n        formHome.last10bttsAway,\n        match.bttsAllPercentageHome,\n        match.bttsPercentageHomeHome,\n        match.bttsPercentageHomeAway,\n        formHome.forAndAgainstRollingAv,\n        formHome.forAndAgainstRollingAvHomeOrAway,\n      ] = await getPastLeagueResults(match.homeTeam, match, \"home\", formHome);\n\n      [\n        formAway.predictedGoalsBasedOnHomeAv,\n        formAway.predictedGoalsBasedOnAwayAv,\n        formAway.allTeamGoalsBasedOnAverages,\n        formAway.predictedGoalsConceededBasedOnHomeAv,\n        formAway.predictedGoalsConceededBasedOnAwayAv,\n        formAway.allTeamGoalsConceededBasedOnAverages,\n        formAway.averageOddsHome,\n        formAway.averageOddsAway,\n        formAway.averageScoredLeague,\n        formAway.averageConceededLeague,\n        formAway.last10btts,\n        formAway.last10bttsHome,\n        formAway.last10bttsAway,\n        match.bttsAllPercentageAway,\n        match.bttsPercentageAwayHome,\n        match.bttsPercentageAwayAway,\n        formAway.forAndAgainstRollingAv,\n        formAway.forAndAgainstRollingAvHomeOrAway,\n      ] = await getPastLeagueResults(match.awayTeam, match, \"away\", formAway);\n    } else {\n      formHome.predictedGoalsBasedOnHomeAv = formHome.ScoredAverage;\n      formHome.predictedGoalsBasedOnAwayAv = formHome.ConcededAverage;\n      formHome.allTeamGoalsBasedOnAverages = formHome.ScoredAverage;\n      formHome.forAndAgainstRollingAv = {\n        goalsFor: formHome.ScoredAverage,\n        goalsAgainst: formHome.ConcededAverage,\n      };\n      formHome.forAndAgainstRollingAvHomeOrAway = {\n        goalsFor: formHome.ScoredAverage,\n        goalsAgainst: formHome.ConcededAverage,\n      };\n      formHome.predictedGoalsConceededBasedOnHomeAv = formHome.ConcededAverage;\n      formHome.predictedGoalsConceededBasedOnAwayAv = formHome.ConcededAverage;\n      formHome.allTeamGoalsConceededBasedOnAverages = formHome.ConcededAverage;\n      formHome.averageOddsHome = null;\n      formHome.averageOddsAway = null;\n      formHome.averageScoredLeague = null;\n      formHome.averageConceededLeague = null;\n      formHome.goalDifference =\n        formHome.ScoredOverall - formHome.ConcededOverall;\n      formHome.goalDifferenceHomeOrAway =\n        formHome.ScoredOverall - formHome.ConcededOverall;\n      formHome.last10btts = null;\n      formHome.last10bttsHome = null;\n      formHome.last10bttsAway = null;\n      formHome.allTeamResults = [];\n      match.bttsAllPercentageHome = \"\";\n      match.bttsPercentageHomeHome = \"\";\n      match.bttsPercentageHomeAway = \"\";\n      formAway.predictedGoalsBasedOnHomeAv = formAway.ScoredAverage;\n      formAway.predictedGoalsBasedOnAwayAv = formAway.ConcededAverage;\n      formAway.allTeamGoalsBasedOnAverages = formAway.ScoredAverage;\n      formAway.forAndAgainstRollingAv = {\n        goalsFor: formAway.ScoredAverage,\n        goalsAgainst: formAway.ConcededAverage,\n      };\n      formAway.forAndAgainstRollingAvHomeOrAway = {\n        goalsFor: formAway.ScoredAverage,\n        goalsAgainst: formAway.ConcededAverage,\n      };\n      formAway.predictedGoalsConceededBasedOnHomeAv = formAway.ConcededAverage;\n      formAway.predictedGoalsConceededBasedOnAwayAv = formAway.ConcededAverage;\n      formAway.allTeamGoalsConceededBasedOnAverages = formAway.ConcededAverage;\n      formAway.averageOddsHome = null;\n      formAway.averageOddsAway = null;\n      formAway.averageScoredLeague = null;\n      formAway.averageConceededLeague = null;\n      formAway.goalDifference =\n        formAway.ScoredOverall - formAway.ConcededOverall;\n      formAway.goalDifferenceHomeOrAway =\n        formAway.ScoredOverall - formAway.ConcededOverall;\n\n      formAway.last10btts = null;\n      formAway.last10bttsHome = null;\n      formAway.last10bttsAway = null;\n      formAway.allTeamResults = [];\n      match.bttsAllPercentageAway = \"\";\n      match.bttsPercentageAwayHome = \"\";\n      match.bttsPercentageAwayAway = \"\";\n    }\n\n    if (\n      typeof formHome.homeTeamHomePositionRaw === \"number\" &&\n      typeof formAway.awayTeamAwayPositionRaw === \"number\"\n    ) {\n      formHome.homePositionHomeOnly = parseFloat(\n        formHome.homeTeamHomePositionRaw\n      );\n      formAway.awayPositionAwayOnly = parseFloat(\n        formAway.awayTeamAwayPositionRaw\n      );\n      formHome.homePosition = parseFloat(formHome.homeRawPosition);\n      formAway.awayPosition = parseFloat(formAway.awayRawPosition);\n    } else {\n      formHome.homePositionHomeOnly = \"N/A\";\n      formAway.awayPositionAwayOnly = \"N/A\";\n      formHome.homePosition = \"N/A\";\n      formAway.awayPosition = \"N/A\";\n    }\n\n\n    if(formHome.last10Goals && formAway.last10Goals !== 0){\n      if((formHome.last5Goals - formHome.last5GoalsConceeded) > (formHome.last10Goals - formHome.last10GoalsConceeded)){\n        formHome.improving = true;\n      } else {\n        formHome.improving = false;\n      }\n  \n      if((formAway.last5Goals - formAway.last5GoalsConceeded) > (formAway.last10Goals - formAway.last10GoalsConceeded)){\n        formAway.improving = true;\n      } else {\n        formAway.improving = false;\n      }\n    }\n    \n\n    formHome.AttackingPotency = (formHome.XG / formHome.AttacksHome) * 100;\n    formAway.AttackingPotency = (formAway.XG / formAway.AttacksAverage) * 100;\n\n    let teamComparisonScore;\n\n    const attackingMetricsHome = {\n      \"Average Dangerous Attacks\": formHome.AverageDangerousAttacksOverall,\n      \"Average Shots\": formHome.AverageShots,\n      \"Average Shots On Target\": formHome.AverageShotsOnTargetOverall,\n      \"Average Expected Goals\": formHome.XGOverall,\n      \"Recent XG\": formHome.XGlast5 ? formHome.XGlast5 : formHome.XGOverall,\n      \"Average Goals\":\n        formHome.averageScoredLeague !== undefined &&\n        formHome.averageScoredLeague !== null\n          ? formHome.averageScoredLeague.toFixed(2)\n          : (formHome.ScoredOverall / 10).toFixed(2),\n    };\n    const attackingMetricsAway = {\n      \"Average Dangerous Attacks\": formAway.AverageDangerousAttacksOverall,\n      \"Average Shots\": formAway.AverageShots,\n      \"Average Shots On Target\": formAway.AverageShotsOnTargetOverall,\n      \"Average Expected Goals\": formAway.XGOverall,\n      \"Recent XG\": formAway.XGlast5 ? formAway.XGlast5 : formAway.XGOverall,\n      \"Average Goals\":\n        formAway.averageScoredLeague !== undefined &&\n        formAway.averageScoredLeague !== null\n          ? formAway.averageScoredLeague.toFixed(2)\n          : (formAway.ScoredOverall / 10).toFixed(2),\n    };\n\n    const defensiveMetricsHome = {\n      \"Clean Sheet Percentage\": 100 - formHome.CleanSheetPercentage,\n      \"Average XG Against\": formHome.XGAgainstAvgOverall,\n      \"Recent XG Against\": formHome.XGAgainstlast5\n        ? formHome.XGAgainstlast5\n        : formHome.XGAgainstAvgOverall,\n      \"Average Goals Against\":\n        formHome.averageConceededLeague !== null\n          ? formHome.averageConceededLeague.toFixed(2)\n          : formHome.ConcededAverage.toFixed(2),\n    };\n\n    const defensiveMetricsAway = {\n      \"Clean Sheet Percentage\": 100 - formAway.CleanSheetPercentage,\n      \"Average XG Against\": formAway.XGAgainstAvgOverall,\n      \"Recent XG Against\": formAway.XGAgainstlast5\n        ? formAway.XGAgainstlast5\n        : formAway.XGAgainstAvgOverall,\n      \"Average Goals Against\":\n        formAway.averageConceededLeague !== null\n          ? formAway.averageConceededLeague.toFixed(2)\n          : formAway.ConcededAverage.toFixed(2),\n    };\n\n    formHome.attackingMetrics = attackingMetricsHome;\n    formHome.defensiveMetrics = defensiveMetricsHome;\n    formAway.attackingMetrics = attackingMetricsAway;\n    formAway.defensiveMetrics = defensiveMetricsAway;\n\n    formHome.attackingStrength = await calculateAttackingStrength(\n      attackingMetricsHome\n    );\n    formAway.attackingStrength = await calculateAttackingStrength(\n      attackingMetricsAway\n    );\n    formHome.defensiveStrength = await calculateDefensiveStrength(\n      defensiveMetricsHome\n    );\n    formAway.defensiveStrength = await calculateDefensiveStrength(\n      defensiveMetricsAway\n    );\n\n    formHome.possessionStrength = await calculateMetricStrength(\n      \"averagePossession\",\n      formHome.AveragePossessionOverall\n    );\n\n    formHome.directnessOverall =\n      (formHome.AverageShots / formHome.AveragePossessionOverall) * 10;\n    formAway.directnessOverall =\n      (formAway.AverageShots / formAway.AveragePossessionOverall) * 10;\n\n    formHome.directnessOverallStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formHome.directnessOverall\n    );\n    formAway.directnessOverallStrength = await calculateMetricStrength(\n      \"directnessOverall\",\n      formAway.directnessOverall\n    );\n\n    formHome.directnessHome =\n      (formHome.AverageShotsHomeOrAway / formHome.AveragePossession) * 10;\n    formAway.directnessAway =\n      (formAway.AverageShotsHomeOrAway / formAway.AveragePossession) * 10;\n\n    formHome.shootingAccuracy =\n      (formHome.AverageShotsOnTargetOverall / formHome.AverageShots) *\n      formHome.AverageShots;\n    formAway.shootingAccuracy =\n      (formAway.AverageShotsOnTargetOverall / formAway.AverageShots) *\n      formAway.AverageShots;\n\n    formHome.accuracyOverallStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formHome.shootingAccuracy\n    );\n    formAway.accuracyOverallStrength = await calculateMetricStrength(\n      \"accuracyOverall\",\n      formAway.shootingAccuracy\n    );\n\n    formHome.xgForStrength = await calculateMetricStrength(\n      \"xgFor\",\n      formHome.XGOverall\n    );\n    formHome.xgAgainstStrength = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formHome.XGAgainstAvgOverall\n    );\n\n    formAway.possessionStrength = await calculateMetricStrength(\n      \"averagePossession\",\n      formAway.AveragePossessionOverall\n    );\n    formAway.xgForStrength = await calculateMetricStrength(\n      \"xgFor\",\n      formAway.XGOverall\n    );\n    formAway.xgAgainstStrength = await calculateMetricStrength(\n      \"xgAgainst\",\n      3 - formAway.XGAgainstAvgOverall\n    );\n\n    teamComparisonScore = await compareTeams(formHome, formAway, match);\n    teamComparisonScore = teamComparisonScore * 0.5;\n\n    if (teamComparisonScore > 0.65) {\n      teamComparisonScore = 0.65;\n    } else if (teamComparisonScore < -0.65) {\n      teamComparisonScore = -0.65;\n    }\n\n    if (teamComparisonScore < 0) {\n      formHome.teamStrengthWeighting = 1 + teamComparisonScore / 1;\n      formAway.teamStrengthWeighting = 1 - teamComparisonScore / 1;\n    } else if (teamComparisonScore >= 0) {\n      formHome.teamStrengthWeighting = 1 + teamComparisonScore / 1;\n      formAway.teamStrengthWeighting = 1 - teamComparisonScore / 1;\n    }\n\n    // teamComparisonScore = 0;\n\n\n    match.teamComparisonScore = teamComparisonScore.toFixed(2);\n    // match.goalWeighting = 1 + parseFloat(match.teamComparisonScore)\n\n    let team1Metrics = {\n      weighting: formHome.teamStrengthWeighting,\n      // Add other relevant metrics here\n    };\n\n    let team2Metrics = {\n      weighting: formAway.teamStrengthWeighting,\n      // Add other relevant metrics here\n    };\n\n    // pass arrays of league goals and conceeded\n    let scorePredictions;\n    if (\n      formHome.allConceededArrayHome !== undefined &&\n      formAway.allConceededArrayAway !== undefined\n    ) {\n      scorePredictions = await predictScore(\n        formHome.allGoalsArrayHome,\n        formHome.allConceededArrayHome,\n        formAway.allGoalsArrayAway,\n        formAway.allConceededArrayAway,\n        team1Metrics,\n        team2Metrics,\n        match.game\n      );\n    }\n\n    let finalHomeGoals;\n    let finalAwayGoals;\n\n    const homeGoalDiff =\n      formHome.ScoredAverageShortAndLongTerm -\n      formHome.conceededAverageShortAndLongTerm;\n    const awayGoalDiff =\n      formAway.ScoredAverageShortAndLongTerm -\n      formAway.conceededAverageShortAndLongTerm;\n\n    formHome.goalsDifferential =\n      parseFloat(await diff(homeGoalDiff, awayGoalDiff)) / 1;\n    formAway.goalsDifferential =\n      parseFloat(await diff(awayGoalDiff, homeGoalDiff)) / 1;\n\n    formHome.rollingAverageGoalsDifferential = parseFloat(\n      formHome.allTeamGoalsBasedOnAverages -\n        formHome.allTeamGoalsConceededBasedOnAverages\n    );\n    formAway.rollingAverageGoalsDifferential = parseFloat(\n      formAway.allTeamGoalsBasedOnAverages -\n        formAway.allTeamGoalsConceededBasedOnAverages\n    );\n\n    let goalCalcHomeShortTerm =\n      (formHome.ScoredAverageShortTerm + formAway.ConcededAverageShortTerm) / 2;\n    let goalCalcAwayShortTerm =\n      (formAway.ScoredAverageShortTerm + formHome.ConcededAverageShortTerm) / 2;\n\n    let homeLeagueOrAllFormAverageGoals =\n      formHome.LeagueAverageGoals !== undefined\n        ? (formHome.LeagueAverageGoals + formAway.LeagueAverageConceded) / 2\n        : goalCalcHomeShortTerm;\n    let awayLeagueOrAllFormAverageGoals =\n      formAway.LeagueAverageGoals !== undefined\n        ? (formAway.LeagueAverageGoals + formHome.LeagueAverageConceded) / 2\n        : goalCalcAwayShortTerm;\n\n    let factorOneHome;\n    let factorOneAway;\n\n    factorOneHome =\n      (homeLeagueOrAllFormAverageGoals * 1 +\n        formHome.forAndAgainstRollingAvHomeOrAway.goalsFor * 1 +\n        formAway.forAndAgainstRollingAvHomeOrAway.goalsAgainst * 1 +\n        formHome.forAndAgainstRollingAv.goalsFor * 0 +\n        formAway.forAndAgainstRollingAv.goalsAgainst * 0 +\n        formHome.allTeamGoalsBasedOnAverages * 2 +\n        formAway.allTeamGoalsConceededBasedOnAverages * 2 +\n        formHome.XGOverall * 0.25 +\n        formAway.XGAgainstAvgOverall * 0.25 +\n        last10WeightingHome * 1 +\n        last2WeightingHome * 1) /\n      7.5;\n\n    factorOneAway =\n      (awayLeagueOrAllFormAverageGoals * 1 +\n        formAway.forAndAgainstRollingAvHomeOrAway.goalsFor * 1 +\n        formHome.forAndAgainstRollingAvHomeOrAway.goalsAgainst * 1 +\n        formAway.forAndAgainstRollingAv.goalsFor * 0 +\n        formHome.forAndAgainstRollingAv.goalsAgainst * 0 +\n        formAway.allTeamGoalsBasedOnAverages * 2 +\n        formHome.allTeamGoalsConceededBasedOnAverages * 2 +\n        formAway.XGOverall * 0.25 +\n        formHome.XGAgainstAvgOverall * 0.25 +\n        last10WeightingAway * 1 +\n        last2WeightingAway * 1) /\n      7.5;\n\n    let factorTwoHome;\n    let factorTwoAway;\n\n    if (\n      scorePredictions !== undefined &&\n      scorePredictions[0].probability !== 1\n    ) {\n      factorTwoHome = scorePredictions[0].team1Score;\n      factorTwoAway = scorePredictions[0].team2Score;\n    } else {\n      factorTwoHome = factorOneHome;\n      factorTwoAway = factorOneAway;\n    }\n\n    let homeComparisonWeighting;\n    let awayComparisonWeighting;\n    match.scoreDiff = await diff(factorOneHome, factorOneAway);\n\n    if (teamComparisonScore > 0) {\n      homeComparisonWeighting = 1 + Math.abs(teamComparisonScore);\n      awayComparisonWeighting = 1 + -Math.abs(teamComparisonScore);\n    } else if (teamComparisonScore < 0) {\n      homeComparisonWeighting = 1 + -Math.abs(teamComparisonScore);\n      awayComparisonWeighting = 1 + Math.abs(teamComparisonScore);\n    } else {\n      homeComparisonWeighting = 1;\n      awayComparisonWeighting = 1;\n    }\n\n    let experimentalHomeGoals =\n      ((factorOneHome * 1.1 + factorTwoHome * 1) * homeComparisonWeighting /\n        2.1) *\n      1;\n    // (formHome.forAndAgainstRollingAvHomeOrAway.goalsFor + formAway.forAndAgainstRollingAvHomeOrAway.goalsAgainst) / 2\n\n    let experimentalAwayGoals =\n      ((factorOneAway * 1.1 + factorTwoAway * 1) * awayComparisonWeighting /\n        2.1) *\n      1;\n    // (formAway.forAndAgainstRollingAvHomeOrAway.goalsFor + formHome.forAndAgainstRollingAvHomeOrAway.goalsAgainst) / 2\n\n    let rawFinalHomeGoals = experimentalHomeGoals;\n    let rawFinalAwayGoals = experimentalAwayGoals;\n\n    match.rawFinalHomeGoals = rawFinalHomeGoals;\n    match.rawFinalAwayGoals = rawFinalAwayGoals;\n\n    // if (\n    //   formHome.CleanSheetPercentage > 50 &&\n    //   formAway.CleanSheetPercentage > 50\n    // ) {\n    //   rawFinalHomeGoals = rawFinalHomeGoals - 0.5;\n    //   rawFinalAwayGoals = rawFinalAwayGoals - 0.5;\n    // }\n\n    if (\n      formHome.CleanSheetPercentage < 35 &&\n      formAway.CleanSheetPercentage < 35\n    ) {\n      finalHomeGoals = Math.ceil(rawFinalHomeGoals);\n      finalAwayGoals = Math.ceil(rawFinalAwayGoals);\n    } else if (\n      formHome.CleanSheetPercentage < 40 &&\n      formAway.CleanSheetPercentage < 40 &&\n      rawFinalHomeGoals < 1 &&\n      rawFinalAwayGoals < 1\n    ) {\n      finalHomeGoals = Math.ceil(rawFinalHomeGoals);\n      finalAwayGoals = Math.ceil(rawFinalAwayGoals);\n    } else {\n      finalHomeGoals = Math.floor(rawFinalHomeGoals);\n      finalAwayGoals = Math.floor(rawFinalAwayGoals);\n    }\n\n    // finalHomeGoals = await roundCustom(rawFinalHomeGoals, formHome)\n    // finalAwayGoals = await roundCustom(rawFinalAwayGoals, formAway)\n\n    if (finalHomeGoals > formHome.averageScoredLeague + 2) {\n      finalHomeGoals = Math.round(\n        (finalHomeGoals + formHome.averageScoredLeague) / 2\n      );\n    }\n\n    if (finalAwayGoals > formAway.averageScoredLeague + 2) {\n      finalAwayGoals = Math.round(\n        (finalAwayGoals + formAway.averageScoredLeague) / 2\n      );\n    }\n\n    if (finalAwayGoals < 0) {\n      let difference = Math.abs(\n        parseFloat((await diff(0, finalAwayGoals)) / 2)\n      );\n      rawFinalHomeGoals = rawFinalHomeGoals + difference;\n      finalAwayGoals = 0;\n    }\n\n    if (finalHomeGoals < 0) {\n      let difference = Math.abs(\n        parseFloat((await diff(0, finalHomeGoals)) / 2)\n      );\n      rawFinalAwayGoals = rawFinalAwayGoals + difference;\n      finalHomeGoals = 0;\n    }\n\n    if (match.status !== \"suspended\") {\n      if (finalHomeGoals > finalAwayGoals) {\n        match.prediction = \"homeWin\";\n        homePredictions = homePredictions + 1;\n        if (\n          formHome.lastGame === \"L\" ||\n          formHome.last2Points < 3 ||\n          formAway.last2Points > 3\n        ) {\n          match.includeInMultis = false;\n        } else {\n          match.includeInMultis = true;\n        }\n      } else if (finalAwayGoals > finalHomeGoals) {\n        match.prediction = \"awayWin\";\n        awayPredictions = awayPredictions + 1;\n        if (\n          formAway.lastGame === \"L\" ||\n          formAway.last2Points < 3 ||\n          formHome.last2Points > 3\n        ) {\n          match.includeInMultis = false;\n        } else {\n          match.includeInMultis = true;\n        }\n      } else if (finalHomeGoals === finalAwayGoals) {\n        match.prediction = \"draw\";\n        drawPredictions = drawPredictions + 1;\n      }\n    }\n\n    console.log(`drawPredictions: ${drawPredictions}`);\n\n    if (\n      (XGdifferential > 1 && match.prediction === \"homeWin\") ||\n      (XGdifferential < -1.6 && match.prediction === \"awayWin\")\n    ) {\n      match.XGdifferential = true;\n    } else {\n      match.XGdifferential = false;\n    }\n\n    if (\n      (pointsDiff10 > 1.2 && match.prediction === \"homeWin\") ||\n      (pointsDiff10 < -1.2 && match.prediction === \"awayWin\")\n    ) {\n      match.pointsDifferential = true;\n      match.pointsDifferentialValue = Math.abs(pointsDiff10);\n      match.pointsDifferentialValueRaw = parseFloat(pointsDiff10);\n    } else {\n      match.pointsDiff10 = false;\n      match.pointsDifferentialValue = Math.abs(pointsDiff10);\n      match.pointsDifferentialValueRaw = parseFloat(pointsDiff10);\n    }\n\n    let rollingGoalDiffDifferential = await diff(\n      formHome.rollingAverageGoalsDifferential,\n      formAway.rollingAverageGoalsDifferential\n    );\n\n    if (\n      (rollingGoalDiffDifferential > 1.5 && match.prediction === \"homeWin\") ||\n      (rollingGoalDiffDifferential < -1.5 && match.prediction === \"awayWin\")\n    ) {\n      match.rollingGoalDiff = true;\n      match.rollingGoalDiffValue = rollingGoalDiffDifferential;\n    } else {\n      match.rollingGoalDiff = false;\n      match.rollingGoalDiffValue = rollingGoalDiffDifferential;\n    }\n\n    let dangerousAttacksDifferential = await diff(\n      formHome.AverageDangerousAttacksOverall,\n      formAway.AverageDangerousAttacksOverall\n    );\n\n    if (\n      (dangerousAttacksDifferential > 20 && match.prediction === \"homeWin\") ||\n      (dangerousAttacksDifferential < -20 && match.prediction === \"awayWin\")\n    ) {\n      match.dangerousAttacksDiff = true;\n      match.dangerousAttacksDiffValue = dangerousAttacksDifferential;\n    } else {\n      match.dangerousAttacksDiff = false;\n      match.dangerousAttacksDiffValue = dangerousAttacksDifferential;\n    }\n\n    switch (true) {\n      case match.status !== \"complete\":\n        break;\n      case match.homeGoals > match.awayGoals:\n        match.winner = match.homeTeam;\n        match.outcome = \"homeWin\";\n        homeOutcomes = homeOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formHome.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formAway.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formHome.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formAway.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formHome.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formAway.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formHome.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formAway.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += homeOdds;\n        sumOddsLoss = sumOddsLoss += awayOdds;\n        sumXGForWin = sumXGForWin += formHome.XGOverall;\n        sumXGForLoss = sumXGForLoss += formAway.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formHome.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formAway.XGAgainstAvgOverall;\n        break;\n      case match.homeGoals === match.awayGoals:\n        match.winner = \"draw\";\n        match.outcome = \"draw\";\n        allOutcomes = allOutcomes + 1;\n        allDrawOutcomes = allDrawOutcomes + 1;\n        break;\n      case match.homeGoals < match.awayGoals:\n        match.winner = match.awayTeam;\n        match.outcome = \"awayWin\";\n        allOutcomes = allOutcomes + 1;\n        awayOutcomes = awayOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formAway.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formHome.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formAway.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formHome.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formAway.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formHome.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formAway.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formHome.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += awayOdds;\n        sumOddsLoss = sumOddsLoss += homeOdds;\n        sumXGForWin = sumXGForWin += formAway.XGOverall;\n        sumXGForLoss = sumXGForLoss += formHome.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formAway.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formHome.XGAgainstAvgOverall;\n        break;\n      default:\n        break;\n    }\n\n    console.log(`allDrawOutcomes: ${allDrawOutcomes}`);\n\n    if (match.status === \"complete\") {\n      if (match.prediction === match.outcome) {\n        match.predictionOutcome = \"Won\";\n        winAmount = winAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      } else if (match.prediction !== match.outcome) {\n        match.predictionOutcome = \"Lost\";\n        lossAmount = lossAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      }\n    }\n\n    if (match.status === \"complete\") {\n      if (match.homeGoals + match.awayGoals > 2) {\n        match.over25PredictionOutcome = \"Won\";\n      } else {\n        match.over25PredictionOutcome = \"Lost\";\n      }\n    }\n\n    if (\n      match.status === \"complete\" &&\n      match.homeGoals > 0 &&\n      match.awayGoals > 0\n    ) {\n      match.bttsOutcome = \"bttsWon\";\n    } else {\n      match.bttsOutcome = \"bttsLost\";\n    }\n\n    match.formHome = formHome;\n    match.formAway = formAway;\n\n    // formObjectHome = formHome;\n    // formObjectAway = formAway;\n\n    // console.log(formObjectHome)\n    // console.log(formObjectAway)\n\n    let total = parseInt(finalHomeGoals + finalAwayGoals);\n    totalGoals = totalGoals + total;\n\n    let total2 = parseInt(match.homeGoals + match.awayGoals);\n    totalGoals2 = totalGoals2 + total2;\n\n    numberOfGames = numberOfGames + 1;\n\n    if (finalHomeGoals < 0) {\n      finalHomeGoals = 0;\n    }\n\n    if (finalAwayGoals < 0) {\n      finalAwayGoals = 0;\n    }\n\n    if (match.status === \"suspended\") {\n      finalHomeGoals = \"P\";\n      finalAwayGoals = \"P\";\n    }\n\n    if (\n      match.game_week < 0\n      // match.game_week < 3 &&\n    ) {\n      finalHomeGoals = \"-\";\n      finalAwayGoals = \"-\";\n      match.status = \"notEnoughData\";\n    }\n\n    return [\n      finalHomeGoals,\n      finalAwayGoals,\n      rawFinalHomeGoals,\n      rawFinalAwayGoals,\n    ];\n  } else {\n    finalHomeGoals = \"\";\n    finalAwayGoals = \"\";\n    rawFinalHomeGoals = \"\";\n    rawFinalAwayGoals = \"\";\n    match.status = \"notEnoughData\";\n    match.profit = 0;\n  }\n\n  return [finalHomeGoals, finalAwayGoals, rawFinalHomeGoals, rawFinalAwayGoals];\n}\n\nasync function getSuccessMeasure(fixtures) {\n  let sumProfit = 0;\n  let investment = 0;\n  let exactScores = 0;\n  let successCount = 0;\n  let profit = 0;\n  let netProfit = 0;\n\n\n  // await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}tips/${dateStamp}`, {\n  //   method: \"PUT\",\n  //   headers: {\n  //     Accept: \"application/json\",\n  //     \"Content-Type\": \"application/json\",\n  //   },\n  //   body: JSON.stringify(matches)\n  // })\n\n  for (let i = 0; i < fixtures.length; i++) {\n    if (\n      fixtures[i].status === \"complete\" &&\n      fixtures[i].hasOwnProperty(\"prediction\")\n    ) {\n      sumProfit = sumProfit + fixtures[i].profit;\n      investment = investment + 1;\n      netProfit = (sumProfit - investment).toFixed(2);\n      profit = parseFloat(netProfit);\n      if (fixtures[i].exactScore === true) {\n        exactScores = exactScores + 1;\n      }\n      if (fixtures[i].predictionOutcome === \"Won\") {\n        successCount = successCount + 1;\n      }\n    }\n  }\n\n  totalInvestment = totalInvestment + investment;\n  totalProfit = totalProfit + profit;\n  let ROI = (profit / investment) * 100;\n  totalROI = (totalProfit / totalInvestment) * 100;\n  console.log(`Total Profit : ${totalProfit}`);\n  console.log(`Total Investment : ${totalInvestment}`);\n  console.log(`Total ROI : ${totalROI}`);\n  var operand = ROI >= 0 ? \"+\" : \"\";\n  var operandTwo = totalROI >= 0 ? \"+\" : \"\";\n  let exactScoreHitRate = ((exactScores / investment) * 100).toFixed(1);\n  let successRate = ((successCount / investment) * 100).toFixed(1);\n\n  if (investment > 0) {\n    ReactDOM.render(\n      <Fragment>\n        <Div\n          className={\"SuccessMeasure\"}\n          text={`ROI for \n            all ${investment} W/D/W \n            outcomes: ${operand} ${ROI.toFixed(2)}%`}\n        />\n        <p>{`Correct W/D/W predictions: ${successCount} (${successRate}%)`}</p>\n        <p>{`Exact scores predicted: ${exactScores} (${exactScoreHitRate}%)`}</p>\n        <Div\n          className={\"SuccessMeasure\"}\n          text={`Cumalative ROI for \n            all ${totalInvestment} match outcomes: ${operandTwo} ${totalROI.toFixed(\n            2\n          )}%`}\n        />\n      </Fragment>,\n      document.getElementById(\"successMeasure2\")\n    );\n  } else {\n    return;\n  }\n}\n\nexport var tips = [];\nexport var allTips = [];\nlet allTipsSorted = [];\nvar newArray = [];\nvar bestBets = [];\nvar price;\nvar Over25Tips = [];\nvar XGDiffTips = [];\nvar rollingDiffTips = [];\nvar dangerousAttacksDiffTips = [];\nvar pointsDiffTips = [];\nvar combinations;\nvar exoticArray = [];\nvar gamesInExotic;\nvar minimumExotic;\nvar exoticStake;\nvar exoticString;\nvar bttsArray = [];\nvar accumulatedOdds = 1;\nlet predictions = [];\n\nexport async function getNewTips(array) {\n  // allTips = [];\n  newArray = [];\n  accumulatedOdds = 1;\n\n  if (array.length > 1 && incrementValue > 0) {\n    array.forEach((tip) => {\n      if (\n        array.indexOf(tip) < incrementValue\n        // tip.goalDifferential >= incrementValue && tip.comparisonScore > 0\n      ) {\n        newArray.push(tip);\n        accumulatedOdds = parseFloat(accumulatedOdds) * parseFloat(tip.rawOdds);\n      }\n    });\n  }\n  await renderTips(newArray);\n}\n\nexport async function getScorePrediction(day, mocked) {\n  let mock = mocked;\n  clicked = true;\n  tips = [];\n  bestBets = [];\n  // price = 0\n  bttsArray = [];\n  Over25Tips = [];\n  XGDiffTips = [];\n  pointsDiffTips = [];\n  rollingDiffTips = [];\n  dangerousAttacksDiffTips = [];\n  allTips = [];\n\n  let index = 2;\n  let divider = 10;\n\n  ReactDOM.render(<div></div>, document.getElementById(\"GeneratePredictions\"));\n\n  await Promise.all(\n    matches.map(async (match) => {\n      // if there are no stored predictions, calculate them based on live data\n      if (match) {\n        switch (true) {\n          case match.status === \"canceled\":\n            match.goalsA = \"P\";\n            match.goalsB = \"P\";\n            await calculateScore(match, index, divider, false);\n            break;\n          case match.leagueID === 6935 ||\n            match.leagueID === 7061 ||\n            (match.game_week < 3 && match.game_week !== 0):\n            match.goalsA = \"x\";\n            match.goalsB = \"x\";\n            await calculateScore(match, index, divider, false);\n            break;\n          default:\n            [\n              match.goalsA,\n              match.goalsB,\n              match.unroundedGoalsA,\n              match.unroundedGoalsB,\n            ] = await calculateScore(match, index, divider, true);\n            break;\n        }\n      } else {\n        [\n          match.goalsA,\n          match.goalsB,\n          match.unroundedGoalsA,\n          match.unroundedGoalsB,\n        ] = await calculateScore(match, index, divider, true);\n      }\n\n      await getBTTSPotential(\n        match,\n        match.goalsA,\n        match.goalsB,\n        match.unroundedGoalsA,\n        match.unroundedGoalsB\n      );\n\n      let predictionObject;\n      let Over25PredictionObject;\n      let XGPredictionObject;\n      let pointsDiffObject;\n      let rollingDiffObject;\n      let dangerousAttacksDiffObject;\n\n      if (match.status === \"complete\" && match.prediction) {\n        match.outcomeSymbol =\n          match.predictionOutcome === \"Won\" ? \"\\u2714\" : \"\\u2718\";\n        match.over25PredictionOutcomeSymbol =\n          match.over25PredictionOutcome === \"Won\" ? \"\\u2714\" : \"\\u2718\";\n        match.bttsOutcomeSymbol =\n          match.bttsOutcome === \"bttsWon\" ? \"\\u2714\" : \"\\u2718\";\n      } else {\n        match.outcomeSymbol = \"\";\n        match.over25PredictionOutcomeSymbol = \"\";\n        match.bttsOutcomeSymbol = \"\";\n      }\n\n      if (\n        match.unroundedGoalsA - match.unroundedGoalsB > 0.75 &&\n        match.homeOdds !== 0 &&\n        match.fractionHome !== \"N/A\" &&\n        match.includeInMultis !== false\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.status !== \"notEnoughData\" &&\n          match.homeOdds < 3\n        ) {\n          predictionObject = {\n            team: `${match.homeTeam} to win`,\n            game:\n              match.status === \"complete\"\n                ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n                : match.game,\n            odds: match.fractionHome,\n            rawOdds: match.homeOdds,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            outcome: match.predictionOutcome,\n            outcomeSymbol: match.outcomeSymbol,\n            goalDifferential: parseFloat(\n              await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n            ),\n            experimentalCalc: (\n              (match.unroundedGoalsA - match.unroundedGoalsB) *\n              Math.abs(match.teamComparisonScore)\n            ).toFixed(2),\n            XGdifferentialValue: parseFloat(match.XGdifferentialValue),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formHome.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n\n            if (\n              match.unroundedGoalsA - match.unroundedGoalsB >\n              incrementValue\n            ) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      } else if (\n        match.unroundedGoalsB - match.unroundedGoalsA > 2 &&\n        match.awayOdds !== 0 &&\n        match.fractionAway !== \"N/A\" &&\n        match.includeInMultis !== false\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.status !== \"notEnoughData\" &&\n          match.awayOdds < 3.5\n        ) {\n          predictionObject = {\n            team: `${match.awayTeam} to win`,\n            game:\n              match.status === \"complete\"\n                ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n                : match.game,\n            rawOdds: match.awayOdds,\n            odds: match.fractionAway,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            outcome: match.predictionOutcome,\n            outcomeSymbol: match.outcomeSymbol,\n            goalDifferential:\n              parseFloat(\n                await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n              ) - 1,\n            experimentalCalc: (\n              (match.unroundedGoalsB - match.unroundedGoalsA) *\n              Math.abs(match.teamComparisonScore)\n            ).toFixed(2),\n            XGdifferentialValue: parseFloat(match.XGdifferentialValue),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formAway.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n            if (match.unroundedGoalsB - match.unroundedGoalsA > 2) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      }\n\n      if (\n        match.btts === true &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\" &&\n        match.status !== \"notEnoughData\"\n      ) {\n        bttsArray.push(match);\n      }\n      if (\n        match.unroundedGoalsA + match.unroundedGoalsB > 2.7 &&\n        match.goalsA + match.goalsB > 2 &&\n        match.GoalsInGamesAverageHome > 2.5 &&\n        match.GoalsInGamesAverageAway > 2.5\n      ) {\n        Over25PredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: match.homeTeam,\n          decimalOdds: match.homeDoubleChance,\n          rawOdds: match.over25Odds,\n          odds: match.over25Odds,\n          comparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.over25PredictionOutcomeSymbol,\n          doubleChanceOutcome: match.over25PredictionOutcome,\n          goalTotalUnrounded: match.unroundedGoalsA + match.unroundedGoalsB,\n        };\n        Over25Tips.push(Over25PredictionObject);\n      }\n\n      if (\n        match.XGdifferential === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        XGPredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          XGdifferentialValue: match.XGdifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        XGDiffTips.push(XGPredictionObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        XGPredictionObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          XGdifferentialValue: match.XGdifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        XGDiffTips.push(XGPredictionObject);\n      }\n\n      if (\n        match.pointsDifferential === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        pointsDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          pointsDifferentialValue: match.pointsDifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        pointsDiffTips.push(pointsDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        pointsDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          pointsDifferentialValue: match.pointsDifferentialValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        pointsDiffTips.push(pointsDiffObject);\n      }\n\n      if (\n        match.rollingGoalDiff === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        rollingDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        rollingDiffTips.push(rollingDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        rollingDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        rollingDiffTips.push(rollingDiffObject);\n      }\n\n      if (\n        match.dangerousAttacksDiff === true &&\n        match.prediction === \"homeWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        dangerousAttacksDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.homeTeam} to win`,\n          rawOdds: match.homeOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        dangerousAttacksDiffTips.push(dangerousAttacksDiffObject);\n      } else if (\n        match.XGdifferential === true &&\n        match.prediction === \"awayWin\" &&\n        match.status !== \"notEnoughData\" &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        dangerousAttacksDiffObject = {\n          game:\n            match.status === \"complete\"\n              ? `${match.homeTeam} ${match.homeGoals} - ${match.awayGoals} ${match.awayTeam}`\n              : match.game,\n          team: `${match.awayTeam} to win`,\n          rawOdds: match.awayOdds,\n          comparisonScore: Math.abs(match.teamComparisonScore),\n          rawComparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          outcomeSymbol: match.outcomeSymbol,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          rollingGoalDiffValue: match.rollingGoalDiffValue,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        dangerousAttacksDiffTips.push(dangerousAttacksDiffObject);\n      }\n\n      predictions.push(match);\n    })\n  );\n  ReactDOM.render(\n    <RenderAllFixtures matches={matches} result={true} bool={mock} />,\n    document.getElementById(\"FixtureContainer\")\n  );\n  await getSuccessMeasure(matches);\n  await getMultis();\n  await getNewTips(allTipsSorted);\n\n  // await renderTips();\n}\n\nasync function getMultis() {\n  allTipsSorted = allTips.sort(function (a, b) {\n    return b.goalDifferential - a.goalDifferential;\n  });\n\n  bestBets.sort(function (a, b) {\n    if (a.goalDifferential === b.goalDifferential) {\n      return b.comparisonScore - a.comparisonScore;\n    } else {\n      return b.goalDifferential > a.goalDifferential ? 1 : -1;\n    }\n  });\n\n  bttsArray.sort(function (a, b) {\n    return b.combinedBTTS - a.combinedBTTS;\n  });\n\n  Over25Tips.sort(function (a, b) {\n    return b.goalTotalUnrounded - a.goalTotalUnrounded;\n  });\n\n  XGDiffTips.sort(function (a, b) {\n    return Math.abs(b.XGdifferentialValue) - Math.abs(a.XGdifferentialValue);\n  });\n\n  pointsDiffTips.sort(function (a, b) {\n    return (\n      Math.abs(b.pointsDifferentialValue) - Math.abs(a.pointsDifferentialValue)\n    );\n  });\n\n  rollingDiffTips.sort(function (a, b) {\n    return Math.abs(b.rollingGoalDiffValue) - Math.abs(a.rollingGoalDiffValue);\n  });\n\n  dangerousAttacksDiffTips.sort(function (a, b) {\n    return (\n      Math.abs(b.dangerousAttacksDiffValue) -\n      Math.abs(a.dangerousAttacksDiffValue)\n    );\n  });\n\n  exoticArray = [];\n  gamesInExotic = 0;\n  exoticStake = 0;\n  exoticString = \"\";\n\n  switch (true) {\n    case allTips.length >= 10:\n      for (let i = 0; i < 10; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 10;\n      minimumExotic = 8;\n      exoticStake = 0.1;\n      exoticString = \"45 8-folds, 10 9-folds and 1 10-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 9:\n      for (let i = 0; i < 9; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 9;\n      minimumExotic = 7;\n      exoticStake = 0.1;\n      exoticString = \"36 7-folds, 9 8-folds and 1 9-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 8:\n      for (let i = 0; i < 8; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 8;\n      minimumExotic = 6;\n      exoticStake = 0.1;\n      exoticString = \"28 6-folds, 8 7-folds and 1 8-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 7:\n      for (let i = 0; i < 7; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 7;\n      minimumExotic = 6;\n      exoticStake = 1;\n      exoticString = \"7 6-folds and 1 7-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 6:\n      for (let i = 0; i < 6; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 6;\n      minimumExotic = 5;\n      exoticStake = 1;\n      exoticString = \"6 5-folds and 1 6-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case allTips.length >= 5:\n      for (let i = 0; i < 5; i++) {\n        let game = allTips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 5;\n      minimumExotic = 4;\n      exoticStake = 1;\n      exoticString = \"5 4-folds and 1 5-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    case Over25Tips.length >= 4:\n      for (let i = 0; i < 4; i++) {\n        let game = Over25Tips[i];\n        exoticArray.push(game);\n      }\n      gamesInExotic = 4;\n      minimumExotic = 3;\n      exoticStake = 1;\n      exoticString = \"4 3-folds and 1 4-fold\";\n      price = getCoverBetMaxReturns(exoticArray, minimumExotic, exoticStake);\n      break;\n    default:\n      break;\n  }\n}\n\nexport function getAccumulatorPrice(priceArray) {\n  var result = 1;\n  for (var i = 0; i < priceArray.length; i++)\n    result = result * priceArray[i].rawOdds;\n\n  return result;\n}\n\nexport function getCoverBetMaxReturns(priceArray, minAccSize, stake) {\n  var total = 0;\n  combinations = 0;\n\n  for (var i = minAccSize; i <= priceArray.length; i++) {\n    var perms = getUniquePermutations(priceArray, i);\n    combinations = combinations + perms.length;\n\n    for (var j = 0; j < perms.length; j++)\n      total += getAccumulatorPrice(perms[j]) * stake;\n  }\n  return parseFloat(total.toFixed(2));\n}\n\nfunction getUniquePermutations(arr, permLength) {\n  if (arr.length <= permLength) return [arr];\n\n  var permutations = [];\n  var newArr = [];\n\n  newArr = arr.slice(0);\n\n  for (var i = 0; i < arr.length; i++) {\n    newArr = arr.slice(0);\n    newArr.splice(i, 1);\n    permutations = twoDimArrayUnion(\n      permutations,\n      getUniquePermutations(newArr, permLength)\n    );\n  }\n  return permutations;\n}\n\nfunction twoDimArrayUnion(arr1, arr2) {\n  for (var i = 0; i < arr2.length; i++) {\n    var duplicate = false;\n\n    for (var j = 0; j < arr1.length; j++)\n      if (arr1[j].length === arr2[i].length)\n        for (var k = 0; k < arr1[j].length; k++)\n          if (arr1[j][k] !== arr2[i][k]) break;\n          else if (k === arr1[j].length - 1) duplicate = true;\n\n    if (!duplicate) arr1.push(arr2[i]);\n  }\n\n  return arr1;\n}\n\nfunction NewlineText(props) {\n  const text = props.text;\n  const newText = text.split(\"\\n\").map((str) => <p>{str}</p>);\n\n  return newText;\n}\n\nasync function renderTips() {\n  if (newArray.length > 0) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <div className=\"BestPredictionsExplainer\">\n                  Add or remove a selection using the buttons below. Predictions\n                  are ordered by confidence in the outcome.\n                </div>\n                {newArray.map((tip) => (\n                  <li key={`${tip.game}acca`}>\n                    <div>\n                      {tip.team}: {tip.odds}{\" \"}\n                      <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                    </div>\n                    <div className=\"TipGame\">{tip.game}</div>\n                  </li>\n                ))}\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  No games fit the criteria\n                </h4>\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  }\n\n  if (exoticArray.length > 4) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Exotic of the day\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  <NewlineText\n                    text={`${gamesInExotic} games: ${exoticString}\\nStake per multi: ${exoticStake} units - ${combinations} combinations\\nTotal stake: ${(\n                      exoticStake * combinations\n                    ).toFixed(2)} unit(s)`}\n                  />\n                  {`Potential winnings: ${price.toFixed(2)} units`}\n                </h4>\n                {exoticArray.map((tip) => (\n                  <li key={tip.team}>\n                    {tip.team}: {tip.odds}{\" \"}\n                    <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                    <div>{tip.game}</div>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Exotic of the day\"}\n            element={\n              <ul className=\"BestPredictions\" id=\"BestPredictions\">\n                <h4 className=\"BestPredictionsExplainer\">\n                  Not enough games for this feature\n                </h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  }\n\n  if (Over25Tips.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Over 2.5 goals tips\"}\n            element={\n              <ul className=\"LongshotPredictions\" id=\"LongshotPredictions\">\n                <h4>Over 2.5 goals</h4>\n                {Over25Tips.map((tip) => (\n                  <li key={tip.team}>\n                    {tip.game} - Odds: {tip.odds}{\" \"}\n                    <span className={`${tip.doubleChanceOutcome}`}>\n                      {tip.outcomeSymbol}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Over 2.5 goals tips\"}\n            element={\n              <ul className=\"LongshotPredictions\" id=\"LongshotPredictions\">\n                <h4>No games fit the criteria</h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  }\n\n  if (bttsArray.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"BTTS games\"}\n            element={\n              <ul className=\"BTTSGames\" id=\"BTTSGames\">\n                <h4>Games with highest chance of BTTS</h4>\n                {bttsArray.map((game) => (\n                  <li key={game.game}>\n                    {`${game.game} odds: ${game.bttsFraction}`}{\" \"}\n                    <span className={game.bttsOutcome}>\n                      {game.bttsOutcomeSymbol}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"BTTS games\"}\n            element={\n              <ul className=\"BTTSGames\" id=\"BTTSGames\">\n                <h4>No games fit the criteria</h4>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  }\n\n  ReactDOM.render(\n    <Collapsable\n      buttonText={\"XG tips\"}\n      element={\n        <Slider\n          element={\n            XGDiffTips.length > 0 ? (\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>Games with greatest XG Differentials</h4>\n                {XGDiffTips.map((tip) => (\n                  <li key={tip.game}>\n                    {tip.game} | {tip.prediction} {tip.odds}{\" \"}\n                    <span className={tip.outcome}>{tip.outcomeSymbol}</span>\n                  </li>\n                ))}\n              </ul>\n            ) : (\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>Games with greatest XG Differentials</h4>\n                <li key={\"noPPGDiff\"}>\n                  Sorry, no games fit this criteria today\n                </li>\n              </ul>\n            )\n          }\n          element2={\n            pointsDiffTips.length > 0 ? (\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>\n                  Games with greatest points per game differentials (last 10)\n                </h4>\n                {pointsDiffTips.map((game) => (\n                  <li key={game.game}>\n                    {game.game} | {game.prediction} {game.odds}{\" \"}\n                    <span className={game.outcome}>{game.outcomeSymbol}</span>\n                  </li>\n                ))}\n              </ul>\n            ) : (\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>\n                  Games with greatest points per game differentials (last 10)\n                </h4>\n                <li key={\"noPPGDiff\"}>\n                  Sorry, no games fit this criteria today\n                </li>\n              </ul>\n            )\n          }\n          element3={\n            rollingDiffTips.length > 0 ? (\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>\n                  Games with greatest rolling goal difference differentials\n                </h4>\n                {rollingDiffTips.map((game) => (\n                  <li key={game.game}>\n                    {game.game} | {game.prediction} {game.odds}{\" \"}\n                    <span className={game.outcome}>{game.outcomeSymbol}</span>\n                  </li>\n                ))}\n              </ul>\n            ) : (\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>\n                  Games with greatest rolling goal difference differentials\n                </h4>\n                <li key={\"noPPGDiff\"}>\n                  Sorry, no games fit this criteria today\n                </li>\n              </ul>\n            )\n          }\n          element4={\n            dangerousAttacksDiffTips.length > 0 ? (\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>\n                  Games with greatest average dangerous attacks differentials\n                </h4>\n                {dangerousAttacksDiffTips.map((game) => (\n                  <li key={game.game}>\n                    {game.game} | {game.prediction} {game.odds}{\" \"}\n                    <span className={game.outcome}>{game.outcomeSymbol}</span>\n                  </li>\n                ))}\n              </ul>\n            ) : (\n              <ul className=\"XGDiffTips\" id=\"XGDiffTips\">\n                <h4>\n                  Games with greatest average dangerous attacks differentials\n                </h4>\n                <li key={\"noPPGDiff\"}>\n                  Sorry, no games fit this criteria today\n                </li>\n              </ul>\n            )\n          }\n          element5={\n            <div className=\"DonationButton\">\n              <h2>Help with running costs</h2>\n              <h4>\n                Monthly costs are rising and each donation helps keep XG Tipping\n                free to use\n              </h4>\n              <StyledKofiButton buttonText=\"No sign up donation\" />\n            </div>\n          }\n        ></Slider>\n      }\n    ></Collapsable>,\n    document.getElementById(\"insights\")\n  );\n}\n","import KofiButton from \"kofi-button\"\n\nexport const StyledKofiButton = (props) => {\n  return (\n    <KofiButton className=\"kofi-button\" color=\"#030061\" title={props.buttonText} kofiID=\"H2H0AX25Z\" />\n  )\n}","import React, { useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { CreateBadge } from \"./createBadge\";\nimport { Button } from \"./Button\";\nexport var toggleState = false;\nexport var setIsOff = false;\n\nconst upArrow = \"\\u{25B2}\";\n\nconst StyledTableCell2 = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"rgba(226, 226, 226, 1)\",\n    color: \"white\",\n    padding: \"0.35em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    textAlign: \"left\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    fontSize: \"1.9em\",\n    textAlign: \"left\",\n    fontFamily: \"inherit\",\n    padding: \"0.5em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"#030061\",\n  },\n}))(TableCell);\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"white\",\n    color: \"#030061\",\n    padding: \"0.5em\",\n    paddingTop: \"1em\",\n    paddingBottom: \"1em\",\n    textAlign: \"center\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    // backgroundColor: \"#030061\",\n    fontSize: \"1.9em\",\n    textAlign: \"center\",\n    fontFamily: \"inherit\",\n    padding: \"0.35em\",\n    paddingTop: \"1em\",\n    paddingBottom: \"1em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"#030061\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#rgba(226, 226, 226, 0.424)\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#rgba(226, 226, 226, 1)\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\nfunction styleForm(formIndicator) {\n  let className;\n  if (formIndicator === \"W\") {\n    className = \"winLeague\";\n  } else if (formIndicator === \"D\") {\n    className = \"drawLeague\";\n  } else if (formIndicator === \"L\") {\n    className = \"lossLeague\";\n  }\n  return className;\n}\n\nexport default function LeagueTable(props) {\n  [toggleState, setIsOff] = useState(false);\n\n  let rows = props.Teams.map((team, i) => (\n    <StyledTableRow key={`${props.Key}row${i}`}>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${i + 1}`}\n      </StyledTableCell>\n      <StyledTableCell2 component=\"th\" scope=\"row\" style={{ width: \"15em\" }}>\n        {`${team.Name}`}\n      </StyledTableCell2>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Played}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Wins}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Draws}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Losses}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.For}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Against}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.GoalDifference}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Points}`}\n      </StyledTableCell>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ textAlign: \"center\" }}\n      >\n        <span className={styleForm(team.Form[0])}>\n          {team.Form[0] !== undefined ? team.Form[0] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[1])}>\n          {team.Form[1] !== undefined ? team.Form[1] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[2])}>\n          {team.Form[2] !== undefined ? team.Form[2] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[3])}>\n          {team.Form[3] !== undefined ? team.Form[3] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[4])}>\n          {team.Form[4] !== undefined ? team.Form[4] : \"\"}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  ));\n\n  const leagueResults = [];\n  let singleResult;\n  if (props.Results) {\n    props.Results.forEach((result) => {\n      singleResult = (\n        <div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_xg}</span>\n            <span className=\"column\">XG</span>\n            <span className=\"column\">{result.team_b_xg}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shots}</span>\n            <span className=\"column\">Shots</span>\n            <span className=\"column\">{result.team_b_shots}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shotsOnTarget}</span>\n            <span className=\"column\">SOT</span>\n            <span className=\"column\">{result.team_b_shotsOnTarget}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_dangerous_attacks}</span>\n            <span className=\"column\">Dangerous Attacks</span>\n            <span className=\"column\">{result.team_b_dangerous_attacks}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_possession}%</span>\n            <span className=\"column\">Possession</span>\n            <span className=\"column\">{result.team_b_possession}%</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_red_cards}</span>\n            <span className=\"column\">Red cards</span>\n            <span className=\"column\">{result.team_b_red_cards}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.odds_ft_1}</span>\n            <span className=\"column\">Odds (pre-match)</span>\n            <span className=\"column\">{result.odds_ft_2}</span>\n          </div>\n        </div>\n      );\n\n      leagueResults.push(\n        <Collapsable\n          classNameButton=\"ResultButton\"\n          buttonText={\n            <div className=\"ResultRowOverview\">\n              <div className=\"columnOverviewHome\">{result.home_name}</div>\n              <span className=\"columnOverviewScore\">\n                {result.homeGoalCount} : {result.awayGoalCount}\n              </span>\n              <div className=\"columnOverviewAway\">{result.away_name}</div>\n            </div>\n          }\n          element={singleResult}\n        />\n      );\n    });\n  }\n\n  const leagueResultsOlder = [];\n  if (props.LastWeeksResults) {\n    props.LastWeeksResults.forEach((result) => {\n      singleResult = (\n        <div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_xg}</span>\n            <span className=\"column\">XG</span>\n            <span className=\"column\">{result.team_b_xg}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shots}</span>\n            <span className=\"column\">Shots</span>\n            <span className=\"column\">{result.team_b_shots}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shotsOnTarget}</span>\n            <span className=\"column\">SOT</span>\n            <span className=\"column\">{result.team_b_shotsOnTarget}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_dangerous_attacks}</span>\n            <span className=\"column\">Dangerous Attacks</span>\n            <span className=\"column\">{result.team_b_dangerous_attacks}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_possession}</span>\n            <span className=\"column\">Possession</span>\n            <span className=\"column\">{result.team_b_possession}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_red_cards}</span>\n            <span className=\"column\">Red cards</span>\n            <span className=\"column\">{result.team_b_red_cards}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.odds_ft_1}</span>\n            <span className=\"column\">Odds (pre-match)</span>\n            <span className=\"column\">{result.odds_ft_2}</span>\n          </div>\n        </div>\n      );\n\n      leagueResultsOlder.push(\n        <Collapsable\n          classNameButton=\"ResultButton\"\n          buttonText={\n            <div className=\"ResultRowOverview\">\n              <div className=\"columnOverviewHome\">{result.home_name}</div>\n              <span className=\"columnOverviewScore\">\n                {result.homeGoalCount} : {result.awayGoalCount}\n              </span>\n              <div className=\"columnOverviewAway\">{result.away_name}</div>\n            </div>\n          }\n          element={singleResult}\n        />\n      );\n    });\n  }\n\n  function getTopScorersTeam(id) {\n    let found = props.Teams.find((team) => team.ID === id);\n    return found.Name;\n  }\n\n  async function sorted(league, value, order) {\n    let sortedByForm;\n    if (order === \"desc\") {\n      sortedByForm = league.sort((a, b) => b[value] - a[value]);\n    } else {\n      sortedByForm = league.sort((a, b) => a[value] - b[value]);\n    }\n    setIsOff(!toggleState);\n    return sortedByForm;\n  }\n\n  if (\n    props.GamesPlayed > 3 &&\n    props.Teams[0].LeagueID !== 7956 &&\n    props.Teams[0].LeagueID !== 6969 &&\n    props.Teams[0].LeagueID !== 7432\n  ) {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table\n            className=\"Table\"\n            aria-label=\"customized table\"\n            key={props.Key}\n            style={{ marginTop: \"2em\", marginBottom: \"1em\" }}\n          >\n            <TableHead>\n              <TableRow>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"Points\", \"desc\")}\n                  >\n                    Pts {upArrow}\n                  </button>\n                </td>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"LastXPoints\", \"desc\")}\n                  >\n                    Last 5 {upArrow}\n                  </button>\n                </td>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n          <h5>{`${props.mostRecentGameweek} results`}</h5>\n          <div className=\"ResultsList\" id=\"ResultsList\">\n            <ul>{leagueResults}</ul>\n          </div>\n          <div className=\"LeagueStatisticsHeader\">League Statistics</div>\n          <div className=\"LeagueStatistics\">\n            <ul className=\"LeagueStatsColumn\">\n              <li>Average home goals: {props.Stats.seasonAVG_home}</li>\n              <li>Average away goals: {props.Stats.seasonAVG_away}</li>\n              <li>BTTS: {props.Stats.seasonBTTSPercentage}%</li>\n              <li>\n                Over 0.5 goals: {props.Stats.seasonOver05Percentage_overall}%\n              </li>\n              <li>\n                Over 1.5 goals: {props.Stats.seasonOver15Percentage_overall}%\n              </li>\n              <li>\n                Over 2.5 goals: {props.Stats.seasonOver25Percentage_overall}%\n              </li>\n              <li>\n                Over 3.5 goals: {props.Stats.seasonOver35Percentage_overall}%\n              </li>\n              <li>\n                Over 4.5 goals: {props.Stats.seasonOver45Percentage_overall}%\n              </li>\n            </ul>\n            <ul className=\"LeagueStatsColumn\">\n              <li>\n                Over 7.5 corners: {props.Stats.over75CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 8.5 corners: {props.Stats.over85CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 9.5 corners: {props.Stats.over95CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 10.5 corners:{\" \"}\n                {props.Stats.over105CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 11.5 corners:{\" \"}\n                {props.Stats.over115CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 12.5 corners:{\" \"}\n                {props.Stats.over125CornersPercentage_overall}%\n              </li>\n              <li>Corners average: {props.Stats.cornersAVG_overall}</li>\n              <li>Cards average: {props.Stats.cardsAVG_overall}</li>\n            </ul>\n            <ul className=\"TopScorersColumn\">\n              <h4>Top scorers</h4>\n              <li>\n                {props.Stats.top_scorers[0].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[0].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[0].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[1].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[1].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[1].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[2].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[2].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[2].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[3].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[3].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[3].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[4].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[4].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[4].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[5].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[5].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[5].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[6].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[6].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[6].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[7].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[7].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[7].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[8].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[8].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[8].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[9].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[9].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[9].goals_overall}\n              </li>\n            </ul>\n          </div>\n        </TableContainer>\n      );\n    }\n  } else if (props.Teams[0].LeagueID === 4340) {\n    return null;\n  } else {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table aria-label=\"customized table\" key={props.Key}>\n            <TableHead>\n              <TableRow>\n                <button\n                  className=\"SortedColumn\"\n                  style={{ textAlign: \"center\" }}\n                  onClick={() => sorted(props.Teams, \"Position\")}\n                >\n                  {upArrow}\n                </button>{\" \"}\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <StyledTableCell>Pts</StyledTableCell>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"LastXPoints\", \"desc\")}\n                  >\n                    Last 5 {upArrow}\n                  </button>\n                </td>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n        </TableContainer>\n      );\n    }\n  }\n}\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { orderedLeagues } from \"../App\";\nimport { getForm } from \"./getForm\";\nimport { Fixture } from \"../components/Fixture\";\nimport { Button } from \"../components/Button\";\nimport { getScorePrediction } from \"../logic/getScorePredictions\";\nimport { ThreeDots } from \"react-loading-icons\";\nimport { selectedOdds } from \"../components/OddsRadio\";\nimport LeagueTable from \"../components/LeagueTable\";\nimport { getPointsFromLastX } from \"../logic/getScorePredictions\";\n\nvar oddslib = require(\"oddslib\");\n\n// require(\"dotenv\").config();\n\nvar fixtureResponse;\nvar fixtureArray = [];\nexport var matches = [];\nexport var resultedMatches = [];\nvar league;\nvar leagueID;\nvar leagueGames = [];\nexport var leagueArray = [];\nvar leagueIdArray = [];\nexport var leagueStatsArray = [];\nexport let leagueInstance;\nexport let groupInstance;\nexport let allLeagueResultsArrayOfObjects = [];\nvar lastThreeFormHome;\nvar lastThreeFormAway;\nvar lastFiveFormHome;\nvar lastFiveFormAway;\nvar lastSixFormHome;\nvar lastSixFormAway;\nvar lastTenFormHome;\nvar lastTenFormAway;\nvar leagueOrAll;\nvar formRunHome;\nvar formRunAway;\nlet WDLinLeagueHome;\nlet WDLinLeagueAway;\nlet HomeAverageGoals;\nlet homeAverageGoals;\nlet HomeAverageConceded;\nlet homeAverageConceded;\nlet AwayAverageGoals;\nlet awayAverageGoals;\nlet AwayAverageConceded;\nlet awayAverageConceded;\n\n// export var [currentDay, month, year] = new Date()\n//   .toLocaleDateString(\"en-US\", { timeZone: \"Europe/London\" })\n//   .split(\"/\");\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nexport let allForm = [];\nexport let tableArray = [];\nexport let worldCupArray = [];\ngroupInstance = [];\nleagueInstance = [];\n\nasync function convertTimestamp(timestamp) {\n  let newDate = new Date(timestamp * 1000);\n  let [day, month, year] = newDate.toLocaleDateString(\"en-US\").split(\"/\");\n\n  let converted = `${year}-${day}-${month}`;\n\n  return converted;\n}\n\nexport async function generateTables(a, leagueIdArray, allResults) {\n  // leagueIdArray = [];\n  tableArray = [];\n  worldCupArray = [];\n  let i = 0;\n  leagueArray.forEach(function (league) {\n    let currentLeagueId = leagueIdArray[i];\n    i++;\n    leagueInstance = [];\n    //Skip MLS which has a weird format\n    if (\n      !league.data.specific_tables[0].groups &&\n      currentLeagueId !== 6969 &&\n      league.data.specific_tables[0].table\n    ) {\n      for (\n        let index = 0;\n        index < league.data.specific_tables[0].table.length;\n        index++\n      ) {\n        let currentTeam = league.data.specific_tables[0].table[index];\n        let last5;\n        if (currentTeam.wdl_record.length < 5) {\n          last5 = currentTeam.wdl_record\n            .slice(`-${currentTeam.wdl_record.length}`)\n            .toUpperCase();\n        } else {\n          last5 = currentTeam.wdl_record.slice(-5).toUpperCase();\n        }\n\n        const team = {\n          LeagueID: currentLeagueId,\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          ID: currentTeam.id,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: last5,\n          LastXPoints: getPointsFromLastX(last5.split(\"\")),\n          Points: currentTeam.points,\n          wdl: currentTeam.wdl_record,\n          seasonGoals: currentTeam.seasonGoals,\n          seasonConceded: currentTeam.seasonConceded,\n        };\n        leagueInstance.push(team);\n      }\n      tableArray.push({ id: currentLeagueId, table: leagueInstance });\n    } else if (currentLeagueId === 7432) {\n      // for (let x = 0; x < league.data.specific_tables[0].groups.length; x++) {\n      // for (\n      //   let index = 0;\n      //   index < league.data.specific_tables[0].groups[x].table.length;\n      //   index++\n      // )\n      league.data.specific_tables[0].groups.forEach((group) => {\n        leagueInstance = [];\n        for (let index = 0; index < group.table.length; index++) {\n          let currentTeam = group.table[index];\n          let last5 = \"N/A\";\n          const team = {\n            LeagueID: currentLeagueId,\n            Position: index + 1,\n            Name: currentTeam.cleanName,\n            ID: currentTeam.id,\n            Played: currentTeam.matchesPlayed,\n            Wins: currentTeam.seasonWins_overall,\n            Draws: currentTeam.seasonDraws_overall,\n            Losses: currentTeam.seasonLosses_overall,\n            For: currentTeam.seasonGoals,\n            Against:\n              currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n            GoalDifference: currentTeam.seasonGoalDifference,\n            Form: last5,\n            LastXPoints: getPointsFromLastX(last5.split(\"\")),\n            Points: currentTeam.points,\n            wdl: currentTeam.wdl_record,\n            seasonGoals: currentTeam.seasonGoals,\n            seasonConceded: currentTeam.seasonConceded,\n          };\n          leagueInstance.push(team);\n        }\n        worldCupArray.push({\n          group: group.name,\n          table: leagueInstance,\n        });\n      });\n    } else if (league.data.league_table === null) {\n      for (\n        let index = 0;\n        index < league.data.all_matches_table_overall.length;\n        index++\n      ) {\n        let currentTeam = league.data.all_matches_table_overall[index];\n        let last5 = \"N/A\";\n        const team = {\n          LeagueID: currentLeagueId,\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          ID: currentTeam.id,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: last5,\n          LastXPoints: getPointsFromLastX(last5.split(\"\")),\n          Points: currentTeam.points,\n          wdl: currentTeam.wdl_record,\n          seasonGoals: currentTeam.seasonGoals,\n          seasonConceded: currentTeam.seasonConceded,\n        };\n        leagueInstance.push(team);\n      }\n\n      tableArray.push({ id: currentLeagueId, table: leagueInstance });\n    }\n  });\n}\n\nasync function getTableLayout(arr, statistics) {\n  let tableArray = [];\n  for (let i = 0; i < arr.length; i++) {\n    tableArray.push(\n      <LeagueTable\n        Teams={arr[i].table}\n        Key={`Group${arr[i].group}`}\n        Stats={statistics}\n        GamesPlayed={statistics.game_week}\n      />\n    );\n  }\n  return tableArray;\n}\n\nasync function sorted(league) {\n  const sortedByForm = league.sort((a, b) => b.LastXPoints - a.LastXPoints);\n  return sortedByForm;\n}\n\nexport async function renderTable(index, results, id) {\n  let league;\n  //World cup table rendering\n\n  // let mostRecentGame = results.fixtures.pop();\n  let mostRecentGame = results.fixtures.pop();\n\n  let mostRecentGameweek = \"Latest\";\n\n  const gameweeksResults = results.fixtures.filter(\n    (games) => games.game_week === mostRecentGame.game_week\n  );\n\n  // const lastGameweeksResults = results.fixtures.filter(\n  //   (games) => games.game_week === mostRecentGameweek - 1\n  // );\n\n  const leagueTable = tableArray.filter((table) => table.id === id);\n\n  league = leagueTable[0].table;\n\n  let statistics;\n  let leagueStatistics = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}leagueStats/${id}`\n  );\n  await leagueStatistics.json().then((stats) => {\n    statistics = stats.data;\n  });\n\n  if (league !== undefined) {\n    ReactDOM.render(\n      <LeagueTable\n        Teams={league}\n        Stats={statistics}\n        Key={`League${index}`}\n        GamesPlayed={statistics.game_week}\n        Results={gameweeksResults}\n        mostRecentGameweek={mostRecentGameweek}\n      />,\n      document.getElementById(`leagueName${id}`)\n    );\n  }\n}\n\nasync function createFixture(match, result, mockBool) {\n  let roundedHomeOdds;\n  let roundedAwayOdds;\n  let roundedBTTSOdds;\n  let homeFraction;\n  let awayFraction;\n  let bttsFraction;\n\n  if (selectedOdds === \"Fractional odds\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      roundedHomeOdds = (Math.round(match.homeOdds * 5) / 5).toFixed(1);\n      roundedAwayOdds = (Math.round(match.awayOdds * 5) / 5).toFixed(1);\n\n      if (roundedHomeOdds < 1.1) {\n        roundedHomeOdds = 1.1;\n      }\n      if (roundedAwayOdds < 1.1) {\n        roundedAwayOdds = 1.1;\n      }\n\n      if (match.homeOdds === 0.1 && match.awayOdds === 0.1) {\n        match.homeOdds = 3;\n        roundedHomeOdds = 3;\n        match.awayOdds = 3;\n        roundedAwayOdds = 3;\n      }\n\n      try {\n        homeFraction = oddslib\n          .from(\"decimal\", roundedHomeOdds)\n          .to(\"fractional\", { precision: 1 });\n        awayFraction = oddslib\n          .from(\"decimal\", roundedAwayOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      roundedBTTSOdds = (Math.round(match.bttsOdds * 5) / 5).toFixed(1);\n\n      if (roundedBTTSOdds < 1.1) {\n        roundedBTTSOdds = 1.1;\n      }\n\n      try {\n        bttsFraction = oddslib\n          .from(\"decimal\", roundedBTTSOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  } else if (selectedOdds === \"Decimal odds\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      homeFraction = match.homeOdds;\n      awayFraction = match.awayOdds;\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      bttsFraction = match.bttsOdds;\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  }\n\n  match.homeTeamWinsPercentage = match.homeTeamWinPercentage;\n  match.homeTeamLossesPercentage = match.homeTeamLossPercentage;\n  match.homeTeamDrawsPercentage = match.homeTeamDrawPercentage;\n\n  match.awayTeamWinsPercentage = match.awayTeamWinPercentage;\n  match.awayTeamLossesPercentage = match.awayTeamLossPercentage;\n  match.awayTeamDrawsPercentage = match.awayTeamDrawPercentage;\n  match.fractionHome = homeFraction;\n  match.fractionAway = awayFraction;\n\n  match.bttsFraction = bttsFraction;\n\n  match.game = match.homeTeam + \" v \" + match.awayTeam;\n\n  // ReactDOM.render(\n  //   <Fixture\n  //     fixtures={matches}\n  //     result={result}\n  //     mock={mockBool}\n  //     className={\"individualFixture\"}\n  //   />,\n  //   document.getElementById(\"FixtureContainer\")\n  // );\n}\n\nexport function RenderAllFixtures(props) {\n  return (\n    <Fixture\n      fixtures={props.matches}\n      result={props.result}\n      mock={false}\n      className={\"individualFixture\"}\n    />\n  );\n}\n//     document.getElementById(\"FixtureContainer\")\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nlet isFunctionRunning = false;\n\nexport async function generateFixtures(\n  day,\n  date,\n  selectedOdds,\n  footyStatsFormattedDate,\n  current,\n  todaysDate\n) {\n  if (!isFunctionRunning) {\n    isFunctionRunning = true;\n\n    // const randomInt = Math.random() * 10\n\n    // if(randomInt >= 7){\n    //   alert(\"XGTipping is now serving over 2000 users a month,1 relying on donations to cover increasing running costs. If you can afford to do so and like what we do, please, help us stay subscription fee today by tapping to Donation button at the bottom of the page\")\n    // }\n\n    ReactDOM.render(\n      <div>\n        <div className=\"LoadingText\">\n          Loading all league, fixture & form data, please be patient...\n        </div>\n        <ThreeDots height=\"3em\" fill=\"#030061\" />\n      </div>,\n      document.getElementById(\"Loading\")\n    );\n\n    //cleanup if different day is selected\n    ReactDOM.render(\n      <div></div>,\n      document.getElementById(\"GeneratePredictions\")\n    );\n    ReactDOM.render(<div></div>, document.getElementById(\"successMeasure2\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"bestPredictions\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"exoticOfTheDay\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"insights\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"longShots\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"BTTS\"));\n    ReactDOM.render(<div></div>, document.getElementById(\"draws\"));\n\n    const url = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${footyStatsFormattedDate}`;\n    const formUrl = `${process.env.REACT_APP_EXPRESS_SERVER}form/${date}`;\n\n    matches = [];\n    fixtureArray = [];\n\n    league = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${todaysDate}`\n    );\n\n    ReactDOM.render(<div></div>, document.getElementById(\"FixtureContainer\"));\n\n    fixtureResponse = await fetch(url);\n\n    await fixtureResponse.json().then((fixtures) => {\n      fixtureArray = Array.from(fixtures.data);\n    });\n\n    let form;\n    let formArray = [];\n    allForm = [];\n    var isFormStored;\n    var isStoredLocally;\n    var leaguesStored = false;\n    let storedForm = await fetch(formUrl);\n    if (storedForm.status === 201 || storedForm.status === 200) {\n      await storedForm.json().then((form) => {\n        formArray = Array.from(form.allForm);\n        isFormStored = true;\n        isStoredLocally = true;\n        allForm = formArray;\n      });\n    } else {\n      isFormStored = false;\n      isStoredLocally = false;\n    }\n\n    leagueIdArray = [];\n    for (let i = 0; i < orderedLeagues.length; i++) {\n      leagueID = orderedLeagues[i].element.id;\n      leagueIdArray.push(leagueID);\n    }\n\n    var leaguePositions = [];\n    leagueArray = [];\n\n    let allLeagueResults;\n\n    allLeagueResults = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}results`\n    );\n\n    if (league.status === 200 && allLeagueResults.status === 201) {\n      console.log(\"Not fetching leagues\");\n      await league.json().then((leagues) => {\n        leagueArray = Array.from(leagues.leagueArray);\n      });\n      updateResults(false);\n\n      await allLeagueResults.json().then((allGames) => {\n        allLeagueResultsArrayOfObjects = Array.from(allGames);\n      });\n\n      leaguesStored = true;\n      generateTables(\n        leagueArray,\n        leagueIdArray,\n        allLeagueResultsArrayOfObjects\n      );\n    } else {\n      allLeagueResultsArrayOfObjects = [];\n      console.log(\"Fetching leagues\");\n      for (let i = 0; i < orderedLeagues.length; i++) {\n        league = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}tables/${orderedLeagues[i].element.id}/${date}`\n        );\n        // eslint-disable-next-line no-loop-func\n        await league.json().then((table) => {\n          leagueArray.push(table);\n        });\n        leaguesStored = false;\n      }\n\n      //set variable for date X amount of days in the past and use that to filter the results\n\n      let startDate = (new Date().getTime() / 1000).toFixed(0);\n      // deduct 3 months\n      let targetDate = startDate - 15778463;\n\n      for (const orderedLeague of orderedLeagues) {\n        let fixtures = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${orderedLeague.element.id}`\n        );\n\n        let games = await fixtures.json();\n        let gamesFiltered = games.data.filter(\n          (game) => game.status === \"complete\"\n        );\n\n        if (current) {\n          let mostRecentResults = gamesFiltered.filter(\n            (game) => game.date_unix > targetDate\n          );\n          gamesFiltered = mostRecentResults;\n        }\n\n        // let mostRecentResults = gamesFiltered.filter(\n        //   (game) => game.date_unix > targetDate\n        // );\n\n        const shortenedResults = gamesFiltered.map(\n          ({\n            home_name,\n            away_name,\n            homeGoalCount,\n            awayGoalCount,\n            date_unix,\n            team_a_xg,\n            team_b_xg,\n            odds_ft_1,\n            odds_ft_2,\n            team_a_shots,\n            team_b_shots,\n            team_a_corners,\n            team_b_corners,\n            team_a_shotsOnTarget,\n            team_b_shotsOnTarget,\n            team_a_red_cards,\n            team_b_red_cards,\n            team_a_possession,\n            team_b_possession,\n            team_a_dangerous_attacks,\n            team_b_dangerous_attacks,\n            pre_match_teamA_overall_ppg,\n            pre_match_teamB_overall_ppg,\n            game_week,\n          }) => ({\n            home_name,\n            away_name,\n            homeGoalCount,\n            awayGoalCount,\n            date_unix,\n            team_a_xg,\n            team_b_xg,\n            odds_ft_1,\n            odds_ft_2,\n            team_a_shots,\n            team_b_shots,\n            team_a_corners,\n            team_b_corners,\n            team_a_shotsOnTarget,\n            team_b_shotsOnTarget,\n            team_a_red_cards,\n            team_b_red_cards,\n            team_a_possession,\n            team_b_possession,\n            team_a_dangerous_attacks,\n            team_b_dangerous_attacks,\n            pre_match_teamA_overall_ppg,\n            pre_match_teamB_overall_ppg,\n            game_week,\n          })\n        );        \n\n        let leagueObj = {\n          // leagueObject[orderedLeague] = {\n          name: orderedLeague.name,\n          id: orderedLeague.element.id,\n          fixtures: shortenedResults,\n        };\n\n        allLeagueResultsArrayOfObjects.push(leagueObj);\n      }\n      updateResults(true);\n      generateTables(\n        leagueArray,\n        leagueIdArray,\n        allLeagueResultsArrayOfObjects\n      );\n    }\n\n    let teamPositionPrefix;\n\n    async function getPrefix(position) {\n      switch (position) {\n        case 1:\n        case 21:\n        case 31:\n        case 41:\n          teamPositionPrefix = \"st\";\n          break;\n        case 2:\n        case 22:\n        case 32:\n        case 42:\n          teamPositionPrefix = \"nd\";\n          break;\n        case 3:\n        case 23:\n        case 33:\n        case 43:\n          teamPositionPrefix = \"rd\";\n          break;\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18:\n        case 19:\n        case 20:\n        case 24:\n        case 25:\n        case 26:\n        case 27:\n        case 28:\n        case 29:\n        case 30:\n        case 34:\n        case 35:\n        case 36:\n        case 37:\n        case 38:\n        case 39:\n        case 40:\n        case 44:\n        case 45:\n        case 46:\n        case 47:\n        case 48:\n          teamPositionPrefix = \"th\";\n          break;\n        default:\n          break;\n      }\n      return teamPositionPrefix;\n    }\n\n    for (let i = 0; i < leagueArray.length; i++) {\n      let leagueInstance;\n      let homeLeague;\n      let awayLeague;\n\n      if (leagueArray[i].data.league_table !== null) {\n        leagueInstance = leagueArray[i].data.league_table;\n        homeLeague = leagueArray[i].data.all_matches_table_home;\n        awayLeague = leagueArray[i].data.all_matches_table_away;\n      } else {\n        leagueInstance = leagueArray[i].data.all_matches_table_overall;\n        homeLeague = leagueArray[i].data.all_matches_table_home;\n        awayLeague = leagueArray[i].data.all_matches_table_away;\n      }\n\n      for (let x = 0; x < leagueInstance.length; x++) {\n        let regularSeason = leagueArray[i].data.specific_tables.find(\n          (season) =>\n            season.round === \"Regular Season\" ||\n            season.round === \"2023\" ||\n            season.round === \"2023/2024\" ||\n            season.round === \"Apertura\" ||\n            season.round === \"1st Phase\"\n          // season.round === \"North\" ||\n          // season.round === \"South\"\n        );\n        let string;\n\n        if (regularSeason !== undefined && regularSeason.table) {\n          string = regularSeason.table[x];\n          homeLeague = leagueArray[i].data.all_matches_table_home;\n          awayLeague = leagueArray[i].data.all_matches_table_away;\n        } else {\n          string = leagueArray[i].data.all_matches_table_overall[x];\n          homeLeague = leagueArray[i].data.all_matches_table_home;\n          awayLeague = leagueArray[i].data.all_matches_table_away;\n        }\n\n        let stringHome = homeLeague[x];\n        let stringAway = awayLeague[x];\n\n        leaguePositions.push({\n          name: string.cleanName,\n          position: x + 1,\n          rawPosition: x + 1,\n          homeFormName: stringHome ? stringHome.cleanName : string.cleanName,\n          awayFormName: stringAway ? stringAway.cleanName : string.cleanName,\n          homeSeasonWinPercentage: stringHome\n            ? stringHome.seasonWins\n            : string.seasonWins,\n          awaySeasonWinPercentage: stringAway\n            ? stringAway.seasonWins\n            : string.seasonWins,\n          homeSeasonLossPercentage: stringHome\n            ? stringHome.seasonLosses_home\n            : string.seasonLosses_home,\n          awaySeasonLossPercentage: stringAway\n            ? stringAway.seasonLosses_away\n            : string.seasonLosses_away,\n          homeSeasonDrawPercentage: stringHome\n            ? stringHome.seasonDraws\n            : string.seasonDraws,\n          awaySeasonDrawPercentage: stringAway\n            ? stringAway.seasonDraws\n            : string.seasonDraws,\n          homeSeasonMatchesPlayed: stringHome\n            ? stringHome.matchesPlayed\n            : string.matchesPlayed,\n          awaySeasonMatchesPlayed: stringAway\n            ? stringAway.matchesPlayed\n            : string.matchesPlayed,\n          ppg: string.points / string.matchesPlayed,\n          wdl: string.wdl_record ? string.wdl_record : \"\",\n          played: string.matchesPlayed,\n          seasonGoals: string.seasonGoals,\n          seasonConceded: string.seasonConceded,\n        });\n      }\n    }\n\n    let previousLeagueName;\n    const val = \"prediction\";\n    const exists =\n      matches.filter(function (o) {\n        return o.hasOwnProperty(val);\n      }).length > 0;\n\n    for (let i = 0; i < orderedLeagues.length; i++) {\n      leagueID = orderedLeagues[i].element.id;\n      leagueGames = fixtureArray.filter(\n        (game) => game.competition_id === orderedLeagues[i].element.id\n      );\n\n      for (const fixture of leagueGames) {\n        const unixTimestamp = fixture.date_unix;\n        const milliseconds = unixTimestamp * 1000;\n        const dateObject = new Date(milliseconds);\n\n        let match = {};\n        if (orderedLeagues[i].name !== previousLeagueName) {\n          match.leagueName = orderedLeagues[i].name;\n          match.leagueIndex = i;\n          match.leagueID = leagueID;\n        } else {\n          match.leagueName = null;\n          match.leagueIndex = i;\n          match.leagueID = leagueID;\n        }\n        match.id = fixture.id;\n        match.competition_id = fixture.competition_id;\n        match.date = fixture.date_unix;\n        match.time = dateObject.toLocaleString(\"en-GB\", {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n        });\n        match.homeTeam = fixture.home_name;\n        match.awayTeam = fixture.away_name;\n        match.homeOdds = +(fixture.odds_ft_1 + 0.1).toFixed(2);\n        match.awayOdds = +(fixture.odds_ft_2 + 0.1).toFixed(2);\n        match.drawOdds = +(fixture.odds_ft_x + 0.1).toFixed(2);\n        match.homeDoubleChance = fixture.odds_doublechance_1x;\n        match.awayDoubleChance = fixture.odds_doublechance_x2;\n        match.bttsOdds = fixture.odds_btts_yes;\n        match.homeId = fixture.homeID;\n        match.awayId = fixture.awayID;\n        match.form = [];\n        match.homeTeamInfo = [];\n        match.awayTeamInfo = [];\n        match.btts = false;\n\n        previousLeagueName = orderedLeagues[i].name;\n\n        let homeTeaminLeague;\n        let awayTeaminLeague;\n        let teamPositionHome;\n        let teamPositionHomeTable;\n        let teamPositionAwayTable;\n        let homeTeamWinPercentageHome;\n        let awayTeamWinPercentageAway;\n        let homeTeamLossPercentageHome;\n        let awayTeamLossPercentageAway;\n        let homeTeamDrawPercentageHome;\n        let awayTeamDrawPercentageAway;\n        let teamPositionAway;\n        let homePrefix;\n        let homePrefixHomeTable;\n        let awayPrefix;\n        let awayPrefixAwayTable;\n        let homeSeasonPPG;\n        let awaySeasonPPG;\n\n        try {\n          homeTeaminLeague = leaguePositions.find(\n            (team) => team.name === match.homeTeam\n          );\n\n          let homeTeaminHomeLeague = leaguePositions.find(\n            (team) => team.homeFormName === match.homeTeam\n          );\n          teamPositionHome = homeTeaminLeague.position;\n          teamPositionHomeTable = homeTeaminHomeLeague.position;\n\n          WDLinLeagueHome = Array.from(homeTeaminLeague.wdl.toUpperCase());\n          HomeAverageGoals =\n            homeTeaminLeague.seasonGoals / homeTeaminLeague.played;\n          HomeAverageConceded =\n            homeTeaminLeague.seasonConceded / homeTeaminLeague.played;\n\n          homeTeamWinPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonWinPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homeTeamLossPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonLossPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homeTeamDrawPercentageHome =\n            (homeTeaminHomeLeague.homeSeasonDrawPercentage /\n              homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n            100;\n\n          homePrefix = await getPrefix(teamPositionHome);\n          homePrefixHomeTable = await getPrefix(teamPositionHomeTable);\n\n          homeSeasonPPG = homeTeaminLeague.ppg.toFixed(2);\n        } catch (error) {\n          console.log(error);\n          teamPositionHome = \"N/A\";\n          homePrefix = \"\";\n          homePrefixHomeTable = \"\";\n          homeSeasonPPG = \"N/A\";\n          homeTeaminLeague = {\n            rawPosition: \"N/A\",\n          };\n          WDLinLeagueHome = \"N/A\";\n        }\n\n        try {\n          awayTeaminLeague = leaguePositions.find(\n            (team) => team.name === match.awayTeam\n          );\n\n          let awayTeaminAwayLeague = leaguePositions.find(\n            (team) => team.awayFormName === match.awayTeam\n          );\n\n          teamPositionAway = awayTeaminLeague.position;\n          teamPositionAwayTable = awayTeaminAwayLeague.position;\n\n          WDLinLeagueAway = Array.from(awayTeaminLeague.wdl.toUpperCase());\n          AwayAverageGoals =\n            awayTeaminLeague.seasonGoals / awayTeaminLeague.played;\n          AwayAverageConceded =\n            awayTeaminLeague.seasonConceded / awayTeaminLeague.played;\n\n          awayTeamWinPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonWinPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayTeamLossPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonLossPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayTeamDrawPercentageAway =\n            (awayTeaminAwayLeague.awaySeasonDrawPercentage /\n              awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n            100;\n\n          awayPrefix = await getPrefix(teamPositionAway);\n          awayPrefixAwayTable = await getPrefix(teamPositionAwayTable);\n\n          awaySeasonPPG = awayTeaminLeague.ppg.toFixed(2);\n        } catch (error) {\n          console.log(error);\n          teamPositionAway = \"N/A\";\n          awayPrefix = \"\";\n          awaySeasonPPG = \"N/A\";\n          awayTeaminLeague = {\n            rawPosition: \"N/A\",\n          };\n          WDLinLeagueAway = \"N/A\";\n        }\n\n        if (!isFormStored) {\n          form = await getForm(match);\n\n          let homeFormString5 =\n            form[0].data[0].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString5 =\n            form[1].data[0].stats.additional_info.formRun_overall.toUpperCase();\n          let homeFormString6 =\n            form[0].data[1].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString6 =\n            form[1].data[1].stats.additional_info.formRun_overall.toUpperCase();\n          let homeFormString10 =\n            form[0].data[2].stats.additional_info.formRun_overall.toUpperCase();\n          let awayFormString10 =\n            form[1].data[2].stats.additional_info.formRun_overall.toUpperCase();\n\n          let homeFormRun =\n            form[0].data[2].stats.additional_info.formRun_home.toUpperCase();\n          let awayFormRun =\n            form[1].data[2].stats.additional_info.formRun_away.toUpperCase();\n\n          if (WDLinLeagueHome.length >= 10) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = WDLinLeagueHome.slice(-6);\n            lastTenFormHome = WDLinLeagueHome.slice(-10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = WDLinLeagueAway.slice(-6);\n            lastTenFormAway = WDLinLeagueAway.slice(-10);\n            leagueOrAll = \"League\";\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else if (WDLinLeagueHome.length >= 6) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = WDLinLeagueHome.slice(-6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = WDLinLeagueAway.slice(-6);\n            lastTenFormAway = Array.from(awayFormString10);\n            leagueOrAll = \"League\";\n\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else if (WDLinLeagueHome.length >= 5) {\n            lastThreeFormHome = WDLinLeagueHome.slice(-3);\n            lastFiveFormHome = WDLinLeagueHome.slice(-5);\n            lastSixFormHome = Array.from(homeFormString6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = WDLinLeagueAway.slice(-3);\n            lastFiveFormAway = WDLinLeagueAway.slice(-5);\n            lastSixFormAway = Array.from(awayFormString6);\n            lastTenFormAway = Array.from(awayFormString10);\n            leagueOrAll = \"League\";\n\n            homeAverageGoals = HomeAverageGoals;\n            homeAverageConceded = HomeAverageConceded;\n            awayAverageGoals = AwayAverageGoals;\n            awayAverageConceded = AwayAverageConceded;\n          } else {\n            lastThreeFormHome = [\n              homeFormString5[2],\n              homeFormString5[3],\n              homeFormString5[4],\n            ];\n            lastFiveFormHome = Array.from(homeFormString5);\n            lastSixFormHome = Array.from(homeFormString6);\n            lastTenFormHome = Array.from(homeFormString10);\n            lastThreeFormAway = [\n              awayFormString5[2],\n              awayFormString5[3],\n              awayFormString5[4],\n            ];\n\n            lastFiveFormAway = Array.from(awayFormString5);\n            lastSixFormAway = Array.from(awayFormString6);\n            lastTenFormAway = Array.from(awayFormString10);\n\n            leagueOrAll = \"All\";\n\n            homeAverageGoals = undefined;\n            homeAverageConceded = undefined;\n            awayAverageGoals = undefined;\n            awayAverageConceded = undefined;\n          }\n\n          formRunHome = Array.from(homeFormRun);\n          formRunAway = Array.from(awayFormRun);\n\n          if (\n            teamPositionHome === 0 ||\n            form[0].data[0].season_format !== \"Domestic League\"\n          ) {\n            teamPositionHome = \"N/A\";\n            teamPositionHomeTable = \"N/A\";\n            homePrefix = \"\";\n            homePrefixHomeTable = \"\";\n          }\n\n          if (\n            teamPositionAway === 0 ||\n            form[0].data[0].season_format !== \"Domestic League\"\n          ) {\n            teamPositionAway = \"N/A\";\n            teamPositionAwayTable = \"N/A\";\n            awayPrefix = \"\";\n            awayPrefixAwayTable = \"\";\n          }\n\n          allForm.push({\n            id: match.id,\n            teamIDHome: match.homeId,\n            teamIDAway: match.awayId,\n            leagueId: leagueID,\n            home: {\n              teamName: match.homeTeam,\n              0: {\n                XGOverall: parseFloat(form[0].data[0].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[0].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[0].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[0].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[0].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[0].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[0].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[0].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[0].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[0].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[0].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[0].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[0].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[0].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[0].stats.shotsOnTargetAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[0].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[0].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[0].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[0].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[0].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[0].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[0].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[0].stats.seasonBTTSPercentage_home\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition: homeTeaminLeague.rawPosition\n                  ? homeTeaminLeague.rawPosition\n                  : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n              1: {\n                XGOverall: parseFloat(form[0].data[1].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[1].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[1].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[1].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[1].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[1].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[1].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[1].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[1].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[1].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[1].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[1].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[1].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[1].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[1].stats.shotsOnTargetAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[1].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[1].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[1].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[1].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[1].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[1].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[1].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[1].stats.seasonBTTSPercentage_home\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition: homeTeaminLeague.rawPosition\n                  ? homeTeaminLeague.rawPosition\n                  : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n              2: {\n                XGOverall: parseFloat(form[0].data[2].stats.xg_for_avg_overall),\n                XG: parseFloat(form[0].data[2].stats.xg_for_avg_home),\n                ScoredOverall: parseFloat(\n                  form[0].data[2].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[0].data[2].stats.seasonScoredAVG_home\n                ),\n                PlayedHome: parseFloat(\n                  form[0].data[2].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[0].data[2].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[0].data[2].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[0].data[2].stats.seasonConcededAVG_home\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[0].data[2].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[0].data[2].stats.xg_against_avg_home\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[0].data[2].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[0].data[2].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[0].data[2].stats.possessionAVG_home\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[0].data[2].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[0].data[2].stats.shotsOnTargetAVG_home\n                ),\n                AverageShots: parseFloat(\n                  form[0].data[2].stats.shotsAVG_overall\n                ),\n                AverageShotsHomeOrAway: parseFloat(\n                  form[0].data[2].stats.shotsAVG_home\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[0].data[2].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[0].data[2].stats.seasonPPG_overall),\n                AttacksHome: parseFloat(form[0].data[2].stats.attacks_avg_home),\n                AttacksAway: parseFloat(form[0].data[2].stats.attacks_avg_away),\n                AverageDangerousAttacks: parseFloat(\n                  form[0].data[2].stats.dangerous_attacks_avg_home\n                ),\n                homeAttackAdvantage: parseFloat(\n                  form[0].data[2].stats.homeAttackAdvantage\n                ),\n                homeDefenceAdvantage: parseFloat(\n                  form[0].data[2].stats.homeDefenceAdvantage\n                ),\n                BTTSPercentage: parseInt(\n                  form[0].data[2].stats.seasonBTTSPercentage_home\n                ),\n                lastThreeForm: lastThreeFormHome,\n                LastFiveForm: lastFiveFormHome,\n                LastSixForm: lastSixFormHome,\n                LastTenForm: lastTenFormHome,\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionHome}${homePrefix}`,\n                homeRawPosition: homeTeaminLeague.rawPosition\n                  ? homeTeaminLeague.rawPosition\n                  : 0,\n                homeTeamHomePositionRaw: teamPositionHomeTable,\n                SeasonPPG: homeSeasonPPG,\n                WinPercentage: homeTeamWinPercentageHome,\n                LossPercentage: homeTeamLossPercentageHome,\n                DrawPercentage: homeTeamDrawPercentageHome,\n                formRun: formRunHome,\n                goalDifference:\n                  form[0].data[2].stats.seasonGoalDifference_overall,\n                goalDifferenceHomeOrAway:\n                  form[0].data[2].stats.seasonGoalDifference_home,\n                BttsPercentage:\n                  form[0].data[2].stats.seasonBTTSPercentage_overall,\n                BttsPercentageHomeOrAway:\n                  form[0].data[2].stats.seasonBTTSPercentage_home,\n                CardsTotal: form[0].data[2].stats.cardsTotal_overall,\n                CornersAverage: form[0].data[2].stats.cornersAVG_overall,\n                ScoredBothHalvesPercentage:\n                  form[0].data[2].stats.scoredBothHalvesPercentage_overall,\n                LastMatch: await convertTimestamp(\n                  form[0].data[0].last_updated_match_timestamp\n                ),\n                WDLRecord: WDLinLeagueHome,\n                LeagueAverageGoals: homeAverageGoals,\n                LeagueAverageConceded: homeAverageConceded,\n              },\n            },\n            away: {\n              teamName: match.awayTeam,\n              0: {\n                XGOverall: parseFloat(form[1].data[0].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[0].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[0].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[0].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[0].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[0].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[0].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[0].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[0].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[0].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[0].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[0].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[0].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[0].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[0].stats.shotsOnTargetAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[0].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[0].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[0].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[0].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[0].stats.seasonBTTSPercentage_away\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n              1: {\n                XGOverall: parseFloat(form[1].data[1].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[1].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[1].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[1].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[1].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[1].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[1].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[1].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[1].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[1].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[1].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[1].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[1].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[1].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[1].stats.shotsOnTargetAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[1].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[1].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[1].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[1].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[1].stats.seasonBTTSPercentage_away\n                ),\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n              2: {\n                XGOverall: parseFloat(form[1].data[2].stats.xg_for_avg_overall),\n                XG: parseFloat(form[1].data[2].stats.xg_for_avg_away),\n                ScoredOverall: parseFloat(\n                  form[1].data[2].stats.seasonScoredNum_overall\n                ),\n                ScoredAverage: parseFloat(\n                  form[1].data[2].stats.seasonScoredAVG_away\n                ),\n                PlayedHome: parseFloat(\n                  form[1].data[2].stats.seasonMatchesPlayed_home\n                ),\n                PlayedAway: parseFloat(\n                  form[1].data[2].stats.seasonMatchesPlayed_away\n                ),\n                ConcededOverall: parseFloat(\n                  form[1].data[2].stats.seasonConcededNum_overall\n                ),\n                ConcededAverage: parseFloat(\n                  form[1].data[2].stats.seasonConcededAVG_away\n                ),\n                XGAgainstAvgOverall: parseFloat(\n                  form[1].data[2].stats.xg_against_avg_overall\n                ),\n                XGAgainstAverage: parseFloat(\n                  form[1].data[2].stats.xg_against_avg_away\n                ),\n                CleanSheetPercentage: parseFloat(\n                  form[1].data[2].stats.seasonCSPercentage_overall\n                ),\n                AveragePossessionOverall: parseFloat(\n                  form[1].data[2].stats.possessionAVG_overall\n                ),\n                AveragePossession: parseFloat(\n                  form[1].data[2].stats.possessionAVG_away\n                ),\n                AverageShotsOnTargetOverall: parseFloat(\n                  form[1].data[2].stats.shotsOnTargetAVG_overall\n                ),\n                AverageShotsOnTarget: parseFloat(\n                  form[1].data[2].stats.shotsOnTargetAVG_away\n                ),\n                AverageShots: parseFloat(\n                  form[1].data[2].stats.shotsAVG_overall\n                ),\n                AverageShotsHomeOrAway: parseFloat(\n                  form[1].data[2].stats.shotsAVG_away\n                ),\n                AverageDangerousAttacksOverall: parseFloat(\n                  form[1].data[2].stats.dangerous_attacks_avg_overall\n                ),\n                PPG: parseFloat(form[1].data[2].stats.seasonPPG_overall),\n                AttacksAverage: parseFloat(\n                  form[1].data[2].stats.attacks_avg_away\n                ),\n                AverageDangerousAttacks: parseFloat(\n                  form[1].data[2].stats.dangerous_attacks_avg_away\n                ),\n                BTTSPercentage: parseInt(\n                  form[1].data[2].stats.seasonBTTSPercentage_away\n                ),\n                lastThreeForm: lastThreeFormAway,\n                LastFiveForm: lastFiveFormAway,\n                LastSixForm: lastSixFormAway,\n                LastTenForm: lastTenFormAway,\n                LeagueOrAll: leagueOrAll,\n                LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n                awayRawPosition: awayTeaminLeague.rawPosition\n                  ? awayTeaminLeague.rawPosition\n                  : 0,\n                awayTeamAwayPositionRaw: teamPositionAwayTable,\n                SeasonPPG: awaySeasonPPG,\n                WinPercentage: awayTeamWinPercentageAway,\n                LossPercentage: awayTeamLossPercentageAway,\n                DrawPercentage: awayTeamDrawPercentageAway,\n                formRun: formRunAway,\n                goalDifference:\n                  form[1].data[2].stats.seasonGoalDifference_overall,\n                goalDifferenceHomeOrAway:\n                  form[1].data[2].stats.seasonGoalDifference_away,\n                BttsPercentage:\n                  form[1].data[2].stats.seasonBTTSPercentage_overall,\n                BttsPercentageHomeOrAway:\n                  form[1].data[2].stats.seasonBTTSPercentage_away,\n                CardsTotal: form[1].data[2].stats.cardsTotal_overall,\n                CornersAverage: form[1].data[2].stats.cornersAVG_overall,\n                ScoredBothHalvesPercentage:\n                  form[1].data[2].stats.scoredBothHalvesPercentage_overall,\n                LastMatch: await convertTimestamp(\n                  form[1].data[0].last_updated_match_timestamp\n                ),\n                WDLRecord: WDLinLeagueAway,\n                LeagueAverageGoals: awayAverageGoals,\n                LeagueAverageConceded: awayAverageConceded,\n              },\n            },\n          });\n        }\n\n        match.homeBadge = fixture.home_image;\n        match.awayBadge = fixture.away_image;\n\n        match.homePpg = fixture.home_ppg.toFixed(2);\n        match.awayPpg = fixture.away_ppg.toFixed(2);\n\n        match.lastFiveFormHome = lastFiveFormHome;\n        match.lastFiveFormAway = lastFiveFormAway;\n\n        match.homeRawPosition = homeTeaminLeague.rawPosition;\n        match.awayRawPosition = awayTeaminLeague.rawPosition;\n\n        match.homeTeamHomePosition = `${teamPositionHomeTable}${homePrefixHomeTable}`;\n        match.awayTeamAwayPosition = `${teamPositionAwayTable}${awayPrefixAwayTable}`;\n\n        match.homeTeamHomePositionRaw = teamPositionHomeTable;\n        match.awayTeamAwayPositionRaw = teamPositionAwayTable;\n\n        match.homeTeamWinPercentage = homeTeamWinPercentageHome;\n        match.awayTeamWinPercentage = awayTeamWinPercentageAway;\n\n        match.homeTeamLossPercentage = homeTeamLossPercentageHome;\n        match.awayTeamLossPercentage = awayTeamLossPercentageAway;\n\n        match.homeTeamDrawPercentage = homeTeamDrawPercentageHome;\n        match.awayTeamDrawPercentage = awayTeamDrawPercentageAway;\n        match.status = fixture.status;\n        match.over25Odds = fixture.odds_ft_over25;\n        match.btts_potential = fixture.btts_potential;\n        match.game = match.homeTeam + \" v \" + match.awayTeam;\n        match.stadium = fixture.stadium_name;\n        match.homeGoals = fixture.homeGoalCount;\n        match.awayGoals = fixture.awayGoalCount;\n\n        match.expectedGoalsHomeToDate = fixture.team_a_xg_prematch;\n        match.expectedGoalsAwayToDate = fixture.team_b_xg_prematch;\n        match.game_week = fixture.game_week;\n\n        if (match.status !== \"canceled\" || match.status !== \"suspended\") {\n          matches.push(match);\n          await createFixture(match, false);\n        }\n      }\n\n      if (matches.length > 0) {\n        ReactDOM.render(\n          <Fragment>\n            <Button\n              text={\"Get Predictions & League stats\"}\n              onClickEvent={() => getScorePrediction(day)}\n              className={\"GeneratePredictions\"}\n            />\n            <div className=\"Version\">Prediction engine v3.0.11 (21/10/23)</div>\n          </Fragment>,\n          document.getElementById(\"GeneratePredictions\")\n        );\n      }\n\n      // }\n    }\n\n    ReactDOM.render(\n      <div>\n        <div className=\"LoadingText\"></div>\n      </div>,\n      document.getElementById(\"Loading\")\n    );\n\n    async function updateResults(bool) {\n      console.log(\"updating results\");\n      if (allLeagueResultsArrayOfObjects.length > 0 && bool === true) {\n        await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}results`, {\n          method: \"DELETE\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }).then(async () => {\n          await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}results`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(allLeagueResultsArrayOfObjects),\n          });\n        });\n      }\n      else {\n        console.log(\"EMPTY RESULTS\");\n      }\n    }\n\n    if (!isStoredLocally) {\n      await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}allForm/${date}`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ allForm }),\n      });\n      await updateResults(true);\n    }\n    if (!leaguesStored) {\n      await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${todaysDate}`,\n        {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ leagueArray }),\n        }\n      );\n    }\n    // const allFixtures = await RenderAllFixtures(matches, false)\n    ReactDOM.render(\n      <RenderAllFixtures matches={matches} result={false} bool={false} />,\n      document.getElementById(\"FixtureContainer\")\n    );\n    // ReactDOM.render(<RenderAllFixtures matches={matches} bool={false}/>),document.getElementById(\"FixtureContainer\")\n    setTimeout(() => {\n      isFunctionRunning = false;\n    }, 3000);\n  }\n}\n","import React from \"react\";\n\nfunction HeadToHead(props) {\n  return (\n    <ul className={props.className} style={props.style}>\n      <li key=\"Stadium\" className=\"Stadium\" data-cy={props.name + \"Stadium\"}>\n        {`Venue - ${props.stadium}`}\n      </li>\n      <div className=\"KeyStatsOne\">\n      <li key=\"h2h\" className=\"h2h\" data-cy={props.name + \"h2h\"}>\n        {`Matches played: ${props.matches}`}\n      </li>\n      <li key=\"homeWins\" className=\"homeWins\" data-cy={props.name + \"homeWins\"}>\n        {`${props.homeTeam} wins: ${props.homeWins}`}\n      </li>\n      <li key=\"awayWins\" className=\"awayWins\" data-cy={props.name + \"awayWins\"}>\n        {`${props.awayTeam} wins: ${props.awayWins}`}\n      </li>\n      <li key=\"draws\" className=\"draws\" data-cy={props.name + \"draws\"}>\n        {`Draws: ${props.draws}`}\n      </li>\n      </div>\n      <div className=\"KeyStatsTwo\">\n      <li\n        key=\"averageGoals\"\n        className=\"averageGoals\"\n        data-cy={props.name + \"averageGoals\"}\n      >\n        {`Average goals in fixture: ${props.averageGoals}`}\n      </li>\n      <li\n        key=\"bestHomeOdds\"\n        className=\"bestHomeOdds\"\n        data-cy={props.name + \"bestHomeOdds\"}\n      >\n        {`Best oods for home win @: ${props.bestHomeOdds}`}\n      </li>\n      <li\n        key=\"bestAwayOdds\"\n        className=\"bestAwayOdds\"\n        data-cy={props.name + \"bestAwayOdds\"}\n      >\n        {`Best oods for away win @: ${props.bestAwayOdds}`}\n      </li>\n      </div>\n      <li\n        key=\"lastGameDetail\"\n        className=\"LastGameDetail\"\n        data-cy={props.name + \"Last\"}\n      >\n        {`Last meeting - ${props.lastGameStadiumName} ${props.lastGameDate}`}\n      </li>\n      <div className=\"LastGameOverview\">\n        <div\n          key=\"lastGame\"\n          className=\"LastGameHome\"\n          data-cy={props.name + \"LastGame\"}\n        >\n          {`${props.lastGameHomeTeam}`}\n        </div>\n        <span className=\"LastGameScore\">{`${props.lastGameHomeGoals}`}</span>\n        <span className=\"LastGameScore\">{`${props.lastGameAwayGoals}`}</span>\n        <div className=\"LastGameAway\">{`${props.lastGameAwayTeam}`}</div>\n      </div>\n\n      <li\n        key=\"secondToLastGameDetail\"\n        className=\"secondToLastGameDetail\"\n        data-cy={props.name + \"secondToLast\"}\n      >\n        {`Second to last meeting - ${props.secondToLastGameStadiumName} ${props.secondToLastGameDate}`}\n      </li>\n      <div className=\"LastGameOverview\">\n        <div\n          key=\"lastGame\"\n          className=\"LastGameHome\"\n          data-cy={props.name + \"LastGame\"}\n        >\n          {`${props.secondToLastGameHomeTeam}`}\n        </div>\n        <span className=\"LastGameScore\">{`${props.secondToLastGameHomeGoals}`}</span>\n        <span className=\"LastGameScore\">{`${props.secondToLastGameAwayGoals}`}</span>\n        <div className=\"LastGameAway\">\n          {`${props.secondToLastGameAwayTeam}`}\n        </div>\n      </div>\n    </ul>\n  );\n}\n\nexport default HeadToHead;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    // backgroundColor: \"#dedddd\",\n    padding: 10,\n    textAlign: \"center\",\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    // border: \"none\",\n    margin: \"none\",\n    color: 'white',\n    lineHeight: '2em',\n    backgroundColor: '#030061',\n  },\n  body: {\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    padding: 10,\n    color: 'white',\n    // border: \"none\",\n    margin: \"none\",\n    backgroundColor: '#030061',\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#030061\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#030052\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\n\nexport default function CustomizedTables(props) {\n\n\n  return (\n    <TableContainer className=\"StatsTable\">\n      <Table aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Stat</StyledTableCell>\n            <StyledTableCell>H2H history</StyledTableCell>\n            <StyledTableCell>XGTipping forecast</StyledTableCell>\n            <StyledTableCell>Odds (yes)</StyledTableCell>\n            <StyledTableCell>Odds (no)</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        <StyledTableRow key=\"O05\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 0.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o05Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o05Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u05Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O15\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 1.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o15Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o15Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u15Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O25\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 2.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o25Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o25Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u25Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O35\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 3.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o35Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o35Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u35Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"BTTS\" className=\"BTTSStats\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              BTTS %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.BTTSStat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSForecast}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSOdds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSOddsNo}</StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport HeadToHead from \"../components/HeadToHead\";\nimport { Fragment } from \"react\";\nimport CustomizedTables from \"../components/Table\";\n\nexport async function getTeamStats(\n  id,\n  home,\n  away,\n  homeBTTS,\n  homeOnlyBTTS,\n  awayBTTS,\n  awayOnlyBTTS\n) {\n  let identifier = id;\n  let bestHomeOdds;\n  let bestHomeOddsProvider;\n  let bestAwayOdds;\n  let bestAwayOddsProvider;\n\n  let match = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}match/${identifier}`\n  );\n  await match.json().then(async (match) => {\n    let matchArr = match.data.h2h.previous_matches_ids;\n    let previousMatchDetails;\n    let secondToPreviousMatchDetails;\n\n    let oddsComparisonHomeArray = [];\n    let oddsComparisonAwayArray = [];\n\n    if (match.data.odds_comparison) {\n      oddsComparisonHomeArray = match.data.odds_comparison[\"FT Result\"][1];\n      oddsComparisonAwayArray = match.data.odds_comparison[\"FT Result\"][2];\n\n      let sortedHomeOdds = Object.entries(oddsComparisonHomeArray).sort(\n        (a, b) => b[1] - a[1]\n      );\n      let sortedAwayOdds = Object.entries(oddsComparisonAwayArray).sort(\n        (a, b) => b[1] - a[1]\n      );\n\n      bestHomeOddsProvider = sortedHomeOdds[0][0];\n      bestHomeOdds = sortedHomeOdds[0][1];\n      bestAwayOddsProvider = sortedAwayOdds[0][0];\n      bestAwayOdds = sortedAwayOdds[0][1];\n    } else {\n      bestHomeOddsProvider = \"N/A\";\n      bestHomeOdds = \"N/A\";\n      bestAwayOddsProvider = \"N/A\";\n      bestAwayOdds = \"N/A\";\n    }\n\n    async function getBTTSPercentage(\n      homeToal,\n      home,\n      awayTotal,\n      away,\n      fixtureHistory\n    ) {\n      let total = homeToal + home + awayTotal + away + fixtureHistory;\n      return total / 5;\n    }\n\n    async function getFairOdds(impliedProbability) {\n      let impliedProbabilityDivided = impliedProbability / 100;\n      return (1 / impliedProbabilityDivided).toFixed(2);\n    }\n\n    if (match.data.h2h.previous_matches_results.totalMatches > 0) {\n      matchArr.sort((a, b) => b.date_unix - a.date_unix);\n      let lastMatch = matchArr[0].id;\n      let secondMatchExists = true;\n      let secondToLastMatch =\n        matchArr[1] !== undefined ? matchArr[1].id : false;\n\n      let previousMatch = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}match/${lastMatch}`\n      );\n      let dateObject;\n      let date;\n      let date2;\n      await previousMatch.json().then(async (game) => {\n        previousMatchDetails = game.data;\n        const unixTimestamp = previousMatchDetails.date_unix;\n        const milliseconds = unixTimestamp * 1000;\n        dateObject = new Date(milliseconds);\n        date = `${dateObject.getDate()}/${\n          dateObject.getMonth() + 1\n        }/${dateObject.getFullYear()}`;\n\n        let secondToPreviousMatch;\n        let dateObject2;\n\n        if (secondMatchExists !== false) {\n          secondToPreviousMatch = await fetch(\n            `${process.env.REACT_APP_EXPRESS_SERVER}match/${secondToLastMatch}`\n          );\n          await secondToPreviousMatch.json().then((game) => {\n            secondToPreviousMatchDetails = game.data;\n            const unixTimestamp = secondToPreviousMatchDetails.date_unix;\n            const milliseconds = unixTimestamp * 1000;\n            dateObject2 = new Date(milliseconds);\n            date2 = `${dateObject2.getDate()}/${\n              dateObject2.getMonth() + 1\n            }/${dateObject2.getFullYear()}`;\n          });\n        }\n      });\n\n      const BTTSForecast = await getBTTSPercentage(\n        homeBTTS,\n        homeOnlyBTTS,\n        awayBTTS,\n        awayOnlyBTTS,\n        match.data.h2h.betting_stats.bttsPercentage\n      );\n      const fairOddsBTTSYes = await getFairOdds(BTTSForecast);\n      const fairOddsBTTSNo = await getFairOdds(100 - BTTSForecast);\n\n      ReactDOM.render(\n        <Fragment>\n          <h3>Fixture history</h3>\n          <HeadToHead\n            className={\"PreviousMatchStats\"}\n            homeTeam={home}\n            awayTeam={away}\n            stadium={match.data.stadium_name}\n            matches={match.data.h2h.previous_matches_results.totalMatches}\n            homeWins={match.data.h2h.previous_matches_results.team_a_wins}\n            awayWins={match.data.h2h.previous_matches_results.team_b_wins}\n            draws={match.data.h2h.previous_matches_results.draw}\n            averageGoals={match.data.h2h.betting_stats.avg_goals}\n            bestHomeOdds={`${bestHomeOddsProvider} - ${bestHomeOdds}`}\n            bestAwayOdds={`${bestAwayOddsProvider} - ${bestAwayOdds}`}\n            lastGameStadiumName={\n              previousMatchDetails.stadium_name\n                ? previousMatchDetails.stadium_name\n                : \"-\"\n            }\n            lastGameHomeGoals={\n              previousMatchDetails.homeGoalCount !== undefined\n                ? previousMatchDetails.homeGoalCount\n                : \"-\"\n            }\n            lastGameAwayGoals={\n              previousMatchDetails.awayGoalCount !== undefined\n                ? previousMatchDetails.awayGoalCount\n                : \"-\"\n            }\n            lastGameHomeTeam={\n              previousMatchDetails.home_name\n                ? previousMatchDetails.home_name\n                : \"-\"\n            }\n            lastGameAwayTeam={\n              previousMatchDetails.away_name\n                ? previousMatchDetails.away_name\n                : \"-\"\n            }\n            lastGameDate={!isNaN(date) ? date : \"-\"}\n            secondToLastGameStadiumName={\n              secondToPreviousMatchDetails.stadium_name\n                ? secondToPreviousMatchDetails.stadium_name\n                : \"-\"\n            }\n            secondToLastGameHomeGoals={\n              secondToPreviousMatchDetails.homeGoalCount !== undefined\n                ? secondToPreviousMatchDetails.homeGoalCount\n                : \"-\"\n            }\n            secondToLastGameAwayGoals={\n              secondToPreviousMatchDetails.awayGoalCount !== undefined\n                ? secondToPreviousMatchDetails.awayGoalCount\n                : \"-\"\n            }\n            secondToLastGameHomeTeam={\n              secondToPreviousMatchDetails.home_name\n                ? secondToPreviousMatchDetails.home_name\n                : \"-\"\n            }\n            secondToLastGameAwayTeam={\n              secondToPreviousMatchDetails.away_name\n                ? secondToPreviousMatchDetails.away_name\n                : \"-\"\n            }\n            secondToLastGameDate={!isNaN(date2) ? date2 : \"-\"}\n          ></HeadToHead>\n          <CustomizedTables\n            o05Stat={match.data.h2h.betting_stats.over05Percentage}\n            o15Stat={match.data.h2h.betting_stats.over15Percentage}\n            o15Forecast={match.data.o15_potential}\n            o05Odds={match.data.odds_ft_over05}\n            u05Odds={match.data.odds_ft_under05}\n            o15Odds={match.data.odds_ft_over15}\n            u15Odds={match.data.odds_ft_under15}\n            o25Stat={match.data.h2h.betting_stats.over25Percentage}\n            o25Forecast={match.data.o25_potential}\n            o25Odds={match.data.odds_ft_over25}\n            u25Odds={match.data.odds_ft_under25}\n            o35Stat={match.data.h2h.betting_stats.over35Percentage}\n            o35Forecast={match.data.o35_potential}\n            o35Odds={match.data.odds_ft_over35}\n            u35Odds={match.data.odds_ft_under35}\n            BTTSStat={match.data.h2h.betting_stats.bttsPercentage}\n            BTTSForecast={`${BTTSForecast}%`}\n            BTTSOdds={`${match.data.odds_btts_yes}\\n Fair odds: ${fairOddsBTTSYes}`}\n            BTTSOddsNo={`${match.data.odds_btts_no}\\n Fair odds: ${fairOddsBTTSNo}`}\n            CornersStat={\"–\"}\n            CornersForecast={match.data.corners_potential}\n            CornersOdds={match.data.odds_corners_over_105}\n          />\n        </Fragment>,\n        document.getElementById(`H2HStats${identifier}`)\n      );\n    } else {\n      ReactDOM.render(\n        <div>No fixture history found</div>,\n        document.getElementById(`H2HStats${identifier}`)\n      );\n    }\n  });\n}\n","import { parse } from \"dotenv\";\n\nasync function getOverOrUnderText(xgSum) {\n  let overUnderAchievingSum = xgSum;\n  let text;\n  switch (true) {\n    case overUnderAchievingSum > 1.5:\n      text =\n        \"Underachieving drastically against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > 1.25 && overUnderAchievingSum <= 1.5:\n      text =\n        \"Underachieving to a large degree against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > 1 && overUnderAchievingSum <= 1.25:\n      text = \"Underachieving against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > 0.75 && overUnderAchievingSum <= 1:\n      text =\n        \"Underachieving to a small degree against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > 0.4 && overUnderAchievingSum <= 0.75:\n      text =\n        \"Underachieving slighly against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > -0.4 && overUnderAchievingSum <= 0.4:\n      text =\n        \"Roughly tracking on par with their expected goal difference.\";\n      break;\n\n    case overUnderAchievingSum < -0.4 && overUnderAchievingSum >= -0.75:\n      text =\n        \"Overachieving slighly against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum < -0.75 && overUnderAchievingSum >= -1:\n      text =\n        \"Overachieving to a small degree against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum < -1 && overUnderAchievingSum >= -1.25:\n      text = \"Overachieving against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum < -1.25 && overUnderAchievingSum >= -1.5:\n      text =\n        \"Overachieving to a large degree against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum < -1.5:\n      text =\n        \"Overachieving drastically against their expected goal difference.\";\n      break;\n    default:\n      text = \"\";\n      break;\n  }\n  return text;\n}\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nasync function getXGDifferential(xgFor, xgAgainst, goalsFor, goalsAgainst) {\n  let xgDiff = xgFor - xgAgainst;\n  let goalDiff = goalsFor - goalsAgainst;\n  let compareXgAndGoalDiff = await diff(xgDiff, goalDiff);\n\n  return compareXgAndGoalDiff;\n}\n\nasync function getAttackingSummary(goalsRecent, goalsLongTerm) {\n\n  let text;\n  if (goalsRecent >= 3) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Free scoring and improving in front of goal recently.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Free scoring and consistent in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Free scoring but less so recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 3 && goalsRecent >= 2) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text =\n          \"Impressive scoring stats and improving in front of goal recently.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Impressive scoring stats and consistent in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        console.log(goalsRecent)\n        console.log(goalsLongTerm)\n        text = \"Impressive scoring stats but less so recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 2 && goalsRecent >= 1) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Decent scoring stats and improving in front of goal recently.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Decent scoring stats and consistent in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Decent scoring stats but less so recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 1 && goalsRecent > 0) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Poor scoring stats but improving in front of goal recently.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Poor scoring stats and consistently poor in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Poor scoring stats showing no signs of improvement.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent === 0) {\n    switch (true) {\n      case goalsRecent === 0:\n        text = \"Woeful goal stats in recent games.\";\n        break;\n      default:\n        text = \"\";\n        break;\n    }\n  }\n  return text;\n}\n\nasync function getDefenceSummary(cleansheetStat) {\n  let text;\n  switch (true) {\n    case cleansheetStat > 80:\n      text = `Incredibly strong defensively, with ${cleansheetStat}% of their games ending in a cleansheet`;\n      break;\n    case cleansheetStat > 60 && cleansheetStat <= 80:\n      text = `Very strong defensively, with ${cleansheetStat}% of their games ending in a cleansheet`;\n      break;\n    case cleansheetStat > 40 && cleansheetStat <= 60:\n      text = `Defensively impressive, with ${cleansheetStat}% of their games ending in a cleansheet`;\n      break;\n    case cleansheetStat > 20 && cleansheetStat <= 40:\n      text = `Defensively, ${cleansheetStat}% of their games have ended in a cleansheet`;\n      break;\n    case cleansheetStat > 1 && cleansheetStat <= 20:\n      text = `Defensively frail, with only ${cleansheetStat}% of their games ending in a cleansheet`;\n      break;\n      case cleansheetStat === 0:\n        text = `Defensively weak, with ${cleansheetStat}% of their games ending in a cleansheet`;\n        break;\n    default:\n      break;\n  }\n  return text;\n}\n\nasync function GenerateFormSummary(form, lastx, recentForm) {\n  let text;\n  // let six = lastx[2];\n  let ten = lastx[1];\n  let five = lastx[0];\n\n  let xgSum = await getXGDifferential(\n    form.XGOverall,\n    form.XGAgainstAvgOverall,\n    form.ScoredOverall / 10,\n    form.ConcededOverall / 10\n  );\n  let xgText = await getOverOrUnderText(xgSum);\n  let attackString = await getAttackingSummary(\n    form.last5Goals,\n    form.last10Goals\n  );\n  let defenceString = await getDefenceSummary(form.CleanSheetPercentage);\n  let pointsAverageTotal =\n    (parseFloat(five) + parseFloat(ten)) / 2;\n\n  if (pointsAverageTotal >= 2.6) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Outstanding recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Outstanding recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Outstanding recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 2.3) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Excellent recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Excellent recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Excellent recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 2) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Very good recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Very good recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Very good recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 1.7) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Good recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Good recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Good recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 1.4) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Fairly good recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Fairly good recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Fairly good recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 1.1) {\n    console.log(2);\n    switch (true) {\n      case five > ten:\n        text =\n          \"Average recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Average recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Average recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 0.8) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Poor recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Poor recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Poor recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal >= 0.5) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Very poor recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Very poor recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Very poor recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal < 0.5) {\n    switch (true) {\n      case five > ten:\n        text =\n          \"Terrible recent form with improvement over last 5 games.\";\n        break;\n      case five === ten:\n        text =\n          \"Terrible recent form which has remained steady over the past 10 games.\";\n        break;\n      case five < ten:\n        text = \"Terrible recent form which has worsened in the last 5.\";\n        break;\n      default:\n        break;\n    }\n  } else {\n    console.log(pointsAverageTotal);\n  }\n  return text + ` ${xgText} ${attackString} ${defenceString}`;\n}\n\nexport default GenerateFormSummary;\n","// import { light } from \"@material-ui/core/styles/createPalette\";\n// import { toBePartiallyChecked } from \"@testing-library/jest-dom/dist/matchers\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  ArcElement,\n  LineElement,\n  Filler,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Line, Radar, Bar } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  ArcElement,\n  Filler,\n  BarElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport function Chart(props) {\n  let length;\n  let depth;\n\n  if (props.type === \"Points over time\") {\n    length = props.data1.length * 3;\n    depth = 0;\n  } else if (props.type === \"Rolling average points over last 10\") {\n    length = Math.abs(props.height);\n    depth = 0;\n  } else if (Math.abs(props.height) > Math.abs(props.depth)) {\n    length = Math.abs(props.height);\n    depth = -Math.abs(props.height);\n  } else if (Math.abs(props.height) < Math.abs(props.depth)) {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  } else {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  }\n\n  const options = {\n    color: \"black\",\n    responsive: true,\n    aspectRatio: 1.2,\n    maintainAspectRatio: true,\n    layout: {\n      padding: 3,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    scales: {\n      y: {\n        suggestedMin: depth,\n        suggestedMax: length,\n        // suggestedMax: Math.max(...props.data1) > 3 ? Math.max(...props.data1) : 3,\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          font: {\n            size: 12,\n          },\n        },\n      },\n      x: {\n        title: {\n          display: false,\n          text: \"Last X Games\",\n          font: {\n            size: 10,\n          },\n        },\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          display: false,\n          font: {\n            size: 12,\n          },\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 5,\n        },\n      },\n      title: {\n        display: true,\n        text: props.type,\n        font: {\n          size: 14,\n          color: \"black\",\n        },\n      },\n    },\n  };\n\n  const labels = Array.from(props.data1.keys());\n\n  let data = {\n    labels,\n    datasets: [\n      {\n        label: props.team1,\n        font: {\n          color: \"black\",\n        },\n        data: props.data1,\n        borderColor: \"#030061\",\n        borderWidth: 2,\n        backgroundColor: \"#030061\",\n        tension: props.tension,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        borderColor: \"#970d00\",\n        borderWidth: 2,\n        backgroundColor: \"#970d00\",\n        tension: props.tension,\n      },\n    ],\n  };\n\n  return <Line options={options} data={data} />;\n}\n\nexport function RadarChart(props) {\n  const options = {\n    color: \"black\",\n    scales: {\n      r: {\n        angleLines: {\n          display: false,\n        },\n        suggestedMin: 0,\n        suggestedMax: 1,\n        ticks: {\n          precision: 0,\n          display: false,\n        },\n        // grid: {\n        //     circular: true,\n        //   }\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 10,\n        },\n      },\n      title: {\n        display: true,\n        text: \"XG Tipping Strength Ratings\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  let data = {\n    labels: [\"Attack rating\", \"Defence rating\", \"Ball retention\", \"XG For\", \"XG Against\", \"Directness\", \"Attacking precision\"],\n    datasets: [\n      {\n        label: props.team1,\n        data: props.data,\n        fill: true,\n        backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n        borderColor: \"#030061\",\n        pointBackgroundColor: \"#030061\",\n        pointBorderColor: \"#fff\",\n        pointHoverBackgroundColor: \"#fff\",\n        pointHoverBorderColor: \"rgb(255, 99, 132)\",\n        borderWidth: 2,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        fill: true,\n        backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n        borderColor: \"#970d00\",\n        pointBackgroundColor: \"#970d00\",\n        pointBorderColor: \"#fff\",\n        pointHoverBackgroundColor: \"#fff\",\n        pointHoverBorderColor: \"rgb(54, 162, 235)\",\n        borderWidth: 2,\n      },\n    ],\n  };\n\n  return <Radar options={options} data={data} />;\n}\n\nexport function BarChart(props) {\n  const datasetOne = props.data1;\n  const datasetTwo = props.data2;\n  const sum = datasetTwo.map(function (num, idx) {\n    return num - datasetOne[idx];\n  });\n\n  const max = Math.max(...sum);\n  const min = Math.min(...sum);\n\n  const largest = findLargestNum(max, min);\n\n  function findLargestNum(numOne, numTwo) {\n    const tempArr = [];\n    const firstNum = Math.abs(numOne);\n    const secondNum = Math.abs(numTwo);\n    tempArr.push(firstNum, secondNum);\n\n    return Math.max(...tempArr);\n  }\n\n  const options = {\n    indexAxis: \"y\",\n    // Elements options apply to all of the options unless overridden in a dataset\n    // In this case, we are setting the border of each horizontal bar to be 2px wide\n    aspectRatio: 1.3,\n    elements: {\n      bar: {\n        borderWidth: 2,\n      },\n    },\n    scales: {\n      x: {\n        min: -4,\n        max: 4,\n        ticks: {\n          display: false,\n        },\n      },\n      y: {\n        ticks: {\n          font: {\n            size: 10,\n          },\n        },\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: false,\n      },\n      title: {\n        display: true,\n        text: \"Comparison - Home Team | Away Team \",\n      },\n    },\n  };\n\n  const labels = [\n    \"Highest Goals\",\n    \"Fewest Conceeded\",\n    \"Last 5 PPG\",\n    \"Highest XG\",\n    \"Fewest XG Conceeded\",\n    \"Shots On Target\",\n    \"Dangerous Attacks\",\n    \"Av. Possession\",\n    \"Home/Away Goal Diff\",\n    \"Corners\",\n  ];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        // label: 'Dataset 1',\n        legend: {\n          display: false,\n        },\n        data: sum,\n        backgroundColor(context) {\n          const index = context.dataIndex;\n          const value = context.dataset.data[index];\n          return value < 0 ? \"#030061\" : \"#970d00\";\n        },\n      },\n    ],\n  };\n\n  return <Bar options={options} data={data} />;\n}\n","import ReactDOM from \"react-dom\";\nimport { Button } from \"../components/Button\";\nimport Stats from \"../components/createStatsDiv\";\nimport Div from \"../components/Div\";\nimport { allForm, allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport { getTeamStats } from \"../logic/getTeamStats\";\nimport { getPointsFromLastX } from \"../logic/getScorePredictions\";\nimport { CreateBadge } from \"../components/createBadge\";\nimport { Fragment } from \"react\";\nimport GenerateFormSummary from \"../logic/compareFormTrend\";\nimport { Chart, RadarChart, BarChart } from \"../components/Chart\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { clicked } from \"../logic/getScorePredictions\";\n\nexport async function calculateAttackingStrength(stats) {\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    // averagePossession: 0.15,\n    \"Average Dangerous Attacks\": 0.15,\n    \"Average Shots\": 0.1,\n    \"Average Shots On Target\": 0.15,\n    \"Average Expected Goals\": 0.15,\n    \"Recent XG\": 0.15,\n    \"Average Goals\": 0.3,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    // averagePossession: { min: 25, max: 75 },\n    \"Average Dangerous Attacks\": { min: 30, max: 75 }, // Adjust the max value as needed\n    \"Average Shots\": { min: 5, max: 17 }, // Adjust the max value as needed\n    \"Average Shots On Target\": { min: 2, max: 9 }, // Adjust the max value as needed\n    \"Average Expected Goals\": { min: 0, max: 3 }, // Adjust the max value as needed\n    \"Recent XG\": { min: 0, max: 3 }, // Adjust the max value as needed\n    \"Average Goals\": { min: 0, max: 3 }, // Adjust the max value as needed\n  };\n\n  // Normalize each metric value and calculate the weighted sum\n  let weightedSum = 0;\n  for (const metric in stats) {\n    if (\n      stats.hasOwnProperty(metric) &&\n      weights.hasOwnProperty(metric) &&\n      ranges.hasOwnProperty(metric)\n    ) {\n      const normalizedValue =\n        (stats[metric] - ranges[metric].min) /\n        (ranges[metric].max - ranges[metric].min);\n      weightedSum += normalizedValue * weights[metric];\n    } else {\n      console.log(metric);\n    }\n  }\n\n  return parseFloat(weightedSum.toFixed(2));\n}\n\nexport async function calculateDefensiveStrength(stats) {\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    \"Clean Sheet Percentage\": 0.3,\n    \"Average XG Against\": 0.2,\n    \"Recent XG Against\": 0.2,\n    \"Average Goals Against\": 0.3,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    \"Clean Sheet Percentage\": { min: 0, max: 100 },\n    \"Average XG Against\": { min: 0, max: 3 }, // Adjust the max value as needed\n    \"Recent XG Against\": { min: 0, max: 3 },\n    \"Average Goals Against\": { min: 0, max: 3 }, // Adjust the max value as needed\n  };\n\n  // Normalize each metric value and calculate the weighted sum\n  let weightedSum = 0;\n  for (const metric in stats) {\n    if (\n      stats.hasOwnProperty(metric) &&\n      weights.hasOwnProperty(metric) &&\n      ranges.hasOwnProperty(metric)\n    ) {\n      const normalizedValue =\n        1 -\n        (stats[metric] - ranges[metric].min) /\n          (ranges[metric].max - ranges[metric].min);\n      weightedSum += normalizedValue * weights[metric];\n    }\n  }\n\n  return parseFloat(weightedSum.toFixed(2));\n}\n\nexport async function calculateMetricStrength(metricName, metricValue) {\n  // Define weights for each metric (you can adjust these based on your preference)\n  const weights = {\n    averagePossession: 1,\n    xgFor: 1,\n    xgAgainst: 1,\n    directnessOverall: 1,\n    accuracyOverall: 1,\n  };\n\n  // Define the ranges for normalization\n  const ranges = {\n    averagePossession: { min: 20, max: 80 },\n    xgFor: { min: 0.1, max: 3 },\n    xgAgainst: { min: 0.1, max: 3 },\n    directnessOverall: { min: 0.5, max: 4 },\n    accuracyOverall: {min: 2, max: 10},\n  };\n\n\n  // Ensure the metric is valid and exists in the weights and ranges objects\n  if (\n    !weights.hasOwnProperty(metricName) ||\n    !ranges.hasOwnProperty(metricName)\n  ) {\n    throw new Error(\"Invalid metric name or missing normalization range.\");\n  }\n\n  // Normalize the metric value\n  const normalizedValue =\n    (metricValue - ranges[metricName].min) /\n    (ranges[metricName].max - ranges[metricName].min);\n\n  // Calculate the weighted score\n  const weightedScore = normalizedValue * weights[metricName];\n\n  return parseFloat(weightedScore.toFixed(2));\n}\n\n// export async function getDefenceStrength(goalsAgainst) {\n//   let strength;\n//   switch (true) {\n//     case goalsAgainst >= 2.8:\n//       strength = 1;\n//       break;\n//     case goalsAgainst >= 2.5 && goalsAgainst < 2.8:\n//       strength = 2;\n//       break;\n//     case goalsAgainst >= 2.2 && goalsAgainst < 2.5:\n//       strength = 3;\n//       break;\n//     case goalsAgainst >= 1.9 && goalsAgainst < 2.2:\n//       strength = 4;\n//       break;\n//     case goalsAgainst >= 1.6 && goalsAgainst < 1.9:\n//       strength = 5;\n//       break;\n//     case goalsAgainst >= 1.3 && goalsAgainst < 1.6:\n//       strength = 6;\n//       break;\n//     case goalsAgainst >= 1 && goalsAgainst < 1.3:\n//       strength = 7;\n//       break;\n//     case goalsAgainst >= 0.7 && goalsAgainst < 1:\n//       strength = 8;\n//       break;\n//     case goalsAgainst >= 0.4 && goalsAgainst < 0.7:\n//       strength = 9;\n//       break;\n//     case goalsAgainst < 0.4:\n//       strength = 10;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getPossessionStrength(possession) {\n//   let strength;\n//   switch (true) {\n//     case possession >= 68:\n//       strength = 10;\n//       break;\n//     case possession >= 64 && possession < 68:\n//       strength = 9;\n//       break;\n//     case possession >= 60 && possession < 64:\n//       strength = 8;\n//       break;\n//     case possession >= 56 && possession < 60:\n//       strength = 7;\n//       break;\n//     case possession >= 52 && possession < 56:\n//       strength = 6;\n//       break;\n//     case possession >= 48 && possession < 52:\n//       strength = 5;\n//       break;\n//     case possession >= 44 && possession < 48:\n//       strength = 4;\n//       break;\n//     case possession >= 40 && possession < 44:\n//       strength = 3;\n//       break;\n//     case possession >= 35 && possession < 40:\n//       strength = 2;\n//       break;\n//     case possession < 35:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getShotsStrength(Shots) {\n//   let strength;\n//   switch (true) {\n//     case Shots >= 15:\n//       strength = 10;\n//       break;\n//     case Shots >= 14.25 && Shots < 15:\n//       strength = 9;\n//       break;\n//     case Shots >= 13.5 && Shots < 14.25:\n//       strength = 8;\n//       break;\n//     case Shots >= 12.75 && Shots < 13.5:\n//       strength = 7;\n//       break;\n//     case Shots >= 12 && Shots < 12.75:\n//       strength = 6;\n//       break;\n//     case Shots >= 11.25 && Shots < 12:\n//       strength = 5;\n//       break;\n//     case Shots >= 10.5 && Shots < 11.25:\n//       strength = 4;\n//       break;\n//     case Shots >= 9.75 && Shots < 10.5:\n//       strength = 3;\n//       break;\n//     case Shots >= 9 && Shots < 9.75:\n//       strength = 2;\n//       break;\n//     case Shots < 9:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getShotsStrengthHorA(Shots) {\n//   let strength;\n//   switch (true) {\n//     case Shots >= 19.5:\n//       strength = 10;\n//       break;\n//     case Shots >= 18 && Shots < 19.5:\n//       strength = 9;\n//       break;\n//     case Shots >= 17 && Shots < 18:\n//       strength = 8;\n//       break;\n//     case Shots >= 15.5 && Shots < 17:\n//       strength = 7;\n//       break;\n//     case Shots >= 14 && Shots < 15.5:\n//       strength = 6;\n//       break;\n//     case Shots >= 12.5 && Shots < 14:\n//       strength = 5;\n//       break;\n//     case Shots >= 11 && Shots < 12.5:\n//       strength = 4;\n//       break;\n//     case Shots >= 9.5 && Shots < 11:\n//       strength = 3;\n//       break;\n//     case Shots >= 8 && Shots < 9.5:\n//       strength = 2;\n//       break;\n//     case Shots < 8:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGForStrength(XG) {\n//   let strength;\n//   switch (true) {\n//     case XG >= 2.9:\n//       strength = 10;\n//       break;\n//     case XG >= 2.6 && XG < 2.9:\n//       strength = 9;\n//       break;\n//     case XG >= 2.3 && XG < 2.6:\n//       strength = 8;\n//       break;\n//     case XG >= 2 && XG < 2.3:\n//       strength = 7;\n//       break;\n//     case XG >= 1.7 && XG < 2:\n//       strength = 6;\n//       break;\n//     case XG >= 1.4 && XG < 1.7:\n//       strength = 5;\n//       break;\n//     case XG >= 1.1 && XG < 1.4:\n//       strength = 4;\n//       break;\n//     case XG >= 0.8 && XG < 1.1:\n//       strength = 3;\n//       break;\n//     case XG >= 0.5 && XG < 0.8:\n//       strength = 2;\n//       break;\n//     case XG < 0.5:\n//       strength = 1;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGAgainstStrength(XGAgainst) {\n//   let strength;\n//   switch (true) {\n//     case XGAgainst >= 2.9:\n//       strength = 1;\n//       break;\n//     case XGAgainst >= 2.6 && XGAgainst < 2.9:\n//       strength = 2;\n//       break;\n//     case XGAgainst >= 2.3 && XGAgainst < 2.6:\n//       strength = 3;\n//       break;\n//     case XGAgainst >= 2 && XGAgainst < 2.3:\n//       strength = 4;\n//       break;\n//     case XGAgainst >= 1.7 && XGAgainst < 2:\n//       strength = 5;\n//       break;\n//     case XGAgainst >= 1.4 && XGAgainst < 1.7:\n//       strength = 6;\n//       break;\n//     case XGAgainst >= 1.1 && XGAgainst < 1.4:\n//       strength = 7;\n//       break;\n//     case XGAgainst >= 0.8 && XGAgainst < 1.1:\n//       strength = 8;\n//       break;\n//     case XGAgainst >= 0.5 && XGAgainst < 0.8:\n//       strength = 9;\n//       break;\n//     case XGAgainst < 0.5:\n//       strength = 10;\n//       break;\n//     default:\n//       break;\n//   }\n//   return strength;\n// }\n\n// export async function getXGDifferentialStrength(XGDiff) {\n//   let strength;\n//   switch (true) {\n//     case XGDiff >= 1.5:\n//       strength = 10;\n//       break;\n//     case XGDiff >= 1 && XGDiff < 1.5:\n//       strength = 9;\n//       break;\n//     case XGDiff >= 0.5 && XGDiff < 1:\n//       strength = 8;\n//       break;\n//     case XGDiff >= 0.25 && XGDiff < 0.5:\n//       strength = 7;\n//       break;\n//     case XGDiff > 0 && XGDiff < 0.25:\n//       strength = 6;\n//       break;\n//     case XGDiff <= 0 && XGDiff > -0.25:\n//       strength = 5;\n//       break;\n//     case XGDiff <= -0.25 && XGDiff > -0.5:\n//       strength = 4;\n//       break;\n//     case XGDiff <= -0.5 && XGDiff > -1:\n//       strength = 3;\n//       break;\n//     case XGDiff <= -1 && XGDiff > -1.5:\n//       strength = 2;\n//       break;\n//     case XGDiff <= -1.5:\n//       strength = 1;\n//       break;\n//     default:\n//       console.log(\"default clause triggered\");\n//       break;\n//   }\n//   return strength;\n// }\n\nexport async function getXGtoActualDifferentialStrength(XGDiff) {\n  let strength;\n  switch (true) {\n    case XGDiff >= 1.5:\n      strength = 10;\n      break;\n    case XGDiff >= 1 && XGDiff < 1.5:\n      strength = 9;\n      break;\n    case XGDiff >= 0.5 && XGDiff < 1:\n      strength = 8;\n      break;\n    case XGDiff >= 0.25 && XGDiff < 0.5:\n      strength = 7;\n      break;\n    case XGDiff > 0 && XGDiff < 0.25:\n      strength = 6;\n      break;\n    case XGDiff <= 0 && XGDiff > -0.25:\n      strength = 5;\n      break;\n    case XGDiff <= -0.25 && XGDiff > -0.5:\n      strength = 4;\n      break;\n    case XGDiff <= -0.5 && XGDiff > -1:\n      strength = 3;\n      break;\n    case XGDiff <= -1 && XGDiff > -1.5:\n      strength = 2;\n      break;\n    case XGDiff <= -1.5:\n      strength = 1;\n      break;\n    default:\n      console.log(\"default clause triggered\");\n      break;\n  }\n  return strength;\n}\n\nasync function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nlet rollingGoalDiffTotalHome = [];\nlet rollingGoalDiffTotalAway = [];\n\nexport async function createStatsDiv(game, displayBool) {\n  console.log(displayBool);\n  if (game.status !== \"void\") {\n    // takes the displayBool boolean from the fixture onClick and sets the styling of the stats div from there\n    function styling(testBool) {\n      let bool = testBool;\n      if (bool === true && clicked === true) {\n        // set stats element to display flex\n        return { display: \"block\" };\n      } else {\n        // set stats element to display none\n        return { display: \"none\" };\n      }\n    }\n    let style = styling(displayBool);\n\n    if (clicked === false) {\n      alert(\"Tap Get Predictions to fetch all game stats first\");\n    } else {\n      let index = 2;\n      let divider = 10;\n\n      let gameStats = allForm.find((match) => match.id === game.id);\n      const gameArrayHome = [];\n      const gameArrayAway = [];\n      const gameArrayHomeTeamHomeGames = [];\n      const gameArrayAwayTeamAwayGames = [];\n      let goalDiffArrayHome;\n      let goalDiffArrayAway;\n      let goalDiffHomeMovingAv = [];\n      let goalDiffAwayMovingAv = [];\n      let latestHomeGoalDiff;\n      let latestAwayGoalDiff;\n\n      var getEMA = (a, r) =>\n        a.reduce(\n          (p, n, i) =>\n            i\n              ? p.concat(\n                  (2 * n) / (r + 1) + (p[p.length - 1] * (r - 1)) / (r + 1)\n                )\n              : p,\n          [a[0]]\n        );\n\n      if (displayBool === true) {\n        let fixtures = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}leagueFixtures/${gameStats.leagueId}`\n        );\n\n        await fixtures.json().then((matches) => {\n          const resultHome = matches.data.filter(\n            (game) =>\n              (game.homeID === gameStats.teamIDHome ||\n                game.awayID === gameStats.teamIDHome) &&\n              game.status === \"complete\"\n          );\n\n          const resultHomeOnly = matches.data.filter(\n            (game) =>\n              game.homeID === gameStats.teamIDHome && game.status === \"complete\"\n          );\n\n          resultHomeOnly.sort((a, b) => b.date_unix - a.date_unix);\n\n          for (let i = 0; i < resultHome.length; i++) {\n            let unixTimestamp = resultHome[i].date_unix;\n            let milliseconds = unixTimestamp * 1000;\n            let dateObject = new Date(milliseconds).toLocaleString(\"en-GB\", {\n              timeZone: \"UTC\",\n            });\n\n            let won;\n            let goalsScored;\n            let goalsConceeded;\n\n            if (resultHome[i].winningTeam === gameStats.teamIDHome) {\n              won = \"W\";\n              if (resultHome[i].homeGoalCount > resultHome[i].awayGoalCount) {\n                goalsScored = resultHome[i].homeGoalCount;\n                goalsConceeded = resultHome[i].awayGoalCount;\n              } else {\n                goalsScored = resultHome[i].awayGoalCount;\n                goalsConceeded = resultHome[i].homeGoalCount;\n              }\n            } else if (resultHome[i].winningTeam === -1) {\n              won = \"D\";\n              goalsScored = resultHome[i].awayGoalCount;\n              goalsConceeded = resultHome[i].awayGoalCount;\n            } else {\n              won = \"L\";\n              if (resultHome[i].homeGoalCount > resultHome[i].awayGoalCount) {\n                goalsScored = resultHome[i].awayGoalCount;\n                goalsConceeded = resultHome[i].homeGoalCount;\n              } else {\n                goalsScored = resultHome[i].homeGoalCount;\n                goalsConceeded = resultHome[i].awayGoalCount;\n              }\n            }\n\n            gameArrayHome.push({\n              id: resultHome[i].id,\n              date: dateObject,\n              homeTeam: resultHome[i].home_name,\n              homeGoals: resultHome[i].homeGoalCount,\n              homeXG: resultHome[i].team_a_xg,\n              homeOdds: resultHome[i].odds_ft_1,\n              awayTeam: resultHome[i].away_name,\n              awayGoals: resultHome[i].awayGoalCount,\n              awayXG: resultHome[i].team_b_xg,\n              awayOdds: resultHome[i].odds_ft_2,\n              won: won,\n              homeShots: resultHome[i].team_a_shots,\n              awayShots: resultHome[i].team_b_shots,\n              homeSot: resultHome[i].team_a_shotsOnTarget,\n              awaySot: resultHome[i].team_b_shotsOnTarget,\n              homeRed: resultHome[i].team_a_red_cards,\n              awayRed: resultHome[i].team_b_red_cards,\n              homePossession: resultHome[i].team_a_possession,\n              awayPossession: resultHome[i].team_b_possession,\n              homeDangerousAttacks: resultHome[i].team_a_dangerous_attacks,\n              awayDangerousAttacks: resultHome[i].team_b_dangerous_attacks,\n              homePPG: resultHome[i].pre_match_teamA_overall_ppg,\n              awayPPG: resultHome[i].pre_match_teamB_overall_ppg,\n              unixTimestamp: resultHome[i].date_unix,\n              goalsFor: goalsScored,\n              goalsAgainst: goalsConceeded,\n              btts: resultHome[i].btts === true ? \"\\u2714\" : \"\\u2718\",\n            });\n          }\n\n          for (let i = 0; i < resultHomeOnly.length; i++) {\n            let wonHomeOrAwayOnly;\n\n            if (resultHomeOnly[i].winningTeam === gameStats.teamIDHome) {\n              wonHomeOrAwayOnly = \"W\";\n              gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n            } else if (resultHomeOnly[i].winningTeam === -1) {\n              wonHomeOrAwayOnly = \"D\";\n              gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n            } else {\n              wonHomeOrAwayOnly = \"L\";\n              gameArrayHomeTeamHomeGames.push(wonHomeOrAwayOnly);\n            }\n          }\n\n          goalDiffArrayHome = gameArrayHome.map(\n            (a) => a.goalsFor - a.goalsAgainst\n          );\n\n          let r = 5;\n\n          goalDiffHomeMovingAv = getEMA(\n            goalDiffArrayHome,\n            goalDiffArrayHome.length < 5 ? goalDiffArrayHome.length : r\n          );\n\n          const cumulativeSumHome = (\n            (sum) => (value) =>\n              (sum += value)\n          )(0);\n\n          gameArrayHome.sort((a, b) => b.unixTimestamp - a.unixTimestamp);\n\n          rollingGoalDiffTotalHome = goalDiffArrayHome.map(cumulativeSumHome);\n\n          const resultAway = matches.data.filter(\n            (game) =>\n              (game.homeID === gameStats.teamIDAway ||\n                game.awayID === gameStats.teamIDAway) &&\n              game.status === \"complete\"\n          );\n\n          const resultAwayOnly = matches.data.filter(\n            (game) =>\n              game.awayID === gameStats.teamIDAway && game.status === \"complete\"\n          );\n\n          resultAwayOnly.sort((a, b) => b.date_unix - a.date_unix);\n\n          for (let i = 0; i < resultAway.length; i++) {\n            let unixTimestamp = resultAway[i].date_unix;\n            let milliseconds = unixTimestamp * 1000;\n            let dateObject = new Date(milliseconds).toLocaleString(\"en-GB\", {\n              timeZone: \"UTC\",\n            });\n\n            let won;\n            let goalsScored;\n            let goalsConceeded;\n            let wonHomeOrAwayOnly;\n            let goalsScoredHomeOrAwayOnly;\n            let goalsConceededHomeOrAwayOnly;\n\n            if (resultAway[i].winningTeam === gameStats.teamIDAway) {\n              won = \"W\";\n              if (resultAway[i].homeGoalCount > resultAway[i].awayGoalCount) {\n                goalsScored = resultAway[i].homeGoalCount;\n                goalsConceeded = resultAway[i].awayGoalCount;\n              } else {\n                goalsScored = resultAway[i].awayGoalCount;\n                goalsConceeded = resultAway[i].homeGoalCount;\n              }\n            } else if (resultAway[i].winningTeam === -1) {\n              won = \"D\";\n              goalsScored = resultAway[i].awayGoalCount;\n              goalsConceeded = resultAway[i].awayGoalCount;\n            } else {\n              won = \"L\";\n              if (resultAway[i].homeGoalCount > resultAway[i].awayGoalCount) {\n                goalsScored = resultAway[i].awayGoalCount;\n                goalsConceeded = resultAway[i].homeGoalCount;\n              } else {\n                goalsScored = resultAway[i].homeGoalCount;\n                goalsConceeded = resultAway[i].awayGoalCount;\n              }\n            }\n\n            gameArrayAway.push({\n              id: resultAway[i].id,\n              date: dateObject,\n              homeTeam: resultAway[i].home_name,\n              homeGoals: resultAway[i].homeGoalCount,\n              homeXG: resultAway[i].team_a_xg,\n              homeOdds: resultAway[i].odds_ft_1,\n              awayTeam: resultAway[i].away_name,\n              awayGoals: resultAway[i].awayGoalCount,\n              awayXG: resultAway[i].team_b_xg,\n              awayOdds: resultAway[i].odds_ft_2,\n              won: won,\n              homeShots: resultAway[i].team_a_shots,\n              awayShots: resultAway[i].team_b_shots,\n              homeSot: resultAway[i].team_a_shotsOnTarget,\n              awaySot: resultAway[i].team_b_shotsOnTarget,\n              homeRed: resultAway[i].team_a_red_cards,\n              awayRed: resultAway[i].team_b_red_cards,\n              homePossession: resultAway[i].team_a_possession,\n              awayPossession: resultAway[i].team_b_possession,\n              homeDangerousAttacks: resultAway[i].team_a_dangerous_attacks,\n              awayDangerousAttacks: resultAway[i].team_b_dangerous_attacks,\n              homePPG: resultAway[i].pre_match_teamA_overall_ppg,\n              awayPPG: resultAway[i].pre_match_teamB_overall_ppg,\n              unixTimestamp: resultAway[i].date_unix,\n              goalsFor: goalsScored,\n              goalsAgainst: goalsConceeded,\n              btts: resultAway[i].btts === true ? \"\\u2714\" : \"\\u2718\",\n            });\n          }\n\n          for (let i = 0; i < resultAwayOnly.length; i++) {\n            let wonHomeOrAwayOnly;\n\n            if (resultAwayOnly[i].winningTeam === gameStats.teamIDAway) {\n              wonHomeOrAwayOnly = \"W\";\n              gameArrayAwayTeamAwayGames.push(wonHomeOrAwayOnly);\n            } else if (resultAwayOnly[i].winningTeam === -1) {\n              wonHomeOrAwayOnly = \"D\";\n              gameArrayAwayTeamAwayGames.push(wonHomeOrAwayOnly);\n            } else {\n              wonHomeOrAwayOnly = \"L\";\n              gameArrayAwayTeamAwayGames.push(wonHomeOrAwayOnly);\n            }\n          }\n\n          goalDiffArrayAway = gameArrayAway.map(\n            (a) => a.goalsFor - a.goalsAgainst\n          );\n\n          goalDiffAwayMovingAv = getEMA(\n            goalDiffArrayAway,\n            goalDiffArrayAway.length < 5 ? goalDiffArrayAway.length : r\n          );\n\n          const cumulativeSumAway = (\n            (sum) => (value) =>\n              (sum += value)\n          )(0);\n\n          gameArrayAway.sort((a, b) => b.unixTimestamp - a.unixTimestamp);\n\n          rollingGoalDiffTotalAway = goalDiffArrayAway.map(cumulativeSumAway);\n\n          latestHomeGoalDiff =\n            goalDiffHomeMovingAv[goalDiffHomeMovingAv.length - 1];\n          latestAwayGoalDiff =\n            goalDiffAwayMovingAv[goalDiffAwayMovingAv.length - 1];\n        });\n      }\n\n      const bttsArrayHome = Array.from(gameArrayHome, (x) => x.btts);\n      const bttsArrayAway = Array.from(gameArrayAway, (x) => x.btts);\n      const resultsArrayHome = Array.from(gameArrayHome, (x) => x.won);\n      const resultsArrayAway = Array.from(gameArrayAway, (x) => x.won);\n\n      let homeTeam = gameStats.home.teamName;\n      let awayTeam = gameStats.away.teamName;\n\n      let time = game.time;\n\n      const homeForm = gameStats.home[index];\n      const awayForm = gameStats.away[index];\n\n      if (homeForm.last3Points === undefined) {\n        homeForm.last3Points = getPointsFromLastX(homeForm.lastThreeForm);\n\n        homeForm.last5Points = getPointsFromLastX(homeForm.LastFiveForm);\n\n        homeForm.last6Points = getPointsFromLastX(homeForm.LastSixForm);\n\n        homeForm.last10Points = getPointsFromLastX(homeForm.LastTenForm);\n\n        awayForm.last3Points = getPointsFromLastX(awayForm.lastThreeForm);\n\n        awayForm.last5Points = getPointsFromLastX(awayForm.LastFiveForm);\n\n        awayForm.last6Points = getPointsFromLastX(awayForm.LastSixForm);\n\n        awayForm.last10Points = getPointsFromLastX(awayForm.LastTenForm);\n      }\n\n      async function getPointAverage(pointTotal, games) {\n        return pointTotal / games;\n      }\n\n      // let homeThreeGameAverage = await getPointAverage(\n      //   homeForm.last3Points,\n      //   3\n      // );\n\n      let homeFiveGameAverage = await getPointAverage(homeForm.last5Points, 5);\n\n      let homeSixGameAverage = await getPointAverage(homeForm.last6Points, 6);\n\n      let homeTenGameAverage = await getPointAverage(homeForm.last10Points, 10);\n\n      // let awayThreeGameAverage = await getPointAverage(\n      //   awayForm.last3Points,\n      //   3\n      // );\n\n      let awayFiveGameAverage = await getPointAverage(awayForm.last5Points, 5);\n\n      let awaySixGameAverage = await getPointAverage(awayForm.last6Points, 6);\n\n      let awayTenGameAverage = await getPointAverage(awayForm.last10Points, 10);\n\n      async function getPointsFromGames(formArr) {\n        const pairings = {\n          W: 3,\n          D: 1,\n          L: 0,\n        };\n        let newArr = [];\n        let arrayOfIndividualPoints = [];\n        let sum = 0;\n\n        for (let i = 0; i < formArr.length; i++) {\n          sum = sum + pairings[formArr[i]];\n          newArr.push(sum);\n          arrayOfIndividualPoints.push(pairings[formArr[i]]);\n        }\n        return [newArr, arrayOfIndividualPoints];\n      }\n\n      async function getLastGameResult(lastGame) {\n        let text;\n        switch (true) {\n          case lastGame === \"L\":\n            text = \"Lost\";\n            break;\n          case lastGame === \"D\":\n            text = \"Drew\";\n            break;\n          case lastGame === \"W\":\n            text = \"Won\";\n            break;\n          default:\n            break;\n        }\n        return text;\n      }\n\n      let homeFormTrend = [\n        homeFiveGameAverage.toFixed(2),\n        homeTenGameAverage.toFixed(2),\n      ];\n\n      let awayFormTrend = [\n        awayFiveGameAverage.toFixed(2),\n        awayTenGameAverage.toFixed(2),\n      ];\n\n      let formTextStringHome;\n      let formTextStringAway;\n\n      if (displayBool === true && gameStats.home[2].LeagueOrAll === \"League\") {\n        formTextStringHome = await GenerateFormSummary(\n          gameStats.home[2],\n          homeFormTrend,\n          gameStats.home[0]\n        );\n        formTextStringAway = await GenerateFormSummary(\n          gameStats.away[2],\n          awayFormTrend,\n          gameStats.away[0]\n        );\n      } else {\n        formTextStringHome = \"\";\n        formTextStringAway = \"\";\n      }\n\n      let homeLastGame = await getLastGameResult(homeForm.LastFiveForm[4]);\n      let awayLastGame = await getLastGameResult(awayForm.LastFiveForm[4]);\n\n      // let homeAttackStrength = await getAttackStrength(\n      //   homeForm.ScoredOverall / 10\n      // );\n\n      const attackingMetricsHome = {\n        // averagePossession: homeForm.AveragePossessionOverall,\n        \"Average Dangerous Attacks\": homeForm.AverageDangerousAttacksOverall,\n        \"Average Shots\": homeForm.AverageShots,\n        \"Average Shots On Target\": homeForm.AverageShotsOnTargetOverall,\n        \"Average Expected Goals\": homeForm.XGOverall,\n        \"Recent XG\": homeForm.XGlast5 ? homeForm.XGlast5 : homeForm.XGOverall,\n        \"Average Goals\":\n          homeForm.averageScoredLeague !== undefined &&\n          homeForm.averageScoredLeague !== null\n            ? homeForm.averageScoredLeague\n            : homeForm.ScoredOverall / 10,\n      };\n      const attackingMetricsAway = {\n        // averagePossession: awayForm.AveragePossessionOverall,\n        \"Average Dangerous Attacks\": awayForm.AverageDangerousAttacksOverall,\n        \"Average Shots\": awayForm.AverageShots,\n        \"Average Shots On Target\": awayForm.AverageShotsOnTargetOverall,\n        \"Average Expected Goals\": awayForm.XGOverall,\n        \"Recent XG\": awayForm.XGlast5 ? awayForm.XGlast5 : awayForm.XGOverall,\n        \"Average Goals\":\n          awayForm.averageScoredLeague !== undefined &&\n          awayForm.averageScoredLeague !== null\n            ? awayForm.averageScoredLeague\n            : awayForm.ScoredOverall / 10,\n      };\n\n      const defensiveMetricsHome = {\n        \"Clean Sheet Percentage\": 100 - homeForm.CleanSheetPercentage,\n        \"Average XG Against\": homeForm.XGAgainstAvgOverall,\n        \"Recent XG Against\": homeForm.XGAgainstlast5\n          ? homeForm.XGAgainstlast5\n          : homeForm.XGAgainstAvgOverall,\n        \"Average Goals Against\":\n          homeForm.averageConceededLeague !== undefined &&\n          homeForm.averageConceededLeague !== null\n            ? homeForm.averageConceededLeague\n            : homeForm.ConcededOverall / 10,\n      };\n\n      const defensiveMetricsAway = {\n        \"Clean Sheet Percentage\": 100 - awayForm.CleanSheetPercentage,\n        \"Average XG Against\": awayForm.XGAgainstAvgOverall,\n        \"Recent XG Against\": awayForm.XGAgainstlast5\n          ? awayForm.XGAgainstlast5\n          : awayForm.XGAgainstAvgOverall,\n        \"Average Goals Against\":\n          awayForm.averageConceededLeague !== undefined &&\n          awayForm.averageConceededLeague !== null\n            ? awayForm.averageConceededLeague\n            : awayForm.ConcededOverall / 10,\n      };\n\n      let homeAttackStrength;\n      let homeDefenceStrength;\n      let homePossessionStrength;\n      let homeXGForStrength;\n      let homeXGAgainstStrength;\n      let awayAttackStrength;\n      let awayDefenceStrength;\n      let awayPossessionStrength;\n      let awayXGForStrength;\n      let awayXGAgainstStrength;\n      let homeDirectnessStrength;\n      let awayDirectnessStrength;\n      let homeAccuracyOverallStrength;\n      let awayAccuracyOverallStrength;\n\n      if (homeForm.xgForStrength) {\n        console.log(\"not calculating\");\n        homeAttackStrength = homeForm.attackingStrength;\n        homeDefenceStrength = homeForm.defensiveStrength;\n        homePossessionStrength = homeForm.possessionStrength;\n        homeXGForStrength = homeForm.xgForStrength;\n        homeXGAgainstStrength = homeForm.xgAgainstStrength;\n        homeDirectnessStrength = homeForm.directnessOverallStrength;\n        homeAccuracyOverallStrength = homeForm.accuracyOverallStrength;\n\n        awayAttackStrength = awayForm.attackingStrength;\n        awayDefenceStrength = awayForm.defensiveStrength;\n        awayPossessionStrength = awayForm.possessionStrength;\n        awayXGForStrength = awayForm.xgForStrength;\n        awayXGAgainstStrength = awayForm.xgAgainstStrength;\n        awayDirectnessStrength = awayForm.directnessOverallStrength;\n        awayAccuracyOverallStrength = awayForm.accuracyOverallStrength;\n      } else {\n        homeAttackStrength = await calculateAttackingStrength(\n          attackingMetricsHome\n        );\n\n        homeDefenceStrength = await calculateDefensiveStrength(\n          defensiveMetricsHome\n        );\n\n        homePossessionStrength = await calculateMetricStrength(\n          \"averagePossession\",\n          homeForm.AveragePossessionOverall\n        );\n\n        homeXGForStrength = await calculateMetricStrength(\n          \"xgFor\",\n          gameStats.home[2].XGOverall\n        );\n\n        homeXGAgainstStrength = await calculateMetricStrength(\n          \"xgAgainst\",\n          3 - gameStats.home[2].XGAgainstAvgOverall\n        );\n        homeDirectnessStrength = await calculateMetricStrength(\n          \"directnessOverall\",\n          homeForm.directnessOverall\n        );\n        homeAccuracyOverallStrength = await calculateMetricStrength(\n          \"accuracyOverall\",\n          homeForm.shootingAccuracy\n        );\n\n        awayAttackStrength = await calculateAttackingStrength(\n          attackingMetricsAway\n        );\n        awayDefenceStrength = await calculateDefensiveStrength(\n          defensiveMetricsAway\n        );\n        awayPossessionStrength = await calculateMetricStrength(\n          \"averagePossession\",\n          awayForm.AveragePossessionOverall\n        );\n        awayXGForStrength = await calculateMetricStrength(\n          \"xgFor\",\n          gameStats.away[2].XGOverall\n        );\n\n        awayXGAgainstStrength = await calculateMetricStrength(\n          \"xgAgainst\",\n          3 - gameStats.away[2].XGAgainstAvgOverall\n        );\n        awayDirectnessStrength = await calculateMetricStrength(\n          \"directnessOverall\",\n          awayForm.directnessOverall\n        );\n        awayAccuracyOverallStrength = await calculateMetricStrength(\n          \"accuracyOverall\",\n          awayForm.shootingAccuracy\n        );\n      }\n\n      let [formPointsHome, testArrayHome] = await getPointsFromGames(\n        gameStats.home[2].WDLRecord\n      );\n      let [formPointsAway, testArrayAway] = await getPointsFromGames(\n        gameStats.away[2].WDLRecord\n      );\n\n      let rollingGoalDiffHome = [\n        (gameStats.home[0].ScoredOverall - gameStats.home[0].ConcededOverall) /\n          10,\n        (gameStats.home[1].ScoredOverall - gameStats.home[1].ConcededOverall) /\n          6,\n        (gameStats.home[2].ScoredOverall - gameStats.home[2].ConcededOverall) /\n          5,\n      ];\n\n      let rollingGoalDiffAway = [\n        (gameStats.away[0].ScoredOverall - gameStats.away[0].ConcededOverall) /\n          10,\n        (gameStats.away[1].ScoredOverall - gameStats.away[1].ConcededOverall) /\n          6,\n        (gameStats.away[2].ScoredOverall - gameStats.away[2].ConcededOverall) /\n          5,\n      ];\n\n      const formDataMatch = [];\n\n      formDataMatch.push({\n        btts: game.btts_potential,\n      });\n\n      const formDataHome = [];\n\n      formDataHome.push({\n        name: game.homeTeam,\n        Last5: gameStats.home[2].LastFiveForm,\n        LeagueOrAll: gameStats.home[2].LeagueOrAll,\n        AverageGoals: homeForm.ScoredOverall / 10,\n        AverageConceeded: homeForm.ConcededOverall / 10,\n        AverageXG: homeForm.XGOverall,\n        AverageXGConceded: homeForm.XGAgainstAvgOverall,\n        AveragePossession: homeForm.AveragePossessionOverall,\n        AverageShotsOnTarget: homeForm.AverageShotsOnTargetOverall,\n        AverageDangerousAttacks: homeForm.AverageDangerousAttacksOverall,\n        homeOrAway: \"Home\",\n        leaguePosition: homeForm.LeaguePosition,\n        Last5PPG: homeForm.PPG,\n        SeasonPPG: homeForm.SeasonPPG,\n        lastGame: homeLastGame,\n        formRun: homeForm.formRun,\n        goalDifference: homeForm.goalDifference,\n        goalDifferenceHomeOrAway: homeForm.goalDifferenceHomeOrAway,\n        // BttsPercentage: homeForm.BttsPercentage || \"-\",\n        // BttsPercentageHomeOrAway: homeForm.BttsPercentageHomeOrAway || \"-\",\n        CardsTotal: homeForm.CardsTotal || \"-\",\n        CornersAverage: homeForm.AverageCorners || \"-\",\n        FormTextStringHome: formTextStringHome,\n        BTTSArray: bttsArrayHome,\n        Results: resultsArrayHome,\n        // BTTSAll: homeForm.last10btts,\n        // BTTSHorA: homeForm.last10bttsHome,\n      });\n\n      const formDataAway = [];\n\n      formDataAway.push({\n        name: game.awayTeam,\n        Last5: gameStats.away[2].LastFiveForm,\n        LeagueOrAll: gameStats.away[2].LeagueOrAll,\n        AverageGoals: awayForm.ScoredOverall / 10,\n        AverageConceeded: awayForm.ConcededOverall / 10,\n        AverageXG: awayForm.XGOverall,\n        AverageXGConceded: awayForm.XGAgainstAvgOverall,\n        AveragePossession: awayForm.AveragePossessionOverall,\n        AverageShotsOnTarget: awayForm.AverageShotsOnTargetOverall,\n        AverageDangerousAttacks: awayForm.AverageDangerousAttacksOverall,\n        homeOrAway: \"Away\",\n        leaguePosition: awayForm.LeaguePosition,\n        Last5PPG: awayForm.PPG,\n        SeasonPPG: awayForm.SeasonPPG,\n        lastGame: awayLastGame,\n        formRun: awayForm.formRun,\n        goalDifference: awayForm.goalDifference,\n        goalDifferenceHomeOrAway: awayForm.goalDifferenceHomeOrAway,\n        // BttsPercentage: awayForm.BttsPercentage || \"-\",\n        // BttsPercentageHomeOrAway: awayForm.BttsPercentageHomeOrAway || \"-\",\n        CardsTotal: awayForm.CardsTotal || \"-\",\n        CornersAverage: awayForm.AverageCorners || \"-\",\n        FormTextStringAway: formTextStringAway,\n        BTTSArray: bttsArrayAway,\n        Results: resultsArrayAway,\n        ResultsHomeOrAway: resultsArrayAway,\n        // BTTSAll: awayForm.last10btts,\n        // BTTSHorA: awayForm.last10bttsAway,\n      });\n\n      let formArrayHome;\n      let formArrayAway;\n      let chartType;\n\n      if (formPointsHome.length > 1) {\n        formArrayHome = formPointsHome;\n        formArrayAway = formPointsAway;\n        chartType = \"Points over time\";\n      } else {\n        formArrayHome = [\n          homeTenGameAverage,\n          homeSixGameAverage,\n          homeFiveGameAverage,\n        ];\n        formArrayAway = [\n          awayTenGameAverage,\n          awaySixGameAverage,\n          awayFiveGameAverage,\n        ];\n        chartType = \"Rolling average points over last 10\";\n      }\n\n      ReactDOM.render(\n        <div style={style}>\n          <div className=\"H2HStats\" id={`H2HStats${game.id}`}></div>\n          <div className=\"TrendsHome\" id={`TrendsHome${game.id}`}></div>\n          <div className=\"TrendsAway\" id={`TrendsAway${game.id}`}></div>\n        </div>,\n        document.getElementById(\"history\" + homeTeam)\n      );\n\n      //This tournament does not have league positions\n      if (game.leagueName === \"Europe UEFA Women's Euro\") {\n        game.homeTeamHomePosition = \"N/A\";\n        game.awayTeamAwayPosition = \"N/A\";\n      }\n\n      function singleResult(game) {\n        return (\n          <div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeXG}</span>\n              <span className=\"column\">XG</span>\n              <span className=\"column\">{game.awayXG}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeShots}</span>\n              <span className=\"column\">Shots</span>\n              <span className=\"column\">{game.awayShots}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeSot}</span>\n              <span className=\"column\">SOT</span>\n              <span className=\"column\">{game.awaySot}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeDangerousAttacks}</span>\n              <span className=\"column\">Dangerous Attacks</span>\n              <span className=\"column\">{game.awayDangerousAttacks}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homePossession}%</span>\n              <span className=\"column\">Possession</span>\n              <span className=\"column\">{game.awayPossession}%</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homeRed}</span>\n              <span className=\"column\">Red cards</span>\n              <span className=\"column\">{game.awayRed}</span>\n            </div>\n            <div className=\"ResultRowSmall\">\n              <span className=\"column\">{game.homePPG}</span>\n              <span className=\"column\">PPG (pre-match)</span>\n              <span className=\"column\">{game.awayPPG}</span>\n            </div>\n          </div>\n        );\n      }\n\n      const overviewHome = gameArrayHome.slice(0, 10).map((game) => (\n        <div>\n          <Collapsable\n            classNameButton=\"ResultButton\"\n            buttonText={\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {game.homeGoals} : {game.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n              </div>\n            }\n            element={singleResult(game)}\n          />\n        </div>\n      ));\n\n      const overviewAway = gameArrayAway.slice(0, 10).map((game) => (\n        <div>\n          <Collapsable\n            classNameButton=\"ResultButton\"\n            buttonText={\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{game.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {game.homeGoals} : {game.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{game.awayTeam}</div>\n              </div>\n            }\n            element={singleResult(game)}\n          />\n        </div>\n      ));\n\n      function StatsHome() {\n        return (\n          <div className=\"flex-childOne\">\n            <ul style={style}>\n              <Stats\n                style={style}\n                homeOrAway=\"Home\"\n                gameCount={divider}\n                key={formDataHome[0].name}\n                last5={formDataHome[0].Last5}\n                homeOrAwayResults={gameArrayHomeTeamHomeGames}\n                LeagueOrAll={formDataHome[0].LeagueOrAll}\n                className={\"KeyStatsHome\"}\n                name={formDataHome[0].name}\n                goals={\n                  homeForm.averageScoredLeague !== undefined &&\n                  homeForm.averageScoredLeague !== null\n                    ? homeForm.averageScoredLeague.toFixed(2)\n                    : formDataHome[0].AverageGoals\n                }\n                conceeded={\n                  homeForm.averageConceededLeague !== undefined &&\n                  homeForm.averageConceededLeague !== null\n                    ? homeForm.averageConceededLeague.toFixed(2)\n                    : formDataHome[0].AverageConceeded\n                }\n                XG={formDataHome[0].AverageXG}\n                XGConceded={formDataHome[0].AverageXGConceded}\n                possession={formDataHome[0].AveragePossession}\n                sot={formDataHome[0].AverageShotsOnTarget}\n                dangerousAttacks={formDataHome[0].AverageDangerousAttacks}\n                leaguePosition={\n                  formDataHome[0].leaguePosition\n                    ? formDataHome[0].leaguePosition\n                    : 0\n                }\n                rawPosition={game.homeRawPosition ? game.homeRawPosition : 0}\n                homeOrAwayLeaguePosition={\n                  game.homeTeamHomePosition ? game.homeTeamHomePosition : 0\n                }\n                winPercentage={\n                  game.homeTeamWinPercentage ? game.homeTeamWinPercentage : 0\n                }\n                lossPercentage={\n                  game.homeTeamLossPercentage ? game.homeTeamLossPercentage : 0\n                }\n                drawPercentage={\n                  game.homeTeamDrawPercentage ? game.homeTeamDrawPercentage : 0\n                }\n                ppg={formDataHome[0].SeasonPPG}\n                formTrend={[\n                  homeTenGameAverage.toFixed(2),\n                  homeSixGameAverage.toFixed(2),\n                  homeFiveGameAverage.toFixed(2),\n                ]}\n                lastGame={homeLastGame}\n                formRun={formDataHome[0].formRun}\n                goalDifference={formDataHome[0].goalDifference}\n                goalDifferenceHomeOrAway={\n                  formDataHome[0].goalDifferenceHomeOrAway\n                }\n                BttsPercentage={formDataHome[0].BttsPercentage}\n                BttsPercentageHomeOrAway={\n                  formDataHome[0].BttsPercentageHomeOrAway\n                }\n                // BTTSAll={\n                //   formDataHome[0].BTTSAll\n                //     ? formDataHome[0].BTTSAll\n                //     : '\"Get Predictions\" first'\n                // }\n                // BTTSHorA={\n                //   formDataHome[0].BTTSHorA\n                //     ? formDataHome[0].BTTSHorA\n                //     : '\"Get Predictions\" first'\n                // }\n                BTTSArray={formDataHome[0].BTTSArray}\n                Results={formDataHome[0].Results}\n                ResultsHomeOrAway={formDataHome[0].wonHomeOrAwayOnly}\n                CardsTotal={formDataHome[0].CardsTotal}\n                CornersAverage={formDataHome[0].CornersAverage}\n                ScoredBothHalvesPercentage={\n                  formDataHome[0].ScoredBothHalvesPercentage\n                }\n                FormTextString={formDataHome[0].FormTextStringHome}\n              />\n            </ul>\n          </div>\n        );\n      }\n\n      function StatsAway() {\n        return (\n          <div className=\"flex-childTwo\">\n            <ul style={style}>\n              <Stats\n                style={style}\n                homeOrAway=\"Away\"\n                gameCount={divider}\n                key={formDataAway[0].name}\n                last5={formDataAway[0].Last5}\n                homeOrAwayResults={gameArrayAwayTeamAwayGames}\n                LeagueOrAll={formDataAway[0].LeagueOrAll}\n                className={\"KeyStatsAway\"}\n                name={formDataAway[0].name}\n                goals={\n                  awayForm.averageScoredLeague !== undefined &&\n                  awayForm.averageScoredLeague !== null\n                    ? awayForm.averageScoredLeague.toFixed(2)\n                    : formDataAway[0].AverageGoals\n                }\n                conceeded={\n                  awayForm.averageConceededLeague !== undefined &&\n                  awayForm.averageConceededLeague !== null\n                    ? awayForm.averageConceededLeague.toFixed(2)\n                    : formDataAway[0].AverageConceeded\n                }\n                XG={formDataAway[0].AverageXG}\n                XGConceded={formDataAway[0].AverageXGConceded}\n                //todo add goal diff and btts percentages\n                possession={formDataAway[0].AveragePossession}\n                rawPosition={game.awayRawPosition ? game.awayRawPosition : 0}\n                sot={formDataAway[0].AverageShotsOnTarget}\n                dangerousAttacks={formDataAway[0].AverageDangerousAttacks}\n                leaguePosition={\n                  formDataAway[0].leaguePosition\n                    ? formDataAway[0].leaguePosition\n                    : 0\n                }\n                homeOrAwayLeaguePosition={\n                  game.awayTeamAwayPosition ? game.awayTeamAwayPosition : 0\n                }\n                winPercentage={\n                  game.awayTeamWinPercentage ? game.awayTeamWinPercentage : 0\n                }\n                lossPercentage={\n                  game.awayTeamLossPercentage ? game.awayTeamLossPercentage : 0\n                }\n                drawPercentage={\n                  game.awayTeamDrawPercentage ? game.awayTeamDrawPercentage : 0\n                }\n                ppg={formDataAway[0].SeasonPPG}\n                formTrend={[\n                  awayTenGameAverage.toFixed(2),\n                  awaySixGameAverage.toFixed(2),\n                  awayFiveGameAverage.toFixed(2),\n                ]}\n                lastGame={awayLastGame}\n                formRun={formDataAway[0].formRun}\n                goalDifference={formDataAway[0].goalDifference}\n                goalDifferenceHomeOrAway={\n                  formDataAway[0].goalDifferenceHomeOrAway\n                }\n                BttsPercentage={formDataAway[0].BttsPercentage}\n                BttsPercentageHomeOrAway={\n                  formDataAway[0].BttsPercentageHomeOrAway\n                }\n                // BTTSAll={\n                //   formDataAway[0].BTTSAll\n                //     ? formDataAway[0].BTTSAll\n                //     : '\"Get Predictions\" first'\n                // }\n                // BTTSHorA={\n                //   formDataAway[0].BTTSHorA\n                //     ? formDataAway[0].BTTSHorA\n                //     : '\"Get Predictions\" first'\n                // }\n                BTTSArray={formDataAway[0].BTTSArray}\n                Results={formDataAway[0].Results}\n                CardsTotal={formDataAway[0].CardsTotal}\n                CornersAverage={formDataAway[0].CornersAverage}\n                ScoredBothHalvesPercentage={\n                  formDataAway[0].ScoredBothHalvesPercentage\n                }\n                FormTextString={formDataAway[0].FormTextStringAway}\n              />\n            </ul>\n          </div>\n        );\n      }\n\n      const pointsHome = getPointsFromLastX(formDataHome[0].Last5)\n      const pointsHomeAv = await getPointAverage(pointsHome, 5)\n      const pointsAway = getPointsFromLastX(formDataAway[0].Last5)\n      const pointsAwayAv = await getPointAverage(pointsAway, 5)\n\n      ReactDOM.render(\n        <div style={style}>\n          <div className=\"Chart\" id={`Chart${game.id}`} style={style}>\n            <RadarChart\n              data={[\n                homeAttackStrength,\n                homeDefenceStrength,\n                homePossessionStrength,\n                homeXGForStrength,\n                homeXGAgainstStrength,\n                homeDirectnessStrength,\n                homeAccuracyOverallStrength,\n              ]}\n              data2={[\n                awayAttackStrength,\n                awayDefenceStrength,\n                awayPossessionStrength,\n                awayXGForStrength,\n                awayXGAgainstStrength,\n                awayDirectnessStrength,\n                awayAccuracyOverallStrength,\n              ]}\n              team1={game.homeTeam}\n              team2={game.awayTeam}\n            ></RadarChart>\n            <BarChart\n              data1={[\n                homeForm.averageScoredLeague !== undefined &&\n                homeForm.averageScoredLeague !== null\n                  ? homeForm.averageScoredLeague.toFixed(2)\n                  : formDataHome[0].AverageGoals,\n                awayForm.averageConceededLeague !== undefined &&\n                awayForm.averageConceededLeague !== null\n                  ? awayForm.averageConceededLeague.toFixed(2)\n                  : formDataAway[0].AverageConceeded,\n                pointsHomeAv,\n                formDataHome[0].AverageXG,\n                formDataAway[0].AverageXGConceded,\n                formDataHome[0].AverageShotsOnTarget,\n                formDataHome[0].AverageDangerousAttacks / 7.5,\n                formDataHome[0].AveragePossession / 7.5,\n                formDataHome[0].goalDifferenceHomeOrAway / 5,\n                formDataHome[0].CornersAverage,\n              ]}\n              data2={[\n                awayForm.averageScoredLeague !== undefined &&\n                awayForm.averageScoredLeague !== null\n                  ? awayForm.averageScoredLeague.toFixed(2)\n                  : formDataAway[0].AverageGoals,\n                homeForm.averageConceededLeague !== undefined &&\n                homeForm.averageConceededLeague !== null\n                  ? homeForm.averageConceededLeague.toFixed(2)\n                  : formDataHome[0].AverageConceeded,\n                pointsAwayAv,\n                formDataAway[0].AverageXG,\n                formDataHome[0].AverageXGConceded,\n                formDataAway[0].AverageShotsOnTarget,\n                formDataAway[0].AverageDangerousAttacks / 7.5,\n                formDataAway[0].AveragePossession / 7.5,\n                formDataAway[0].goalDifferenceHomeOrAway / 5,\n                formDataAway[0].CornersAverage,\n              ]}\n            ></BarChart>\n            <Chart\n              height={3}\n              depth={0}\n              data1={formArrayHome}\n              data2={formArrayAway}\n              team1={game.homeTeam}\n              team2={game.awayTeam}\n              type={chartType}\n              tension={0}\n            ></Chart>\n            <Chart\n              height={\n                Math.max(\n                  rollingGoalDiffTotalHome[rollingGoalDiffTotalHome.length - 1],\n                  rollingGoalDiffTotalAway[rollingGoalDiffTotalAway.length - 1]\n                ) > 2\n                  ? Math.max(\n                      rollingGoalDiffTotalHome[\n                        rollingGoalDiffTotalHome.length - 1\n                      ],\n                      rollingGoalDiffTotalAway[\n                        rollingGoalDiffTotalAway.length - 1\n                      ]\n                    )\n                  : 2\n              }\n              depth={\n                Math.min(\n                  rollingGoalDiffTotalHome[rollingGoalDiffTotalHome.length - 1],\n                  rollingGoalDiffTotalAway[rollingGoalDiffTotalAway.length - 1]\n                ) < -2\n                  ? Math.min(\n                      rollingGoalDiffTotalHome[\n                        rollingGoalDiffTotalHome.length - 1\n                      ],\n                      rollingGoalDiffTotalAway[\n                        rollingGoalDiffTotalAway.length - 1\n                      ]\n                    )\n                  : -2\n              }\n              data1={rollingGoalDiffTotalHome}\n              data2={rollingGoalDiffTotalAway}\n              team1={game.homeTeam}\n              team2={game.awayTeam}\n              type={\"Goal difference over time\"}\n              tension={0.3}\n            ></Chart>\n          </div>\n          <div style={style}>\n            <Div className=\"MatchTime\" text={`Kick off: ${time} GMT`}></Div>\n            <Div\n              text={`Last league games (most recent first)`}\n              className={\"LastGameHeader\"}\n            ></Div>\n          </div>\n          <div className=\"flex-container\">\n            <div className=\"flex-childOneOverviewSmall\">{overviewHome}</div>\n            <div className=\"flex-childTwoOverviewSmall\">{overviewAway}</div>\n          </div>\n          {/* <Collapsable\n            className={\"Detail\"}\n            classNameTwo={\"flex-childOneOverview\"}\n            classNameThree={\"flex-childTwoOverview\"}\n            classNameFlex={\"flex-element\"}\n            classNameButton={\"DetailedFixtures\"}\n            buttonText={\"Detailed results\"}\n            newText={\"Detailed results\"}\n            element={contentHome}\n            elementTwo={contentAway}\n            // style={style}\n          /> */}\n          <div className=\"flex-container\">\n            <StatsHome />\n            <StatsAway />\n          </div>\n          <input type=\"hidden\" name=\"IL_IN_ARTICLE\" />\n          <Button\n            className=\"MoreStats\"\n            onClickEvent={() =>\n              getTeamStats(\n                game.id,\n                game.homeTeam,\n                game.awayTeam,\n                formDataHome[0].BttsPercentage,\n                formDataHome[0].BttsPercentageHomeOrAway,\n                formDataAway[0].BttsPercentage,\n                formDataAway[0].BttsPercentageHomeOrAway\n              )\n            }\n            text={\"Fixture trends\"}\n          ></Button>\n        </div>,\n        document.getElementById(\"stats\" + homeTeam)\n      );\n    }\n\n    // ReactDOM.render(\n    //   <Button\n    //     className=\"MoreStats\"\n    //     style={style}\n    //     onClickEvent={() =>\n    //       getTeamStats(\n    //         game.id,\n    //         game.homeTeam,\n    //         game.awayTeam,\n    //         formDataHome[0].BttsPercentage,\n    //         formDataHome[0].BttsPercentageHomeOrAway,\n    //         formDataAway[0].BttsPercentage,\n    //         formDataAway[0].BttsPercentageHomeOrAway\n    //       )\n    //     }\n    //     text={\"Fixture trends\"}\n    //   ></Button>,\n    //   document.getElementById(`H2HStats${game.id}`)\n    // );\n  }\n}\n","import React, { Fragment, useState } from \"react\";\nimport { CreateBadge } from \"./createBadge\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { Checkbox } from \"./Checkbox\";\nimport { createStatsDiv } from \"../logic/getStats\";\nimport { renderTable } from \"../logic/getFixtures\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport { json, useNavigate } from \"react-router-dom\";\nimport { Zoom } from \"swiper\";\nimport { useDispatch } from \"react-redux\";\nimport { setData } from \"../logic/dataSlice\";\nimport { Provider } from \"react-redux\";\nimport store from \"../logic/store\"; // Import your Redux store\nimport { formObjectHome } from \"../logic/getScorePredictions\";\nimport { clicked } from \"../logic/getScorePredictions\";\n\nlet resultValue;\nvar count;\nlet mockValue;\nvar setCount;\n\nfunction toggle(bool) {\n  count = !bool;\n  return count;\n}\n\nfunction GetDivider(fixture, mock) {\n  const matchStatus = fixture.status;\n  let isPrediction = resultValue;\n\n  if (mockValue === true && matchStatus === \"complete\") {\n    isPrediction = false;\n    return (\n      <Fragment>\n        <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n        <div\n          className=\"CorrectScore\"\n          key={fixture.fixture.homeTeam}\n          data-cy={\"score-\" + fixture.fixture.id}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (mockValue === true && matchStatus !== \"complete\") {\n    isPrediction = true;\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (isPrediction === false && matchStatus !== \"complete\") {\n    return (\n      <div className=\"divider\" data-cy={\"divider-\" + fixture.fixture.id}>\n        {\"V\"}\n      </div>\n    );\n  } else if (isPrediction === false && matchStatus === \"complete\") {\n    return (\n      <div\n        className=\"Result\"\n        data-cy={\"result-\" + fixture.fixture.id}\n      >{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n    );\n  } else if (isPrediction === true && matchStatus === \"complete\") {\n    let outcome;\n    let prediction;\n\n    switch (true) {\n      case fixture.fixture.homeGoals > fixture.fixture.awayGoals:\n        outcome = 0;\n        fixture.fixture.winner = fixture.fixture.homeTeam;\n        fixture.fixture.outcome = \"homeWin\";\n        break;\n      case fixture.fixture.homeGoals === fixture.fixture.awayGoals:\n        outcome = 1;\n        fixture.fixture.winner = \"draw\";\n        fixture.fixture.outcome = \"draw\";\n\n        break;\n      case fixture.fixture.homeGoals < fixture.fixture.awayGoals:\n        outcome = 2;\n        fixture.fixture.winner = fixture.fixture.awayTeam;\n        fixture.fixture.outcome = \"awayWin\";\n\n        break;\n      default:\n        break;\n    }\n\n    switch (true) {\n      case fixture.fixture.goalsA > fixture.fixture.goalsB:\n        prediction = 0;\n        break;\n      case fixture.fixture.goalsA === fixture.fixture.goalsB:\n        prediction = 1;\n        break;\n      case fixture.fixture.goalsA < fixture.fixture.goalsB:\n        prediction = 2;\n        break;\n      default:\n        break;\n    }\n    if (outcome === prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        switch (true) {\n          case outcome === 0:\n            fixture.fixture.profit = fixture.fixture.homeOdds;\n            break;\n          case outcome === 1:\n            fixture.fixture.profit = fixture.fixture.drawOdds;\n            break;\n          case outcome === 2:\n            fixture.fixture.profit = fixture.fixture.awayOdds;\n            break;\n          default:\n            break;\n        }\n      } else fixture.fixture.profit = 1;\n\n      if (\n        fixture.fixture.goalsA === fixture.fixture.homeGoals &&\n        fixture.fixture.goalsB === fixture.fixture.awayGoals\n      ) {\n        fixture.fixture.exactScore = true;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"ExactScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      } else {\n        fixture.fixture.exactScore = false;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"CorrectScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      }\n    } else if (outcome !== prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        fixture.fixture.profit = 0;\n      } else {\n        fixture.fixture.profit = 1;\n      }\n      fixture.fixture.exactScore = false;\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"IncorrectScore\"\n            key={fixture.fixture.awayTeam}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    }\n  } else {\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  }\n}\n\nfunction renderLeagueName(fixture, mock) {\n  mockValue = mock;\n\n  let name = fixture.leagueName;\n  let id =\n    allLeagueResultsArrayOfObjects.length > 0\n      ? allLeagueResultsArrayOfObjects[fixture.leagueIndex].id\n      : null;\n  if (name === null || mock === true) {\n    return <div></div>;\n  } else {\n    return (\n      <div>\n        <div\n          className=\"leagueName\"\n          id={`league${id}`}\n          key={`leagueName${id}div`}\n          onClick={() =>\n            renderTable(\n              fixture.leagueIndex,\n              allLeagueResultsArrayOfObjects[fixture.leagueIndex],\n              id\n            )\n          }\n        >\n          {fixture.leagueName} &#9776;\n        </div>\n        <div\n          className=\"LeagueTable\"\n          key={`leagueName${id}`}\n          id={`leagueName${id}`}\n        ></div>\n      </div>\n    );\n  }\n}\n\nconst downArrow = \"\\u{2195}\";\nconst rightArrow = \"\\u{29C9}\";\n\nexport let testing;\n\nfunction SingleFixture({ fixture, count, mock }) {\n  const dispatch = useDispatch();\n  function StoreData(){\n\n    const fixtureDetails = {\n      id: fixture.id,\n      homeTeamName: fixture.homeTeam,\n      homeId: fixture.homeId,\n      homeTeamBadge: fixture.homeBadge,\n      awayTeamName: fixture.awayTeam,\n      awayId: fixture.awayId,\n      awayTeamBadge: fixture.awayBadge,\n      stadium: fixture.stadium,\n      time: fixture.time,\n      homeGoals: fixture.goalsA,\n      awayGoals: fixture.goalsB\n    }\n\n    const homeDetails = {\n      \"Attacking Strength\": fixture.formHome.attackingStrength,\n      \"Defensive Strength\": fixture.formHome.defensiveStrength\n    }\n\n    const awayDetails = {\n      \"Attacking Strength\": fixture.formAway.attackingStrength,\n      \"Defensive Strength\": fixture.formAway.defensiveStrength\n    }\n\n    const dataToSend = {\n      key1: 'value1',\n      key2: 'value2',\n    };\n    fixture.formHome.defensiveMetrics[\"Clean Sheet Percentage\"] = fixture.formHome.CleanSheetPercentage\n    fixture.formAway.defensiveMetrics[\"Clean Sheet Percentage\"] = fixture.formAway.CleanSheetPercentage\n\n    localStorage.setItem('homeForm', JSON.stringify(fixture.formHome.attackingMetrics));\n    localStorage.setItem('homeFormDef', JSON.stringify(fixture.formHome.defensiveMetrics));\n    localStorage.setItem('allTeamResultsHome', JSON.stringify(fixture.formHome.allTeamResults));\n    localStorage.setItem('homeDetails', JSON.stringify(homeDetails));\n\n\n    localStorage.setItem('awayForm', JSON.stringify(fixture.formAway.attackingMetrics));\n    localStorage.setItem('awayFormDef', JSON.stringify(fixture.formAway.defensiveMetrics));\n    localStorage.setItem('allTeamResultsAway', JSON.stringify(fixture.formAway.allTeamResults));\n    localStorage.setItem('awayDetails', JSON.stringify(awayDetails));\n\n    localStorage.setItem('fixtureDetails', JSON.stringify(fixtureDetails))\n\n    dispatch(setData(dataToSend));\n  }\n\n\n  async function handleButtonClick(game) {\n    if(clicked === true){\n      StoreData(formObjectHome)\n      window.open(\"/#/fixture\");\n    }\n    else return\n  }\n  return (\n    <div key={fixture.game}>\n      {renderLeagueName(fixture, mock)}\n      <div className=\"individualFixtureContainer\">\n        <li\n          className={\"individualFixture\"}\n          key={fixture.id}\n          data-cy={fixture.id}\n        >\n          <div className=\"HomeOdds\">{fixture.fractionHome}</div>\n          <div className=\"homeTeam\">\n            {fixture.homeTeam}\n          </div>\n          <GetDivider\n            result={resultValue}\n            status={fixture.status}\n            fixture={fixture}\n          />\n          {/* <div className=\"divider\">{\"V\"}</div> */}\n          <div className=\"awayTeam\">{fixture.awayTeam}</div>\n          <CreateBadge\n            image={fixture.homeBadge}\n            ClassName=\"HomeBadge\"\n            alt=\"Home team badge\"\n            flexShrink={5}\n          />\n          <CreateBadge\n            image={fixture.awayBadge}\n            ClassName=\"AwayBadge\"\n            alt=\"Away team badge\"\n          />\n          <div className=\"AwayOdds\">{fixture.fractionAway}</div>\n        </li>\n        <button\n          className=\"GameStats\"\n          onClick={() =>\n            mock === false ? createStatsDiv(fixture, count) : null\n          }\n          onMouseDown={() => (count = toggle(count))}\n        >\n          Game overview {downArrow}\n        </button>\n        <button className=\"GameStatsTwo\" onClick={() => handleButtonClick(fixture)}>More detail {rightArrow}</button>\n        {/* <Checkbox/> */}\n      </div>\n      <div id={\"stats\" + fixture.homeTeam} />\n      <div className=\"MatchHistory\" id={\"history\" + fixture.homeTeam} />\n    </div>\n  );\n}\n\nconst List = ({ fixtures, mock }) => (\n  <div>\n    <div id=\"Headers\"></div>\n    <ul className=\"FixtureList\" id=\"FixtureList\">\n      {fixtures.map((fixture, i) => (\n        <SingleFixture\n          fixture={fixture}\n          key={fixture.game}\n          count={count}\n          mock={mock}\n        />\n      ))}\n    </ul>\n  </div>\n);\n\nexport function Fixture(props) {\n  [count, setCount] = useState(false);\n  resultValue = props.result;\n  return (\n    <Provider store={store}>\n      <List\n        fixtures={props.fixtures}\n        result={resultValue}\n        count={count}\n        mock={props.mock}\n      />\n    </Provider>\n  );\n}\n","// src/dataSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\n\n// src/dataSlice.js\nconst initialState = {\n  dataHome: localStorage.getItem('homeForm'),\n  dataAway: localStorage.getItem('awayForm'),\n  dataHomeDef: localStorage.getItem('homeFormDef'),\n  dataAwayDef: localStorage.getItem('awayFormDef'),\n  allTeamResultsHome: localStorage.getItem('allTeamResultsHome'),\n  allTeamResultsAway: localStorage.getItem('allTeamResultsAway'),\n  homeDetails:localStorage.getItem('homeDetails'),\n  awayDetails:localStorage.getItem('awayDetails'),\n  fixtureDetails: localStorage.getItem('fixtureDetails')\n};\n\nconst dataSlice = createSlice({\n  name: 'data',\n  initialState,\n  reducers: {\n    setData: (state, action) => {\n      state.data = action.payload;\n    },\n  },\n});\n\nexport const { setData } = dataSlice.actions;\n\nexport default dataSlice.reducer;\n","// src/store.js\nimport { configureStore } from '@reduxjs/toolkit';\nimport dataReducer from './dataSlice'; // Your data reducer\n\nconst store = configureStore({\n  reducer: {\n    data: dataReducer, // Ensure this key matches the key in your initialState\n  },\n});\n\nexport default store;\n","import React from \"react\";\n\nfunction DateField(props) {\n  return (\n    <form className=\"DateForm\">\n      <input type=\"date\" id=\"date\" name=\"date\" />\n      <input type=\"submit\" />\n    </form>\n  );\n}\n\nexport default DateField;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CreateBadge } from \"./createBadge\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nlet stadium;\n\n// async function getGameDetails(id){\n// const gameDetails = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}match/${id}`)\n// await gameDetails.json().then((game) => {\n//   console.log(game.data)\n//   stadium = game.data.stadium_name\n// });\n// }\n\nfunction TeamPage() {\n  const [dataState, setData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const responseHome = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}team/${storedFixtureDetailsJson.homeId}`\n      );\n      const resultHome = await responseHome.json();\n\n      const responseAway = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}team/${storedFixtureDetailsJson.awayId}`\n      );\n      const resultAway = await responseAway.json();\n      // setData(result.data.stadium_name);\n\n      let indexHome = resultHome.data.findIndex(\n        (x) => x.season_format === \"Domestic League\"\n      );\n      let indexAway = resultAway.data.findIndex(\n        (x) => x.season_format === \"Domestic League\"\n      );\n\n      setData((test) => ({\n        ...test,\n        scoredOverallHome:\n          resultHome.data[indexHome].stats.seasonScoredNum_overall,\n        playedHomeOnly:\n          resultHome.data[indexHome].stats.seasonMatchesPlayed_home,\n        scoredOverallHomeOnly:\n          resultHome.data[indexHome].stats.seasonScoredNum_home,\n        conceededOverallHome:\n          resultHome.data[indexHome].stats.seasonConcededNum_overall,\n        conceededOverallHomeOnly:\n          resultHome.data[indexHome].stats.seasonConcededNum_home,\n\n        PPGOverallHome: resultHome.data[indexHome].stats.seasonPPG_overall,\n        PPGOverallHomeOnly: resultHome.data[indexHome].stats.seasonPPG_home,\n        leaguePosition_overallHome:\n          resultHome.data[indexHome].stats.leaguePosition_overall,\n        leaguePosition_HomeOnly:\n          resultHome.data[indexHome].stats.leaguePosition_home,\n        averageAttendance:\n          resultHome.data[indexHome].stats.average_attendance_home,\n        BTTSPercentage_overallHome:\n          resultHome.data[indexHome].stats.seasonBTTSPercentage_overall,\n        BTTSAndWinPercentage_Home:\n          resultHome.data[indexHome].stats.BTTS_and_win_percentage_overall,\n        BTTSAndLosePercentage_Home:\n          resultHome.data[indexHome].stats.BTTS_and_lose_percentage_overall,\n        BTTSBothHalvesHome:\n          resultHome.data[indexHome].stats.BTTS_both_halves_percentage_overall,\n        GoalDifferenceHT_overall_Home:\n          resultHome.data[indexHome].stats.GoalDifferenceHT_overall,\n        GD_2hg_overall_Home: resultHome.data[indexHome].stats.gd_2hg_overall,\n        leadingAtHTPercentage_overallHome:\n          resultHome.data[indexHome].stats.leadingAtHTPercentage_overall,\n        seasonOver15Percentage_overallHome:\n          resultHome.data[indexHome].stats.seasonOver15Percentage_overall,\n        seasonOver25Percentage_overallHome:\n          resultHome.data[indexHome].stats.seasonOver25Percentage_overall,\n        seasonOver35Percentage_overallHome:\n          resultHome.data[indexHome].stats.seasonOver35Percentage_overall,\n        seasonOver45Percentage_overallHome:\n          resultHome.data[indexHome].stats.seasonOver45Percentage_overall,\n        scoredBothHalvesPercentage_overallHome:\n          resultHome.data[indexHome].stats.scoredBothHalvesPercentage_overall,\n        shots_on_target_per_goals_scored_overallHome:\n          resultHome.data[indexHome].stats.additional_info\n            .shots_on_target_per_goals_scored_overall,\n        cornersTotalAVG_overallHome:\n          resultHome.data[indexHome].stats.cornersTotalAVG_overall,\n        cardsAVG_overallHome: resultHome.data[indexHome].stats.cardsAVG_overall,\n        foulsAVG_overallHome: resultHome.data[indexHome].stats.foulsAVG_overall,\n        penalties_won_per_match_overallHome:\n          resultHome.data[indexHome].stats.additional_info\n            .penalties_won_per_match_overall,\n        penalty_in_a_match_percentage_overallHome:\n          resultHome.data[indexHome].stats.additional_info\n            .penalty_in_a_match_percentage_overall,\n\n        scoredOverallAway:\n          resultAway.data[indexAway].stats.seasonScoredNum_overall,\n        playedAwayOnly:\n          resultAway.data[indexAway].stats.seasonMatchesPlayed_away,\n        scoredOverallAwayOnly:\n          resultAway.data[indexAway].stats.seasonScoredNum_away,\n        conceededOverallAway:\n          resultAway.data[indexAway].stats.seasonConcededNum_overall,\n        conceededOverallAwayOnly:\n          resultAway.data[indexAway].stats.seasonConcededNum_away,\n\n        PPGOverallAway: resultAway.data[indexAway].stats.seasonPPG_overall,\n        PPGOverallAwayOnly: resultAway.data[indexAway].stats.seasonPPG_away,\n        leaguePosition_overallAway:\n          resultAway.data[indexAway].stats.leaguePosition_overall,\n        leaguePosition_AwayOnly:\n          resultAway.data[indexAway].stats.leaguePosition_away,\n        BTTSPercentage_overallAway:\n          resultAway.data[indexAway].stats.seasonBTTSPercentage_overall,\n        BTTSAndWinPercentage_Away:\n          resultAway.data[indexAway].stats.BTTS_and_win_percentage_overall,\n        BTTSAndLosePercentage_Away:\n          resultAway.data[indexAway].stats.BTTS_and_lose_percentage_overall,\n        BTTSBothHalvesAway:\n          resultAway.data[indexAway].stats.BTTS_both_halves_percentage_overall,\n        GoalDifferenceHT_overall_Away:\n          resultAway.data[indexAway].stats.GoalDifferenceHT_overall,\n        GD_2hg_overall_Away: resultAway.data[indexAway].stats.gd_2hg_overall,\n        leadingAtHTPercentage_overallAway:\n          resultAway.data[indexAway].stats.leadingAtHTPercentage_overall,\n        seasonOver15Percentage_overallAway:\n          resultAway.data[indexAway].stats.seasonOver15Percentage_overall,\n        seasonOver25Percentage_overallAway:\n          resultAway.data[indexAway].stats.seasonOver25Percentage_overall,\n        seasonOver35Percentage_overallAway:\n          resultAway.data[indexAway].stats.seasonOver35Percentage_overall,\n        seasonOver45Percentage_overallAway:\n          resultAway.data[indexAway].stats.seasonOver45Percentage_overall,\n        scoredBothHalvesPercentage_overallAway:\n          resultAway.data[indexAway].stats.scoredBothHalvesPercentage_overall,\n        shots_on_target_per_goals_scored_overallAway:\n          resultAway.data[indexAway].stats.additional_info\n            .shots_on_target_per_goals_scored_overall,\n\n        cornersTotalAVG_overallAway:\n          resultAway.data[indexAway].stats.cornersTotalAVG_overall,\n        cardsAVG_overallAway: resultAway.data[indexAway].stats.cardsAVG_overall,\n        foulsAVG_overallAway: resultAway.data[indexAway].stats.foulsAVG_overall,\n        penalties_won_per_match_overallAway:\n          resultAway.data[indexAway].stats.additional_info\n            .penalties_won_per_match_overall,\n        penalty_in_a_match_percentage_overallAway:\n          resultAway.data[indexAway].stats.additional_info\n            .penalty_in_a_match_percentage_overall,\n      }));\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  // useEffect(() => {\n  //   async function apiCall() {\n  //     const apiResponse = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}match/${storedFixtureDetailsJson.id}`);\n  //     await apiResponse.json().then((game) => {\n  //         console.log(game.data)\n  //         stadium = game.data.stadium_name\n  //         console.log(stadium)\n  //       });\n  //   }\n  //   apiCall();\n  // });\n\n  const storedDataHome = useSelector((state) => state.data.dataHome);\n  const jsonDataHome = JSON.parse(storedDataHome);\n  const propertyNamesHome = Object.entries(jsonDataHome);\n\n  const storedDataHomeDef = useSelector((state) => state.data.dataHomeDef);\n  const jsonDataHomeDef = JSON.parse(storedDataHomeDef);\n  const propertyNamesHomeDef = Object.entries(jsonDataHomeDef);\n\n  const storedDataallTeamResultsHome = useSelector(\n    (state) => state.data.allTeamResultsHome\n  );\n  const jsonDataallTeamResultsHome = JSON.parse(storedDataallTeamResultsHome);\n  const propertyNamesallTeamResultsHome = Object.values(\n    jsonDataallTeamResultsHome\n  );\n\n  const homeDetails = useSelector((state) => state.data.homeDetails);\n  const jsonHomeDetails = JSON.parse(homeDetails);\n\n  const storedDataAway = useSelector((state) => state.data.dataAway);\n  const jsonDataAway = JSON.parse(storedDataAway);\n  const propertyNamesAway = Object.entries(jsonDataAway);\n\n  const storedDataAwayDef = useSelector((state) => state.data.dataAwayDef);\n  const jsonDataAwayDef = JSON.parse(storedDataAwayDef);\n  const propertyNamesAwayDef = Object.entries(jsonDataAwayDef);\n\n  const storedDataallTeamResultsAway = useSelector(\n    (state) => state.data.allTeamResultsAway\n  );\n  const jsonDataallTeamResultsAway = JSON.parse(storedDataallTeamResultsAway);\n  const propertyNamesallTeamResultsAway = Object.values(\n    jsonDataallTeamResultsAway\n  );\n\n  const awayDetails = useSelector((state) => state.data.awayDetails);\n  const jsonAwayDetails = JSON.parse(awayDetails);\n\n  const storedFixtureDetails = useSelector(\n    (state) => state.data.fixtureDetails\n  );\n  const storedFixtureDetailsJson = JSON.parse(storedFixtureDetails);\n\n  const options = {\n    plugins: {\n      title: {\n        display: true,\n        text: \"Team comparison\",\n      },\n    },\n    aspectRatio: 0.5,\n    maintainAspectRatio: true,\n    responsive: true,\n    scales: {\n      x: {\n        stacked: true,\n      },\n      y: {\n        stacked: true,\n        display: false,\n      },\n    },\n  };\n  const labels = [\n    storedFixtureDetailsJson.homeTeamName,\n    storedFixtureDetailsJson.awayTeamName,\n  ];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        data: [\n          jsonHomeDetails[\"Attacking Strength\"],\n          [jsonAwayDetails[\"Attacking Strength\"]],\n        ],\n        label: \"Attacking Strength\",\n        backgroundColor: \"#030061\",\n      },\n      {\n        data: [\n          jsonHomeDetails[\"Defensive Strength\"],\n          [jsonAwayDetails[\"Defensive Strength\"]],\n        ],\n        label: \"Defensive Strength\",\n        backgroundColor: \"#CC3314\",\n      },\n    ],\n  };\n\n  return (\n    <div className=\"TeamStatsContainer\">\n      <div className=\"FixtureHeadingContiner\">\n        <CreateBadge\n          image={storedFixtureDetailsJson.homeTeamBadge}\n          ClassName=\"HomeTeamBadge\"\n          alt=\"Home team badge\"\n        ></CreateBadge>\n        {`${storedFixtureDetailsJson.homeTeamName} v ${storedFixtureDetailsJson.awayTeamName}`}\n        <CreateBadge\n          image={storedFixtureDetailsJson.awayTeamBadge}\n          ClassName=\"AwayTeamBadge\"\n          alt=\"Away team badge\"\n        ></CreateBadge>\n      </div>\n      <h3>\n        {storedFixtureDetailsJson.stadium} KO: {storedFixtureDetailsJson.time} |\n        Average Attendance: {dataState.averageAttendance}\n      </h3>\n      <h3>\n        XGTipping Prediction: {storedFixtureDetailsJson.homeGoals} -{\" \"}\n        {storedFixtureDetailsJson.awayGoals}\n      </h3>\n      <div className=\"TeamStats\">\n        <ul className=\"HomeTeamStats\">\n          <h3>{storedFixtureDetailsJson.homeTeamName}</h3>\n          {propertyNamesHome.map(([key, value], index) => (\n            <li key={index}>\n              <strong>{key}:</strong>{\" \"}\n              {typeof value === \"object\" ? JSON.stringify(value) : value}\n            </li>\n          ))}\n          <ul className=\"HomeTeamStats\">\n            {propertyNamesHomeDef.map(([key, value], index) => (\n              <li key={index}>\n                <strong>{key}:</strong>{\" \"}\n                {typeof value === \"object\" ? JSON.stringify(value) : value}\n              </li>\n            ))}\n          </ul>\n          <li>Scored overall: {dataState.scoredOverallHome}</li>\n          <li>Conceeded overall: {dataState.conceededOverallHome}</li>\n          <li>\n            Average scored home only:{\" \"}\n            {(\n              dataState.scoredOverallHomeOnly / dataState.playedHomeOnly\n            ).toFixed(2)}\n          </li>\n          <li>\n            Average conceeded home only:{\" \"}\n            {(\n              dataState.conceededOverallHomeOnly / dataState.playedHomeOnly\n            ).toFixed(2)}\n          </li>\n          <li>PPG overall: {dataState.PPGOverallHome}</li>\n          <li>PPG home only: {dataState.PPGOverallHomeOnly}</li>\n          <li>League position: {dataState.leaguePosition_overallHome}</li>\n          <li>\n            League position home only: {dataState.leaguePosition_HomeOnly}\n          </li>\n          <li>BTTS {dataState.BTTSPercentage_overallHome}%</li>\n          <li>BTTS and win: {dataState.BTTSAndWinPercentage_Home}%</li>\n          <li>BTTS and lose: {dataState.BTTSAndLosePercentage_Home}%</li>\n          <li>BTTS both halves: {dataState.BTTSBothHalvesHome}%</li>\n          <li>\n            Goal diff 1st half only: {dataState.GoalDifferenceHT_overall_Home}\n          </li>\n          <li>Goal diff 2nd half only: {dataState.GD_2hg_overall_Home}</li>\n          <li>\n            Leading at half time: {dataState.leadingAtHTPercentage_overallHome}%\n          </li>\n          <li>\n            Over 1.5 goals in games:{\" \"}\n            {dataState.seasonOver15Percentage_overallHome}%\n          </li>\n          <li>\n            Over 2.5 goals in games:{\" \"}\n            {dataState.seasonOver25Percentage_overallHome}%\n          </li>\n          <li>\n            Over 3.5 goals in games:{\" \"}\n            {dataState.seasonOver35Percentage_overallHome}%\n          </li>\n          <li>\n            Over 4.5 goals in games:{\" \"}\n            {dataState.seasonOver45Percentage_overallHome}%\n          </li>\n          <li>\n            Scored both halves:{\" \"}\n            {dataState.scoredBothHalvesPercentage_overallHome}%\n          </li>\n          <li>\n            SOTs per goal:{\" \"}\n            {dataState.shots_on_target_per_goals_scored_overallHome}\n          </li>\n          <li>Corners in game avg: {dataState.cornersTotalAVG_overallHome}</li>\n          <li>Cards avg: {dataState.cardsAVG_overallHome}</li>\n          <li>Fouls against avg: {dataState.foulsAVG_overallHome}</li>\n          <li>\n            Penalties won avg: {dataState.penalties_won_per_match_overallHome}\n          </li>\n          <li>\n            Penalties in match:{\" \"}\n            {dataState.penalty_in_a_match_percentage_overallHome}%\n          </li>\n        </ul>\n        <ul className=\"AwayTeamStats\">\n          <h3>{storedFixtureDetailsJson.awayTeamName}</h3>\n          {propertyNamesAway.map(([key, value], index) => (\n            <li key={index}>\n              <strong>{key}:</strong>{\" \"}\n              {typeof value === \"object\" ? JSON.stringify(value) : value}\n            </li>\n          ))}\n          <ul className=\"AwayTeamStats\">\n            {propertyNamesAwayDef.map(([key, value], index) => (\n              <li key={index}>\n                <strong>{key}:</strong>{\" \"}\n                {typeof value === \"object\" ? JSON.stringify(value) : value}\n              </li>\n            ))}\n          </ul>\n          <li>Scored overall: {dataState.scoredOverallAway}</li>\n          <li>Conceeded overall: {dataState.conceededOverallAway}</li>\n          <li>\n            Average scored away only:{\" \"}\n            {(\n              dataState.scoredOverallAwayOnly / dataState.playedAwayOnly\n            ).toFixed(2)}\n          </li>\n          <li>\n            Average conceeded away only:{\" \"}\n            {(\n              dataState.conceededOverallAwayOnly / dataState.playedAwayOnly\n            ).toFixed(2)}\n          </li>\n          <li>PPG overall: {dataState.PPGOverallAway}</li>\n          <li>PPG away only: {dataState.PPGOverallAwayOnly}</li>\n          <li>League position: {dataState.leaguePosition_overallAway}</li>\n          <li>\n            League position away only: {dataState.leaguePosition_AwayOnly}\n          </li>\n          <li>BTTS: {dataState.BTTSPercentage_overallAway}%</li>\n          <li>BTTS and win: {dataState.BTTSAndWinPercentage_Away}%</li>\n          <li>BTTS and lose: {dataState.BTTSAndLosePercentage_Away}%</li>\n          <li>BTTS both halves: {dataState.BTTSBothHalvesAway}%</li>\n          <li>\n            Goal diff 1st half only: {dataState.GoalDifferenceHT_overall_Away}\n          </li>\n          <li>Goal diff 2nd half only: {dataState.GD_2hg_overall_Away}</li>\n          <li>\n            Leading at half time: {dataState.leadingAtHTPercentage_overallAway}%\n          </li>\n          <li>\n            Over 1.5 goals in games:{\" \"}\n            {dataState.seasonOver15Percentage_overallAway}%\n          </li>\n          <li>\n            Over 2.5 goals in games:{\" \"}\n            {dataState.seasonOver25Percentage_overallAway}%\n          </li>\n          <li>\n            Over 3.5 goals in games:{\" \"}\n            {dataState.seasonOver35Percentage_overallAway}%\n          </li>\n          <li>\n            Over 4.5 goals in games:{\" \"}\n            {dataState.seasonOver45Percentage_overallAway}%\n          </li>\n          <li>\n            Scored both halves:{\" \"}\n            {dataState.scoredBothHalvesPercentage_overallAway}%\n          </li>\n          <li>\n            SOTs per goal:{\" \"}\n            {dataState.shots_on_target_per_goals_scored_overallAway}\n          </li>\n          <li>Corners in game avg: {dataState.cornersTotalAVG_overallAway}</li>\n          <li>Cards avg: {dataState.cardsAVG_overallAway}</li>\n          <li>Fouls against avg: {dataState.foulsAVG_overallAway}</li>\n          <li>\n            Penalties won avg: {dataState.penalties_won_per_match_overallAway}\n          </li>\n          <li>\n            Penalties in match:{\" \"}\n            {dataState.penalty_in_a_match_percentage_overallAway}%\n          </li>\n        </ul>\n        <div className=\"ChartContainer\">\n          <span className=\"Spacer\"></span>\n          <Bar options={options} data={data} className=\"ComparisonBar\" />\n          <span className=\"Spacer\"></span>\n        </div>\n        <ul className=\"HomeTeamResults\">\n          {propertyNamesallTeamResultsHome.map((match, index) => (\n            <>\n              <div className=\"MatchDate\">{match.date}</div>\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{match.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {match.homeGoals} : {match.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{match.awayTeam}</div>\n              </div>\n            </>\n          ))}\n        </ul>\n        <ul className=\"AwayTeamResults\">\n          {propertyNamesallTeamResultsAway.map((match, index) => (\n            <>\n              <div className=\"MatchDate\">{match.date}</div>\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{match.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {match.homeGoals} : {match.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{match.awayTeam}</div>\n              </div>\n            </>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default TeamPage;\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./components/Header\";\nimport { Button } from \"./components/Button\";\nimport OddsRadio from \"./components/OddsRadio\";\nimport { Fixture } from \"./components/Fixture\";\nimport mockedFixtures from \"./data/mockedFixtures.json\";\nimport { selectedOdds } from \"./components/OddsRadio\";\nimport Collapsable from \"./components/CollapsableElement\";\nimport { StyledKofiButton } from \"./components/KofiButton\";\nimport DateField from \"./components/DateForm\";\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  RedditShareButton,\n  RedditIcon,\n  TelegramShareButton,\n  TelegramIcon,\n  TwitterShareButton,\n  TwitterIcon,\n  WhatsappShareButton,\n  WhatsappIcon,\n} from \"react-share\";\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\nimport TeamPage from \"./components/Team\";\nimport { generateFixtures } from \"./logic/getFixtures\";\nimport { selectedOption } from \"./components/radio\";\nimport { ThreeDots } from \"react-loading-icons\";\n// import { Toggles } from \"./components/Toggle\";\nimport reactDom from \"react-dom\";\n// require(\"dotenv\").config();\n\nexport const proxyurl = \"https://safe-caverns-99679.herokuapp.com/\";\nexport var fixtureList = [];\nexport let allLeagueData = [];\n\nexport const availableLeagues = [];\nexport var orderedLeagues = [];\n\nconst leagueOrder = [\n  7432, //World Cup 22\n  9660, //premier league 22/23\n  9663, //championship 22/23\n  9582, //league 1 22/23\n  9581, //league 2 22/23\n  9700, //National league 22/23\n  9665, //La Liga 22/23\n  9636, //Scottish Prem 22/23\n  9655, //Bundesliga 22/23\n  9697, //Serie A 22/23\n  9674, //French Prem 22/23\n  9984, //Portagul Prem 22/23\n  9653, //Dutch Prem 22/23\n  9577, //Belgian Pro League 22/23\n  8737, //sweden 23\n  9545, //Danish Prem 22/23\n  8739, //Norway Prem 23\n  9954, //Austrian Prem 22/23\n  9889, //Greek Prem 22/23\n  9553, //Polish prem 22/23\n  9580, //Swiss prem 22/23\n  8741, //Irish Prem 23\n  9675, //Spanish secunda 22/23\n  9808, //Italy serie B 22/23\n  9656, //Bundesliga 2 22/23\n  9741, //German 3rd tier 22/23\n  9621, //French League 2 22/23\n  9637, //Scottish Championship 22/23\n  9639, //Scottish league 1 22/23\n  9638, //Scottish league 2 22/23\n  9890, //Women's prem 23/24\n  8777, //MLS 23\n  9035, //Brazil prem 23\n  8595, //Argentina prem 23\n  // 6935, //Japan 22\n  9525, //Mexico prem 23/24\n  9972, //National league North and South 22/23\n  10505, //Australian A league 23/24\n  8899, //S Korea 23\n];\n\nlet today;\nlet todayFootyStats;\nlet tomorrow;\nlet tomorrowFootyStats;\nlet date;\nlet dateFootyStats;\nlet value;\nlet yesterday;\nlet yesterdayFootyStats;\nlet lastSaturday;\nlet lastSaturdayFootyStats;\nlet historic;\nlet historicFootyStats;\nlet tomorrowsDate;\nlet yesterdaysDate;\nlet saturdayDate;\nlet historicDate;\nlet string;\nlet dateString;\n\n(async function fetchLeagueData(){\n  let leagueList;\n\n  leagueList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}leagueList`);\n\n  let leagueArray;\n  await leagueList.json().then((leagues) => {\n    leagueArray = Array.from(leagues.data);\n  });\n\n  for (let i = 0; i < leagueArray.length; i++) {\n    const league = leagueArray[i];\n    const name = leagueArray[i].name;\n\n    for (let x = 0; x < league.season.length; x++) {\n      const element = league.season[x];\n\n      if (element.year === 2023 || element.year === 20232024) {\n        if (element.id !== 4340 && element.id !== 6935 && element.id !== 7061) {\n          availableLeagues.push({ name: name, element });\n        }\n      }\n    }\n\n    async function mapOrder(array, order, key) {\n      array.sort(function (a, b) {\n        var A = a.element[key],\n          B = b.element[key];\n\n        if (order.indexOf(A) > order.indexOf(B)) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n      return array;\n    }\n    //leagues ordered by id\n    orderedLeagues = await mapOrder(availableLeagues, leagueOrder, \"id\");\n  }\n  return orderedLeagues;\n})()\n\nexport async function getLeagueList() {\n  let i = 0;\n  date = new Date();\n  string = \"Today\";\n\n  async function incrementDate(num, date) {\n    i = i + num;\n    value = i + num;\n    date.setDate(date.getDate() + num);\n    [date, dateFootyStats] = await calculateDate(date);\n    string = dateFootyStats;\n    await renderButtons();\n    // return date;\n  }\n\n  async function decrementDate(num, date) {\n    i = i - num;\n    console.log(i);\n    if (i > -60) {\n      value = i - num;\n      date.setDate(date.getDate() - num);\n      [date, dateFootyStats] = await calculateDate(date);\n      string = dateFootyStats;\n      dateString = date;\n      await renderButtons();\n    }\n  }\n\n  async function calculateDate(dateString) {\n    const day = dateString.getDate();\n    const month = dateString.getMonth() + 1;\n    const year = dateString.getFullYear();\n    return [`${month}${day}${year}`, `${year}-${month}-${day}`];\n  }\n\n  [today, todayFootyStats] = await calculateDate(new Date());\n\n  tomorrowsDate = new Date();\n  tomorrowsDate.setDate(tomorrowsDate.getDate() + 1);\n  [tomorrow, tomorrowFootyStats] = await calculateDate(tomorrowsDate);\n\n  yesterdaysDate = new Date();\n  yesterdaysDate.setDate(yesterdaysDate.getDate() - 1);\n  [yesterday, yesterdayFootyStats] = await calculateDate(yesterdaysDate);\n\n  saturdayDate = new Date();\n  saturdayDate.setDate(\n    saturdayDate.getDate() - ((saturdayDate.getDay() + 6) % 7)\n  );\n  saturdayDate.setDate(saturdayDate.getDate() - 2);\n  [lastSaturday, lastSaturdayFootyStats] = await calculateDate(saturdayDate);\n\n  historicDate = new Date();\n  historicDate.setDate(\n    historicDate.getDate() - ((historicDate.getDay() + 6) % 7)\n  );\n  historicDate.setDate(historicDate.getDate() - 9);\n  [historic, historicFootyStats] = await calculateDate(historicDate);\n\n  const text =\n    \"Select a day you would like to retrieve fixtures for from the options above\\n A list of games will be returned once the data has loaded\\n Once all fixtures have loaded, click on “Get Predictions” to see XGTipping's forecasted outcomes for every game\\n If a game has completed, the predictions is displayed on the right and the actual result on the left\\n Each individual fixture is tappable/clickable. By doing so, you can access a range of detailed stats, from comparative charts, granular performance measures to previous meetings.\\n All games are subject to the same automated prediction algorithm with the outcome being a score prediction. Factors that determine the tip include the following, amongst others:\\n - Goal differentials\\n - Expected goal differentials \\n - Attack/Defence performance\\n - Form trends over time\\n - Home/Away records\\n - WDL records\\n - Points per game \\n - A range of other comparative factors\\n  –\\n\";\n\n  const text2 =\n    \"A range of tools are available should you wish to use them\\n Build a multi - Use the '+' or '-' buttons to add or remove a game deemed to be one of XGTIpping's highest confidence tips from the day\\n Exotic of the day: A pre-built exotic multi comprising of XGTipping's highest confidence tips\\n BTTS games: Games where both teams to score is deemed a likely outcome\\n Over 2.5 goals tips: Games where over 2.5 goals are most likely to be scored\\n XG tips: Comprises only games where the expected goal differentials between each team are at their greatest. We believe this shows a true disparity in the form of the two opposing teams\\n Tap the 'How to use' option to hide this text\";\n\n  let textJoined = text.concat(text2);\n\n  let newText = textJoined.split(\"\\n\").map((i) => {\n    return <p>{i}</p>;\n  });\n\n  async function renderButtons() {\n    ReactDOM.render(\n      <div className=\"FixtureButtons\">\n        <div className=\"historicResults\">\n          <Button\n            text={\"Last Saturday\"}\n            className=\"HistoricFixturesButton\"\n            onClickEvent={async () =>\n              fixtureList.push(\n                await generateFixtures(\n                  \"lastSaturday\",\n                  lastSaturday,\n                  selectedOdds,\n                  lastSaturdayFootyStats,\n                  false,\n                  today\n                )\n              )\n            }\n          />\n          {/* <Button\n            text={\"Historic predictions\"}\n            className=\"HistoricFixturesButtonRight\"\n            onClickEvent={async () =>\n              fixtureList.push(\n                await generateFixtures(\n                  \"historic\",\n                  historic,\n                  selectedOdds,\n                  historicFootyStats\n                )\n              )\n            }\n          /> */}\n        </div>\n        <Button\n          text={`<`}\n          className=\"FixturesButton\"\n          // onClickEvent={async () =>\n          //   fixtureList.push(\n          //     await generateFixtures(\n          //       \"yesterdaysFixtures\",\n          //       yesterday,\n          //       selectedOdds,\n          //       yesterdayFootyStats\n          //     )\n          //   )\n          // }\n          onClickEvent={async () => await decrementDate(1, date)}\n        />\n        <Button\n          text={dateFootyStats !== undefined ? dateFootyStats : date}\n          className=\"FixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"todaysFixtures\",\n                dateString,\n                selectedOdds,\n                dateFootyStats,\n                false,\n                today\n              )\n            )\n          }\n        />\n        <Button\n          text={`Today`}\n          className=\"FixturesButtonToday\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"todaysFixtures\",\n                today,\n                selectedOdds,\n                todayFootyStats,\n                true,\n                today\n              )\n            )\n          }\n        />\n        <Button\n          text={\"Tomorrow\"}\n          className=\"FixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"tomorrowsFixtures\",\n                tomorrow,\n                selectedOdds,\n                tomorrowFootyStats,\n                true,\n                today\n              )\n            )\n          }\n        />\n      </div>,\n      document.getElementById(\"Buttons\")\n    );\n  }\n\n  ReactDOM.render(\n    <div className=\"FixtureButtons\">\n      <div className=\"historicResults\">\n        <Button\n          text={\"Last Saturday\"}\n          className=\"HistoricFixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"lastSaturday\",\n                lastSaturday,\n                selectedOdds,\n                lastSaturdayFootyStats,\n                false,\n                today\n              )\n            )\n          }\n        />\n        {/* <Button\n          text={\"Historic predictions\"}\n          className=\"HistoricFixturesButtonRight\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"historic\",\n                historic,\n                selectedOdds,\n                historicFootyStats\n              )\n            )\n          }\n        /> */}\n      </div>\n      <Button\n        text={`<`}\n        className=\"FixturesButton\"\n        onClickEvent={async () => await decrementDate(1, date)}\n      />\n      <Button\n        text={`${string}`}\n        className=\"FixturesButtonToday\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"todaysFixtures\",\n              today,\n              selectedOdds,\n              todayFootyStats,\n              true,\n              today\n            )\n          )\n        }\n      />\n      <Button\n        text={\"Tomorrow\"}\n        className=\"FixturesButton\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"tomorrowsFixtures\",\n              tomorrow,\n              selectedOdds,\n              tomorrowFootyStats,\n              true,\n              today\n            )\n          )\n        }\n      />\n      <span>\n        *Not enough data to predict games in the first few gameweeks -\n        predictions displayed as 'x - x'\n      </span>\n    </div>,\n    document.getElementById(\"Buttons\")\n  );\n  ReactDOM.render(\n    <div className=\"OddsRadios\">\n      <OddsRadio value=\"Fractional odds\"></OddsRadio>\n      <OddsRadio value=\"Decimal odds\"></OddsRadio>\n    </div>,\n    document.getElementById(\"Checkbox\")\n  );\n  ReactDOM.render(\n    <Fragment>\n      <Collapsable\n        // className={\"HowToUse\"}\n        buttonText={\"How to use\"}\n        element={newText}\n      />\n    </Fragment>,\n    document.getElementById(\"XGDiff\")\n  );\n\n  // ReactDOM.render(\n  //   <Button\n  //     text={\"Lowest scoring leagues\"}\n  //     className={\"Under25TeamsButton\"}\n  //     onClickEvent={async () => {\n  //       let leagues = await getLowestScoringLeagues();\n  //       const leagueList = [];\n\n  //       leagues.forEach(async (league) =>\n  //         leagueList.push(\n  //           <ul className=\"GlobalStat\">\n  //             <p className=\"TeamName\">\n  //               {league.league} ({league.leagueCountry})\n  //             </p>\n  //             <li>Average goals: {league.averageGoals}</li>\n  //             <li>Under 2.5 goals %: {league.under25Percentage}%</li>\n  //           </ul>\n  //         )\n  //       );\n\n  //       reactDom.render(\n  //         <div>\n  //           <h3>Leagues with the lowest scoring games</h3>\n  //           <ul>{leagueList}</ul>\n  //         </div>,\n  //         document.getElementById(\"Under25Games\")\n  //       );\n  //     }}\n  //   ></Button>,\n  //   document.getElementById(\"Under25Games\")\n  // );\n\n  // ReactDOM.render(\n  //   <Button\n  //     text={\"Highest scoring leagues\"}\n  //     className={\"Over25TeamsButton\"}\n  //     onClickEvent={async () => {\n  //       let leagues = await getHighestScoringLeagues();\n  //       const leagueList = [];\n\n  //       leagues.forEach(async (league) =>\n  //         leagueList.push(\n  //           <ul className=\"GlobalStat\">\n  //             <p className=\"TeamName\">\n  //               {league.league} ({league.leagueCountry})\n  //             </p>\n  //             <li>Average goals: {league.averageGoals}</li>\n  //             <li>Over 2.5 goals %: {league.over25Percentage}%</li>\n  //           </ul>\n  //         )\n  //       );\n\n  //       reactDom.render(\n  //         <div>\n  //           <h3>Leagues with the highest scoring games</h3>\n  //           <ul>{leagueList}</ul>\n  //         </div>,\n  //         document.getElementById(\"Over25Games\")\n  //       );\n  //     }}\n  //   ></Button>,\n  //   document.getElementById(\"Over25Games\")\n  // );\n};\n\nasync function getHighestScoringLeagues() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}over25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    for (let index = 0; index < 215; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        over25Percentage:\n          leagues.data.top_leagues.data[index].seasonOver25Percentage_overall,\n        division: leagues.data.top_leagues.data[index].division,\n        leagueId: leagues.data.top_leagues.data[index].id,\n      };\n      arr.push(league);\n    }\n  });\n\n  const finalArray = arr.filter(\n    (league) =>\n      leagueOrder.find((element) => element === league.leagueId) &&\n      league.averageGoals >= 2.5\n  );\n\n  let sortedArray = finalArray.sort((a, b) => b.averageGoals - a.averageGoals);\n\n  return sortedArray;\n}\n\nasync function getLowestScoringLeagues() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}under25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    for (let index = 0; index < 215; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        under25Percentage:\n          leagues.data.top_leagues.data[index].seasonUnder25Percentage_overall,\n        leagueId: leagues.data.top_leagues.data[index].id,\n      };\n      arr.push(league);\n    }\n  });\n\n  const finalArray = arr.filter(\n    (league) =>\n      leagueOrder.find((element) => element === league.leagueId) &&\n      league.averageGoals < 2.5\n  );\n\n  let sortedArray = finalArray.sort((a, b) => a.averageGoals - b.averageGoals);\n\n  return sortedArray;\n}\n\nconst welcomeTextUnsplitOne = `Welcome to XGTipping. Your go-to resource for all things football, from predictions, comprehensive head to head stats, results, xg scores, odds, league tables, form, and bespoke multi-builders underpinned by expected goal (XG) data.\\n `;\nlet welcomeTextOne = welcomeTextUnsplitOne.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nconst welcomeTextUnsplitTwo = `XGTipping is completely independent and free to use, relying on a donation model to support running costs. For feedback or feature ideas, get in touch at @TippingXg.`;\nlet welcomeTextTwo = welcomeTextUnsplitTwo.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\n\nfunction App() {\n  getLeagueList();\n  return (\n    <>\n      <div className=\"App\">\n        <Header />\n        <a\n          className=\"SocialLink\"\n          href=\"https://www.reddit.com/r/xgtipping/\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          r/xgtipping\n        </a>\n        <div id=\"LoadingContainer\" className=\"LoadingContainer\" />\n        <div id=\"RadioContainer\" className=\"RadioContainer\">\n          <div id=\"RadioText\" />\n          <div id=\"RadioButtons\" />\n        </div>\n        <div id=\"Day\" />\n        <div id=\"Checkbox\" />\n        <div id=\"ExplainerText\" />\n        <div id=\"Loading\" className=\"Loading\"></div>\n        <div id=\"Buttons\" className=\"Buttons\">\n          <ThreeDots className=\"MainLoading\" fill=\"#030061\" />\n          <div>Loading all fixture and form data...</div>\n        </div>\n        <div id=\"GeneratePredictions\" className=\"GeneratePredictions\" />\n        <div id=\"bestPredictions\" className=\"bestPredictions\" />\n        <div id=\"exoticOfTheDay\" className=\"exoticOfTheDay\" />\n        <div id=\"successMeasure2\" />\n        <div id=\"RowOneContainer\" className=\"RowOneContainer\">\n          <div id=\"BTTS\" className=\"RowOne\" />\n          <div id=\"longShots\" className=\"RowOne\" />\n          <div id=\"draws\" className=\"RowOne\" />\n        </div>\n        <div id=\"insights\" />\n        <div id=\"successMeasure\" />\n        <div id=\"tables\" />\n        <div id=\"homeBadge\" />\n        <div id=\"FixtureContainerHeaders\"></div>\n        {/* <StyledKofiButton buttonText=\"Donations\"></StyledKofiButton> */}\n        <div id=\"XGDiff\" />\n        <div id=\"FixtureContainer\">\n          <h6 className=\"WelcomeText\">{welcomeTextOne}</h6>\n          <h6 className=\"GetMatchStatText\">\n            Below is an example of our tips/results overview for you to\n            familiarise yourself with. Get real fixtures using the date buttons,\n            above. When loaded, tap on one to see full match stats\n          </h6>\n          <div className=\"ExplainerContainer\">\n            <span className=\"oddsHomeExplainer\">Home odds</span>\n            <span className=\"emptyHomeTeam\"></span>\n            <span className=\"scoreExplainer\">Result / KO Time</span>\n            <span className=\"predictionExplainer\">Our Prediction</span>\n            <span className=\"emptyAwayTeam\"></span>\n            <span className=\"oddsAwayExplainer\">Away odds</span>\n          </div>\n          <Fixture\n            fixtures={mockedFixtures.matches}\n            // result={false}\n            mock={true}\n            className={\"individualFixture\"}\n          />\n          <div>\n            <h6 className=\"WelcomeText\">{welcomeTextTwo}</h6>\n            <h6 className=\"WelcomeText\">\n              We cover a range of leagues, including\n              <ul className=\"AllLeagues\">\n                <li className=\"League\">Premier League</li>\n                <li className=\"League\">English Football League</li>\n                <li className=\"League\">La Liga</li>\n                <li className=\"League\">Serie A</li>\n                <li className=\"League\">Bundesliga</li>\n                <li className=\"League\">Ligue 1</li>\n                <li className=\"League\">MLS</li>\n                <li className=\"League\">Primeira Liga</li>\n                <li className=\"League\">Loads more...</li>\n              </ul>\n            </h6>\n          </div>\n          <div>\n            <div className=\"DataText\">Raw data from</div>\n            <a\n              className=\"DataLink\"\n              href=\"https://www.footystats.org\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              footystats.org\n            </a>\n          </div>\n          <div className=\"bitcoin\" id=\"bitcoin\">\n            We aim to remain free to use, contributions are always appreciated\n            though:\n            <a\n              href=\"https://www.ko-fi.com/xgtipping\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Donations\n            </a>\n            <span className=\"bitcoinSymbol\">&#x20bf;itcoin address</span>\n            <span className=\"bitcoinAddress\">\n              bc1q7j62txkvhfu0dt3l0s07saze6pjnyzs26wfgp0\n            </span>\n          </div>\n        </div>\n        <div className=\"Social\">\n          <TwitterShareButton\n            url={\"www.xgtipping.com\"}\n            title={\"#XGTipping\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <TwitterIcon size={\"3em\"} round={true} />\n          </TwitterShareButton>\n          <RedditShareButton\n            url={\"www.xgtipping.com\"}\n            title={\"XGTipping\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <RedditIcon size={\"3em\"} round={true} />\n          </RedditShareButton>\n          <FacebookShareButton\n            url={\"www.xgtipping.com\"}\n            quote={\"XGTipping - data-driven football predictions\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <FacebookIcon size={\"3em\"} round={true} />\n          </FacebookShareButton>\n          <WhatsappShareButton\n            url={\"www.xgtipping.com\"}\n            title={\"XGTipping\"}\n            separator=\": \"\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <WhatsappIcon size={\"3em\"} round={true} />\n          </WhatsappShareButton>\n          <TelegramShareButton\n            url={\"XGTipping\"}\n            title={\"XGTipping\"}\n            className=\"ShareButton\"\n            style={{\n              backgroundColor: \"white\",\n              boxShadow: \"none\",\n              padding: \"0.5em\",\n            }}\n          >\n            <TelegramIcon size={\"3em\"} round={true} />\n          </TelegramShareButton>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n// import React from \"react\";\n// import { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\n// import HomePage from \"./components/HomePage\";\n// import TeamPage from \"./components/Team\";\n\n// const App = () => {\n//   return (\n//     <Router>\n//       <Routes>\n//       <Route path=\"/team\" element={<TeamPage />} />\n//         <Route path=\"/\" element={<HomePage />} />\n//         {/* Add more routes */}\n//       </Routes>\n//     </Router>\n//   );\n// };\n\n// export default App;\n","import React, { Component } from \"react\";\nexport var selectedOption = \"5\";\n\nexport var fixtureList = [];\n\nexport class Radio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOption: this.props.value,\n    };\n  }\n\n  handleOptionChange = () => {\n    this.setState({\n      selectedOption: this.props.value,\n    });\n    selectedOption = this.state.selectedOption;\n  };\n\n  render() {\n    return (\n      <section className=\"dark\">\n        <div className={this.props.className}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"lastGames\"\n              checked={this.state.checked}\n              onChange={this.handleOptionChange}\n              data-cy={this.props.value}\n            />\n            <span className=\"design\"></span>\n            <span className=\"text\">Last {this.props.value} games</span>\n          </label>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Radio;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router, Route, Routes, HashRouter } from \"react-router-dom\";\nimport TeamPage from \"./components/Team\";\nimport {Fixture} from \"./components/Fixture\"\nimport { Provider } from \"react-redux\";\nimport store from \"./logic/store\"; // Import your Redux store\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n    <HashRouter>\n        <Routes>\n          <Route path=\"/fixture\" element={<TeamPage />} />\n          <Route path=\"/\" exact element={<App />} />\n          {/* <Route path=\"/\" element={<Fixture />} /> */}\n        </Routes>\n        </HashRouter>\n    </Provider>\n    ,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}