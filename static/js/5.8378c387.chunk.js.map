{"version":3,"sources":["components/StatTable.js","components/PlayerStatTable.js","components/LeagueTable.js"],"names":["formatLabel","key","replace","str","toUpperCase","RankingTable","_ref","rankingStats","statKeys","Object","keys","_useState","useState","_useState2","_slicedToArray","selectedStat","setSelectedStat","console","log","data","_jsxs","className","children","_jsx","FormControl","sx","marginBottom","marginTop","width","backgroundColor","fontSize","marginLeft","marginRight","fontFamily","height","color","borderRadius","borderColor","borderWidth","Select","labelId","id","value","label","onChange","e","target","displayEmpty","map","MenuItem","style","borderCollapse","_ref2","index","_statistics$selectedS","team","statistics","name","matches","Number","isInteger","toFixed","PlayerRankingTable","_fieldMap$selectedSta","statField","leastConceded","mostConceded","player","rawValue","displayValue","appearances","toggleState","setIsOff","upArrow","StyledTableCell2","withStyles","theme","head","padding","paddingTop","paddingBottom","textAlign","margin","body","TableCell","StyledTableCell","StyledTableRow","root","TableRow","styleForm","formIndicator","sofaScoreIds","LeagueTable","props","_useState3","_useState4","mediaItems","setMediaItems","date","Date","Id","derivedMediaId","_step","_iterator","_createForOfIteratorHelper","s","n","done","mapping","hasOwnProperty","err","f","warn","concat","useEffect","_fetchMedia","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","paid","fetch","process","sent","ok","Error","status","json","media","Array","isArray","item","url","thumbnailUrl","title","t0","error","stop","apply","arguments","fetchMedia","singleResult","rows","Teams","i","component","scope","Name","Played","Wins","Draws","Losses","For","Against","GoalDifference","Points","Form","undefined","Key","leagueResults","Results","forEach","result","team_a_xg","team_b_xg","team_a_shots","team_b_shots","team_a_shotsOnTarget","team_b_shotsOnTarget","team_a_dangerous_attacks","team_b_dangerous_attacks","team_a_possession","team_b_possession","team_a_red_cards","team_b_red_cards","odds_ft_1","odds_ft_2","push","Collapsable","classNameButton","buttonText","home_name","homeGoalCount","awayGoalCount","away_name","element","leagueResultsOlder","getTopScorersTeam","find","ID","sorted","_x","_x2","_x3","_sorted","_callee2","league","order","sortedByForm","_context2","sort","a","b","abrupt","LastWeeksResults","LeagueID","length","_props$RankingStats","_props$PlayerRankingS","TableContainer","Paper","Table","TableHead","onClick","TableBody","href","rel","src","alt","RankingStats","topTeams","_Fragment","StatTable","statKey","PlayerRankingStats","topPlayers","TeamOfTheSeason","Stats","seasonAVG_home","seasonAVG_away","seasonBTTSPercentage","seasonOver05Percentage_overall","seasonOver15Percentage_overall","seasonOver25Percentage_overall","seasonOver35Percentage_overall","seasonOver45Percentage_overall","over75CornersPercentage_overall","over85CornersPercentage_overall","over95CornersPercentage_overall","over105CornersPercentage_overall","over115CornersPercentage_overall","over125CornersPercentage_overall","cornersAVG_overall","cardsAVG_overall","top_scorers","known_as","club_team_id","goals_overall","Division"],"mappings":"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","file":"static/js/5.8378c387.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { FormControl, Select, MenuItem } from \"@mui/material\";\n\n// Utility to convert camelCase or mixedCase to \"Proper Case With Spaces\"\nconst formatLabel = (key) =>\n  key\n    .replace(/([A-Z])/g, \" $1\") // Add space before capital letters\n    .replace(/^./, (str) => str.toUpperCase()); // Capitalize first letter\n\nconst RankingTable = ({ rankingStats }) => {\n  const statKeys = Object.keys(rankingStats);\n  const [selectedStat, setSelectedStat] = useState(statKeys[0]);\n    console.log(rankingStats)\n  const handleChange = (e) => {\n    setSelectedStat(e.target.value);\n  };\n\n  const data = rankingStats[selectedStat];\n\n  return (\n    <div className=\"LeagueStatsTable\">\n      <FormControl\n        sx={{\n          marginBottom: 2,\n          marginTop: 1,\n          width: \"90%\",\n          \"& .MuiOutlinedInput-root\": {\n            backgroundColor: \"#f0f0f0\",\n            fontSize: \"1.25em\",\n            width: \"50%\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            fontFamily: \"'Open Sans', sans-serif\",\n            height: \"2em\",\n            color: \"#fe8c00\",\n            borderRadius: 2,\n            \"& .MuiSelect-icon\": {\n              color: \"#fe8c00\",\n            },\n            \"& fieldset\": {\n              borderColor: \"#ccc !important\",\n              borderWidth: \"0px\",\n            },\n            \"&:hover fieldset\": {\n              borderWidth: \"0px\",\n            },\n            \"&.Mui-focused fieldset\": {\n              borderWidth: \"0px\",\n            },\n          },\n        }}\n      >\n        <Select\n          labelId=\"stat-select-label\"\n          id=\"stat-select\"\n          value={selectedStat}\n          label=\"Choose a stat\"\n          onChange={handleChange}\n          displayEmpty\n        >\n          {statKeys.map((key) => (\n            <MenuItem key={key} value={key}>\n              {formatLabel(key)}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <table\n        style={{ marginTop: \"1em\", borderCollapse: \"collapse\", width: \"95%\" }}\n      >\n        <thead>\n          <tr>\n            <th>Rank</th>\n            <th>Team</th>\n            <th>Matches</th>\n            <th>{formatLabel(selectedStat)}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map(({ team, statistics }, index) => (\n            <tr key={team.id}>\n              <td>{index + 1}</td>\n              <td>{team.name}</td>\n              <td>{statistics.matches}</td>\n              <td>\n                {typeof statistics[selectedStat] === \"number\"\n                  ? Number.isInteger(statistics[selectedStat])\n                    ? statistics[selectedStat]\n                    : statistics[selectedStat].toFixed(2)\n                  : statistics[selectedStat] ?? \"N/A\"}\n              </td>{\" \"}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default RankingTable;\n","import { useState } from \"react\";\nimport { FormControl, Select, MenuItem } from \"@mui/material\";\n\n// Utility to convert camelCase or mixedCase to \"Proper Case With Spaces\"\nconst formatLabel = (key) =>\n  key\n    .replace(/([A-Z])/g, \" $1\") // Add space before capital letters\n    .replace(/^./, (str) => str.toUpperCase()); // Capitalize first letter\n\nconst PlayerRankingTable = ({ rankingStats }) => {\n  const statKeys = Object.keys(rankingStats);\n  const [selectedStat, setSelectedStat] = useState(statKeys[0]);\n\n  // <-- Added mapping to handle aliases that point to the same statistics property\n  const fieldMap = {\n    leastConceded: \"goalsConceded\",\n    mostConceded: \"goalsConceded\",\n    // add other aliases here if required\n  };\n  const statField = fieldMap[selectedStat] ?? selectedStat;\n  // -->\n\n  const handleChange = (e) => {\n    setSelectedStat(e.target.value);\n  };\n\n  const data = rankingStats[selectedStat];\n\n  return (\n    <div className=\"LeagueStatsTable\">\n      <FormControl\n        sx={{\n          marginBottom: 2,\n          marginTop: 1,\n          width: \"90%\",\n          \"& .MuiOutlinedInput-root\": {\n            backgroundColor: \"#f0f0f0\",\n            fontSize: \"1.25em\",\n            width: \"50%\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            fontFamily: \"'Open Sans', sans-serif\",\n            height: \"2em\",\n            color: \"#fe8c00\",\n            borderRadius: 2,\n            \"& .MuiSelect-icon\": {\n              color: \"#fe8c00\",\n            },\n            \"& fieldset\": {\n              borderColor: \"#ccc !important\",\n              borderWidth: \"0px\",\n            },\n            \"&:hover fieldset\": {\n              borderWidth: \"0px\",\n            },\n            \"&.Mui-focused fieldset\": {\n              borderWidth: \"0px\",\n            },\n          },\n        }}\n      >\n        <Select\n          labelId=\"stat-select-label\"\n          id=\"stat-select\"\n          value={selectedStat}\n          label=\"Choose a stat\"\n          onChange={handleChange}\n          displayEmpty\n        >\n          {statKeys.map((key) => (\n            <MenuItem key={key} value={key}>\n              {formatLabel(key)}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <table\n        style={{ marginTop: \"1em\", borderCollapse: \"collapse\", width: \"95%\" }}\n      >\n        <thead>\n          <tr>\n            <th>Rank</th>\n            <th>Player</th>\n            <th>Team</th>\n            <th>Games</th>\n            <th>{formatLabel(selectedStat)}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map(({ player, team, statistics }, index) => {\n            const rawValue = statistics?.[statField];\n            const displayValue =\n              typeof rawValue === \"number\"\n                ? Number.isInteger(rawValue)\n                  ? rawValue\n                  : rawValue.toFixed(2)\n                : rawValue ?? \"N/A\";\n\n            return (\n              <tr key={player.id}>\n                <td>{index + 1}</td>\n                <td>{player.name}</td>\n                <td>{team.name}</td>\n                <td>{statistics.appearances}</td>\n                <td>{displayValue}</td>{\" \"}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default PlayerRankingTable;\n","import { useState, useEffect } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport TeamOfTheSeason from \"../components/TeamOfTheSeason\";\nimport StatTable from \"./StatTable\";\nimport PlayerRankingTable from \"./PlayerStatTable\";\nimport { paid } from \"../logic/getScorePredictions\";\n\nexport var toggleState = false;\nexport var setIsOff = false;\n\nconst upArrow = \"\\u{25B2}\";\n\nconst StyledTableCell2 = withStyles((theme) => ({\n  head: {\n    // backgroundColor: \"rgba(226, 226, 226, 1)\",\n    // color: \"white\",\n    padding: \"0.35em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    textAlign: \"left\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    fontSize: \"1.9em\",\n    textAlign: \"left\",\n    fontFamily: \"inherit\",\n    padding: \"0.5em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    // border: \"none\",\n    margin: \"none\",\n    // color: \"#030061\",\n  },\n}))(TableCell);\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    // backgroundColor: \"white\",\n    // color: \"#030061\",\n    padding: \"0.5em\",\n    paddingTop: \"1em\",\n    paddingBottom: \"1em\",\n    textAlign: \"center\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    // backgroundColor: \"#030061\",\n    fontSize: \"1.9em\",\n    textAlign: \"center\",\n    fontFamily: \"inherit\",\n    padding: \"0.35em\",\n    paddingTop: \"1em\",\n    paddingBottom: \"1em\",\n    // border: \"none\",\n    margin: \"none\",\n    // color: \"#030061\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      // backgroundColor: \"#rgba(226, 226, 226, 0.424)\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      // backgroundColor: \"#rgba(226, 226, 226, 1)\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\nfunction styleForm(formIndicator) {\n  let className;\n  if (formIndicator === \"W\") {\n    className = \"winLeague\";\n  } else if (formIndicator === \"D\") {\n    className = \"drawLeague\";\n  } else if (formIndicator === \"L\") {\n    className = \"lossLeague\";\n  }\n  return className;\n}\n\nexport const sofaScoreIds = [\n  { 15050: 17 }, //EPL\n  { 14930: 18 }, //Championship\n  { 14934: 24 }, //League 1\n  { 14935: 25 }, //League 2\n  { 14968: 35 }, //Bundesliga\n  { 14956: 8 }, //La Liga\n  { 14924: 7 }, //Champions League\n  { 13734: 10783 }, //Nations league 24/25\n  { 13878: 357 }, // Club World Cup 25\n  { 16261: 384 }, // Copa Libertadores 25\n  { 15068: 23 }, //Serie A\n  { 13973: 242 }, //MLS\n  { 13967: 13363 }, // USL\n  { 14932: 34 }, //Ligue 1,\n  { 15000: 36 }, //Scottish Prem\n  { 15115: 44 }, //Portugal\n  { 14936: 35 }, //Dutch\n  { 14937: 38 }, //Belgium\n  { 16263: 40 }, //Sweden\n  { 15055: 39 }, //Denmark\n  { 16260: 20 }, //Norway\n  { 14923: 45 }, //Austrian Prem 22/23\n  { 15163: 185 }, //Greek Prem 22/23\n  { 14972: 52 }, //turkey\n  { 15031: 202 }, //Polish prem 22/23\n  { 15047: 215 }, //Swiss prem 22/23\n  { 15053: 170 }, //Croatia 24/25\n  { 14973: 172 }, //Czecjh 24/25\n\n  { 14089: 41 }, // Finland 25\n  { 14951: 218 }, // Ulraine 25\n  { 15065: 210 }, // Serbia 25\n  { 15063: 212 }, // Slovenia 25\n  { 14933: 211 }, // Slovakia 25\n\n  { 13952: 192 }, //Irish Prem\n  { 16036: 136 }, //Aus A League\n  { 12327: 679 }, //Europa\n  { 14904: 17015 }, //Europa Conference\n  { 15066: 54 }, //Spanish secunda 22/23\n  { 15632: 53 }, //Italy serie B 22/23\n  { 14931: 44 }, //Bundesliga 2 22/23\n  { 14954: 182 }, //French League 2 22/23\n  { 14987: 131 }, //Dutch League 2 25\n  { 15061: 206 }, //Scottish Championship 22/23\n  { 14943: 207 }, //Scottish league 1 22/23\n  { 15209: 209 }, //Scottish league 2 22/23\n  { 14236: 13470 }, //Canada 25\n  { 14231: 325 }, //Brazil prem 24\n  { 15746: 155 }, //Argentina prem 23\n  { 15234: 11621 }, //Mexico prem 25\n  { 15657: 173 }, //National league\n  { 15845: 176 }, //National league north 25\n  { 15844: 174 }, //National league south 25  { 14069: 410 }, //S Korea 25,\n  { 16242: 196 }, //Japan 25\n  { 12772: 955 }, //Saudi 24/25\n  { 13964: 11 }, // WC Qual Europe,\n  { 10121: 295 }, // WC Qual SA,\n  // 11426, // WC Qual ConCaf\n  // 12801\n];\n\nexport default function LeagueTable(props) {\n  [toggleState, setIsOff] = useState(false);\n  const [mediaItems, setMediaItems] = useState([]);\n  const date = props.Date; // Ensure this is the correct format\n  const id = props.Id;\n\n  // Derive the mediaId outside of useEffect to make it stable\n  const derivedMediaId = (() => {\n    for (const mapping of sofaScoreIds) {\n      if (mapping.hasOwnProperty(id)) {\n        return mapping[id];\n      }\n    }\n    console.warn(`No matching media ID found for ID: ${id}`);\n    return null;\n  })();\n\n  useEffect(() => {\n    async function fetchMedia() {\n      if (derivedMediaId && paid) {\n        try {\n          const response = await fetch(\n            `${process.env.REACT_APP_EXPRESS_SERVER}getMedia/${derivedMediaId}/${date}`\n          );\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          const data = await response.json();\n\n          if (data.media && Array.isArray(data.media)) {\n            setMediaItems(\n              data.media.map((item) => ({\n                url: item.url,\n                thumbnailUrl: item.thumbnailUrl,\n                title: item.title,\n              }))\n            );\n          } else {\n            setMediaItems([]);\n          }\n        } catch (error) {\n          console.error(\"Error fetching media:\", error);\n          setMediaItems([]);\n        }\n      } else {\n        setMediaItems([]);\n      }\n    }\n\n    fetchMedia();\n  }, [derivedMediaId, date]); // Re-fetch only if derivedMediaId or date changes\n\n  let rows = props.Teams.map((team, i) => (\n    <StyledTableRow key={`${props.Key}row${i}`}>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${i + 1}`}\n      </StyledTableCell>\n      <StyledTableCell2 component=\"th\" scope=\"row\" style={{ width: \"15em\" }}>\n        {`${team.Name}`}\n      </StyledTableCell2>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Played}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Wins}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Draws}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Losses}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.For}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Against}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.GoalDifference}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Points}`}\n      </StyledTableCell>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ textAlign: \"center\" }}\n      >\n        <span className={styleForm(team.Form[0])}>\n          {team.Form[0] !== undefined ? team.Form[0] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[1])}>\n          {team.Form[1] !== undefined ? team.Form[1] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[2])}>\n          {team.Form[2] !== undefined ? team.Form[2] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[3])}>\n          {team.Form[3] !== undefined ? team.Form[3] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[4])}>\n          {team.Form[4] !== undefined ? team.Form[4] : \"\"}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  ));\n\n  const leagueResults = [];\n  let singleResult;\n  if (props.Results) {\n    props.Results.forEach((result) => {\n      singleResult = (\n        <div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_xg}</span>\n            <span className=\"column\">XG</span>\n            <span className=\"column\">{result.team_b_xg}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shots}</span>\n            <span className=\"column\">Shots</span>\n            <span className=\"column\">{result.team_b_shots}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shotsOnTarget}</span>\n            <span className=\"column\">SOT</span>\n            <span className=\"column\">{result.team_b_shotsOnTarget}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_dangerous_attacks}</span>\n            <span className=\"column\">Dangerous Attacks</span>\n            <span className=\"column\">{result.team_b_dangerous_attacks}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_possession}%</span>\n            <span className=\"column\">Possession</span>\n            <span className=\"column\">{result.team_b_possession}%</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_red_cards}</span>\n            <span className=\"column\">Red cards</span>\n            <span className=\"column\">{result.team_b_red_cards}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.odds_ft_1}</span>\n            <span className=\"column\">Odds (pre-match)</span>\n            <span className=\"column\">{result.odds_ft_2}</span>\n          </div>\n        </div>\n      );\n\n      leagueResults.push(\n        <Collapsable\n          classNameButton=\"ResultButton\"\n          buttonText={\n            <div className=\"ResultRowOverview\">\n              <div className=\"columnOverviewHome\">{result.home_name}</div>\n              <span className=\"columnOverviewScore\">\n                {result.homeGoalCount} : {result.awayGoalCount}\n              </span>\n              <div className=\"columnOverviewAway\">{result.away_name}</div>\n            </div>\n          }\n          element={singleResult}\n        />\n      );\n    });\n  }\n\n  const leagueResultsOlder = [];\n  if (props.LastWeeksResults) {\n    props.LastWeeksResults.forEach((result) => {\n      singleResult = (\n        <div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_xg}</span>\n            <span className=\"column\">XG</span>\n            <span className=\"column\">{result.team_b_xg}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shots}</span>\n            <span className=\"column\">Shots</span>\n            <span className=\"column\">{result.team_b_shots}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shotsOnTarget}</span>\n            <span className=\"column\">SOT</span>\n            <span className=\"column\">{result.team_b_shotsOnTarget}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_dangerous_attacks}</span>\n            <span className=\"column\">Dangerous Attacks</span>\n            <span className=\"column\">{result.team_b_dangerous_attacks}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_possession}</span>\n            <span className=\"column\">Possession</span>\n            <span className=\"column\">{result.team_b_possession}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_red_cards}</span>\n            <span className=\"column\">Red cards</span>\n            <span className=\"column\">{result.team_b_red_cards}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.odds_ft_1}</span>\n            <span className=\"column\">Odds (pre-match)</span>\n            <span className=\"column\">{result.odds_ft_2}</span>\n          </div>\n        </div>\n      );\n\n      leagueResultsOlder.push(\n        <Collapsable\n          classNameButton=\"ResultButton\"\n          buttonText={\n            <div className=\"ResultRowOverview\">\n              <div className=\"columnOverviewHome\">{result.home_name}</div>\n              <span className=\"columnOverviewScore\">\n                {result.homeGoalCount} : {result.awayGoalCount}\n              </span>\n              <div className=\"columnOverviewAway\">{result.away_name}</div>\n            </div>\n          }\n          element={singleResult}\n        />\n      );\n    });\n  }\n\n  function getTopScorersTeam(id) {\n    let found = props.Teams.find((team) => team.ID === id);\n    return found.Name;\n  }\n\n  async function sorted(league, value, order) {\n    let sortedByForm;\n    if (order === \"desc\") {\n      sortedByForm = league.sort((a, b) => b[value] - a[value]);\n    } else {\n      sortedByForm = league.sort((a, b) => a[value] - b[value]);\n    }\n    setIsOff(!toggleState);\n    return sortedByForm;\n  }\n\n  if (\n    // props.GamesPlayed > 3 &&\n    props.Teams[0].LeagueID !== 13973 && //MLS\n    props.Teams[0].LeagueID !== 12933 && //UKNorth&South\n    props.Teams[0].LeagueID !== 15002 //Europa\n    // props.Teams[0].LeagueID !== 14924 //ChampionsLeague\n  ) {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table\n            className=\"Table\"\n            aria-label=\"customized table\"\n            key={props.Key}\n            style={{ marginTop: \"2em\", marginBottom: \"0em\" }}\n          >\n            <TableHead>\n              <TableRow>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"Points\", \"desc\")}\n                  >\n                    Pts {upArrow}\n                  </button>\n                </td>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"LastXPoints\", \"desc\")}\n                  >\n                    Last 5 {upArrow}\n                  </button>\n                </td>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n          <ul className=\"gallery-container\">\n            {mediaItems.map((item, index) => (\n              <div key={`media-item-${index}`} className=\"gallery-item-wrapper\">\n                <h6 className=\"MediaTitle\">{item.title}</h6>\n                <li className=\"gallery-item MediaLinks\">\n                  {item.thumbnailUrl ? (\n                    <a\n                      href={item.url}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      <img\n                        src={item.thumbnailUrl}\n                        alt={`Media Thumbnail ${index + 1}`}\n                        className=\"MediaImage\"\n                      />\n                    </a>\n                  ) : (\n                    <a\n                      href={item.url}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      View Media {index + 1}\n                    </a>\n                  )}\n                </li>\n              </div>\n            ))}\n          </ul>\n          {props.RankingStats?.topTeams && (\n            <>\n              <h5>League Rankings by Metric</h5>\n              <StatTable\n                rankingStats={props.RankingStats.topTeams}\n                statKey=\"accurateCrosses\"\n              />\n            </>\n          )}\n          {props.PlayerRankingStats?.topPlayers && (\n            <>\n              <h5>Player Rankings by Metric</h5>\n              <PlayerRankingTable\n                rankingStats={props.PlayerRankingStats.topPlayers}\n                statKey=\"accurateLongBalls\" \n              />\n            </>\n          )}\n          <h5>{`Results from last 2 weeks`}</h5>\n          <div className=\"ResultsList\" id=\"ResultsList\">\n            <ul>{leagueResults}</ul>\n          </div>\n          {derivedMediaId && paid && <TeamOfTheSeason id={derivedMediaId} />}{\" \"}\n          {/* Conditional render */}\n          <div className=\"LeagueStatisticsHeader\">League Statistics</div>\n          <div className=\"LeagueStatistics\">\n            <ul className=\"LeagueStatsColumn\">\n              <li>Average home goals: {props.Stats.seasonAVG_home}</li>\n              <li>Average away goals: {props.Stats.seasonAVG_away}</li>\n              <li>BTTS: {props.Stats.seasonBTTSPercentage}%</li>\n              <li>\n                Over 0.5 goals: {props.Stats.seasonOver05Percentage_overall}%\n              </li>\n              <li>\n                Over 1.5 goals: {props.Stats.seasonOver15Percentage_overall}%\n              </li>\n              <li>\n                Over 2.5 goals: {props.Stats.seasonOver25Percentage_overall}%\n              </li>\n              <li>\n                Over 3.5 goals: {props.Stats.seasonOver35Percentage_overall}%\n              </li>\n              <li>\n                Over 4.5 goals: {props.Stats.seasonOver45Percentage_overall}%\n              </li>\n            </ul>\n            <ul className=\"LeagueStatsColumn\">\n              <li>\n                Over 7.5 corners: {props.Stats.over75CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 8.5 corners: {props.Stats.over85CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 9.5 corners: {props.Stats.over95CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 10.5 corners:{\" \"}\n                {props.Stats.over105CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 11.5 corners:{\" \"}\n                {props.Stats.over115CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 12.5 corners:{\" \"}\n                {props.Stats.over125CornersPercentage_overall}%\n              </li>\n              <li>Corners average: {props.Stats.cornersAVG_overall}</li>\n              <li>Cards average: {props.Stats.cardsAVG_overall}</li>\n            </ul>\n            <ul className=\"TopScorersColumn\">\n              <h4>Top scorers</h4>\n              <li>\n                {props.Stats.top_scorers[0].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[0].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[0].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[1].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[1].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[1].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[2].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[2].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[2].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[3].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[3].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[3].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[4].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[4].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[4].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[5].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[5].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[5].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[6].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[6].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[6].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[7].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[7].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[7].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[8].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[8].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[8].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[9].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[9].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[9].goals_overall}\n              </li>\n            </ul>\n          </div>\n        </TableContainer>\n      );\n    }\n  } else if (props.Teams[0].LeagueID === 4340) {\n    return null;\n  } else if (\n    props.Teams[0].LeagueID === 13973 || //MLS\n    // props.Teams[0].LeagueID === 12933 || //UKNorth&South\n    props.Teams[0].LeagueID === 15002 || //Europa\n    props.Teams[0].LeagueID === 14924 //ChampionsLeague\n  ) {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <>\n          <h2 className=\"DivisionName\">{props.Division}</h2>\n          <TableContainer component={Paper} className=\"StatsTable\">\n            <Table\n              className=\"Table\"\n              aria-label=\"customized table\"\n              key={props.Key}\n              style={{ marginTop: \"2em\", marginBottom: \"0em\" }}\n            >\n              <TableHead>\n                <TableRow>\n                  <StyledTableCell></StyledTableCell>\n                  <StyledTableCell></StyledTableCell>\n                  <StyledTableCell>Pld</StyledTableCell>\n                  <StyledTableCell>W</StyledTableCell>\n                  <StyledTableCell>D</StyledTableCell>\n                  <StyledTableCell>L</StyledTableCell>\n                  <StyledTableCell>GF</StyledTableCell>\n                  <StyledTableCell>GA</StyledTableCell>\n                  <StyledTableCell>GD</StyledTableCell>\n                  <td>\n                    <button\n                      className=\"SortedColumn\"\n                      style={{ textAlign: \"center\" }}\n                      onClick={() => sorted(props.Teams, \"Points\", \"desc\")}\n                    >\n                      Pts {upArrow}\n                    </button>\n                  </td>\n                  <td>\n                    <button\n                      className=\"SortedColumn\"\n                      style={{ textAlign: \"center\" }}\n                      onClick={() => sorted(props.Teams, \"LastXPoints\", \"desc\")}\n                    >\n                      Last 5 {upArrow}\n                    </button>\n                  </td>\n                </TableRow>\n              </TableHead>\n              <TableBody>{rows}</TableBody>\n            </Table>\n            <ul className=\"gallery-container\">\n              {mediaItems.map((item, index) => (\n                <div\n                  key={`media-item-${index}`}\n                  className=\"gallery-item-wrapper\"\n                >\n                  <h6 className=\"MediaTitle\">{item.title}</h6>\n                  <li className=\"gallery-item MediaLinks\">\n                    {item.thumbnailUrl ? (\n                      <a\n                        href={item.url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        <img\n                          src={item.thumbnailUrl}\n                          alt={`Media Thumbnail ${index + 1}`}\n                          className=\"MediaImage\"\n                        />\n                      </a>\n                    ) : (\n                      <a\n                        href={item.url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        View Media {index + 1}\n                      </a>\n                    )}\n                  </li>\n                </div>\n              ))}\n            </ul>\n          </TableContainer>\n        </>\n      );\n    }\n  }\n}\n"],"sourceRoot":""}