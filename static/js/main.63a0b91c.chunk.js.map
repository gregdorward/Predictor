{"version":3,"sources":["components/Header.js","components/Button.js","components/OddsRadio.js","components/KofiButton.js","logic/getForm.js","components/createBadge.js","components/CollapsableElement.js","components/createStatsDiv.js","components/Div.js","components/HeadToHead.js","components/Table.js","logic/getTeamStats.js","components/Increment.js","logic/getScorePredictions.js","logic/getBTTSPotential.js","logic/getStats.js","components/Fixture.js","logic/getFixtures.js","components/LeagueTable.js","components/radio.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Button","props","id","text","variant","type","onClick","onClickEvent","selectedOdds","OddsRadio","handleOptionChange","setState","value","state","this","name","checked","onChange","Component","StyledKofiButton","color","title","kofiID","applyColour","a","colour","getForm","match","teams","homeId","awayId","fixtureForm","i","team","fetch","process","response","json","then","formData","console","log","data","season_format","length","CreateBadge","src","image","ClassName","alt","flexShrink","Collapsable","isOpen","handleOnClick","prevState","style","buttonText","Stats","styleForm","formIndicator","formRun","last5","homeOrAway","goals","conceeded","possession","XG","XGConceded","sot","dangerousAttacks","leaguePosition","homeOrAwayLeaguePosition","winPercentage","toFixed","drawPercentage","lossPercentage","ppg","formTrend","Div","HeadToHead","stadium","lastGameStadiumName","lastGameDate","lastGameHomeTeam","lastGameHomeGoals","lastGameAwayGoals","lastGameAwayTeam","secondToLastGameStadiumName","secondToLastGameDate","secondToLastGameHomeTeam","secondToLastGameHomeGoals","secondToLastGameAwayGoals","secondToLastGameAwayTeam","matches","homeTeam","homeWins","awayTeam","awayWins","draws","averageGoals","bestHomeOdds","bestAwayOdds","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","white","padding","textAlign","fontSize","fontFamily","border","margin","body","TableCell","StyledTableRow","root","TableRow","CustomizedTables","TableContainer","component","Paper","Table","TableHead","TableBody","scope","align","o05Stat","o05Odds","u05Odds","o15Stat","o15Odds","u15Odds","o25Stat","o25Odds","u25Odds","o35Stat","o35Odds","u35Odds","BTTSStat","BTTSOdds","BTTSOddsNo","getTeamStats","home","away","identifier","matchArr","h2h","previous_matches_ids","oddsComparisonHomeArray","oddsComparisonAwayArray","odds_comparison","sortedHomeOdds","Object","entries","sort","b","sortedAwayOdds","bestHomeOddsProvider","bestAwayOddsProvider","previous_matches_results","totalMatches","date_unix","lastMatch","secondToLastMatch","previousMatch","game","previousMatchDetails","unixTimestamp","dateObject","Date","date","getDate","getMonth","getFullYear","secondToPreviousMatch","secondToPreviousMatchDetails","dateObject2","date2","ReactDOM","render","stadium_name","team_a_wins","team_b_wins","draw","betting_stats","avg_goals","homeGoalCount","awayGoalCount","home_name","away_name","over05Percentage","over15Percentage","o15Forecast","o15_potential","odds_ft_over05","odds_ft_under05","odds_ft_over15","odds_ft_under15","over25Percentage","o25Forecast","o25_potential","odds_ft_over25","odds_ft_under25","over35Percentage","o35Forecast","o35_potential","odds_ft_over35","odds_ft_under35","bttsPercentage","BTTSForecast","btts_potential","odds_btts_yes","odds_btts_no","CornersStat","CornersForecast","corners_potential","CornersOdds","odds_corners_over_105","document","getElementById","finalHomeGoals","finalAwayGoals","rawFinalHomeGoals","rawFinalAwayGoals","homeOdds","awayOdds","incrementValue","riskLevel","Increment","IncrementItem","getNewTips","allTips","DecreaseItem","show","getBTTSPotential","allForm","index","homeGoals","awayGoals","findIndex","item","teamName","homeBTTS","BTTSPercentage","awayBTTS","homeG","awayG","homeGoalsScoredAverage","ScoredAverage","awayGoalsScoredAverage","homeGoalsConceededAverage","ConcededAverage","awayGoalsConceededAverage","homeXG","awayXG","homeXGAgainst","XGAgainstAverage","awayXGAgainst","combinedBTTS","bttsFraction","status","btts","bttsChosen","Headers","append","winDAAverage","lossDAAverage","winOddsAverage","lossOddsAverage","winPossessionAverage","lossPossessionAverage","winLast10PPGAverage","lossLast10PPGAverage","winSOTAverage","lossSOTAverage","winXGForAverage","lossXGForAverage","winXGAgainstAverage","lossXGAgainstAverage","totalGoals","totalGoals2","drawPredictions","homePredictions","awayPredictions","homeOutcomes","awayOutcomes","sumStatDAWin","sumStatDALoss","sumStatPossessionWin","sumStatPossessionLoss","sumStatSOTWin","sumStatSOTLoss","sumStatPPGLast10Win","sumStatPPGLast10Loss","sumOddsWin","sumOddsLoss","sumXGForWin","sumXGForLoss","sumXGAgainstWin","sumXGAgainstLoss","allWinOutcomes","allLossOutcomes","getPointsFromLastX","lastX","pointsAddition","points","forEach","compareStat","statOne","statTwo","stat1","parseFloat","stat2","statOneNotZero","statTwoNotZero","gap","result","homePoints","awayPoints","getOverOrUnderAchievingResult","overUnderAchievingSum","correction","getClinicalRating","form","dangerousAttackConversion","rating","score","getPointsDifferential","pointsHomeAvg","pointsAwayAvg","diff","differential","getPointWeighting","pointsDiff","pointsDiffWeightingHome","pointsDiffWeightingAway","compareFormTrend","threeGameAverage","fiveGameAverage","sixGameAverage","tenGameAverage","recentGoalDiff","distantGoalDiff","getPointAverage","pointTotal","games","compareTeams","homeForm","awayForm","overUnderAchievingSumComparison","homePointsToAdd","awayPointsToAdd","AverageShotsOnTarget","sotComparisonHOrA","AverageShotsOnTargetOverall","sotComparison","CleanSheetPercentage","CleanSheetPercentageComparison","dangerousAttackConversionComparison","goalsPerDangerousAttack","goalsPerDangerousAttackComparison","AverageDangerousAttacks","dangerousAttacksComparisonHOrA","AverageDangerousAttacksOverall","dangerousAttacksComparison","XGWeighting","XGdifferentialComparison","formTrendScore","formTrendScoreComparison","last10Points","last10PointsComparison","twoGameAverage","twoGameAverageComparison","fiveGameAverageComparison","tenGameAverageComparison","SeasonPPG","seasonPPGComparison","AttackingPotency","attackingPotencyComparison","AveragePossession","AveragePossessionComparisonHOrA","AveragePossessionOverall","AveragePossessionComparison","awayPositionAwayOnly","homePositionHomeOnly","awayPosition","homePosition","positionComparison","undefined","WinPercentage","winPercentageComparison","winPercH","winPercA","drawPercH","DrawPercentage","drawPercA","homeTeamWinPercentage","awayTeamWinPercentage","homeTeamDrawPercentage","awayTeamDrawPercentage","LossPercentage","lossPercentageComparison","awayTeamLossPercentage","homeTeamLossPercentage","OddsComparison","homeOrAwayAverage","homeOrAwayAverageComparison","calculation","last2Points","roundCustom","num","otherForm","wholeNumber","Math","floor","remainder","overUnderAchievingSumAttack","overUnderAchievingSumDefence","ceil","calculateScore","divider","calculate","find","PlayedHome","PlayedAway","lastGame","LastFiveForm","previousToLastGame","last2","last3","last5Points","last6Points","LastSixForm","LastTenForm","last3Points","lastHomeOrAwayPoints","ScoredOverall","ConcededOverall","ScoredAverageShortTerm","ScoredAverageLongTermHomeOrAway","ConcededAverageShortTerm","ConcededAverageLongTermHomeOrAway","longTermAverageGoals","longTermAverageConceeded","expectedGoals","expectedGoalsConceeded","expectedGoalsLongTerm","expectedConceededGoalsLongTerm","ScoredAverageShortAndLongTerm","expectedGoalsShortAndLongTerm","conceededAverageShortAndLongTerm","finishingScore","goalieRating","goalOverOrUnderAchieving","concededOverOrUnderAchieving","forecastedXG","forecastedXGConceded","goalsBasedOnAverages","XGdifferential","XGOverall","XGAgainstAvgOverall","improving","homeRaw","awayRaw","formHome","formAway","overOrUnderAttack","trueFormAttack","overOrUnderDefence","trueFormDefence","homeTenGameAvg","awayTenGameAvg","pointsDiff10","last10WeightingHome","last10WeightingAway","clinicalRating","clinicalScore","oddsWeightingHome","oddsWeightingAway","weighting","weightingSplitHome","abs","weightingSplitAway","homeWeighting","awayWeighting","XGdifferentialValue","XGdifferentialValueRaw","teamWithHigherXG","homeTeamHomePositionRaw","awayTeamAwayPositionRaw","homeRawPosition","awayRawPosition","AttacksHome","AttacksAverage","teamComparisonScore","homeGoalDiff","awayGoalDiff","goalsDifferential","goalCalcHomeOnly","goalCalcAwayOnly","goalCalcHomeShortTerm","goalCalcAwayShortTerm","goalCalcHomeShortAndLongTerm","goalCalcAwayShortAndLongTerm","factorOneHome","factorOneAway","scoreDiff","homeComparisonWeighting","awayComparisonWeighting","homeAdvantage","awayAdvantage","experimentalHomeGoals","experimentalAwayGoals","difference","round","prediction","includeInMultis","winner","outcome","predictionOutcome","doubleChancePredictionOutcome","total","parseInt","total2","getSuccessMeasure","fixtures","sumProfit","investment","exactScores","successCount","profit","netProfit","exactScore","operand","ROI","exactScoreHitRate","successRate","allTipsSorted","price","combinations","gamesInExotic","exoticStake","exoticString","testBool","resultValue","newArray","bestBets","longShotTips","XGDiffTips","exoticArray","bttsArray","accumulatedOdds","predictions","array","tip","indexOf","push","rawOdds","renderTips","getScorePrediction","day","mocked","mock","Promise","all","map","goalsA","goalsB","unroundedGoalsA","unroundedGoalsB","fractionHome","predictionObject","odds","comparisonScore","rawComparisonScore","goalDifferential","experimentalCalc","fractionAway","sortByCalcA","sortByCalcB","homeDoubleChance","longShotPredictionObject","decimalOdds","doubleChanceOutcome","awayDoubleChance","getCoverBetMaxReturns","XGPredictionObject","otherTeam","Fixture","getAccumulatorPrice","priceArray","minAccSize","stake","perms","getUniquePermutations","j","arr","permLength","permutations","newArr","slice","splice","twoDimArrayUnion","arr1","arr2","duplicate","k","NewlineText","split","str","bttsOutcome","toggle","display","getLastGameResult","five","six","ten","gameStats","time","homeFiveGameAverage","homeSixGameAverage","homeTenGameAverage","awayFiveGameAverage","awaySixGameAverage","awayTenGameAverage","homeFormTrend","awayFormTrend","homeLastGame","awayLastGame","formDataHome","Last5","AverageGoals","AverageConceeded","AverageXG","AverageXGConceded","LeaguePosition","Last5PPG","PPG","formDataAway","gameCount","rawPosition","homeTeamHomePosition","awayTeamAwayPosition","GetDivider","fixture","matchStatus","isPrediction","drawOdds","renderLeagueName","leagueName","renderTable","leagueIndex","SingleFixture","pointsAverageDiffBool","pointsAverageDiff","createStatsDiv","homeBadge","awayBadge","newText","List","paddingTop","paddingBottom","LeagueTable","rows","Teams","Position","Name","Played","Wins","Draws","Losses","For","Against","GoalDifference","Points","Form","Key","getTopScorersTeam","ID","LeagueID","seasonAVG_home","seasonAVG_away","seasonBTTSPercentage","seasonOver05Percentage_overall","seasonOver15Percentage_overall","seasonOver25Percentage_overall","seasonOver35Percentage_overall","seasonOver45Percentage_overall","over75CornersPercentage_overall","over85CornersPercentage_overall","over95CornersPercentage_overall","over105CornersPercentage_overall","over115CornersPercentage_overall","over125CornersPercentage_overall","cornersAVG_overall","cardsAVG_overall","top_scorers","known_as","club_team_id","goals_overall","fixtureResponse","fixtureArray","oddslib","require","config","league","leagueID","leagueInstance","lastFiveFormHome","lastFiveFormAway","lastSixFormHome","lastSixFormAway","lastTenFormHome","lastTenFormAway","formRunHome","formRunAway","leagueGames","leagueArray","leagueIdArray","toLocaleDateString","currentDay","month","year","tomorrowsDate","setDate","tomorrowDay","tomorrowMonth","tomorrowYear","yesterdaysDate","yesterdayDay","yesterdayMonth","yesterdayYear","d","getDay","saturdayDay","saturdayMonth","saturdayYear","historicDate","historicDay","historicMonth","historicYear","saturday","historic","yesterday","today","tomorrow","tableArray","generateTables","currentLeagueId","specific_tables","groups","league_table","all_matches_table_overall","currentTeam","cleanName","matchesPlayed","seasonWins_overall","seasonDraws_overall","seasonLosses_overall","seasonGoals","seasonConceded_home","seasonConceded_away","seasonGoalDifference","table","wdl_record","rawForm","replace","toUpperCase","Array","from","leagueStatistics","stats","statistics","createFixture","mockBool","roundedHomeOdds","roundedAwayOdds","homeFraction","to","precision","awayFraction","error","bttsOdds","roundedBTTSOdds","homeTeamWinsPercentage","homeTeamLossesPercentage","homeTeamDrawsPercentage","awayTeamWinsPercentage","awayTeamLossesPercentage","awayTeamDrawsPercentage","generateFixtures","radioState","url","method","headers","Accept","storedForm","formArray","isFormStored","isStoredLocally","height","orderedLeagues","element","leaguePositions","leagues","x","string","stringHome","all_matches_table_home","stringAway","all_matches_table_away","position","homeFormName","awayFormName","homeSeasonWinPercentage","seasonWins","awaySeasonWinPercentage","homeSeasonLossPercentage","seasonLosses_home","awaySeasonLossPercentage","seasonLosses_away","homeSeasonDrawPercentage","seasonDraws","awaySeasonDrawPercentage","homeSeasonMatchesPlayed","awaySeasonMatchesPlayed","ppg_overall","filter","competition_id","getPrefix","teamPositionPrefix","previousLeagueName","toLocaleString","hour","minute","odds_ft_1","odds_ft_2","odds_ft_x","odds_doublechance_1x","odds_doublechance_x2","homeID","awayID","homeTeamInfo","awayTeamInfo","homeTeaminLeague","awayTeaminLeague","teamPositionHome","teamPositionHomeTable","teamPositionAwayTable","homeTeamWinPercentageHome","awayTeamWinPercentageAway","homeTeamLossPercentageHome","awayTeamLossPercentageAway","homeTeamDrawPercentageHome","awayTeamDrawPercentageAway","teamPositionAway","homePrefix","homePrefixHomeTable","awayPrefix","awayPrefixAwayTable","homeSeasonPPG","awaySeasonPPG","homeTeaminHomeLeague","awayTeaminAwayLeague","homeFormString5","additional_info","formRun_overall","awayFormString5","homeFormString6","awayFormString6","homeFormString10","awayFormString10","homeFormRun","formRun_home","awayFormRun","formRun_away","xg_for_avg_overall","xg_for_avg_home","seasonScoredNum_overall","seasonScoredAVG_home","seasonMatchesPlayed_home","seasonMatchesPlayed_away","seasonConcededNum_overall","seasonConcededAVG_home","xg_against_avg_overall","xg_against_avg_home","seasonCSPercentage_home","possessionAVG_overall","possessionAVG_home","shotsOnTargetAVG_overall","shotsOnTargetAVG_home","dangerous_attacks_avg_overall","seasonPPG_home","attacks_avg_home","AttacksAway","attacks_avg_away","dangerous_attacks_avg_home","homeAttackAdvantage","homeDefenceAdvantage","seasonBTTSPercentage_home","xg_for_avg_away","seasonScoredAVG_away","seasonConcededAVG_away","xg_against_avg_away","seasonCSPercentage_away","possessionAVG_away","shotsOnTargetAVG_away","seasonPPG_away","dangerous_attacks_avg_away","seasonBTTSPercentage_away","home_image","away_image","homePpg","home_ppg","homeFormColour","awayPpg","away_ppg","awayFormColour","expectedGoalsHomeToDate","team_a_xg_prematch","expectedGoalsAwayToDate","team_b_xg_prematch","JSON","stringify","selectedOption","fixtureList","availableLeagues","getHighestScoringTeams","teamsList","top_fixtures","country","avg_potential","getMatchTime","teamCountry","timestamp","finalArray","bestO25Bets","sortedArray","getLowestScoringTeams","bestU25Bets","unixTime","leagueList","mapOrder","order","key","A","B","season","leagueOrder","teamList","reactDom","App","href","target","rel","TwitterShareButton","boxShadow","TwitterIcon","size","FacebookShareButton","quote","FacebookIcon","RedditShareButton","RedditIcon","WhatsappShareButton","separator","WhatsappIcon","TelegramShareButton","TelegramIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.63a0b91c.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n      <h1 className=\"HeaderContainer\">XG Tipping</h1>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nexport function Button(props) {\n  return (\n    <div id=\"Button\">\n      <button data-cy={props.text} variant=\"primary\" type=\"button\" onClick={props.onClickEvent} className={props.className}>\n        {props.text}\n      </button>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nexport var selectedOdds = \"Fractional\";\n\n\nexport class OddsRadio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOdds: this.props.value,\n    };\n  }\n\n  handleOptionChange = () => {\n    this.setState({\n      selectedOdds: this.props.value,\n    });\n    selectedOdds = this.state.selectedOdds;\n  };\n\n  render() {\n    return (\n      <section className=\"dark2\">\n        <div className={this.props.className}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"odds\"\n              checked={this.state.checked}\n              onChange={this.handleOptionChange}\n              data-cy={this.props.value}\n            />\n            <span className=\"design\"></span>\n            <span className=\"text\">{this.props.value} odds</span>\n          </label>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default OddsRadio;","import KofiButton from \"kofi-button\"\n\nexport const StyledKofiButton = () => {\n  return (\n    <KofiButton className=\"DonateButton\" color=\"#E8E8E8\" title=\"Donate\" kofiID=\"H2H0AX25Z\" />\n  )\n}","export async function applyColour(value) {\n  let colour;\n  switch (true) {\n    case value < 0.49:\n      colour = \"#CD5C5C\";\n      break;\n    case value >= 0.5 && value <= 1:\n      colour = \"#F08080\";\n      break;\n    case value >= 1.01 && value <= 1.25:\n      colour = \"#FFA07A\";\n      break;\n    case value >= 1.26 && value <= 1.5:\n      colour = \"#FFFFE0\";\n      break;\n    case value >= 1.51 && value <= 2:\n      colour = \"#CFDBC5\";\n      break;\n    case value >= 2.01 && value <= 2.5:\n      colour = \"#8AA37B\";\n      break;\n    case value >= 2.51 && value <= 3:\n      colour = \"#3F6826\";\n      break;\n    default:\n      colour = \"white\";\n      break;\n  }\n  return colour;\n}\n\nexport async function getForm(match) {\n  const teams = [match.homeId, match.awayId];\n  const fixtureForm = [];\n\n  for (let i = 0; i < teams.length; i++) {\n    const team = teams[i];\n\n    let response = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}form/${team}`\n    );\n    await response.json().then((formData) => {\n      console.log(formData.data[0].season_format)\n      fixtureForm[i] = formData;\n      console.log(fixtureForm[i])\n    });\n  }\n  return fixtureForm;\n}\n","import React from \"react\";\n\nexport function CreateBadge(props) {\n  return (\n    <img\n      src={`https://cdn.footystats.org/img/${props.image}`}\n      className={props.ClassName}\n      alt={props.alt}\n      flex-shrink={props.flexShrink}\n    />\n  );\n}\n","import React, { Component } from \"react\";\nimport EscapeOutside from \"react-escape-outside\";\n\nclass Collapsable extends Component {\n  state = { isOpen: false };\n\n  handleOnClick = () => {\n    this.setState((prevState) => ({\n      isOpen: !prevState.isOpen,\n    }));\n  };\n\n  render() {\n    return (\n      <div style={this.props.style}>\n        <button className={this.props.className} onClick={this.handleOnClick}>{this.props.buttonText}</button>\n        {this.state.isOpen && (\n          <EscapeOutside className=\"Collapsable\">\n            {this.props.text}\n          </EscapeOutside>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Collapsable;\n","import React, { Fragment } from \"react\";\n\nfunction Stats(props) {\n  function styleForm(formIndicator) {\n    let className;\n    if (formIndicator === \"W\") {\n      className = \"win\";\n    } else if (formIndicator === \"D\") {\n      className = \"draw\";\n    } else if (formIndicator === \"L\") {\n      className = \"loss\";\n    }\n    return className;\n  }\n\n\n  if(props.formRun){\n    return (\n      <Fragment>\n        <ul className={props.className} style={props.style}>\n          <li className=\"FormHeader\">Form (most recent on right)</li>\n          <li key={`last5`}>\n            <span className={styleForm(props.last5[0])}>{props.last5[0]}</span>\n            <span className={styleForm(props.last5[1])}>{props.last5[1]}</span>\n            <span className={styleForm(props.last5[2])}>{props.last5[2]}</span>\n            <span className={styleForm(props.last5[3])}>{props.last5[3]}</span>\n            <span className={styleForm(props.last5[4])}>{props.last5[4]}</span>\n          </li>\n          <li className=\"FormHeader\">{props.homeOrAway} form (most recent on right)</li>\n          <li key={`last5${props.homeOrAway}`}>\n          <span className={styleForm(props.formRun[0])}>{props.formRun[0]}</span>\n          <span className={styleForm(props.formRun[1])}>{props.formRun[1]}</span>\n            <span className={styleForm(props.formRun[2])}>{props.formRun[2]}</span>\n            <span className={styleForm(props.formRun[3])}>{props.formRun[3]}</span>\n            <span className={styleForm(props.formRun[4])}>{props.formRun[4]}</span>\n          </li>\n          <li\n            key=\"TeamScored\"\n            className=\"TeamScored\"\n            data-cy={props.name + \"teamScored\"}\n          >\n            {`Avg goals scored - ${props.goals}`}\n          </li>\n          <li\n            key=\"TeamConceeded\"\n            className=\"TeamConceeded\"\n            data-cy={props.name + \"teamConceded\"}\n          >\n            {`Avg goals conceeded - ${props.conceeded}`}\n          </li>\n          <li\n            key=\"TeamPossession\"\n            className=\"TeamPossession\"\n            data-cy={props.name + \"teamPossession\"}\n          >\n            {`Avg possession - ${props.possession}%`}\n          </li>\n          <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name + \"teamXG\"}>\n            {`Avg XG - ${props.XG}`}\n          </li>\n          <li\n            key=\"TeamXGConceded\"\n            className=\"TeamXGConceded\"\n            data-cy={props.name + \"teamXGConceded\"}\n          >\n            {`Avg XG conceded - ${props.XGConceded}`}\n          </li>\n          <li\n            key=\"AverageSOT\"\n            className=\"AverageSOT\"\n            data-cy={props.name + \"averageSOT\"}\n          >\n            {`Avg shots on target - ${props.sot}`}\n          </li>\n          <li\n            key=\"DangerousAttacks\"\n            className=\"DangerousAttacks\"\n            data-cy={props.name + \"dangerousAttacks\"}\n          >\n            {`Avg dangerous attacks - ${props.dangerousAttacks}`}\n          </li>\n          <li\n            key=\"LeaguePosition\"\n            className=\"LeaguePosition\"\n            data-cy={props.name + \"leaguePosition\"}\n          >\n            {`League position - ${props.leaguePosition}`}\n          </li>\n  \n          <li\n            key=\"LeaguePositionHomeOrAway\"\n            className=\"LeaguePositionHomeOrAway\"\n            data-cy={props.name + \"LeaguePositionHomeOrAway\"}\n          >\n            {`Position (${props.homeOrAway} only) - ${props.homeOrAwayLeaguePosition}`}\n          </li>\n          <li\n            key=\"WinPercentage\"\n            className=\"WinPercentage\"\n            data-cy={props.name + \"WinPercentage\"}\n          >\n            {`${props.homeOrAway} wins - ${props.winPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"DrawPercentage\"\n            className=\"DrawPercentage\"\n            data-cy={props.name + \"DrawPercentage\"}\n          >\n            {`${props.homeOrAway} draws - ${props.drawPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"LossPercentage\"\n            className=\"LossPercentage\"\n            data-cy={props.name + \"LossPercentage\"}\n          >\n            {`${props.homeOrAway} losses - ${props.lossPercentage.toFixed(1)}%`}\n          </li>\n          <li key=\"PPG\" className=\"PPG\" data-cy={props.name + \"PPG\"}>\n            {`Season PPG - ${props.ppg}`}\n          </li>\n          <li\n            key=\"FormTrend10a\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 10 PPG: ${props.formTrend[0]}`}\n          </li>\n          <li\n            key=\"FormTrend10b\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 6 PPG: ${props.formTrend[1]}`}\n          </li>\n          <li\n            key=\"FormTrend10c\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 5 PPG: ${props.formTrend[2]}.`}\n          </li>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  } else {\n    return (\n      <Fragment>\n        <ul className={props.className} style={props.style}>\n          <li className=\"FormHeader\">Form (most recent on right)</li>\n          <li key=\"last5\">\n            <span className={styleForm(props.last5[0])}>{props.last5[0]}</span>\n            <span className={styleForm(props.last5[1])}>{props.last5[1]}</span>\n            <span className={styleForm(props.last5[2])}>{props.last5[2]}</span>\n            <span className={styleForm(props.last5[3])}>{props.last5[3]}</span>\n            <span className={styleForm(props.last5[4])}>{props.last5[4]}</span>\n          </li>\n          <li\n            key=\"TeamScored\"\n            className=\"TeamScored\"\n            data-cy={props.name + \"teamScored\"}\n          >\n            {`Avg goals scored - ${props.goals}`}\n          </li>\n          <li\n            key=\"TeamConceeded\"\n            className=\"TeamConceeded\"\n            data-cy={props.name + \"teamConceded\"}\n          >\n            {`Avg goals conceeded - ${props.conceeded}`}\n          </li>\n          <li\n            key=\"TeamPossession\"\n            className=\"TeamPossession\"\n            data-cy={props.name + \"teamPossession\"}\n          >\n            {`Avg possession - ${props.possession}%`}\n          </li>\n          <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name + \"teamXG\"}>\n            {`Avg XG - ${props.XG}`}\n          </li>\n          <li\n            key=\"TeamXGConceded\"\n            className=\"TeamXGConceded\"\n            data-cy={props.name + \"teamXGConceded\"}\n          >\n            {`Avg XG conceded - ${props.XGConceded}`}\n          </li>\n          <li\n            key=\"AverageSOT\"\n            className=\"AverageSOT\"\n            data-cy={props.name + \"averageSOT\"}\n          >\n            {`Avg shots on target - ${props.sot}`}\n          </li>\n          <li\n            key=\"DangerousAttacks\"\n            className=\"DangerousAttacks\"\n            data-cy={props.name + \"dangerousAttacks\"}\n          >\n            {`Avg dangerous attacks - ${props.dangerousAttacks}`}\n          </li>\n          <li\n            key=\"LeaguePosition\"\n            className=\"LeaguePosition\"\n            data-cy={props.name + \"leaguePosition\"}\n          >\n            {`League position - ${props.leaguePosition}`}\n          </li>\n  \n          <li\n            key=\"LeaguePositionHomeOrAway\"\n            className=\"LeaguePositionHomeOrAway\"\n            data-cy={props.name + \"LeaguePositionHomeOrAway\"}\n          >\n            {`Position (${props.homeOrAway} only) - ${props.homeOrAwayLeaguePosition}`}\n          </li>\n          <li\n            key=\"WinPercentage\"\n            className=\"WinPercentage\"\n            data-cy={props.name + \"WinPercentage\"}\n          >\n            {`${props.homeOrAway} wins - ${props.winPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"DrawPercentage\"\n            className=\"DrawPercentage\"\n            data-cy={props.name + \"DrawPercentage\"}\n          >\n            {`${props.homeOrAway} draws - ${props.drawPercentage.toFixed(1)}%`}\n          </li>\n          <li\n            key=\"LossPercentage\"\n            className=\"LossPercentage\"\n            data-cy={props.name + \"LossPercentage\"}\n          >\n            {`${props.homeOrAway} losses - ${props.lossPercentage.toFixed(1)}%`}\n          </li>\n          <li key=\"PPG\" className=\"PPG\" data-cy={props.name + \"PPG\"}>\n            {`Season PPG - ${props.ppg}`}\n          </li>\n          <li\n            key=\"FormTrend10a\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 10 PPG: ${props.formTrend[0]}`}\n          </li>\n          <li\n            key=\"FormTrend10b\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 6 PPG: ${props.formTrend[1]}`}\n          </li>\n          <li\n            key=\"FormTrend10c\"\n            className=\"FormTrend\"\n            data-cy={props.name + \"FormTrend10\"}\n          >\n            {`Last 5 PPG: ${props.formTrend[2]}.`}\n          </li>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  }\n \n}\n\nexport default Stats;\n","import React from \"react\";\n\nfunction Div(props) {\n  return (\n    <div id={props.id} onClick={props.onClick} style={props.style} className={props.className}>{props.text}</div>\n  );\n}\n\nexport default Div;\n","import React from \"react\";\n\nfunction HeadToHead(props) {\n\n  return (\n    <ul className={props.className} style={props.style}>\n      <li key=\"Stadium\" className=\"Stadium\" data-cy={props.name + \"Stadium\"}>\n        {`Venue - ${props.stadium}`}\n      </li>\n      <li key=\"lastGameDetail\" className=\"LastGameDetail\" data-cy={props.name + \"Last\"}>\n        {`Last meeting - ${props.lastGameStadiumName} ${props.lastGameDate}`}\n      </li>\n      <li key=\"lastGame\" className=\"LastGame\" data-cy={props.name + \"LastGame\"}>\n        {`${props.lastGameHomeTeam} ${props.lastGameHomeGoals} - ${props.lastGameAwayGoals} ${props.lastGameAwayTeam}`}\n      </li>\n      <li key=\"secondToLastGameDetail\" className=\"secondToLastGameDetail\" data-cy={props.name + \"secondToLast\"}>\n        {`Second to last meeting - ${props.secondToLastGameStadiumName} ${props.secondToLastGameDate}`}\n      </li>\n      <li key=\"secondToLastGame\" className=\"LastGame\" data-cy={props.name + \"LastGame\"}>\n        {`${props.secondToLastGameHomeTeam} ${props.secondToLastGameHomeGoals} - ${props.secondToLastGameAwayGoals} ${props.secondToLastGameAwayTeam}`}\n      </li>\n      <li key=\"h2h\" className=\"h2h\" data-cy={props.name + \"h2h\"}>\n        {`Matches played: ${props.matches}`}\n      </li>\n      <li key=\"homeWins\" className=\"homeWins\" data-cy={props.name + \"homeWins\"}>\n        {`${props.homeTeam} wins: ${props.homeWins}`}\n      </li>\n      <li key=\"awayWins\" className=\"awayWins\" data-cy={props.name + \"awayWins\"}>\n        {`${props.awayTeam} wins: ${props.awayWins}`}\n      </li>\n      <li key=\"draws\" className=\"draws\" data-cy={props.name + \"draws\"}>\n        {`Draws: ${props.draws}`}\n      </li>\n      <li key=\"averageGoals\" className=\"averageGoals\" data-cy={props.name + \"averageGoals\"}>\n        {`Average goals in fixture: ${props.averageGoals}`}\n      </li>\n      <li key=\"bestHomeOdds\" className=\"bestHomeOdds\" data-cy={props.name + \"bestHomeOdds\"}>\n        {`Best oods for home win @: ${props.bestHomeOdds}`}\n      </li>\n      <li key=\"bestAwayOdds\" className=\"bestAwayOdds\" data-cy={props.name + \"bestAwayOdds\"}>\n        {`Best oods for away win @: ${props.bestAwayOdds}`}\n      </li>\n    </ul>\n  );\n}\n\nexport default HeadToHead;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#172A3A\",\n    color: theme.palette.common.white,\n    padding: 10,\n    textAlign: \"center\",\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    border: \"none\",\n    margin: \"none\"\n  },\n  body: {\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    padding: 10,\n    color: \"white\",\n    border: \"none\",\n    margin: \"none\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#294A66\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#172B3A\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\n\nexport default function CustomizedTables(props) {\n\n\n  return (\n    <TableContainer component={Paper} className=\"StatsTable\">\n      <Table aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Stat</StyledTableCell>\n            <StyledTableCell>H2H history</StyledTableCell>\n            <StyledTableCell>Odds (yes)</StyledTableCell>\n            <StyledTableCell>Odds (no)</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        <StyledTableRow key=\"O05\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 0.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o05Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o05Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u05Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O15\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 1.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o15Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o15Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u15Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O25\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 2.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o25Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o25Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u25Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O35\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 3.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o35Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o35Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u35Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"BTTS\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              BTTS %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.BTTSStat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSOdds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSOddsNo}</StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport HeadToHead from \"../components/HeadToHead\";\nimport { Fragment } from \"react\";\nimport CustomizedTables from \"../components/Table\";\n\nexport async function getTeamStats(id, home, away) {\n  console.log(\"EXECUTED\");\n  let identifier = id;\n  let bestHomeOdds;\n  let bestHomeOddsProvider;\n  let bestAwayOdds;\n  let bestAwayOddsProvider\n  \n  let match = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}match/${identifier}`\n  );\n   await match.json().then(async (match) => {\n    console.log(match.data)\n    let matchArr = match.data.h2h.previous_matches_ids\n    let previousMatchDetails;\n    let secondToPreviousMatchDetails;\n\n    let oddsComparisonHomeArray = []\n    let oddsComparisonAwayArray = []\n\n    if(match.data.odds_comparison){\n    oddsComparisonHomeArray = match.data.odds_comparison[\"FT Result\"][1];\n    oddsComparisonAwayArray = match.data.odds_comparison[\"FT Result\"][2];\n\n    let sortedHomeOdds = Object.entries(oddsComparisonHomeArray).sort((a, b) => b[1] - a[1])\n    let sortedAwayOdds = Object.entries(oddsComparisonAwayArray).sort((a, b) => b[1] - a[1])\n\n    bestHomeOddsProvider = sortedHomeOdds[0][0]\n    bestHomeOdds = sortedHomeOdds[0][1]\n    bestAwayOddsProvider = sortedAwayOdds[0][0]\n    bestAwayOdds = sortedAwayOdds[0][1]\n    } else {\n      bestHomeOddsProvider = \"N/A\"\n      bestHomeOdds = \"N/A\"\n      bestAwayOddsProvider = \"N/A\"\n      bestAwayOdds = \"N/A\"\n    }\n\n    if(match.data.h2h.previous_matches_results.totalMatches > 0){\n      matchArr.sort((a, b) => b.date_unix - a.date_unix);\n      let lastMatch = matchArr[0].id\n      let secondToLastMatch = matchArr[1].id\n\n      let previousMatch = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}match/${lastMatch}`\n      );\n      let dateObject;\n      let date;\n      let date2;\n      await previousMatch.json().then(async (game) => {\n        previousMatchDetails = game.data\n        console.log(previousMatchDetails)\n        const unixTimestamp = previousMatchDetails.date_unix;\n        const milliseconds = unixTimestamp * 1000;\n        dateObject = new Date(milliseconds);\n         date = `${dateObject.getDate()}/${dateObject.getMonth()+1}/${dateObject.getFullYear()}`\n\n         let secondToPreviousMatch = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}match/${secondToLastMatch}`\n        );\n        let dateObject2;\n        await secondToPreviousMatch.json().then((game) => {\n          secondToPreviousMatchDetails = game.data\n          console.log(secondToPreviousMatchDetails)\n          const unixTimestamp = secondToPreviousMatchDetails.date_unix;\n          const milliseconds = unixTimestamp * 1000;\n          dateObject2 = new Date(milliseconds);\n          date2 = `${dateObject2.getDate()}/${dateObject2.getMonth()+1}/${dateObject2.getFullYear()}`\n        })\n  \n      })\n\n      ReactDOM.render(\n        <Fragment>\n          <h3>Fixture history</h3>\n          <HeadToHead\n            className={\"PreviousMatchStats\"}\n            homeTeam={home}\n            awayTeam={away}\n            stadium={match.data.stadium_name}\n            matches={match.data.h2h.previous_matches_results.totalMatches}\n            homeWins={match.data.h2h.previous_matches_results.team_a_wins}\n            awayWins={match.data.h2h.previous_matches_results.team_b_wins}\n            draws={match.data.h2h.previous_matches_results.draw}\n            averageGoals={match.data.h2h.betting_stats.avg_goals}\n            bestHomeOdds = {`${bestHomeOddsProvider} - ${bestHomeOdds}`}\n            bestAwayOdds = {`${bestAwayOddsProvider} - ${bestAwayOdds}`}\n            lastGameStadiumName={previousMatchDetails.stadium_name}\n            lastGameHomeGoals={previousMatchDetails.homeGoalCount}\n            lastGameAwayGoals={previousMatchDetails.awayGoalCount}\n            lastGameHomeTeam={previousMatchDetails.home_name}\n            lastGameAwayTeam={previousMatchDetails.away_name}\n            lastGameDate={date}\n            secondToLastGameStadiumName={secondToPreviousMatchDetails.stadium_name}\n            secondToLastGameHomeGoals={secondToPreviousMatchDetails.homeGoalCount}\n            secondToLastGameAwayGoals={secondToPreviousMatchDetails.awayGoalCount}\n            secondToLastGameHomeTeam={secondToPreviousMatchDetails.home_name}\n            secondToLastGameAwayTeam={secondToPreviousMatchDetails.away_name}\n            secondToLastGameDate={date2}\n          ></HeadToHead>\n          <CustomizedTables\n            o05Stat={match.data.h2h.betting_stats.over05Percentage}\n            o15Stat={match.data.h2h.betting_stats.over15Percentage}\n            o15Forecast={match.data.o15_potential}\n            o05Odds={match.data.odds_ft_over05}\n            u05Odds={match.data.odds_ft_under05}\n            o15Odds={match.data.odds_ft_over15}\n            u15Odds={match.data.odds_ft_under15}\n            o25Stat={match.data.h2h.betting_stats.over25Percentage}\n            o25Forecast={match.data.o25_potential}\n            o25Odds={match.data.odds_ft_over25}\n            u25Odds={match.data.odds_ft_under25}\n            o35Stat={match.data.h2h.betting_stats.over35Percentage}\n            o35Forecast={match.data.o35_potential}\n            o35Odds={match.data.odds_ft_over35}\n            u35Odds={match.data.odds_ft_under35}\n            BTTSStat={match.data.h2h.betting_stats.bttsPercentage}\n            BTTSForecast={match.data.btts_potential}\n            BTTSOdds={match.data.odds_btts_yes}\n            BTTSOddsNo={match.data.odds_btts_no}\n            CornersStat={\"–\"}\n            CornersForecast={match.data.corners_potential}\n            CornersOdds={match.data.odds_corners_over_105}\n          />\n        </Fragment>,\n        document.getElementById(`H2HStats${identifier}`)\n      );\n    } else {\n      ReactDOM.render(\n        <Fragment>\n          <h3>Fixture history</h3>\n          <HeadToHead\n            className={\"PreviousMatchStats\"}\n            homeTeam={home}\n            awayTeam={away}\n            stadium={match.data.stadium_name}\n            matches={match.data.h2h.previous_matches_results.totalMatches}\n            homeWins={match.data.h2h.previous_matches_results.team_a_wins}\n            awayWins={match.data.h2h.previous_matches_results.team_b_wins}\n            draws={match.data.h2h.previous_matches_results.draw}\n            averageGoals={match.data.h2h.betting_stats.avg_goals}\n            lastGameStadiumName=\"N/A\"\n            lastGameHomeGoals=\"previous\"\n            lastGameAwayGoals=\"match\"\n            lastGameHomeTeam=\"No\"\n            lastGameAwayTeam=\"data\"\n            lastGameDate=\"\"\n            secondToLastGameStadiumName=\"N/A\"\n            secondToLastGameHomeGoals=\"previous\"\n            secondToLastGameAwayGoals=\"match\"\n            secondToLastGameHomeTeam=\"No\"\n            secondToLastGameAwayTeam=\"data\"\n            secondToLastGameDate=\"\"\n          ></HeadToHead>\n          <CustomizedTables\n            o15Stat={match.data.h2h.betting_stats.over15Percentage}\n            o15Forecast={match.data.o15_potential}\n            o15Odds={match.data.odds_ft_over15}\n            o25Stat={match.data.h2h.betting_stats.over25Percentage}\n            o25Forecast={match.data.o25_potential}\n            o25Odds={match.data.odds_ft_over25}\n            BTTSStat={match.data.h2h.betting_stats.bttsPercentage}\n            BTTSForecast={match.data.btts_potential}\n            BTTSOdds={match.data.odds_btts_yes}\n            CornersStat={\"–\"}\n            CornersForecast={match.data.corners_potential}\n            CornersOdds={match.data.odds_corners_over_105}\n          />\n        </Fragment>,\n        document.getElementById(`H2HStats${identifier}`)\n      );\n    }\n\n\n  });\n}\n","import React, { Component, Fragment } from \"react\";\nimport { getNewTips } from \"../logic/getScorePredictions\"\nimport {allTips} from \"../logic/getScorePredictions\"\nexport var incrementValue = 3;\n\nexport var riskLevel = 10;\n\nclass Increment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      incrementValue,\n      riskLevel,\n      show: true,\n    };\n  }\n\n  IncrementItem = () => {\n    if(incrementValue > 1){\n    this.setState({ incrementValue: this.state.incrementValue - 1 });\n    this.setState({ riskLevel: this.state.riskLevel - 1 });\n    incrementValue = (this.state.incrementValue - 1);\n    riskLevel = this.state.riskLevel - 1;\n    }\n    getNewTips(allTips)\n  };\n  DecreaseItem = () => {\n    if(incrementValue > 0){\n      this.setState({ incrementValue: this.state.incrementValue + 1 });\n      this.setState({ riskLevel: this.state.riskLevel + 1 });\n      incrementValue = (this.state.incrementValue + 1);\n      riskLevel = this.state.riskLevel + 1;\n    }\n    getNewTips(allTips)\n  };\n\n  render() {\n    return (\n      <Fragment>\n          <button className=\"IncrementButton\" onClick={this.IncrementItem}>\n            -\n          </button>\n          <button className=\"DecrementButton\" onClick={this.DecreaseItem}>\n            +\n          </button>\n      </Fragment>\n\n    );\n  }\n}\n\nexport default Increment;\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { matches, diff } from \"./getFixtures\";\nimport { Fixture } from \"../components/Fixture\";\nimport Div from \"../components/Div\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { allForm } from \"../logic/getFixtures\";\nimport Increment from \"../components/Increment\";\nimport { incrementValue } from \"../components/Increment\";\nimport { getBTTSPotential } from \"../logic/getBTTSPotential\";\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nlet finalHomeGoals;\nlet finalAwayGoals;\nlet rawFinalHomeGoals;\nlet rawFinalAwayGoals;\nlet homeOdds;\nlet awayOdds;\nlet totalGoals = 0;\nlet totalGoals2 = 0;\nlet numberOfGames = 0;\nlet drawPredictions = 0;\nlet homePredictions = 0;\nlet awayPredictions = 0;\nlet allOutcomes = 0;\nlet homeOutcomes = 0;\nlet awayOutcomes = 0;\nlet winAmount = 0;\nlet lossAmount = 0;\nlet sumStatDAWin = 0;\nlet sumStatDALoss = 0;\nlet sumStatPossessionWin = 0;\nlet sumStatPossessionLoss = 0;\nlet sumStatSOTWin = 0;\nlet sumStatSOTLoss = 0;\nlet sumStatPPGLast10Win = 0;\nlet sumStatPPGLast10Loss = 0;\nlet sumOddsWin = 0;\nlet sumOddsLoss = 0;\nlet sumXGForWin = 0;\nlet sumXGForLoss = 0;\nlet sumXGAgainstWin = 0;\nlet sumXGAgainstLoss = 0;\nlet allWinOutcomes = 0;\nlet allLossOutcomes = 0;\nlet allDrawOutcomes = 0;\nlet winDAAverage;\nlet lossDAAverage;\nlet winOddsAverage;\nlet lossOddsAverage;\nlet winPossessionAverage;\nlet lossPossessionAverage;\nlet winLast10PPGAverage;\nlet lossLast10PPGAverage;\nlet winSOTAverage;\nlet lossSOTAverage;\nlet winXGForAverage;\nlet lossXGForAverage;\nlet winXGAgainstAverage;\nlet lossXGAgainstAverage;\n\nexport var renderPredictions;\n\nexport function getPointsFromLastX(lastX) {\n  let points = 0;\n  let pointsAddition;\n\n  lastX.forEach((game) => {\n    switch (true) {\n      case game === \"W\":\n        pointsAddition = 3;\n        break;\n      case game === \"D\":\n        pointsAddition = 1;\n        break;\n      case game === \"L\":\n        pointsAddition = 0;\n        break;\n      default:\n        break;\n    }\n\n    points = points + pointsAddition;\n  });\n  return points;\n}\n\nexport async function compareStat(statOne, statTwo) {\n  let stat1 = parseFloat(statOne);\n  let stat2 = parseFloat(statTwo);\n  let result;\n  let homePoints;\n  let awayPoints;\n  let gap;\n  let statOneNotZero = stat1 + 0.1;\n  let statTwoNotZero = stat2 + 0.1;\n\n  if (stat1 > stat2) {\n    gap = statOneNotZero / statTwoNotZero;\n  } else if (stat1 < stat2) {\n    gap = statTwoNotZero / statOneNotZero;\n  } else {\n    gap = 0;\n  }\n\n  if (gap >= 2) {\n    switch (true) {\n      case stat1 === stat2:\n        result = 0;\n        homePoints = 0;\n        awayPoints = 0;\n        break;\n      case stat1 > stat2:\n        result = 0.2;\n        homePoints = 2;\n        awayPoints = -0.2;\n        break;\n      case stat1 < stat2:\n        result = -0.2;\n        homePoints = -0.2;\n        awayPoints = 2;\n        break;\n      default:\n        break;\n    }\n  } else if (gap >= 1.6 && gap < 2) {\n    switch (true) {\n      case stat1 === stat2:\n        result = 0;\n        homePoints = 0;\n        awayPoints = 0;\n        break;\n      case stat1 > stat2:\n        result = 0.15;\n        homePoints = 1;\n        awayPoints = 0;\n        break;\n      case stat1 < stat2:\n        result = -0.15;\n        homePoints = 0;\n        awayPoints = 1;\n        break;\n      default:\n        break;\n    }\n  } else if (gap >= 1.3 && gap < 1.6) {\n    switch (true) {\n      case stat1 === stat2:\n        result = 0;\n        homePoints = 0;\n        awayPoints = 0;\n        break;\n      case stat1 > stat2:\n        result = 0.1;\n        homePoints = 1;\n        awayPoints = 0;\n        break;\n      case stat1 < stat2:\n        result = -0.1;\n        homePoints = 0;\n        awayPoints = 1;\n        break;\n      default:\n        break;\n    }\n  } else if (gap >= 1.1 && gap < 1.3) {\n    switch (true) {\n      case stat1 === stat2:\n        result = 0;\n        homePoints = 0;\n        awayPoints = 0;\n        break;\n      case stat1 > stat2:\n        result = 0.05;\n        homePoints = 1;\n        awayPoints = 0;\n        break;\n      case stat1 < stat2:\n        result = -0.05;\n        homePoints = 0;\n        awayPoints = 1;\n        break;\n      default:\n        break;\n    }\n  }\n  // else if (gap > 1.2 && gap < 1.3) {\n  //   switch (true) {\n  //     case stat1 === stat2:\n  //       result = 0;\n  //       homePoints = 0;\n  //       awayPoints = 0;\n  //       break;\n  //     case stat1 > stat2:\n  //       result = 0.5;\n  //       homePoints = 0.2;\n  //       awayPoints = 0.1;\n  //       break;\n  //     case stat1 < stat2:\n  //       result = -0.5;\n  //       homePoints = 0.1;\n  //       awayPoints = 0.2;\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  // }\n  else {\n    result = 0;\n    homePoints = 0;\n    awayPoints = 0;\n  }\n\n  return [result, homePoints, awayPoints];\n}\n\nexport async function getOverOrUnderAchievingResult(\n  index,\n  overUnderAchievingSum\n) {\n  let result;\n  let correction;\n\n  switch (true) {\n    case index === 0:\n      switch (true) {\n        case overUnderAchievingSum <= -1.2:\n          result = \"Overachieving drastically\";\n          correction = -0.4;\n          break;\n        case overUnderAchievingSum < -0.45 && overUnderAchievingSum > -1.2:\n          result = \"Overachieving\";\n          correction = -0.2;\n          break;\n        case overUnderAchievingSum < -0.1 && overUnderAchievingSum >= -0.45:\n          result = \"Overachieving slightly\";\n          correction = -0.1;\n          break;\n        case overUnderAchievingSum > 0.1 && overUnderAchievingSum <= 0.45:\n          result = \"Underachieving slightly\";\n          correction = 0.1;\n          break;\n        case overUnderAchievingSum > 0.45 && overUnderAchievingSum < 1.2:\n          result = \"Underachieving\";\n          correction = 0.2;\n          break;\n        case overUnderAchievingSum >= 1.2:\n          result = \"Underachieving drastically\";\n          correction = 0.4;\n          break;\n        default:\n          result = \"onPar\";\n          correction = 0;\n          break;\n      }\n\n      break;\n\n    case index === 1:\n      switch (true) {\n        case overUnderAchievingSum <= -0.9:\n          result = \"Overachieving drastically\";\n          correction = -0.4;\n          break;\n        case overUnderAchievingSum < -0.45 && overUnderAchievingSum > -0.9:\n          result = \"Overachieving\";\n          correction = -0.2;\n          break;\n        case overUnderAchievingSum < -0.1 && overUnderAchievingSum >= -0.45:\n          result = \"Overachieving slightly\";\n          correction = -0.1;\n          break;\n        case overUnderAchievingSum > 0.1 && overUnderAchievingSum <= 0.45:\n          result = \"Underachieving slightly\";\n          correction = 0.1;\n          break;\n        case overUnderAchievingSum > 0.45 && overUnderAchievingSum < 0.9:\n          result = \"Underachieving\";\n          correction = 0.2;\n          break;\n        case overUnderAchievingSum >= 0.9:\n          result = \"Underachieving drastically\";\n          correction = 0.4;\n          break;\n        default:\n          result = \"onPar\";\n          correction = 0;\n          break;\n      }\n\n      break;\n\n    case index === 2:\n      switch (true) {\n        case overUnderAchievingSum <= -1:\n          result = \"Overachieving drastically\";\n          correction = -0.4;\n          break;\n        case overUnderAchievingSum < -0.45 && overUnderAchievingSum > -1:\n          result = \"Overachieving\";\n          correction = -0.2;\n          break;\n        case overUnderAchievingSum < -0.2 && overUnderAchievingSum >= -0.45:\n          result = \"Overachieving slightly\";\n          correction = -0.1;\n          break;\n        case overUnderAchievingSum > 0.2 && overUnderAchievingSum <= 0.45:\n          result = \"Underachieving slightly\";\n          correction = 0.1;\n          break;\n        case overUnderAchievingSum > 0.45 && overUnderAchievingSum < 1:\n          result = \"Underachieving\";\n          correction = 0.2;\n          break;\n        case overUnderAchievingSum >= 1:\n          result = \"Underachieving drastically\";\n          correction = 0.4;\n          break;\n        default:\n          result = \"onPar\";\n          correction = 0;\n          break;\n      }\n\n      break;\n    default:\n      break;\n  }\n  return [result, correction];\n}\n\nexport async function getClinicalRating(form) {\n  let rating;\n  let score;\n  switch (true) {\n    case form.dangerousAttackConversion <= 15:\n      rating = \"excellent\";\n      score = 0.8;\n      break;\n\n    case form.dangerousAttackConversion > 15 &&\n      form.dangerousAttackConversion <= 20:\n      rating = \"great\";\n      score = 0.9;\n      break;\n\n    case form.dangerousAttackConversion > 20 &&\n      form.dangerousAttackConversion <= 25:\n      rating = \"very good\";\n      score = 0.95;\n      break;\n\n    case form.dangerousAttackConversion > 25 &&\n      form.dangerousAttackConversion <= 32.5:\n      rating = \"good\";\n      score = 0.98;\n      break;\n\n    case form.dangerousAttackConversion > 30 &&\n      form.dangerousAttackConversion <= 35:\n      rating = \"above average\";\n      score = 0.99;\n      break;\n\n    case form.dangerousAttackConversion > 35 &&\n      form.dangerousAttackConversion <= 40:\n      rating = \"average\";\n      score = 1;\n      break;\n\n    case form.dangerousAttackConversion > 40 &&\n      form.dangerousAttackConversion <= 45:\n      rating = \"below average\";\n      score = 1.01;\n      break;\n\n    case form.dangerousAttackConversion > 45 &&\n      form.dangerousAttackConversion <= 50:\n      rating = \"poor\";\n      score = 1.05;\n      break;\n\n    case form.dangerousAttackConversion > 50 &&\n      form.dangerousAttackConversion <= 55:\n      rating = \"very poor\";\n      score = 1.1;\n      break;\n\n    case form.dangerousAttackConversion > 55 &&\n      form.dangerousAttackConversion <= 60:\n      rating = \"terrible\";\n      score = 1.2;\n      break;\n\n    case form.dangerousAttackConversion > 60:\n      rating = \"awful\";\n      score = 1.3;\n      break;\n\n    default:\n      break;\n  }\n\n  return [rating, score];\n}\n\nexport async function getPointsDifferential(pointsHomeAvg, pointsAwayAvg) {\n  const differential = await diff(pointsHomeAvg, pointsAwayAvg);\n  return parseFloat(differential);\n}\n\nexport async function getPointWeighting(pointsDiff) {\n  let pointsDiffWeightingHome;\n  let pointsDiffWeightingAway;\n\n  switch (true) {\n    case pointsDiff >= 2.5:\n      pointsDiffWeightingHome = 0.6;\n      pointsDiffWeightingAway = -0.1;\n      break;\n    case pointsDiff >= 2 && pointsDiff < 2.5:\n      pointsDiffWeightingHome = 0.4;\n      pointsDiffWeightingAway = -0.1;\n      break;\n    case pointsDiff >= 1.5 && pointsDiff < 2:\n      pointsDiffWeightingHome = 0.3;\n      pointsDiffWeightingAway = -0.1;\n      break;\n    case pointsDiff >= 1 && pointsDiff < 1.5:\n      pointsDiffWeightingHome = 0.2;\n      pointsDiffWeightingAway = 0;\n      break;\n    case pointsDiff >= 0.5 && pointsDiff < 1:\n      pointsDiffWeightingHome = 0.1;\n      pointsDiffWeightingAway = 0;\n      break;\n    case pointsDiff > -0.5 && pointsDiff < 0.5:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n      break;\n    case pointsDiff <= -0.5 && pointsDiff > -1:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0.1;\n      break;\n    case pointsDiff <= -1 && pointsDiff > -1.5:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0.2;\n      break;\n    case pointsDiff <= -1.5 && pointsDiff > -2:\n      pointsDiffWeightingHome = -0.1;\n      pointsDiffWeightingAway = 0.3;\n      break;\n    case pointsDiff <= -2 && pointsDiff > -2.5:\n      pointsDiffWeightingHome = -0.1;\n      pointsDiffWeightingAway = 0.4;\n      break;\n    case pointsDiff <= -2.5:\n      pointsDiffWeightingHome = -0.1;\n      pointsDiffWeightingAway = 0.6;\n      break;\n    default:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n  }\n  return [pointsDiffWeightingHome, pointsDiffWeightingAway];\n}\n\nexport async function compareFormTrend(\n  threeGameAverage,\n  fiveGameAverage,\n  sixGameAverage,\n  tenGameAverage,\n  recentGoalDiff,\n  distantGoalDiff\n) {\n  let score;\n\n  if (fiveGameAverage > 2.5) {\n    switch (true) {\n      case fiveGameAverage > tenGameAverage:\n        score = 20;\n        break;\n      case fiveGameAverage === tenGameAverage:\n        score = 19;\n        break;\n      case fiveGameAverage < tenGameAverage:\n        score = 15;\n        break;\n      default:\n        break;\n    }\n  } else if (fiveGameAverage <= 2.5 && fiveGameAverage > 2) {\n    switch (true) {\n      case fiveGameAverage > tenGameAverage:\n        score = 17;\n        break;\n      case fiveGameAverage === tenGameAverage:\n        score = 16;\n        break;\n      case fiveGameAverage < tenGameAverage:\n        score = 14;\n        break;\n      default:\n        break;\n    }\n  } else if (fiveGameAverage <= 2 && fiveGameAverage > 1.5) {\n    switch (true) {\n      case fiveGameAverage > tenGameAverage:\n        score = 14;\n        break;\n      case fiveGameAverage === tenGameAverage:\n        score = 13;\n        break;\n      case fiveGameAverage < tenGameAverage:\n        score = 11;\n        break;\n      default:\n        break;\n    }\n    if (fiveGameAverage + 1 < tenGameAverage) {\n      score = score - 2;\n    }\n  } else if (fiveGameAverage <= 1.5 && fiveGameAverage > 1) {\n    switch (true) {\n      case fiveGameAverage > tenGameAverage:\n        score = 11;\n        break;\n      case fiveGameAverage === tenGameAverage:\n        score = 10;\n        break;\n      case fiveGameAverage < tenGameAverage:\n        score = 8;\n        break;\n      default:\n        break;\n    }\n    if (fiveGameAverage + 1 < tenGameAverage) {\n      score = score - 2;\n    }\n  } else if (fiveGameAverage <= 1 && fiveGameAverage > 0.5) {\n    switch (true) {\n      case fiveGameAverage > tenGameAverage:\n        score = 8;\n        break;\n      case fiveGameAverage === tenGameAverage:\n        score = 7;\n        break;\n      case fiveGameAverage < tenGameAverage:\n        score = 3;\n        break;\n      default:\n        break;\n    }\n    if (fiveGameAverage + 1 < tenGameAverage) {\n      score = score - 2;\n    }\n  } else if (fiveGameAverage <= 0.5) {\n    switch (true) {\n      case fiveGameAverage > tenGameAverage:\n        score = 3;\n        break;\n      case fiveGameAverage === tenGameAverage:\n        score = 2;\n        break;\n      case fiveGameAverage < tenGameAverage:\n        score = 1;\n        break;\n      default:\n        break;\n    }\n    // if (fiveGameAverage + 1 < tenGameAverage) {\n    //   score = 1;\n    // }\n  }\n\n  // if (fiveGameAverage > 1) {\n  //   if (\n  //     threeGameAverage >= sixGameAverage &&\n  //     sixGameAverage >= tenGameAverage\n  //   ) {\n  //     improving = true;\n  //   } else if (recentGoalDiff < distantGoalDiff) {\n  //     improving = false;\n  //   } else if (recentGoalDiff - 1 > distantGoalDiff) {\n  //     improving = true;\n  //   } else {\n  //     improving = false;\n  //   }\n  // }\n\n  return score;\n}\n\nexport async function getPointAverage(pointTotal, games) {\n  return pointTotal / games;\n}\n\nexport async function compareTeams(homeForm, awayForm, match) {\n  let sotComparisonHOrA;\n  let sotComparison;\n  let CleanSheetPercentageComparison;\n  let dangerousAttackConversionComparison;\n  let goalsPerDangerousAttackComparison;\n  let dangerousAttacksComparisonHOrA;\n  let dangerousAttacksComparison;\n  let XGdifferentialComparison;\n  let formTrendScoreComparison;\n  let last10PointsComparison;\n  let twoGameAverageComparison;\n  let fiveGameAverageComparison;\n  let tenGameAverageComparison;\n  let seasonPPGComparison;\n  let attackingPotencyComparison;\n  let AveragePossessionComparisonHOrA;\n  let AveragePossessionComparison;\n  let positionComparison;\n  let winPercentageComparison;\n  let lossPercentageComparison;\n  let OddsComparison;\n  let homeOrAwayAverageComparison;\n  let overUnderAchievingSumComparison;\n\n  let homePoints = 0;\n  let awayPoints = 0;\n  let homePointsToAdd;\n  let awayPointsToAdd;\n\n  if (\n    homeForm.overUnderAchievingSum < -0.5 ||\n    awayForm.overUnderAchievingSum < -0.5 ||\n    homeForm.overUnderAchievingSum > 0.5 ||\n    awayForm.overUnderAchievingSum > 0.5\n  ) {\n    [overUnderAchievingSumComparison, homePointsToAdd, awayPointsToAdd] =\n      await compareStat(\n        parseFloat(homeForm.overUnderAchievingSum),\n        parseFloat(awayForm.overUnderAchievingSum)\n      );\n    homePoints = homePoints + homePointsToAdd;\n    awayPoints = awayPoints + awayPointsToAdd;\n  } else {\n    overUnderAchievingSumComparison = 0;\n  }\n\n  [sotComparisonHOrA, homePointsToAdd, awayPointsToAdd] = await compareStat(\n    homeForm.AverageShotsOnTarget,\n    awayForm.AverageShotsOnTarget\n  );\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [sotComparison, homePointsToAdd, awayPointsToAdd] = await compareStat(\n    homeForm.AverageShotsOnTargetOverall,\n    awayForm.AverageShotsOnTargetOverall\n  );\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [CleanSheetPercentageComparison, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(\n      homeForm.CleanSheetPercentage,\n      awayForm.CleanSheetPercentage\n    );\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [dangerousAttackConversionComparison, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(\n      awayForm.dangerousAttackConversion,\n      homeForm.dangerousAttackConversion\n    );\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [goalsPerDangerousAttackComparison, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(\n      homeForm.goalsPerDangerousAttack,\n      awayForm.goalsPerDangerousAttack\n    );\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [dangerousAttacksComparisonHOrA, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(\n      homeForm.AverageDangerousAttacks,\n      awayForm.AverageDangerousAttacks\n    );\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [dangerousAttacksComparison, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(\n      homeForm.AverageDangerousAttacksOverall,\n      awayForm.AverageDangerousAttacksOverall\n    );\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [XGdifferentialComparison, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(homeForm.XGWeighting, awayForm.XGWeighting);\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [formTrendScoreComparison, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(homeForm.formTrendScore, awayForm.formTrendScore);\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [last10PointsComparison, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(homeForm.last10Points, awayForm.last10Points);\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [twoGameAverageComparison, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(homeForm.twoGameAverage, awayForm.twoGameAverage);\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [fiveGameAverageComparison, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(homeForm.fiveGameAverage, awayForm.fiveGameAverage);\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [tenGameAverageComparison, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(homeForm.tenGameAverage, awayForm.tenGameAverage);\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  if (homeForm.SeasonPPG !== \"N/A\" && awayForm.SeasonPPG !== \"N/A\") {\n    [seasonPPGComparison, homePointsToAdd, awayPointsToAdd] = await compareStat(\n      parseFloat(homeForm.SeasonPPG),\n      parseFloat(awayForm.SeasonPPG)\n    );\n  } else seasonPPGComparison = last10PointsComparison;\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [attackingPotencyComparison, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(homeForm.AttackingPotency, awayForm.AttackingPotency);\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [AveragePossessionComparisonHOrA, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(\n      homeForm.AveragePossession - 10,\n      awayForm.AveragePossession - 10\n    );\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  [AveragePossessionComparison, homePointsToAdd, awayPointsToAdd] =\n    await compareStat(\n      homeForm.AveragePossessionOverall - 10,\n      awayForm.AveragePossessionOverall - 10\n    );\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  if (\n    typeof awayForm.awayPositionAwayOnly === \"number\" &&\n    typeof homeForm.homePositionHomeOnly === \"number\"\n  ) {\n    [positionComparison, homePointsToAdd, awayPointsToAdd] = await compareStat(\n      awayForm.awayPositionAwayOnly + awayForm.awayPosition + 10,\n      homeForm.homePositionHomeOnly + homeForm.homePosition + 10\n    );\n  } else {\n    [positionComparison, homePointsToAdd, awayPointsToAdd] = await compareStat(\n      homeForm.tenGameAverage,\n      awayForm.tenGameAverage\n    );\n  }\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  let winPercH;\n  let winPercA;\n  let drawPercH;\n  let drawPercA;\n  let lossPercH;\n  let lossPercA;\n\n  if (homeForm.WinPercentage !== undefined) {\n    [winPercentageComparison, homePointsToAdd, awayPointsToAdd] =\n      await compareStat(\n        homeForm.WinPercentage + 40,\n        awayForm.WinPercentage + 40\n      );\n    winPercH = homeForm.WinPercentage;\n    winPercA = awayForm.WinPercentage;\n    drawPercH = homeForm.DrawPercentage;\n    drawPercA = awayForm.DrawPercentage;\n    console.log(\"fetching percentages from form\");\n  } else {\n    [winPercentageComparison, homePointsToAdd, awayPointsToAdd] =\n      await compareStat(\n        match.homeTeamWinPercentage + 40,\n        match.awayTeamWinPercentage + 40\n      );\n    console.log(\"fetching percentages from match data\");\n    winPercH = match.homeTeamWinPercentage;\n    winPercA = match.awayTeamWinPercentage;\n    drawPercH = match.homeTeamDrawPercentage;\n    drawPercA = match.awayTeamDrawPercentage;\n  }\n\n  if (homeForm.LossPercentage !== undefined) {\n    [lossPercentageComparison, homePointsToAdd, awayPointsToAdd] =\n      await compareStat(\n        awayForm.LossPercentage + 40,\n        homeForm.LossPercentage + 40\n      );\n    lossPercA = awayForm.LossPercentage;\n    lossPercH = homeForm.LossPercentage;\n  } else {\n    [lossPercentageComparison, homePointsToAdd, awayPointsToAdd] =\n      await compareStat(\n        match.awayTeamLossPercentage + 40,\n        match.homeTeamLossPercentage + 40\n      );\n    lossPercA = match.awayTeamLossPercentage;\n    lossPercH = match.homeTeamLossPercentage;\n  }\n\n  [OddsComparison, homePointsToAdd, awayPointsToAdd] = await compareStat(\n    match.awayOdds,\n    match.homeOdds\n  );\n\n  homePoints = homePoints + homePointsToAdd;\n  awayPoints = awayPoints + awayPointsToAdd;\n\n  if (homeForm.homeOrAwayAverage) {\n    [homeOrAwayAverageComparison, homePointsToAdd, awayPointsToAdd] =\n      await compareStat(\n        homeForm.homeOrAwayAverage + 1,\n        awayForm.homeOrAwayAverage + 1\n      );\n\n    homePoints = homePoints + homePointsToAdd;\n    awayPoints = awayPoints + awayPointsToAdd;\n  } else {\n    [homeOrAwayAverageComparison, homePointsToAdd, awayPointsToAdd] =\n      await compareStat(1, 1);\n\n    homePoints = homePoints + homePointsToAdd;\n    awayPoints = awayPoints + awayPointsToAdd;\n  }\n\n  let calculation =\n    OddsComparison * 2 +\n    positionComparison * 2 +\n    twoGameAverageComparison * 0 +\n    tenGameAverageComparison * 1 +\n    XGdifferentialComparison * 1 +\n    seasonPPGComparison * 0 +\n    formTrendScoreComparison * 0 +\n    fiveGameAverageComparison * 0 +\n    dangerousAttacksComparisonHOrA * 1 +\n    dangerousAttacksComparison * 0 +\n    sotComparison * 0 +\n    sotComparisonHOrA * 1 +\n    CleanSheetPercentageComparison * 1 +\n    dangerousAttackConversionComparison * 0 +\n    goalsPerDangerousAttackComparison * 0 +\n    attackingPotencyComparison * 0 +\n    AveragePossessionComparison * 0 +\n    AveragePossessionComparisonHOrA * 0 +\n    winPercentageComparison * 3 +\n    lossPercentageComparison * 3 +\n    homeOrAwayAverageComparison * 3 +\n    overUnderAchievingSumComparison * 4;\n\n  console.log(match.game);\n  console.log(`winPercH ${winPercH}`);\n  console.log(`drawPercH ${drawPercH}`);\n\n  // if ((calculation > 0) && homeForm.overUnderAchievingSum < 0) {\n  //   calculation = -Math.abs(calculation)\n  // } else if((calculation < 0) && awayForm.overUnderAchievingSum < 0){\n  //   calculation = Math.abs(calculation)\n  // }\n\n  // adjust calculation based on worse team's win and draw percentages\n  if (calculation > 0) {\n    switch (true) {\n      case winPercA + drawPercA === 100:\n        // console.log(match.game)\n        // console.log(match)\n        // console.log(homeForm)\n        // console.log(awayForm)\n        calculation = calculation / 9;\n        break;\n      case winPercA + drawPercA >= 90 && winPercA + drawPercA < 100:\n        calculation = calculation / 8;\n        break;\n      case winPercA + drawPercA >= 80 && winPercA + drawPercA < 90:\n        calculation = calculation / 7;\n        break;\n      case winPercA + drawPercA >= 70 && winPercA + drawPercA < 80:\n        calculation = calculation / 6;\n        break;\n      case winPercA + drawPercA >= 60 && winPercA + drawPercA < 70:\n        calculation = calculation / 5;\n        break;\n      case winPercA + drawPercA >= 50 && winPercA + drawPercA < 60:\n        calculation = calculation / 4;\n        break;\n      case winPercA + drawPercA >= 40 && winPercA + drawPercA < 50:\n        calculation = calculation / 2;\n        break;\n      case winPercA + drawPercA >= 30 && winPercA + drawPercA < 40:\n        calculation = calculation / 1.5;\n        break;\n      case winPercA + drawPercA >= 20 && winPercA + drawPercA < 30:\n        calculation = calculation / 1;\n        break;\n      case winPercA + drawPercA >= 10 && winPercA + drawPercA < 20:\n        calculation = calculation * 1.5;\n        break;\n      case winPercA + drawPercA >= 0 && winPercA + drawPercA < 10:\n        calculation = calculation * 2;\n        break;\n      default:\n        break;\n    }\n  } else if (calculation < 0) {\n    switch (true) {\n      case winPercH + drawPercH === 100:\n        calculation = calculation / 9;\n        break;\n      case winPercH + drawPercH >= 90 && winPercH + drawPercH < 100:\n        calculation = calculation / 8;\n        break;\n      case winPercH + drawPercH >= 80 && winPercH + drawPercH < 90:\n        calculation = calculation / 7;\n        break;\n      case winPercH + drawPercH >= 70 && winPercH + drawPercH < 80:\n        calculation = calculation / 6;\n        break;\n      case winPercH + drawPercH >= 60 && winPercH + drawPercH < 70:\n        calculation = calculation / 5;\n        break;\n      case winPercH + drawPercH >= 50 && winPercH + drawPercH < 60:\n        calculation = calculation / 4;\n        break;\n      case winPercH + drawPercH >= 40 && winPercH + drawPercH < 50:\n        calculation = calculation / 2;\n        break;\n      case winPercH + drawPercH >= 30 && winPercH + drawPercH < 40:\n        calculation = calculation / 1.5;\n        break;\n      case winPercH + drawPercH >= 20 && winPercH + drawPercH < 30:\n        calculation = calculation * 1;\n        break;\n      case winPercH + drawPercH >= 10 && winPercH + drawPercH < 20:\n        calculation = calculation * 1.5;\n        break;\n      case winPercH + drawPercH >= 0 && winPercH + drawPercH < 10:\n        calculation = calculation * 2;\n        break;\n      default:\n        break;\n    }\n  }\n\n  // adjust calculation based on better team's win and draw percentages\n  if (calculation > 0) {\n    switch (true) {\n      case winPercH >= 90 && winPercH <= 100:\n        calculation = calculation * 4;\n        break;\n      case winPercH >= 80 && winPercH < 90:\n        calculation = calculation * 3;\n        break;\n      case winPercH >= 70 && winPercH < 80:\n        calculation = calculation * 2;\n        break;\n      case winPercH >= 60 && winPercH < 70:\n        calculation = calculation * 1.75;\n        break;\n      case winPercH >= 50 && winPercH < 60:\n        calculation = calculation * 1.25;\n        break;\n      case winPercH >= 40 && winPercH < 50:\n        calculation = calculation * 1;\n        break;\n      case winPercH >= 30 && winPercH < 40:\n        calculation = calculation * 1;\n        break;\n      case winPercH >= 20 && winPercH < 30:\n        calculation = calculation * 1;\n        break;\n      case winPercH >= 10 && winPercH < 20:\n        calculation = calculation * 0.75;\n        break;\n      case winPercH >= 0 && winPercH < 10:\n        calculation = calculation * 0.5;\n        break;\n      default:\n        break;\n    }\n  } else if (calculation < 0) {\n    switch (true) {\n      case winPercA >= 90 && winPercA <= 100:\n        calculation = calculation * 4;\n        break;\n      case winPercA >= 80 && winPercA < 90:\n        calculation = calculation * 3;\n        break;\n      case winPercA >= 70 && winPercA < 80:\n        calculation = calculation * 2;\n        break;\n      case winPercA >= 60 && winPercA < 70:\n        calculation = calculation * 1.75;\n        break;\n      case winPercA >= 50 && winPercA < 60:\n        calculation = calculation * 1.25;\n        break;\n      case winPercA >= 40 && winPercA < 50:\n        calculation = calculation * 1;\n        break;\n      case winPercA >= 30 && winPercA < 40:\n        calculation = calculation * 1;\n        break;\n      case winPercA >= 20 && winPercA < 30:\n        calculation = calculation * 1;\n        break;\n      case winPercA >= 10 && winPercA < 20:\n        calculation = calculation * 0.75;\n        break;\n      case winPercA >= 0 && winPercA < 10:\n        calculation = calculation * 0.5;\n        break;\n      default:\n        break;\n    }\n  }\n\n  if (calculation > 0) {\n    switch (true) {\n      case homeForm.last2Points < 1:\n        calculation = calculation / 7.5;\n        break;\n      case homeForm.last2Points < 3 && homeForm.last2Points >= 1:\n        calculation = calculation / 2;\n        break;\n      default:\n        break;\n    }\n  } else if (calculation < 0) {\n    switch (true) {\n      case awayForm.last2Points < 1:\n        calculation = calculation / 7.5;\n        break;\n      case awayForm.last2Points < 3 && awayForm.last2Points >= 1:\n        calculation = calculation / 2;\n        break;\n      default:\n        break;\n    }\n  }\n\n  return [calculation, homePoints, awayPoints];\n}\n\nexport async function roundCustom(num, form, otherForm) {\n  let wholeNumber = Math.floor(num);\n  let remainder = num - wholeNumber;\n\n  if (wholeNumber !== 0) {\n    // if (form.clinicalScore < 1) {\n    //   return Math.round(num);\n    // }\n    if (\n      form.overUnderAchievingSumAttack > 0.25 &&\n      otherForm.overUnderAchievingSumDefence < -0.25\n    ) {\n      return Math.ceil(num);\n    } else if (\n      form.overUnderAchievingSumAttack < -0.25 &&\n      otherForm.overUnderAchievingSumDefence > 0.25\n    ) {\n      return Math.floor(num);\n    } else if (remainder > 0.75) {\n      return Math.ceil(num);\n    } else {\n      return Math.floor(num);\n    }\n  } else if (wholeNumber === 0) {\n    // if (form.clinicalScore < 1) {\n    //   return Math.round(num);\n    // }\n    if (\n      form.overUnderAchievingSumAttack > 0.25 &&\n      otherForm.overUnderAchievingSumDefence < -0.25\n    ) {\n      return Math.ceil(num);\n    } else if (\n      form.overUnderAchievingSumAttack < -0.25 &&\n      otherForm.overUnderAchievingSumDefence > 0.25\n    ) {\n      return Math.floor(num);\n    } else if (remainder > 0.75) {\n      return Math.ceil(num);\n    } else {\n      return Math.floor(num);\n    }\n  } else {\n    return Math.floor(num);\n  }\n}\n\n//Calculates scores based on prior XG figures, weighted by odds\nexport async function calculateScore(match, index, divider, id) {\n  let homeRaw;\n  let awayRaw;\n\n  let teams;\n  let calculate = true;\n\n  if (\n    allForm.find(\n      (game) =>\n        game.home.teamName === match.homeTeam &&\n        game.away.teamName === match.awayTeam\n    )\n  ) {\n    teams = [\n      allForm.find((game) => game.home.teamName === match.homeTeam).home,\n      allForm.find((game) => game.away.teamName === match.awayTeam).away,\n    ];\n  } else {\n    calculate = false;\n  }\n\n  let formHome;\n  let formAway;\n\n  if (calculate) {\n    for (let i = 0; i < teams.length; i++) {\n      if (teams[0][index].PlayedHome <= 1 || teams[1][index].PlayedAway <= 1) {\n        index = 2;\n        divider = 10;\n      }\n\n      teams[i][index].lastGame = teams[i][index].LastFiveForm[4];\n      teams[i][index].previousToLastGame = teams[i][index].LastFiveForm[3];\n\n      let last2 = [\n        teams[i][index].lastGame,\n        teams[i][index].previousToLastGame,\n      ];\n      let last3 = [\n        teams[i][index].lastGame,\n        teams[i][index].previousToLastGame,\n        teams[i][index].LastFiveForm[2],\n      ];\n\n      teams[i][index].last5Points = getPointsFromLastX(\n        teams[i][index].LastFiveForm\n      );\n\n      teams[i][index].last6Points = getPointsFromLastX(\n        teams[i][index].LastSixForm\n      );\n\n      teams[i][index].last10Points = getPointsFromLastX(\n        teams[i][index].LastTenForm\n      );\n\n      teams[i][index].last3Points = getPointsFromLastX(last3);\n\n      teams[i][index].last2Points = getPointsFromLastX(last2);\n\n      teams[i][index].twoGameAverage = await getPointAverage(\n        teams[i][index].last2Points,\n        2\n      );\n      teams[i][index].threeGameAverage = await getPointAverage(\n        teams[i][index].last3Points,\n        3\n      );\n      teams[i][index].fiveGameAverage = await getPointAverage(\n        teams[i][index].last5Points,\n        5\n      );\n      teams[i][index].sixGameAverage = await getPointAverage(\n        teams[i][index].last6Points,\n        6\n      );\n      teams[i][index].tenGameAverage = await getPointAverage(\n        teams[i][index].last10Points,\n        10\n      );\n\n      if (teams[i][index].formRun) {\n        teams[i][index].lastHomeOrAwayPoints = getPointsFromLastX(\n          teams[i][index].formRun\n        );\n\n        teams[i][index].homeOrAwayAverage = await getPointAverage(\n          teams[i][index].lastHomeOrAwayPoints,\n          teams[i][index].formRun.length\n        );\n      }\n\n      let scoredAverageNotZero = 0.01;\n      let conceededAverageNotZero = 0.01;\n\n      if (teams[i][index].ScoredAverage === 0) {\n        teams[i][index].ScoredAverage = scoredAverageNotZero;\n        teams[i][0].ScoredOverall = scoredAverageNotZero;\n      }\n\n      if (teams[i][index].ConcededAverage === 0) {\n        teams[i][index].ConcededAverage = conceededAverageNotZero;\n        teams[i][0].ConcededOverall = conceededAverageNotZero;\n      }\n\n      teams[i][index].ScoredAverageShortTerm = teams[i][0].ScoredOverall / 5;\n      teams[i][index].ScoredAverageLongTermHomeOrAway =\n        teams[i][2].ScoredAverage;\n      teams[i][index].ConcededAverageShortTerm =\n        teams[i][0].ConcededOverall / 5;\n      teams[i][index].ConcededAverageLongTermHomeOrAway =\n        teams[i][2].ConcededAverage;\n\n      teams[i][index].longTermAverageGoals = teams[i][2].ScoredAverage;\n      teams[i][index].longTermAverageConceeded = teams[i][2].ConcededAverage;\n\n      let recentGoalDiff =\n        teams[i][index].ScoredAverageShortTerm -\n        teams[i][index].ConcededAverageShortTerm;\n      let distantGoalDiff =\n        teams[i][index].longTermAverageGoals -\n        teams[i][index].longTermAverageConceeded;\n\n      teams[i][index].formTrendScore = await compareFormTrend(\n        teams[i][index].threeGameAverage,\n        teams[i][index].fiveGameAverage,\n        teams[i][index].sixGameAverage,\n        teams[i][index].tenGameAverage,\n        teams[i][index].lastGame,\n        recentGoalDiff,\n        distantGoalDiff\n      );\n\n      teams[i][index].expectedGoals = parseFloat(teams[i][index].XG);\n      teams[i][index].expectedGoalsConceeded = parseFloat(\n        teams[i][index].XGAgainstAverage\n      );\n\n      teams[i][index].expectedGoalsLongTerm = parseFloat(teams[i][2].XG);\n\n      teams[i][index].expectedConceededGoalsLongTerm = parseFloat(\n        teams[i][index].XGAgainstAverage\n      );\n\n      teams[i][index].ScoredAverageShortAndLongTerm =\n        (teams[i][index].ScoredOverall / 10 +\n          teams[i][index].ScoredAverageShortTerm) /\n        2;\n\n      teams[i][index].expectedGoalsShortAndLongTerm =\n        (teams[i][index].expectedGoalsLongTerm +\n          teams[i][index].expectedGoals) /\n        2;\n\n      teams[i][index].conceededAverageShortAndLongTerm =\n        (teams[i][index].ConcededOverall / 10 +\n          teams[i][index].ConcededAverageShortTerm) /\n        2;\n\n      teams[i][index].finishingScore = parseFloat(\n        teams[i][index].XG - teams[i][index].ScoredAverage\n      );\n\n      teams[i][index].goalieRating = parseFloat(\n        teams[i][index].ConcededAverage - teams[i][index].XGAgainstAverage\n      );\n\n      let goalOverOrUnderAchieving = parseFloat(\n        await diff(teams[i][index].finishingScore, 0)\n      );\n\n      let concededOverOrUnderAchieving = parseFloat(\n        await diff(teams[i][index].goalieRating, 0)\n      );\n\n      teams[i][index].overUnderAchievingSumAttack = goalOverOrUnderAchieving;\n\n      teams[i][index].overUnderAchievingSumDefence =\n        concededOverOrUnderAchieving;\n\n      teams[i][index].overUnderAchievingSum =\n        goalOverOrUnderAchieving + concededOverOrUnderAchieving;\n\n      teams[i][index].forecastedXG = parseFloat(teams[i][index].ScoredAverage);\n\n      teams[i][index].forecastedXGConceded = parseFloat(\n        teams[i][index].ConcededAverage\n      );\n\n      teams[0][index].goalsBasedOnAverages = parseFloat(\n        (teams[0][index].forecastedXG + teams[1][index].forecastedXGConceded) /\n          2\n      );\n\n      teams[1][index].goalsBasedOnAverages = parseFloat(\n        (teams[1][index].forecastedXG + teams[0][index].forecastedXGConceded) /\n          2\n      );\n\n      teams[i][index].XGdifferential =\n        teams[i][index].XGOverall - teams[i][index].XGAgainstAvgOverall;\n\n      switch (true) {\n        case teams[i][index].XGdifferential > 1:\n          teams[i][index].XGWeighting = 6;\n          break;\n        case teams[i][index].XGdifferential <= 1 &&\n          teams[i][index].XGdifferential > 0.5:\n          teams[i][index].XGWeighting = 5;\n          break;\n        case teams[i][index].XGdifferential <= 0.5 &&\n          teams[i][index].XGdifferential > 0:\n          teams[i][index].XGWeighting = 4;\n          break;\n        case teams[i][index].XGdifferential >= -0.5 &&\n          teams[i][index].XGdifferential < 0:\n          teams[i][index].XGWeighting = 3;\n          break;\n        case teams[i][index].XGdifferential >= -1 &&\n          teams[i][index].XGdifferential < -0.5:\n          teams[i][index].XGWeighting = 2;\n          break;\n        case teams[i][index].XGdifferential < -1:\n          teams[i][index].XGWeighting = 1;\n          break;\n        default:\n          teams[i][index].XGWeighting = 1;\n          break;\n      }\n\n      if (\n        teams[i][0].XGOverall > teams[i][2].XGOverall &&\n        teams[i][0].XGAgainstAvgOverall < teams[i][2].XGAgainstAvgOverall\n      ) {\n        teams[i][index].improving = true;\n      }\n\n      if (\n        teams[i][0].XGOverall < teams[i][2].XGOverall &&\n        teams[i][0].XGAgainstAvgOverall > teams[i][2].XGAgainstAvgOverall\n      ) {\n        teams[i][index].improving = false;\n      }\n    }\n\n    homeOdds = match.homeOdds;\n    awayOdds = match.awayOdds;\n\n    if (\n      (match.homeOdds === 0 && match.awayOdds === 0) ||\n      (match.homeOdds === \"N/A\" && match.awayOdds === \"N/A\")\n    ) {\n      homeRaw = 1.0;\n      awayRaw = 1.0;\n    } else {\n      homeRaw = (1 / match.homeOdds).toFixed(2);\n      awayRaw = (1 / match.awayOdds).toFixed(2);\n    }\n\n    formHome = teams[0][index];\n    formAway = teams[1][index];\n\n    [formHome.overOrUnderAttack, formHome.trueFormAttack] =\n      await getOverOrUnderAchievingResult(\n        index,\n        formHome.overUnderAchievingSumAttack\n      );\n\n    [formHome.overOrUnderDefence, formHome.trueFormDefence] =\n      await getOverOrUnderAchievingResult(\n        index,\n        formHome.overUnderAchievingSumDefence\n      );\n\n    [formAway.overOrUnderAttack, formAway.trueFormAttack] =\n      await getOverOrUnderAchievingResult(\n        index,\n        formAway.overUnderAchievingSumAttack\n      );\n\n    [formAway.overOrUnderDefence, formAway.trueFormDefence] =\n      await getOverOrUnderAchievingResult(\n        index,\n        formAway.overUnderAchievingSumDefence\n      );\n\n    let homeTenGameAvg = formHome.last10Points / 10;\n    let awayTenGameAvg = formAway.last10Points / 10;\n\n    let pointsDiff10 = await getPointsDifferential(\n      homeTenGameAvg,\n      awayTenGameAvg\n    );\n\n    let [last10WeightingHome, last10WeightingAway] = await getPointWeighting(\n      pointsDiff10\n    );\n\n    formHome.dangerousAttackConversion =\n      formHome.AverageDangerousAttacks / formHome.ScoredAverageShortAndLongTerm;\n    formAway.dangerousAttackConversion =\n      formAway.AverageDangerousAttacks / formAway.ScoredAverageShortAndLongTerm;\n\n    formHome.goalsPerDangerousAttack =\n      formHome.ScoredAverageShortAndLongTerm / formHome.AverageDangerousAttacks;\n    formAway.goalsPerDangerousAttack =\n      formAway.ScoredAverageShortAndLongTerm / formAway.AverageDangerousAttacks;\n\n    [formHome.clinicalRating, formHome.clinicalScore] = await getClinicalRating(\n      formHome\n    );\n    [formAway.clinicalRating, formAway.clinicalScore] = await getClinicalRating(\n      formAway\n    );\n\n    let oddsWeightingHome;\n    let oddsWeightingAway;\n    let homeWeighting;\n    let awayWeighting;\n\n    let weightingSplitHome;\n    let weightingSplitAway;\n    let weighting;\n\n    if (homeRaw > 0) {\n      oddsWeightingHome = homeRaw - awayRaw;\n      oddsWeightingAway = awayRaw - homeRaw;\n\n      weighting = await diff(oddsWeightingHome, oddsWeightingAway);\n\n      if (weighting >= 0) {\n        weightingSplitHome = Math.abs(weighting) / 2;\n        weightingSplitAway = -Math.abs(weighting) / 2;\n      } else if (weighting < 0) {\n        weightingSplitHome = -Math.abs(weighting) / 2;\n        weightingSplitAway = Math.abs(weighting) / 2;\n      } else {\n        weightingSplitHome = 1;\n        weightingSplitAway = 1;\n      }\n    } else {\n      weightingSplitHome = 1;\n      weightingSplitAway = 1;\n    }\n\n    homeWeighting = weightingSplitHome * 0;\n    awayWeighting = weightingSplitAway * 0;\n\n    let homeCalculation;\n    let awayCalculation;\n\n    let XGdifferential = await diff(\n      formHome.XGdifferential,\n      formAway.XGdifferential\n    );\n\n    if (XGdifferential > 1.2 || XGdifferential < -1.2) {\n      match.XGdifferential = true;\n      match.XGdifferentialValue = Math.abs(XGdifferential);\n      match.XGdifferentialValueRaw = parseFloat(XGdifferential);\n      match.teamWithHigherXG = \"home\";\n    } else {\n      match.XGdifferential = false;\n      match.XGdifferentialValue = Math.abs(XGdifferential);\n      match.XGdifferentialValueRaw =  parseFloat(XGdifferential);\n      match.teamWithHigherXG = \"away\";\n    }\n\n    if (\n      typeof formHome.homeTeamHomePositionRaw === \"number\" &&\n      typeof formAway.awayTeamAwayPositionRaw === \"number\"\n    ) {\n      formHome.homePositionHomeOnly = parseFloat(\n        formHome.homeTeamHomePositionRaw\n      );\n      formAway.awayPositionAwayOnly = parseFloat(\n        formAway.awayTeamAwayPositionRaw\n      );\n      formHome.homePosition = parseFloat(formHome.homeRawPosition);\n      formAway.awayPosition = parseFloat(formAway.awayRawPosition);\n    } else {\n      formHome.homePositionHomeOnly = \"N/A\";\n      formAway.awayPositionAwayOnly = \"N/A\";\n      formHome.homePosition = \"N/A\";\n      formAway.awayPosition = \"N/A\";\n    }\n\n    if (homeWeighting > 0.25) {\n      homeCalculation = 1.15;\n      awayCalculation = 0.85;\n    } else if (homeWeighting < -0.25) {\n      homeCalculation = 0.15;\n      awayCalculation = 1.85;\n    } else {\n      homeCalculation = parseFloat(1 + homeWeighting);\n      awayCalculation = parseFloat(1 + awayWeighting);\n    }\n\n    formHome.AttackingPotency = (formHome.XG / formHome.AttacksHome) * 100;\n    formAway.AttackingPotency = (formAway.XG / formAway.AttacksAverage) * 100;\n\n    let teamComparisonScore;\n    let homePoints;\n    let awayPoints;\n\n    [teamComparisonScore, homePoints, awayPoints] = await compareTeams(\n      formHome,\n      formAway,\n      match\n    );\n    teamComparisonScore = teamComparisonScore / 1;\n    if (teamComparisonScore > 1.75) {\n      teamComparisonScore = 1.75;\n    } else if (teamComparisonScore < -1.75) {\n      teamComparisonScore = -1.75;\n    }\n\n    match.teamComparisonScore = teamComparisonScore;\n\n    let finalHomeGoals;\n    let finalAwayGoals;\n\n    const homeGoalDiff =\n      formHome.ScoredAverageShortAndLongTerm -\n      formHome.conceededAverageShortAndLongTerm;\n    const awayGoalDiff =\n      formAway.ScoredAverageShortAndLongTerm -\n      formAway.conceededAverageShortAndLongTerm;\n\n    formHome.goalsDifferential =\n      parseFloat(await diff(homeGoalDiff, awayGoalDiff)) / 1;\n    formAway.goalsDifferential =\n      parseFloat(await diff(awayGoalDiff, homeGoalDiff)) / 1;\n\n    let goalCalcHomeOnly =\n      (formHome.ScoredAverageLongTermHomeOrAway +\n        formAway.ConcededAverageLongTermHomeOrAway) /\n      2;\n    let goalCalcAwayOnly =\n      (formAway.ScoredAverageLongTermHomeOrAway +\n        formHome.ConcededAverageLongTermHomeOrAway) /\n      2;\n\n    let goalCalcHomeShortTerm =\n      (formHome.ScoredAverageShortTerm + formAway.ConcededAverageShortTerm) / 2;\n    let goalCalcAwayShortTerm =\n      (formAway.ScoredAverageShortTerm + formHome.ConcededAverageShortTerm) / 2;\n\n    let goalCalcHomeShortAndLongTerm =\n      (formHome.ScoredAverageShortAndLongTerm +\n        formAway.conceededAverageShortAndLongTerm) /\n      2;\n    let goalCalcAwayShortAndLongTerm =\n      (formAway.ScoredAverageShortAndLongTerm +\n        formHome.conceededAverageShortAndLongTerm) /\n      2;\n\n    let factorOneHome =\n      (goalCalcHomeShortTerm * 0 +\n        goalCalcHomeShortAndLongTerm * 0 +\n        goalCalcHomeOnly * 1 +\n        formAway.expectedConceededGoalsLongTerm +\n        formHome.expectedGoalsLongTerm +\n        formAway.ConcededAverageShortTerm * 0 +\n        last10WeightingHome * 0 +\n        formHome.goalsDifferential * 0) /\n      3;\n\n    let factorOneAway =\n      (goalCalcAwayShortTerm * 0 +\n        goalCalcAwayShortAndLongTerm * 0 +\n        goalCalcAwayOnly * 1 +\n        formHome.expectedConceededGoalsLongTerm +\n        formAway.expectedGoalsLongTerm +\n        formHome.ConcededAverageShortTerm * 0 +\n        last10WeightingAway * 0 +\n        formAway.goalsDifferential * 0) /\n      3;\n\n    let homeComparisonWeighting;\n    let awayComparisonWeighting;\n    match.scoreDiff = await diff(factorOneHome, factorOneAway);\n\n    if (teamComparisonScore > 0) {\n      homeComparisonWeighting = 1 + teamComparisonScore;\n      awayComparisonWeighting = 1 - teamComparisonScore;\n    } else if (teamComparisonScore < 0) {\n      homeComparisonWeighting = 1 + teamComparisonScore;\n      awayComparisonWeighting = 1 - teamComparisonScore;\n    } else {\n      homeComparisonWeighting = 1;\n      awayComparisonWeighting = 1;\n    }\n\n    let isHomeTeamBetterHomeOrAway = await diff(\n      formHome.homePosition,\n      formHome.homeTeamHomePositionRaw\n    );\n    let isAwayTeamBetterHomeOrAway = await diff(\n      formAway.awayPosition,\n      formAway.awayTeamAwayPositionRaw\n    );\n\n    let homeAdvantage, awayAdvantage;\n\n    switch (true) {\n      // case isHomeTeamBetterHomeOrAway > 4 && isAwayTeamBetterHomeOrAway < -4:\n      //   homeAdvantage = 1.04;\n      //   awayAdvantage = 0.96;\n      //   break;\n      // case isHomeTeamBetterHomeOrAway >= 1 && isAwayTeamBetterHomeOrAway <= -1:\n      //   homeAdvantage = 1.02;\n      //   awayAdvantage = 0.98;\n      //   break;\n      default:\n        homeAdvantage = 1;\n        awayAdvantage = 1;\n        break;\n    }\n\n    let experimentalHomeGoals =\n      factorOneHome * 0.825 * homeComparisonWeighting * homeAdvantage;\n\n    let experimentalAwayGoals =\n      factorOneAway * 0.825 * awayComparisonWeighting * awayAdvantage;\n\n    console.log(match.game);\n    console.log(match);\n    console.log(formHome);\n    console.log(homeComparisonWeighting);\n    console.log(formAway);\n    console.log(awayComparisonWeighting);\n\n    let rawFinalHomeGoals = experimentalHomeGoals;\n    let rawFinalAwayGoals = experimentalAwayGoals;\n\n    if (\n      formHome.CleanSheetPercentage < 20 &&\n      formAway.CleanSheetPercentage < 20\n    ) {\n      rawFinalHomeGoals = rawFinalHomeGoals + 0.5;\n      rawFinalAwayGoals = rawFinalAwayGoals + 0.5;\n    } else if (\n      formHome.CleanSheetPercentage > 65 &&\n      formAway.CleanSheetPercentage > 65\n    ) {\n      rawFinalHomeGoals = rawFinalHomeGoals - 0.5;\n      rawFinalAwayGoals = rawFinalAwayGoals - 0.5;\n    }\n\n    let formTrendScoreComparison;\n\n    if (formAway) {\n      formTrendScoreComparison =\n        formAway.formTrendScore - formHome.formTrendScore;\n    } else {\n      formTrendScoreComparison = 0;\n    }\n\n    let trueFormDiffHome = await diff(\n      formHome.overUnderAchievingSum,\n      formAway.overUnderAchievingSum\n    );\n    let trueFormDiffAway = await diff(\n      formAway.overUnderAchievingSum,\n      formHome.overUnderAchievingSum\n    );\n\n    // if (trueFormDiffHome > 2) {\n    //   rawFinalHomeGoals =\n    //     rawFinalHomeGoals + formHome.expectedGoalsShortAndLongTerm / 4;\n    //   rawFinalAwayGoals = rawFinalAwayGoals + -Math.abs(trueFormDiffAway / 4);\n    // }\n\n    // if (trueFormDiffAway > 2) {\n    //   rawFinalHomeGoals = rawFinalHomeGoals + -Math.abs(trueFormDiffHome / 4);\n    //   rawFinalAwayGoals = rawFinalAwayGoals + trueFormDiffAway / 4;\n    // }\n\n    if (rawFinalAwayGoals < 0) {\n      let difference = parseFloat((await diff(0, rawFinalAwayGoals)) / 5);\n      rawFinalHomeGoals = rawFinalHomeGoals + difference;\n      rawFinalAwayGoals = 0;\n    }\n\n    if (rawFinalHomeGoals < 0) {\n      let difference = parseFloat((await diff(0, rawFinalHomeGoals)) / 5);\n      rawFinalAwayGoals = rawFinalAwayGoals + difference;\n      rawFinalHomeGoals = 0;\n    }\n\n    if (formHome.improving === true && formAway.improving === false) {\n      rawFinalHomeGoals = rawFinalHomeGoals + 0.5;\n      rawFinalAwayGoals = rawFinalAwayGoals - 0.5;\n    } else if (formAway.improving === true && formHome.improving === false) {\n      rawFinalHomeGoals = rawFinalHomeGoals - 0.5;\n      rawFinalAwayGoals = rawFinalAwayGoals + 0.5;\n    }\n\n    if (\n      (rawFinalHomeGoals + 1) / (formHome.ScoredAverage + 1) > 1.25 &&\n      (rawFinalHomeGoals + 1) / (formAway.ConcededAverage + 1) > 1.25\n    ) {\n      rawFinalHomeGoals = rawFinalHomeGoals - 0.5;\n    } else if (\n      (rawFinalHomeGoals + 1) / (formHome.ScoredAverage + 1) < 0.75 &&\n      (rawFinalHomeGoals + 1) / (formAway.ConcededAverage + 1) < 0.75\n    ) {\n      rawFinalHomeGoals = rawFinalHomeGoals + 0.5;\n    }\n\n    if (\n      (rawFinalAwayGoals + 1) / (formAway.ScoredAverage + 1) > 1.25 &&\n      (rawFinalAwayGoals + 1) / (formHome.ConcededAverage + 1) > 1.25\n    ) {\n      rawFinalAwayGoals = rawFinalAwayGoals - 0.5;\n    } else if (\n      (finalAwayGoals + 1) / (formAway.ScoredAverage + 1) < 0.75 &&\n      (finalAwayGoals + 1) / (formHome.ConcededAverage + 1) < 0.75\n    ) {\n      rawFinalAwayGoals = rawFinalAwayGoals + 0.5;\n    }\n\n    finalHomeGoals = await roundCustom(rawFinalHomeGoals, formHome, formAway);\n    finalAwayGoals = await roundCustom(rawFinalAwayGoals, formAway, formHome);\n\n    // if ((finalHomeGoals + 1) / (formHome.ScoredAverage + 1) > 1.5 && (finalHomeGoals + 1) / (formAway.ConcededAverage + 1) > 1.5) {\n    //   finalHomeGoals = finalHomeGoals - 1;\n    // }\n    // else if ((finalHomeGoals + 1) / (formHome.ScoredAverage + 1) < 0.25 && (finalHomeGoals + 1) / (formAway.ConcededAverage + 1) < 0.25){\n    //   finalHomeGoals = finalHomeGoals + 1;\n    // }\n\n    // if ((finalAwayGoals + 1) / (formAway.ScoredAverage + 1) > 1.5 && (finalAwayGoals + 1) / (formHome.ConcededAverage + 1) > 1.5) {\n    //   finalAwayGoals = finalAwayGoals - 1;\n    // }\n    // else if ((finalAwayGoals + 1) / (formAway.ScoredAverage + 1) < 0.25 && (finalAwayGoals + 1) / (formHome.ConcededAverage + 1) < 0.25){\n    //   finalAwayGoals = finalAwayGoals + 1;\n    // }\n\n    if (finalHomeGoals > 5) {\n      finalHomeGoals = Math.round(\n        (finalHomeGoals + formHome.expectedGoals) / 2\n      );\n    }\n\n    if (finalAwayGoals > 5) {\n      finalAwayGoals = Math.round(\n        (finalAwayGoals + formAway.expectedGoals) / 2\n      );\n    }\n\n    if (finalHomeGoals > finalAwayGoals) {\n      match.prediction = \"homeWin\";\n      homePredictions = homePredictions + 1;\n      if (\n        formHome.lastGame === \"L\" ||\n        formAway.lastGame === \"W\"\n      ) {\n        match.includeInMultis = false;\n      } else {\n        match.includeInMultis = true;\n      }\n    } else if (finalAwayGoals > finalHomeGoals) {\n      match.prediction = \"awayWin\";\n      awayPredictions = awayPredictions + 1;\n      if (\n        formAway.lastGame === \"L\" ||\n        formHome.lastGame === \"W\"\n      ) {\n        match.includeInMultis = false;\n      } else {\n        match.includeInMultis = true;\n      }\n    } else if (finalHomeGoals === finalAwayGoals) {\n      match.prediction = \"draw\";\n      drawPredictions = drawPredictions + 1;\n    }\n\n    console.log(`drawPredictions ${drawPredictions}`);\n    console.log(`homePredictions ${homePredictions}`);\n    console.log(`awayPredictions ${awayPredictions}`);\n\n    switch (true) {\n      case match.homeGoals > match.awayGoals:\n        match.winner = match.homeTeam;\n        match.outcome = \"homeWin\";\n        homeOutcomes = homeOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formHome.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formAway.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formHome.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formAway.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formHome.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formAway.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formHome.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formAway.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += homeOdds;\n        sumOddsLoss = sumOddsLoss += awayOdds;\n\n        sumXGForWin = sumXGForWin += formHome.XGOverall;\n        sumXGForLoss = sumXGForLoss += formAway.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formHome.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formAway.XGAgainstAvgOverall;\n\n        break;\n      case match.homeGoals === match.awayGoals:\n        match.winner = \"draw\";\n        match.outcome = \"draw\";\n        allOutcomes = allOutcomes + 1;\n        allDrawOutcomes = allDrawOutcomes + 1;\n        break;\n      case match.homeGoals < match.awayGoals:\n        match.winner = match.awayTeam;\n        match.outcome = \"awayWin\";\n        allOutcomes = allOutcomes + 1;\n        awayOutcomes = awayOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formAway.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formHome.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formAway.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formHome.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formAway.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formHome.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formAway.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formHome.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += awayOdds;\n        sumOddsLoss = sumOddsLoss += homeOdds;\n\n        sumXGForWin = sumXGForWin += formAway.XGOverall;\n        sumXGForLoss = sumXGForLoss += formHome.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formAway.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formHome.XGAgainstAvgOverall;\n        break;\n      default:\n        break;\n    }\n\n    console.log(`homeOutcomes ${homeOutcomes}`);\n    console.log(`awayOutcomes ${awayOutcomes}`);\n\n    winDAAverage = (sumStatDAWin / allWinOutcomes).toFixed(2);\n    lossDAAverage = (sumStatDALoss / allLossOutcomes).toFixed(2);\n    winPossessionAverage = (sumStatPossessionWin / allWinOutcomes).toFixed(2);\n    lossPossessionAverage = (sumStatPossessionLoss / allLossOutcomes).toFixed(\n      2\n    );\n    winLast10PPGAverage = (sumStatPPGLast10Win / allWinOutcomes).toFixed(2);\n    lossLast10PPGAverage = (sumStatPPGLast10Loss / allLossOutcomes).toFixed(2);\n    winSOTAverage = (sumStatSOTWin / allWinOutcomes).toFixed(2);\n    lossSOTAverage = (sumStatSOTLoss / allLossOutcomes).toFixed(2);\n    winOddsAverage = (sumOddsWin / allWinOutcomes).toFixed(2);\n    lossOddsAverage = (sumOddsLoss / allLossOutcomes).toFixed(2);\n    winXGForAverage = (sumXGForWin / allWinOutcomes).toFixed(2);\n    lossXGForAverage = (sumXGForLoss / allLossOutcomes).toFixed(2);\n    winXGAgainstAverage = (sumXGAgainstWin / allWinOutcomes).toFixed(2);\n    lossXGAgainstAverage = (sumXGAgainstLoss / allLossOutcomes).toFixed(2);\n\n    if (match.status === \"complete\") {\n      if (match.prediction === match.outcome) {\n        match.predictionOutcome = \"Won\";\n        winAmount = winAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      } else if (match.prediction !== match.outcome) {\n        match.predictionOutcome = \"Lost\";\n        lossAmount = lossAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      }\n    }\n\n    if (match.status === \"complete\") {\n      if (match.predictionOutcome === \"Won\" || match.outcome === \"draw\") {\n        match.doubleChancePredictionOutcome = \"Won\";\n      } else if (match.prediction !== \"Won\" && match.outcome !== \"draw\") {\n        match.doubleChancePredictionOutcome = \"Lost\";\n      }\n    }\n\n    match.formHome = formHome;\n    match.formAway = formAway;\n\n    let total = parseInt(finalHomeGoals + finalAwayGoals);\n    totalGoals = totalGoals + total;\n\n    console.log(`Predicted: ${totalGoals}`);\n\n    let total2 = parseInt(match.homeGoals + match.awayGoals);\n    totalGoals2 = totalGoals2 + total2;\n\n    console.log(`Actual: ${totalGoals2}`);\n\n    numberOfGames = numberOfGames + 1;\n\n    if (finalHomeGoals < 0) {\n      finalHomeGoals = 0;\n    }\n\n    if (finalAwayGoals < 0) {\n      finalAwayGoals = 0;\n    }\n\n    if (match.status === \"suspended\") {\n      finalHomeGoals = \"P\";\n      finalAwayGoals = \"P\";\n    }\n\n    return [\n      finalHomeGoals,\n      finalAwayGoals,\n      rawFinalHomeGoals,\n      rawFinalAwayGoals,\n    ];\n  } else {\n    finalHomeGoals = \"\";\n    finalAwayGoals = \"\";\n    rawFinalHomeGoals = \"\";\n    rawFinalAwayGoals = \"\";\n    match.status = \"void\";\n  }\n\n  return [finalHomeGoals, finalAwayGoals, rawFinalHomeGoals, rawFinalAwayGoals];\n}\n\nasync function getSuccessMeasure(fixtures) {\n  let sumProfit = 0;\n  let investment = 0;\n  let exactScores = 0;\n  let successCount = 0;\n  let netProfit;\n\n  for (let i = 0; i < fixtures.length; i++) {\n    if (fixtures[i].status === \"complete\") {\n      sumProfit = sumProfit + fixtures[i].profit;\n      investment = investment + 1;\n      netProfit = (sumProfit - investment).toFixed(2);\n      if (fixtures[i].exactScore === true) {\n        exactScores = exactScores + 1;\n      }\n      if (fixtures[i].predictionOutcome === \"Won\") {\n        successCount = successCount + 1;\n      }\n    }\n  }\n\n  let ROI = (netProfit / investment) * 100;\n  var operand = ROI >= 0 ? \"+\" : \"\";\n  let exactScoreHitRate = ((exactScores / investment) * 100).toFixed(1);\n  let successRate = ((successCount / investment) * 100).toFixed(1);\n\n  if (investment > 0) {\n    ReactDOM.render(\n      <Fragment>\n        <Div\n          className={\"SuccessMeasure\"}\n          text={`ROI for \n            all ${investment} W/D/W \n            outcomes: ${operand} ${ROI.toFixed(2)}%`}\n        />\n        <p>{`Correct W/D/W predictions: ${successCount} (${successRate}%)`}</p>\n        <p>{`Exact scores predicted: ${exactScores} (${exactScoreHitRate}%)`}</p>\n      </Fragment>,\n      document.getElementById(\"successMeasure\")\n    );\n  } else {\n    return;\n  }\n}\n\nexport var tips = [];\nexport var allTips = [];\nlet allTipsSorted;\nvar newArray = [];\nvar bestBets = [];\nvar price;\nvar longShotTips = [];\nvar XGDiffTips = [];\nvar combinations;\nvar exoticArray = [];\nvar gamesInExotic;\nvar minimumExotic;\nvar exoticStake;\nvar exoticString;\nvar bttsArray = [];\nvar accumulatedOdds = 1;\nlet predictions = [];\n\nexport async function getNewTips(array) {\n  newArray = [];\n  accumulatedOdds = 1;\n\n  if (array.length > 1 && incrementValue > 0) {\n    array.forEach((tip) => {\n      if (\n        array.indexOf(tip) < incrementValue\n        // tip.goalDifferential >= incrementValue && tip.comparisonScore > 0\n      ) {\n        newArray.push(tip);\n        accumulatedOdds = parseFloat(accumulatedOdds) * parseFloat(tip.rawOdds);\n      }\n    });\n  }\n  await renderTips(newArray);\n}\n\nexport async function getScorePrediction(day, mocked) {\n  let mock = mocked;\n  tips = [];\n  bestBets = [];\n  // price = 0\n  bttsArray = [];\n  longShotTips = [];\n  XGDiffTips = [];\n\n  let index = 2;\n  let divider = 10;\n\n  ReactDOM.render(<div />, document.getElementById(\"Buttons\"));\n\n  await Promise.all(\n    matches.map(async (match) => {\n      // if there are no stored predictions, calculate them based on live data\n      if (match) {\n        switch (true) {\n          case match.status === \"canceled\":\n            match.goalsA = \"P\";\n            match.goalsB = \"P\";\n            break;\n          default:\n            [\n              match.goalsA,\n              match.goalsB,\n              match.unroundedGoalsA,\n              match.unroundedGoalsB,\n            ] = await calculateScore(match, index, divider, match.id);\n            break;\n        }\n      } else {\n        [\n          match.goalsA,\n          match.goalsB,\n          match.unroundedGoalsA,\n          match.unroundedGoalsB,\n        ] = await calculateScore(match, index, divider, match.id);\n      }\n\n      await getBTTSPotential(allForm, match, index, match.goalsA, match.goalsB);\n\n      let predictionObject;\n      let longShotPredictionObject;\n      let XGPredictionObject;\n\n      if (\n        (match.unroundedGoalsA - match.unroundedGoalsB > 1 &&\n        match.homeOdds !== 0 &&\n        match.fractionHome !== \"N/A\" &&\n        match.includeInMultis !== false) || (match.teamWithHigherXG === \"home\" && \n        match.XGdifferentialValueRaw > 1.2)\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.homeOdds < 3 \n        ) {\n          predictionObject = {\n            team: `${match.homeTeam} to win`,\n            odds: match.fractionHome,\n            rawOdds: match.homeOdds,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            formTrend: match.formHome.improving,\n            outcome: match.predictionOutcome,\n            goalDifferential: parseFloat(\n              await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n            ),\n            experimentalCalc:\n              (match.unroundedGoalsA - match.unroundedGoalsB) *\n              Math.abs(match.teamComparisonScore),\n            XGdifferentialValue: parseFloat(match.XGdifferentialValue),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formHome.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n\n            if (\n              match.unroundedGoalsA - match.unroundedGoalsB > incrementValue &&\n              match.formHome.improving === true &&\n              match.formAway.improving === false &&\n              predictionObject.rawComparisonScore > 11\n            ) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      } else if (\n        (match.unroundedGoalsB - match.unroundedGoalsA > 2 &&\n        match.awayOdds !== 0 &&\n        match.fractionAway !== \"N/A\" &&\n        match.includeInMultis !== false) || (match.teamWithHigherXG === \"away\" && \n        match.XGdifferentialValueRaw < -1.2)\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.awayOdds < 3.5\n        ) {\n          predictionObject = {\n            team: `${match.awayTeam} to win`,\n            rawOdds: match.awayOdds,\n            odds: match.fractionAway,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            formTrend: match.formAway.improving,\n            outcome: match.predictionOutcome,\n            goalDifferential: parseFloat(\n              await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n            ),\n            experimentalCalc:\n              (match.unroundedGoalsB - match.unroundedGoalsA) *\n              Math.abs(match.teamComparisonScore),\n              XGdifferentialValue: parseFloat(match.XGdifferentialValue),\n            };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formAway.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n            if (\n              match.unroundedGoalsB - match.unroundedGoalsA > 2 &&\n              match.formHome.improving === false &&\n              match.formAway.improving === true &&\n              predictionObject.rawComparisonScore < -11\n            ) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      }\n\n\n     allTipsSorted = allTips.sort(function (a, b) {\n      let sortByCalcA = a.comparisonScore * a.XGdifferentialValue\n      let sortByCalcB = b.comparisonScore * b.XGdifferentialValue\n\n\n        if (sortByCalcA === sortByCalcB) {\n          console.log(match)\n          return b.XGdifferentialValue - a.XGdifferentialValue;\n        } else {\n          console.log(match.game)\n          console.log(sortByCalcA)\n          console.log(sortByCalcB)\n          return sortByCalcB > sortByCalcA ? 1 : -1;\n        }\n      });\n\n      console.log(allTipsSorted)\n\n      bestBets.sort(function (a, b) {\n        if (a.goalDifferential === b.goalDifferential) {\n          return b.comparisonScore - a.comparisonScore;\n        } else {\n          return b.goalDifferential > a.goalDifferential ? 1 : -1;\n        }\n      });\n\n      if (\n        match.btts === true &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        bttsArray.push(match);\n\n        bttsArray.sort(function (a, b) {\n          return b.combinedBTTS - a.combinedBTTS;\n        });\n      }\n\n      if (\n        match.unroundedGoalsA > match.unroundedGoalsB &&\n        match.homeDoubleChance >= 1.4 &&\n        match.goalsA > match.goalsB\n      ) {\n        longShotPredictionObject = {\n          team: match.homeTeam,\n          decimalOdds: match.homeDoubleChance,\n          rawOdds: match.homeOdds,\n          odds: match.fractionHome,\n          comparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          doubleChanceOutcome: match.doubleChancePredictionOutcome,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        if (\n          match.prediction !== \"draw\" &&\n          longShotPredictionObject.comparisonScore > 0.1\n        ) {\n          longShotTips.push(longShotPredictionObject);\n        }\n      } else if (\n        match.unroundedGoalsA < match.unroundedGoalsB &&\n        match.awayDoubleChance >= 1.4 &&\n        match.goalsB > match.goalsA\n      ) {\n        longShotPredictionObject = {\n          team: match.awayTeam,\n          decimalOdds: match.awayDoubleChance,\n          rawOdds: match.awayOdds,\n          odds: match.fractionAway,\n          comparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          doubleChanceOutcome: match.doubleChancePredictionOutcome,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        if (\n          match.prediction !== \"draw\" &&\n          longShotPredictionObject.comparisonScore < -0.1\n        ) {\n          longShotTips.push(longShotPredictionObject);\n        }\n      }\n\n      longShotTips.sort(function (a, b) {\n        return b.goalDifferential - a.goalDifferential;\n      });\n\n      exoticArray = [];\n      gamesInExotic = 0;\n      exoticStake = 0;\n      exoticString = \"\";\n\n      switch (true) {\n        case allTips.length >= 10:\n          for (let i = 0; i < 10; i++) {\n            let game = allTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 10;\n          minimumExotic = 8;\n          exoticStake = 0.1;\n          exoticString = \"45 8-folds, 10 9-folds and 1 10-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case allTips.length >= 9:\n          for (let i = 0; i < 9; i++) {\n            let game = allTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 9;\n          minimumExotic = 7;\n          exoticStake = 0.1;\n          exoticString = \"36 7-folds, 9 8-folds and 1 9-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case allTips.length >= 8:\n          for (let i = 0; i < 8; i++) {\n            let game = allTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 8;\n          minimumExotic = 6;\n          exoticStake = 0.1;\n          exoticString = \"28 6-folds, 8 7-folds and 1 8-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case allTips.length >= 7:\n          for (let i = 0; i < 7; i++) {\n            let game = allTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 7;\n          minimumExotic = 6;\n          exoticStake = 1;\n          exoticString = \"7 6-folds and 1 7-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case allTips.length >= 6:\n          for (let i = 0; i < 6; i++) {\n            let game = allTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 6;\n          minimumExotic = 5;\n          exoticStake = 1;\n          exoticString = \"6 5-folds and 1 6-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case allTips.length >= 5:\n          for (let i = 0; i < 5; i++) {\n            let game = allTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 5;\n          minimumExotic = 4;\n          exoticStake = 1;\n          exoticString = \"5 4-folds and 1 5-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case longShotTips.length >= 4:\n          for (let i = 0; i < 4; i++) {\n            let game = longShotTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 4;\n          minimumExotic = 3;\n          exoticStake = 1;\n          exoticString = \"4 3-folds and 1 4-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        default:\n          break;\n      }\n\n      if (\n        match.XGdifferential === true && match.prediction === \"homeWin\"\n      ) {\n        XGPredictionObject = {\n          game: match.game,\n          outcome: match.predictionOutcome,\n          prediction: `${match.homeTeam} to win`,\n          odds: match.fractionHome,\n          otherTeam: match.awayTeam,\n          XGdifferentialValue: match.XGdifferentialValue\n        };\n          XGDiffTips.push(XGPredictionObject);\n      } else if(match.XGdifferential === true && match.prediction === \"awayWin\"){\n        XGPredictionObject = {\n          game: match.game,\n          outcome: match.predictionOutcome,\n          prediction: `${match.awayTeam} to win`,\n          odds: match.fractionAway,\n          otherTeam: match.homeTeam,\n          XGdifferentialValue: match.XGdifferentialValue\n        };\n          XGDiffTips.push(XGPredictionObject);\n      }\n\n      XGDiffTips.sort(function (a, b) {\n        return b.XGdifferentialValue - a.XGdifferentialValue;\n      });\n\n      if (mock !== true) {\n        ReactDOM.render(\n          <Fixture\n            fixtures={matches}\n            result={true}\n            mock={mock}\n            className={`individualFixture`}\n          />,\n          document.getElementById(\"FixtureContainer\")\n        );\n      } else if (mock === true) {\n        ReactDOM.render(\n          <Fixture\n            fixtures={matches}\n            result={true}\n            mock={mock}\n            className={\"individualFixture\"}\n          />,\n          document.getElementById(\"FixtureContainer\")\n        );\n      }\n\n      predictions.push(match);\n    })\n  );\n  await getSuccessMeasure(matches);\n\n  await getNewTips(allTipsSorted);\n\n  // await renderTips();\n}\n\nexport function getAccumulatorPrice(priceArray) {\n  var result = 1;\n  for (var i = 0; i < priceArray.length; i++)\n    result = result * priceArray[i].rawOdds;\n\n  return result;\n}\n\nexport function getCoverBetMaxReturns(priceArray, minAccSize, stake) {\n  var total = 0;\n  combinations = 0;\n\n  for (var i = minAccSize; i <= priceArray.length; i++) {\n    var perms = getUniquePermutations(priceArray, i);\n    combinations = combinations + perms.length;\n\n    for (var j = 0; j < perms.length; j++)\n      total += getAccumulatorPrice(perms[j]) * stake;\n  }\n  return parseFloat(total.toFixed(2));\n}\n\nfunction getUniquePermutations(arr, permLength) {\n  if (arr.length <= permLength) return [arr];\n\n  var permutations = [];\n  var newArr = [];\n\n  newArr = arr.slice(0);\n\n  for (var i = 0; i < arr.length; i++) {\n    newArr = arr.slice(0);\n    newArr.splice(i, 1);\n    permutations = twoDimArrayUnion(\n      permutations,\n      getUniquePermutations(newArr, permLength)\n    );\n  }\n  return permutations;\n}\n\nfunction twoDimArrayUnion(arr1, arr2) {\n  for (var i = 0; i < arr2.length; i++) {\n    var duplicate = false;\n\n    for (var j = 0; j < arr1.length; j++)\n      if (arr1[j].length === arr2[i].length)\n        for (var k = 0; k < arr1[j].length; k++)\n          if (arr1[j][k] !== arr2[i][k]) break;\n          else if (k === arr1[j].length - 1) duplicate = true;\n\n    if (!duplicate) arr1.push(arr2[i]);\n  }\n\n  return arr1;\n}\n\nfunction NewlineText(props) {\n  const text = props.text;\n  const newText = text.split(\"\\n\").map((str) => <p>{str}</p>);\n\n  return newText;\n}\n\nasync function renderTips() {\n  if (newArray.length > 0) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            className={\"PredictionsOfTheDay\"}\n            text={\n              <ul className=\"BestPredictions\">\n                <div className=\"BestPredictionsExplainer\">\n                  Add or remove a selection using the buttons below. Predictions\n                  are ordered by confidence in the outcome.\n                </div>\n                {newArray.map((tip) => (\n                  <li className={tip.outcome} key={tip.team}>\n                    {tip.team}: {tip.odds}\n                  </li>\n                ))}\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            className={\"PredictionsOfTheDay\"}\n            text={\n              <ul className=\"BestPredictions\">\n                <div className=\"BestPredictionsExplainer\">\n                  No games fit the criteria (try tapping the + button)\n                </div>\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  }\n\n  if (exoticArray.length > 4) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Exotic of the day\"}\n            className={\"PredictionsOfTheDay\"}\n            text={\n              <ul className=\"BestPredictions\">\n                <div className=\"BestPredictionsExplainer\">\n                  <NewlineText\n                    text={`${gamesInExotic} games: ${exoticString}\\nStake per multi: ${exoticStake} units - ${combinations} combinations\\nTotal stake: ${(\n                      exoticStake * combinations\n                    ).toFixed(2)} unit(s)`}\n                  />\n                  {`Potential winnings: ${price.toFixed(2)} units`}\n                </div>\n                {exoticArray.map((tip) => (\n                  <li className={tip.outcome} key={tip.team}>\n                    {tip.team}: {tip.odds}\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Exotic of the day\"}\n            className={\"PredictionsOfTheDay\"}\n            text={\n              <ul className=\"BestPredictions\">\n                <div className=\"BestPredictionsExplainer\">\n                  Not enough games for this feature\n                </div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  }\n\n  if (longShotTips.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Double chance tips\"}\n            text={\n              <ul className=\"LongshotPredictions\">\n                <lh>Double chance (Win or Draw - decimal odds only)</lh>\n                {longShotTips.map((tip) => (\n                  <li className={`${tip.doubleChanceOutcome}1`} key={tip.team}>\n                    {tip.team} to win or draw: {tip.decimalOdds}\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Double chance tips\"}\n            text={\n              <ul className=\"LongshotPredictions\">\n                <lh>No games fit the criteria</lh>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  }\n\n  if (XGDiffTips.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"XG Tips\"}\n            text={\n              <ul className=\"XGDiffTips\">\n                <lh>Games with greatest XG Differentials</lh>\n                {XGDiffTips.map((tip) => (\n                  <li className={tip.outcome} key={tip.game}>\n                    {tip.game} | {tip.prediction} {tip.odds}\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"draws\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"XG Tips\"}\n            text={\n              <ul className=\"XGDiffTips\">\n                <lh>No games fit the criteria</lh>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"draws\")\n    );\n  }\n\n  if (bttsArray.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            className={\"BTTSGames\"}\n            buttonText={\"BTTS games\"}\n            text={\n              <ul className=\"BTTSGames\">\n                <lh>Games with highest chance of BTTS</lh>\n                {bttsArray.map((game) => (\n                  <li className={game.bttsOutcome} key={game.game}>\n                    {`${game.game} odds: ${game.bttsFraction}`}\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            className={\"BTTSGames\"}\n            buttonText={\"BTTS games\"}\n            text={\n              <ul className=\"BTTSGames\">\n                <lh>No games fit the criteria</lh>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  }\n\n  if (allWinOutcomes > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Insights\"}\n            text={\n              <div>\n                <lh className=\"InsightsExplainer\">\n                  Average stats for winning/losing teams prior to this gameweek\n                </lh>\n                <div className=\"InsightsContainer\">\n                  <ul className=\"InsightsHome\">\n                    <lh className=\"WinningTeams\">Winning teams</lh>\n                    <li>{winOddsAverage} odds</li>\n                    <li>{winXGForAverage} XG For</li>\n                    <li>{winXGAgainstAverage} XG Against</li>\n                    <li>{winLast10PPGAverage} ppg (last 10)</li>\n                    <li>{winPossessionAverage}% possession</li>\n                    <li>{winSOTAverage} shots on target</li>\n                    <li>{winDAAverage} dangerous attacks</li>\n                  </ul>\n                  <ul className=\"InsightsAway\">\n                    <lh className=\"LosingTeams\">Losing teams</lh>\n                    <li>{lossOddsAverage} odds</li>\n                    <li>{lossXGForAverage} XG For</li>\n                    <li>{lossXGAgainstAverage} XG Against</li>\n                    <li>{lossLast10PPGAverage} ppg (last 10)</li>\n                    <li>{lossPossessionAverage}% possession</li>\n                    <li>{lossSOTAverage} shots on target</li>\n                    <li>{lossDAAverage} dangerous attacks</li>\n                  </ul>\n                </div>\n              </div>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"insights\")\n    );\n  }\n\n  // ReactDOM.render(\n  //   <div className=\"pointsGapExplainer\">\n  //     * games with greatest XG differentials\n  //   </div>,\n  //   document.getElementById(\"XGDiff\")\n  // );\n}\n","export async function getBTTSPotential(allForm, match, index, homeGoals, awayGoals) {\n\n  let homeTeam = match.homeTeam;\n  let awayTeam = match.awayTeam;\n\n\n  let home = allForm.findIndex(function (item, i) {\n    return item.home.teamName === homeTeam;\n  });\n\n  let away = allForm.findIndex(function (item, i) {\n    return item.away.teamName === awayTeam;\n  });\n  if(home !== -1 && away !== -1){\n\n\n  let homeBTTS = allForm[home].home[index].BTTSPercentage;\n  let awayBTTS = allForm[away].away[index].BTTSPercentage;\n  let homeG = homeGoals;\n  let awayG = awayGoals;\n\n  let homeGoalsScoredAverage = allForm[home].home[index].ScoredAverage\n  let awayGoalsScoredAverage = allForm[away].away[index].ScoredAverage\n\n  let homeGoalsConceededAverage = allForm[home].home[index].ConcededAverage\n  let awayGoalsConceededAverage = allForm[away].away[index].ConcededAverage\n\n  let homeXG = allForm[home].home[index].XG;\n  let awayXG = allForm[away].away[index].XG;\n\n  let homeXGAgainst = allForm[home].home[index].XGAgainstAverage;\n  let awayXGAgainst = allForm[away].away[index].XGAgainstAverage;\n\n  let homeGoalsAveragedOut = (homeGoalsScoredAverage + homeXG) / 2\n  let awayGoalsAveragedOut = (awayGoalsScoredAverage + awayXG) / 2 \n\n  let homeGoalsConceededAveragedOut = (homeGoalsConceededAverage + homeXGAgainst) / 2\n  let awayGoalsConceededAveragedOut = (awayGoalsConceededAverage + awayXGAgainst) / 2\n\n  match.combinedBTTS = (homeBTTS + awayBTTS) / 2;\n\nif(match.bttsFraction !== \"N/A\" && match.status !== \"suspended\" && match.status !== \"canceled\"){\n  if (\n    match.combinedBTTS > 50 &&\n    match.awayOdds < 3.5 &&\n    // homeGoalsAveragedOut > 1 &&\n    // awayGoalsAveragedOut > 1 &&\n    // homeGoalsConceededAveragedOut > 1 &&\n    // awayGoalsConceededAveragedOut > 1 &&\n    homeG >= 1 &&\n    awayG >= 1 &&\n    homeBTTS > 60 &&\n    awayBTTS > 60\n  ) {\n    match.btts = true;\n    match.bttsChosen = true;\n  } else {\n    match.btts = false;\n    match.bttsChosen = false;\n  }\n}\n  \n  }\n  return match;\n}\n\n","import ReactDOM from \"react-dom\";\nimport { Button } from \"../components/Button\";\nimport Stats from \"../components/createStatsDiv\";\nimport Div from \"../components/Div\";\nimport { allForm } from \"../logic/getFixtures\";\nimport { getTeamStats } from \"../logic/getTeamStats\";\nimport { getPointsFromLastX } from \"../logic/getScorePredictions\";\n\nlet testBool;\n\nexport async function createStatsDiv(game, mock) {\n  if (game.status !== \"void\") {\n    let bool = mock;\n\n    if (bool !== true) {\n      let radioSelected = 10;\n\n      function toggle() {\n        testBool = testBool ? false : true;\n        if (testBool === true) {\n          // set stats element to display flex\n          return { display: \"block\" };\n        } else {\n          // set stats element to display none\n          return { display: \"none\" };\n        }\n      }\n\n      let style = toggle();\n\n      let index;\n      let divider;\n      if (radioSelected === 5) {\n        index = 0;\n        divider = 5;\n      } else if (radioSelected === 6) {\n        index = 1;\n        divider = 6;\n      } else if (radioSelected === 10) {\n        index = 2;\n        divider = 10;\n      }\n\n      let gameStats = allForm.find((match) => match.id === game.id);\n\n      let homeTeam = gameStats.home.teamName;\n      let awayTeam = gameStats.away.teamName;\n\n      let time = game.time;\n\n      gameStats.home[index].last5Points = getPointsFromLastX(\n        gameStats.home[index].LastFiveForm\n      );\n\n      gameStats.home[index].last6Points = getPointsFromLastX(\n        gameStats.home[index].LastSixForm\n      );\n\n      gameStats.home[index].last10Points = getPointsFromLastX(\n        gameStats.home[index].LastTenForm\n      );\n\n      gameStats.away[index].last5Points = getPointsFromLastX(\n        gameStats.away[index].LastFiveForm\n      );\n\n      gameStats.away[index].last6Points = getPointsFromLastX(\n        gameStats.away[index].LastSixForm\n      );\n\n      gameStats.away[index].last10Points = getPointsFromLastX(\n        gameStats.away[index].LastTenForm\n      );\n\n      async function getPointAverage(pointTotal, games) {\n        return pointTotal / games;\n      }\n\n      let homeFiveGameAverage = await getPointAverage(\n        gameStats.home[index].last5Points,\n        5\n      );\n      let homeSixGameAverage = await getPointAverage(\n        gameStats.home[index].last6Points,\n        6\n      );\n      let homeTenGameAverage = await getPointAverage(\n        gameStats.home[index].last10Points,\n        10\n      );\n\n      let awayFiveGameAverage = await getPointAverage(\n        gameStats.away[index].last5Points,\n        5\n      );\n      let awaySixGameAverage = await getPointAverage(\n        gameStats.away[index].last6Points,\n        6\n      );\n      let awayTenGameAverage = await getPointAverage(\n        gameStats.away[index].last10Points,\n        10\n      );\n\n      async function getLastGameResult(lastGame) {\n        let text;\n        switch (true) {\n          case lastGame === \"L\":\n            text = \"Lost\";\n            break;\n          case lastGame === \"D\":\n            text = \"Drew\";\n            break;\n          case lastGame === \"W\":\n            text = \"Won\";\n            break;\n          default:\n            break;\n        }\n        return text;\n      }\n\n      async function compareFormTrend(five, six, ten) {\n        let text;\n        if (five >= 2.5) {\n          switch (true) {\n            case five > six && six > ten:\n              text =\n                \"Outstanding recent form with solid improvement over last 10 games\";\n              break;\n            case five > six && six < ten:\n              text =\n                \"Outstanding recent form which has improved with some inconsistency over last 10 games\";\n              break;\n            case five === six && six > ten:\n              text =\n                \"Outstanding recent form with most improvement in the last 6\";\n              break;\n            case five === six && six < ten:\n              text = \"Outstanding recent form with a slight dip in the last 6\";\n              break;\n            case five === six && six === ten:\n              text = \"Consistently outstanding form over the last 10\";\n              break;\n            case five < six && six === ten:\n              text =\n                \"Outstanding recent form but slightly worsening in the last 5\";\n              break;\n            case five < six && six > ten:\n              text =\n                \"Outstanding recent form but slightly fluctuating over the last 10\";\n              break;\n            case five < six && six < ten:\n              text = \"Outstanding recent form but beginning to worsen recently\";\n              break;\n            default:\n              break;\n          }\n        } else if (five < 2.5 && five >= 2) {\n          switch (true) {\n            case five > six && six > ten:\n              text =\n                \"Very good recent form with solid improvement over last 10 games\";\n              break;\n            case five > six && six < ten:\n              text =\n                \"Very good recent form which has improved with some inconsistency over last 10 games\";\n              break;\n            case five === six && six > ten:\n              text =\n                \"Very good recent form with most improvement in the last 6\";\n              break;\n            case five === six && six < ten:\n              text = \"Very good recent form with a slight dip in the last 6\";\n              break;\n            case five === six && six === ten:\n              text = \"Very good outstanding form over the last 10\";\n              break;\n            case five < six && six === ten:\n              text =\n                \"Very good recent form but slightly worsening in the last 5\";\n              break;\n            case five < six && six > ten:\n              text =\n                \"Very good recent form but slightly fluctuating over the last 10\";\n              break;\n            case five < six && six < ten:\n              text = \"Very good recent form but beginning to worsen recently\";\n              break;\n            default:\n              break;\n          }\n        } else if (five < 2 && five >= 1.5) {\n          switch (true) {\n            case five > six && six > ten:\n              text =\n                \"Good recent form with solid improvement over last 10 games\";\n              break;\n            case five > six && six < ten:\n              text =\n                \"Good recent form which has improved with some inconsistency over last 10 games\";\n              break;\n            case five === six && six > ten:\n              text = \"Good recent form with most improvement in the last 6\";\n              break;\n            case five === six && six < ten:\n              text = \"Good recent form with a slight dip in the last 6\";\n              break;\n            case five === six && six === ten:\n              text = \"Good outstanding form over the last 10\";\n              break;\n            case five < six && six === ten:\n              text = \"Good recent form but slightly worsening in the last 5\";\n              break;\n            case five < six && six > ten:\n              text =\n                \"Good recent form but slightly fluctuating over the last 10\";\n              break;\n            case five < six && six < ten:\n              text = \"Good recent form but worsening consistently\";\n              break;\n            default:\n              break;\n          }\n        } else if (five < 1.5 && five >= 1) {\n          switch (true) {\n            case five > six && six > ten:\n              text =\n                \"Average recent form with solid improvement over last 10 games\";\n              break;\n            case five > six && six < ten:\n              text =\n                \"Average recent form which has improved with some inconsistency over last 10 games\";\n              break;\n            case five === six && six > ten:\n              text = \"Average recent form with most improvement in the last 6\";\n              break;\n            case five === six && six < ten:\n              text = \"Average recent form with a slight dip in the last 6\";\n              break;\n            case five === six && six === ten:\n              text = \"Consistently average form over the last 10\";\n              break;\n            case five < six && six === ten:\n              text = \"Average recent form but slightly worsening in the last 5\";\n              break;\n            case five < six && six > ten:\n              text =\n                \"Average recent form, slightly fluctuating over the last 10\";\n              break;\n            case five < six && six < ten:\n              text = \"Average recent form, declining consistently\";\n              break;\n            default:\n              break;\n          }\n        } else if (five < 1 && five >= 0.5) {\n          switch (true) {\n            case five > six && six > ten:\n              text =\n                \"Poor recent form with gradual improvement over last 10 games\";\n              break;\n            case five > six && six < ten:\n              text =\n                \"Poor recent form but improving with some inconsistency over last 10 games\";\n              break;\n            case five === six && six > ten:\n              text =\n                \"Poor recent form with some improvement shown in the last 6\";\n              break;\n            case five === six && six < ten:\n              text = \"Poor recent form with a dip in the last 6\";\n              break;\n            case five === six && six === ten:\n              text = \"Consistently poor form over the last 10\";\n              break;\n            case five < six && six === ten:\n              text = \"Poor recent form, slightly worsening in the last 5\";\n              break;\n            case five < six && six > ten:\n              text = \"Poor recent form, slightly fluctuating over the last 10\";\n              break;\n            case five < six && six < ten:\n              text = \"Poor recent form, declining consistently\";\n              break;\n            default:\n              text = \"Poor recent form\";\n              break;\n          }\n        } else if (five < 0.5) {\n          switch (true) {\n            case five > six && six > ten:\n              text =\n                \"Terrible recent form with gradual improvement over last 10 games\";\n              break;\n            case five > six && six < ten:\n              text =\n                \"Terrible recent form with a slight improvement in the last 5\";\n              break;\n            case five === six && six > ten:\n              text =\n                \"Terrible recent form but improving slightly in the last 6\";\n              break;\n            case five === six && six < ten:\n              text = \"Terrible recent form with a dip in the last 6\";\n              break;\n            case five === six && six === ten:\n              text = \"Consistently terrible form over the last 10\";\n              break;\n            case five < six && six === ten:\n              text = \"Terrible recent form, worsening further in the last 5\";\n              break;\n            case five < six && six > ten:\n              text =\n                \"Terrible recent form, slightly fluctuating over the last 10\";\n              break;\n            case five < six && six < ten:\n              text = \"Terrible recent form, declining consistently\";\n              break;\n            default:\n              break;\n          }\n        }\n        return text;\n      }\n\n      let homeFormTrend = await compareFormTrend(\n        homeFiveGameAverage,\n        homeSixGameAverage,\n        homeTenGameAverage\n      );\n      let awayFormTrend = await compareFormTrend(\n        awayFiveGameAverage,\n        awaySixGameAverage,\n        awayTenGameAverage\n      );\n      let homeLastGame = await getLastGameResult(\n        gameStats.home[index].LastFiveForm[4]\n      );\n      let awayLastGame = await getLastGameResult(\n        gameStats.away[index].LastFiveForm[4]\n      );\n\n      const formDataMatch = [];\n\n      formDataMatch.push({\n        btts: game.btts_potential,\n      });\n\n      const formDataHome = [];\n\n      formDataHome.push({\n        name: game.homeTeam,\n        Last5: gameStats.home[index].LastFiveForm,\n        AverageGoals: (gameStats.home[index].ScoredOverall / 10),\n        AverageConceeded: (gameStats.home[index].ConcededOverall / 10),\n        AverageXG: gameStats.home[index].XGOverall,\n        AverageXGConceded: gameStats.home[index].XGAgainstAvgOverall,\n        AveragePossession: gameStats.home[index].AveragePossessionOverall,\n        AverageShotsOnTarget: gameStats.home[index].AverageShotsOnTargetOverall,\n        AverageDangerousAttacks: gameStats.home[index].AverageDangerousAttacksOverall,\n        homeOrAway: \"Home\",\n        leaguePosition: gameStats.home[index].LeaguePosition,\n        Last5PPG: gameStats.home[index].PPG,\n        SeasonPPG: gameStats.home[index].SeasonPPG,\n        formTrend: homeFormTrend,\n        lastGame: homeLastGame,\n        formRun: gameStats.home[index].formRun,\n      });\n\n      const formDataAway = [];\n\n      formDataAway.push({\n        name: game.awayTeam,\n        Last5: gameStats.away[index].LastFiveForm,\n        AverageGoals: (gameStats.away[index].ScoredOverall / 10),\n        AverageConceeded: (gameStats.away[index].ConcededOverall / 10),\n        AverageXG: gameStats.away[index].XGOverall,\n        AverageXGConceded: gameStats.away[index].XGAgainstAvgOverall,\n        AveragePossession: gameStats.away[index].AveragePossessionOverall,\n        AverageShotsOnTarget: gameStats.away[index].AverageShotsOnTargetOverall,\n        AverageDangerousAttacks: gameStats.away[index].AverageDangerousAttacksOverall,\n        homeOrAway: \"Away\",\n        leaguePosition: gameStats.away[index].LeaguePosition,\n        Last5PPG: gameStats.away[index].PPG,\n        SeasonPPG: gameStats.away[index].SeasonPPG,\n        formTrend: awayFormTrend,\n        lastGame: awayLastGame,\n        formRun: gameStats.away[index].formRun,\n      });\n      ReactDOM.render(\n        <div style={style}>\n          <Div className=\"MatchTime\" text={`Kick off: ${time} GMT`}></Div>\n        </div>,\n        document.getElementById(\"stats\" + homeTeam)\n      );\n\n      ReactDOM.render(\n        <div style={style}>\n          <div className=\"H2HStats\" id={`H2HStats${game.id}`}></div>\n          <div className=\"TrendsHome\" id={`TrendsHome${game.id}`}></div>\n          <div className=\"TrendsAway\" id={`TrendsAway${game.id}`}></div>\n        </div>,\n        document.getElementById(\"history\" + homeTeam)\n      );\n\n      ReactDOM.render(\n        <Stats\n          style={style}\n          homeOrAway=\"Home\"\n          gameCount={divider}\n          key={formDataHome[0].name}\n          last5={formDataHome[0].Last5}\n          className={formDataHome[0].homeOrAway}\n          name={formDataHome[0].name}\n          goals={formDataHome[0].AverageGoals}\n          conceeded={formDataHome[0].AverageConceeded}\n          XG={formDataHome[0].AverageXG}\n          XGConceded={formDataHome[0].AverageXGConceded}\n          possession={formDataHome[0].AveragePossession}\n          sot={formDataHome[0].AverageShotsOnTarget}\n          dangerousAttacks={formDataHome[0].AverageDangerousAttacks}\n          leaguePosition={formDataHome[0].leaguePosition}\n          rawPosition = {game.homeRawPosition}\n          homeOrAwayLeaguePosition={game.homeTeamHomePosition}\n          winPercentage={game.homeTeamWinPercentage}\n          lossPercentage={game.homeTeamLossPercentage}\n          drawPercentage={game.homeTeamDrawPercentage}\n          ppg={formDataHome[0].SeasonPPG}\n          formTrend={[\n            homeTenGameAverage.toFixed(2),\n            homeSixGameAverage.toFixed(2),\n            homeFiveGameAverage.toFixed(2),\n          ]}\n          lastGame={homeLastGame}\n          formRun={formDataHome[0].formRun}\n        />,\n        document.getElementById(\"home\" + homeTeam)\n      );\n\n      ReactDOM.render(\n        <Stats\n          style={style}\n          homeOrAway=\"Away\"\n          gameCount={divider}\n          key={formDataAway[0].name}\n          last5={formDataAway[0].Last5}\n          className={formDataAway[0].homeOrAway}\n          name={formDataAway[0].name}\n          goals={formDataAway[0].AverageGoals}\n          conceeded={formDataAway[0].AverageConceeded}\n          XG={formDataAway[0].AverageXG}\n          XGConceded={formDataAway[0].AverageXGConceded}\n          possession={formDataAway[0].AveragePossession}\n          rawPosition = {game.awayRawPosition}\n          sot={formDataAway[0].AverageShotsOnTarget}\n          dangerousAttacks={formDataAway[0].AverageDangerousAttacks}\n          leaguePosition={formDataAway[0].leaguePosition}\n          homeOrAwayLeaguePosition={game.awayTeamAwayPosition}\n          winPercentage={game.awayTeamWinPercentage}\n          lossPercentage={game.awayTeamLossPercentage}\n          drawPercentage={game.awayTeamDrawPercentage}\n          ppg={formDataAway[0].SeasonPPG}\n          formTrend={[\n            awayTenGameAverage.toFixed(2),\n            awaySixGameAverage.toFixed(2),\n            awayFiveGameAverage.toFixed(2),\n          ]}\n          lastGame={awayLastGame}\n          formRun={formDataAway[0].formRun}\n        />,\n        document.getElementById(\"away\" + awayTeam)\n      );\n\n      ReactDOM.render(\n        <Button\n          className=\"MoreStats\"\n          style={style}\n          onClickEvent={() =>\n            getTeamStats(game.id, game.homeTeam, game.awayTeam)\n          }\n          text={\"More detail\"}\n        ></Button>,\n        document.getElementById(`H2HStats${game.id}`)\n      );\n    }\n  }\n}\n","import React, { Fragment } from \"react\";\nimport { CreateBadge } from \"./createBadge\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { createStatsDiv } from \"../logic/getStats\";\nimport { renderTable } from \"../logic/getFixtures\";\n\nlet resultValue;\nconst text =\n  \"XG Tipping formulates predictions based on recent form data ranging from points per game to each teams attacking potency\\n Expected Goals in previous matches are used to determine whether teams might be over or underperforming and predictions are weighted as such\\n Once all fixtures have loaded, click on “Get Predictions”\\n Predictions are displayed on the right and the results on the left\\n Click on an individual fixture for detailed stats for both teams.\";\n\nfunction GetDivider(fixture) {\n  const matchStatus = fixture.status;\n  const isPrediction = resultValue;\n\n  if (isPrediction === false && matchStatus !== \"complete\") {\n    return (\n      <div className=\"divider\" data-cy={\"divider-\" + fixture.fixture.id}>\n        {\"V\"}\n      </div>\n    );\n  } else if (isPrediction === false && matchStatus === \"complete\") {\n    return (\n      <div\n        className=\"Result\"\n        data-cy={\"result-\" + fixture.fixture.id}\n      >{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n    );\n  } else if (isPrediction === true && matchStatus === \"complete\") {\n    let outcome;\n    let prediction;\n\n    switch (true) {\n      case fixture.fixture.homeGoals > fixture.fixture.awayGoals:\n        outcome = 0;\n        fixture.fixture.winner = fixture.fixture.homeTeam;\n        fixture.fixture.outcome = \"homeWin\";\n        break;\n      case fixture.fixture.homeGoals === fixture.fixture.awayGoals:\n        outcome = 1;\n        fixture.fixture.winner = \"draw\";\n        fixture.fixture.outcome = \"draw\";\n\n        break;\n      case fixture.fixture.homeGoals < fixture.fixture.awayGoals:\n        outcome = 2;\n        fixture.fixture.winner = fixture.fixture.awayTeam;\n        fixture.fixture.outcome = \"awayWin\";\n\n        break;\n      default:\n        break;\n    }\n\n    switch (true) {\n      case fixture.fixture.goalsA > fixture.fixture.goalsB:\n        prediction = 0;\n        break;\n      case fixture.fixture.goalsA === fixture.fixture.goalsB:\n        prediction = 1;\n        break;\n      case fixture.fixture.goalsA < fixture.fixture.goalsB:\n        prediction = 2;\n        break;\n      default:\n        break;\n    }\n\n    if (fixture.fixture.homeGoals > 0 && fixture.fixture.awayGoals > 0) {\n      fixture.fixture.bttsOutcome = \"bttsWon\";\n    } else {\n      fixture.fixture.bttsOutcome = \"bttsLost\";\n    }\n\n    if (outcome === prediction) {\n      // console.log(fixture.fixture.game);\n      if (fixture.fixture.homeOdds !== 0) {\n        switch (true) {\n          case outcome === 0:\n            fixture.fixture.profit = fixture.fixture.homeOdds;\n            break;\n          case outcome === 1:\n            fixture.fixture.profit = fixture.fixture.drawOdds;\n            break;\n          case outcome === 2:\n            fixture.fixture.profit = fixture.fixture.awayOdds;\n            break;\n          default:\n            break;\n        }\n      } else fixture.fixture.profit = 1;\n\n      if (\n        fixture.fixture.goalsA === fixture.fixture.homeGoals &&\n        fixture.fixture.goalsB === fixture.fixture.awayGoals\n      ) {\n        fixture.fixture.exactScore = true;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"ExactScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      } else {\n        fixture.fixture.exactScore = false;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"CorrectScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      }\n      // console.log(`profit ${fixture.fixture.profit}`);\n    } else if (outcome !== prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        fixture.fixture.profit = 0;\n      } else {\n        fixture.fixture.profit = 1;\n      }\n      // console.log(fixture.fixture.game);\n      // console.log(`profit ${fixture.fixture.profit}`);\n      fixture.fixture.exactScore = false;\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"IncorrectScore\"\n            key={fixture.fixture.awayTeam}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    }\n  } else {\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  }\n}\n\nfunction getStyle(pointsAverageDiffBool) {\nif(pointsAverageDiffBool === true){\n  return \"individualFixtureGap\"\n} else {\n  return \"individualFixture\";\n}\n}\n\nfunction renderLeagueName(fixture) {\n  let name = fixture.leagueName;\n  if (name === null) {\n    return <div></div>;\n  } else {\n    return (\n      <div>\n        <div\n          className=\"leagueName\"\n          key={`leagueName${fixture.leagueIndex}div`}\n          onClick={() => renderTable(fixture.leagueIndex)}\n        >\n          {fixture.leagueName} &#9776;\n        </div>\n        <div\n          className=\"LeagueTable\"\n          key={`leagueName${fixture.leagueIndex}`}\n          id={`leagueName${fixture.leagueIndex}`}\n        ></div>\n      </div>\n    );\n  }\n}\n\nconst SingleFixture = ({ fixture }) => (\n  <div key={fixture.game}>\n    {renderLeagueName(fixture)}\n    <li\n      className={getStyle(fixture.pointsAverageDiff)}\n      key={fixture.id}\n      onClick={() => createStatsDiv(fixture)}\n      data-cy={fixture.id}\n    >\n      <div className=\"HomeOdds\">{fixture.fractionHome}</div>\n      <div className=\"homeTeam\">{fixture.homeTeam}</div>\n      <GetDivider\n        result={resultValue}\n        status={fixture.status}\n        fixture={fixture}\n      />\n      {/* <div className=\"divider\">{\"V\"}</div> */}\n      <div className=\"awayTeam\">{fixture.awayTeam}</div>\n      <CreateBadge\n        image={fixture.homeBadge}\n        ClassName=\"HomeBadge\"\n        alt=\"Home team badge\"\n        flexShrink={5}\n      />\n      <CreateBadge\n        image={fixture.awayBadge}\n        ClassName=\"AwayBadge\"\n        alt=\"Away team badge\"\n      />\n      <div className=\"AwayOdds\">{fixture.fractionAway}</div>\n    </li>\n    <div className=\"StatsDiv\">\n      <div id={\"stats\" + fixture.homeTeam}></div>\n      <Fragment>\n        <div\n          className=\"StatsContainer\"\n          data-cy={\"StatsContainer-\" + fixture.id}\n        >\n          <div className=\"HomeStats\" id={\"home\" + fixture.homeTeam}></div>\n          <div className=\"AwayStats\" id={\"away\" + fixture.awayTeam}></div>\n        </div>\n      </Fragment>\n      <div className=\"MatchHistory\" id={\"history\" + fixture.homeTeam}></div>\n    </div>\n  </div>\n);\n\nlet newText = text.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nconst List = ({ fixtures }) => (\n  <div>\n    <Fragment>\n      <Collapsable\n        className={\"HowToUse\"}\n        buttonText={\"Show / Hide help\"}\n        text={newText}\n      />\n    </Fragment>\n    <div id=\"Headers\"></div>\n    <ul className=\"FixtureList\" id=\"FixtureList\">\n      {fixtures.map((fixture, i) => (\n        <SingleFixture fixture={fixture} key={fixture.game}/>\n      ))}\n    </ul>\n  </div>\n);\n\nexport function Fixture(props) {\n  resultValue = props.result;\n\n  return <List fixtures={props.fixtures} result={resultValue} />;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { orderedLeagues } from \"../App\";\nimport { getForm, applyColour } from \"./getForm\";\nimport { Fixture } from \"../components/Fixture\";\nimport { Button } from \"../components/Button\";\nimport { getScorePrediction } from \"../logic/getScorePredictions\";\nimport { ThreeDots } from \"react-loading-icons\";\nimport { selectedOdds } from \"../components/OddsRadio\";\nimport LeagueTable from \"../components/LeagueTable\";\n\nvar oddslib = require(\"oddslib\");\n\nrequire(\"dotenv\").config();\n\nvar fixtureResponse;\nvar fixtureArray;\nexport const matches = [];\nexport const resultedMatches = [];\nvar league;\nvar leagueID;\nvar leagueGames = [];\nexport var leagueArray = [];\nvar leagueIdArray = [];\nexport var leagueStatsArray = [];\nexport let leagueInstance;\nvar lastFiveFormHome;\nvar lastFiveFormAway;\nvar lastSixFormHome;\nvar lastSixFormAway;\nvar lastTenFormHome;\nvar lastTenFormAway;\nvar formRunHome;\nvar formRunAway;\n\nexport const [currentDay, month, year] = new Date()\n  .toLocaleDateString(\"en-US\")\n  .split(\"/\");\nlet tomorrowsDate = new Date();\ntomorrowsDate.setDate(new Date().getDate() + 1);\nlet [tomorrowDay, tomorrowMonth, tomorrowYear] = tomorrowsDate\n  .toLocaleDateString(\"en-US\")\n  .split(\"/\");\n\nlet yesterdaysDate = new Date();\nyesterdaysDate.setDate(new Date().getDate() - 1);\nlet [yesterdayDay, yesterdayMonth, yesterdayYear] = yesterdaysDate\n  .toLocaleDateString(\"en-US\")\n  .split(\"/\");\n\n// var prevSat = new Date();\n\n// prevSat.setDate(prevSat.getDate() - (6-prevSat.getDay()))\n\n// console.log(prevSat)\n\nvar d = new Date();\n\n// set to Monday of this week\nd.setDate(d.getDate() - ((d.getDay() + 6) % 7));\n\n// set to Saturday just gone\nd.setDate(d.getDate() - 2);\n\nlet [saturdayDay, saturdayMonth, saturdayYear] = d\n  .toLocaleDateString(\"en-US\")\n  .split(\"/\");\n\nvar historicDate = new Date();\n\n// set to Monday of this week\nhistoricDate.setDate(\n  historicDate.getDate() - ((historicDate.getDay() + 6) % 7)\n);\n\n// set to Saturday prior to last\nhistoricDate.setDate(historicDate.getDate() - 9);\n\nlet [historicDay, historicMonth, historicYear] = historicDate\n  .toLocaleDateString(\"en-US\")\n  .split(\"/\");\n\nexport const saturday = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${saturdayYear}-${saturdayDay}-${saturdayMonth}`;\nexport const historic = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${historicYear}-${historicDay}-${historicMonth}`;\nexport const yesterday = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${yesterdayYear}-${yesterdayDay}-${yesterdayMonth}`;\nexport const today = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${year}-${currentDay}-${month}`;\nexport const tomorrow = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${tomorrowYear}-${tomorrowDay}-${tomorrowMonth}`;\n\nexport function getRadioState(state) {\n  let radioState = state;\n  return radioState;\n}\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nexport let allForm = [];\nexport let tableArray = [];\nleagueInstance = [];\n\nexport async function generateTables(a, leagueIdArray) {\n  let i = 0;\n  leagueArray.forEach(function (league) {\n    let currentLeagueId = leagueIdArray[i];\n    i++;\n    console.log(league)\n    leagueInstance = [];\n    if (!league.data.specific_tables[0].groups) {\n      for (\n        let index = 0;\n        index < league.data.specific_tables[0].table.length;\n        index++\n      ) {\n        let currentTeam = league.data.specific_tables[0].table[index];\n        console.log(currentTeam.wdl_record)\n        let last5 = currentTeam.wdl_record.slice(-5);\n        let rawForm = last5.replace(/,/g, \"\").toUpperCase();\n        let form = Array.from(rawForm);\n\n        const team = {\n          LeagueID: currentLeagueId,\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          ID: currentTeam.id,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: `${form[0]}${form[1]}${form[2]}${form[3]}${form[4]}`,\n          Points: currentTeam.points,\n        };\n        leagueInstance.push(team);\n      }\n      tableArray.push(leagueInstance);\n    } else if (league.data.league_table === null) {\n      for (\n        let index = 0;\n        index < league.data.all_matches_table_overall.length;\n        index++\n      ) {\n        let currentTeam = league.data.all_matches_table_overall[index];\n        let last5 = \"N/A\";\n        const team = {\n          LeagueID: currentLeagueId,\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          ID: currentTeam.id,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: last5,\n          Points: currentTeam.points,\n        };\n        leagueInstance.push(team);\n      }\n      tableArray.push(leagueInstance);\n    }\n  });\n}\n\n\nexport async function renderTable(index) {\n  let league = tableArray[index];\n  let statistics;\n let leagueStatistics = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}leagueStats/${league[0].LeagueID}`\n  )\n  await leagueStatistics.json().then((stats) => {\n    console.log(stats.data)\n    statistics = stats.data\n  });\n\n  if (league !== undefined) {\n    console.log(league)\n    ReactDOM.render(\n      <LeagueTable Teams={league} Stats={statistics} Key={`League${index}`} />,\n      document.getElementById(`leagueName${index}`)\n    );\n  }\n}\n\nasync function createFixture(match, result, mockBool) {\n  let roundedHomeOdds;\n  let roundedAwayOdds;\n  let roundedBTTSOdds;\n  let homeFraction;\n  let awayFraction;\n  let bttsFraction;\n\n  if (selectedOdds === \"Fractional\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      roundedHomeOdds = (Math.round(match.homeOdds * 5) / 5).toFixed(1);\n      roundedAwayOdds = (Math.round(match.awayOdds * 5) / 5).toFixed(1);\n\n      if (roundedHomeOdds < 1.1) {\n        roundedHomeOdds = 1.1;\n      }\n      if (roundedAwayOdds < 1.1) {\n        roundedAwayOdds = 1.1;\n      }\n\n      try {\n        homeFraction = oddslib\n          .from(\"decimal\", roundedHomeOdds)\n          .to(\"fractional\", { precision: 1 });\n        awayFraction = oddslib\n          .from(\"decimal\", roundedAwayOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      roundedBTTSOdds = (Math.round(match.bttsOdds * 5) / 5).toFixed(1);\n\n      if (roundedBTTSOdds < 1.1) {\n        roundedBTTSOdds = 1.1;\n      }\n\n      try {\n        bttsFraction = oddslib\n          .from(\"decimal\", roundedBTTSOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  } else if (selectedOdds === \"Decimal\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      homeFraction = match.homeOdds;\n      awayFraction = match.awayOdds;\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      bttsFraction = match.bttsOdds;\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  }\n\n  match.homeTeamWinsPercentage = match.homeTeamWinPercentage;\n  match.homeTeamLossesPercentage = match.homeTeamLossPercentage;\n  match.homeTeamDrawsPercentage = match.homeTeamDrawPercentage;\n\n  match.awayTeamWinsPercentage = match.awayTeamWinPercentage;\n  match.awayTeamLossesPercentage = match.awayTeamLossPercentage;\n  match.awayTeamDrawsPercentage = match.awayTeamDrawPercentage;\n  match.fractionHome = homeFraction;\n  match.fractionAway = awayFraction;\n\n  match.bttsFraction = bttsFraction;\n\n  match.game = match.homeTeam + \" v \" + match.awayTeam;\n\n  if (mockBool !== true) {\n    ReactDOM.render(\n      <Fixture\n        fixtures={matches}\n        result={result}\n        mock={mockBool}\n        className={\"individualFixture\"}\n      />,\n      document.getElementById(\"FixtureContainer\")\n    );\n  } else if (mockBool === true) {\n    ReactDOM.render(\n      <Fixture\n        fixtures={matches}\n        result={result}\n        mock={mockBool}\n        className={\"individualFixture\"}\n      />,\n      document.getElementById(\"FixtureContainer\")\n    );\n  }\n}\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nexport async function generateFixtures(day, radioState, selectedOdds) {\n  let url;\n  switch (day) {\n    case \"lastSaturday\":\n      url = saturday;\n      break;\n    case \"historic\":\n      url = historic;\n      break;\n    case \"yesterdaysFixtures\":\n      url = yesterday;\n      break;\n    case \"todaysFixtures\":\n      url = today;\n      break;\n    case \"tomorrowsFixtures\":\n      url = tomorrow;\n      break;\n    default:\n      break;\n  }\n\n  fixtureResponse = await fetch(url);\n\n  await fixtureResponse.json().then((fixtures) => {\n    fixtureArray = Array.from(fixtures.data);\n  });\n\n  let form;\n  let formArray;\n  var isFormStored;\n  var isStoredLocally;\n  let storedForm = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}form${day}`,\n    {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n      },\n    }\n  );\n  if (storedForm.status === 201) {\n    await storedForm.json().then((form) => {\n      formArray = Array.from(form.allForm);\n      isFormStored = true;\n      isStoredLocally = false;\n      allForm = formArray;\n    });\n  } else if (storedForm.status === 200) {\n    await storedForm.json().then((form) => {\n      formArray = Array.from(form.allForm);\n      isFormStored = true;\n      isStoredLocally = false;\n      allForm = formArray;\n    });\n  } else {\n    isFormStored = false;\n    isStoredLocally = false;\n  }\n\n  ReactDOM.render(\n    <div>\n      <div className=\"LoadingText\">Loading all league data</div>\n      <ThreeDots height=\"3em\" />\n    </div>,\n    document.getElementById(\"Buttons\")\n  );\n\n  console.log(orderedLeagues)\n\n  for (let i = 0; i < orderedLeagues.length; i++) {\n    leagueID = orderedLeagues[i].element.id;\n    leagueIdArray.push(leagueID);\n  }\n\n  league = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${currentDay}${month}${year}`\n  );\n\n  var leaguePositions = [];\n  if (league.status === 200) {\n    await league.json().then((leagues) => {\n      console.log(leagues);\n      leagueArray = Array.from(leagues.leagueArray);\n    });\n    console.log(leagueID);\n    generateTables(leagueArray, leagueIdArray);\n  } else {\n    for (let i = 0; i < orderedLeagues.length; i++) {\n      league = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}tables/${orderedLeagues[i].element.id}/${currentDay}${month}${year}`\n      );\n      // eslint-disable-next-line no-loop-func\n      await league.json().then((table) => {\n        leagueArray.push(table);\n      });\n      console.log(leagueID);\n      generateTables(leagueArray, leagueIdArray);\n    }\n  }\n\n  for (let i = 0; i < 35; i++) {\n    for (\n      let x = 0;\n      x < leagueArray[i].data.all_matches_table_overall.length;\n      x++\n    ) {\n      let string = leagueArray[i].data.all_matches_table_overall[x];\n      let stringHome = leagueArray[i].data.all_matches_table_home[x];\n      let stringAway = leagueArray[i].data.all_matches_table_away[x];\n\n      leaguePositions.push({\n        name: string.cleanName,\n        position: string.position,\n        rawPosition: x + 1,\n        homeFormName: stringHome.cleanName,\n        awayFormName: stringAway.cleanName,\n        homeSeasonWinPercentage: stringHome.seasonWins,\n        awaySeasonWinPercentage: stringAway.seasonWins,\n        homeSeasonLossPercentage: stringHome.seasonLosses_home,\n        awaySeasonLossPercentage: stringAway.seasonLosses_away,\n        homeSeasonDrawPercentage: stringHome.seasonDraws,\n        awaySeasonDrawPercentage: stringAway.seasonDraws,\n        homeSeasonMatchesPlayed: stringHome.matchesPlayed,\n        awaySeasonMatchesPlayed: stringAway.matchesPlayed,\n        ppg: string.ppg_overall,\n      });\n    }\n  }\n  console.log(leaguePositions);\n\n  let previousLeagueName;\n\n  for (let i = 0; i < orderedLeagues.length; i++) {\n    leagueID = orderedLeagues[i].element.id;\n    leagueGames = fixtureArray.filter(\n      (game) => game.competition_id === orderedLeagues[i].element.id\n    );\n\n    for (const fixture of leagueGames) {\n      const unixTimestamp = fixture.date_unix;\n      const milliseconds = unixTimestamp * 1000;\n      const dateObject = new Date(milliseconds);\n\n      let match = {};\n      if (orderedLeagues[i].name !== previousLeagueName) {\n        match.leagueName = orderedLeagues[i].name;\n        match.leagueIndex = i;\n      } else {\n        match.leagueName = null;\n      }\n      match.id = fixture.id;\n      match.competition_id = fixture.competition_id;\n      match.time = dateObject.toLocaleString(\"en-GB\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      });\n      match.homeTeam = fixture.home_name;\n      match.awayTeam = fixture.away_name;\n      match.homeOdds = fixture.odds_ft_1;\n      match.awayOdds = fixture.odds_ft_2;\n      match.drawOdds = fixture.odds_ft_x;\n      match.homeDoubleChance = fixture.odds_doublechance_1x;\n      match.awayDoubleChance = fixture.odds_doublechance_x2;\n      match.bttsOdds = fixture.odds_btts_yes;\n      match.homeId = fixture.homeID;\n      match.awayId = fixture.awayID;\n      match.form = [];\n      match.homeTeamInfo = [];\n      match.awayTeamInfo = [];\n      match.btts = false;\n\n      previousLeagueName = orderedLeagues[i].name;\n\n      let homeTeaminLeague;\n      let awayTeaminLeague;\n      let teamPositionHome;\n      let teamPositionHomeTable;\n      let teamPositionAwayTable;\n      let homeTeamWinPercentageHome;\n      let awayTeamWinPercentageAway;\n      let homeTeamLossPercentageHome;\n      let awayTeamLossPercentageAway;\n      let homeTeamDrawPercentageHome;\n      let awayTeamDrawPercentageAway;\n      let teamPositionAway;\n      let teamPositionPrefix;\n      let homePrefix;\n      let homePrefixHomeTable;\n      let awayPrefix;\n      let awayPrefixAwayTable;\n      let homeSeasonPPG;\n      let awaySeasonPPG;\n\n      async function getPrefix(position) {\n        switch (position) {\n          case 1:\n          case 21:\n          case 31:\n            teamPositionPrefix = \"st\";\n            break;\n          case 2:\n          case 22:\n          case 32:\n            teamPositionPrefix = \"nd\";\n            break;\n          case 3:\n          case 23:\n          case 33:\n            teamPositionPrefix = \"rd\";\n            break;\n          case 4:\n          case 5:\n          case 6:\n          case 7:\n          case 8:\n          case 9:\n          case 10:\n          case 11:\n          case 12:\n          case 13:\n          case 14:\n          case 15:\n          case 16:\n          case 17:\n          case 18:\n          case 19:\n          case 20:\n          case 24:\n          case 25:\n          case 26:\n          case 27:\n          case 28:\n          case 29:\n          case 30:\n          case 34:\n          case 35:\n          case 36:\n          case 37:\n          case 38:\n          case 39:\n          case 40:\n            teamPositionPrefix = \"th\";\n            break;\n          default:\n            break;\n        }\n        return teamPositionPrefix;\n      }\n\n      try {\n        homeTeaminLeague = leaguePositions.find(\n          (team) => team.name === match.homeTeam\n        );\n\n        let homeTeaminHomeLeague = leaguePositions.find(\n          (team) => team.homeFormName === match.homeTeam\n        );\n\n        teamPositionHome = homeTeaminLeague.position;\n        teamPositionHomeTable = homeTeaminHomeLeague.position;\n\n        homeTeamWinPercentageHome =\n          (homeTeaminHomeLeague.homeSeasonWinPercentage /\n            homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n          100;\n\n        homeTeamLossPercentageHome =\n          (homeTeaminHomeLeague.homeSeasonLossPercentage /\n            homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n          100;\n\n        homeTeamDrawPercentageHome =\n          (homeTeaminHomeLeague.homeSeasonDrawPercentage /\n            homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n          100;\n\n        homePrefix = await getPrefix(teamPositionHome);\n        homePrefixHomeTable = await getPrefix(teamPositionHomeTable);\n\n        homeSeasonPPG = homeTeaminLeague.ppg.toFixed(2);\n      } catch (error) {\n        console.log(error);\n        teamPositionHome = \"N/A\";\n        homePrefix = \"\";\n        homePrefixHomeTable = \"\";\n        homeSeasonPPG = \"N/A\";\n      }\n\n      try {\n        awayTeaminLeague = leaguePositions.find(\n          (team) => team.name === match.awayTeam\n        );\n\n        let awayTeaminAwayLeague = leaguePositions.find(\n          (team) => team.awayFormName === match.awayTeam\n        );\n\n        teamPositionAway = awayTeaminLeague.position;\n        teamPositionAwayTable = awayTeaminAwayLeague.position;\n\n        awayTeamWinPercentageAway =\n          (awayTeaminAwayLeague.awaySeasonWinPercentage /\n            awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n          100;\n\n        awayTeamLossPercentageAway =\n          (awayTeaminAwayLeague.awaySeasonLossPercentage /\n            awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n          100;\n\n        awayTeamDrawPercentageAway =\n          (awayTeaminAwayLeague.awaySeasonDrawPercentage /\n            awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n          100;\n\n\n        awayPrefix = await getPrefix(teamPositionAway);\n        awayPrefixAwayTable = await getPrefix(teamPositionAwayTable);\n\n        awaySeasonPPG = awayTeaminLeague.ppg.toFixed(2);\n      } catch (error) {\n        console.log(error);\n        teamPositionAway = \"N/A\";\n        awayPrefix = \"\";\n        awaySeasonPPG = \"N/A\";\n      }\n\n      if (!isFormStored) {\n        form = await getForm(match);\n\n        // if (\n        //   form[0].data[0].stats.additional_info &&\n        //   form[1].data[0].stats.additional_info\n        // ) {\n\n        //   //get the last 5 games stats from a big block of text\n        //   var homeExtract = form[0].data[0].stats.additional_info.replace(\n        //     /[\"']/g,\n        //     \"\"\n        //   );\n\n        //   var slug = homeExtract.split(\",53:\").pop().toUpperCase();\n        let homeFormString5 =\n          form[0].data[0].stats.additional_info.formRun_overall.toUpperCase();\n        let awayFormString5 =\n          form[1].data[0].stats.additional_info.formRun_overall.toUpperCase();\n        let homeFormString6 =\n          form[0].data[1].stats.additional_info.formRun_overall.toUpperCase();\n        let awayFormString6 =\n          form[1].data[1].stats.additional_info.formRun_overall.toUpperCase();\n        let homeFormString10 =\n          form[0].data[2].stats.additional_info.formRun_overall.toUpperCase();\n        let awayFormString10 =\n          form[1].data[2].stats.additional_info.formRun_overall.toUpperCase();\n\n        let homeFormRun =\n          form[0].data[2].stats.additional_info.formRun_home.toUpperCase();\n        let awayFormRun =\n          form[1].data[2].stats.additional_info.formRun_away.toUpperCase();\n\n        lastFiveFormHome = Array.from(homeFormString5);\n        lastSixFormHome = Array.from(homeFormString6);\n        lastTenFormHome = Array.from(homeFormString10);\n        lastFiveFormAway = Array.from(awayFormString5);\n        lastSixFormAway = Array.from(awayFormString6);\n        lastTenFormAway = Array.from(awayFormString10);\n        formRunHome = Array.from(homeFormRun);\n        formRunAway = Array.from(awayFormRun);\n\n        if (teamPositionHome === 0) {\n          teamPositionHome = \"N/A\";\n          teamPositionHomeTable = \"N/A\";\n          homePrefix = \"\";\n          homePrefixHomeTable = \"\";\n        }\n\n        if (teamPositionAway === 0) {\n          teamPositionAway = \"N/A\";\n          teamPositionAwayTable = \"N/A\";\n          awayPrefix = \"\";\n          awayPrefixAwayTable = \"\";\n        }\n        // } else {\n        //   lastFiveFormHome = \"N/A\"\n        //   lastFiveFormAway = \"N/A\"\n        // }\n\n\n        allForm.push({\n          id: match.id,\n          home: {\n            teamName: match.homeTeam,\n            0: {\n              XGOverall: parseFloat(form[0].data[0].stats.xg_for_avg_overall),\n              XG: parseFloat(form[0].data[0].stats.xg_for_avg_home),\n              ScoredOverall: parseFloat(\n                form[0].data[0].stats.seasonScoredNum_overall\n              ),\n              ScoredAverage: parseFloat(\n                form[0].data[0].stats.seasonScoredAVG_home\n              ),\n              PlayedHome: parseFloat(\n                form[0].data[0].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[0].data[0].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[0].data[0].stats.seasonConcededNum_overall\n              ),\n              ConcededAverage: parseFloat(\n                form[0].data[0].stats.seasonConcededAVG_home\n              ),\n              XGAgainstAvgOverall: parseFloat(\n                form[0].data[0].stats.xg_against_avg_overall\n              ),\n              XGAgainstAverage: parseFloat(\n                form[0].data[0].stats.xg_against_avg_home\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[0].data[0].stats.seasonCSPercentage_home\n              ),\n              AveragePossessionOverall: parseFloat(\n                form[0].data[0].stats.possessionAVG_overall\n              ),\n              AveragePossession: parseFloat(\n                form[0].data[0].stats.possessionAVG_home\n              ),\n              AverageShotsOnTargetOverall: parseFloat(\n                form[0].data[0].stats.shotsOnTargetAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[0].data[0].stats.shotsOnTargetAVG_home\n              ),\n              AverageDangerousAttacksOverall: parseFloat(\n                form[0].data[0].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[0].data[0].stats.seasonPPG_home),\n              AttacksHome: parseFloat(form[0].data[0].stats.attacks_avg_home),\n              AttacksAway: parseFloat(form[0].data[0].stats.attacks_avg_away),\n              AverageDangerousAttacks: parseFloat(\n                form[0].data[0].stats.dangerous_attacks_avg_home\n              ),\n              homeAttackAdvantage: parseFloat(\n                form[0].data[0].stats.homeAttackAdvantage\n              ),\n              homeDefenceAdvantage: parseFloat(\n                form[0].data[0].stats.homeDefenceAdvantage\n              ),\n              BTTSPercentage: parseInt(\n                form[0].data[0].stats.seasonBTTSPercentage_home\n              ),\n              LastFiveForm: lastFiveFormHome,\n              LastSixForm: lastSixFormHome,\n              LastTenForm: lastTenFormHome,\n              LeaguePosition: `${teamPositionHome}${homePrefix}`,\n              homeRawPosition: homeTeaminLeague.rawPosition,\n              homeTeamHomePositionRaw: teamPositionHomeTable,\n              SeasonPPG: homeSeasonPPG,\n            },\n            1: {\n              XGOverall: parseFloat(form[0].data[1].stats.xg_for_avg_overall),\n              XG: parseFloat(form[0].data[1].stats.xg_for_avg_home),\n              ScoredOverall: parseFloat(\n                form[0].data[1].stats.seasonScoredNum_overall\n              ),\n              ScoredAverage: parseFloat(\n                form[0].data[1].stats.seasonScoredAVG_home\n              ),\n              PlayedHome: parseFloat(\n                form[0].data[1].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[0].data[1].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[0].data[1].stats.seasonConcededNum_overall\n              ),\n              ConcededAverage: parseFloat(\n                form[0].data[1].stats.seasonConcededAVG_home\n              ),\n              XGAgainstAvgOverall: parseFloat(\n                form[0].data[1].stats.xg_against_avg_overall\n              ),\n              XGAgainstAverage: parseFloat(\n                form[0].data[1].stats.xg_against_avg_home\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[0].data[1].stats.seasonCSPercentage_home\n              ),\n              AveragePossessionOverall: parseFloat(\n                form[0].data[1].stats.possessionAVG_overall\n              ),\n              AveragePossession: parseFloat(\n                form[0].data[1].stats.possessionAVG_home\n              ),\n              AverageShotsOnTargetOverall: parseFloat(\n                form[0].data[1].stats.shotsOnTargetAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[0].data[1].stats.shotsOnTargetAVG_home\n              ),\n              AverageDangerousAttacksOverall: parseFloat(\n                form[0].data[1].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[0].data[1].stats.seasonPPG_home),\n              AttacksHome: parseFloat(form[0].data[1].stats.attacks_avg_home),\n              AttacksAway: parseFloat(form[0].data[1].stats.attacks_avg_away),\n              AverageDangerousAttacks: parseFloat(\n                form[0].data[1].stats.dangerous_attacks_avg_home\n              ),\n              homeAttackAdvantage: parseFloat(\n                form[0].data[1].stats.homeAttackAdvantage\n              ),\n              homeDefenceAdvantage: parseFloat(\n                form[0].data[1].stats.homeDefenceAdvantage\n              ),\n              BTTSPercentage: parseInt(\n                form[0].data[1].stats.seasonBTTSPercentage_home\n              ),\n              LastFiveForm: lastFiveFormHome,\n              LastSixForm: lastSixFormHome,\n              LastTenForm: lastTenFormHome,\n              LeaguePosition: `${teamPositionHome}${homePrefix}`,\n              homeRawPosition: homeTeaminLeague.rawPosition,\n              homeTeamHomePositionRaw: teamPositionHomeTable,\n              SeasonPPG: homeSeasonPPG,\n            },\n            2: {\n              XGOverall: parseFloat(form[0].data[2].stats.xg_for_avg_overall),\n              XG: parseFloat(form[0].data[2].stats.xg_for_avg_home),\n              ScoredOverall: parseFloat(\n                form[0].data[2].stats.seasonScoredNum_overall\n              ),\n              ScoredAverage: parseFloat(\n                form[0].data[2].stats.seasonScoredAVG_home\n              ),\n              PlayedHome: parseFloat(\n                form[0].data[2].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[0].data[2].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[0].data[2].stats.seasonConcededNum_overall\n              ),\n              ConcededAverage: parseFloat(\n                form[0].data[2].stats.seasonConcededAVG_home\n              ),\n              XGAgainstAvgOverall: parseFloat(\n                form[0].data[2].stats.xg_against_avg_overall\n              ),\n              XGAgainstAverage: parseFloat(\n                form[0].data[2].stats.xg_against_avg_home\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[0].data[2].stats.seasonCSPercentage_home\n              ),\n              AveragePossessionOverall: parseFloat(\n                form[0].data[2].stats.possessionAVG_overall\n              ),\n              AveragePossession: parseFloat(\n                form[0].data[2].stats.possessionAVG_home\n              ),\n              AverageShotsOnTargetOverall: parseFloat(\n                form[0].data[2].stats.shotsOnTargetAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[0].data[2].stats.shotsOnTargetAVG_home\n              ),\n              AverageDangerousAttacksOverall: parseFloat(\n                form[0].data[2].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[0].data[2].stats.seasonPPG_home),\n              AttacksHome: parseFloat(form[0].data[2].stats.attacks_avg_home),\n              AttacksAway: parseFloat(form[0].data[2].stats.attacks_avg_away),\n              AverageDangerousAttacks: parseFloat(\n                form[0].data[2].stats.dangerous_attacks_avg_home\n              ),\n              homeAttackAdvantage: parseFloat(\n                form[0].data[2].stats.homeAttackAdvantage\n              ),\n              homeDefenceAdvantage: parseFloat(\n                form[0].data[2].stats.homeDefenceAdvantage\n              ),\n              BTTSPercentage: parseInt(\n                form[0].data[2].stats.seasonBTTSPercentage_home\n              ),\n              LastFiveForm: lastFiveFormHome,\n              LastSixForm: lastSixFormHome,\n              LastTenForm: lastTenFormHome,\n              LeaguePosition: `${teamPositionHome}${homePrefix}`,\n              homeRawPosition: homeTeaminLeague.rawPosition,\n              homeTeamHomePositionRaw: teamPositionHomeTable,\n              SeasonPPG: homeSeasonPPG,\n              WinPercentage: homeTeamWinPercentageHome,\n              LossPercentage: homeTeamLossPercentageHome,\n              DrawPercentage: homeTeamDrawPercentageHome,\n              formRun: formRunHome\n            },\n          },\n          away: {\n            teamName: match.awayTeam,\n            0: {\n              XGOverall: parseFloat(form[1].data[0].stats.xg_for_avg_overall),\n              XG: parseFloat(form[1].data[0].stats.xg_for_avg_away),\n              ScoredOverall: parseFloat(\n                form[1].data[0].stats.seasonScoredNum_overall\n              ),\n              ScoredAverage: parseFloat(\n                form[1].data[0].stats.seasonScoredAVG_away\n              ),\n              PlayedHome: parseFloat(\n                form[1].data[0].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[1].data[0].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[1].data[0].stats.seasonConcededNum_overall\n              ),\n              ConcededAverage: parseFloat(\n                form[1].data[0].stats.seasonConcededAVG_away\n              ),\n              XGAgainstAvgOverall: parseFloat(\n                form[1].data[0].stats.xg_against_avg_overall\n              ),\n              XGAgainstAverage: parseFloat(\n                form[1].data[0].stats.xg_against_avg_away\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[1].data[0].stats.seasonCSPercentage_away\n              ),\n              AveragePossessionOverall: parseFloat(\n                form[1].data[0].stats.possessionAVG_overall\n              ),\n              AveragePossession: parseFloat(\n                form[1].data[0].stats.possessionAVG_away\n              ),\n              AverageShotsOnTargetOverall: parseFloat(\n                form[1].data[0].stats.shotsOnTargetAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[1].data[0].stats.shotsOnTargetAVG_away\n              ),\n              AverageDangerousAttacksOverall: parseFloat(\n                form[1].data[0].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[1].data[0].stats.seasonPPG_away),\n              AttacksAverage: parseFloat(\n                form[1].data[0].stats.attacks_avg_away\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[1].data[0].stats.dangerous_attacks_avg_away\n              ),\n              BTTSPercentage: parseInt(\n                form[0].data[0].stats.seasonBTTSPercentage_away\n              ),\n              LastFiveForm: lastFiveFormAway,\n              LastSixForm: lastSixFormAway,\n              LastTenForm: lastTenFormAway,\n              LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n              awayRawPosition: awayTeaminLeague.rawPosition,\n              awayTeamAwayPositionRaw: teamPositionAwayTable,\n              SeasonPPG: awaySeasonPPG,\n            },\n            1: {\n              XGOverall: parseFloat(form[1].data[1].stats.xg_for_avg_overall),\n              XG: parseFloat(form[1].data[1].stats.xg_for_avg_away),\n              ScoredOverall: parseFloat(\n                form[1].data[1].stats.seasonScoredNum_overall\n              ),\n              ScoredAverage: parseFloat(\n                form[1].data[1].stats.seasonScoredAVG_away\n              ),\n              PlayedHome: parseFloat(\n                form[1].data[1].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[1].data[1].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[1].data[1].stats.seasonConcededNum_overall\n              ),\n              ConcededAverage: parseFloat(\n                form[1].data[1].stats.seasonConcededAVG_away\n              ),\n              XGAgainstAvgOverall: parseFloat(\n                form[1].data[1].stats.xg_against_avg_overall\n              ),\n              XGAgainstAverage: parseFloat(\n                form[1].data[1].stats.xg_against_avg_away\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[1].data[1].stats.seasonCSPercentage_away\n              ),\n              AveragePossessionOverall: parseFloat(\n                form[1].data[1].stats.possessionAVG_overall\n              ),\n              AveragePossession: parseFloat(\n                form[1].data[1].stats.possessionAVG_away\n              ),\n              AverageShotsOnTargetOverall: parseFloat(\n                form[1].data[1].stats.shotsOnTargetAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[1].data[1].stats.shotsOnTargetAVG_away\n              ),\n              AverageDangerousAttacksOverall: parseFloat(\n                form[1].data[1].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[1].data[1].stats.seasonPPG_away),\n              AttacksAverage: parseFloat(\n                form[1].data[1].stats.attacks_avg_away\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[1].data[1].stats.dangerous_attacks_avg_away\n              ),\n              BTTSPercentage: parseInt(\n                form[0].data[1].stats.seasonBTTSPercentage_away\n              ),\n              LastFiveForm: lastFiveFormAway,\n              LastSixForm: lastSixFormAway,\n              LastTenForm: lastTenFormAway,\n              LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n              awayRawPosition: awayTeaminLeague.rawPosition,\n              awayTeamAwayPositionRaw: teamPositionAwayTable,\n              SeasonPPG: awaySeasonPPG,\n            },\n            2: {\n              XGOverall: parseFloat(form[1].data[2].stats.xg_for_avg_overall),\n              XG: parseFloat(form[1].data[2].stats.xg_for_avg_away),\n              ScoredOverall: parseFloat(\n                form[1].data[2].stats.seasonScoredNum_overall\n              ),\n              ScoredAverage: parseFloat(\n                form[1].data[2].stats.seasonScoredAVG_away\n              ),\n              PlayedHome: parseFloat(\n                form[1].data[2].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[1].data[2].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[1].data[2].stats.seasonConcededNum_overall\n              ),\n              ConcededAverage: parseFloat(\n                form[1].data[2].stats.seasonConcededAVG_away\n              ),\n              XGAgainstAvgOverall: parseFloat(\n                form[1].data[2].stats.xg_against_avg_overall\n              ),\n              XGAgainstAverage: parseFloat(\n                form[1].data[2].stats.xg_against_avg_away\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[1].data[2].stats.seasonCSPercentage_away\n              ),\n              AveragePossessionOverall: parseFloat(\n                form[1].data[2].stats.possessionAVG_overall\n              ),\n              AveragePossession: parseFloat(\n                form[1].data[2].stats.possessionAVG_away\n              ),\n              AverageShotsOnTargetOverall: parseFloat(\n                form[1].data[2].stats.shotsOnTargetAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[1].data[2].stats.shotsOnTargetAVG_away\n              ),\n              AverageDangerousAttacksOverall: parseFloat(\n                form[1].data[2].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[1].data[2].stats.seasonPPG_away),\n              AttacksAverage: parseFloat(\n                form[1].data[2].stats.attacks_avg_away\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[1].data[2].stats.dangerous_attacks_avg_away\n              ),\n              BTTSPercentage: parseInt(\n                form[0].data[2].stats.seasonBTTSPercentage_away\n              ),\n              LastFiveForm: lastFiveFormAway,\n              LastSixForm: lastSixFormAway,\n              LastTenForm: lastTenFormAway,\n              LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n              awayRawPosition: awayTeaminLeague.rawPosition,\n              awayTeamAwayPositionRaw: teamPositionAwayTable,\n              SeasonPPG: awaySeasonPPG,\n              WinPercentage: awayTeamWinPercentageAway,\n              LossPercentage: awayTeamLossPercentageAway,\n              DrawPercentage: awayTeamDrawPercentageAway,\n              formRun: formRunAway\n            },\n          },\n        });\n      }\n\n      match.homeBadge = fixture.home_image;\n      match.awayBadge = fixture.away_image;\n\n      match.homePpg = fixture.home_ppg.toFixed(2);\n      match.homeFormColour = await applyColour(match.homePpg);\n\n      match.awayPpg = fixture.away_ppg.toFixed(2);\n      match.awayFormColour = await applyColour(match.awayPpg);\n\n      match.lastFiveFormHome = lastFiveFormHome;\n      match.lastFiveFormAway = lastFiveFormAway;\n      match.homeRawPosition = homeTeaminLeague.rawPosition;\n      match.awayRawPosition = awayTeaminLeague.rawPosition;\n\n      match.homeTeamHomePosition = `${teamPositionHomeTable}${homePrefixHomeTable}`;\n      match.awayTeamAwayPosition = `${teamPositionAwayTable}${awayPrefixAwayTable}`;\n\n      match.homeTeamHomePositionRaw = teamPositionHomeTable;\n      match.awayTeamAwayPositionRaw = teamPositionAwayTable;\n\n      match.homeTeamWinPercentage = homeTeamWinPercentageHome;\n      match.awayTeamWinPercentage = awayTeamWinPercentageAway;\n\n      match.homeTeamLossPercentage = homeTeamLossPercentageHome;\n      match.awayTeamLossPercentage = awayTeamLossPercentageAway;\n\n      match.homeTeamDrawPercentage = homeTeamDrawPercentageHome;\n      match.awayTeamDrawPercentage = awayTeamDrawPercentageAway;\n\n      match.status = fixture.status;\n\n      match.btts_potential = fixture.btts_potential;\n      match.game = match.homeTeam + \" v \" + match.awayTeam;\n\n      match.homeGoals = fixture.homeGoalCount;\n      match.awayGoals = fixture.awayGoalCount;\n\n      match.expectedGoalsHomeToDate = fixture.team_a_xg_prematch;\n      match.expectedGoalsAwayToDate = fixture.team_b_xg_prematch;\n\n      if (match.status !== \"canceled\" || match.status !== \"suspended\") {\n        matches.push(match);\n        await createFixture(match, false);\n      }\n    }\n    // }\n    ReactDOM.render(\n      <Button\n        text={\"Generate predictions\"}\n        onClickEvent={() => getScorePrediction(day)}\n      />,\n      document.getElementById(\"Buttons\")\n    );\n  }\n  if (!isStoredLocally) {\n    await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}allForm${day}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ allForm }),\n    });\n  }\n  await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${currentDay}${month}${year}`,\n    {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ leagueArray }),\n    }\n  );\n\n  // await fetch(\n  //   `${process.env.REACT_APP_EXPRESS_SERVER}leagueStats/${currentDay}${month}${year}`,\n  //   {\n  //     method: \"POST\",\n  //     headers: {\n  //       Accept: \"application/json\",\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify({ leagueStatsArray }),\n  //   }\n  // );\n}\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#172A3A\",\n    color: theme.palette.common.white,\n    padding: \"0.35em\",\n    paddingTop: \"0.5em\",\n    paddingBottom: \"0.5em\",\n    textAlign: \"left\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    fontSize: \"1.9em\",\n    textAlign: \"left\",\n    fontFamily: \"inherit\",\n    padding: \"0.35em\",\n    paddingTop: \"0.5em\",\n    paddingBottom: \"0.5em\",\n    border: \"none\",\n    margin: \"none\",\n    color: \"white\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#1D3549\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#172B3A\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\nfunction styleForm(formIndicator) {\n  let className;\n  if (formIndicator === \"W\") {\n    className = \"winLeague\";\n  } else if (formIndicator === \"D\") {\n    className = \"drawLeague\";\n  } else if (formIndicator === \"L\") {\n    className = \"lossLeague\";\n  } \n  return className;\n}\n\nexport default function LeagueTable(props) {\n  let rows = props.Teams.map((team, i) => (\n    <StyledTableRow key={`${props.Key}row${i}`}>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Position}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Name}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Played}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Wins}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Draws}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Losses}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.For}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Against}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.GoalDifference}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Points}`}\n      </StyledTableCell>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ textAlign: \"center\" }}\n      >\n        <span className={styleForm(team.Form[0])}>{team.Form[0]}</span>\n        <span className={styleForm(team.Form[1])}>{team.Form[1]}</span>\n        <span className={styleForm(team.Form[2])}>{team.Form[2]}</span>\n        <span className={styleForm(team.Form[3])}>{team.Form[3]}</span>\n        <span className={styleForm(team.Form[4])}>{team.Form[4]}</span>\n      </StyledTableCell>\n    </StyledTableRow>\n  ));\n\n  function getTopScorersTeam(id){\n  let found = props.Teams.find(\n      (team) =>\n        team.ID === id\n    )\n    return found.Name;\n  }\n\n  if(props.Teams[0].LeagueID !== 6083 && props.Teams[0].LeagueID !== 6969){\n    console.log(props.Teams.LeagueID)\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table className=\"Table\" aria-label=\"customized table\" key={props.Key}>\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>P</StyledTableCell>\n                <StyledTableCell>Team</StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <StyledTableCell>Pts</StyledTableCell>\n                <StyledTableCell style={{ textAlign: \"center\" }}>\n                  Form\n                </StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n          <div className=\"LeagueStatisticsHeader\">League Statistics</div>\n          <div className=\"LeagueStatistics\">\n          <ul className=\"LeagueStatsColumn\">\n            <li>Average home goals: {props.Stats.seasonAVG_home}</li>\n            <li>Average away goals: {props.Stats.seasonAVG_away}</li>\n            <li>BTTS: {props.Stats.seasonBTTSPercentage}%</li>\n            <li>Over 0.5 goals: {props.Stats.seasonOver05Percentage_overall}%</li>\n            <li>Over 1.5 goals: {props.Stats.seasonOver15Percentage_overall}%</li>\n            <li>Over 2.5 goals: {props.Stats.seasonOver25Percentage_overall}%</li>\n            <li>Over 3.5 goals: {props.Stats.seasonOver35Percentage_overall}%</li>\n            <li>Over 4.5 goals: {props.Stats.seasonOver45Percentage_overall}%</li>\n            </ul>\n            <ul className=\"LeagueStatsColumn\">\n            <li>Over 7.5 corners: {props.Stats.over75CornersPercentage_overall}%</li>\n            <li>Over 8.5 corners: {props.Stats.over85CornersPercentage_overall}%</li>\n            <li>Over 9.5 corners: {props.Stats.over95CornersPercentage_overall}%</li>\n            <li>Over 10.5 corners: {props.Stats.over105CornersPercentage_overall}%</li>\n            <li>Over 11.5 corners: {props.Stats.over115CornersPercentage_overall}%</li>\n            <li>Over 12.5 corners: {props.Stats.over125CornersPercentage_overall}%</li>\n            <li>Corners average: {props.Stats.cornersAVG_overall}</li>\n            <li>Cards average: {props.Stats.cardsAVG_overall}</li>\n\n            \n            </ul>\n            <ul className=\"TopScorersColumn\">\n            <h4>Top scorers</h4>\n            <li>{props.Stats.top_scorers[0].known_as} ({getTopScorersTeam(props.Stats.top_scorers[0].club_team_id)}): {props.Stats.top_scorers[0].goals_overall}</li>\n            <li>{props.Stats.top_scorers[1].known_as} ({getTopScorersTeam(props.Stats.top_scorers[1].club_team_id)}): {props.Stats.top_scorers[1].goals_overall}</li>\n            <li>{props.Stats.top_scorers[2].known_as} ({getTopScorersTeam(props.Stats.top_scorers[2].club_team_id)}): {props.Stats.top_scorers[2].goals_overall}</li>\n            <li>{props.Stats.top_scorers[3].known_as} ({getTopScorersTeam(props.Stats.top_scorers[3].club_team_id)}): {props.Stats.top_scorers[3].goals_overall}</li>\n            <li>{props.Stats.top_scorers[4].known_as} ({getTopScorersTeam(props.Stats.top_scorers[4].club_team_id)}): {props.Stats.top_scorers[4].goals_overall}</li>\n            <li>{props.Stats.top_scorers[5].known_as} ({getTopScorersTeam(props.Stats.top_scorers[5].club_team_id)}): {props.Stats.top_scorers[5].goals_overall}</li>\n            <li>{props.Stats.top_scorers[6].known_as} ({getTopScorersTeam(props.Stats.top_scorers[6].club_team_id)}): {props.Stats.top_scorers[6].goals_overall}</li>\n            <li>{props.Stats.top_scorers[7].known_as} ({getTopScorersTeam(props.Stats.top_scorers[7].club_team_id)}): {props.Stats.top_scorers[7].goals_overall}</li>\n            <li>{props.Stats.top_scorers[8].known_as} ({getTopScorersTeam(props.Stats.top_scorers[8].club_team_id)}): {props.Stats.top_scorers[8].goals_overall}</li>\n            <li>{props.Stats.top_scorers[9].known_as} ({getTopScorersTeam(props.Stats.top_scorers[9].club_team_id)}): {props.Stats.top_scorers[9].goals_overall}</li>\n          </ul>\n        </div>\n        </TableContainer>\n      );\n    }\n  } else {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table aria-label=\"customized table\" key={props.Key}>\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>P</StyledTableCell>\n                <StyledTableCell>Team</StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <StyledTableCell>Pts</StyledTableCell>\n                <StyledTableCell style={{ textAlign: \"center\" }}>\n                  Form\n                </StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n        </TableContainer>\n      );\n    }\n  }\n \n}\n","import React, { Component } from \"react\";\nexport var selectedOption = \"5\";\n\nexport var fixtureList = [];\n\nexport class Radio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOption: this.props.value,\n    };\n  }\n\n  handleOptionChange = () => {\n    this.setState({\n      selectedOption: this.props.value,\n    });\n    selectedOption = this.state.selectedOption;\n  };\n\n  render() {\n    return (\n      <section className=\"dark\">\n        <div className={this.props.className}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"lastGames\"\n              checked={this.state.checked}\n              onChange={this.handleOptionChange}\n              data-cy={this.props.value}\n            />\n            <span className=\"design\"></span>\n            <span className=\"text\">Last {this.props.value} games</span>\n          </label>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Radio;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./components/Header\";\nimport { Button } from \"./components/Button\";\nimport OddsRadio from \"./components/OddsRadio\";\nimport { selectedOdds } from \"./components/OddsRadio\";\nimport { StyledKofiButton } from \"./components/KofiButton\";\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  RedditShareButton,\n  RedditIcon,\n  TelegramShareButton,\n  TelegramIcon,\n  TwitterShareButton,\n  TwitterIcon,\n  WhatsappShareButton,\n  WhatsappIcon,\n} from \"react-share\";\n\nimport { generateFixtures } from \"./logic/getFixtures\";\nimport { selectedOption } from \"./components/radio\";\nimport { ThreeDots } from \"react-loading-icons\";\nimport reactDom from \"react-dom\";\nrequire(\"dotenv\").config();\n\nexport const proxyurl = \"https://safe-caverns-99679.herokuapp.com/\";\nexport var fixtureList = [];\nexport let allLeagueData = [];\n\nexport const availableLeagues = [];\nexport var orderedLeagues = [];\n\nasync function getHighestScoringTeams() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}over25`);\n  let arr = [];\n  let bestO25Bets;\n  await teamsList.json().then(async (teams) => {\n    console.log(teams.data);\n    for (let index = 0; index < 50; index++) {\n      const game = {\n        game: teams.data.top_fixtures.data[index].name,\n        teamCountry: teams.data.top_fixtures.data[index].country,\n        odds: teams.data.top_fixtures.data[index].odds_ft_over25,\n        averageGoals: teams.data.top_fixtures.data[index].avg_potential,\n        timestamp: await getMatchTime(\n          teams.data.top_fixtures.data[index].date_unix\n        ),\n      };\n      arr.push(game);\n    }\n\n    const finalArray = arr.filter(\n      (country) =>\n        country.teamCountry === \"England\" ||\n        country.teamCountry === \"Germany\" ||\n        country.teamCountry === \"Italy\" ||\n        country.teamCountry === \"France\" ||\n        country.teamCountry === \"Spain\"\n    );\n\n    bestO25Bets = finalArray.filter((game) => game.odds > 1.5);\n  });\n\n  let sortedArray = bestO25Bets.sort((a, b) => b.averageGoals - a.averageGoals);\n\n  return sortedArray;\n}\n\nasync function getLowestScoringTeams() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}under25`);\n  let arr = [];\n  let bestU25Bets;\n  await teamsList.json().then(async (teams) => {\n    console.log(teams.data);\n    for (let index = 0; index < 50; index++) {\n      const game = {\n        game: teams.data.top_fixtures.data[index].name,\n        teamCountry: teams.data.top_fixtures.data[index].country,\n        odds: teams.data.top_fixtures.data[index].odds_ft_under25,\n        averageGoals: teams.data.top_fixtures.data[index].avg_potential,\n        timestamp: await getMatchTime(\n          teams.data.top_fixtures.data[index].date_unix\n        ),\n      };\n      arr.push(game);\n    }\n\n    const finalArray = arr.filter(\n      (country) =>\n        country.teamCountry === \"England\" ||\n        country.teamCountry === \"Germany\" ||\n        country.teamCountry === \"Italy\" ||\n        country.teamCountry === \"France\" ||\n        country.teamCountry === \"Spain\"\n    );\n\n    bestU25Bets = finalArray.filter((game) => game.odds > 1.5);\n  });\n  let sortedArray = bestU25Bets.sort((a, b) => a.averageGoals - b.averageGoals);\n\n  return sortedArray;\n}\n\nasync function getMatchTime(unixTime) {\n  let milliseconds = unixTime * 1000;\n  let dateObject = new Date(milliseconds);\n\n  let time = dateObject.toLocaleString(\"en-GB\");\n  return time;\n}\n\n(async function getLeagueList() {\n  let leagueList;\n\n  leagueList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}leagueList`);\n\n  // ReactDOM.render(\n  //   <div className=\"LoadingText\">\n  //     Loading form data. This might take a while if you're the first user\n  //     today...\n  //   </div>,\n  //   document.getElementById(\"RadioButtons\")\n  // );\n\n  let leagueArray;\n  await leagueList.json().then((leagues) => {\n    leagueArray = Array.from(leagues.data);\n  });\n\n  for (let i = 0; i < leagueArray.length; i++) {\n    const league = leagueArray[i];\n    const name = leagueArray[i].name;\n\n    for (let x = 0; x < league.season.length; x++) {\n      const element = league.season[x];\n\n      if (element.year === 20212022 || element.year === 2022) {\n        if (element.id !== 5784) {\n          availableLeagues.push({ name: name, element });\n        }\n      }\n    }\n\n    async function mapOrder(array, order, key) {\n      array.sort(function (a, b) {\n        var A = a.element[key],\n          B = b.element[key];\n\n        if (order.indexOf(A) > order.indexOf(B)) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n      return array;\n    }\n\n    //leagues ordered by id\n    var leagueOrder = [\n      6135, //premier league 21/22\n      6089, //championship\n      6017, //league 1 21/22\n      6015, //league 2 21/22\n      6088, //National league 21/22\n      6211, //\n      5992, //Scottish Prem 21/22\n      6192, //\n      6198, //Serie A\n      6019, //French Prem 21/22\n      6117, //Portagul Prem 21/22\n      5951, //Dutch Prem 21/22\n      6079, //Belgian Pro League 21/22\n      5505, //sweden 21/22\n      5961, //Danish Prem 21\n      7048, //Norway Prem 21\n      6008, //Austrian Prem 21\n      6282, //Greek Prem 21\n      5948, //Polish prem 21/22\n      6967, //Irish Prem 21\n      6120, //Spanish secunda 21/22\n      6205, //\n      6020, //Bundesliga 2 21/22\n      6018, //French League 2 21/22\n      5991, //Scottish Championship\n      5976, //Scottish league 1 21/22\n      5974, //Scottish league 2 21/22\n      6173, //Women's prem 21/22\n      6969, //MLS 22\n      6639, //Australian A league 21/22\n      7097, //Brazil prem 22\n      6935, //Japan 21\n      7061, //S Korea 22\n      6038, //Mexico prem 21/22`\n      6083, //National league North and South 21/22\n    ];\n\n    orderedLeagues = await mapOrder(availableLeagues, leagueOrder, \"id\");\n  }\n\n  // ReactDOM.render(\n  //   <div className=\"LastXGames\">\n  //     <Radio\n  //       value=\"5\"\n  //       label=\"form based on last 5 games\"\n  //       className=\"FormRadio\"\n  //     />\n  //     <Radio\n  //       value=\"6\"\n  //       label=\"form based on last 6 games\"\n  //       className=\"FormRadio\"\n  //     />\n  //     <Radio\n  //       value=\"10\"\n  //       label=\"form based on last 10 games\"\n  //       className=\"FormRadio\"\n  //     />\n  //   </div>,\n  //   document.getElementById(\"RadioButtons\")\n  // );\n\n  // ReactDOM.render(\n  //   <TextBlock\n  //     text=\"Select how many games you would like to fetch form data for\"\n  //     className=\"RadioText\"\n  //   />,\n  //   document.getElementById(\"RadioText\")\n  // );\n\n  ReactDOM.render(\n    <div className=\"FixtureButtons\">\n      <div className=\"historicResults\">\n        <Button\n          text={\"Last Saturday\"}\n          className=\"HistoricFixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"lastSaturday\",\n                selectedOption,\n                selectedOdds\n              )\n            )\n          }\n        />\n        <Button\n          text={\"Historic predictions\"}\n          className=\"HistoricFixturesButtonRight\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\"historic\", selectedOption, selectedOdds)\n            )\n          }\n        />\n      </div>\n      <Button\n        text={\"Yesterday\"}\n        className=\"FixturesButton\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"yesterdaysFixtures\",\n              selectedOption,\n              selectedOdds\n            )\n          )\n        }\n      />\n      <Button\n        text={\"Today\"}\n        className=\"FixturesButton\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"todaysFixtures\",\n              selectedOption,\n              selectedOdds\n            )\n          )\n        }\n      />\n      <Button\n        text={\"Tomorrow\"}\n        className=\"FixturesButton\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"tomorrowsFixtures\",\n              selectedOption,\n              selectedOdds\n            )\n          )\n        }\n      />\n    </div>,\n    document.getElementById(\"Buttons\")\n  );\n  ReactDOM.render(\n    <div className=\"OddsRadios\">\n      <OddsRadio value=\"Fractional\"></OddsRadio>\n      <OddsRadio value=\"Decimal\"></OddsRadio>\n    </div>,\n    document.getElementById(\"Checkbox\")\n  );\n\n  ReactDOM.render(\n    <Button\n      text={\"Best value for under 2.5 goals\"}\n      className={\"Under25TeamsButton\"}\n      onClickEvent={async () => {\n        let games = await getLowestScoringTeams();\n        const teamList = [];\n\n        games.forEach(async (game) =>\n          teamList.push(\n            <ul className=\"GlobalStat\">\n              <p className=\"TeamName\">\n                {game.game} ({game.teamCountry})\n              </p>\n              <li>{game.timestamp}</li>\n              <li>Average combined goals: {game.averageGoals}</li>\n              <li>Odds under 2.5 goals: {game.odds}</li>\n            </ul>\n          )\n        );\n\n        reactDom.render(\n          <div>\n            <h3>Games featuring low scoring teams with high value odds</h3>\n            <ul>{teamList}</ul>\n          </div>,\n          document.getElementById(\"Under25Games\")\n        );\n      }}\n    ></Button>,\n    document.getElementById(\"Under25Games\")\n  );\n\n  ReactDOM.render(\n    <Button\n      text={\"Best value for over 2.5 goals\"}\n      className={\"Over25TeamsButton\"}\n      onClickEvent={async () => {\n        let games = await getHighestScoringTeams();\n        const teamList = [];\n\n        games.forEach(async (game) =>\n          teamList.push(\n            <ul className=\"GlobalStat\">\n              <p className=\"TeamName\">\n                {game.game} ({game.teamCountry})\n              </p>\n              <li>{game.timestamp}</li>\n              <li>Average combined goals: {game.averageGoals}</li>\n              <li>Odds over 2.5 goals: {game.odds}</li>\n            </ul>\n          )\n        );\n\n        reactDom.render(\n          <div>\n            <h3>Games featuring high scoring teams with high value odds</h3>\n            <ul>{teamList}</ul>\n          </div>,\n          document.getElementById(\"Over25Games\")\n        );\n      }}\n    ></Button>,\n    document.getElementById(\"Over25Games\")\n  );\n})();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <a\n        className=\"SocialLink\"\n        href=\"https://www.reddit.com/r/xgtipping/\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        r/xgtipping\n      </a>\n      <div id=\"LoadingContainer\" className=\"LoadingContainer\" />\n      <div id=\"RadioContainer\" className=\"RadioContainer\">\n        <div id=\"RadioText\" />\n        <div id=\"RadioButtons\" />\n      </div>\n      <div id=\"Day\" />\n      <div id=\"Checkbox\" />\n      <div id=\"Buttons\" className=\"Buttons\">\n        <ThreeDots className=\"MainLoading\" />\n        <div>Loading all fixture and form data...</div>\n      </div>\n      <div id=\"bestPredictions\" className=\"bestPredictions\" />\n      <div id=\"exoticOfTheDay\" className=\"exoticOfTheDay\" />\n      <div id=\"RowOneContainer\" className=\"RowOneContainer\">\n        <div id=\"BTTS\" className=\"RowOne\" />\n        <div id=\"longShots\" className=\"RowOne\" />\n        <div id=\"draws\" className=\"RowOne\" />\n      </div>\n      <div id=\"insights\" />\n      <div id=\"successMeasure\" />\n      <div id=\"tables\" />\n      <div id=\"homeBadge\" />\n      <div id=\"FixtureContainerHeaders\"></div>\n      <StyledKofiButton></StyledKofiButton>\n      <div id=\"XGDiff\"/>\n      <div id=\"FixtureContainer\">\n        <div>\n          <div className=\"WelcomeText\">\n            Global fixtures and predictions from 30+ league competitions,\n            including\n          </div>\n          <ul className=\"AllLeagues\">\n            <li className=\"League\">Premier League</li>\n            <li className=\"League\">La Liga</li>\n            <li className=\"League\">Serie A</li>\n            <li className=\"League\">Bundesliga</li>\n            <li className=\"League\">Ligue 1</li>\n            <li className=\"League\">MLS</li>\n            <li className=\"League\">Primeira Liga</li>\n          </ul>\n          <div className=\"DataText\">Raw data from</div>\n          <a\n            className=\"DataLink\"\n            href=\"https://www.footystats.org\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            footystats.org\n          </a>\n        </div>\n      </div>\n      <div id=\"Over25Games\" className=\"Over25Games\"></div>\n      <div id=\"Under25Games\" className=\"Under25Games\"></div>\n      <div className=\"Social\">\n        <TwitterShareButton\n          url={\"www.xgtipping.com\"}\n          title={\"#XGTipping\"}\n          className=\"ShareButton\"\n          style={{ backgroundColor: \"#294A66\", boxShadow: \"none\" }}\n        >\n          <TwitterIcon size={\"3em\"} round={true} />\n        </TwitterShareButton>\n        <FacebookShareButton\n          url={\"www.xgtipping.com\"}\n          quote={\"XGTipping - data-driven football predictions\"}\n          className=\"ShareButton\"\n          style={{ backgroundColor: \"#294A66\", boxShadow: \"none\" }}\n        >\n          <FacebookIcon size={\"3em\"} round={true} />\n        </FacebookShareButton>\n        <RedditShareButton\n          url={\"www.xgtipping.com\"}\n          title={\"XGTipping\"}\n          className=\"ShareButton\"\n          style={{ backgroundColor: \"#294A66\", boxShadow: \"none\" }}\n        >\n          <RedditIcon size={\"3em\"} round={true} />\n        </RedditShareButton>\n        <WhatsappShareButton\n          url={\"www.xgtipping.com\"}\n          title={\"XGTipping\"}\n          separator=\": \"\n          className=\"ShareButton\"\n          style={{ backgroundColor: \"#294A66\", boxShadow: \"none\" }}\n        >\n          <WhatsappIcon size={\"3em\"} round={true} />\n        </WhatsappShareButton>\n        <TelegramShareButton\n          url={\"XGTipping\"}\n          title={\"XGTipping\"}\n          className=\"ShareButton\"\n          style={{ backgroundColor: \"#294A66\", boxShadow: \"none\" }}\n        >\n          <TelegramIcon size={\"3em\"} round={true} />\n        </TelegramShareButton>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}