{"version":3,"sources":["components/Header.js","components/radio.js","components/Button.js","components/OddsRadio.js","logic/getForm.js","components/createBadge.js","components/CollapsableElement.js","components/createStatsDiv.js","components/Div.js","components/HeadToHead.js","components/BulletList.js","components/Table.js","logic/getTeamStats.js","components/Increment.js","logic/getScorePredictions.js","logic/getBTTSPotential.js","logic/getStats.js","components/Fixture.js","logic/getFixtures.js","components/LeagueTable.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","selectedOption","Component","Button","props","id","text","variant","type","onClick","onClickEvent","selectedOdds","OddsRadio","handleOptionChange","setState","value","state","this","name","checked","onChange","applyColour","a","colour","getForm","match","teams","homeId","awayId","fixtureForm","i","team","fetch","process","response","json","then","formData","console","log","data","season_format","length","CreateBadge","src","image","ClassName","alt","flexShrink","Collapsable","isOpen","handleOnClick","prevState","style","buttonText","Stats","styleForm","formIndicator","last5","goals","conceeded","possession","XG","XGConceded","sot","dangerousAttacks","leaguePosition","homeOrAway","homeOrAwayLeaguePosition","winPercentage","toFixed","drawPercentage","lossPercentage","ppg","formTrend","Div","HeadToHead","stadium","lastGameStadiumName","lastGameDate","lastGameHomeTeam","lastGameHomeGoals","lastGameAwayGoals","lastGameAwayTeam","secondToLastGameStadiumName","secondToLastGameDate","secondToLastGameHomeTeam","secondToLastGameHomeGoals","secondToLastGameAwayGoals","secondToLastGameAwayTeam","matches","homeTeam","homeWins","awayTeam","awayWins","draws","averageGoals","bestHomeOdds","bestAwayOdds","BulletList","StyledTableCell","withStyles","theme","head","backgroundColor","color","palette","common","white","padding","textAlign","fontSize","fontFamily","border","margin","body","TableCell","StyledTableRow","root","TableRow","CustomizedTables","TableContainer","component","Paper","Table","TableHead","TableBody","scope","align","o05Stat","o05Odds","u05Odds","o15Stat","o15Odds","u15Odds","o25Stat","o25Odds","u25Odds","o35Stat","o35Odds","u35Odds","BTTSStat","BTTSOdds","BTTSOddsNo","getTeamStats","home","away","identifier","matchArr","h2h","previous_matches_ids","oddsComparisonHomeArray","oddsComparisonAwayArray","odds_comparison","sortedHomeOdds","Object","entries","sort","b","sortedAwayOdds","bestHomeOddsProvider","bestAwayOddsProvider","previous_matches_results","totalMatches","date_unix","lastMatch","secondToLastMatch","previousMatch","game","previousMatchDetails","unixTimestamp","dateObject","Date","date","getDate","getMonth","getFullYear","secondToPreviousMatch","secondToPreviousMatchDetails","dateObject2","date2","ReactDOM","render","stadium_name","team_a_wins","team_b_wins","draw","betting_stats","avg_goals","homeGoalCount","awayGoalCount","home_name","away_name","over05Percentage","over15Percentage","o15Forecast","o15_potential","odds_ft_over05","odds_ft_under05","odds_ft_over15","odds_ft_under15","over25Percentage","o25Forecast","o25_potential","odds_ft_over25","odds_ft_under25","over35Percentage","o35Forecast","o35_potential","odds_ft_over35","odds_ft_under35","bttsPercentage","BTTSForecast","btts_potential","odds_btts_yes","odds_btts_no","CornersStat","CornersForecast","corners_potential","CornersOdds","odds_corners_over_105","document","getElementById","finalHomeGoals","finalAwayGoals","rawFinalHomeGoals","rawFinalAwayGoals","homeOdds","awayOdds","incrementValue","riskLevel","Increment","IncrementItem","getNewTips","allTips","DecreaseItem","show","getBTTSPotential","allForm","index","homeGoals","awayGoals","findIndex","item","teamName","homeBTTS","BTTSPercentage","awayBTTS","homeG","awayG","homeGoalsScoredAverage","ScoredAverage","awayGoalsScoredAverage","homeGoalsConceededAverage","ConcededAverage","awayGoalsConceededAverage","homeXG","awayXG","homeXGAgainst","XGAgainstAverage","awayXGAgainst","homeGoalsAveragedOut","awayGoalsAveragedOut","homeGoalsConceededAveragedOut","awayGoalsConceededAveragedOut","CleanSheetPercentage","PPG","AverageDangerousAttacks","combinedBTTS","bttsFraction","status","btts","bttsChosen","Headers","append","winDAAverage","lossDAAverage","winOddsAverage","lossOddsAverage","winPossessionAverage","lossPossessionAverage","winLast10PPGAverage","lossLast10PPGAverage","winSOTAverage","lossSOTAverage","winXGForAverage","lossXGForAverage","winXGAgainstAverage","lossXGAgainstAverage","roundDown","sumStatDAWin","sumStatDALoss","sumStatPossessionWin","sumStatPossessionLoss","sumStatSOTWin","sumStatSOTLoss","sumStatPPGLast10Win","sumStatPPGLast10Loss","sumOddsWin","sumOddsLoss","sumXGForWin","sumXGForLoss","sumXGAgainstWin","sumXGAgainstLoss","allWinOutcomes","allLossOutcomes","getPointsFromLastX","lastX","pointsAddition","points","forEach","compareStat","statOne","statTwo","stat1","parseFloat","stat2","statOneNotZero","statTwoNotZero","gap","result","getOverOrUnderAchievingResult","overUnderAchievingSum","correction","getClinicalRating","form","dangerousAttackConversion","rating","score","getPointsDifferential","pointsHomeAvg","pointsAwayAvg","diff","differential","getPointWeighting","pointsDiff","pointsDiffWeightingHome","pointsDiffWeightingAway","compareFormTrend","threeGameAverage","fiveGameAverage","sixGameAverage","tenGameAverage","recentGoalDiff","distantGoalDiff","improving","getPointAverage","pointTotal","games","compareTeams","homeForm","awayForm","AverageShotsOnTarget","sotComparisonHOrA","AverageShotsOnTargetOverall","sotComparison","CleanSheetPercentageComparison","dangerousAttackConversionComparison","goalsPerDangerousAttack","goalsPerDangerousAttackComparison","dangerousAttacksComparisonHOrA","AverageDangerousAttacksOverall","dangerousAttacksComparison","XGWeighting","XGdifferentialComparison","formTrendScore","formTrendScoreComparison","last10Points","last10PointsComparison","twoGameAverage","twoGameAverageComparison","fiveGameAverageComparison","tenGameAverageComparison","SeasonPPG","seasonPPGComparison","AttackingPotency","attackingPotencyComparison","AveragePossession","AveragePossessionComparisonHOrA","AveragePossessionOverall","AveragePossessionComparison","awayPositionAwayOnly","homePositionHomeOnly","awayPosition","homePosition","positionComparison","homeTeamWinPercentage","awayTeamWinPercentage","winPercentageComparison","calculation","awayTeamDrawPercentage","homeTeamDrawPercentage","calculateScore","divider","calculate","find","roundCustom","num","otherTeamForm","round","wholeNumber","Math","floor","remainder","ceil","PlayedHome","PlayedAway","lastGame","LastFiveForm","previousToLastGame","last2","last3","last5Points","last6Points","LastSixForm","LastTenForm","last3Points","last2Points","ScoredOverall","ConcededOverall","ScoredAverageShortTerm","ScoredAverageShortTermHomeOrAway","ConcededAverageShortTerm","ConcededAverageShortTermHomeOrAway","longTermAverageGoals","longTermAverageConceeded","expectedGoals","expectedGoalsConceeded","expectedGoalsLongTerm","expectedConceededGoalsLongTerm","ScoredAverageShortAndLongTerm","expectedGoalsShortAndLongTerm","conceededAverageShortAndLongTerm","finishingScore","goalieRating","defenceScore","parseInt","defenceRating","goalOverOrUnderAchieving","concededOverOrUnderAchieving","overUnderAchievingSumAttack","overUnderAchievingSumDefence","forecastedXG","forecastedXGConceded","goalsBasedOnAverages","XGdifferential","homeRaw","awayRaw","formHome","formAway","overOrUnderAttack","trueFormAttack","overOrUnderDefence","trueFormDefence","homeTenGameAvg","awayTenGameAvg","homeFiveGameAvg","awayFiveGameAvg","homeThreeGameAvg","awayThreeGameAvg","homeTwoGameAvg","awayTwoGameAvg","pointsDiff3","pointsDiff2","pointsDiff10","last10WeightingHome","last10WeightingAway","last5WeightingHome","last5WeightingAway","last2WeightingHome","last2WeightingAway","clinicalRating","clinicalScore","oddsWeightingHome","oddsWeightingAway","weighting","weightingSplitHome","abs","weightingSplitAway","homeWeighting","awayWeighting","homeTeamHomePositionRaw","awayTeamAwayPositionRaw","homeRawPosition","awayRawPosition","homeCalculation","awayCalculation","AttacksHome","AttacksAverage","teamComparisonScore","homeGoalDiff","awayGoalDiff","goalsDifferential","goalCalcHomeOnly","goalCalcAwayOnly","goalCalcHomeShortTerm","goalCalcAwayShortTerm","goalCalcHomeShortAndLongTerm","goalCalcAwayShortAndLongTerm","factorOneHome","factorOneAway","scoreDiff","homeComparisonWeighting","awayComparisonWeighting","isHomeTeamBetterHomeOrAway","isAwayTeamBetterHomeOrAway","homeAdvantage","awayAdvantage","trueFormDiffHome","trueFormDiffAway","difference","prediction","includeInMultis","winner","outcome","XGOverall","XGAgainstAvgOverall","predictionOutcome","doubleChancePredictionOutcome","total","total2","getSuccessMeasure","fixtures","sumProfit","investment","exactScores","successCount","profit","netProfit","exactScore","operand","ROI","exactScoreHitRate","successRate","price","combinations","gamesInExotic","exoticStake","exoticString","testBool","resultValue","newArray","bestBets","longShotTips","drawTips","exoticArray","bttsArray","accumulatedOdds","predictions","array","tip","indexOf","push","rawOdds","renderTips","getScorePrediction","day","mocked","mock","Promise","all","map","goalsA","goalsB","unroundedGoalsA","unroundedGoalsB","fractionHome","predictionObject","odds","comparisonScore","rawComparisonScore","goalDifferential","experimentalCalc","fractionAway","homeDoubleChance","longShotPredictionObject","decimalOdds","doubleChanceOutcome","awayDoubleChance","getCoverBetMaxReturns","drawOdds","drawPredictionObject","Fixture","getAccumulatorPrice","priceArray","minAccSize","stake","perms","getUniquePermutations","j","arr","permLength","permutations","newArr","slice","splice","twoDimArrayUnion","arr1","arr2","duplicate","k","NewlineText","split","str","bttsOutcome","toggle","display","getLastGameResult","five","six","ten","gameStats","time","homeFiveGameAverage","homeSixGameAverage","homeTenGameAverage","awayFiveGameAverage","awaySixGameAverage","awayTenGameAverage","homeFormTrend","awayFormTrend","homeLastGame","awayLastGame","formDataHome","Last5","AverageGoals","AverageConceeded","AverageXG","AverageXGConceded","LeaguePosition","Last5PPG","formDataAway","gameCount","rawPosition","homeTeamHomePosition","homeTeamLossPercentage","awayTeamAwayPosition","awayTeamLossPercentage","GetDivider","fixture","matchStatus","isPrediction","renderLeagueName","leagueName","renderTable","leagueIndex","SingleFixture","createStatsDiv","homeBadge","awayBadge","newText","List","href","textDecoration","paddingTop","paddingBottom","LeagueTable","rows","Teams","Position","Name","Played","Wins","Draws","Losses","For","Against","GoalDifference","Points","Form","Key","fixtureResponse","fixtureArray","oddslib","require","config","league","leagueInstance","lastFiveFormHome","lastFiveFormAway","lastSixFormHome","lastSixFormAway","lastTenFormHome","lastTenFormAway","leagueGames","leagueArray","toLocaleDateString","currentDay","month","year","tomorrowsDate","setDate","tomorrowDay","tomorrowMonth","tomorrowYear","yesterdaysDate","yesterdayDay","yesterdayMonth","yesterdayYear","d","getDay","saturdayDay","saturdayMonth","saturdayYear","historicDate","historicDay","historicMonth","historicYear","saturday","historic","yesterday","today","tomorrow","tableArray","generateTables","specific_tables","groups","league_table","all_matches_table_overall","currentTeam","cleanName","matchesPlayed","seasonWins_overall","seasonDraws_overall","seasonLosses_overall","seasonGoals","seasonConceded_home","seasonConceded_away","seasonGoalDifference","table","rawForm","wdl_record","replace","toUpperCase","Array","from","undefined","createFixture","mockBool","roundedHomeOdds","roundedAwayOdds","homeFraction","to","precision","awayFraction","error","bttsOdds","roundedBTTSOdds","generateFixtures","radioState","url","method","headers","Accept","storedForm","formArray","isFormStored","isStoredLocally","height","leaguePositions","leagues","orderedLeagues","element","x","string","stringHome","all_matches_table_home","stringAway","all_matches_table_away","position","homeFormName","awayFormName","homeSeasonWinPercentage","seasonWins","awaySeasonWinPercentage","homeSeasonLossPercentage","seasonLosses_home","awaySeasonLossPercentage","seasonLosses_away","homeSeasonDrawPercentage","seasonDraws","awaySeasonDrawPercentage","homeSeasonMatchesPlayed","awaySeasonMatchesPlayed","ppg_overall","filter","competition_id","getPrefix","teamPositionPrefix","previousLeagueName","toLocaleString","hour","minute","odds_ft_1","odds_ft_2","odds_ft_x","odds_doublechance_1x","odds_doublechance_x2","homeID","awayID","homeTeamInfo","awayTeamInfo","homeTeaminLeague","awayTeaminLeague","teamPositionHome","teamPositionHomeTable","teamPositionAwayTable","homeTeamWinPercentageHome","awayTeamWinPercentageAway","homeTeamLossPercentageHome","awayTeamLossPercentageAway","homeTeamDrawPercentageHome","awayTeamDrawPercentageAway","teamPositionAway","homePrefix","homePrefixHomeTable","awayPrefix","awayPrefixAwayTable","homeSeasonPPG","awaySeasonPPG","homeTeaminHomeLeague","awayTeaminAwayLeague","homeFormString5","stats","additional_info","formRun_overall","awayFormString5","homeFormString6","awayFormString6","homeFormString10","awayFormString10","xg_for_avg_overall","xg_for_avg_home","seasonScoredNum_overall","seasonScoredAVG_home","seasonMatchesPlayed_home","seasonMatchesPlayed_away","seasonConcededNum_overall","seasonConcededAVG_home","xg_against_avg_overall","xg_against_avg_home","seasonCSPercentage_home","possessionAVG_overall","possessionAVG_home","shotsOnTargetAVG_overall","shotsOnTargetAVG_home","dangerous_attacks_avg_overall","seasonPPG_home","attacks_avg_home","AttacksAway","attacks_avg_away","dangerous_attacks_avg_home","homeAttackAdvantage","homeDefenceAdvantage","seasonBTTSPercentage_home","xg_for_avg_away","seasonScoredAVG_away","seasonConcededAVG_away","xg_against_avg_away","seasonCSPercentage_away","possessionAVG_away","shotsOnTargetAVG_away","seasonPPG_away","dangerous_attacks_avg_away","seasonBTTSPercentage_away","home_image","away_image","homePpg","home_ppg","homeFormColour","awayPpg","away_ppg","awayFormColour","expectedGoalsHomeToDate","team_a_xg_prematch","expectedGoalsAwayToDate","team_b_xg_prematch","JSON","stringify","fixtureList","availableLeagues","leagueList","mapOrder","order","key","A","B","season","leagueOrder","App","target","rel","TwitterShareButton","title","boxShadow","TwitterIcon","size","FacebookShareButton","quote","FacebookIcon","RedditShareButton","RedditIcon","WhatsappShareButton","separator","WhatsappIcon","TelegramShareButton","TelegramIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.2f065aaf.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n      <h1 className=\"HeaderContainer\">XG Tipping</h1>\n  );\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nexport var selectedOption = \"5\";\n\nexport var fixtureList = [];\n\nexport class Radio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOption: this.props.value,\n    };\n  }\n\n  handleOptionChange = () => {\n    this.setState({\n      selectedOption: this.props.value,\n    });\n    selectedOption = this.state.selectedOption;\n  };\n\n  render() {\n    return (\n      <section className=\"dark\">\n        <div className={this.props.className}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"lastGames\"\n              checked={this.state.checked}\n              onChange={this.handleOptionChange}\n              data-cy={this.props.value}\n            />\n            <span className=\"design\"></span>\n            <span className=\"text\">Last {this.props.value} games</span>\n          </label>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Radio;\n","import React from \"react\";\n\nexport function Button(props) {\n  return (\n    <div id=\"Button\">\n      <button data-cy={props.text} variant=\"primary\" type=\"button\" onClick={props.onClickEvent} className={props.className}>\n        {props.text}\n      </button>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nexport var selectedOdds = \"Fractional\";\n\n\nexport class OddsRadio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOdds: this.props.value,\n    };\n  }\n\n  handleOptionChange = () => {\n    this.setState({\n      selectedOdds: this.props.value,\n    });\n    selectedOdds = this.state.selectedOdds;\n  };\n\n  render() {\n    return (\n      <section className=\"dark2\">\n        <div className={this.props.className}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"odds\"\n              checked={this.state.checked}\n              onChange={this.handleOptionChange}\n              data-cy={this.props.value}\n            />\n            <span className=\"design\"></span>\n            <span className=\"text\">{this.props.value} odds</span>\n          </label>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default OddsRadio;","import { proxyurl } from \"../App\";\n\nconst allTeamForm = [];\n\nexport async function applyColour(value) {\n  let colour;\n  switch (true) {\n    case value < 0.49:\n      colour = \"#CD5C5C\";\n      break;\n    case value >= 0.5 && value <= 1:\n      colour = \"#F08080\";\n      break;\n    case value >= 1.01 && value <= 1.25:\n      colour = \"#FFA07A\";\n      break;\n    case value >= 1.26 && value <= 1.5:\n      colour = \"#FFFFE0\";\n      break;\n    case value >= 1.51 && value <= 2:\n      colour = \"#CFDBC5\";\n      break;\n    case value >= 2.01 && value <= 2.5:\n      colour = \"#8AA37B\";\n      break;\n    case value >= 2.51 && value <= 3:\n      colour = \"#3F6826\";\n      break;\n    default:\n      colour = \"white\";\n      break;\n  }\n  return colour;\n}\n\nexport async function getForm(match) {\n  const teams = [match.homeId, match.awayId];\n  const fixtureForm = [];\n\n  for (let i = 0; i < teams.length; i++) {\n    const team = teams[i];\n\n    let response = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}form/${team}`\n    );\n    await response.json().then((formData) => {\n      console.log(formData.data[0].season_format)\n      fixtureForm[i] = formData;\n      console.log(fixtureForm[i])\n    });\n  }\n  return fixtureForm;\n}\n","import React from \"react\";\n\nexport function CreateBadge(props) {\n  return (\n    <img\n      src={`https://cdn.footystats.org/img/${props.image}`}\n      className={props.ClassName}\n      alt={props.alt}\n      flex-shrink={props.flexShrink}\n    />\n  );\n}\n","import React, { Component } from \"react\";\nimport EscapeOutside from \"react-escape-outside\";\n\nclass Collapsable extends Component {\n  state = { isOpen: false };\n\n  handleOnClick = () => {\n    this.setState((prevState) => ({\n      isOpen: !prevState.isOpen,\n    }));\n  };\n\n  render() {\n    return (\n      <div style={this.props.style}>\n        <button className={this.props.className} onClick={this.handleOnClick}>{this.props.buttonText}</button>\n        {this.state.isOpen && (\n          <EscapeOutside className=\"Collapsable\">\n            {this.props.text}\n          </EscapeOutside>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Collapsable;\n","import React, { Fragment } from \"react\";\n\nfunction Stats(props) {\n  function styleForm(formIndicator) {\n    let className;\n    if (formIndicator === \"W\") {\n      className = \"win\";\n    } else if (formIndicator === \"D\") {\n      className = \"draw\";\n    } else if (formIndicator === \"L\") {\n      className = \"loss\";\n    }\n    return className;\n  }\n\n  return (\n    <Fragment>\n      <ul className={props.className} style={props.style}>\n        <li className=\"FormHeader\">Form (most recent on right)</li>\n        <li key=\"last5\">\n          <span className={styleForm(props.last5[0])}>{props.last5[0]}</span>\n          <span className={styleForm(props.last5[1])}>{props.last5[1]}</span>\n          <span className={styleForm(props.last5[2])}>{props.last5[2]}</span>\n          <span className={styleForm(props.last5[3])}>{props.last5[3]}</span>\n          <span className={styleForm(props.last5[4])}>{props.last5[4]}</span>\n        </li>\n        <li\n          key=\"TeamScored\"\n          className=\"TeamScored\"\n          data-cy={props.name + \"teamScored\"}\n        >\n          {`Avg goals scored - ${props.goals}`}\n        </li>\n        <li\n          key=\"TeamConceeded\"\n          className=\"TeamConceeded\"\n          data-cy={props.name + \"teamConceded\"}\n        >\n          {`Avg goals conceeded - ${props.conceeded}`}\n        </li>\n        <li\n          key=\"TeamPossession\"\n          className=\"TeamPossession\"\n          data-cy={props.name + \"teamPossession\"}\n        >\n          {`Avg possession - ${props.possession}%`}\n        </li>\n        <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name + \"teamXG\"}>\n          {`Avg XG - ${props.XG}`}\n        </li>\n        <li\n          key=\"TeamXGConceded\"\n          className=\"TeamXGConceded\"\n          data-cy={props.name + \"teamXGConceded\"}\n        >\n          {`Avg XG conceded - ${props.XGConceded}`}\n        </li>\n        <li\n          key=\"AverageSOT\"\n          className=\"AverageSOT\"\n          data-cy={props.name + \"averageSOT\"}\n        >\n          {`Avg shots on target - ${props.sot}`}\n        </li>\n        <li\n          key=\"DangerousAttacks\"\n          className=\"DangerousAttacks\"\n          data-cy={props.name + \"dangerousAttacks\"}\n        >\n          {`Avg dangerous attacks - ${props.dangerousAttacks}`}\n        </li>\n        <li\n          key=\"LeaguePosition\"\n          className=\"LeaguePosition\"\n          data-cy={props.name + \"leaguePosition\"}\n        >\n          {`League position - ${props.leaguePosition}`}\n        </li>\n\n        <li\n          key=\"LeaguePositionHomeOrAway\"\n          className=\"LeaguePositionHomeOrAway\"\n          data-cy={props.name + \"LeaguePositionHomeOrAway\"}\n        >\n          {`Position (${props.homeOrAway} only) - ${props.homeOrAwayLeaguePosition}`}\n        </li>\n        <li\n          key=\"WinPercentage\"\n          className=\"WinPercentage\"\n          data-cy={props.name + \"WinPercentage\"}\n        >\n          {`${props.homeOrAway} wins - ${props.winPercentage.toFixed(1)}%`}\n        </li>\n        <li\n          key=\"DrawPercentage\"\n          className=\"DrawPercentage\"\n          data-cy={props.name + \"DrawPercentage\"}\n        >\n          {`${props.homeOrAway} draws - ${props.drawPercentage.toFixed(1)}%`}\n        </li>\n        <li\n          key=\"LossPercentage\"\n          className=\"LossPercentage\"\n          data-cy={props.name + \"LossPercentage\"}\n        >\n          {`${props.homeOrAway} losses - ${props.lossPercentage.toFixed(1)}%`}\n        </li>\n        <li key=\"PPG\" className=\"PPG\" data-cy={props.name + \"PPG\"}>\n          {`Season PPG - ${props.ppg}`}\n        </li>\n        <li\n          key=\"FormTrend10a\"\n          className=\"FormTrend\"\n          data-cy={props.name + \"FormTrend10\"}\n        >\n          {`Last 10 PPG: ${props.formTrend[0]}`}\n        </li>\n        <li\n          key=\"FormTrend10b\"\n          className=\"FormTrend\"\n          data-cy={props.name + \"FormTrend10\"}\n        >\n          {`Last 6 PPG: ${props.formTrend[1]}`}\n        </li>\n        <li\n          key=\"FormTrend10c\"\n          className=\"FormTrend\"\n          data-cy={props.name + \"FormTrend10\"}\n        >\n          {`Last 5 PPG: ${props.formTrend[2]}.`}\n        </li>\n      </ul>\n      <div id=\"h2hStats\"></div>\n    </Fragment>\n  );\n}\n\nexport default Stats;\n","import React from \"react\";\n\nfunction Div(props) {\n  return (\n    <div id={props.id} onClick={props.onClick} style={props.style} className={props.className}>{props.text}</div>\n  );\n}\n\nexport default Div;\n","import React from \"react\";\n\nfunction HeadToHead(props) {\n\n  return (\n    <ul className={props.className} style={props.style}>\n      <li key=\"Stadium\" className=\"Stadium\" data-cy={props.name + \"Stadium\"}>\n        {`Venue - ${props.stadium}`}\n      </li>\n      <li key=\"lastGameDetail\" className=\"LastGameDetail\" data-cy={props.name + \"Last\"}>\n        {`Last meeting - ${props.lastGameStadiumName} ${props.lastGameDate}`}\n      </li>\n      <li key=\"lastGame\" className=\"LastGame\" data-cy={props.name + \"LastGame\"}>\n        {`${props.lastGameHomeTeam} ${props.lastGameHomeGoals} - ${props.lastGameAwayGoals} ${props.lastGameAwayTeam}`}\n      </li>\n      <li key=\"secondToLastGameDetail\" className=\"secondToLastGameDetail\" data-cy={props.name + \"secondToLast\"}>\n        {`Second to last meeting - ${props.secondToLastGameStadiumName} ${props.secondToLastGameDate}`}\n      </li>\n      <li key=\"lastGame\" className=\"LastGame\" data-cy={props.name + \"LastGame\"}>\n        {`${props.secondToLastGameHomeTeam} ${props.secondToLastGameHomeGoals} - ${props.secondToLastGameAwayGoals} ${props.secondToLastGameAwayTeam}`}\n      </li>\n      <li key=\"h2h\" className=\"h2h\" data-cy={props.name + \"h2h\"}>\n        {`Matches played: ${props.matches}`}\n      </li>\n      <li key=\"homeWins\" className=\"homeWins\" data-cy={props.name + \"homeWins\"}>\n        {`${props.homeTeam} wins: ${props.homeWins}`}\n      </li>\n      <li key=\"awayWins\" className=\"awayWins\" data-cy={props.name + \"awayWins\"}>\n        {`${props.awayTeam} wins: ${props.awayWins}`}\n      </li>\n      <li key=\"draws\" className=\"draws\" data-cy={props.name + \"draws\"}>\n        {`Draws: ${props.draws}`}\n      </li>\n      <li key=\"averageGoals\" className=\"averageGoals\" data-cy={props.name + \"averageGoals\"}>\n        {`Average goals in fixture: ${props.averageGoals}`}\n      </li>\n      <li key=\"bestHomeOdds\" className=\"bestHomeOdds\" data-cy={props.name + \"bestHomeOdds\"}>\n        {`Best oods for home win @: ${props.bestHomeOdds}`}\n      </li>\n      <li key=\"bestAwayOdds\" className=\"bestAwayOdds\" data-cy={props.name + \"bestAwayOdds\"}>\n        {`Best oods for away win @: ${props.bestAwayOdds}`}\n      </li>\n    </ul>\n  );\n}\n\nexport default HeadToHead;\n","import React from \"react\";\n\n// function BulletList(props) {\n//     const arr = props.array;\n//     const listItems = arr.map((stat) =>\n//       <li key={stat} className=\"H2HStat\">\n//         {stat}\n//       </li>\n//     );\n//     return (\n//       <ul>{listItems}</ul>\n//     );\n//   }\n\nfunction BulletList(props) {\n  return (\n    <ul className={props.className}>\n      <li>{props.array[0]}</li>\n    </ul>\n  );\n}\n\nexport default BulletList;","import React from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#172A3A\",\n    color: theme.palette.common.white,\n    padding: 10,\n    textAlign: \"center\",\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    border: \"none\",\n    margin: \"none\"\n  },\n  body: {\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    padding: 10,\n    color: \"white\",\n    border: \"none\",\n    margin: \"none\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#294A66\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#172B3A\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\n\nexport default function CustomizedTables(props) {\n\n\n  return (\n    <TableContainer component={Paper} className=\"StatsTable\">\n      <Table aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Stat</StyledTableCell>\n            <StyledTableCell>H2H history</StyledTableCell>\n            <StyledTableCell>Odds (yes)</StyledTableCell>\n            <StyledTableCell>Odds (no)</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        <StyledTableRow key=\"O05\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 0.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o05Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o05Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u05Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O15\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 1.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o15Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o15Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u15Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O25\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 2.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o25Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o25Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u25Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O35\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 3.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o35Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o35Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u35Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"BTTS\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              BTTS %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.BTTSStat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSOdds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSOddsNo}</StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport HeadToHead from \"../components/HeadToHead\";\nimport BulletList from \"../components/BulletList\";\nimport { Fragment } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport CustomizedTables from \"../components/Table\";\nimport { matches } from \"./getFixtures\";\n\nexport async function getTeamStats(id, home, away) {\n  console.log(\"EXECUTED\");\n  let identifier = id;\n  let bestHomeOdds;\n  let bestHomeOddsProvider;\n  let bestAwayOdds;\n  let bestAwayOddsProvider\n  \n  let match = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}match/${identifier}`\n  );\n   await match.json().then(async (match) => {\n    console.log(match.data)\n    let matchArr = match.data.h2h.previous_matches_ids\n    let previousMatchDetails;\n    let secondToPreviousMatchDetails;\n\n    let oddsComparisonHomeArray = []\n    let oddsComparisonAwayArray = []\n\n    if(match.data.odds_comparison){\n    oddsComparisonHomeArray = match.data.odds_comparison[\"FT Result\"][1];\n    oddsComparisonAwayArray = match.data.odds_comparison[\"FT Result\"][2];\n\n    let sortedHomeOdds = Object.entries(oddsComparisonHomeArray).sort((a, b) => b[1] - a[1])\n    let sortedAwayOdds = Object.entries(oddsComparisonAwayArray).sort((a, b) => b[1] - a[1])\n\n    bestHomeOddsProvider = sortedHomeOdds[0][0]\n    bestHomeOdds = sortedHomeOdds[0][1]\n    bestAwayOddsProvider = sortedAwayOdds[0][0]\n    bestAwayOdds = sortedAwayOdds[0][1]\n    } else {\n      bestHomeOddsProvider = \"N/A\"\n      bestHomeOdds = \"N/A\"\n      bestAwayOddsProvider = \"N/A\"\n      bestAwayOdds = \"N/A\"\n    }\n\n    if(match.data.h2h.previous_matches_results.totalMatches > 0){\n      matchArr.sort((a, b) => b.date_unix - a.date_unix);\n      let lastMatch = matchArr[0].id\n      let secondToLastMatch = matchArr[1].id\n\n      let previousMatch = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}match/${lastMatch}`\n      );\n      let dateObject;\n      let date;\n      let date2;\n      await previousMatch.json().then(async (game) => {\n        previousMatchDetails = game.data\n        console.log(previousMatchDetails)\n        const unixTimestamp = previousMatchDetails.date_unix;\n        const milliseconds = unixTimestamp * 1000;\n        dateObject = new Date(milliseconds);\n         date = `${dateObject.getDate()}/${dateObject.getMonth()+1}/${dateObject.getFullYear()}`\n\n         let secondToPreviousMatch = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}match/${secondToLastMatch}`\n        );\n        let dateObject2;\n        await secondToPreviousMatch.json().then((game) => {\n          secondToPreviousMatchDetails = game.data\n          console.log(secondToPreviousMatchDetails)\n          const unixTimestamp = secondToPreviousMatchDetails.date_unix;\n          const milliseconds = unixTimestamp * 1000;\n          dateObject2 = new Date(milliseconds);\n          date2 = `${dateObject2.getDate()}/${dateObject2.getMonth()+1}/${dateObject2.getFullYear()}`\n        })\n  \n      })\n\n      ReactDOM.render(\n        <Fragment>\n          <h3>Fixture history</h3>\n          <HeadToHead\n            className={\"PreviousMatchStats\"}\n            homeTeam={home}\n            awayTeam={away}\n            stadium={match.data.stadium_name}\n            matches={match.data.h2h.previous_matches_results.totalMatches}\n            homeWins={match.data.h2h.previous_matches_results.team_a_wins}\n            awayWins={match.data.h2h.previous_matches_results.team_b_wins}\n            draws={match.data.h2h.previous_matches_results.draw}\n            averageGoals={match.data.h2h.betting_stats.avg_goals}\n            bestHomeOdds = {`${bestHomeOddsProvider} - ${bestHomeOdds}`}\n            bestAwayOdds = {`${bestAwayOddsProvider} - ${bestAwayOdds}`}\n            lastGameStadiumName={previousMatchDetails.stadium_name}\n            lastGameHomeGoals={previousMatchDetails.homeGoalCount}\n            lastGameAwayGoals={previousMatchDetails.awayGoalCount}\n            lastGameHomeTeam={previousMatchDetails.home_name}\n            lastGameAwayTeam={previousMatchDetails.away_name}\n            lastGameDate={date}\n            secondToLastGameStadiumName={secondToPreviousMatchDetails.stadium_name}\n            secondToLastGameHomeGoals={secondToPreviousMatchDetails.homeGoalCount}\n            secondToLastGameAwayGoals={secondToPreviousMatchDetails.awayGoalCount}\n            secondToLastGameHomeTeam={secondToPreviousMatchDetails.home_name}\n            secondToLastGameAwayTeam={secondToPreviousMatchDetails.away_name}\n            secondToLastGameDate={date2}\n          ></HeadToHead>\n          <CustomizedTables\n            o05Stat={match.data.h2h.betting_stats.over05Percentage}\n            o15Stat={match.data.h2h.betting_stats.over15Percentage}\n            o15Forecast={match.data.o15_potential}\n            o05Odds={match.data.odds_ft_over05}\n            u05Odds={match.data.odds_ft_under05}\n            o15Odds={match.data.odds_ft_over15}\n            u15Odds={match.data.odds_ft_under15}\n            o25Stat={match.data.h2h.betting_stats.over25Percentage}\n            o25Forecast={match.data.o25_potential}\n            o25Odds={match.data.odds_ft_over25}\n            u25Odds={match.data.odds_ft_under25}\n            o35Stat={match.data.h2h.betting_stats.over35Percentage}\n            o35Forecast={match.data.o35_potential}\n            o35Odds={match.data.odds_ft_over35}\n            u35Odds={match.data.odds_ft_under35}\n            BTTSStat={match.data.h2h.betting_stats.bttsPercentage}\n            BTTSForecast={match.data.btts_potential}\n            BTTSOdds={match.data.odds_btts_yes}\n            BTTSOddsNo={match.data.odds_btts_no}\n            CornersStat={\"–\"}\n            CornersForecast={match.data.corners_potential}\n            CornersOdds={match.data.odds_corners_over_105}\n          />\n        </Fragment>,\n        document.getElementById(`H2HStats${identifier}`)\n      );\n    } else {\n      ReactDOM.render(\n        <Fragment>\n          <h3>Fixture history</h3>\n          <HeadToHead\n            className={\"PreviousMatchStats\"}\n            homeTeam={home}\n            awayTeam={away}\n            stadium={match.data.stadium_name}\n            matches={match.data.h2h.previous_matches_results.totalMatches}\n            homeWins={match.data.h2h.previous_matches_results.team_a_wins}\n            awayWins={match.data.h2h.previous_matches_results.team_b_wins}\n            draws={match.data.h2h.previous_matches_results.draw}\n            averageGoals={match.data.h2h.betting_stats.avg_goals}\n            lastGameStadiumName=\"N/A\"\n            lastGameHomeGoals=\"previous\"\n            lastGameAwayGoals=\"match\"\n            lastGameHomeTeam=\"No\"\n            lastGameAwayTeam=\"data\"\n            lastGameDate=\"\"\n            secondToLastGameStadiumName=\"N/A\"\n            secondToLastGameHomeGoals=\"previous\"\n            secondToLastGameAwayGoals=\"match\"\n            secondToLastGameHomeTeam=\"No\"\n            secondToLastGameAwayTeam=\"data\"\n            secondToLastGameDate=\"\"\n          ></HeadToHead>\n          <CustomizedTables\n            o15Stat={match.data.h2h.betting_stats.over15Percentage}\n            o15Forecast={match.data.o15_potential}\n            o15Odds={match.data.odds_ft_over15}\n            o25Stat={match.data.h2h.betting_stats.over25Percentage}\n            o25Forecast={match.data.o25_potential}\n            o25Odds={match.data.odds_ft_over25}\n            BTTSStat={match.data.h2h.betting_stats.bttsPercentage}\n            BTTSForecast={match.data.btts_potential}\n            BTTSOdds={match.data.odds_btts_yes}\n            CornersStat={\"–\"}\n            CornersForecast={match.data.corners_potential}\n            CornersOdds={match.data.odds_corners_over_105}\n          />\n        </Fragment>,\n        document.getElementById(`H2HStats${identifier}`)\n      );\n    }\n\n\n  });\n}\n","import React, { Component, Fragment } from \"react\";\nimport { getNewTips } from \"../logic/getScorePredictions\"\nimport {allTips} from \"../logic/getScorePredictions\"\nexport var incrementValue = 3;\n\nexport var riskLevel = 10;\n\nclass Increment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      incrementValue,\n      riskLevel,\n      show: true,\n    };\n  }\n\n  IncrementItem = () => {\n    if(incrementValue > 1){\n    this.setState({ incrementValue: this.state.incrementValue - 1 });\n    this.setState({ riskLevel: this.state.riskLevel - 1 });\n    incrementValue = (this.state.incrementValue - 1);\n    riskLevel = this.state.riskLevel - 1;\n    }\n    getNewTips(allTips)\n  };\n  DecreaseItem = () => {\n    if(incrementValue > 0){\n      this.setState({ incrementValue: this.state.incrementValue + 1 });\n      this.setState({ riskLevel: this.state.riskLevel + 1 });\n      incrementValue = (this.state.incrementValue + 1);\n      riskLevel = this.state.riskLevel + 1;\n    }\n    getNewTips(allTips)\n  };\n\n  render() {\n    return (\n      <Fragment>\n          <button className=\"IncrementButton\" onClick={this.IncrementItem}>\n            -\n          </button>\n          <button className=\"DecrementButton\" onClick={this.DecreaseItem}>\n            +\n          </button>\n      </Fragment>\n\n    );\n  }\n}\n\nexport default Increment;\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { matches, diff } from \"./getFixtures\";\nimport { Fixture } from \"../components/Fixture\";\nimport { selectedOption } from \"../components/radio\";\nimport Div from \"../components/Div\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { allForm } from \"../logic/getFixtures\";\nimport Increment from \"../components/Increment\";\nimport { incrementValue } from \"../components/Increment\";\nimport { getBTTSPotential } from \"../logic/getBTTSPotential\";\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nlet finalHomeGoals;\nlet finalAwayGoals;\nlet rawFinalHomeGoals;\nlet rawFinalAwayGoals;\nlet homeOdds;\nlet awayOdds;\nlet totalGoals = 0;\nlet totalGoals2 = 0;\nlet numberOfGames = 0;\nlet drawPredictions = 0;\nlet homePredictions = 0;\nlet awayPredictions = 0;\nlet allOutcomes = 0;\nlet drawOutcomes = 0;\nlet homeOutcomes = 0;\nlet awayOutcomes = 0;\nlet winAmount = 0;\nlet lossAmount = 0;\nlet sumStatDAWin = 0;\nlet sumStatDALoss = 0;\nlet sumStatPossessionWin = 0;\nlet sumStatPossessionLoss = 0;\nlet sumStatSOTWin = 0;\nlet sumStatSOTLoss = 0;\nlet sumStatPPGLast10Win = 0;\nlet sumStatPPGLast10Loss = 0;\nlet sumOddsWin = 0;\nlet sumOddsLoss = 0;\nlet sumXGForWin = 0;\nlet sumXGForLoss = 0;\nlet sumXGAgainstWin = 0;\nlet sumXGAgainstLoss = 0;\nlet allWinOutcomes = 0;\nlet allLossOutcomes = 0;\nlet allDrawOutcomes = 0;\nlet winDAAverage;\nlet lossDAAverage;\nlet winOddsAverage;\nlet lossOddsAverage;\nlet winPossessionAverage;\nlet lossPossessionAverage;\nlet winLast10PPGAverage;\nlet lossLast10PPGAverage;\nlet winSOTAverage;\nlet lossSOTAverage;\nlet winXGForAverage;\nlet lossXGForAverage;\nlet winXGAgainstAverage;\nlet lossXGAgainstAverage;\nlet homePosition;\nlet awayPosition;\nlet homePositionHomeOnly;\nlet awayPositionAwayOnly;\nlet roundDown;\n\nexport var renderPredictions;\n\nexport function getPointsFromLastX(lastX) {\n  let points = 0;\n  let pointsAddition;\n\n  lastX.forEach((game) => {\n    switch (true) {\n      case game === \"W\":\n        pointsAddition = 3;\n        break;\n      case game === \"D\":\n        pointsAddition = 1;\n        break;\n      case game === \"L\":\n        pointsAddition = 0;\n        break;\n      default:\n        break;\n    }\n\n    points = points + pointsAddition;\n  });\n  return points;\n}\n\nexport async function compareStat(statOne, statTwo) {\n  let stat1 = parseFloat(statOne);\n  let stat2 = parseFloat(statTwo);\n  let result;\n  let gap;\n  let statOneNotZero = stat1 + 0.1;\n  let statTwoNotZero = stat2 + 0.1;\n\n  if (stat1 > stat2) {\n    gap = statOneNotZero / statTwoNotZero;\n  } else if (stat1 < stat2) {\n    gap = statTwoNotZero / statOneNotZero;\n  } else {\n    gap = 0;\n  }\n\n  if (gap >= 2) {\n    switch (true) {\n      case stat1 === stat2:\n        result = 0;\n        break;\n      case stat1 > stat2:\n        result = 1.5;\n        break;\n      case stat1 < stat2:\n        result = -1.5;\n        break;\n      default:\n        break;\n    }\n  } else if (gap >= 1.3 && gap < 2) {\n    switch (true) {\n      case stat1 === stat2:\n        result = 0;\n        break;\n      case stat1 > stat2:\n        result = 1;\n        break;\n      case stat1 < stat2:\n        result = -1;\n        break;\n      default:\n        break;\n    }\n  } else if (gap > 1.1 && gap < 1.3) {\n    switch (true) {\n      case stat1 === stat2:\n        result = 0;\n        break;\n      case stat1 > stat2:\n        result = 0.5;\n        break;\n      case stat1 < stat2:\n        result = -0.5;\n        break;\n      default:\n        break;\n    }\n  } else {\n    result = 0;\n  }\n\n  return result;\n}\n\nexport async function getOverOrUnderAchievingResult(\n  index,\n  overUnderAchievingSum\n) {\n  let result;\n  let correction;\n\n  switch (true) {\n    case index === 0:\n      switch (true) {\n        case overUnderAchievingSum <= -1.2:\n          result = \"Overachieving drastically\";\n          correction = -0.4;\n          break;\n        case overUnderAchievingSum < -0.45 && overUnderAchievingSum > -1.2:\n          result = \"Overachieving\";\n          correction = -0.2;\n          break;\n        case overUnderAchievingSum < -0.1 && overUnderAchievingSum >= -0.45:\n          result = \"Overachieving slightly\";\n          correction = -0.1;\n          break;\n        case overUnderAchievingSum > 0.1 && overUnderAchievingSum <= 0.45:\n          result = \"Underachieving slightly\";\n          correction = 0.1;\n          break;\n        case overUnderAchievingSum > 0.45 && overUnderAchievingSum < 1.2:\n          result = \"Underachieving\";\n          correction = 0.2;\n          break;\n        case overUnderAchievingSum >= 1.2:\n          result = \"Underachieving drastically\";\n          correction = 0.4;\n          break;\n        default:\n          result = \"onPar\";\n          correction = 0;\n          break;\n      }\n\n      break;\n\n    case index === 1:\n      switch (true) {\n        case overUnderAchievingSum <= -0.9:\n          result = \"Overachieving drastically\";\n          correction = -0.4;\n          break;\n        case overUnderAchievingSum < -0.45 && overUnderAchievingSum > -0.9:\n          result = \"Overachieving\";\n          correction = -0.2;\n          break;\n        case overUnderAchievingSum < -0.1 && overUnderAchievingSum >= -0.45:\n          result = \"Overachieving slightly\";\n          correction = -0.1;\n          break;\n        case overUnderAchievingSum > 0.1 && overUnderAchievingSum <= 0.45:\n          result = \"Underachieving slightly\";\n          correction = 0.1;\n          break;\n        case overUnderAchievingSum > 0.45 && overUnderAchievingSum < 0.9:\n          result = \"Underachieving\";\n          correction = 0.2;\n          break;\n        case overUnderAchievingSum >= 0.9:\n          result = \"Underachieving drastically\";\n          correction = 0.4;\n          break;\n        default:\n          result = \"onPar\";\n          correction = 0;\n          break;\n      }\n\n      break;\n\n    case index === 2:\n      switch (true) {\n        case overUnderAchievingSum <= -1:\n          result = \"Overachieving drastically\";\n          correction = -0.4;\n          break;\n        case overUnderAchievingSum < -0.45 && overUnderAchievingSum > -1:\n          result = \"Overachieving\";\n          correction = -0.2;\n          break;\n        case overUnderAchievingSum < -0.2 && overUnderAchievingSum >= -0.45:\n          result = \"Overachieving slightly\";\n          correction = -0.1;\n          break;\n        case overUnderAchievingSum > 0.2 && overUnderAchievingSum <= 0.45:\n          result = \"Underachieving slightly\";\n          correction = 0.1;\n          break;\n        case overUnderAchievingSum > 0.45 && overUnderAchievingSum < 1:\n          result = \"Underachieving\";\n          correction = 0.2;\n          break;\n        case overUnderAchievingSum >= 1:\n          result = \"Underachieving drastically\";\n          correction = 0.4;\n          break;\n        default:\n          result = \"onPar\";\n          correction = 0;\n          break;\n      }\n\n      break;\n    default:\n      break;\n  }\n  return [result, correction];\n}\n\nexport async function getClinicalRating(form) {\n  let rating;\n  let score;\n  switch (true) {\n    case form.dangerousAttackConversion <= 15:\n      rating = \"excellent\";\n      score = 0.8;\n      break;\n\n    case form.dangerousAttackConversion > 15 &&\n      form.dangerousAttackConversion <= 20:\n      rating = \"great\";\n      score = 0.9;\n      break;\n\n    case form.dangerousAttackConversion > 20 &&\n      form.dangerousAttackConversion <= 25:\n      rating = \"very good\";\n      score = 0.95;\n      break;\n\n    case form.dangerousAttackConversion > 25 &&\n      form.dangerousAttackConversion <= 32.5:\n      rating = \"good\";\n      score = 0.98;\n      break;\n\n    case form.dangerousAttackConversion > 30 &&\n      form.dangerousAttackConversion <= 35:\n      rating = \"above average\";\n      score = 0.99;\n      break;\n\n    case form.dangerousAttackConversion > 35 &&\n      form.dangerousAttackConversion <= 40:\n      rating = \"average\";\n      score = 1;\n      break;\n\n    case form.dangerousAttackConversion > 40 &&\n      form.dangerousAttackConversion <= 45:\n      rating = \"below average\";\n      score = 1.01;\n      break;\n\n    case form.dangerousAttackConversion > 45 &&\n      form.dangerousAttackConversion <= 50:\n      rating = \"poor\";\n      score = 1.05;\n      break;\n\n    case form.dangerousAttackConversion > 50 &&\n      form.dangerousAttackConversion <= 55:\n      rating = \"very poor\";\n      score = 1.1;\n      break;\n\n    case form.dangerousAttackConversion > 55 &&\n      form.dangerousAttackConversion <= 60:\n      rating = \"terrible\";\n      score = 1.2;\n      break;\n\n    case form.dangerousAttackConversion > 60:\n      rating = \"awful\";\n      score = 1.3;\n      break;\n\n    default:\n      break;\n  }\n\n  return [rating, score];\n}\n\nexport async function getPointsDifferential(pointsHomeAvg, pointsAwayAvg) {\n  const differential = await diff(pointsHomeAvg, pointsAwayAvg);\n  return parseFloat(differential);\n}\n\nexport async function getPointWeighting(pointsDiff) {\n  let pointsDiffWeightingHome;\n  let pointsDiffWeightingAway;\n\n  switch (true) {\n    case pointsDiff >= 2.5:\n      pointsDiffWeightingHome = 0.6;\n      pointsDiffWeightingAway = -0.1;\n      break;\n    case pointsDiff >= 2 && pointsDiff < 2.5:\n      pointsDiffWeightingHome = 0.4;\n      pointsDiffWeightingAway = -0.1;\n      break;\n    case pointsDiff >= 1.5 && pointsDiff < 2:\n      pointsDiffWeightingHome = 0.3;\n      pointsDiffWeightingAway = -0.1;\n      break;\n    case pointsDiff >= 1 && pointsDiff < 1.5:\n      pointsDiffWeightingHome = 0.2;\n      pointsDiffWeightingAway = 0;\n      break;\n    case pointsDiff >= 0.5 && pointsDiff < 1:\n      pointsDiffWeightingHome = 0.1;\n      pointsDiffWeightingAway = 0;\n      break;\n    case pointsDiff > -0.5 && pointsDiff < 0.5:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n      break;\n    case pointsDiff <= -0.5 && pointsDiff > -1:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0.1;\n      break;\n    case pointsDiff <= -1 && pointsDiff > -1.5:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0.2;\n      break;\n    case pointsDiff <= -1.5 && pointsDiff > -2:\n      pointsDiffWeightingHome = -0.1;\n      pointsDiffWeightingAway = 0.3;\n      break;\n    case pointsDiff <= -2 && pointsDiff > -2.5:\n      pointsDiffWeightingHome = -0.1;\n      pointsDiffWeightingAway = 0.4;\n      break;\n    case pointsDiff <= -2.5:\n      pointsDiffWeightingHome = -0.1;\n      pointsDiffWeightingAway = 0.6;\n      break;\n    default:\n      pointsDiffWeightingHome = 0;\n      pointsDiffWeightingAway = 0;\n  }\n  return [pointsDiffWeightingHome, pointsDiffWeightingAway];\n}\n\nexport async function compareFormTrend(\n  threeGameAverage,\n  fiveGameAverage,\n  sixGameAverage,\n  tenGameAverage,\n  recentGoalDiff,\n  distantGoalDiff\n) {\n  let score;\n  let improving;\n\n  if (fiveGameAverage >= 2.5) {\n    switch (true) {\n      case fiveGameAverage > tenGameAverage:\n        score = 12.5;\n        break;\n      case fiveGameAverage === tenGameAverage:\n        score = 12;\n        break;\n      case fiveGameAverage < tenGameAverage:\n        score = 11;\n        break;\n      default:\n        break;\n    }\n  } else if (fiveGameAverage < 2.5 && fiveGameAverage >= 2) {\n    switch (true) {\n      case fiveGameAverage > tenGameAverage:\n        score = 10.5;\n        break;\n      case fiveGameAverage === tenGameAverage:\n        score = 10;\n        break;\n      case fiveGameAverage < tenGameAverage:\n        score = 9;\n        break;\n      default:\n        break;\n    }\n  } else if (fiveGameAverage < 2 && fiveGameAverage >= 1.5) {\n    switch (true) {\n      case fiveGameAverage > tenGameAverage:\n        score = 8.5;\n        break;\n      case fiveGameAverage === tenGameAverage:\n        score = 8;\n        break;\n      case fiveGameAverage < tenGameAverage:\n        score = 7;\n        break;\n      default:\n        break;\n    }\n    if (fiveGameAverage + 1 < tenGameAverage) {\n      score = score - 2;\n    }\n  } else if (fiveGameAverage < 1.5 && fiveGameAverage >= 1) {\n    switch (true) {\n      case fiveGameAverage > tenGameAverage:\n        score = 6.5;\n        break;\n      case fiveGameAverage === tenGameAverage:\n        score = 6;\n        break;\n      case fiveGameAverage < tenGameAverage:\n        score = 5;\n        break;\n      default:\n        break;\n    }\n    if (fiveGameAverage + 1 < tenGameAverage) {\n      score = score - 2;\n    }\n  } else if (fiveGameAverage < 1 && fiveGameAverage >= 0.5) {\n    switch (true) {\n      case fiveGameAverage > tenGameAverage:\n        score = 4.5;\n        break;\n      case fiveGameAverage === tenGameAverage:\n        score = 4;\n        break;\n      case fiveGameAverage < tenGameAverage:\n        score = 3;\n        break;\n      default:\n        break;\n    }\n    if (fiveGameAverage + 1 < tenGameAverage) {\n      score = score - 2;\n    }\n  } else if (fiveGameAverage < 0.5) {\n    switch (true) {\n      case fiveGameAverage > tenGameAverage:\n        score = 2.5;\n        break;\n      case fiveGameAverage === tenGameAverage:\n        score = 2;\n        break;\n      case fiveGameAverage < tenGameAverage:\n        score = 1;\n        break;\n      default:\n        break;\n    }\n    if (fiveGameAverage + 1 < tenGameAverage) {\n      score = 1;\n    }\n  }\n\n  if (fiveGameAverage > 1) {\n    if (\n      threeGameAverage >= sixGameAverage &&\n      sixGameAverage >= tenGameAverage\n    ) {\n      improving = true;\n    } else if (recentGoalDiff < distantGoalDiff) {\n      improving = false;\n    } else if (recentGoalDiff - 1 > distantGoalDiff) {\n      improving = true;\n    } else {\n      improving = false;\n    }\n  }\n\n  // if (lastGame === \"L\") {\n  //   score = score - 1;\n  // } else if (lastGame === \"W\") {\n  //   score = score + 1;\n  // }\n\n  return [score, improving];\n}\n\nexport async function getPointAverage(pointTotal, games) {\n  return pointTotal / games;\n}\n\nexport async function compareTeams(homeForm, awayForm, teamName, match) {\n  console.log(\"sotComparison\");\n  let sotComparisonHOrA = await compareStat(\n    homeForm.AverageShotsOnTarget,\n    awayForm.AverageShotsOnTarget\n  );\n\n  let sotComparison = await compareStat(\n    homeForm.AverageShotsOnTargetOverall,\n    awayForm.AverageShotsOnTargetOverall\n  );\n\n  let CleanSheetPercentageComparison = await compareStat(\n    homeForm.CleanSheetPercentage,\n    awayForm.CleanSheetPercentage\n  );\n\n  let dangerousAttackConversionComparison = await compareStat(\n    awayForm.dangerousAttackConversion,\n    homeForm.dangerousAttackConversion\n  );\n\n  let goalsPerDangerousAttackComparison = await compareStat(\n    homeForm.goalsPerDangerousAttack,\n    awayForm.goalsPerDangerousAttack\n  );\n\n  let goalsForComparison = await compareStat(\n    homeForm.ScoredAverage,\n    awayForm.ScoredAverage\n  );\n\n  let goalsAgainstComparison = await compareStat(\n    awayForm.ConcededAverage,\n    homeForm.ConcededAverage\n  );\n\n  let dangerousAttacksComparisonHOrA = await compareStat(\n    homeForm.AverageDangerousAttacks,\n    awayForm.AverageDangerousAttacks\n  );\n\n  let dangerousAttacksComparison = await compareStat(\n    homeForm.AverageDangerousAttacksOverall,\n    awayForm.AverageDangerousAttacksOverall\n  );\n\n  let XGdifferentialComparison = await compareStat(\n    homeForm.XGWeighting,\n    awayForm.XGWeighting\n  );\n\n  // let overUnderAchievingSumComparison = await compareStat(\n  //   homeForm.overUnderAchievingSum,\n  //   awayForm.overUnderAchievingSum\n  // );\n\n  let formTrendScoreComparison = await compareStat(\n    homeForm.formTrendScore,\n    awayForm.formTrendScore\n  );\n\n  let last10PointsComparison = await compareStat(\n    homeForm.last10Points,\n    awayForm.last10Points\n  );\n\n  let twoGameAverageComparison = await compareStat(\n    homeForm.twoGameAverage,\n    awayForm.twoGameAverage\n  );\n\n  let fiveGameAverageComparison = await compareStat(\n    homeForm.fiveGameAverage,\n    awayForm.fiveGameAverage\n  );\n\n  let sixGameAverageComparison = await compareStat(\n    homeForm.sixGameAverage,\n    awayForm.sixGameAverage\n  );\n\n  let tenGameAverageComparison = await compareStat(\n    homeForm.tenGameAverage,\n    awayForm.tenGameAverage\n  );\n\n  let seasonPPGComparison;\n  if (homeForm.SeasonPPG !== \"N/A\" && awayForm.SeasonPPG !== \"N/A\") {\n    seasonPPGComparison = await compareStat(\n      parseFloat(homeForm.SeasonPPG),\n      parseFloat(awayForm.SeasonPPG)\n    );\n  } else seasonPPGComparison = last10PointsComparison;\n\n  let attackingPotencyComparison = await compareStat(\n    homeForm.AttackingPotency,\n    awayForm.AttackingPotency\n  );\n\n  let AveragePossessionComparisonHOrA = await compareStat(\n    homeForm.AveragePossession,\n    awayForm.AveragePossession\n  );\n\n  let AveragePossessionComparison = await compareStat(\n    homeForm.AveragePossessionOverall,\n    awayForm.AveragePossessionOverall\n  );\n  console.log(typeof awayPositionAwayOnly)\n\n  let positionComparison;\n  if (\n    typeof awayForm.awayPositionAwayOnly === \"number\" &&\n    typeof homeForm.homePositionHomeOnly === \"number\"\n  ) {\n    positionComparison = await compareStat(\n      (awayForm.awayPositionAwayOnly + awayForm.awayPosition) + 10,\n      (homeForm.homePositionHomeOnly + homeForm.homePosition) + 10\n    );\n  } else {\n    positionComparison = await compareStat(\n      homeForm.tenGameAverage,\n      awayForm.tenGameAverage\n    );\n  }\n\n  let winPercentageComparison = await compareStat(\n    (match.homeTeamWinPercentage + 30),\n    (match.awayTeamWinPercentage + 30)\n  );\n\n  let calculation =\n    // goalsForComparison * 1 +\n    // goalsAgainstComparison * 1 +\n    formTrendScoreComparison * 1 +\n    twoGameAverageComparison * 1 +\n    fiveGameAverageComparison * 1 +\n    tenGameAverageComparison * 1 +\n    dangerousAttacksComparison * 1 +\n    XGdifferentialComparison * 1 +\n    sotComparison * 1 +\n    sotComparisonHOrA * 1 +\n    CleanSheetPercentageComparison * 2 +\n    dangerousAttackConversionComparison * 1 +\n    goalsPerDangerousAttackComparison * 1 +\n    dangerousAttacksComparisonHOrA * 1 +\n    attackingPotencyComparison * 1 +\n    seasonPPGComparison * 1 +\n    AveragePossessionComparison * 1 +\n    AveragePossessionComparisonHOrA * 1 +\n    positionComparison * 5 +\n    winPercentageComparison * 5;\n\n  if (\n    calculation > 0 &&\n    match.awayTeamWinPercentage + match.awayTeamDrawPercentage > 60\n  ) {\n    calculation = calculation / 2;\n  } else if (\n    calculation < 0 &&\n    match.homeTeamWinPercentage + match.homeTeamDrawPercentage > 60\n  ) {\n    calculation = calculation / 2;\n  }\n\n  if (homeForm.ScoredAverage < 1 && awayForm.ScoredAverage < 1) {\n    roundDown = true;\n  }\n\n  return calculation;\n}\n\n//Calculates scores based on prior XG figures, weighted by odds\nexport async function calculateScore(match, index, divider, id) {\n  let homeRaw;\n  let awayRaw;\n\n  let teams;\n  let calculate = true;\n\n  if (\n    allForm.find(\n      (game) =>\n        game.home.teamName === match.homeTeam &&\n        game.away.teamName === match.awayTeam\n    )\n  ) {\n    teams = [\n      allForm.find((game) => game.home.teamName === match.homeTeam).home,\n      allForm.find((game) => game.away.teamName === match.awayTeam).away,\n    ];\n  } else {\n    calculate = false;\n  }\n\n  let formHome;\n  let formAway;\n\n  if (calculate) {\n    for (let i = 0; i < teams.length; i++) {\n      if (teams[0][index].PlayedHome <= 1 || teams[1][index].PlayedAway <= 1) {\n        index = 2;\n        divider = 10;\n      }\n\n      teams[i][index].lastGame = teams[i][index].LastFiveForm[4];\n      teams[i][index].previousToLastGame = teams[i][index].LastFiveForm[3];\n\n      let last2 = [\n        teams[i][index].lastGame,\n        teams[i][index].previousToLastGame,\n      ];\n      let last3 = [\n        teams[i][index].lastGame,\n        teams[i][index].previousToLastGame,\n        teams[i][index].LastFiveForm[2],\n      ];\n\n      teams[i][index].last5Points = getPointsFromLastX(\n        teams[i][index].LastFiveForm\n      );\n\n      teams[i][index].last6Points = getPointsFromLastX(\n        teams[i][index].LastSixForm\n      );\n\n      teams[i][index].last10Points = getPointsFromLastX(\n        teams[i][index].LastTenForm\n      );\n\n      teams[i][index].last3Points = getPointsFromLastX(last3);\n\n      teams[i][index].last2Points = getPointsFromLastX(last2);\n\n      teams[i][index].twoGameAverage = await getPointAverage(\n        teams[i][index].last2Points,\n        2\n      );\n      teams[i][index].threeGameAverage = await getPointAverage(\n        teams[i][index].last3Points,\n        3\n      );\n      teams[i][index].fiveGameAverage = await getPointAverage(\n        teams[i][index].last5Points,\n        5\n      );\n      teams[i][index].sixGameAverage = await getPointAverage(\n        teams[i][index].last6Points,\n        6\n      );\n      teams[i][index].tenGameAverage = await getPointAverage(\n        teams[i][index].last10Points,\n        10\n      );\n\n      let scoredAverageNotZero = 0.01;\n      let conceededAverageNotZero = 0.01;\n\n      if (teams[i][index].ScoredAverage === 0) {\n        teams[i][index].ScoredAverage = scoredAverageNotZero;\n        teams[i][0].ScoredOverall = scoredAverageNotZero;\n      }\n\n      if (teams[i][index].ConcededAverage === 0) {\n        teams[i][index].ConcededAverage = conceededAverageNotZero;\n        teams[i][0].ConcededOverall = conceededAverageNotZero;\n      }\n\n      teams[i][index].ScoredAverageShortTerm = teams[i][0].ScoredOverall / 5;\n      teams[i][index].ScoredAverageShortTermHomeOrAway =\n        teams[i][1].ScoredAverage;\n      teams[i][index].ConcededAverageShortTerm =\n        teams[i][0].ConcededOverall / 5;\n      teams[i][index].ConcededAverageShortTermHomeOrAway =\n        teams[i][1].ConcededAverage;\n\n      teams[i][index].longTermAverageGoals = teams[i][2].ScoredAverage;\n      teams[i][index].longTermAverageConceeded = teams[i][2].ConcededAverage;\n\n      let recentGoalDiff =\n        teams[i][index].ScoredAverageShortTerm -\n        teams[i][index].ConcededAverageShortTerm;\n      let distantGoalDiff =\n        teams[i][index].longTermAverageGoals -\n        teams[i][index].longTermAverageConceeded;\n\n      [teams[i][index].formTrendScore, teams[i][index].improving] =\n        await compareFormTrend(\n          teams[i][index].threeGameAverage,\n          teams[i][index].fiveGameAverage,\n          teams[i][index].sixGameAverage,\n          teams[i][index].tenGameAverage,\n          teams[i][index].lastGame,\n          recentGoalDiff,\n          distantGoalDiff\n        );\n\n      teams[i][index].expectedGoals = parseFloat(teams[i][index].XG);\n      teams[i][index].expectedGoalsConceeded = parseFloat(\n        teams[i][index].XGAgainstAverage\n      );\n\n      teams[i][index].expectedGoalsLongTerm = parseFloat(teams[i][2].XG);\n\n      teams[i][index].expectedConceededGoalsLongTerm = parseFloat(\n        teams[i][index].XGAgainstAverage\n      );\n\n      teams[i][index].ScoredAverageShortAndLongTerm =\n        (teams[i][index].ScoredOverall / 10 +\n          teams[i][index].ScoredAverageShortTerm) /\n        2;\n\n      teams[i][index].expectedGoalsShortAndLongTerm =\n        (teams[i][index].expectedGoalsLongTerm +\n          teams[i][index].expectedGoals) /\n        2;\n\n      teams[i][index].conceededAverageShortAndLongTerm =\n        (teams[i][index].ConcededOverall / 10 +\n          teams[i][index].ConcededAverageShortTerm) /\n        2;\n\n      teams[i][index].finishingScore = parseFloat(\n        teams[i][index].XG - teams[i][index].ScoredAverage\n      );\n\n      teams[i][index].goalieRating = parseFloat(\n        teams[i][index].ConcededAverage - teams[i][index].XGAgainstAverage\n      );\n\n      teams[i][index].defenceScore = parseInt(\n        teams[i][index].CleanSheetPercentage\n      );\n\n      let defenceScore;\n      defenceScore = teams[i][index].defenceScore;\n\n      switch (true) {\n        case defenceScore === 0:\n          teams[i][index].defenceRating = 1.05;\n          break;\n        case defenceScore > 0 && defenceScore < 20:\n          teams[i][index].defenceRating = 1;\n          break;\n        case defenceScore >= 20 && defenceScore < 30:\n          teams[i][index].defenceRating = 1;\n          break;\n        case defenceScore >= 30 && defenceScore < 40:\n          teams[i][index].defenceRating = 1;\n          break;\n        case defenceScore >= 40 && defenceScore < 50:\n          teams[i][index].defenceRating = 0.95;\n          break;\n        case defenceScore >= 50 && defenceScore < 60:\n          teams[i][index].defenceRating = 0.9;\n          break;\n        case defenceScore >= 60 && defenceScore < 70:\n          teams[i][index].defenceRating = 0.8;\n          break;\n        case defenceScore >= 70 && defenceScore < 80:\n          teams[i][index].defenceRating = 0.75;\n          break;\n        case defenceScore >= 80:\n          teams[i][index].defenceRating = 0.6;\n          break;\n        default:\n          break;\n      }\n\n      let goalOverOrUnderAchieving = parseFloat(\n        await diff(teams[i][index].finishingScore, 0)\n      );\n\n      let concededOverOrUnderAchieving = parseFloat(\n        await diff(teams[i][index].goalieRating, 0)\n      );\n\n      teams[i][index].overUnderAchievingSumAttack = goalOverOrUnderAchieving;\n\n      teams[i][index].overUnderAchievingSumDefence =\n        concededOverOrUnderAchieving;\n\n      teams[i][index].overUnderAchievingSum = (\n        goalOverOrUnderAchieving + concededOverOrUnderAchieving\n      ).toFixed(2);\n\n      teams[i][index].forecastedXG = parseFloat(teams[i][index].ScoredAverage);\n\n      teams[i][index].forecastedXGConceded = parseFloat(\n        teams[i][index].ConcededAverage\n      );\n\n      teams[0][index].goalsBasedOnAverages = parseFloat(\n        (teams[0][index].forecastedXG + teams[1][index].forecastedXGConceded) /\n          2\n      );\n\n      teams[1][index].goalsBasedOnAverages = parseFloat(\n        (teams[1][index].forecastedXG + teams[0][index].forecastedXGConceded) /\n          2\n      );\n\n      teams[i][index].XGdifferential =\n        teams[i][index].XG - teams[i][index].XGAgainstAverage;\n\n      switch (true) {\n        case teams[i][index].XGdifferential > 1:\n          teams[i][index].XGWeighting = 6;\n          break;\n        case teams[i][index].XGdifferential <= 1 &&\n          teams[i][index].XGdifferential > 0.5:\n          teams[i][index].XGWeighting = 5;\n          break;\n        case teams[i][index].XGdifferential <= 0.5 &&\n          teams[i][index].XGdifferential > 0:\n          teams[i][index].XGWeighting = 4;\n          break;\n        case teams[i][index].XGdifferential >= -0.5 &&\n          teams[i][index].XGdifferential < 0:\n          teams[i][index].XGWeighting = 3;\n          break;\n        case teams[i][index].XGdifferential >= -1 &&\n          teams[i][index].XGdifferential < -0.5:\n          teams[i][index].XGWeighting = 2;\n          break;\n        case teams[i][index].XGdifferential < -1:\n          teams[i][index].XGWeighting = 1;\n          break;\n        default:\n          teams[i][index].XGWeighting = 1;\n          break;\n      }\n    }\n\n    homeOdds = match.homeOdds;\n    awayOdds = match.awayOdds;\n\n    if (\n      (match.homeOdds === 0 && match.awayOdds === 0) ||\n      (match.homeOdds === \"N/A\" && match.awayOdds === \"N/A\")\n    ) {\n      homeRaw = 1.0;\n      awayRaw = 1.0;\n    } else {\n      homeRaw = (1 / match.homeOdds).toFixed(2);\n      awayRaw = (1 / match.awayOdds).toFixed(2);\n    }\n\n    formHome = teams[0][index];\n    formAway = teams[1][index];\n\n    [formHome.overOrUnderAttack, formHome.trueFormAttack] =\n      await getOverOrUnderAchievingResult(\n        index,\n        formHome.overUnderAchievingSumAttack\n      );\n\n    [formHome.overOrUnderDefence, formHome.trueFormDefence] =\n      await getOverOrUnderAchievingResult(\n        index,\n        formHome.overUnderAchievingSumDefence\n      );\n\n    [formAway.overOrUnderAttack, formAway.trueFormAttack] =\n      await getOverOrUnderAchievingResult(\n        index,\n        formAway.overUnderAchievingSumAttack\n      );\n\n    [formAway.overOrUnderDefence, formAway.trueFormDefence] =\n      await getOverOrUnderAchievingResult(\n        index,\n        formAway.overUnderAchievingSumDefence\n      );\n\n    let homeTenGameAvg = formHome.last10Points / 10;\n    let awayTenGameAvg = formAway.last10Points / 10;\n\n    let homeFiveGameAvg = formHome.last5Points / 5;\n    let awayFiveGameAvg = formAway.last5Points / 5;\n\n    let homeThreeGameAvg = formHome.last3Points / 3;\n    let awayThreeGameAvg = formAway.last3Points / 3;\n\n    let homeTwoGameAvg = formHome.last2Points / 2;\n    let awayTwoGameAvg = formAway.last2Points / 2;\n\n    //can update this for last 10\n    let pointsDiff = await getPointsDifferential(\n      homeFiveGameAvg,\n      awayFiveGameAvg\n    );\n\n    let pointsDiff3 = await getPointsDifferential(\n      homeThreeGameAvg,\n      awayThreeGameAvg\n    );\n\n    let pointsDiff2 = await getPointsDifferential(\n      homeTwoGameAvg,\n      awayTwoGameAvg\n    );\n\n    let pointsDiff10 = await getPointsDifferential(\n      homeTenGameAvg,\n      awayTenGameAvg\n    );\n\n    let [last10WeightingHome, last10WeightingAway] = await getPointWeighting(\n      pointsDiff10\n    );\n\n    let [last5WeightingHome, last5WeightingAway] = await getPointWeighting(\n      pointsDiff\n    );\n\n    let [last3WeightingHome, last3WeightingAway] = await getPointWeighting(\n      pointsDiff3\n    );\n\n    let [last2WeightingHome, last2WeightingAway] = await getPointWeighting(\n      pointsDiff2\n    );\n\n    formHome.dangerousAttackConversion =\n      formHome.AverageDangerousAttacks / formHome.ScoredAverageShortAndLongTerm;\n    formAway.dangerousAttackConversion =\n      formAway.AverageDangerousAttacks / formAway.ScoredAverageShortAndLongTerm;\n\n    formHome.goalsPerDangerousAttack =\n      formHome.ScoredAverageShortAndLongTerm / formHome.AverageDangerousAttacks;\n    formAway.goalsPerDangerousAttack =\n      formAway.ScoredAverageShortAndLongTerm / formAway.AverageDangerousAttacks;\n\n    [formHome.clinicalRating, formHome.clinicalScore] = await getClinicalRating(\n      formHome\n    );\n    [formAway.clinicalRating, formAway.clinicalScore] = await getClinicalRating(\n      formAway\n    );\n\n    let oddsWeightingHome;\n    let oddsWeightingAway;\n    let homeWeighting;\n    let awayWeighting;\n\n    let weightingSplitHome;\n    let weightingSplitAway;\n    let weighting;\n\n    if (homeRaw > 0) {\n      oddsWeightingHome = homeRaw - awayRaw;\n      oddsWeightingAway = awayRaw - homeRaw;\n\n      weighting = await diff(oddsWeightingHome, oddsWeightingAway);\n\n      if (weighting >= 0) {\n        weightingSplitHome = Math.abs(weighting) / 2;\n        weightingSplitAway = -Math.abs(weighting) / 2;\n      } else if (weighting < 0) {\n        weightingSplitHome = -Math.abs(weighting) / 2;\n        weightingSplitAway = Math.abs(weighting) / 2;\n      } else {\n        weightingSplitHome = 1;\n        weightingSplitAway = 1;\n      }\n    } else {\n      weightingSplitHome = 1;\n      weightingSplitAway = 1;\n    }\n\n    homeWeighting = weightingSplitHome * 0;\n    awayWeighting = weightingSplitAway * 0;\n\n    let homeCalculation;\n    let awayCalculation;\n\n    if (\n      typeof formHome.homeTeamHomePositionRaw === \"number\" &&\n      typeof formAway.awayTeamAwayPositionRaw === \"number\"\n    ) {\n      formHome.homePositionHomeOnly = parseFloat(formHome.homeTeamHomePositionRaw);\n      formAway.awayPositionAwayOnly = parseFloat(formAway.awayTeamAwayPositionRaw);\n      formHome.homePosition = parseFloat(formHome.homeRawPosition);\n      formAway.awayPosition = parseFloat(formAway.awayRawPosition);\n    } else {\n      formHome.homePositionHomeOnly = \"N/A\"\n      formAway.awayPositionAwayOnly = \"N/A\"\n      formHome.homePosition = \"N/A\"\n      formAway.awayPosition = \"N/A\"\n    }\n\n    if (homeWeighting > 0.25) {\n      homeCalculation = 1.15;\n      awayCalculation = 0.85;\n    } else if (homeWeighting < -0.25) {\n      homeCalculation = 0.15;\n      awayCalculation = 1.85;\n    } else {\n      homeCalculation = parseFloat(1 + homeWeighting);\n      awayCalculation = parseFloat(1 + awayWeighting);\n    }\n\n    formHome.AttackingPotency = (formHome.XG / formHome.AttacksHome) * 100;\n\n    formAway.AttackingPotency = (formAway.XG / formAway.AttacksAverage) * 100;\n\n    let teamComparisonScore =\n      (await compareTeams(formHome, formAway, match.homeTeam, match)) / 15;\n    match.teamComparisonScore = teamComparisonScore;\n\n    let finalHomeGoals;\n    let finalAwayGoals;\n\n    async function roundCustom(num, form, otherTeamForm, round) {\n      // if(form.ScoredAverageShortTerm >= num){\n      //   num = num + 0.25\n      // } else {\n      //   num = num - 0.25\n      // }\n      let wholeNumber = Math.floor(num);\n      let remainder = num - wholeNumber;\n\n      // if (form.clinicalScore === 1.3) {\n      //   num = num - 0.25;\n      // } else if (form.clinicalScore === 0.8) {\n      //   num = num + 0.25;\n      // }\n\n      // if(round === true){\n      //   num = num - 0.5\n      // }\n\n      if (wholeNumber !== 0) {\n        if (remainder > 0.9) {\n          return Math.ceil(num);\n        } else {\n          return Math.floor(num);\n        }\n      } else if (wholeNumber === 0) {\n        if (remainder > 0.9) {\n          return Math.ceil(num);\n        } else {\n          return Math.floor(num);\n        }\n      } else {\n        return Math.floor(num);\n      }\n    }\n\n    const homeGoalDiff =\n      formHome.ScoredAverageShortAndLongTerm -\n      formHome.conceededAverageShortAndLongTerm;\n    const awayGoalDiff =\n      formAway.ScoredAverageShortAndLongTerm -\n      formAway.conceededAverageShortAndLongTerm;\n\n    formHome.goalsDifferential =\n      parseFloat(await diff(homeGoalDiff, awayGoalDiff)) / 1;\n    formAway.goalsDifferential =\n      parseFloat(await diff(awayGoalDiff, homeGoalDiff)) / 1;\n\n    let goalCalcHomeOnly =\n      (formHome.ScoredAverageShortTermHomeOrAway +\n        formAway.ConcededAverageShortTermHomeOrAway) /\n      2;\n    let goalCalcAwayOnly =\n      (formAway.ScoredAverageShortTermHomeOrAway +\n        formHome.ConcededAverageShortTermHomeOrAway) /\n      2;\n\n    let goalCalcHomeShortTerm =\n      (formHome.ScoredAverageShortTerm + formAway.ConcededAverageShortTerm) / 2;\n    let goalCalcAwayShortTerm =\n      (formAway.ScoredAverageShortTerm + formHome.ConcededAverageShortTerm) / 2;\n\n    let goalCalcHomeShortAndLongTerm =\n      (formHome.ScoredAverageShortAndLongTerm +\n        formAway.conceededAverageShortAndLongTerm) /\n      2;\n    let goalCalcAwayShortAndLongTerm =\n      (formAway.ScoredAverageShortAndLongTerm +\n        formHome.conceededAverageShortAndLongTerm) /\n      2;\n\n    let factorOneHome =\n      (goalCalcHomeShortTerm * 0 +\n        goalCalcHomeShortAndLongTerm * 2 +\n        goalCalcHomeOnly * 0 +\n        formAway.expectedConceededGoalsLongTerm +\n        formHome.expectedGoalsLongTerm +\n        formAway.ConcededAverageShortTerm * 1 +\n        // last5WeightingHome * 1 +\n        // last2WeightingHome * 1 +\n        last10WeightingHome * 1 +\n        formHome.goalsDifferential * 0) /\n      5;\n\n    console.log(match.game);\n    console.log(formHome);\n    console.log(formAway);\n\n    console.log(match);\n\n    console.log(\n      `${goalCalcHomeShortTerm} goalCalcHomeShortTerm\n        ${goalCalcHomeShortAndLongTerm} goalCalcHomeShortAndLongTerm \n        ${formAway.expectedConceededGoalsLongTerm} formAway.expectedConceededGoalsLongTerm \n        ${last5WeightingHome} last5WeightingHome \n        ${last2WeightingHome} last2WeightingHome\n        `\n    );\n    let factorOneAway =\n      (goalCalcAwayShortTerm * 0 +\n        goalCalcAwayShortAndLongTerm * 2 +\n        goalCalcAwayOnly * 0 +\n        formHome.expectedConceededGoalsLongTerm +\n        formAway.expectedGoalsLongTerm +\n        formHome.ConcededAverageShortTerm * 1 +\n        // last5WeightingAway * 1 +\n        // last2WeightingAway * 1 +\n        last10WeightingAway * 1 +\n        formAway.goalsDifferential * 0) /\n      5;\n\n    console.log(\n      `${goalCalcAwayShortTerm} goalCalcAwayShortTerm\n        ${goalCalcAwayShortAndLongTerm} goalCalcAwayShortAndLongTerm \n        ${formHome.expectedConceededGoalsLongTerm} formHome.expectedConceededGoalsLongTerm \n        ${goalCalcAwayOnly} goalCalcAwayOnly\n        ${last5WeightingAway} last5WeightingAway \n        ${last2WeightingAway} last2WeightingAway\n        `\n    );\n\n    let homeComparisonWeighting;\n    let awayComparisonWeighting;\n    match.scoreDiff = await diff(factorOneHome, factorOneAway);\n    let split = match.scoreDiff / 2;\n\n    // switch (true) {\n    //   case teamComparisonScore === 0 && match.scoreDiff > 0:\n    //     homeComparisonWeighting = -split;\n    //     awayComparisonWeighting = split;\n    //     break;\n    //   case teamComparisonScore === 0 && match.scoreDiff < 0:\n    //     homeComparisonWeighting = split;\n    //     awayComparisonWeighting = -split;\n    //     break;\n    //   case teamComparisonScore >= 1 && teamComparisonScore <= 2:\n    //     homeComparisonWeighting = 0.05;\n    //     awayComparisonWeighting = 0;\n    //     break;\n    //   case teamComparisonScore > 2 && teamComparisonScore <= 4:\n    //     homeComparisonWeighting = 0.05;\n    //     awayComparisonWeighting = -0.1;\n    //     break;\n    //   case teamComparisonScore > 4 && teamComparisonScore <= 6:\n    //     homeComparisonWeighting = 0.1;\n    //     awayComparisonWeighting = -0.1;\n    //     break;\n    //   case teamComparisonScore > 6 && teamComparisonScore <= 9:\n    //     homeComparisonWeighting = 0.15;\n    //     awayComparisonWeighting = -0.1;\n    //     break;\n    //   case teamComparisonScore > 9 && teamComparisonScore <= 12:\n    //     homeComparisonWeighting = 0.2;\n    //     awayComparisonWeighting = -0.1;\n    //     break;\n    //   case teamComparisonScore > 12 && teamComparisonScore <= 15:\n    //     homeComparisonWeighting = 0.25;\n    //     awayComparisonWeighting = -0.1;\n    //     break;\n    //   case teamComparisonScore > 15:\n    //     homeComparisonWeighting = 0.3;\n    //     awayComparisonWeighting = -0.1;\n    //     break;\n    //   case teamComparisonScore <= -1 && teamComparisonScore >= -2:\n    //     homeComparisonWeighting = split;\n    //     awayComparisonWeighting = -split;\n    //     break;\n    //   case teamComparisonScore < -2 && teamComparisonScore >= -4:\n    //     homeComparisonWeighting = -0.1;\n    //     awayComparisonWeighting = 0.05;\n    //     break;\n    //   case teamComparisonScore < -4 && teamComparisonScore >= -6:\n    //     homeComparisonWeighting = -0.1;\n    //     awayComparisonWeighting = 0.1;\n    //     break;\n    //   case teamComparisonScore < -6 && teamComparisonScore >= -9:\n    //     homeComparisonWeighting = -0.1;\n    //     awayComparisonWeighting = 0.15;\n    //     break;\n    //   case teamComparisonScore < -9 && teamComparisonScore >= -12:\n    //     homeComparisonWeighting = -0.1;\n    //     awayComparisonWeighting = 0.2;\n    //     break;\n    //   case teamComparisonScore < -12 && teamComparisonScore >= -15:\n    //     homeComparisonWeighting = -0.1;\n    //     awayComparisonWeighting = 0.25;\n    //     break;\n    //   case teamComparisonScore < -15:\n    //     homeComparisonWeighting = -0.1;\n    //     awayComparisonWeighting = 0.3;\n    //     break;\n    //   default:\n    //     homeComparisonWeighting = 0;\n    //     awayComparisonWeighting = 0;\n    //     break;\n    // }\n\n    if (teamComparisonScore > 0) {\n      homeComparisonWeighting = 1 + teamComparisonScore;\n      awayComparisonWeighting = 1 - teamComparisonScore;\n    } else if (teamComparisonScore < 0) {\n      homeComparisonWeighting = 1 + teamComparisonScore;\n      awayComparisonWeighting = 1 - teamComparisonScore;\n    } else {\n      homeComparisonWeighting = 1;\n      awayComparisonWeighting = 1;\n    }\n\n    console.log(match.game);\n    console.log(homeComparisonWeighting);\n\n    let isHomeTeamBetterHomeOrAway = await diff(\n      match.homeRawPosition,\n      match.homeTeamHomePositionRaw\n    );\n    let isAwayTeamBetterHomeOrAway = await diff(\n      match.awayRawPosition,\n      match.awayTeamAwayPositionRaw\n    );\n\n    let homeAdvantage, awayAdvantage;\n\n    switch (true) {\n      case isHomeTeamBetterHomeOrAway > 4 && isAwayTeamBetterHomeOrAway < -4:\n        homeAdvantage = 1.05;\n        awayAdvantage = 0.98;\n        break;\n      case isHomeTeamBetterHomeOrAway >= 1 && isAwayTeamBetterHomeOrAway <= -1:\n        homeAdvantage = 1.03;\n        awayAdvantage = 0.97;\n        break;\n      // case isHomeTeamBetterHomeOrAway < -4 && isAwayTeamBetterHomeOrAway > 4:\n      //   homeAdvantage = 0.98;\n      //   awayAdvantage = 1.05;\n      //   break;\n      // case isHomeTeamBetterHomeOrAway < 0 && isAwayTeamBetterHomeOrAway > 0:\n      //   homeAdvantage = 1;\n      //   awayAdvantage = 1;\n      //   break;\n      default:\n        homeAdvantage = 1.02;\n        awayAdvantage = 0.98;\n        break;\n    }\n\n    // console.log(match.game);\n    // console.log(match);\n\n    // console.log(isHomeTeamBetterHomeOrAway);\n    // console.log(homeAdvantage);\n    // console.log(isAwayTeamBetterHomeOrAway);\n    // console.log(awayAdvantage);\n\n    let experimentalHomeGoals =\n      factorOneHome *\n      0.8 *\n      homeCalculation *\n      homeComparisonWeighting *\n      homeAdvantage;\n\n    let experimentalAwayGoals =\n      factorOneAway *\n      0.8 *\n      awayCalculation *\n      awayComparisonWeighting *\n      awayAdvantage;\n\n    let rawFinalHomeGoals = experimentalHomeGoals;\n    let rawFinalAwayGoals = experimentalAwayGoals;\n\n    // switch (true) {\n    //   case formHome.overOrUnderAttack === \"Overachieving drastically\":\n    //     rawFinalHomeGoals = rawFinalHomeGoals - 0.2;\n    //     break;\n    //   case formHome.overOrUnderAttack === \"Underachieving drastically\":\n    //     rawFinalHomeGoals = rawFinalHomeGoals + 0.2;\n    //     break;\n    //   case formHome.overOrUnderAttack === \"Overachieving\":\n    //     rawFinalHomeGoals = rawFinalHomeGoals - 0.1;\n    //     break;\n    //   case formHome.overOrUnderAttack === \"Underachieving\":\n    //     rawFinalHomeGoals = rawFinalHomeGoals + 0.1;\n    //     break;\n    //   case formAway.overOrUnderAttack === \"Overachieving drastically\":\n    //     rawFinalAwayGoals = rawFinalAwayGoals - 0.2;\n    //     break;\n    //   case formAway.overOrUnderAttack === \"Underachieving drastically\":\n    //     rawFinalAwayGoals = rawFinalAwayGoals + 0.2;\n    //     break;\n    //   case formAway.overOrUnderAttack === \"Overachieving\":\n    //     rawFinalAwayGoals = rawFinalAwayGoals - 0.1;\n    //     break;\n    //   case formAway.overOrUnderAttack === \"Underachieving\":\n    //     rawFinalAwayGoals = rawFinalAwayGoals + 0.1;\n    //     break;\n    //   case formHome.overOrUnderAttack === \"Overachieving slightly\":\n    //     rawFinalHomeGoals = rawFinalHomeGoals - 0.05;\n    //     break;\n    //   case formAway.overOrUnderAttack === \"Overachieving slightly\":\n    //     rawFinalAwayGoals = rawFinalAwayGoals - 0.05;\n    //     break;\n    //   case formHome.overOrUnderAttack === \"Underachieving slightly\":\n    //     rawFinalHomeGoals = rawFinalHomeGoals + 0.05;\n    //     break;\n    //   case formAway.overOrUnderAttack === \"Underachieving slightly\":\n    //     rawFinalAwayGoals = rawFinalAwayGoals + 0.05;\n    //     break;\n    //   default:\n    //     break;\n    // }\n\n    // switch (true) {\n    //   case formHome.overOrUnderDefence === \"Overachieving drastically\":\n    //     rawFinalAwayGoals = rawFinalAwayGoals + 0.2;\n    //     break;\n    //   case formHome.overOrUnderDefence === \"Underachieving drastically\":\n    //     rawFinalAwayGoals = rawFinalAwayGoals - 0.2;\n    //     break;\n    //   case formHome.overOrUnderDefence === \"Overachieving\":\n    //     rawFinalAwayGoals = rawFinalAwayGoals + 0.1;\n    //     break;\n    //   case formHome.overOrUnderDefence === \"Underachieving\":\n    //     rawFinalAwayGoals = rawFinalAwayGoals - 0.1;\n    //     break;\n    //   case formAway.overOrUnderDefence === \"Overachieving drastically\":\n    //     rawFinalHomeGoals = rawFinalHomeGoals + 0.2;\n    //     break;\n    //   case formAway.overOrUnderDefence === \"Underachieving drastically\":\n    //     rawFinalHomeGoals = rawFinalHomeGoals - 0.2;\n    //     break;\n    //   case formAway.overOrUnderDefence === \"Overachieving\":\n    //     rawFinalHomeGoals = rawFinalHomeGoals + 0.1;\n    //     break;\n    //   case formAway.overOrUnderDefence === \"Underachieving\":\n    //     rawFinalHomeGoals = rawFinalHomeGoals - 0.1;\n    //     break;\n    //   case formHome.overOrUnderDefence === \"Overachieving slightly\":\n    //     rawFinalAwayGoals = rawFinalAwayGoals + 0.05;\n    //     break;\n    //   case formAway.overOrUnderDefence === \"Overachieving slightly\":\n    //     rawFinalHomeGoals = rawFinalHomeGoals + 0.05;\n    //     break;\n    //   case formHome.overOrUnderDefence === \"Underachieving slightly\":\n    //     rawFinalAwayGoals = rawFinalAwayGoals - 0.05;\n    //     break;\n    //   case formAway.overOrUnderDefence === \"Underachieving slightly\":\n    //     rawFinalHomeGoals = rawFinalHomeGoals - 0.05;\n    //     break;\n    //   default:\n    //     break;\n    // }\n\n    let formTrendScoreComparison;\n\n    if (formAway) {\n      formTrendScoreComparison =\n        formAway.formTrendScore - formHome.formTrendScore;\n    } else {\n      formTrendScoreComparison = 0;\n    }\n\n    let trueFormDiffHome = await diff(\n      formHome.overUnderAchievingSum,\n      formAway.overUnderAchievingSum\n    );\n    let trueFormDiffAway = await diff(\n      formAway.overUnderAchievingSum,\n      formHome.overUnderAchievingSum\n    );\n\n    if (trueFormDiffHome > 1.75) {\n      rawFinalHomeGoals =\n        rawFinalHomeGoals + formHome.expectedGoalsShortAndLongTerm / 2;\n      rawFinalAwayGoals = rawFinalAwayGoals + -Math.abs(trueFormDiffAway / 2);\n    }\n\n    if (trueFormDiffAway > 1.75) {\n      rawFinalHomeGoals = rawFinalHomeGoals + -Math.abs(trueFormDiffHome / 2);\n      rawFinalAwayGoals = rawFinalAwayGoals + trueFormDiffAway / 2;\n    }\n\n    if (rawFinalAwayGoals < 0) {\n      let difference = parseFloat((await diff(0, rawFinalAwayGoals)) / 10);\n      rawFinalHomeGoals = rawFinalHomeGoals + difference;\n      rawFinalAwayGoals = 0;\n    }\n\n    if (rawFinalHomeGoals < 0) {\n      let difference = parseFloat((await diff(0, rawFinalHomeGoals)) / 10);\n      rawFinalAwayGoals = rawFinalAwayGoals + difference;\n      rawFinalHomeGoals = 0;\n    }\n\n    if (formHome.improving === true) {\n      rawFinalHomeGoals = rawFinalHomeGoals + 0.1;\n    }\n\n    if (formAway.improving === true) {\n      rawFinalAwayGoals = rawFinalAwayGoals + 0.1;\n    }\n\n    if (rawFinalHomeGoals / formHome.ScoredAverage > 2) {\n      rawFinalHomeGoals = (rawFinalHomeGoals + formHome.ScoredAverage) / 2;\n    }\n\n    if (rawFinalAwayGoals / formAway.ScoredAverage > 2) {\n      rawFinalAwayGoals = (rawFinalAwayGoals + formAway.ScoredAverage) / 2;\n    }\n\n    finalHomeGoals = await roundCustom(\n      rawFinalHomeGoals,\n      formHome,\n      formAway,\n      roundDown\n    );\n    finalAwayGoals = await roundCustom(\n      rawFinalAwayGoals,\n      formAway,\n      formHome,\n      roundDown\n    );\n\n    if (finalHomeGoals > 5) {\n      finalHomeGoals = Math.round(\n        (finalHomeGoals + formHome.expectedGoals) / 2\n      );\n    }\n\n    if (finalAwayGoals > 5) {\n      finalAwayGoals = Math.round(\n        (finalAwayGoals + formAway.expectedGoals) / 2\n      );\n    }\n\n    if (finalHomeGoals > finalAwayGoals) {\n      match.prediction = \"homeWin\";\n      homePredictions = homePredictions + 1;\n      if (\n        formHome.overUnderAchievingSum < -2.5 ||\n        formHome.overUnderAchievingSum > 2.5 ||\n        formTrendScoreComparison >= 0 ||\n        formHome.last2Points < 3\n      ) {\n        match.includeInMultis = false;\n      } else {\n        match.includeInMultis = true;\n      }\n    } else if (finalAwayGoals > finalHomeGoals) {\n      match.prediction = \"awayWin\";\n      awayPredictions = awayPredictions + 1;\n      if (\n        formAway.overUnderAchievingSum > 2.5 ||\n        formAway.overUnderAchievingSum < -2.5 ||\n        formTrendScoreComparison <= 0 ||\n        formAway.last2Points < 3\n      ) {\n        match.includeInMultis = false;\n      } else {\n        match.includeInMultis = true;\n      }\n    } else if (finalHomeGoals === finalAwayGoals) {\n      match.prediction = \"draw\";\n      drawPredictions = drawPredictions + 1;\n    }\n\n    switch (true) {\n      case match.homeGoals > match.awayGoals:\n        match.winner = match.homeTeam;\n        match.outcome = \"homeWin\";\n        homeOutcomes = homeOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formHome.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formAway.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formHome.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formAway.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formHome.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formAway.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formHome.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formAway.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += homeOdds;\n        sumOddsLoss = sumOddsLoss += awayOdds;\n\n        sumXGForWin = sumXGForWin += formHome.XGOverall;\n        sumXGForLoss = sumXGForLoss += formAway.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formHome.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formAway.XGAgainstAvgOverall;\n\n        break;\n      case match.homeGoals === match.awayGoals:\n        match.winner = \"draw\";\n        match.outcome = \"draw\";\n        allOutcomes = allOutcomes + 1;\n        allDrawOutcomes = allDrawOutcomes + 1;\n        break;\n      case match.homeGoals < match.awayGoals:\n        match.winner = match.awayTeam;\n        match.outcome = \"awayWin\";\n        allOutcomes = allOutcomes + 1;\n        awayOutcomes = awayOutcomes + 1;\n        allWinOutcomes = allWinOutcomes + 1;\n        allLossOutcomes = allLossOutcomes + 1;\n        sumStatDAWin = sumStatDAWin += formAway.AverageDangerousAttacksOverall;\n        sumStatDALoss = sumStatDALoss +=\n          formHome.AverageDangerousAttacksOverall;\n        sumStatPossessionWin = sumStatPossessionWin +=\n          formAway.AveragePossessionOverall;\n        sumStatPossessionLoss = sumStatPossessionLoss +=\n          formHome.AveragePossessionOverall;\n        sumStatPPGLast10Win = sumStatPPGLast10Win += formAway.last10Points / 10;\n        sumStatPPGLast10Loss = sumStatPPGLast10Loss +=\n          formHome.last10Points / 10;\n        sumStatSOTWin = sumStatSOTWin += formAway.AverageShotsOnTargetOverall;\n        sumStatSOTLoss = sumStatSOTLoss += formHome.AverageShotsOnTargetOverall;\n        sumOddsWin = sumOddsWin += awayOdds;\n        sumOddsLoss = sumOddsLoss += homeOdds;\n\n        sumXGForWin = sumXGForWin += formAway.XGOverall;\n        sumXGForLoss = sumXGForLoss += formHome.XGOverall;\n        sumXGAgainstWin = sumXGAgainstWin += formAway.XGAgainstAvgOverall;\n        sumXGAgainstLoss = sumXGAgainstLoss += formHome.XGAgainstAvgOverall;\n        break;\n      default:\n        break;\n    }\n\n    winDAAverage = (sumStatDAWin / allWinOutcomes).toFixed(2);\n    lossDAAverage = (sumStatDALoss / allLossOutcomes).toFixed(2);\n    winPossessionAverage = (sumStatPossessionWin / allWinOutcomes).toFixed(2);\n    lossPossessionAverage = (sumStatPossessionLoss / allLossOutcomes).toFixed(\n      2\n    );\n    winLast10PPGAverage = (sumStatPPGLast10Win / allWinOutcomes).toFixed(2);\n    lossLast10PPGAverage = (sumStatPPGLast10Loss / allLossOutcomes).toFixed(2);\n    winSOTAverage = (sumStatSOTWin / allWinOutcomes).toFixed(2);\n    lossSOTAverage = (sumStatSOTLoss / allLossOutcomes).toFixed(2);\n    winOddsAverage = (sumOddsWin / allWinOutcomes).toFixed(2);\n    lossOddsAverage = (sumOddsLoss / allLossOutcomes).toFixed(2);\n    winXGForAverage = (sumXGForWin / allWinOutcomes).toFixed(2);\n    lossXGForAverage = (sumXGForLoss / allLossOutcomes).toFixed(2);\n    winXGAgainstAverage = (sumXGAgainstWin / allWinOutcomes).toFixed(2);\n    lossXGAgainstAverage = (sumXGAgainstLoss / allLossOutcomes).toFixed(2);\n\n    if (match.status === \"complete\") {\n      if (match.prediction === match.outcome) {\n        match.predictionOutcome = \"Won\";\n        winAmount = winAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      } else if (match.prediction !== match.outcome) {\n        match.predictionOutcome = \"Lost\";\n        lossAmount = lossAmount + 1;\n        if (match.outcome === \"draw\") {\n        }\n      }\n    }\n\n    if (match.status === \"complete\") {\n      if (match.predictionOutcome === \"Won\" || match.outcome === \"draw\") {\n        match.doubleChancePredictionOutcome = \"Won\";\n      } else if (match.prediction !== \"Won\" && match.outcome !== \"draw\") {\n        match.doubleChancePredictionOutcome = \"Lost\";\n      }\n    }\n\n    match.formHome = formHome;\n    match.formAway = formAway;\n\n    let total = parseInt(finalHomeGoals + finalAwayGoals);\n    totalGoals = totalGoals + total;\n\n    let total2 = parseInt(match.homeGoals + match.awayGoals);\n    totalGoals2 = totalGoals2 + total2;\n\n    numberOfGames = numberOfGames + 1;\n\n    if (finalHomeGoals < 0) {\n      finalHomeGoals = 0;\n    }\n\n    if (finalAwayGoals < 0) {\n      finalAwayGoals = 0;\n    }\n\n    if (match.status === \"suspended\") {\n      finalHomeGoals = \"P\";\n      finalAwayGoals = \"P\";\n    }\n\n    return [\n      finalHomeGoals,\n      finalAwayGoals,\n      rawFinalHomeGoals,\n      rawFinalAwayGoals,\n    ];\n  } else {\n    finalHomeGoals = \"\";\n    finalAwayGoals = \"\";\n    rawFinalHomeGoals = \"\";\n    rawFinalAwayGoals = \"\";\n    match.status = \"void\";\n  }\n\n  return [finalHomeGoals, finalAwayGoals, rawFinalHomeGoals, rawFinalAwayGoals];\n}\n\nasync function getSuccessMeasure(fixtures) {\n  let sumProfit = 0;\n  let investment = 0;\n  let exactScores = 0;\n  let successCount = 0;\n  let netProfit;\n\n  for (let i = 0; i < fixtures.length; i++) {\n    if (fixtures[i].status === \"complete\") {\n      sumProfit = sumProfit + fixtures[i].profit;\n      investment = investment + 1;\n      netProfit = (sumProfit - investment).toFixed(2);\n      if (fixtures[i].exactScore === true) {\n        exactScores = exactScores + 1;\n      }\n      if (fixtures[i].predictionOutcome === \"Won\") {\n        successCount = successCount + 1;\n      }\n    }\n  }\n\n  let ROI = (netProfit / investment) * 100;\n  var operand = ROI >= 0 ? \"+\" : \"\";\n  let exactScoreHitRate = ((exactScores / investment) * 100).toFixed(1);\n  let successRate = ((successCount / investment) * 100).toFixed(1);\n\n  if (investment > 0) {\n    ReactDOM.render(\n      <Fragment>\n        <Div\n          className={\"SuccessMeasure\"}\n          text={`ROI for \n            all ${investment} W/D/W \n            outcomes: ${operand} ${ROI.toFixed(2)}%`}\n        />\n        <p>{`Correct W/D/W predictions: ${successCount} (${successRate}%)`}</p>\n        <p>{`Exact scores predicted: ${exactScores} (${exactScoreHitRate}%)`}</p>\n      </Fragment>,\n      document.getElementById(\"successMeasure\")\n    );\n  } else {\n    return;\n  }\n}\n\nexport var tips = [];\nexport var allTips = [];\nvar newArray = [];\nvar bestBets = [];\nvar price;\nvar longShotTips = [];\nvar drawTips = [];\nvar combinations;\nvar exoticArray = [];\nvar gamesInExotic;\nvar minimumExotic;\nvar exoticStake;\nvar exoticString;\nvar bttsArray = [];\nvar accumulatedOdds = 1;\nlet predictions = [];\n\nexport async function getNewTips(array) {\n  newArray = [];\n  accumulatedOdds = 1;\n\n  if (array.length > 1 && incrementValue > 0) {\n    array.forEach((tip) => {\n      if (\n        array.indexOf(tip) < incrementValue\n        // tip.goalDifferential >= incrementValue && tip.comparisonScore > 0\n      ) {\n        newArray.push(tip);\n        accumulatedOdds = parseFloat(accumulatedOdds) * parseFloat(tip.rawOdds);\n      }\n    });\n  }\n  await renderTips(newArray);\n}\n\nexport async function getScorePrediction(day, mocked) {\n  let radioSelected = parseInt(selectedOption);\n  let mock = mocked;\n  tips = [];\n  bestBets = [];\n  // price = 0\n  bttsArray = [];\n  longShotTips = [];\n  drawTips = [];\n\n  let index = 2;\n  let divider = 10;\n\n  // if (radioSelected === 5) {\n  //   index = 0;\n  //   divider = 5;\n  // } else if (radioSelected === 6) {\n  //   index = 1;\n  //   divider = 6;\n  // } else if (radioSelected === 10) {\n  //   index = 2;\n  //   divider = 10;\n  // } else if (radioSelected === 0) {\n  //   index = 2;\n  //   divider = 10;\n  // }\n\n  await Promise.all(\n    matches.map(async (match) => {\n      // if there are no stored predictions, calculate them based on live data\n      if (match) {\n        switch (true) {\n          case match.status === \"canceled\":\n            match.goalsA = \"P\";\n            match.goalsB = \"P\";\n            break;\n          default:\n            [\n              match.goalsA,\n              match.goalsB,\n              match.unroundedGoalsA,\n              match.unroundedGoalsB,\n            ] = await calculateScore(match, index, divider, match.id);\n            break;\n        }\n      } else {\n        [\n          match.goalsA,\n          match.goalsB,\n          match.unroundedGoalsA,\n          match.unroundedGoalsB,\n        ] = await calculateScore(match, index, divider, match.id);\n      }\n\n      await getBTTSPotential(allForm, match, index, match.goalsA, match.goalsB);\n\n      let predictionObject;\n      let longShotPredictionObject;\n      let drawPredictionObject;\n\n      if (\n        match.unroundedGoalsA - match.unroundedGoalsB > 1 &&\n        match.homeOdds !== 0 &&\n        match.fractionHome !== \"N/A\"\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.homeOdds < 3 &&\n          // match.homePpg > 1 &&\n          match.includeInMultis === true\n        ) {\n          predictionObject = {\n            team: `${match.homeTeam} to win`,\n            odds: match.fractionHome,\n            rawOdds: match.homeOdds,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            formTrend: match.formHome.improving,\n            outcome: match.predictionOutcome,\n            goalDifferential: parseFloat(\n              await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n            ),\n            experimentalCalc:\n              (match.unroundedGoalsA - match.unroundedGoalsB) *\n              Math.abs(match.teamComparisonScore),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formHome.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n\n            if (\n              match.unroundedGoalsA - match.unroundedGoalsB > incrementValue &&\n              match.formHome.improving === true &&\n              match.formAway.improving === false &&\n              predictionObject.rawComparisonScore > 11\n            ) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      } else if (\n        match.unroundedGoalsB - match.unroundedGoalsA > 2 &&\n        match.awayOdds !== 0 &&\n        match.fractionAway !== \"N/A\"\n      ) {\n        if (\n          match.prediction !== \"draw\" &&\n          match.status !== \"suspended\" &&\n          match.status !== \"canceled\" &&\n          match.awayOdds < 3.5 &&\n          match.includeInMultis === true\n        ) {\n          predictionObject = {\n            team: `${match.awayTeam} to win`,\n            rawOdds: match.awayOdds,\n            odds: match.fractionAway,\n            comparisonScore: Math.abs(match.teamComparisonScore),\n            rawComparisonScore: match.teamComparisonScore,\n            formTrend: match.formAway.improving,\n            outcome: match.predictionOutcome,\n            goalDifferential: parseFloat(\n              await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n            ),\n            experimentalCalc:\n              (match.unroundedGoalsB - match.unroundedGoalsA) *\n              Math.abs(match.teamComparisonScore),\n          };\n          if (\n            predictionObject.rawOdds >= 1.25 &&\n            match.formAway.clinicalRating !== \"awful\"\n          ) {\n            allTips.push(predictionObject);\n            if (\n              match.unroundedGoalsB - match.unroundedGoalsA > 2 &&\n              match.formHome.improving === false &&\n              match.formAway.improving === true &&\n              predictionObject.rawComparisonScore < -11\n            ) {\n              bestBets.push(predictionObject);\n            }\n          }\n        }\n      }\n\n      allTips.sort(function (a, b) {\n        if (a.goalDifferential === b.goalDifferential) {\n          return b.comparisonScore - a.comparisonScore;\n        } else {\n          return b.goalDifferential > a.goalDifferential ? 1 : -1;\n        }\n      });\n\n      bestBets.sort(function (a, b) {\n        if (a.goalDifferential === b.goalDifferential) {\n          return b.comparisonScore - a.comparisonScore;\n        } else {\n          return b.goalDifferential > a.goalDifferential ? 1 : -1;\n        }\n      });\n\n      if (\n        match.btts === true &&\n        match.status !== \"suspended\" &&\n        match.status !== \"canceled\"\n      ) {\n        bttsArray.push(match);\n\n        bttsArray.sort(function (a, b) {\n          return b.combinedBTTS - a.combinedBTTS;\n        });\n      }\n\n      if (\n        match.unroundedGoalsA > match.unroundedGoalsB &&\n        match.homeDoubleChance >= 1.4 &&\n        match.goalsA > match.goalsB\n      ) {\n        longShotPredictionObject = {\n          team: match.homeTeam,\n          decimalOdds: match.homeDoubleChance,\n          rawOdds: match.homeOdds,\n          odds: match.fractionHome,\n          comparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          doubleChanceOutcome: match.doubleChancePredictionOutcome,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsA, match.unroundedGoalsB)\n          ),\n        };\n        if (\n          match.prediction !== \"draw\" &&\n          longShotPredictionObject.comparisonScore > 0.1\n        ) {\n          longShotTips.push(longShotPredictionObject);\n        }\n      } else if (\n        match.unroundedGoalsA < match.unroundedGoalsB &&\n        match.awayDoubleChance >= 1.4 &&\n        match.goalsB > match.goalsA\n      ) {\n        longShotPredictionObject = {\n          team: match.awayTeam,\n          decimalOdds: match.awayDoubleChance,\n          rawOdds: match.awayOdds,\n          odds: match.fractionAway,\n          comparisonScore: match.teamComparisonScore,\n          outcome: match.predictionOutcome,\n          doubleChanceOutcome: match.doubleChancePredictionOutcome,\n          goalDifferential: parseFloat(\n            await diff(match.unroundedGoalsB, match.unroundedGoalsA)\n          ),\n        };\n        if (\n          match.prediction !== \"draw\" &&\n          longShotPredictionObject.comparisonScore < -0.1\n        ) {\n          longShotTips.push(longShotPredictionObject);\n        }\n      }\n\n      longShotTips.sort(function (a, b) {\n        return b.goalDifferential - a.goalDifferential;\n      });\n\n      exoticArray = [];\n      gamesInExotic = 0;\n      exoticStake = 0;\n      exoticString = \"\";\n\n      switch (true) {\n        case allTips.length >= 10:\n          for (let i = 0; i < 10; i++) {\n            let game = allTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 10;\n          minimumExotic = 8;\n          exoticStake = 0.1;\n          exoticString = \"45 8-folds, 10 9-folds and 1 10-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case allTips.length >= 9:\n          for (let i = 0; i < 9; i++) {\n            let game = allTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 9;\n          minimumExotic = 7;\n          exoticStake = 0.1;\n          exoticString = \"36 7-folds, 9 8-folds and 1 9-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case allTips.length >= 8:\n          for (let i = 0; i < 8; i++) {\n            let game = allTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 8;\n          minimumExotic = 6;\n          exoticStake = 0.1;\n          exoticString = \"28 6-folds, 8 7-folds and 1 8-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case allTips.length >= 7:\n          for (let i = 0; i < 7; i++) {\n            let game = allTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 7;\n          minimumExotic = 6;\n          exoticStake = 1;\n          exoticString = \"7 6-folds and 1 7-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case allTips.length >= 5:\n          for (let i = 0; i < 5; i++) {\n            let game = allTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 6;\n          minimumExotic = 5;\n          exoticStake = 1;\n          exoticString = \"6 5-folds and 1 6-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case allTips.length >= 4:\n          for (let i = 0; i < 4; i++) {\n            let game = allTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 5;\n          minimumExotic = 4;\n          exoticStake = 1;\n          exoticString = \"5 4-folds and 1 5-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        case longShotTips.length >= 4:\n          for (let i = 0; i < 4; i++) {\n            let game = longShotTips[i];\n            exoticArray.push(game);\n          }\n          gamesInExotic = 4;\n          minimumExotic = 3;\n          exoticStake = 1;\n          exoticString = \"4 3-folds and 1 4-fold\";\n          price = getCoverBetMaxReturns(\n            exoticArray,\n            minimumExotic,\n            exoticStake\n          );\n          break;\n        default:\n          break;\n      }\n\n      let formTrendScoreComparison;\n      if (match.formAway) {\n        formTrendScoreComparison =\n          match.formAway.formTrendScore - match.formHome.formTrendScore;\n      } else {\n        formTrendScoreComparison = 0;\n      }\n\n      if (\n        match.prediction === \"draw\" &&\n        match.homeOdds > 1.8 &&\n        match.teamComparisonScore < 0.1 &&\n        match.teamComparisonScore > -0.1\n        // formTrendScoreComparison > 0 &&\n        // formTrendScoreComparison < 3\n      ) {\n        drawPredictionObject = {\n          team: match.game,\n          odds: match.drawOdds,\n          outcome: match.predictionOutcome,\n          goalDifferential: Math.abs(\n            parseFloat(await diff(match.unroundedGoalsA, match.unroundedGoalsB))\n          ),\n        };\n        if (\n          match.prediction === \"draw\" &&\n          drawPredictionObject.goalDifferential < 0.5\n        ) {\n          drawTips.push(drawPredictionObject);\n        }\n      }\n\n      drawTips.sort(function (a, b) {\n        return a.goalDifferential - b.goalDifferential;\n      });\n\n      if (mock !== true) {\n        ReactDOM.render(\n          <Fixture\n            fixtures={matches}\n            result={true}\n            mock={mock}\n            className={\"individualFixture\"}\n          />,\n          document.getElementById(\"FixtureContainer\")\n        );\n      } else if (mock === true) {\n        ReactDOM.render(\n          <Fixture\n            fixtures={matches}\n            result={true}\n            mock={mock}\n            className={\"individualFixture\"}\n          />,\n          document.getElementById(\"FixtureContainer\")\n        );\n      }\n\n      predictions.push(match);\n    })\n  );\n  await getSuccessMeasure(matches);\n\n  await getNewTips(allTips);\n\n  // await renderTips();\n}\n\nfunction getAccumulatorPrice(priceArray) {\n  var result = 1;\n\n  for (var i = 0; i < priceArray.length; i++)\n    result = result * priceArray[i].rawOdds;\n\n  return result;\n}\n\nfunction getCoverBetMaxReturns(priceArray, minAccSize, stake) {\n  var total = 0;\n  combinations = 0;\n\n  for (var i = minAccSize; i <= priceArray.length; i++) {\n    var perms = getUniquePermutations(priceArray, i);\n    combinations = combinations + perms.length;\n\n    for (var j = 0; j < perms.length; j++)\n      total += getAccumulatorPrice(perms[j]) * stake;\n  }\n  return total;\n}\n\nfunction getUniquePermutations(arr, permLength) {\n  if (arr.length <= permLength) return [arr];\n\n  var permutations = [];\n  var newArr = [];\n\n  newArr = arr.slice(0);\n\n  for (var i = 0; i < arr.length; i++) {\n    newArr = arr.slice(0);\n    newArr.splice(i, 1);\n    permutations = twoDimArrayUnion(\n      permutations,\n      getUniquePermutations(newArr, permLength)\n    );\n  }\n  return permutations;\n}\n\nfunction twoDimArrayUnion(arr1, arr2) {\n  for (var i = 0; i < arr2.length; i++) {\n    var duplicate = false;\n\n    for (var j = 0; j < arr1.length; j++)\n      if (arr1[j].length === arr2[i].length)\n        for (var k = 0; k < arr1[j].length; k++)\n          if (arr1[j][k] !== arr2[i][k]) break;\n          else if (k === arr1[j].length - 1) duplicate = true;\n\n    if (!duplicate) arr1.push(arr2[i]);\n  }\n\n  return arr1;\n}\n\nfunction NewlineText(props) {\n  const text = props.text;\n  const newText = text.split(\"\\n\").map((str) => <p>{str}</p>);\n\n  return newText;\n}\n\nasync function renderTips() {\n  if (newArray.length > 0) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            className={\"PredictionsOfTheDay\"}\n            text={\n              <ul className=\"BestPredictions\">\n                <div className=\"BestPredictionsExplainer\">\n                  Add or remove a selection using the buttons below. Predictions\n                  are ordered by confidence in the outcome.\n                </div>\n                {newArray.map((tip) => (\n                  <li className={tip.outcome} key={tip.team}>\n                    {tip.team}: {tip.odds}\n                  </li>\n                ))}\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Increment />\n          <Collapsable\n            buttonText={\"Build a multi\"}\n            className={\"PredictionsOfTheDay\"}\n            text={\n              <ul className=\"BestPredictions\">\n                <div className=\"BestPredictionsExplainer\">\n                  No games fit the criteria (try tapping the + button)\n                </div>\n                <div className=\"AccumulatedOdds\">{`Accumulator odds ~ : ${\n                  Math.round(accumulatedOdds) - 1\n                }/1`}</div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"bestPredictions\")\n    );\n  }\n\n  if (exoticArray.length > 4) {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Build me an exotic bet\"}\n            className={\"PredictionsOfTheDay\"}\n            text={\n              <ul className=\"BestPredictions\">\n                <div className=\"BestPredictionsExplainer\">\n                  <NewlineText\n                    text={`${gamesInExotic} games: ${exoticString}\\nStake per multi: ${exoticStake} units - ${combinations} combinations\\nTotal stake: ${(\n                      exoticStake * combinations\n                    ).toFixed(2)} unit(s)`}\n                  />\n                  {`Potential winnings: ${price.toFixed(2)} units`}\n                </div>\n                {exoticArray.map((tip) => (\n                  <li className={tip.outcome} key={tip.team}>\n                    {tip.team}: {tip.odds}\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  } else {\n    ReactDOM.render(\n      <div className=\"PredictionContainer\">\n        <Fragment>\n          <Collapsable\n            buttonText={\"Build me an exotic bet\"}\n            className={\"PredictionsOfTheDay\"}\n            text={\n              <ul className=\"BestPredictions\">\n                <div className=\"BestPredictionsExplainer\">\n                  Not enough games for this feature\n                </div>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"exoticOfTheDay\")\n    );\n  }\n\n  if (longShotTips.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Double chance tips\"}\n            text={\n              <ul className=\"LongshotPredictions\">\n                <lh>Double chance (Win or Draw - decimal odds only)</lh>\n                {longShotTips.map((tip) => (\n                  <li className={`${tip.doubleChanceOutcome}1`} key={tip.team}>\n                    {tip.team} to win or draw: {tip.decimalOdds}\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Double chance tips\"}\n            text={\n              <ul className=\"LongshotPredictions\">\n                <lh>No games fit the criteria</lh>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"longShots\")\n    );\n  }\n\n  if (drawTips.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Draw tips\"}\n            text={\n              <ul className=\"DrawTips\">\n                <lh>Best draw predictions</lh>\n                {drawTips.map((tip) => (\n                  <li className={`${tip.outcome}1`} key={tip.team}>\n                    {tip.team}\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"draws\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Draw tips\"}\n            text={\n              <ul className=\"DrawTips\">\n                <lh>No games fit the criteria</lh>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"draws\")\n    );\n  }\n\n  if (bttsArray.length > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            className={\"BTTSGames\"}\n            buttonText={\"BTTS games\"}\n            text={\n              <ul className=\"BTTSGames\">\n                <lh>Games with highest chance of BTTS</lh>\n                {bttsArray.map((game) => (\n                  <li className={game.bttsOutcome} key={game.game}>\n                    {`${game.game} odds: ${game.bttsFraction}`}\n                  </li>\n                ))}\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  } else {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            className={\"BTTSGames\"}\n            buttonText={\"BTTS games\"}\n            text={\n              <ul className=\"BTTSGames\">\n                <lh>No games fit the criteria</lh>\n              </ul>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"BTTS\")\n    );\n  }\n\n  if (allWinOutcomes > 0) {\n    ReactDOM.render(\n      <div>\n        <Fragment>\n          <Collapsable\n            buttonText={\"Insights\"}\n            text={\n              <div>\n                <lh className=\"InsightsExplainer\">\n                  Average stats for winning/losing teams prior to this gameweek\n                </lh>\n                <div className=\"InsightsContainer\">\n                  <ul className=\"InsightsHome\">\n                    <lh className=\"WinningTeams\">Winning teams</lh>\n                    <li>{winOddsAverage} odds</li>\n                    <li>{winXGForAverage} XG For</li>\n                    <li>{winXGAgainstAverage} XG Against</li>\n                    <li>{winLast10PPGAverage} ppg (last 10)</li>\n                    <li>{winPossessionAverage}% possession</li>\n                    <li>{winSOTAverage} shots on target</li>\n                    <li>{winDAAverage} dangerous attacks</li>\n                  </ul>\n                  <ul className=\"InsightsAway\">\n                    <lh className=\"LosingTeams\">Losing teams</lh>\n                    <li>{lossOddsAverage} odds</li>\n                    <li>{lossXGForAverage} XG For</li>\n                    <li>{lossXGAgainstAverage} XG Against</li>\n                    <li>{lossLast10PPGAverage} ppg (last 10)</li>\n                    <li>{lossPossessionAverage}% possession</li>\n                    <li>{lossSOTAverage} shots on target</li>\n                    <li>{lossDAAverage} dangerous attacks</li>\n                  </ul>\n                </div>\n              </div>\n            }\n          />\n        </Fragment>\n      </div>,\n      document.getElementById(\"insights\")\n    );\n  }\n}\n\n// module.exports = { compareStat, getPointsFromLastX, getOverOrUnderAchievingResult, getClinicalRating, getPointsDifferential };\n","export async function getBTTSPotential(allForm, match, index, homeGoals, awayGoals) {\n\n  let homeTeam = match.homeTeam;\n  let awayTeam = match.awayTeam;\n\n\n  let home = allForm.findIndex(function (item, i) {\n    return item.home.teamName === homeTeam;\n  });\n\n  let away = allForm.findIndex(function (item, i) {\n    return item.away.teamName === awayTeam;\n  });\n  if(home !== -1 && away !== -1){\n\n\n  let homeBTTS = allForm[home].home[index].BTTSPercentage;\n  let awayBTTS = allForm[away].away[index].BTTSPercentage;\n  let homeG = homeGoals;\n  let awayG = awayGoals;\n  let totalGoals = homeG + awayG\n\n  let homeGoalsScoredAverage = allForm[home].home[index].ScoredAverage\n  let awayGoalsScoredAverage = allForm[away].away[index].ScoredAverage\n\n  let homeGoalsConceededAverage = allForm[home].home[index].ConcededAverage\n  let awayGoalsConceededAverage = allForm[away].away[index].ConcededAverage\n\n  let homeXG = allForm[home].home[index].XG;\n  let awayXG = allForm[away].away[index].XG;\n\n  let homeXGAgainst = allForm[home].home[index].XGAgainstAverage;\n  let awayXGAgainst = allForm[away].away[index].XGAgainstAverage;\n\n  let homeGoalsAveragedOut = (homeGoalsScoredAverage + homeXG) / 2\n  let awayGoalsAveragedOut = (awayGoalsScoredAverage + awayXG) / 2 \n\n  let homeGoalsConceededAveragedOut = (homeGoalsConceededAverage + homeXGAgainst) / 2\n  let awayGoalsConceededAveragedOut = (awayGoalsConceededAverage + awayXGAgainst) / 2\n\n\n  let homeCleansheets = allForm[home].home[index].CleanSheetPercentage\n  let awayCleansheets = allForm[away].away[index].CleanSheetPercentage\n\n  let homePPG = allForm[home].home[index].PPG\n  let awayPPG = allForm[away].away[index].PPG\n\n  let dangerousAttacksHome = allForm[away].home[index].AverageDangerousAttacks;\n  let dangerousAttacksAway = allForm[away].away[index].AverageDangerousAttacks;\n\n  match.combinedBTTS = (homeBTTS + awayBTTS) / 2;\n\nif(match.bttsFraction !== \"N/A\" && match.status !== \"suspended\" && match.status !== \"canceled\"){\n  if (\n    match.combinedBTTS >= 60 &&\n    // match.btts_potential >= 60 &&\n    match.awayOdds < 3 &&\n    // homePPG > 1 &&\n    // homeXG >= 1.1 && \n    // awayXG >= 1.1 &&\n    // homeXGAgainst > 1.1 &&\n    // awayXGAgainst > 1.1 &&\n    homeGoalsAveragedOut > 1 &&\n    awayGoalsAveragedOut > 1 &&\n    homeGoalsConceededAveragedOut > 1 &&\n    awayGoalsConceededAveragedOut > 1 &&\n    homeG >= 1 &&\n    awayG >= 1\n  ) {\n    match.btts = true;\n    match.bttsChosen = true;\n  } else {\n    match.btts = false;\n    match.bttsChosen = false;\n  }\n}\n  \n  }\n  return match;\n}\n\n","import ReactDOM from \"react-dom\";\nimport { Button } from \"../components/Button\";\nimport Stats from \"../components/createStatsDiv\";\nimport Div from \"../components/Div\";\nimport { selectedOption } from \"../components/radio\";\nimport { allForm, leagueArray } from \"../logic/getFixtures\";\nimport { getTeamStats } from \"../logic/getTeamStats\";\nimport { getPointsFromLastX } from \"../logic/getScorePredictions\";\n\nlet testBool;\n\nexport async function createStatsDiv(game, mock) {\n  if (game.status !== \"void\") {\n    let bool = mock;\n\n    if (bool !== true) {\n      let radioSelected = 10;\n\n      function toggle() {\n        testBool = testBool ? false : true;\n        if (testBool === true) {\n          // set stats element to display flex\n          return { display: \"block\" };\n        } else {\n          // set stats element to display none\n          return { display: \"none\" };\n        }\n      }\n\n      let style = toggle();\n\n      let index;\n      let divider;\n      if (radioSelected === 5) {\n        index = 0;\n        divider = 5;\n      } else if (radioSelected === 6) {\n        index = 1;\n        divider = 6;\n      } else if (radioSelected === 10) {\n        index = 2;\n        divider = 10;\n      }\n\n      let gameStats = allForm.find((match) => match.id === game.id);\n\n      let homeTeam = gameStats.home.teamName;\n      let awayTeam = gameStats.away.teamName;\n\n      let time = game.time;\n\n      gameStats.home[index].last5Points = getPointsFromLastX(\n        gameStats.home[index].LastFiveForm\n      );\n\n      gameStats.home[index].last6Points = getPointsFromLastX(\n        gameStats.home[index].LastSixForm\n      );\n\n      gameStats.home[index].last10Points = getPointsFromLastX(\n        gameStats.home[index].LastTenForm\n      );\n\n      gameStats.away[index].last5Points = getPointsFromLastX(\n        gameStats.away[index].LastFiveForm\n      );\n\n      gameStats.away[index].last6Points = getPointsFromLastX(\n        gameStats.away[index].LastSixForm\n      );\n\n      gameStats.away[index].last10Points = getPointsFromLastX(\n        gameStats.away[index].LastTenForm\n      );\n\n      async function getPointAverage(pointTotal, games) {\n        return pointTotal / games;\n      }\n\n      let homeFiveGameAverage = await getPointAverage(\n        gameStats.home[index].last5Points,\n        5\n      );\n      let homeSixGameAverage = await getPointAverage(\n        gameStats.home[index].last6Points,\n        6\n      );\n      let homeTenGameAverage = await getPointAverage(\n        gameStats.home[index].last10Points,\n        10\n      );\n\n      let awayFiveGameAverage = await getPointAverage(\n        gameStats.away[index].last5Points,\n        5\n      );\n      let awaySixGameAverage = await getPointAverage(\n        gameStats.away[index].last6Points,\n        6\n      );\n      let awayTenGameAverage = await getPointAverage(\n        gameStats.away[index].last10Points,\n        10\n      );\n\n      async function getLastGameResult(lastGame) {\n        let text;\n        switch (true) {\n          case lastGame === \"L\":\n            text = \"Lost\";\n            break;\n          case lastGame === \"D\":\n            text = \"Drew\";\n            break;\n          case lastGame === \"W\":\n            text = \"Won\";\n            break;\n          default:\n            break;\n        }\n        return text;\n      }\n\n      async function compareFormTrend(five, six, ten) {\n        let text;\n        if (five >= 2.5) {\n          switch (true) {\n            case five > six && six > ten:\n              text =\n                \"Outstanding recent form with solid improvement over last 10 games\";\n              break;\n            case five > six && six < ten:\n              text =\n                \"Outstanding recent form which has improved with some inconsistency over last 10 games\";\n              break;\n            case five === six && six > ten:\n              text =\n                \"Outstanding recent form with most improvement in the last 6\";\n              break;\n            case five === six && six < ten:\n              text = \"Outstanding recent form with a slight dip in the last 6\";\n              break;\n            case five === six && six === ten:\n              text = \"Consistently outstanding form over the last 10\";\n              break;\n            case five < six && six === ten:\n              text =\n                \"Outstanding recent form but slightly worsening in the last 5\";\n              break;\n            case five < six && six > ten:\n              text =\n                \"Outstanding recent form but slightly fluctuating over the last 10\";\n              break;\n            case five < six && six < ten:\n              text = \"Outstanding recent form but beginning to worsen recently\";\n              break;\n            default:\n              break;\n          }\n        } else if (five < 2.5 && five >= 2) {\n          switch (true) {\n            case five > six && six > ten:\n              text =\n                \"Very good recent form with solid improvement over last 10 games\";\n              break;\n            case five > six && six < ten:\n              text =\n                \"Very good recent form which has improved with some inconsistency over last 10 games\";\n              break;\n            case five === six && six > ten:\n              text =\n                \"Very good recent form with most improvement in the last 6\";\n              break;\n            case five === six && six < ten:\n              text = \"Very good recent form with a slight dip in the last 6\";\n              break;\n            case five === six && six === ten:\n              text = \"Very good outstanding form over the last 10\";\n              break;\n            case five < six && six === ten:\n              text =\n                \"Very good recent form but slightly worsening in the last 5\";\n              break;\n            case five < six && six > ten:\n              text =\n                \"Very good recent form but slightly fluctuating over the last 10\";\n              break;\n            case five < six && six < ten:\n              text = \"Very good recent form but beginning to worsen recently\";\n              break;\n            default:\n              break;\n          }\n        } else if (five < 2 && five >= 1.5) {\n          switch (true) {\n            case five > six && six > ten:\n              text =\n                \"Good recent form with solid improvement over last 10 games\";\n              break;\n            case five > six && six < ten:\n              text =\n                \"Good recent form which has improved with some inconsistency over last 10 games\";\n              break;\n            case five === six && six > ten:\n              text = \"Good recent form with most improvement in the last 6\";\n              break;\n            case five === six && six < ten:\n              text = \"Good recent form with a slight dip in the last 6\";\n              break;\n            case five === six && six === ten:\n              text = \"Good outstanding form over the last 10\";\n              break;\n            case five < six && six === ten:\n              text = \"Good recent form but slightly worsening in the last 5\";\n              break;\n            case five < six && six > ten:\n              text =\n                \"Good recent form but slightly fluctuating over the last 10\";\n              break;\n            case five < six && six < ten:\n              text = \"Good recent form but worsening consistently\";\n              break;\n            default:\n              break;\n          }\n        } else if (five < 1.5 && five >= 1) {\n          switch (true) {\n            case five > six && six > ten:\n              text =\n                \"Average recent form with solid improvement over last 10 games\";\n              break;\n            case five > six && six < ten:\n              text =\n                \"Average recent form which has improved with some inconsistency over last 10 games\";\n              break;\n            case five === six && six > ten:\n              text = \"Average recent form with most improvement in the last 6\";\n              break;\n            case five === six && six < ten:\n              text = \"Average recent form with a slight dip in the last 6\";\n              break;\n            case five === six && six === ten:\n              text = \"Consistently average form over the last 10\";\n              break;\n            case five < six && six === ten:\n              text = \"Average recent form but slightly worsening in the last 5\";\n              break;\n            case five < six && six > ten:\n              text =\n                \"Average recent form, slightly fluctuating over the last 10\";\n              break;\n            case five < six && six < ten:\n              text = \"Average recent form, declining consistently\";\n              break;\n            default:\n              break;\n          }\n        } else if (five < 1 && five >= 0.5) {\n          switch (true) {\n            case five > six && six > ten:\n              text =\n                \"Poor recent form with gradual improvement over last 10 games\";\n              break;\n            case five > six && six < ten:\n              text =\n                \"Poor recent form but improving with some inconsistency over last 10 games\";\n              break;\n            case five === six && six > ten:\n              text =\n                \"Poor recent form with some improvement shown in the last 6\";\n              break;\n            case five === six && six < ten:\n              text = \"Poor recent form with a dip in the last 6\";\n              break;\n            case five === six && six === ten:\n              text = \"Consistently poor form over the last 10\";\n              break;\n            case five < six && six === ten:\n              text = \"Poor recent form, slightly worsening in the last 5\";\n              break;\n            case five < six && six > ten:\n              text = \"Poor recent form, slightly fluctuating over the last 10\";\n              break;\n            case five < six && six < ten:\n              text = \"Poor recent form, declining consistently\";\n              break;\n            default:\n              text = \"Poor recent form\";\n              break;\n          }\n        } else if (five < 0.5) {\n          switch (true) {\n            case five > six && six > ten:\n              text =\n                \"Terrible recent form with gradual improvement over last 10 games\";\n              break;\n            case five > six && six < ten:\n              text =\n                \"Terrible recent form with a slight improvement in the last 5\";\n              break;\n            case five === six && six > ten:\n              text =\n                \"Terrible recent form but improving slightly in the last 6\";\n              break;\n            case five === six && six < ten:\n              text = \"Terrible recent form with a dip in the last 6\";\n              break;\n            case five === six && six === ten:\n              text = \"Consistently terrible form over the last 10\";\n              break;\n            case five < six && six === ten:\n              text = \"Terrible recent form, worsening further in the last 5\";\n              break;\n            case five < six && six > ten:\n              text =\n                \"Terrible recent form, slightly fluctuating over the last 10\";\n              break;\n            case five < six && six < ten:\n              text = \"Terrible recent form, declining consistently\";\n              break;\n            default:\n              break;\n          }\n        }\n        return text;\n      }\n\n      let homeFormTrend = await compareFormTrend(\n        homeFiveGameAverage,\n        homeSixGameAverage,\n        homeTenGameAverage\n      );\n      let awayFormTrend = await compareFormTrend(\n        awayFiveGameAverage,\n        awaySixGameAverage,\n        awayTenGameAverage\n      );\n      let homeLastGame = await getLastGameResult(\n        gameStats.home[index].LastFiveForm[4]\n      );\n      let awayLastGame = await getLastGameResult(\n        gameStats.away[index].LastFiveForm[4]\n      );\n\n      const formDataMatch = [];\n\n      formDataMatch.push({\n        btts: game.btts_potential,\n      });\n\n      const formDataHome = [];\n\n      formDataHome.push({\n        name: game.homeTeam,\n        Last5: gameStats.home[index].LastFiveForm,\n        AverageGoals: (gameStats.home[index].ScoredOverall / 10),\n        AverageConceeded: (gameStats.home[index].ConcededOverall / 10),\n        AverageXG: gameStats.home[index].XGOverall,\n        AverageXGConceded: gameStats.home[index].XGAgainstAvgOverall,\n        AveragePossession: gameStats.home[index].AveragePossessionOverall,\n        AverageShotsOnTarget: gameStats.home[index].AverageShotsOnTargetOverall,\n        AverageDangerousAttacks: gameStats.home[index].AverageDangerousAttacksOverall,\n        homeOrAway: \"Home\",\n        leaguePosition: gameStats.home[index].LeaguePosition,\n        Last5PPG: gameStats.home[index].PPG,\n        SeasonPPG: gameStats.home[index].SeasonPPG,\n        formTrend: homeFormTrend,\n        lastGame: homeLastGame,\n      });\n\n      const formDataAway = [];\n\n      formDataAway.push({\n        name: game.awayTeam,\n        Last5: gameStats.away[index].LastFiveForm,\n        AverageGoals: (gameStats.away[index].ScoredOverall / 10),\n        AverageConceeded: (gameStats.away[index].ConcededOverall / 10),\n        AverageXG: gameStats.away[index].XGOverall,\n        AverageXGConceded: gameStats.away[index].XGAgainstAvgOverall,\n        AveragePossession: gameStats.away[index].AveragePossessionOverall,\n        AverageShotsOnTarget: gameStats.away[index].AverageShotsOnTargetOverall,\n        AverageDangerousAttacks: gameStats.away[index].AverageDangerousAttacksOverall,\n        homeOrAway: \"Away\",\n        leaguePosition: gameStats.away[index].LeaguePosition,\n        Last5PPG: gameStats.away[index].PPG,\n        SeasonPPG: gameStats.away[index].SeasonPPG,\n        formTrend: awayFormTrend,\n        lastGame: awayLastGame,\n      });\n      ReactDOM.render(\n        <div style={style}>\n          <Div className=\"MatchTime\" text={`Kick off: ${time} GMT`}></Div>\n        </div>,\n        document.getElementById(\"stats\" + homeTeam)\n      );\n\n      ReactDOM.render(\n        <div style={style}>\n          <div className=\"H2HStats\" id={`H2HStats${game.id}`}></div>\n          <div className=\"TrendsHome\" id={`TrendsHome${game.id}`}></div>\n          <div className=\"TrendsAway\" id={`TrendsAway${game.id}`}></div>\n        </div>,\n        document.getElementById(\"history\" + homeTeam)\n      );\n\n      ReactDOM.render(\n        <Stats\n          style={style}\n          homeOrAway=\"Home\"\n          gameCount={divider}\n          key={formDataHome[0].name}\n          last5={formDataHome[0].Last5}\n          className={formDataHome[0].homeOrAway}\n          name={formDataHome[0].name}\n          goals={formDataHome[0].AverageGoals}\n          conceeded={formDataHome[0].AverageConceeded}\n          XG={formDataHome[0].AverageXG}\n          XGConceded={formDataHome[0].AverageXGConceded}\n          possession={formDataHome[0].AveragePossession}\n          sot={formDataHome[0].AverageShotsOnTarget}\n          dangerousAttacks={formDataHome[0].AverageDangerousAttacks}\n          leaguePosition={formDataHome[0].leaguePosition}\n          rawPosition = {game.homeRawPosition}\n          homeOrAwayLeaguePosition={game.homeTeamHomePosition}\n          winPercentage={game.homeTeamWinPercentage}\n          lossPercentage={game.homeTeamLossPercentage}\n          drawPercentage={game.homeTeamDrawPercentage}\n          ppg={formDataHome[0].SeasonPPG}\n          formTrend={[\n            homeTenGameAverage.toFixed(2),\n            homeSixGameAverage.toFixed(2),\n            homeFiveGameAverage.toFixed(2),\n          ]}\n          lastGame={homeLastGame}\n        />,\n        document.getElementById(\"home\" + homeTeam)\n      );\n\n      ReactDOM.render(\n        <Stats\n          style={style}\n          homeOrAway=\"Away\"\n          gameCount={divider}\n          key={formDataAway[0].name}\n          last5={formDataAway[0].Last5}\n          className={formDataAway[0].homeOrAway}\n          name={formDataAway[0].name}\n          goals={formDataAway[0].AverageGoals}\n          conceeded={formDataAway[0].AverageConceeded}\n          XG={formDataAway[0].AverageXG}\n          XGConceded={formDataAway[0].AverageXGConceded}\n          possession={formDataAway[0].AveragePossession}\n          rawPosition = {game.awayRawPosition}\n          sot={formDataAway[0].AverageShotsOnTarget}\n          dangerousAttacks={formDataAway[0].AverageDangerousAttacks}\n          leaguePosition={formDataAway[0].leaguePosition}\n          homeOrAwayLeaguePosition={game.awayTeamAwayPosition}\n          winPercentage={game.awayTeamWinPercentage}\n          lossPercentage={game.awayTeamLossPercentage}\n          drawPercentage={game.awayTeamDrawPercentage}\n          ppg={formDataAway[0].SeasonPPG}\n          formTrend={[\n            awayTenGameAverage.toFixed(2),\n            awaySixGameAverage.toFixed(2),\n            awayFiveGameAverage.toFixed(2),\n          ]}\n          lastGame={awayLastGame}\n        />,\n        document.getElementById(\"away\" + awayTeam)\n      );\n\n      ReactDOM.render(\n        <Button\n          className=\"MoreStats\"\n          style={style}\n          onClickEvent={() =>\n            getTeamStats(game.id, game.homeTeam, game.awayTeam)\n          }\n          text={\"More detail\"}\n        ></Button>,\n        document.getElementById(`H2HStats${game.id}`)\n      );\n    }\n  }\n}\n","import React, { Fragment } from \"react\";\nimport { CreateBadge } from \"./createBadge\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { createStatsDiv } from \"../logic/getStats\";\nimport { Button } from \"../components/Button\";\nimport { renderTable, tableArray } from \"../logic/getFixtures\";\n\nlet resultValue;\nlet leagueName;\nconst text =\n  \"XG Tipping formulates predictions based on recent form data ranging from points per game to each teams attacking potency\\n Expected Goals in previous matches are used to determine whether teams might be over or underperforming and predictions are weighted as such\\n Once all fixtures have loaded, click on “Get Predictions”\\n Predictions are displayed on the right and the results on the left\\n Click on an individual fixture for detailed stats for both teams.\";\n\nfunction GetDivider(fixture) {\n  const matchStatus = fixture.status;\n  const isPrediction = resultValue;\n\n  if (isPrediction === false && matchStatus !== \"complete\") {\n    return (\n      <div className=\"divider\" data-cy={\"divider-\" + fixture.fixture.id}>\n        {\"V\"}\n      </div>\n    );\n  } else if (isPrediction === false && matchStatus === \"complete\") {\n    return (\n      <div\n        className=\"Result\"\n        data-cy={\"result-\" + fixture.fixture.id}\n      >{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n    );\n  } else if (isPrediction === true && matchStatus === \"complete\") {\n    let outcome;\n    let prediction;\n\n    switch (true) {\n      case fixture.fixture.homeGoals > fixture.fixture.awayGoals:\n        outcome = 0;\n        fixture.fixture.winner = fixture.fixture.homeTeam;\n        fixture.fixture.outcome = \"homeWin\";\n        break;\n      case fixture.fixture.homeGoals === fixture.fixture.awayGoals:\n        outcome = 1;\n        fixture.fixture.winner = \"draw\";\n        fixture.fixture.outcome = \"draw\";\n\n        break;\n      case fixture.fixture.homeGoals < fixture.fixture.awayGoals:\n        outcome = 2;\n        fixture.fixture.winner = fixture.fixture.awayTeam;\n        fixture.fixture.outcome = \"awayWin\";\n\n        break;\n      default:\n        break;\n    }\n\n    switch (true) {\n      case fixture.fixture.goalsA > fixture.fixture.goalsB:\n        prediction = 0;\n        break;\n      case fixture.fixture.goalsA === fixture.fixture.goalsB:\n        prediction = 1;\n        break;\n      case fixture.fixture.goalsA < fixture.fixture.goalsB:\n        prediction = 2;\n        break;\n      default:\n        break;\n    }\n\n    if (fixture.fixture.homeGoals > 0 && fixture.fixture.awayGoals > 0) {\n      fixture.fixture.bttsOutcome = \"bttsWon\";\n    } else {\n      fixture.fixture.bttsOutcome = \"bttsLost\";\n    }\n\n    if (outcome === prediction) {\n      // console.log(fixture.fixture.game);\n      if (fixture.fixture.homeOdds !== 0) {\n        switch (true) {\n          case outcome === 0:\n            fixture.fixture.profit = fixture.fixture.homeOdds;\n            break;\n          case outcome === 1:\n            fixture.fixture.profit = fixture.fixture.drawOdds;\n            break;\n          case outcome === 2:\n            fixture.fixture.profit = fixture.fixture.awayOdds;\n            break;\n          default:\n            break;\n        }\n      } else fixture.fixture.profit = 1;\n\n      let name = \"CorrectScore\";\n\n      if (\n        fixture.fixture.goalsA === fixture.fixture.homeGoals &&\n        fixture.fixture.goalsB === fixture.fixture.awayGoals\n      ) {\n        fixture.fixture.exactScore = true;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"ExactScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      } else {\n        fixture.fixture.exactScore = false;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"CorrectScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      }\n      // console.log(`profit ${fixture.fixture.profit}`);\n    } else if (outcome !== prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        fixture.fixture.profit = 0;\n      } else {\n        fixture.fixture.profit = 1;\n      }\n      // console.log(fixture.fixture.game);\n      // console.log(`profit ${fixture.fixture.profit}`);\n      fixture.fixture.exactScore = false;\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"IncorrectScore\"\n            key={fixture.fixture.awayTeam}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    }\n  } else {\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  }\n}\n\nfunction getStyle(bool) {\n  return \"individualFixture\";\n}\n\nfunction renderLeagueName(fixture) {\n  let name = fixture.leagueName;\n  if (name === null) {\n    return <div></div>;\n  } else {\n    return (\n      <div>\n        <div\n          className=\"leagueName\"\n          key={`leagueName${fixture.leagueIndex}div`}\n          onClick={() => renderTable(fixture.leagueIndex)}\n        >\n          {fixture.leagueName} &#9776;\n        </div>\n        <div\n          className=\"LeagueTable\"\n          key={`leagueName${fixture.leagueIndex}`}\n          id={`leagueName${fixture.leagueIndex}`}\n        ></div>\n      </div>\n    );\n  }\n}\n\nconst SingleFixture = ({ fixture }) => (\n  <div key={fixture.game}>\n    {renderLeagueName(fixture)}\n    <li\n      className={getStyle(fixture.btts)}\n      key={fixture.id}\n      onClick={() => createStatsDiv(fixture)}\n      data-cy={fixture.id}\n    >\n      <div className=\"HomeOdds\">{fixture.fractionHome}</div>\n      <div className=\"homeTeam\">{fixture.homeTeam}</div>\n      <GetDivider\n        result={resultValue}\n        status={fixture.status}\n        fixture={fixture}\n      />\n      {/* <div className=\"divider\">{\"V\"}</div> */}\n      <div className=\"awayTeam\">{fixture.awayTeam}</div>\n      <CreateBadge\n        image={fixture.homeBadge}\n        ClassName=\"HomeBadge\"\n        alt=\"Home team badge\"\n        flexShrink={5}\n      />\n      <CreateBadge\n        image={fixture.awayBadge}\n        ClassName=\"AwayBadge\"\n        alt=\"Away team badge\"\n      />\n      <div className=\"AwayOdds\">{fixture.fractionAway}</div>\n    </li>\n    <div className=\"StatsDiv\">\n      <div id={\"stats\" + fixture.homeTeam}></div>\n      <Fragment>\n        <div\n          className=\"StatsContainer\"\n          data-cy={\"StatsContainer-\" + fixture.id}\n        >\n          <div className=\"HomeStats\" id={\"home\" + fixture.homeTeam}></div>\n          <div className=\"AwayStats\" id={\"away\" + fixture.awayTeam}></div>\n        </div>\n      </Fragment>\n      <div className=\"MatchHistory\" id={\"history\" + fixture.homeTeam}></div>\n    </div>\n  </div>\n);\n\nlet newText = text.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nconst List = ({ fixtures }) => (\n  <div>\n    <Fragment>\n      <Collapsable\n        className={\"HowToUse\"}\n        buttonText={\"Show / Hide help\"}\n        text={newText}\n      />\n    </Fragment>\n    <div id=\"Headers\"></div>\n    <p>\n      <a\n        className=\"DonationLink\"\n        href=\"#bitcoin\"\n        style={{\n          fontSize: \"1.2em\",\n          textDecoration: \"none\",\n          color: \"white\",\n          padding: \"0.4em\",\n        }}\n      >\n        Donate &#8595;\n      </a>\n    </p>\n    <ul className=\"FixtureList\" id=\"FixtureList\">\n      {fixtures.map((fixture, i) => (\n        <SingleFixture fixture={fixture} key={fixture.game}/>\n      ))}\n    </ul>\n    <div className=\"bitcoin\" id=\"bitcoin\">\n      Donations towards running costs welcome\n      <span className=\"bitcoinSymbol\">&#x20bf;itcoin address</span>\n      <span className=\"bitcoinAddress\">\n        bc1q7j62txkvhfu0dt3l0s07saze6pjnyzs26wfgp0\n      </span>\n    </div>\n  </div>\n);\n\nexport function Fixture(props) {\n  resultValue = props.result;\n\n  return <List fixtures={props.fixtures} result={resultValue} />;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { orderedLeagues, proxyurl } from \"../App\";\nimport { getForm, applyColour } from \"./getForm\";\nimport { Fixture } from \"../components/Fixture\";\nimport { Button } from \"../components/Button\";\nimport { getScorePrediction } from \"../logic/getScorePredictions\";\nimport { ThreeDots } from \"react-loading-icons\";\nimport { selectedOdds } from \"../components/OddsRadio\";\nimport LeagueTable from \"../components/LeagueTable\";\n\nvar oddslib = require(\"oddslib\");\n\nrequire(\"dotenv\").config();\n\nvar fixtureResponse;\nvar fixtureArray;\nexport const matches = [];\nexport const resultedMatches = [];\nvar league;\nvar leagueGames = [];\nexport var leagueArray = [];\nexport let leagueInstance;\nvar lastFiveFormHome;\nvar lastFiveFormAway;\nvar lastSixFormHome;\nvar lastSixFormAway;\nvar lastTenFormHome;\nvar lastTenFormAway;\n\nexport const [currentDay, month, year] = new Date()\n  .toLocaleDateString(\"en-US\")\n  .split(\"/\");\nlet tomorrowsDate = new Date();\ntomorrowsDate.setDate(new Date().getDate() + 1);\nlet [tomorrowDay, tomorrowMonth, tomorrowYear] = tomorrowsDate\n  .toLocaleDateString(\"en-US\")\n  .split(\"/\");\n\nlet yesterdaysDate = new Date();\nyesterdaysDate.setDate(new Date().getDate() - 1);\nlet [yesterdayDay, yesterdayMonth, yesterdayYear] = yesterdaysDate\n  .toLocaleDateString(\"en-US\")\n  .split(\"/\");\n\n// var prevSat = new Date();\n\n// prevSat.setDate(prevSat.getDate() - (6-prevSat.getDay()))\n\n// console.log(prevSat)\n\nvar d = new Date();\n\n// set to Monday of this week\nd.setDate(d.getDate() - ((d.getDay() + 6) % 7));\n\n// set to Saturday just gone\nd.setDate(d.getDate() - 2);\n\nlet [saturdayDay, saturdayMonth, saturdayYear] = d\n  .toLocaleDateString(\"en-US\")\n  .split(\"/\");\n\nvar historicDate = new Date();\n\n// set to Monday of this week\nhistoricDate.setDate(\n  historicDate.getDate() - ((historicDate.getDay() + 6) % 7)\n);\n\n// set to Saturday prior to last\nhistoricDate.setDate(historicDate.getDate() - 9);\n\nlet [historicDay, historicMonth, historicYear] = historicDate\n  .toLocaleDateString(\"en-US\")\n  .split(\"/\");\nlet rawPosition;\n\nexport const saturday = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${saturdayYear}-${saturdayDay}-${saturdayMonth}`;\nexport const historic = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${historicYear}-${historicDay}-${historicMonth}`;\nexport const yesterday = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${yesterdayYear}-${yesterdayDay}-${yesterdayMonth}`;\nexport const today = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${year}-${currentDay}-${month}`;\nexport const tomorrow = `${process.env.REACT_APP_EXPRESS_SERVER}matches/${tomorrowYear}-${tomorrowDay}-${tomorrowMonth}`;\n\nexport function getRadioState(state) {\n  let radioState = state;\n  return radioState;\n}\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nexport let allForm = [];\nexport let tableArray = [];\nleagueInstance = [];\n\nexport async function generateTables() {\n  leagueArray.forEach(function (league) {\n    leagueInstance = [];\n    if (!league.data.specific_tables[0].groups) {\n      for (\n        let index = 0;\n        index < league.data.specific_tables[0].table.length;\n        index++\n      ) {\n        let currentTeam = league.data.specific_tables[0].table[index];\n        let last5 = currentTeam.wdl_record.slice(-5);\n        let rawForm = last5.replace(/,/g, \"\").toUpperCase();\n        let form = Array.from(rawForm);\n        const team = {\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: `${form[0]}${form[1]}${form[2]}${form[3]}${form[4]}`,\n          Points: currentTeam.points,\n        };\n        rawPosition = team.Position\n        leagueInstance.push(team);\n      }\n      tableArray.push(leagueInstance);\n    } else if (league.data.league_table === null) {\n      for (\n        let index = 0;\n        index < league.data.all_matches_table_overall.length;\n        index++\n      ) {\n        let currentTeam = league.data.all_matches_table_overall[index];\n        let last5 = \"N/A\";\n        const team = {\n          Position: index + 1,\n          Name: currentTeam.cleanName,\n          Played: currentTeam.matchesPlayed,\n          Wins: currentTeam.seasonWins_overall,\n          Draws: currentTeam.seasonDraws_overall,\n          Losses: currentTeam.seasonLosses_overall,\n          For: currentTeam.seasonGoals,\n          Against:\n            currentTeam.seasonConceded_home + currentTeam.seasonConceded_away,\n          GoalDifference: currentTeam.seasonGoalDifference,\n          Form: last5,\n          Points: currentTeam.points,\n        };\n        rawPosition = team.Position\n\n        leagueInstance.push(team);\n      }\n      tableArray.push(leagueInstance);\n    }\n  });\n}\n\nexport async function renderTable(index) {\n  let league = tableArray[index];\n  if (league !== undefined) {\n    ReactDOM.render(\n      <LeagueTable Teams={league} Key={`League${index}`} />,\n      document.getElementById(`leagueName${index}`)\n    );\n  }\n}\n\nasync function createFixture(match, result, mockBool) {\n  let roundedHomeOdds;\n  let roundedAwayOdds;\n  let roundedBTTSOdds;\n  let homeFraction;\n  let awayFraction;\n  let bttsFraction;\n\n  if (selectedOdds === \"Fractional\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      roundedHomeOdds = (Math.round(match.homeOdds * 5) / 5).toFixed(1);\n      roundedAwayOdds = (Math.round(match.awayOdds * 5) / 5).toFixed(1);\n\n      if (roundedHomeOdds < 1.1) {\n        roundedHomeOdds = 1.1;\n      }\n      if (roundedAwayOdds < 1.1) {\n        roundedAwayOdds = 1.1;\n      }\n\n      try {\n        homeFraction = oddslib\n          .from(\"decimal\", roundedHomeOdds)\n          .to(\"fractional\", { precision: 1 });\n        awayFraction = oddslib\n          .from(\"decimal\", roundedAwayOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      roundedBTTSOdds = (Math.round(match.bttsOdds * 5) / 5).toFixed(1);\n\n      if (roundedBTTSOdds < 1.1) {\n        roundedBTTSOdds = 1.1;\n      }\n\n      try {\n        bttsFraction = oddslib\n          .from(\"decimal\", roundedBTTSOdds)\n          .to(\"fractional\", { precision: 1 });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  } else if (selectedOdds === \"Decimal\") {\n    if (match.homeOdds !== 0 && match.awayOdds !== 0) {\n      homeFraction = match.homeOdds;\n      awayFraction = match.awayOdds;\n    } else {\n      homeFraction = \"N/A\";\n      awayFraction = \"N/A\";\n    }\n\n    if (match.bttsOdds !== 0) {\n      bttsFraction = match.bttsOdds;\n    } else {\n      bttsFraction = \"N/A\";\n    }\n  }\n\n  match.fractionHome = homeFraction;\n  match.fractionAway = awayFraction;\n\n  match.bttsFraction = bttsFraction;\n\n  match.game = match.homeTeam + \" v \" + match.awayTeam;\n\n  if (mockBool !== true) {\n    ReactDOM.render(\n      <Fixture\n        fixtures={matches}\n        result={result}\n        mock={mockBool}\n        className={\"individualFixture\"}\n      />,\n      document.getElementById(\"FixtureContainer\")\n    );\n  } else if (mockBool === true) {\n    ReactDOM.render(\n      <Fixture\n        fixtures={matches}\n        result={result}\n        mock={mockBool}\n        className={\"individualFixture\"}\n      />,\n      document.getElementById(\"FixtureContainer\")\n    );\n  }\n}\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Origin\", \"https://gregdorward.github.io\");\n\nexport async function generateFixtures(day, radioState, selectedOdds) {\n  let url;\n  switch (day) {\n    case \"lastSaturday\":\n      url = saturday;\n      break;\n    case \"historic\":\n      url = historic;\n      break;\n    case \"yesterdaysFixtures\":\n      url = yesterday;\n      break;\n    case \"todaysFixtures\":\n      url = today;\n      break;\n    case \"tomorrowsFixtures\":\n      url = tomorrow;\n      break;\n    default:\n      break;\n  }\n\n  fixtureResponse = await fetch(url);\n\n  await fixtureResponse.json().then((fixtures) => {\n    fixtureArray = Array.from(fixtures.data);\n  });\n\n  let form;\n  let formArray;\n  var isFormStored;\n  var isStoredLocally;\n  let storedForm = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}form${day}`,\n    {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n      },\n    }\n  );\n  if (storedForm.status === 201) {\n    await storedForm.json().then((form) => {\n      formArray = Array.from(form.allForm);\n      isFormStored = true;\n      isStoredLocally = false;\n      allForm = formArray;\n    });\n  } else if (storedForm.status === 200) {\n    await storedForm.json().then((form) => {\n      formArray = Array.from(form.allForm);\n      isFormStored = true;\n      isStoredLocally = false;\n      allForm = formArray;\n    });\n  } else {\n    isFormStored = false;\n    isStoredLocally = false;\n  }\n\n  ReactDOM.render(\n    <div>\n      <div className=\"LoadingText\">Loading all league data</div>\n      <ThreeDots height=\"3em\" />\n    </div>,\n    document.getElementById(\"Buttons\")\n  );\n\n  league = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${currentDay}${month}${year}`\n  );\n\n  var leaguePositions = [];\n  if (league.status === 200) {\n    await league.json().then((leagues) => {\n      leagueArray = Array.from(leagues.leagueArray);\n    });\n    generateTables(leagueArray);\n  } else {\n    for (let i = 0; i < orderedLeagues.length; i++) {\n      league = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}tables/${orderedLeagues[i].element.id}/${currentDay}${month}${year}`\n      );\n      // eslint-disable-next-line no-loop-func\n      await league.json().then((table) => {\n        leagueArray.push(table);\n      });\n      generateTables(leagueArray);\n    }\n  }\n\n  for (let i = 0; i < 35; i++) {\n    for (\n      let x = 0;\n      x < leagueArray[i].data.all_matches_table_overall.length;\n      x++\n    ) {\n      let string = leagueArray[i].data.all_matches_table_overall[x];\n      let stringHome = leagueArray[i].data.all_matches_table_home[x];\n      let stringAway = leagueArray[i].data.all_matches_table_away[x];\n\n      leaguePositions.push({\n        name: string.cleanName,\n        position: string.position,\n        rawPosition: x+1,\n        homeFormName: stringHome.cleanName,\n        awayFormName: stringAway.cleanName,\n        homeSeasonWinPercentage: stringHome.seasonWins,\n        awaySeasonWinPercentage: stringAway.seasonWins,\n        homeSeasonLossPercentage: stringHome.seasonLosses_home,\n        awaySeasonLossPercentage: stringAway.seasonLosses_away,\n        homeSeasonDrawPercentage: stringHome.seasonDraws,\n        awaySeasonDrawPercentage: stringAway.seasonDraws,\n        homeSeasonMatchesPlayed: stringHome.matchesPlayed,\n        awaySeasonMatchesPlayed: stringAway.matchesPlayed,\n        ppg: string.ppg_overall,\n      });\n    }\n  }\n  console.log(leaguePositions)\n\n  let previousLeagueName;\n\n  for (let i = 0; i < orderedLeagues.length; i++) {\n    leagueGames = fixtureArray.filter(\n      (game) => game.competition_id === orderedLeagues[i].element.id\n    );\n\n    for (const fixture of leagueGames) {\n      const unixTimestamp = fixture.date_unix;\n      const milliseconds = unixTimestamp * 1000;\n      const dateObject = new Date(milliseconds);\n\n      let match = {};\n      if (orderedLeagues[i].name !== previousLeagueName) {\n        match.leagueName = orderedLeagues[i].name;\n        match.leagueIndex = i;\n      } else {\n        match.leagueName = null;\n      }\n      match.id = fixture.id;\n      match.competition_id = fixture.competition_id;\n      match.time = dateObject.toLocaleString(\"en-GB\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      });\n      match.homeTeam = fixture.home_name;\n      match.awayTeam = fixture.away_name;\n      match.homeOdds = fixture.odds_ft_1;\n      match.awayOdds = fixture.odds_ft_2;\n      match.drawOdds = fixture.odds_ft_x;\n      match.homeDoubleChance = fixture.odds_doublechance_1x;\n      match.awayDoubleChance = fixture.odds_doublechance_x2;\n      match.bttsOdds = fixture.odds_btts_yes;\n      match.homeId = fixture.homeID;\n      match.awayId = fixture.awayID;\n      match.form = [];\n      match.homeTeamInfo = [];\n      match.awayTeamInfo = [];\n      match.btts = false;\n\n      previousLeagueName = orderedLeagues[i].name;\n\n      let homeTeaminLeague;\n      let awayTeaminLeague;\n      let teamPositionHome;\n      let teamPositionHomeTable;\n      let teamPositionAwayTable;\n      let homeTeamWinPercentageHome;\n      let awayTeamWinPercentageAway;\n      let homeTeamLossPercentageHome;\n      let awayTeamLossPercentageAway;\n      let homeTeamDrawPercentageHome;\n      let awayTeamDrawPercentageAway;\n      let teamPositionAway;\n      let teamPositionPrefix;\n      let homePrefix;\n      let homePrefixHomeTable;\n      let awayPrefix;\n      let awayPrefixAwayTable;\n      let homeSeasonPPG;\n      let awaySeasonPPG;\n\n      async function getPrefix(position) {\n        switch (position) {\n          case 1:\n          case 21:\n          case 31:\n            teamPositionPrefix = \"st\";\n            break;\n          case 2:\n          case 22:\n          case 32:\n            teamPositionPrefix = \"nd\";\n            break;\n          case 3:\n          case 23:\n          case 33:\n            teamPositionPrefix = \"rd\";\n            break;\n          case 4:\n          case 5:\n          case 6:\n          case 7:\n          case 8:\n          case 9:\n          case 10:\n          case 11:\n          case 12:\n          case 13:\n          case 14:\n          case 15:\n          case 16:\n          case 17:\n          case 18:\n          case 19:\n          case 20:\n          case 24:\n          case 25:\n          case 26:\n          case 27:\n          case 28:\n          case 29:\n          case 30:\n          case 34:\n          case 35:\n          case 36:\n          case 37:\n          case 38:\n          case 39:\n          case 40:\n            teamPositionPrefix = \"th\";\n            break;\n          default:\n            break;\n        }\n        return teamPositionPrefix;\n      }\n\n      try {\n        homeTeaminLeague = leaguePositions.find(\n          (team) => team.name === match.homeTeam\n        );\n\n        let homeTeaminHomeLeague = leaguePositions.find(\n          (team) => team.homeFormName === match.homeTeam\n        );\n\n        console.log(homeTeaminHomeLeague)\n        teamPositionHome = homeTeaminLeague.position;\n        teamPositionHomeTable = homeTeaminHomeLeague.position;\n\n        homeTeamWinPercentageHome =\n          (homeTeaminHomeLeague.homeSeasonWinPercentage /\n            homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n          100;\n\n        homeTeamLossPercentageHome =\n          (homeTeaminHomeLeague.homeSeasonLossPercentage /\n            homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n          100;\n\n        homeTeamDrawPercentageHome =\n          (homeTeaminHomeLeague.homeSeasonDrawPercentage /\n            homeTeaminHomeLeague.homeSeasonMatchesPlayed) *\n          100;\n\n        homePrefix = await getPrefix(teamPositionHome);\n        homePrefixHomeTable = await getPrefix(teamPositionHomeTable);\n\n        homeSeasonPPG = homeTeaminLeague.ppg.toFixed(2);\n      } catch (error) {\n        console.log(error);\n        teamPositionHome = \"N/A\";\n        homePrefix = \"\";\n        homePrefixHomeTable = \"\";\n        homeSeasonPPG = \"N/A\";\n      }\n\n      try {\n        awayTeaminLeague = leaguePositions.find(\n          (team) => team.name === match.awayTeam\n        );\n\n        let awayTeaminAwayLeague = leaguePositions.find(\n          (team) => team.awayFormName === match.awayTeam\n        );\n\n        teamPositionAway = awayTeaminLeague.position;\n        teamPositionAwayTable = awayTeaminAwayLeague.position;\n\n        awayTeamWinPercentageAway =\n          (awayTeaminAwayLeague.awaySeasonWinPercentage /\n            awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n          100;\n\n        awayTeamLossPercentageAway =\n          (awayTeaminAwayLeague.awaySeasonLossPercentage /\n            awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n          100;\n\n        awayTeamDrawPercentageAway =\n          (awayTeaminAwayLeague.awaySeasonDrawPercentage /\n            awayTeaminAwayLeague.awaySeasonMatchesPlayed) *\n          100;\n\n        console.log(teamPositionAwayTable);\n\n        awayPrefix = await getPrefix(teamPositionAway);\n        awayPrefixAwayTable = await getPrefix(teamPositionAwayTable);\n\n        awaySeasonPPG = awayTeaminLeague.ppg.toFixed(2);\n      } catch (error) {\n        console.log(error);\n        teamPositionAway = \"N/A\";\n        awayPrefix = \"\";\n        awaySeasonPPG = \"N/A\";\n      }\n\n      if (!isFormStored) {\n        form = await getForm(match);\n\n        // if (\n        //   form[0].data[0].stats.additional_info &&\n        //   form[1].data[0].stats.additional_info\n        // ) {\n\n        //   //get the last 5 games stats from a big block of text\n        //   var homeExtract = form[0].data[0].stats.additional_info.replace(\n        //     /[\"']/g,\n        //     \"\"\n        //   );\n\n        //   var slug = homeExtract.split(\",53:\").pop().toUpperCase();\n        let homeFormString5 =\n          form[0].data[0].stats.additional_info.formRun_overall.toUpperCase();\n        let awayFormString5 =\n          form[1].data[0].stats.additional_info.formRun_overall.toUpperCase();\n        let homeFormString6 =\n          form[0].data[1].stats.additional_info.formRun_overall.toUpperCase();\n        let awayFormString6 =\n          form[1].data[1].stats.additional_info.formRun_overall.toUpperCase();\n        let homeFormString10 =\n          form[0].data[2].stats.additional_info.formRun_overall.toUpperCase();\n        let awayFormString10 =\n          form[1].data[2].stats.additional_info.formRun_overall.toUpperCase();\n        lastFiveFormHome = Array.from(homeFormString5);\n        lastSixFormHome = Array.from(homeFormString6);\n        lastTenFormHome = Array.from(homeFormString10);\n        lastFiveFormAway = Array.from(awayFormString5);\n        lastSixFormAway = Array.from(awayFormString6);\n        lastTenFormAway = Array.from(awayFormString10);\n\n        if (teamPositionHome === 0) {\n          teamPositionHome = \"N/A\";\n          teamPositionHomeTable = \"N/A\";\n          homePrefix = \"\";\n          homePrefixHomeTable = \"\";\n        }\n\n        if (teamPositionAway === 0) {\n          teamPositionAway = \"N/A\";\n          teamPositionAwayTable = \"N/A\";\n          awayPrefix = \"\";\n          awayPrefixAwayTable = \"\";\n        }\n        // } else {\n        //   lastFiveFormHome = \"N/A\"\n        //   lastFiveFormAway = \"N/A\"\n        // }\n\n        console.log(form[0].data[2].stats)\n\n        allForm.push({\n          id: match.id,\n          home: {\n            teamName: match.homeTeam,\n            0: {\n              XGOverall: parseFloat(form[0].data[0].stats.xg_for_avg_overall),\n              XG: parseFloat(form[0].data[0].stats.xg_for_avg_home),\n              ScoredOverall: parseFloat(\n                form[0].data[0].stats.seasonScoredNum_overall\n              ),\n              ScoredAverage: parseFloat(\n                form[0].data[0].stats.seasonScoredAVG_home\n              ),\n              PlayedHome: parseFloat(\n                form[0].data[0].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[0].data[0].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[0].data[0].stats.seasonConcededNum_overall\n              ),\n              ConcededAverage: parseFloat(\n                form[0].data[0].stats.seasonConcededAVG_home\n              ),\n              XGAgainstAvgOverall: parseFloat(\n                form[0].data[0].stats.xg_against_avg_overall\n              ),\n              XGAgainstAverage: parseFloat(\n                form[0].data[0].stats.xg_against_avg_home\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[0].data[0].stats.seasonCSPercentage_home\n              ),\n              AveragePossessionOverall: parseFloat(\n                form[0].data[0].stats.possessionAVG_overall\n              ),\n              AveragePossession: parseFloat(\n                form[0].data[0].stats.possessionAVG_home\n              ),\n              AverageShotsOnTargetOverall: parseFloat(\n                form[0].data[0].stats.shotsOnTargetAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[0].data[0].stats.shotsOnTargetAVG_home\n              ),\n              AverageDangerousAttacksOverall: parseFloat(\n                form[0].data[0].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[0].data[0].stats.seasonPPG_home),\n              AttacksHome: parseFloat(form[0].data[0].stats.attacks_avg_home),\n              AttacksAway: parseFloat(form[0].data[0].stats.attacks_avg_away),\n              AverageDangerousAttacks: parseFloat(\n                form[0].data[0].stats.dangerous_attacks_avg_home\n              ),\n              homeAttackAdvantage: parseFloat(\n                form[0].data[0].stats.homeAttackAdvantage\n              ),\n              homeDefenceAdvantage: parseFloat(\n                form[0].data[0].stats.homeDefenceAdvantage\n              ),\n              BTTSPercentage: parseInt(\n                form[0].data[0].stats.seasonBTTSPercentage_home\n              ),\n              LastFiveForm: lastFiveFormHome,\n              LastSixForm: lastSixFormHome,\n              LastTenForm: lastTenFormHome,\n              LeaguePosition: `${teamPositionHome}${homePrefix}`,\n              homeRawPosition: homeTeaminLeague.rawPosition,\n              homeTeamHomePositionRaw: teamPositionHomeTable,\n              SeasonPPG: homeSeasonPPG,\n            },\n            1: {\n              XGOverall: parseFloat(form[0].data[1].stats.xg_for_avg_overall),\n              XG: parseFloat(form[0].data[1].stats.xg_for_avg_home),\n              ScoredOverall: parseFloat(\n                form[0].data[1].stats.seasonScoredNum_overall\n              ),\n              ScoredAverage: parseFloat(\n                form[0].data[1].stats.seasonScoredAVG_home\n              ),\n              PlayedHome: parseFloat(\n                form[0].data[1].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[0].data[1].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[0].data[1].stats.seasonConcededNum_overall\n              ),\n              ConcededAverage: parseFloat(\n                form[0].data[1].stats.seasonConcededAVG_home\n              ),\n              XGAgainstAvgOverall: parseFloat(\n                form[0].data[1].stats.xg_against_avg_overall\n              ),\n              XGAgainstAverage: parseFloat(\n                form[0].data[1].stats.xg_against_avg_home\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[0].data[1].stats.seasonCSPercentage_home\n              ),\n              AveragePossessionOverall: parseFloat(\n                form[0].data[1].stats.possessionAVG_overall\n              ),\n              AveragePossession: parseFloat(\n                form[0].data[1].stats.possessionAVG_home\n              ),\n              AverageShotsOnTargetOverall: parseFloat(\n                form[0].data[1].stats.shotsOnTargetAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[0].data[1].stats.shotsOnTargetAVG_home\n              ),\n              AverageDangerousAttacksOverall: parseFloat(\n                form[0].data[1].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[0].data[1].stats.seasonPPG_home),\n              AttacksHome: parseFloat(form[0].data[1].stats.attacks_avg_home),\n              AttacksAway: parseFloat(form[0].data[1].stats.attacks_avg_away),\n              AverageDangerousAttacks: parseFloat(\n                form[0].data[1].stats.dangerous_attacks_avg_home\n              ),\n              homeAttackAdvantage: parseFloat(\n                form[0].data[1].stats.homeAttackAdvantage\n              ),\n              homeDefenceAdvantage: parseFloat(\n                form[0].data[1].stats.homeDefenceAdvantage\n              ),\n              BTTSPercentage: parseInt(\n                form[0].data[1].stats.seasonBTTSPercentage_home\n              ),\n              LastFiveForm: lastFiveFormHome,\n              LastSixForm: lastSixFormHome,\n              LastTenForm: lastTenFormHome,\n              LeaguePosition: `${teamPositionHome}${homePrefix}`,\n              homeRawPosition: homeTeaminLeague.rawPosition,\n              homeTeamHomePositionRaw: teamPositionHomeTable,\n              SeasonPPG: homeSeasonPPG,\n            },\n            2: {\n              XGOverall: parseFloat(form[0].data[2].stats.xg_for_avg_overall),\n              XG: parseFloat(form[0].data[2].stats.xg_for_avg_home),\n              ScoredOverall: parseFloat(\n                form[0].data[2].stats.seasonScoredNum_overall\n              ),\n              ScoredAverage: parseFloat(\n                form[0].data[2].stats.seasonScoredAVG_home\n              ),\n              PlayedHome: parseFloat(\n                form[0].data[2].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[0].data[2].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[0].data[2].stats.seasonConcededNum_overall\n              ),\n              ConcededAverage: parseFloat(\n                form[0].data[2].stats.seasonConcededAVG_home\n              ),\n              XGAgainstAvgOverall: parseFloat(\n                form[0].data[2].stats.xg_against_avg_overall\n              ),\n              XGAgainstAverage: parseFloat(\n                form[0].data[2].stats.xg_against_avg_home\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[0].data[2].stats.seasonCSPercentage_home\n              ),\n              AveragePossessionOverall: parseFloat(\n                form[0].data[2].stats.possessionAVG_overall\n              ),\n              AveragePossession: parseFloat(\n                form[0].data[2].stats.possessionAVG_home\n              ),\n              AverageShotsOnTargetOverall: parseFloat(\n                form[0].data[2].stats.shotsOnTargetAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[0].data[2].stats.shotsOnTargetAVG_home\n              ),\n              AverageDangerousAttacksOverall: parseFloat(\n                form[0].data[2].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[0].data[2].stats.seasonPPG_home),\n              AttacksHome: parseFloat(form[0].data[2].stats.attacks_avg_home),\n              AttacksAway: parseFloat(form[0].data[2].stats.attacks_avg_away),\n              AverageDangerousAttacks: parseFloat(\n                form[0].data[2].stats.dangerous_attacks_avg_home\n              ),\n              homeAttackAdvantage: parseFloat(\n                form[0].data[2].stats.homeAttackAdvantage\n              ),\n              homeDefenceAdvantage: parseFloat(\n                form[0].data[2].stats.homeDefenceAdvantage\n              ),\n              BTTSPercentage: parseInt(\n                form[0].data[2].stats.seasonBTTSPercentage_home\n              ),\n              LastFiveForm: lastFiveFormHome,\n              LastSixForm: lastSixFormHome,\n              LastTenForm: lastTenFormHome,\n              LeaguePosition: `${teamPositionHome}${homePrefix}`,\n              homeRawPosition: homeTeaminLeague.rawPosition,\n              homeTeamHomePositionRaw: teamPositionHomeTable,\n              SeasonPPG: homeSeasonPPG,\n            },\n          },\n          away: {\n            teamName: match.awayTeam,\n            0: {\n              XGOverall: parseFloat(form[1].data[0].stats.xg_for_avg_overall),\n              XG: parseFloat(form[1].data[0].stats.xg_for_avg_away),\n              ScoredOverall: parseFloat(\n                form[1].data[0].stats.seasonScoredNum_overall\n              ),\n              ScoredAverage: parseFloat(\n                form[1].data[0].stats.seasonScoredAVG_away\n              ),\n              PlayedHome: parseFloat(\n                form[1].data[0].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[1].data[0].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[1].data[0].stats.seasonConcededNum_overall\n              ),\n              ConcededAverage: parseFloat(\n                form[1].data[0].stats.seasonConcededAVG_away\n              ),\n              XGAgainstAvgOverall: parseFloat(\n                form[1].data[0].stats.xg_against_avg_overall\n              ),\n              XGAgainstAverage: parseFloat(\n                form[1].data[0].stats.xg_against_avg_away\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[1].data[0].stats.seasonCSPercentage_away\n              ),\n              AveragePossessionOverall: parseFloat(\n                form[1].data[0].stats.possessionAVG_overall\n              ),\n              AveragePossession: parseFloat(\n                form[1].data[0].stats.possessionAVG_away\n              ),\n              AverageShotsOnTargetOverall: parseFloat(\n                form[1].data[0].stats.shotsOnTargetAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[1].data[0].stats.shotsOnTargetAVG_away\n              ),\n              AverageDangerousAttacksOverall: parseFloat(\n                form[1].data[0].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[1].data[0].stats.seasonPPG_away),\n              AttacksAverage: parseFloat(\n                form[1].data[0].stats.attacks_avg_away\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[1].data[0].stats.dangerous_attacks_avg_away\n              ),\n              BTTSPercentage: parseInt(\n                form[0].data[0].stats.seasonBTTSPercentage_away\n              ),\n              LastFiveForm: lastFiveFormAway,\n              LastSixForm: lastSixFormAway,\n              LastTenForm: lastTenFormAway,\n              LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n              awayRawPosition: awayTeaminLeague.rawPosition,\n              awayTeamAwayPositionRaw: teamPositionAwayTable,\n              SeasonPPG: awaySeasonPPG,\n            },\n            1: {\n              XGOverall: parseFloat(form[1].data[1].stats.xg_for_avg_overall),\n              XG: parseFloat(form[1].data[1].stats.xg_for_avg_away),\n              ScoredOverall: parseFloat(\n                form[1].data[1].stats.seasonScoredNum_overall\n              ),\n              ScoredAverage: parseFloat(\n                form[1].data[1].stats.seasonScoredAVG_away\n              ),\n              PlayedHome: parseFloat(\n                form[1].data[1].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[1].data[1].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[1].data[1].stats.seasonConcededNum_overall\n              ),\n              ConcededAverage: parseFloat(\n                form[1].data[1].stats.seasonConcededAVG_away\n              ),\n              XGAgainstAvgOverall: parseFloat(\n                form[1].data[1].stats.xg_against_avg_overall\n              ),\n              XGAgainstAverage: parseFloat(\n                form[1].data[1].stats.xg_against_avg_away\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[1].data[1].stats.seasonCSPercentage_away\n              ),\n              AveragePossessionOverall: parseFloat(\n                form[1].data[1].stats.possessionAVG_overall\n              ),\n              AveragePossession: parseFloat(\n                form[1].data[1].stats.possessionAVG_away\n              ),\n              AverageShotsOnTargetOverall: parseFloat(\n                form[1].data[1].stats.shotsOnTargetAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[1].data[1].stats.shotsOnTargetAVG_away\n              ),\n              AverageDangerousAttacksOverall: parseFloat(\n                form[1].data[1].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[1].data[1].stats.seasonPPG_away),\n              AttacksAverage: parseFloat(\n                form[1].data[1].stats.attacks_avg_away\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[1].data[1].stats.dangerous_attacks_avg_away\n              ),\n              BTTSPercentage: parseInt(\n                form[0].data[1].stats.seasonBTTSPercentage_away\n              ),\n              LastFiveForm: lastFiveFormAway,\n              LastSixForm: lastSixFormAway,\n              LastTenForm: lastTenFormAway,\n              LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n              awayRawPosition: awayTeaminLeague.rawPosition,\n              awayTeamAwayPositionRaw: teamPositionAwayTable,\n              SeasonPPG: awaySeasonPPG,\n            },\n            2: {\n              XGOverall: parseFloat(form[1].data[2].stats.xg_for_avg_overall),\n              XG: parseFloat(form[1].data[2].stats.xg_for_avg_away),\n              ScoredOverall: parseFloat(\n                form[1].data[2].stats.seasonScoredNum_overall\n              ),\n              ScoredAverage: parseFloat(\n                form[1].data[2].stats.seasonScoredAVG_away\n              ),\n              PlayedHome: parseFloat(\n                form[1].data[2].stats.seasonMatchesPlayed_home\n              ),\n              PlayedAway: parseFloat(\n                form[1].data[2].stats.seasonMatchesPlayed_away\n              ),\n              ConcededOverall: parseFloat(\n                form[1].data[2].stats.seasonConcededNum_overall\n              ),\n              ConcededAverage: parseFloat(\n                form[1].data[2].stats.seasonConcededAVG_away\n              ),\n              XGAgainstAvgOverall: parseFloat(\n                form[1].data[2].stats.xg_against_avg_overall\n              ),\n              XGAgainstAverage: parseFloat(\n                form[1].data[2].stats.xg_against_avg_away\n              ),\n              CleanSheetPercentage: parseFloat(\n                form[1].data[2].stats.seasonCSPercentage_away\n              ),\n              AveragePossessionOverall: parseFloat(\n                form[1].data[2].stats.possessionAVG_overall\n              ),\n              AveragePossession: parseFloat(\n                form[1].data[2].stats.possessionAVG_away\n              ),\n              AverageShotsOnTargetOverall: parseFloat(\n                form[1].data[2].stats.shotsOnTargetAVG_overall\n              ),\n              AverageShotsOnTarget: parseFloat(\n                form[1].data[2].stats.shotsOnTargetAVG_away\n              ),\n              AverageDangerousAttacksOverall: parseFloat(\n                form[1].data[2].stats.dangerous_attacks_avg_overall\n              ),\n              PPG: parseFloat(form[1].data[2].stats.seasonPPG_away),\n              AttacksAverage: parseFloat(\n                form[1].data[2].stats.attacks_avg_away\n              ),\n              AverageDangerousAttacks: parseFloat(\n                form[1].data[2].stats.dangerous_attacks_avg_away\n              ),\n              BTTSPercentage: parseInt(\n                form[0].data[2].stats.seasonBTTSPercentage_away\n              ),\n              LastFiveForm: lastFiveFormAway,\n              LastSixForm: lastSixFormAway,\n              LastTenForm: lastTenFormAway,\n              LeaguePosition: `${teamPositionAway}${awayPrefix}`,\n              awayRawPosition: awayTeaminLeague.rawPosition,\n              awayTeamAwayPositionRaw: teamPositionAwayTable,\n              SeasonPPG: awaySeasonPPG,\n            },\n          },\n        });\n      }\n\n      match.homeBadge = fixture.home_image;\n      match.awayBadge = fixture.away_image;\n\n      \n\n      match.homePpg = fixture.home_ppg.toFixed(2);\n      match.homeFormColour = await applyColour(match.homePpg);\n\n      match.awayPpg = fixture.away_ppg.toFixed(2);\n      match.awayFormColour = await applyColour(match.awayPpg);\n\n      match.lastFiveFormHome = lastFiveFormHome;\n      match.lastFiveFormAway = lastFiveFormAway;\n      match.homeRawPosition = homeTeaminLeague.rawPosition\n      match.awayRawPosition = awayTeaminLeague.rawPosition\n\n      match.homeTeamHomePosition = `${teamPositionHomeTable}${homePrefixHomeTable}`;\n      match.awayTeamAwayPosition = `${teamPositionAwayTable}${awayPrefixAwayTable}`;\n\n      match.homeTeamHomePositionRaw = teamPositionHomeTable\n      match.awayTeamAwayPositionRaw = teamPositionAwayTable\n\n\n      match.homeTeamWinPercentage = homeTeamWinPercentageHome;\n      match.awayTeamWinPercentage = awayTeamWinPercentageAway;\n\n      match.homeTeamLossPercentage = homeTeamLossPercentageHome;\n      match.awayTeamLossPercentage = awayTeamLossPercentageAway;\n\n      match.homeTeamDrawPercentage = homeTeamDrawPercentageHome;\n      match.awayTeamDrawPercentage = awayTeamDrawPercentageAway;\n\n      match.status = fixture.status;\n\n      match.btts_potential = fixture.btts_potential;\n      match.game = match.homeTeam + \" v \" + match.awayTeam;\n\n      match.homeGoals = fixture.homeGoalCount;\n      match.awayGoals = fixture.awayGoalCount;\n\n      match.expectedGoalsHomeToDate = fixture.team_a_xg_prematch;\n      match.expectedGoalsAwayToDate = fixture.team_b_xg_prematch;\n\n      console.log(match)\n      console.log(fixture)\n\n\n      if (match.status !== \"canceled\" || match.status !== \"suspended\") {\n        matches.push(match);\n        await createFixture(match, false);\n      }\n\n      console.log(allForm)\n    }\n    // }\n    ReactDOM.render(\n      <Button\n        text={\"Generate predictions\"}\n        onClickEvent={() => getScorePrediction(day)}\n      />,\n      document.getElementById(\"Buttons\")\n    );\n  }\n  if (!isStoredLocally) {\n    await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}allForm${day}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ allForm }),\n    });\n  }\n  await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}leagues/${currentDay}${month}${year}`,\n    {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ leagueArray }),\n    }\n  );\n}\n","import React from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#172A3A\",\n    color: theme.palette.common.white,\n    padding: \"0.35em\",\n    paddingTop: \"0.5em\",\n    paddingBottom: \"0.5em\",\n    textAlign: \"left\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    fontSize: \"1.9em\",\n    textAlign: \"left\",\n    fontFamily: \"inherit\",\n    padding: \"0.35em\",\n    paddingTop: \"0.5em\",\n    paddingBottom: \"0.5em\",\n    border: \"none\",\n    margin: \"none\",\n    color: \"white\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#1D3549\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#172B3A\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\nfunction styleForm(formIndicator) {\n  let className;\n  if (formIndicator === \"W\") {\n    className = \"winLeague\";\n  } else if (formIndicator === \"D\") {\n    className = \"drawLeague\";\n  } else if (formIndicator === \"L\") {\n    className = \"lossLeague\";\n  } \n  return className;\n}\n\nexport default function LeagueTable(props) {\n\n  let rows = props.Teams.map((team, i) => (\n    <StyledTableRow key={`${props.Key}row${i}`}>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Position}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Name}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Played}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Wins}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Draws}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Losses}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.For}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Against}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.GoalDifference}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Points}`}\n      </StyledTableCell>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ textAlign: \"center\" }}\n      >\n        <span className={styleForm(team.Form[0])}>{team.Form[0]}</span>\n        <span className={styleForm(team.Form[1])}>{team.Form[1]}</span>\n        <span className={styleForm(team.Form[2])}>{team.Form[2]}</span>\n        <span className={styleForm(team.Form[3])}>{team.Form[3]}</span>\n        <span className={styleForm(team.Form[4])}>{team.Form[4]}</span>\n      </StyledTableCell>\n    </StyledTableRow>\n  ));\n\n  for (let i = 0; i < props.Teams.length; i++) {\n    return (\n      <TableContainer component={Paper} className=\"StatsTable\">\n        <Table aria-label=\"customized table\" key={props.Key}>\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>P</StyledTableCell>\n              <StyledTableCell>Team</StyledTableCell>\n              <StyledTableCell>Pld</StyledTableCell>\n              <StyledTableCell>W</StyledTableCell>\n              <StyledTableCell>D</StyledTableCell>\n              <StyledTableCell>L</StyledTableCell>\n              <StyledTableCell>GF</StyledTableCell>\n              <StyledTableCell>GA</StyledTableCell>\n              <StyledTableCell>GD</StyledTableCell>\n              <StyledTableCell>Pts</StyledTableCell>\n              <StyledTableCell style={{ textAlign: \"center\" }}>\n                Form\n              </StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>{rows}</TableBody>\n        </Table>\n      </TableContainer>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./components/Header\";\nimport Radio from \"./components/radio\";\nimport { Button } from \"./components/Button\";\nimport OddsRadio from \"./components/OddsRadio\";\nimport { selectedOdds } from \"./components/OddsRadio\";\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  RedditShareButton,\n  RedditIcon,\n  TelegramShareButton,\n  TelegramIcon,\n  TwitterShareButton,\n  TwitterIcon,\n  WhatsappShareButton,\n  WhatsappIcon,\n} from \"react-share\";\n\nimport {\n  today,\n  generateFixtures,\n  generatePriorFixtures,\n  tomorrow,\n  yesterday,\n} from \"./logic/getFixtures\";\nimport { selectedOption } from \"./components/radio\";\nimport TextBlock from \"./components/TextSection\";\nimport { ThreeDots } from \"react-loading-icons\";\nrequire(\"dotenv\").config();\n\nexport const proxyurl = \"https://safe-caverns-99679.herokuapp.com/\";\nexport var fixtureList = [];\nexport let allLeagueData = [];\n\nexport const availableLeagues = [];\nexport var orderedLeagues = [];\n\n(async function getLeagueList() {\n  let leagueList;\n\n  leagueList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}leagueList`);\n  console.log(leagueList);\n\n  // ReactDOM.render(\n  //   <div className=\"LoadingText\">\n  //     Loading form data. This might take a while if you're the first user\n  //     today...\n  //   </div>,\n  //   document.getElementById(\"RadioButtons\")\n  // );\n\n  let leagueArray;\n  await leagueList.json().then((leagues) => {\n    leagueArray = Array.from(leagues.data);\n  });\n  console.log(leagueArray);\n\n  for (let i = 0; i < leagueArray.length; i++) {\n    const league = leagueArray[i];\n    const name = leagueArray[i].name;\n\n    for (let x = 0; x < league.season.length; x++) {\n      const element = league.season[x];\n\n      if (element.year === 20212022 || element.year === 2021) {\n        if (element.id !== 5784) {\n          availableLeagues.push({ name: name, element });\n        }\n      }\n    }\n\n    async function mapOrder(array, order, key) {\n      array.sort(function (a, b) {\n        var A = a.element[key],\n          B = b.element[key];\n\n        if (order.indexOf(A) > order.indexOf(B)) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n      console.log(array);\n      return array;\n    }\n\n    //leagues ordered by id\n    var leagueOrder = [\n      6135, //premier league 21/22\n      6089, //championship\n      6017, //league 1 21/22\n      6015, //league 2 21/22\n      6088, //National league 21/22\n      6211, //\n      5992, //Scottish Prem 21/22\n      6192, //\n      6198, //Serie A\n      6019, //French Prem 21/22\n      6117, //Portagul Prem 21/22\n      5951, //Dutch Prem 21/22\n      6079, //Belgian Pro League 21/22\n      5505, //sweden 21/22\n      5961, //Danish Prem 21\n      5496, //Norway Prem 21\n      6008, //Austrian Prem 21\n      6282, //Greek Prem 21\n      5948, //Polish prem 21/22\n      5534, //Irish Prem 21\n      6120, //Spanish secunda 21/22\n      6205, //\n      6020, //Bundesliga 2 21/22\n      6018, //French League 2 21/22\n      5991, //Scottish Championship\n      5976, //Scottish league 1 21/22\n      5974, //Scottish league 2 21/22\n      6173, //Women's prem 21/22\n      5674, //MLS 21\n      6639, //Australian A league 21\n      5713, //Brazil prem 21\n      5434, //Japan 21\n      5506, //S Korea 21\n      6038, //Mexico prem 21/22`\n      6083, //National league North and South 21/22\n    ];\n\n    orderedLeagues = await mapOrder(availableLeagues, leagueOrder, \"id\");\n  }\n\n  // ReactDOM.render(\n  //   <div className=\"LastXGames\">\n  //     <Radio\n  //       value=\"5\"\n  //       label=\"form based on last 5 games\"\n  //       className=\"FormRadio\"\n  //     />\n  //     <Radio\n  //       value=\"6\"\n  //       label=\"form based on last 6 games\"\n  //       className=\"FormRadio\"\n  //     />\n  //     <Radio\n  //       value=\"10\"\n  //       label=\"form based on last 10 games\"\n  //       className=\"FormRadio\"\n  //     />\n  //   </div>,\n  //   document.getElementById(\"RadioButtons\")\n  // );\n\n  // ReactDOM.render(\n  //   <TextBlock\n  //     text=\"Select how many games you would like to fetch form data for\"\n  //     className=\"RadioText\"\n  //   />,\n  //   document.getElementById(\"RadioText\")\n  // );\n\n  ReactDOM.render(\n    <div className=\"FixtureButtons\">\n      <div className=\"historicResults\">\n        <Button\n          text={\"Last Saturday's predictions\"}\n          className=\"HistoricFixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"lastSaturday\",\n                selectedOption,\n                selectedOdds\n              )\n            )\n          }\n        />\n        <Button\n          text={\"More historic predictions\"}\n          className=\"HistoricFixturesButtonRight\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\"historic\", selectedOption, selectedOdds)\n            )\n          }\n        />\n      </div>\n      <Button\n        text={\"Yesterday's prediction outcomes\"}\n        className=\"FixturesButton\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"yesterdaysFixtures\",\n              selectedOption,\n              selectedOdds\n            )\n          )\n        }\n      />\n      <Button\n        text={\"Today's fixtures\"}\n        className=\"FixturesButton\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"todaysFixtures\",\n              selectedOption,\n              selectedOdds\n            )\n          )\n        }\n      />\n      <Button\n        text={\"Tomorrow's fixtures\"}\n        className=\"FixturesButton\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"tomorrowsFixtures\",\n              selectedOption,\n              selectedOdds\n            )\n          )\n        }\n      />\n    </div>,\n    document.getElementById(\"Buttons\")\n  );\n  ReactDOM.render(\n    <div className=\"OddsRadios\">\n      <OddsRadio value=\"Fractional\"></OddsRadio>\n      <OddsRadio value=\"Decimal\"></OddsRadio>\n    </div>,\n    document.getElementById(\"Checkbox\")\n  );\n})();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <a\n        className=\"SocialLink\"\n        href=\"https://www.reddit.com/r/xgtipping/\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        r/xgtipping\n      </a>\n      <div id=\"LoadingContainer\" className=\"LoadingContainer\" />\n      <div id=\"RadioContainer\" className=\"RadioContainer\">\n        <div id=\"RadioText\" />\n        <div id=\"RadioButtons\" />\n      </div>\n      <div id=\"Day\" />\n      <div id=\"Checkbox\" />\n      <div id=\"Buttons\">\n        <ThreeDots className=\"MainLoading\" />\n        <div>Loading all fixture and form data...</div>\n      </div>\n      <div id=\"successMeasure\" />\n      <div id=\"bestPredictions\" />\n      <div id=\"exoticOfTheDay\" />\n      <div id=\"BTTS\" />\n      <div id=\"longShots\" />\n      <div id=\"draws\" />\n      <div id=\"insights\" />\n      <div id=\"tables\" />\n      <div id=\"homeBadge\" />\n      <div id=\"FixtureContainerHeaders\"></div>\n      <div id=\"FixtureContainer\">\n        <div>\n          <div className=\"WelcomeText\">\n            Global fixtures and predictions from 30+ league competitions,\n            including\n          </div>\n          <ul className=\"AllLeagues\">\n            <li className=\"League\">Premier League</li>\n            <li className=\"League\">La Liga</li>\n            <li className=\"League\">Serie A</li>\n            <li className=\"League\">Bundesliga</li>\n            <li className=\"League\">Ligue 1</li>\n            <li className=\"League\">MLS</li>\n            <li className=\"League\">Primeira Liga</li>\n          </ul>\n          <div className=\"DataText\">Raw data from</div>\n          <a\n            className=\"DataLink\"\n            href=\"https://www.footystats.org\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            footystats.org\n          </a>\n        </div>\n      </div>\n      <div className=\"Social\">\n        <TwitterShareButton\n          url={\"www.xgtipping.com\"}\n          title={\"#XGTipping\"}\n          className=\"ShareButton\"\n          style={{ backgroundColor: \"#294A66\", boxShadow: \"none\" }}\n        >\n          <TwitterIcon size={\"3em\"} round={true} />\n        </TwitterShareButton>\n        <FacebookShareButton\n          url={\"www.xgtipping.com\"}\n          quote={\"XGTipping - data-driven football predictions\"}\n          className=\"ShareButton\"\n          style={{ backgroundColor: \"#294A66\", boxShadow: \"none\" }}\n        >\n          <FacebookIcon size={\"3em\"} round={true} />\n        </FacebookShareButton>\n        <RedditShareButton\n          url={\"www.xgtipping.com\"}\n          title={\"XGTipping\"}\n          className=\"ShareButton\"\n          style={{ backgroundColor: \"#294A66\", boxShadow: \"none\" }}\n        >\n          <RedditIcon size={\"3em\"} round={true} />\n        </RedditShareButton>\n        <WhatsappShareButton\n          url={\"www.xgtipping.com\"}\n          title={\"XGTipping\"}\n          separator=\": \"\n          className=\"ShareButton\"\n          style={{ backgroundColor: \"#294A66\", boxShadow: \"none\" }}\n        >\n          <WhatsappIcon size={\"3em\"} round={true} />\n        </WhatsappShareButton>\n        <TelegramShareButton\n          url={\"XGTipping\"}\n          title={\"XGTipping\"}\n          className=\"ShareButton\"\n          style={{ backgroundColor: \"#294A66\", boxShadow: \"none\" }}\n        >\n          <TelegramIcon size={\"3em\"} round={true} />\n        </TelegramShareButton>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconsole.log(process.env)\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}