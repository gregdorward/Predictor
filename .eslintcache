[{"/Users/gregdorward/Development/football-predictions/src/index.js":"1","/Users/gregdorward/Development/football-predictions/src/App.js":"2","/Users/gregdorward/Development/football-predictions/src/reportWebVitals.js":"3","/Users/gregdorward/Development/football-predictions/src/components/spinner.js":"4","/Users/gregdorward/Development/football-predictions/src/components/showCardPotential.js":"5","/Users/gregdorward/Development/football-predictions/src/components/createBadge.js":"6","/Users/gregdorward/Development/football-predictions/src/components/showBttsData.js":"7","/Users/gregdorward/Development/football-predictions/src/components/radio.js":"8","/Users/gregdorward/Development/football-predictions/src/components/Header.js":"9","/Users/gregdorward/Development/football-predictions/src/logic/getFixtures.js":"10","/Users/gregdorward/Development/football-predictions/src/components/createStatsDiv.js":"11","/Users/gregdorward/Development/football-predictions/src/logic/getForm.js":"12","/Users/gregdorward/Development/football-predictions/src/components/Button.js":"13","/Users/gregdorward/Development/football-predictions/src/logic/getScorePredictions.js":"14","/Users/gregdorward/Development/football-predictions/src/components/CollapsableElement.js":"15","/Users/gregdorward/Development/football-predictions/src/components/TextSection.js":"16","/Users/gregdorward/Development/football-predictions/src/logic/getStats.js":"17","/Users/gregdorward/Development/football-predictions/src/components/Div.js":"18","/Users/gregdorward/Development/football-predictions/src/components/CollapsableDiv.js":"19","/Users/gregdorward/Development/football-predictions/src/components/Increment.js":"20","/Users/gregdorward/Development/football-predictions/src/logic/getBTTSPotential.js":"21","/Users/gregdorward/Development/football-predictions/src/components/OddsRadio.js":"22","/Users/gregdorward/Development/football-predictions/src/logic/getTeamStats.js":"23","/Users/gregdorward/Development/football-predictions/src/components/HeadToHead.js":"24","/Users/gregdorward/Development/football-predictions/src/components/BulletList.js":"25","/Users/gregdorward/Development/football-predictions/src/components/Table.js":"26","/Users/gregdorward/Development/football-predictions/src/components/LeagueTable.js":"27","/Users/gregdorward/Development/football-predictions/src/components/Fixture.js":"28","/Users/gregdorward/Development/football-predictions/src/components/KofiButton.js":"29","/Users/gregdorward/Development/football-predictions/src/components/Chart.js":"30","/Users/gregdorward/Development/football-predictions/src/logic/compareFormTrend.js":"31","/Users/gregdorward/Development/football-predictions/src/components/Toggle.js":"32","/Users/gregdorward/Development/football-predictions/src/components/Carousel.js":"33","/Users/gregdorward/Development/football-predictions/src/components/DayPicker.js":"34","/Users/gregdorward/Development/football-predictions/src/components/DateForm.js":"35"},{"size":500,"mtime":1666184722125,"results":"36","hashOfConfig":"37"},{"size":21257,"mtime":1673601156147,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":1642008106594,"results":"39","hashOfConfig":"37"},{"size":297,"mtime":1611654841360,"results":"40","hashOfConfig":"41"},{"size":0,"mtime":1611654832610,"results":"42","hashOfConfig":"41"},{"size":373,"mtime":1657548030451,"results":"43","hashOfConfig":"37"},{"size":0,"mtime":1611654828618,"results":"44","hashOfConfig":"41"},{"size":963,"mtime":1642008106588,"results":"45","hashOfConfig":"37"},{"size":144,"mtime":1642008106581,"results":"46","hashOfConfig":"37"},{"size":53633,"mtime":1674565995511,"results":"47","hashOfConfig":"37"},{"size":13459,"mtime":1674565834550,"results":"48","hashOfConfig":"37"},{"size":476,"mtime":1670058932484,"results":"49","hashOfConfig":"37"},{"size":293,"mtime":1664526263212,"results":"50","hashOfConfig":"37"},{"size":75465,"mtime":1674566050286,"results":"51","hashOfConfig":"37"},{"size":744,"mtime":1666608861684,"results":"52","hashOfConfig":"37"},{"size":180,"mtime":1642008106585,"results":"53","hashOfConfig":"54"},{"size":44262,"mtime":1674560764432,"results":"55","hashOfConfig":"37"},{"size":203,"mtime":1642008106578,"results":"56","hashOfConfig":"37"},{"size":595,"mtime":1614865093901,"results":"57","hashOfConfig":"41"},{"size":1347,"mtime":1660318811896,"results":"58","hashOfConfig":"37"},{"size":1534,"mtime":1667494310614,"results":"59","hashOfConfig":"37"},{"size":930,"mtime":1674565851630,"results":"60","hashOfConfig":"37"},{"size":8044,"mtime":1674566079238,"results":"61","hashOfConfig":"37"},{"size":2875,"mtime":1666948800405,"results":"62","hashOfConfig":"37"},{"size":440,"mtime":1642008106576,"results":"63","hashOfConfig":"54"},{"size":4660,"mtime":1666353486032,"results":"64","hashOfConfig":"37"},{"size":16589,"mtime":1674565844914,"results":"65","hashOfConfig":"37"},{"size":7225,"mtime":1674565827869,"results":"66","hashOfConfig":"37"},{"size":202,"mtime":1667313223726,"results":"67","hashOfConfig":"37"},{"size":4502,"mtime":1666883062859,"results":"68","hashOfConfig":"37"},{"size":10703,"mtime":1674565934360,"results":"69","hashOfConfig":"37"},{"size":386,"mtime":1664378350858,"results":"70","hashOfConfig":"37"},{"size":1034,"mtime":1667553607038,"results":"71","hashOfConfig":"37"},{"size":556,"mtime":1669391554973,"results":"72","hashOfConfig":"37"},{"size":225,"mtime":1669809056859,"results":"73","hashOfConfig":"37"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"z32ji8",{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"76"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f0e5p2",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},"1eaajj",{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"/Users/gregdorward/Development/football-predictions/src/index.js",[],["153","154"],"/Users/gregdorward/Development/football-predictions/src/App.js",["155","156","157","158","159","160"],"import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./components/Header\";\nimport { Button } from \"./components/Button\";\nimport OddsRadio from \"./components/OddsRadio\";\nimport { selectedOdds } from \"./components/OddsRadio\";\nimport Collapsable from \"./components/CollapsableElement\";\nimport { StyledKofiButton } from \"./components/KofiButton\";\nimport DateField from \"./components/DateForm\";\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  RedditShareButton,\n  RedditIcon,\n  TelegramShareButton,\n  TelegramIcon,\n  TwitterShareButton,\n  TwitterIcon,\n  WhatsappShareButton,\n  WhatsappIcon,\n} from \"react-share\";\n\nimport { generateFixtures } from \"./logic/getFixtures\";\nimport { selectedOption } from \"./components/radio\";\nimport { ThreeDots } from \"react-loading-icons\";\n// import { Toggles } from \"./components/Toggle\";\nimport reactDom from \"react-dom\";\n// require(\"dotenv\").config();\n\nexport const proxyurl = \"https://safe-caverns-99679.herokuapp.com/\";\nexport var fixtureList = [];\nexport let allLeagueData = [];\n\nexport const availableLeagues = [];\nexport var orderedLeagues = [];\n\nconst leagueOrder = [\n  7432, //World Cup 22\n  7704, //premier league 22/23\n  7593, //championship 22/23\n  7570, //league 1 22/23\n  7574, //league 2 22/23\n  7729, //National league 22/23\n  7665, //La Liga 22/23\n  7494, //Scottish Prem 22/23\n  7664, //Bundesliga 22/23\n  7608, //Serie A 22/23\n  7500, //French Prem 22/23\n  7731, //Portagul Prem 22/23\n  7482, //Dutch Prem 22/23\n  7544, //Belgian Pro League 22/23\n  7064, //sweden 22\n  7426, //Danish Prem 22/23\n  7048, //Norway Prem 22\n  7890, //Austrian Prem 22/23\n  7954, //Greek Prem 22/23\n  7428, //Polish prem 22/23\n  6967, //Irish Prem 22\n  4340, //Womens Euros 22\n  7592, //Spanish secunda 22/23\n  7864, //Italy serie B 22/23\n  7499, //Bundesliga 2 22/23\n  7591, //German 3rd tier 22/23\n  7501, //French League 2 22/23\n  7498, //Scottish Championship 22/23\n  7505, //Scottish league 1 22/23\n  7506, //Scottish league 2 22/23\n  7821, //Women's prem 22/23\n  6969, //MLS 22\n  7097, //Brazil prem 22\n  // 6935, //Japan 22\n  // 7061, //S Korea 22\n  7425, //Mexico prem 22/23\n  7956, //National league North and South 22/23\n  8008, //Australian A league 22/23\n];\n\nlet today;\nlet todayFootyStats;\nlet tomorrow;\nlet tomorrowFootyStats;\nlet date;\nlet dateFootyStats;\nlet value;\nlet yesterday;\nlet yesterdayFootyStats;\nlet lastSaturday;\nlet lastSaturdayFootyStats;\nlet historic;\nlet historicFootyStats;\nlet tomorrowsDate;\nlet yesterdaysDate;\nlet saturdayDate;\nlet historicDate;\nlet string;\nlet dateString;\n\n(async function getLeagueList() {\n  let leagueList;\n\n  let i = 0;\n  date = new Date();\n  string = \"Today\";\n\n  async function incrementDate(num, date) {\n    console.log(string);\n    i = i + num;\n    value = i + num;\n    date.setDate(date.getDate() + num);\n    [date, dateFootyStats] = await calculateDate(date);\n    string = dateFootyStats;\n    await renderButtons();\n    // return date;\n  }\n\n  async function decrementDate(num, date) {\n    console.log(string);\n    i = i - num;\n    value = i - num;\n    date.setDate(date.getDate() - num);\n    [date, dateFootyStats] = await calculateDate(date);\n    string = dateFootyStats;\n    dateString = date;\n    console.log(date);\n    console.log(dateFootyStats);\n    await renderButtons();\n    // return date;\n  }\n\n  async function calculateDate(dateString) {\n    console.log(\"calculateDate\");\n    const day = dateString.getDate();\n    const month = dateString.getMonth() + 1;\n    const year = dateString.getFullYear();\n    console.log(string);\n    return [`${month}${day}${year}`, `${year}-${month}-${day}`];\n  }\n\n  [today, todayFootyStats] = await calculateDate(new Date());\n  console.log(todayFootyStats);\n\n  tomorrowsDate = new Date();\n  tomorrowsDate.setDate(tomorrowsDate.getDate() + 1);\n  [tomorrow, tomorrowFootyStats] = await calculateDate(tomorrowsDate);\n\n  yesterdaysDate = new Date();\n  yesterdaysDate.setDate(yesterdaysDate.getDate() - 1);\n  [yesterday, yesterdayFootyStats] = await calculateDate(yesterdaysDate);\n\n  saturdayDate = new Date();\n  saturdayDate.setDate(\n    saturdayDate.getDate() - ((saturdayDate.getDay() + 6) % 7)\n  );\n  saturdayDate.setDate(saturdayDate.getDate() - 2);\n  [lastSaturday, lastSaturdayFootyStats] = await calculateDate(saturdayDate);\n\n  historicDate = new Date();\n  historicDate.setDate(\n    historicDate.getDate() - ((historicDate.getDay() + 6) % 7)\n  );\n  historicDate.setDate(historicDate.getDate() - 9);\n  [historic, historicFootyStats] = await calculateDate(historicDate);\n\n  console.log(today);\n  console.log(tomorrow);\n  console.log(yesterday);\n  console.log(lastSaturday);\n  console.log(historic);\n\n  console.log(process.env.REACT_APP_EXPRESS_SERVER);\n\n  leagueList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}leagueList`);\n\n  let leagueArray;\n  await leagueList.json().then((leagues) => {\n    leagueArray = Array.from(leagues.data);\n  });\n\n  for (let i = 0; i < leagueArray.length; i++) {\n    const league = leagueArray[i];\n    const name = leagueArray[i].name;\n\n    for (let x = 0; x < league.season.length; x++) {\n      const element = league.season[x];\n\n      if (element.year === 2022 || element.year === 20222023) {\n        if (element.id !== 4340 && element.id !== 6935 && element.id !== 7061) {\n          availableLeagues.push({ name: name, element });\n        }\n      }\n    }\n\n    async function mapOrder(array, order, key) {\n      array.sort(function (a, b) {\n        var A = a.element[key],\n          B = b.element[key];\n\n        if (order.indexOf(A) > order.indexOf(B)) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n      return array;\n    }\n    //leagues ordered by id\n    orderedLeagues = await mapOrder(availableLeagues, leagueOrder, \"id\");\n  }\n\n  const text =\n    \"Select a day you would like to retrieve fixtures for from the options above\\n A list of games will be returned once the data has loaded\\n Once all fixtures have loaded, click on “Get Predictions” to see XGTipping's forecasted outcomes for every game\\n If a game has completed, the predictions is displayed on the right and the actual result on the left\\n Each individual fixture is tappable/clickable. By doing so, you can access a range of detailed stats, from comparative charts, granular performance measures to previous meetings.\\n All games are subject to the same automated prediction algorithm with the outcome being a score prediction. Factors that determine the tip include the following, amongst others:\\n - Goal differentials\\n - Expected goal differentials \\n - Attack/Defence performance\\n - Form trends over time\\n - Home/Away records\\n - WDL records\\n - Points per game \\n - A range of other comparative factors\\n  –\\n\";\n\n  const text2 =\n    \"A range of tools are available should you wish to use them\\n Build a multi - Use the '+' or '-' buttons to add or remove a game deemed to be one of XGTIpping's highest confidence tips from the day\\n Exotic of the day: A pre-built exotic multi comprising of XGTipping's highest confidence tips\\n BTTS games: Games where both teams to score is deemed a likely outcome\\n Over 2.5 goals tips: Games where over 2.5 goals are most likely to be scored\\n XG tips: Comprises only games where the expected goal differentials between each team are at their greatest. We believe this shows a true disparity in the form of the two opposing teams\\n Tap the 'How to use' option to hide this text\";\n\n  let textJoined = text.concat(text2);\n\n  let newText = textJoined.split(\"\\n\").map((i) => {\n    return <p>{i}</p>;\n  });\n\n  async function renderButtons() {\n    ReactDOM.render(\n      <div className=\"FixtureButtons\">\n        <div className=\"historicResults\">\n          <Button\n            text={\"Last Saturday\"}\n            className=\"HistoricFixturesButton\"\n            onClickEvent={async () =>\n              fixtureList.push(\n                await generateFixtures(\n                  \"lastSaturday\",\n                  lastSaturday,\n                  selectedOdds,\n                  lastSaturdayFootyStats\n                )\n              )\n            }\n          />\n          {/* <Button\n            text={\"Historic predictions\"}\n            className=\"HistoricFixturesButtonRight\"\n            onClickEvent={async () =>\n              fixtureList.push(\n                await generateFixtures(\n                  \"historic\",\n                  historic,\n                  selectedOdds,\n                  historicFootyStats\n                )\n              )\n            }\n          /> */}\n        </div>\n        <Button\n          text={`<`}\n          className=\"FixturesButton\"\n          // onClickEvent={async () =>\n          //   fixtureList.push(\n          //     await generateFixtures(\n          //       \"yesterdaysFixtures\",\n          //       yesterday,\n          //       selectedOdds,\n          //       yesterdayFootyStats\n          //     )\n          //   )\n          // }\n          onClickEvent={async () => await decrementDate(1, date)}\n        />\n        <Button\n          text={dateFootyStats !== undefined ? dateFootyStats : date}\n          className=\"FixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"todaysFixtures\",\n                dateString,\n                selectedOdds,\n                dateFootyStats\n              )\n            )\n          }\n        />\n        <Button\n          text={`Today`}\n          className=\"FixturesButtonToday\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"todaysFixtures\",\n                today,\n                selectedOdds,\n                todayFootyStats\n              )\n            )\n          }\n        />\n        <Button\n          text={\"Tomorrow\"}\n          className=\"FixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"tomorrowsFixtures\",\n                tomorrow,\n                selectedOdds,\n                tomorrowFootyStats\n              )\n            )\n          }\n        />\n      </div>,\n      document.getElementById(\"Buttons\")\n    );\n  }\n\n  ReactDOM.render(\n    <div className=\"FixtureButtons\">\n      <div className=\"historicResults\">\n        <Button\n          text={\"Last Saturday\"}\n          className=\"HistoricFixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"lastSaturday\",\n                lastSaturday,\n                selectedOdds,\n                lastSaturdayFootyStats\n              )\n            )\n          }\n        />\n        {/* <Button\n          text={\"Historic predictions\"}\n          className=\"HistoricFixturesButtonRight\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"historic\",\n                historic,\n                selectedOdds,\n                historicFootyStats\n              )\n            )\n          }\n        /> */}\n      </div>\n      <Button\n        text={`<`}\n        className=\"FixturesButton\"\n        onClickEvent={async () => await decrementDate(1, date)}\n      />\n      <Button\n        text={`${string}`}\n        className=\"FixturesButtonToday\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"todaysFixtures\",\n              today,\n              selectedOdds,\n              todayFootyStats\n            )\n          )\n        }\n      />\n      <Button\n        text={\"Tomorrow\"}\n        className=\"FixturesButton\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"tomorrowsFixtures\",\n              tomorrow,\n              selectedOdds,\n              tomorrowFootyStats\n            )\n          )\n        }\n      />\n    </div>,\n    document.getElementById(\"Buttons\")\n  );\n  ReactDOM.render(\n    <div className=\"OddsRadios\">\n      <OddsRadio value=\"Fractional odds\"></OddsRadio>\n      <OddsRadio value=\"Decimal odds\"></OddsRadio>\n    </div>,\n    document.getElementById(\"Checkbox\")\n  );\n  ReactDOM.render(\n    <Fragment>\n      <Collapsable\n        // className={\"HowToUse\"}\n        buttonText={\"How to use\"}\n        element={newText}\n      />\n    </Fragment>,\n    document.getElementById(\"XGDiff\")\n  );\n\n  // ReactDOM.render(\n  //   <div className=\"Explainer\">\n  //     <em>\n  //       To discount pre-season form and last seasons' games, only matchs taking\n  //       place after the 3rd gameweek in their respective leagues are currently\n  //       being predicted by default. Click below if you want to see all\n  //       predictions (not recommended)\n  //     </em>\n  //     <div>\n  //       <Toggles />\n  //     </div>\n  //   </div>,\n  //   document.getElementById(\"ExplainerText\")\n  // );\n  // console.log(Toggles.isOff);\n\n  ReactDOM.render(\n    <Button\n      text={\"Lowest scoring leagues\"}\n      className={\"Under25TeamsButton\"}\n      onClickEvent={async () => {\n        let leagues = await getLowestScoringLeagues();\n        const leagueList = [];\n\n        leagues.forEach(async (league) =>\n          leagueList.push(\n            <ul className=\"GlobalStat\">\n              <p className=\"TeamName\">\n                {league.league} ({league.leagueCountry})\n              </p>\n              <li>Average goals: {league.averageGoals}</li>\n              <li>Under 2.5 goals %: {league.under25Percentage}%</li>\n            </ul>\n          )\n        );\n\n        reactDom.render(\n          <div>\n            <h3>Leagues with the lowest scoring games</h3>\n            <ul>{leagueList}</ul>\n          </div>,\n          document.getElementById(\"Under25Games\")\n        );\n      }}\n    ></Button>,\n    document.getElementById(\"Under25Games\")\n  );\n\n  ReactDOM.render(\n    <Button\n      text={\"Highest scoring leagues\"}\n      className={\"Over25TeamsButton\"}\n      onClickEvent={async () => {\n        let leagues = await getHighestScoringLeagues();\n        const leagueList = [];\n\n        leagues.forEach(async (league) =>\n          leagueList.push(\n            <ul className=\"GlobalStat\">\n              <p className=\"TeamName\">\n                {league.league} ({league.leagueCountry})\n              </p>\n              <li>Average goals: {league.averageGoals}</li>\n              <li>Over 2.5 goals %: {league.over25Percentage}%</li>\n            </ul>\n          )\n        );\n\n        reactDom.render(\n          <div>\n            <h3>Leagues with the highest scoring games</h3>\n            <ul>{leagueList}</ul>\n          </div>,\n          document.getElementById(\"Over25Games\")\n        );\n      }}\n    ></Button>,\n    document.getElementById(\"Over25Games\")\n  );\n})();\n\nasync function getHighestScoringLeagues() {\n  console.log(\"getHighestScoringLeagues\");\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}over25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    console.log(leagues.data);\n    for (let index = 0; index < 215; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        over25Percentage:\n          leagues.data.top_leagues.data[index].seasonOver25Percentage_overall,\n        division: leagues.data.top_leagues.data[index].division,\n        leagueId: leagues.data.top_leagues.data[index].id,\n      };\n      arr.push(league);\n    }\n  });\n\n  const finalArray = arr.filter(\n    (league) =>\n      leagueOrder.find((element) => element === league.leagueId) &&\n      league.averageGoals >= 2.5\n  );\n\n  let sortedArray = finalArray.sort((a, b) => b.averageGoals - a.averageGoals);\n\n  return sortedArray;\n}\n\nasync function getLowestScoringLeagues() {\n  console.log(\"getLowestScoringLeagues\");\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}under25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    console.log(leagues.data);\n    for (let index = 0; index < 215; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        under25Percentage:\n          leagues.data.top_leagues.data[index].seasonUnder25Percentage_overall,\n        leagueId: leagues.data.top_leagues.data[index].id,\n      };\n      arr.push(league);\n    }\n  });\n\n  const finalArray = arr.filter(\n    (league) =>\n      leagueOrder.find((element) => element === league.leagueId) &&\n      league.averageGoals < 2.5\n  );\n\n  let sortedArray = finalArray.sort((a, b) => a.averageGoals - b.averageGoals);\n\n  return sortedArray;\n}\n\nfunction App() {\n  console.log(\"App\");\n  return (\n    <div className=\"App\">\n      <Header />\n      <a\n        className=\"SocialLink\"\n        href=\"https://www.reddit.com/r/xgtipping/\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        r/xgtipping\n      </a>\n      <div id=\"LoadingContainer\" className=\"LoadingContainer\" />\n      <div id=\"RadioContainer\" className=\"RadioContainer\">\n        <div id=\"RadioText\" />\n        <div id=\"RadioButtons\" />\n      </div>\n      <div id=\"Day\" />\n      <div id=\"Checkbox\" />\n      <div id=\"ExplainerText\" />\n      <div id=\"Loading\" className=\"Loading\"></div>\n      <div id=\"Buttons\" className=\"Buttons\">\n        <ThreeDots className=\"MainLoading\" fill=\"#030061\" />\n        <div>Loading all fixture and form data...</div>\n      </div>\n      <div id=\"GeneratePredictions\" className=\"GeneratePredictions\" />\n      <div id=\"bestPredictions\" className=\"bestPredictions\" />\n      <div id=\"exoticOfTheDay\" className=\"exoticOfTheDay\" />\n      <div id=\"successMeasure2\" />\n      <div id=\"RowOneContainer\" className=\"RowOneContainer\">\n        <div id=\"BTTS\" className=\"RowOne\" />\n        <div id=\"longShots\" className=\"RowOne\" />\n        <div id=\"draws\" className=\"RowOne\" />\n      </div>\n      <div id=\"insights\" />\n      <div id=\"successMeasure\" />\n      <div id=\"tables\" />\n      <div id=\"homeBadge\" />\n      <div id=\"FixtureContainerHeaders\"></div>\n      <StyledKofiButton buttonText=\"Donations\"></StyledKofiButton>\n      <div id=\"XGDiff\" />\n      <div id=\"FixtureContainer\">\n        <div>\n          <h4 className=\"WelcomeText\">\n            Global fixtures and predictions from 30+ league competitions,\n            including\n          </h4>\n          <ul className=\"AllLeagues\">\n            <li className=\"League\">Premier League</li>\n            <li className=\"League\">La Liga</li>\n            <li className=\"League\">Serie A</li>\n            <li className=\"League\">Bundesliga</li>\n            <li className=\"League\">Ligue 1</li>\n            <li className=\"League\">MLS</li>\n            <li className=\"League\">Primeira Liga</li>\n          </ul>\n          <div className=\"WelcomeText\">\n            Predictions are based off a range of comparison points, from XG\n            differentials to more granular stats within a team's last 10 games.\n            All tips are fully automated and are based the form at the time,\n            using the latest prediction algorithm.\n          </div>\n          <div className=\"DataText\">Raw data from</div>\n          <a\n            className=\"DataLink\"\n            href=\"https://www.footystats.org\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            footystats.org\n          </a>\n        </div>\n      </div>\n      <div id=\"Over25Games\" className=\"Over25Games\"></div>\n      <div id=\"Under25Games\" className=\"Under25Games\"></div>\n      <div className=\"Social\">\n        <TwitterShareButton\n          url={\"www.xgtipping.com\"}\n          title={\"#XGTipping\"}\n          className=\"ShareButton\"\n          style={{ backgroundColor: \"#e2e2e26c\", boxShadow: \"none\" }}\n        >\n          <TwitterIcon size={\"3em\"} round={true} />\n        </TwitterShareButton>\n        <FacebookShareButton\n          url={\"www.xgtipping.com\"}\n          quote={\"XGTipping - data-driven football predictions\"}\n          className=\"ShareButton\"\n          style={{ backgroundColor: \"#e2e2e26c\", boxShadow: \"none\" }}\n        >\n          <FacebookIcon size={\"3em\"} round={true} />\n        </FacebookShareButton>\n        <RedditShareButton\n          url={\"www.xgtipping.com\"}\n          title={\"XGTipping\"}\n          className=\"ShareButton\"\n          style={{ backgroundColor: \"#e2e2e26c\", boxShadow: \"none\" }}\n        >\n          <RedditIcon size={\"3em\"} round={true} />\n        </RedditShareButton>\n        <WhatsappShareButton\n          url={\"www.xgtipping.com\"}\n          title={\"XGTipping\"}\n          separator=\": \"\n          className=\"ShareButton\"\n          style={{ backgroundColor: \"#e2e2e26c\", boxShadow: \"none\" }}\n        >\n          <WhatsappIcon size={\"3em\"} round={true} />\n        </WhatsappShareButton>\n        <TelegramShareButton\n          url={\"XGTipping\"}\n          title={\"XGTipping\"}\n          className=\"ShareButton\"\n          style={{ backgroundColor: \"#e2e2e26c\", boxShadow: \"none\" }}\n        >\n          <TelegramIcon size={\"3em\"} round={true} />\n        </TelegramShareButton>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/gregdorward/Development/football-predictions/src/reportWebVitals.js",[],"/Users/gregdorward/Development/football-predictions/src/components/spinner.js",[],"/Users/gregdorward/Development/football-predictions/src/components/showCardPotential.js",[],"/Users/gregdorward/Development/football-predictions/src/components/createBadge.js",[],"/Users/gregdorward/Development/football-predictions/src/components/showBttsData.js",[],"/Users/gregdorward/Development/football-predictions/src/components/radio.js",[],"/Users/gregdorward/Development/football-predictions/src/components/Header.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/getFixtures.js",["161","162"],"/Users/gregdorward/Development/football-predictions/src/components/createStatsDiv.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/getForm.js",[],"/Users/gregdorward/Development/football-predictions/src/components/Button.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/getScorePredictions.js",["163","164","165","166","167","168"],"/Users/gregdorward/Development/football-predictions/src/components/CollapsableElement.js",["169"],"import React, { Component } from \"react\";\nimport Collapsible from \"react-collapsible\";\n\nconst Collapsable = (props) => {\n  return (\n    <Collapsible transitionTime={300} trigger={<button className={props.classNameButton}>{props.buttonText}</button>} className={props.className? props.className: \"Collapsable\"}>\n      <div className={props.classNameFlex? props.classNameFlex: \"\"}>\n      <span className={props.classNameTwo? props.classNameTwo: props.buttonText} style={props.style} key={`123${props.buttonText}`}>{props.element}</span>\n      <span className={props.classNameThree? props.classNameTwo: props.buttonText} key={`456${props.buttonText}`}>{props.elementTwo}</span>\n      </div>\n    </Collapsible>\n  );\n};\n\n\nexport default Collapsable;","/Users/gregdorward/Development/football-predictions/src/components/TextSection.js",[],["170","171"],"/Users/gregdorward/Development/football-predictions/src/logic/getStats.js",["172","173","174","175","176","177","178","179","180","181","182","183","184","185"],"/Users/gregdorward/Development/football-predictions/src/components/Div.js",[],"/Users/gregdorward/Development/football-predictions/src/components/CollapsableDiv.js",[],"/Users/gregdorward/Development/football-predictions/src/components/Increment.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/getBTTSPotential.js",[],"/Users/gregdorward/Development/football-predictions/src/components/OddsRadio.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/getTeamStats.js",[],"/Users/gregdorward/Development/football-predictions/src/components/HeadToHead.js",[],"/Users/gregdorward/Development/football-predictions/src/components/BulletList.js",[],["186","187"],"/Users/gregdorward/Development/football-predictions/src/components/Table.js",["188"],"import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    // backgroundColor: \"#dedddd\",\n    padding: 10,\n    textAlign: \"center\",\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    border: \"none\",\n    margin: \"none\",\n    color: 'white',\n    lineHeight: '2em'\n  },\n  body: {\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    padding: 10,\n    color: \"white\",\n    border: \"none\",\n    margin: \"none\",\n    // backgroundColor: '#e2e2e26c'\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#030061\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#030052\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\n\nexport default function CustomizedTables(props) {\n\n\n  return (\n    <TableContainer className=\"StatsTable\">\n      <Table aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Stat</StyledTableCell>\n            <StyledTableCell>H2H history</StyledTableCell>\n            <StyledTableCell>XGTipping forecast</StyledTableCell>\n            <StyledTableCell>Odds (yes)</StyledTableCell>\n            <StyledTableCell>Odds (no)</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        <StyledTableRow key=\"O05\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 0.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o05Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o05Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u05Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O15\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 1.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o15Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o15Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u15Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O25\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 2.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o25Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o25Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u25Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O35\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 3.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o35Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o35Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u35Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"BTTS\" className=\"BTTSStats\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              BTTS %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.BTTSStat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSForecast}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSOdds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSOddsNo}</StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","/Users/gregdorward/Development/football-predictions/src/components/LeagueTable.js",["189"],"/Users/gregdorward/Development/football-predictions/src/components/Fixture.js",["190","191"],"/Users/gregdorward/Development/football-predictions/src/components/KofiButton.js",[],"/Users/gregdorward/Development/football-predictions/src/components/Chart.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/compareFormTrend.js",["192"],"/Users/gregdorward/Development/football-predictions/src/components/Toggle.js",[],["193","194"],"/Users/gregdorward/Development/football-predictions/src/components/Carousel.js",["195"],"import { getThemeProps } from \"@material-ui/styles\";\nimport SwiperCore, { EffectCoverflow, Pagination } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/swiper-bundle.min.css\";\nimport \"swiper/swiper.min.css\";\n\nSwiperCore.use([EffectCoverflow, Pagination]);\n\nexport const Slider = (props) => {\n  return (\n    <Swiper\n      effect={\"coverflow\"}\n      autoHeight={true}\n      grabCursor={true}\n      centeredSlides={true}\n      slidesPerView={1}\n      coverflowEffect={{\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: false,\n      }}\n      pagination={{ clickable: true }}\n      className=\"mySwiper\"\n    >\n      <SwiperSlide>\n       {props.element}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element2}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element3}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element4}\n      </SwiperSlide>\n      <SwiperSlide>\n      {props.element5}\n      </SwiperSlide>\n    </Swiper>\n  );\n};\n","/Users/gregdorward/Development/football-predictions/src/components/DayPicker.js",[],["196","197"],"/Users/gregdorward/Development/football-predictions/src/components/DateForm.js",[],{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":9,"column":8,"nodeType":"204","messageId":"205","endLine":9,"endColumn":17},{"ruleId":"202","severity":1,"message":"206","line":24,"column":10,"nodeType":"204","messageId":"205","endLine":24,"endColumn":24},{"ruleId":"202","severity":1,"message":"207","line":84,"column":5,"nodeType":"204","messageId":"205","endLine":84,"endColumn":10},{"ruleId":"202","severity":1,"message":"208","line":86,"column":5,"nodeType":"204","messageId":"205","endLine":86,"endColumn":24},{"ruleId":"202","severity":1,"message":"209","line":90,"column":5,"nodeType":"204","messageId":"205","endLine":90,"endColumn":23},{"ruleId":"202","severity":1,"message":"210","line":105,"column":18,"nodeType":"204","messageId":"205","endLine":105,"endColumn":31},{"ruleId":"202","severity":1,"message":"211","line":201,"column":16,"nodeType":"204","messageId":"205","endLine":201,"endColumn":30},{"ruleId":"202","severity":1,"message":"212","line":470,"column":9,"nodeType":"204","messageId":"205","endLine":470,"endColumn":19},{"ruleId":"202","severity":1,"message":"213","line":251,"column":7,"nodeType":"204","messageId":"205","endLine":251,"endColumn":13},{"ruleId":"202","severity":1,"message":"214","line":427,"column":16,"nodeType":"204","messageId":"205","endLine":427,"endColumn":33},{"ruleId":"202","severity":1,"message":"215","line":535,"column":9,"nodeType":"204","messageId":"205","endLine":535,"endColumn":39},{"ruleId":"202","severity":1,"message":"216","line":540,"column":9,"nodeType":"204","messageId":"205","endLine":540,"endColumn":27},{"ruleId":"202","severity":1,"message":"217","line":617,"column":7,"nodeType":"204","messageId":"205","endLine":617,"endColumn":16},{"ruleId":"202","severity":1,"message":"218","line":633,"column":5,"nodeType":"204","messageId":"205","endLine":633,"endColumn":6},{"ruleId":"202","severity":1,"message":"219","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":26},{"ruleId":"198","replacedBy":"220"},{"ruleId":"200","replacedBy":"221"},{"ruleId":"202","severity":1,"message":"222","line":5,"column":19,"nodeType":"204","messageId":"205","endLine":5,"endColumn":49},{"ruleId":"202","severity":1,"message":"223","line":8,"column":10,"nodeType":"204","messageId":"205","endLine":8,"endColumn":21},{"ruleId":"202","severity":1,"message":"224","line":9,"column":10,"nodeType":"204","messageId":"205","endLine":9,"endColumn":18},{"ruleId":"202","severity":1,"message":"225","line":248,"column":16,"nodeType":"204","messageId":"205","endLine":248,"endColumn":20},{"ruleId":"202","severity":1,"message":"226","line":284,"column":9,"nodeType":"204","messageId":"205","endLine":284,"endColumn":27},{"ruleId":"202","severity":1,"message":"227","line":285,"column":9,"nodeType":"204","messageId":"205","endLine":285,"endColumn":27},{"ruleId":"202","severity":1,"message":"228","line":448,"column":15,"nodeType":"204","messageId":"205","endLine":448,"endColumn":32},{"ruleId":"202","severity":1,"message":"229","line":449,"column":15,"nodeType":"204","messageId":"205","endLine":449,"endColumn":40},{"ruleId":"202","severity":1,"message":"230","line":450,"column":15,"nodeType":"204","messageId":"205","endLine":450,"endColumn":43},{"ruleId":"202","severity":1,"message":"231","line":559,"column":9,"nodeType":"204","messageId":"205","endLine":559,"endColumn":17},{"ruleId":"202","severity":1,"message":"232","line":739,"column":26,"nodeType":"204","messageId":"205","endLine":739,"endColumn":39},{"ruleId":"202","severity":1,"message":"233","line":742,"column":26,"nodeType":"204","messageId":"205","endLine":742,"endColumn":39},{"ruleId":"202","severity":1,"message":"234","line":746,"column":9,"nodeType":"204","messageId":"205","endLine":746,"endColumn":28},{"ruleId":"202","severity":1,"message":"235","line":753,"column":9,"nodeType":"204","messageId":"205","endLine":753,"endColumn":28},{"ruleId":"198","replacedBy":"236"},{"ruleId":"200","replacedBy":"237"},{"ruleId":"202","severity":1,"message":"238","line":9,"column":8,"nodeType":"204","messageId":"205","endLine":9,"endColumn":13},{"ruleId":"202","severity":1,"message":"223","line":11,"column":10,"nodeType":"204","messageId":"205","endLine":11,"endColumn":21},{"ruleId":"202","severity":1,"message":"239","line":3,"column":8,"nodeType":"204","messageId":"205","endLine":3,"endColumn":19},{"ruleId":"202","severity":1,"message":"240","line":11,"column":5,"nodeType":"204","messageId":"205","endLine":11,"endColumn":13},{"ruleId":"202","severity":1,"message":"241","line":1,"column":10,"nodeType":"204","messageId":"205","endLine":1,"endColumn":15},{"ruleId":"198","replacedBy":"242"},{"ruleId":"200","replacedBy":"243"},{"ruleId":"202","severity":1,"message":"244","line":1,"column":10,"nodeType":"204","messageId":"205","endLine":1,"endColumn":23},{"ruleId":"198","replacedBy":"245"},{"ruleId":"200","replacedBy":"246"},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],"no-unused-vars","'DateField' is defined but never used.","Identifier","unusedVar","'selectedOption' is defined but never used.","'value' is assigned a value but never used.","'yesterdayFootyStats' is assigned a value but never used.","'historicFootyStats' is assigned a value but never used.","'incrementDate' is defined but never used.","'getTableLayout' is defined but never used.","'targetDate' is assigned a value but never used.","'result' is defined but never used.","'getOddsMultiplier' is defined but never used.","'homeAwayPointAverageComparison' is assigned a value but never used.","'fiveGameComparison' is assigned a value but never used.","'remainder' is assigned a value but never used.","'i' is assigned a value but never used.","'Component' is defined but never used.",["247"],["248"],"'allLeagueResultsArrayOfObjects' is defined but never used.","'CreateBadge' is defined but never used.","'Fragment' is defined but never used.","'diff' is defined but never used.","'latestHomeGoalDiff' is assigned a value but never used.","'latestAwayGoalDiff' is assigned a value but never used.","'wonHomeOrAwayOnly' is defined but never used.","'goalsScoredHomeOrAwayOnly' is defined but never used.","'goalsConceededHomeOrAwayOnly' is defined but never used.","'awayTeam' is assigned a value but never used.","'testArrayHome' is assigned a value but never used.","'testArrayAway' is assigned a value but never used.","'rollingGoalDiffHome' is assigned a value but never used.","'rollingGoalDiffAway' is assigned a value but never used.",["247"],["248"],"'Paper' is defined but never used.","'Collapsable' is defined but never used.","'setCount' is assigned a value but never used.","'parse' is defined but never used.",["247"],["248"],"'getThemeProps' is defined but never used.",["247"],["248"],"no-global-assign","no-unsafe-negation"]