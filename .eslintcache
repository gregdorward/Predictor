[{"/Users/gregdorward/Development/football-predictions/src/index.js":"1","/Users/gregdorward/Development/football-predictions/src/App.js":"2","/Users/gregdorward/Development/football-predictions/src/reportWebVitals.js":"3","/Users/gregdorward/Development/football-predictions/src/components/spinner.js":"4","/Users/gregdorward/Development/football-predictions/src/components/showCardPotential.js":"5","/Users/gregdorward/Development/football-predictions/src/components/createBadge.js":"6","/Users/gregdorward/Development/football-predictions/src/components/showBttsData.js":"7","/Users/gregdorward/Development/football-predictions/src/components/radio.js":"8","/Users/gregdorward/Development/football-predictions/src/components/Header.js":"9","/Users/gregdorward/Development/football-predictions/src/logic/getFixtures.js":"10","/Users/gregdorward/Development/football-predictions/src/components/createStatsDiv.js":"11","/Users/gregdorward/Development/football-predictions/src/logic/getForm.js":"12","/Users/gregdorward/Development/football-predictions/src/components/Button.js":"13","/Users/gregdorward/Development/football-predictions/src/logic/getScorePredictions.js":"14","/Users/gregdorward/Development/football-predictions/src/components/FixtureList.js":"15","/Users/gregdorward/Development/football-predictions/src/components/CollapsableElement.js":"16"},{"size":500,"mtime":1611744829708,"results":"17","hashOfConfig":"18"},{"size":2751,"mtime":1611875708594,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1611154372291,"results":"20","hashOfConfig":"18"},{"size":297,"mtime":1611654841360,"results":"21","hashOfConfig":"18"},{"size":0,"mtime":1611654832610,"results":"22","hashOfConfig":"18"},{"size":267,"mtime":1611875205013,"results":"23","hashOfConfig":"18"},{"size":0,"mtime":1611654828618,"results":"24","hashOfConfig":"18"},{"size":874,"mtime":1611875736467,"results":"25","hashOfConfig":"18"},{"size":136,"mtime":1611657160544,"results":"26","hashOfConfig":"18"},{"size":4239,"mtime":1611875291700,"results":"27","hashOfConfig":"18"},{"size":628,"mtime":1611875221266,"results":"28","hashOfConfig":"18"},{"size":3697,"mtime":1611875282474,"results":"29","hashOfConfig":"18"},{"size":224,"mtime":1611875197674,"results":"30","hashOfConfig":"18"},{"size":2894,"mtime":1611875298471,"results":"31","hashOfConfig":"18"},{"size":3252,"mtime":1611875249481,"results":"32","hashOfConfig":"18"},{"size":682,"mtime":1611875193333,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1f0e5p2",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/gregdorward/Development/football-predictions/src/index.js",[],["71","72"],"/Users/gregdorward/Development/football-predictions/src/App.js",[],"/Users/gregdorward/Development/football-predictions/src/reportWebVitals.js",[],"/Users/gregdorward/Development/football-predictions/src/components/spinner.js",[],"/Users/gregdorward/Development/football-predictions/src/components/showCardPotential.js",[],"/Users/gregdorward/Development/football-predictions/src/components/createBadge.js",["73"],"import React, { Component } from \"react\";\n\nexport function CreateBadge(props) {\n  return (\n    <img\n      src={`https://cdn.footystats.org/img/${props.image}`}\n      className={props.ClassName}\n      alt={props.alt}\n      flex-shrink={props.flexShrink}\n    />\n  );\n}\n","/Users/gregdorward/Development/football-predictions/src/components/showBttsData.js",[],"/Users/gregdorward/Development/football-predictions/src/components/radio.js",[],"/Users/gregdorward/Development/football-predictions/src/components/Header.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/getFixtures.js",["74"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport createStatsDiv from \"../components/createStatsDiv\";\nimport { availableLeagues, proxyurl } from \"../App\";\nimport { getForm, applyColour } from \"./getForm\";\nimport { FixtureList } from \"../components/FixtureList\";\nimport { Button } from \"../components/Button\";\nimport { getScorePrediction } from \"../logic/getScorePredictions\";\nvar fixtureResponse;\nvar fixtureArray;\nexport const matches = [];\nvar radioValue;\nvar leagueGames = [];\n\nexport const [day, month, year] = new Date()\n  .toLocaleDateString(\"en-US\")\n  .split(\"/\");\nlet tomorrowsDate = new Date();\ntomorrowsDate.setDate(new Date().getDate() + 1);\nlet [\n  tomorrowDay,\n  tomorrowMonth,\n  tomorrowYear,\n] = tomorrowsDate.toLocaleDateString(\"en-US\").split(\"/\");\n\nexport const today = `https://api.footystats.org/todays-matches?key=${process.env.REACT_APP_API_KEY}&date=${year}-${day}-${month}`;\nexport const tomorrow = `https://api.footystats.org/todays-matches?key=${process.env.REACT_APP_API_KEY}&date=${tomorrowYear}-${tomorrowDay}-${tomorrowMonth}`;\n\nexport function getRadioState(state) {\n  let radioState = state;\n  return radioState;\n}\n\nexport async function getMatchStats(id, item) {\n  let matchDetail = await fetch(\n    proxyurl +\n      `https://api.footystats.org/match?key=${process.env.REACT_APP_API_KEY}&match_id=` +\n      id\n  );\n\n  let stats;\n  await matchDetail.json().then((data) => {\n    let arr1 = data.data.trends.team_a;\n    let arr2 = data.data.trends.team_b;\n    stats = arr1.concat(arr2);\n  });\n  createStatsDiv(stats, item);\n}\n\nasync function createFixture(match) {\n  console.log(\"3\");\n\n  match.game = match.homeTeam + \" v \" + match.awayTeam;\n\n  //   ReactDOM.render(<CreateBadge image={match.homeBadge}/>, document.getElementById(\"homeBadge\"));\n  ReactDOM.render(\n    <FixtureList fixtures={matches} result={false} />,\n    document.getElementById(\"FixtureContainer\")\n  );\n\n  // item.addEventListener(\"mouseover\", function (event) {\n  //   // highlight the mouseover target\n  //   event.target.style.color = \"orange\";\n  //   item.onmouseout = logMouseOut;\n  //   function logMouseOut() {\n  //     event.target.style.color = \"\";\n  //   }\n  // });\n\n  let matchId = match.id;\n\n  //   item.onclick = await function () {\n  //     getMatchStats(matchId, item);\n  //   };\n\n  //   let linebreak = document.createElement(\"br\");\n  //   item.appendChild(linebreak);\n}\n\nexport async function generateFixtures(day, radioState) {\n  radioValue = radioState;\n\n  console.log(\"This is the radio state \" + radioValue);\n  fixtureResponse = await fetch(proxyurl + day);\n\n  await fixtureResponse.json().then((fixtures) => {\n    fixtureArray = Array.from(fixtures.data);\n  });\n\n  for (let i = 0; i < availableLeagues.length; i++) {\n    leagueGames = fixtureArray.filter(\n      (game) => game.competition_id === availableLeagues[i].element.id\n    );\n\n    for (const fixture of leagueGames) {\n      let match = {};\n\n      match.id = fixture.id;\n      match.homeTeam = fixture.home_name;\n      match.awayTeam = fixture.away_name;\n      match.homeOdds = fixture.odds_ft_1;\n      match.awayOdds = fixture.odds_ft_2;\n      match.homeId = fixture.homeID;\n      match.awayId = fixture.awayID;\n      match.homeTeamForm = await getForm(match.homeId, \"home\", radioValue);\n      match.awayTeamForm = await getForm(match.awayId, \"away\", radioValue);\n      match.homeBadge = fixture.home_image;\n      match.awayBadge = fixture.away_image;\n\n      match.homeXG = parseFloat(fixture.team_a_xg_prematch);\n      match.awayXG = parseFloat(fixture.team_b_xg_prematch);\n\n      match.homePpg = fixture.home_ppg.toFixed(2);\n      console.log(\"1\");\n      match.homeFormColour = await applyColour(match.homePpg);\n\n      match.awayPpg = fixture.away_ppg.toFixed(2);\n      match.awayFormColour = await applyColour(match.awayPpg);\n\n      console.log(\"2\");\n\n      match.status = fixture.status;\n\n      match.btts_potential = fixture.btts_potential;\n      match.game = match.homeTeam + \" v \" + match.awayTeam;\n\n      matches.push(match);\n\n      await createFixture(match);\n    }\n  }\n  ReactDOM.render(\n    <Button\n      text={\"Get Predictions\"}\n      onClickEvent={() => getScorePrediction()}\n    />,\n    document.getElementById(\"Buttons\")\n  );\n}\n","/Users/gregdorward/Development/football-predictions/src/components/createStatsDiv.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/getForm.js",["75","76"],"import { proxyurl } from \"../App\";\nvar divider;\nconst allForm = [];\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nexport async function applyColour(value) {\n  let colour;\n  switch (true) {\n    case value < 0.49:\n      colour = \"#CD5C5C\";\n      break;\n    case value >= 0.5 && value <= 1:\n      colour = \"#F08080\";\n      break;\n    case value >= 1.01 && value <= 1.25:\n      colour = \"#FFA07A\";\n      break;\n    case value >= 1.26 && value <= 1.5:\n      colour = \"#FFFFE0\";\n      break;\n    case value >= 1.51 && value <= 2:\n      colour = \"#CFDBC5\";\n      break;\n    case value >= 2.01 && value <= 2.5:\n      colour = \"#8AA37B\";\n      break;\n    case value >= 2.51 && value <= 3:\n      colour = \"#3F6826\";\n      break;\n    default:\n      colour = \"white\";\n      break;\n  }\n  return colour;\n}\n\nexport async function getForm(teamId, homeOrAway, radio) {\n  let form = {};\n  let radioValue = parseInt(radio);\n\n  let index;\n  if (radioValue === 5) {\n    index = 0;\n    divider = 5;\n  } else if (radioValue === 6) {\n    index = 1;\n    divider = 6;\n  } else if (radioValue === 10) {\n    index = 2;\n    divider = 10;\n  }\n\n  console.log(\"RADIO VALUE + \" + radioValue);\n\n  console.log(\"INDEX VALUE = \" + index);\n\n  let response = await fetch(\n    proxyurl +\n      `https://api.footystats.org/lastx?key=${process.env.REACT_APP_API_KEY}&team_id=` +\n      teamId\n  );\n  await response.json().then((data) => {\n    let defenceScore;\n    console.log(data);\n\n    form.averageXGConceded = data.data[index].stats.xg_against_avg_overall;\n    form.name = data.data[index].name;\n    if (homeOrAway === \"home\") {\n      form.averageXG = data.data[index].stats.xg_for_avg_home;\n      form.averageGoals = data.data[index].stats.seasonScoredAVG_home;\n      form.bttsPercentage = data.data[index].stats.seasonBTTSPercentage_home;\n\n      form.averageGoalsConceded =\n        data.data[index].stats.seasonConceded_overall / divider;\n\n      defenceScore = parseInt(data.data[index].stats.seasonCSPercentage_home);\n    } else if (homeOrAway === \"away\") {\n      form.averageXG = data.data[index].stats.xg_for_avg_away;\n      form.averageGoals = data.data[index].stats.seasonScoredAVG_away;\n      form.bttsPercentage = data.data[index].stats.seasonBTTSPercentage_away;\n\n      form.averageGoalsConceded =\n        data.data[index].stats.seasonConceded_overall / divider;\n\n      defenceScore = parseInt(data.data[index].stats.seasonCSPercentage_away);\n    }\n\n    if (parseFloat(form.averageXG).toFixed(2) != 0.0) {\n      form.finishingScore = parseFloat(\n        (form.averageGoals / form.averageXG).toFixed(2)\n      );\n    } else {\n      form.finishingScore = 0.0;\n    }\n\n    if (parseFloat(form.averageGoalsConceded).toFixed(2) != 0.0) {\n      form.goalieRating = parseFloat(\n        (form.averageXGConceded / form.averageGoalsConceded).toFixed(2)\n      );\n    } else {\n      form.goalieRating = 2;\n    }\n\n    form.forecastedXG = form.averageXG * form.finishingScore;\n\n    switch (true) {\n      case defenceScore < 20:\n        form.defenceRating = 0;\n        break;\n      case defenceScore >= 20 && defenceScore < 40:\n        form.defenceRating = 0.2;\n        break;\n      case defenceScore >= 40 && defenceScore < 60:\n        form.defenceRating = 0.4;\n        break;\n      case defenceScore >= 60 && defenceScore < 80:\n        form.defenceRating = 0.8;\n        break;\n      case defenceScore >= 80:\n        form.defenceRating = 1;\n        break;\n      default:\n        break;\n    }\n  });\n  form.finalFinishingScore = parseFloat(await diff(form.finishingScore, 1));\n\n  form.finalGoalieRating = parseFloat(await diff(form.goalieRating, 1));\n\n  allForm.push(form);\n  console.log(form);\n  return form;\n}\n","/Users/gregdorward/Development/football-predictions/src/components/Button.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/getScorePredictions.js",["77","78"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { diff } from \"./getForm\";\nimport { matches } from \"./getFixtures\";\nimport { FixtureList } from \"../components/FixtureList\";\n\n//Calculates scores based on prior XG figures, weighted by odds\nexport async function calculateScore(match) {\n  let homeRaw;\n  let awayRaw;\n  if (match.homeOdds == 0 && match.awayOdds == 0) {\n    homeRaw = 0.0;\n    awayRaw = 0.0;\n  } else {\n    homeRaw = (1 / match.homeOdds).toFixed(2);\n    awayRaw = (1 / match.awayOdds).toFixed(2);\n  }\n\n  let formHome = match.homeTeamForm;\n  let formAway = match.awayTeamForm;\n\n  let accuracyHome = formHome.finalFinishingScore;\n  let defenceHome = parseFloat(formHome.defenceRating);\n  let goalieHome = formHome.finalGoalieRating;\n  let forecastedXGHome = formHome.forecastedXG;\n  let defenceScoreHome = (defenceHome + goalieHome) / 2;\n\n  let accuracyAway = formAway.finalFinishingScore;\n  let defenceAway = parseFloat(formAway.defenceRating);\n  let goalieAway = formAway.finalGoalieRating;\n  let forecastedXGAway = formAway.forecastedXG;\n\n  let defenceScoreAway = (defenceAway + goalieAway) / 2;\n\n  let expectedHomeGoals = parseFloat(match.homeXG);\n  let expectedAwayGoals = parseFloat(match.awayXG);\n\n  let calculatedXGHome = (forecastedXGHome + expectedHomeGoals) / 2;\n  let calculatedXGAway = (forecastedXGAway + expectedAwayGoals) / 2;\n\n  let oddsWeightingHome = parseFloat(homeRaw);\n  let oddsWeightingAway = parseFloat(awayRaw);\n\n  let homeWeighting = (\n    (await diff(oddsWeightingHome, oddsWeightingAway)) * 1\n  ).toFixed(2);\n  let awayWeighting = (\n    (await diff(oddsWeightingAway, oddsWeightingHome)) * 1\n  ).toFixed(2);\n\n  let homeCalculation =\n    parseFloat(homeWeighting + accuracyHome) - defenceScoreAway;\n  let awayCalculation =\n    parseFloat(awayWeighting + accuracyAway) - defenceScoreHome;\n\n  //if home calculation is less than 0 -> add this value to the away team goals and vice versa.\n  //also set a baseline calculation score so it cannot go below 0\n\n  if (homeCalculation < -1) {\n    awayCalculation -= homeCalculation / 2;\n    homeCalculation = -1;\n  }\n\n  if (awayCalculation < -1) {\n    homeCalculation -= awayCalculation / 2;\n    awayCalculation = -1;\n  }\n\n  let homeGoals = Math.round(parseFloat(calculatedXGHome) + homeCalculation);\n  let awayGoals = Math.round(parseFloat(calculatedXGAway) + awayCalculation);\n\n  return [homeGoals, awayGoals];\n}\n\nexport async function getScorePrediction() {\n  await Promise.all(\n    matches.map(async (match) => {\n      let [goalsA, goalsB] = await calculateScore(match);\n      match.goalsA = goalsA;\n      match.goalsB = goalsB;\n      if (match.status === \"suspended\") {\n        goalsA = \"P\";\n        goalsB = \"P\";\n      }\n\n      ReactDOM.render(\n        <FixtureList match={match} matches={matches} result={true} />,\n        document.getElementById(\"FixtureContainer\")\n      );\n    })\n  );\n}\n","/Users/gregdorward/Development/football-predictions/src/components/FixtureList.js",[],"/Users/gregdorward/Development/football-predictions/src/components/CollapsableElement.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":26},{"ruleId":"83","severity":1,"message":"87","line":70,"column":7,"nodeType":"85","messageId":"86","endLine":70,"endColumn":14},{"ruleId":"88","severity":1,"message":"89","line":91,"column":47,"nodeType":"90","messageId":"91","endLine":91,"endColumn":49},{"ruleId":"88","severity":1,"message":"89","line":99,"column":58,"nodeType":"90","messageId":"91","endLine":99,"endColumn":60},{"ruleId":"88","severity":1,"message":"92","line":11,"column":22,"nodeType":"90","messageId":"91","endLine":11,"endColumn":24},{"ruleId":"88","severity":1,"message":"92","line":11,"column":45,"nodeType":"90","messageId":"91","endLine":11,"endColumn":47},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'matchId' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]