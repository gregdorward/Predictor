[{"/Users/gregdorward/Development/football-predictions/src/index.js":"1","/Users/gregdorward/Development/football-predictions/src/App.js":"2","/Users/gregdorward/Development/football-predictions/src/reportWebVitals.js":"3","/Users/gregdorward/Development/football-predictions/src/components/spinner.js":"4","/Users/gregdorward/Development/football-predictions/src/components/showCardPotential.js":"5","/Users/gregdorward/Development/football-predictions/src/components/createBadge.js":"6","/Users/gregdorward/Development/football-predictions/src/components/showBttsData.js":"7","/Users/gregdorward/Development/football-predictions/src/components/radio.js":"8","/Users/gregdorward/Development/football-predictions/src/components/Header.js":"9","/Users/gregdorward/Development/football-predictions/src/logic/getFixtures.js":"10","/Users/gregdorward/Development/football-predictions/src/components/createStatsDiv.js":"11","/Users/gregdorward/Development/football-predictions/src/logic/getForm.js":"12","/Users/gregdorward/Development/football-predictions/src/components/Button.js":"13","/Users/gregdorward/Development/football-predictions/src/logic/getScorePredictions.js":"14","/Users/gregdorward/Development/football-predictions/src/components/CollapsableElement.js":"15","/Users/gregdorward/Development/football-predictions/src/components/TextSection.js":"16","/Users/gregdorward/Development/football-predictions/src/logic/getStats.js":"17","/Users/gregdorward/Development/football-predictions/src/components/Div.js":"18","/Users/gregdorward/Development/football-predictions/src/components/Fixture.js":"19","/Users/gregdorward/Development/football-predictions/src/components/CollapsableDiv.js":"20","/Users/gregdorward/Development/football-predictions/src/components/Increment.js":"21","/Users/gregdorward/Development/football-predictions/src/logic/getBTTSPotential.js":"22","/Users/gregdorward/Development/football-predictions/src/components/OddsRadio.js":"23","/Users/gregdorward/Development/football-predictions/src/logic/getTeamStats.js":"24","/Users/gregdorward/Development/football-predictions/src/components/HeadToHead.js":"25","/Users/gregdorward/Development/football-predictions/src/components/BulletList.js":"26","/Users/gregdorward/Development/football-predictions/src/components/Table.js":"27"},{"size":500,"mtime":1623321958283,"results":"28","hashOfConfig":"29"},{"size":6711,"mtime":1631532127853,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1612138266385,"results":"31","hashOfConfig":"29"},{"size":297,"mtime":1611654841360,"results":"32","hashOfConfig":"29"},{"size":0,"mtime":1611654832610,"results":"33","hashOfConfig":"29"},{"size":252,"mtime":1612138266381,"results":"34","hashOfConfig":"29"},{"size":0,"mtime":1611654828618,"results":"35","hashOfConfig":"29"},{"size":963,"mtime":1621262249615,"results":"36","hashOfConfig":"29"},{"size":144,"mtime":1623942523306,"results":"37","hashOfConfig":"29"},{"size":30619,"mtime":1631547814490,"results":"38","hashOfConfig":"29"},{"size":3154,"mtime":1631290441248,"results":"39","hashOfConfig":"29"},{"size":1222,"mtime":1627911388038,"results":"40","hashOfConfig":"29"},{"size":273,"mtime":1625047346682,"results":"41","hashOfConfig":"29"},{"size":56020,"mtime":1631547874055,"results":"42","hashOfConfig":"29"},{"size":650,"mtime":1616070225969,"results":"43","hashOfConfig":"29"},{"size":180,"mtime":1612138266381,"results":"44","hashOfConfig":"29"},{"size":16257,"mtime":1631289719528,"results":"45","hashOfConfig":"29"},{"size":203,"mtime":1624975662098,"results":"46","hashOfConfig":"29"},{"size":6497,"mtime":1631289061502,"results":"47","hashOfConfig":"29"},{"size":595,"mtime":1614865093901,"results":"48","hashOfConfig":"29"},{"size":1506,"mtime":1631031126580,"results":"49","hashOfConfig":"29"},{"size":1542,"mtime":1631201618138,"results":"50","hashOfConfig":"29"},{"size":930,"mtime":1621959773714,"results":"51","hashOfConfig":"29"},{"size":1929,"mtime":1630681586024,"results":"52","hashOfConfig":"29"},{"size":998,"mtime":1625222457972,"results":"53","hashOfConfig":"29"},{"size":440,"mtime":1625164455163,"results":"54","hashOfConfig":"29"},{"size":3604,"mtime":1630681650728,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1f0e5p2",{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"58"},"/Users/gregdorward/Development/football-predictions/src/index.js",[],["117","118"],"/Users/gregdorward/Development/football-predictions/src/App.js",["119","120","121","122","123","124"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./components/Header\";\nimport Radio from \"./components/radio\";\nimport { Button } from \"./components/Button\";\nimport OddsRadio from \"./components/OddsRadio\";\nimport {selectedOdds} from \"./components/OddsRadio\"\n\nimport {\n  today,\n  generateFixtures,\n  generatePriorFixtures,\n  tomorrow,\n  yesterday,\n} from \"./logic/getFixtures\";\nimport { selectedOption } from \"./components/radio\";\nimport TextBlock from \"./components/TextSection\";\nimport { ThreeDots } from \"react-loading-icons\";\nrequire(\"dotenv\").config();\n\nexport const proxyurl = \"https://safe-caverns-99679.herokuapp.com/\";\nexport var fixtureList = [];\nexport let allLeagueData = [];\n\nexport const availableLeagues = [];\nexport var orderedLeagues = [];\n\n(async function getLeagueList() {\n  let leagueList;\n\n  leagueList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}leagueList`);\n  console.log(leagueList)\n\n  // ReactDOM.render(\n  //   <div className=\"LoadingText\">\n  //     Loading form data. This might take a while if you're the first user\n  //     today...\n  //   </div>,\n  //   document.getElementById(\"RadioButtons\")\n  // );\n\n  let leagueArray;\n  await leagueList.json().then((leagues) => {\n    leagueArray = Array.from(leagues.data);\n  });\n  console.log(leagueArray)\n\n  for (let i = 0; i < leagueArray.length; i++) {\n    const league = leagueArray[i];\n    const name = leagueArray[i].name;\n\n    for (let x = 0; x < league.season.length; x++) {\n      const element = league.season[x];\n      console.log(element)\n\n      if (element.year === 20212022 || element.year === 2021) {\n        if(element.id !== 5784){\n          availableLeagues.push({ name: name, element });\n        }\n      }\n    }\n\n    async function mapOrder(array, order, key) {\n      array.sort(function (a, b) {\n        var A = a.element[key],\n          B = b.element[key];\n\n        if (order.indexOf(A) > order.indexOf(B)) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n      console.log(array)\n      return array;\n    }\n\n    //leagues ordered by id\n    var leagueOrder = [\n      6135, //premier league 21/22\n      6089, //championship\n      6017, //league 1 21/22\n      6015, //league 2 21/22\n      6088, //National league 21/22\n      6211, //\n      5992, //Scottish Prem 21/22\n      6192, //\n      6198, //Serie A\n      6019, //French Prem 21/22\n      6117, //Portagul Prem 21/22\n      5951, //Dutch Prem 21/22\n      6079, //Belgian Pro League 21/22\n      5505, //sweden 21/22\n      5961, //Danish Prem 21\n      5496, //Norway Prem 21\n      6008, //Austrian Prem 21\n      6282, //Greek Prem 21\n      5534, //Irish Prem 21\n      6120, //Spanish secunda 21/22\n      6205, //\n      6020, //Bundesliga 2 21/22\n      6018, //French League 2 21/22\n      5991, //Scottish Championship\n      5976, //Scottish league 1 21/22\n      5974, //Scottish league 2 21/22\n      5361, //TODO\n      5674, //MLS 21\n      5713, //Brazil prem 21\n      5434, //Japan 21\n      5506, //S Korea 21\n      6038, //Mexico prem 21/22`\n\n      6083, //National league North and South 21/22 \n    ];\n\n    orderedLeagues = await mapOrder(availableLeagues, leagueOrder, \"id\");\n  }\n\n  // ReactDOM.render(\n  //   <div className=\"LastXGames\">\n  //     <Radio\n  //       value=\"5\"\n  //       label=\"form based on last 5 games\"\n  //       className=\"FormRadio\"\n  //     />\n  //     <Radio\n  //       value=\"6\"\n  //       label=\"form based on last 6 games\"\n  //       className=\"FormRadio\"\n  //     />\n  //     <Radio\n  //       value=\"10\"\n  //       label=\"form based on last 10 games\"\n  //       className=\"FormRadio\"\n  //     />\n  //   </div>,\n  //   document.getElementById(\"RadioButtons\")\n  // );\n\n  // ReactDOM.render(\n  //   <TextBlock\n  //     text=\"Select how many games you would like to fetch form data for\"\n  //     className=\"RadioText\"\n  //   />,\n  //   document.getElementById(\"RadioText\")\n  // );\n\n\n\n  ReactDOM.render(\n    <div className=\"FixtureButtons\">\n      <Button\n        text={\"Yesterday's prediction outcomes\"}\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\"yesterdaysFixtures\", selectedOption, selectedOdds)\n          )\n        }\n      />\n      <Button\n        text={\"Today's fixtures\"}\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\"todaysFixtures\", selectedOption, selectedOdds)\n          )\n        }\n      />\n      <Button\n        text={\"Tomorrow's fixtures\"}\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\"tomorrowsFixtures\", selectedOption, selectedOdds)\n          )\n        }\n      />\n    </div>,\n    document.getElementById(\"Buttons\")\n  );\n  ReactDOM.render(\n    <div className=\"OddsRadios\">\n      <OddsRadio value=\"Fractional\"></OddsRadio>\n      <OddsRadio value=\"Decimal\"></OddsRadio>\n    </div>,\n    document.getElementById(\"Checkbox\")\n  );\n})();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <a\n        className=\"SocialLink\"\n        href=\"https://www.reddit.com/r/xgtipping/\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        r/xgtipping\n      </a>\n      <div id=\"LoadingContainer\" className=\"LoadingContainer\" />\n      <div id=\"RadioContainer\" className=\"RadioContainer\">\n        <div id=\"RadioText\" />\n        <div id=\"RadioButtons\" />\n      </div>\n      <div id=\"Day\" />\n      <div id=\"Checkbox\" />\n      <div id=\"Buttons\">\n      <ThreeDots className=\"MainLoading\"/>\n        <div>Loading all fixture and form data...</div>\n      </div>\n      <div id=\"successMeasure\" />\n      <div id=\"bestPredictions\" />\n      <div id=\"BTTS\" />\n      <div id=\"longShots\" />\n      <div id=\"homeBadge\" />\n      <div id=\"FixtureContainerHeaders\"></div>\n      <div id=\"FixtureContainer\">\n        <div>\n          <div className=\"WelcomeText\">\n            Global fixtures and predictions from 30 league and cup competitions, including\n          </div>\n          <ul className=\"AllLeagues\">\n            <li className=\"League\">Premier League</li>\n            <li className=\"League\">La Liga</li>\n            <li className=\"League\">Serie A</li>\n            <li className=\"League\">Bundesliga</li>\n            <li className=\"League\">Ligue 1</li>\n            <li className=\"League\">MLS</li>\n            <li className=\"League\">Primeira Liga</li>\n          </ul>\n          <div className=\"DataText\">Powered by data from</div>\n          <a\n            className=\"DataLink\"\n            href=\"https://www.footystats.org\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            footystats.org\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/gregdorward/Development/football-predictions/src/reportWebVitals.js",[],"/Users/gregdorward/Development/football-predictions/src/components/spinner.js",[],"/Users/gregdorward/Development/football-predictions/src/components/showCardPotential.js",[],"/Users/gregdorward/Development/football-predictions/src/components/createBadge.js",[],"/Users/gregdorward/Development/football-predictions/src/components/showBttsData.js",[],"/Users/gregdorward/Development/football-predictions/src/components/radio.js",[],"/Users/gregdorward/Development/football-predictions/src/components/Header.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/getFixtures.js",["125"],"/Users/gregdorward/Development/football-predictions/src/components/createStatsDiv.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/getForm.js",["126","127"],"import { proxyurl } from \"../App\";\n\nconst allTeamForm = [];\n\nexport async function applyColour(value) {\n  let colour;\n  switch (true) {\n    case value < 0.49:\n      colour = \"#CD5C5C\";\n      break;\n    case value >= 0.5 && value <= 1:\n      colour = \"#F08080\";\n      break;\n    case value >= 1.01 && value <= 1.25:\n      colour = \"#FFA07A\";\n      break;\n    case value >= 1.26 && value <= 1.5:\n      colour = \"#FFFFE0\";\n      break;\n    case value >= 1.51 && value <= 2:\n      colour = \"#CFDBC5\";\n      break;\n    case value >= 2.01 && value <= 2.5:\n      colour = \"#8AA37B\";\n      break;\n    case value >= 2.51 && value <= 3:\n      colour = \"#3F6826\";\n      break;\n    default:\n      colour = \"white\";\n      break;\n  }\n  return colour;\n}\n\nexport async function getForm(match) {\n  const teams = [match.homeId, match.awayId];\n  const fixtureForm = [];\n\n  for (let i = 0; i < teams.length; i++) {\n    const team = teams[i];\n\n    let response = await fetch(\n      `${process.env.REACT_APP_EXPRESS_SERVER}form/${team}`\n    );\n    await response.json().then((formData) => {\n      console.log(formData.data[0].season_format)\n      fixtureForm[i] = formData;\n      console.log(fixtureForm[i])\n    });\n  }\n  return fixtureForm;\n}\n","/Users/gregdorward/Development/football-predictions/src/components/Button.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/getScorePredictions.js",["128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148"],"/Users/gregdorward/Development/football-predictions/src/components/CollapsableElement.js",[],"/Users/gregdorward/Development/football-predictions/src/components/TextSection.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/getStats.js",["149","150"],"import ReactDOM from \"react-dom\";\nimport { Button } from \"../components/Button\";\nimport Stats from \"../components/createStatsDiv\";\nimport Div from \"../components/Div\";\nimport { selectedOption } from \"../components/radio\";\nimport { allForm, leagueArray } from \"../logic/getFixtures\";\nimport { getTeamStats } from \"../logic/getTeamStats\";\nimport { getPointsFromLastX } from \"../logic/getScorePredictions\"\n\nlet testBool;\n\nexport async function createStatsDiv(game, mock) {\n  let bool = mock;\n\n  if (bool !== true) {\n    let radioSelected = 10\n\n    function toggle() {\n      testBool = testBool ? false : true;\n      console.log(\"Toggled bool is\", testBool);\n      if (testBool === true) {\n        // set stats element to display flex\n        return { display: \"block\" };\n      } else {\n        // set stats element to display none\n        return { display: \"none\" };\n      }\n    }\n\n    let style = toggle();\n\n    let index;\n    let divider;\n    if (radioSelected === 5) {\n      index = 0;\n      divider = 5;\n    } else if (radioSelected === 6) {\n      index = 1;\n      divider = 6;\n    } else if (radioSelected === 10) {\n      index = 2;\n      divider = 10;\n    }\n\n    let gameStats = allForm.find((match) => match.id === game.id);\n\n    console.log(gameStats);\n\n    let homeTeam = gameStats.home.teamName;\n    let awayTeam = gameStats.away.teamName;\n\n    console.log(gameStats);\n\n    let time = game.time;\n\n    gameStats.home[index].last5Points = getPointsFromLastX(\n      gameStats.home[index].LastFiveForm\n    );\n\n    gameStats.home[index].last6Points = getPointsFromLastX(\n      gameStats.home[index].LastSixForm\n    );\n\n    gameStats.home[index].last10Points = getPointsFromLastX(\n      gameStats.home[index].LastTenForm\n    );\n\n    gameStats.away[index].last5Points = getPointsFromLastX(\n      gameStats.away[index].LastFiveForm\n    );\n\n    gameStats.away[index].last6Points = getPointsFromLastX(\n      gameStats.away[index].LastSixForm\n    );\n\n    gameStats.away[index].last10Points = getPointsFromLastX(\n      gameStats.away[index].LastTenForm\n    );\n\n    async function getPointAverage(pointTotal, games){\n      return pointTotal / games\n    }\n\n    let homeFiveGameAverage = await getPointAverage(gameStats.home[index].last5Points, 5)\n    let homeSixGameAverage = await getPointAverage(gameStats.home[index].last6Points, 6)\n    let homeTenGameAverage = await getPointAverage(gameStats.home[index].last10Points, 10)\n\n    let awayFiveGameAverage = await getPointAverage(gameStats.away[index].last5Points, 5)\n    let awaySixGameAverage = await getPointAverage(gameStats.away[index].last6Points, 6)\n    let awayTenGameAverage = await getPointAverage(gameStats.away[index].last10Points, 10)\n\n    console.log(homeFiveGameAverage)\n    console.log(homeTenGameAverage)\n    console.log(awayFiveGameAverage)\n    console.log(awayTenGameAverage)\n\n    async function getLastGameResult(lastGame){\n      let text;\n      switch (true) {\n        case lastGame === \"L\":\n          text = \"Lost\"\n          break;\n        case lastGame === \"D\":\n          text = \"Drew\"\n          break;\n        case lastGame === \"W\":\n          text = \"Won\"\n          break;\n        default:\n          break;\n      }\n      return text;\n    }\n\n    async function compareFormTrend(five, six, ten){\n      let text;\n      if(five >= 2.5){\n        switch (true) {\n          case five > six && six > ten:\n            text = \"Outstanding recent form with solid improvement over last 10 games\"\n            break;\n            case five > six && six < ten:\n              text = \"Outstanding recent form which has improved with some inconsistency over last 10 games\"\n              break;\n            case five === six && six > ten:\n              text = \"Outstanding recent form with most improvement in the last 6\"\n              break;\n              case five === six && six < ten:\n                text = \"Outstanding recent form with a slight dip in the last 6\"\n                break;\n                case five === six && six === ten:\n                  text = \"Consistently outstanding form over the last 10\"\n                  break;\n                  case five < six && six === ten:\n                    text = \"Outstanding recent form but slightly worsening in the last 5\"\n                    break;\n                    case five < six && six > ten:\n                      text = \"Outstanding recent form but slightly fluctuating over the last 10\"\n                      break;\n                      case five < six && six < ten:\n                        text = \"Outstanding recent form but beginning to worsen recently\"\n                        break;\n          default:\n            break;\n        }\n      } else if (five < 2.5 && five >= 2){\n        switch (true) {\n          case five > six && six > ten:\n            text = \"Very good recent form with solid improvement over last 10 games\"\n            break;\n            case five > six && six < ten:\n              text = \"Very good recent form which has improved with some inconsistency over last 10 games\"\n              break;\n            case five === six && six > ten:\n              text = \"Very good recent form with most improvement in the last 6\"\n              break;\n              case five === six && six < ten:\n                text = \"Very good recent form with a slight dip in the last 6\"\n                break;\n                case five === six && six === ten:\n                  text = \"Very good outstanding form over the last 10\"\n                  break;\n                  case five < six && six === ten:\n                    text = \"Very good recent form but slightly worsening in the last 5\"\n                    break;\n                    case five < six && six > ten:\n                      text = \"Very good recent form but slightly fluctuating over the last 10\"\n                      break;\n                      case five < six && six < ten:\n                        text = \"Very good recent form but beginning to worsen recently\"\n                        break;\n          default:\n            break;\n        }\n      } else if (five < 2 && five >= 1.5){\n        switch (true) {\n          case five > six && six > ten:\n            text = \"Good recent form with solid improvement over last 10 games\"\n            break;\n            case five > six && six < ten:\n              text = \"Good recent form which has improved with some inconsistency over last 10 games\"\n              break;\n            case five === six && six > ten:\n              text = \"Good recent form with most improvement in the last 6\"\n              break;\n              case five === six && six < ten:\n                text = \"Good recent form with a slight dip in the last 6\"\n                break;\n                case five === six && six === ten:\n                  text = \"Good outstanding form over the last 10\"\n                  break;\n                  case five < six && six === ten:\n                    text = \"Good recent form but slightly worsening in the last 5\"\n                    break;\n                    case five < six && six > ten:\n                      text = \"Good recent form but slightly fluctuating over the last 10\"\n                      break;\n                      case five < six && six < ten:\n                        text = \"Good recent form but worsening consistently\"\n                        break;\n          default:\n            break;\n        }\n      } else if (five < 1.5 && five >= 1){\n        switch (true) {\n          case five > six && six > ten:\n            text = \"Average recent form with solid improvement over last 10 games\"\n            break;\n            case five > six && six < ten:\n              text = \"Average recent form which has improved with some inconsistency over last 10 games\"\n              break;\n            case five === six && six > ten:\n              text = \"Average recent form with most improvement in the last 6\"\n              break;\n              case five === six && six < ten:\n                text = \"Average recent form with a slight dip in the last 6\"\n                break;\n                case five === six && six === ten:\n                  text = \"Consistently average form over the last 10\"\n                  break;\n                  case five < six && six === ten:\n                    text = \"Average recent form but slightly worsening in the last 5\"\n                    break;\n                    case five < six && six > ten:\n                      text = \"Average recent form, slightly fluctuating over the last 10\"\n                      break;\n                      case five < six && six < ten:\n                        text = \"Average recent form, declining consistently\"\n                        break;\n          default:\n            break;\n        }\n      } else if (five < 1 && five >= 0.5){\n        switch (true) {\n          case five > six && six > ten:\n            text = \"Poor recent form with gradual improvement over last 10 games\"\n            break;\n            case five > six && six < ten:\n              text = \"Poor recent form but improving with some inconsistency over last 10 games\"\n              break;\n            case five === six && six > ten:\n              text = \"Poor recent form with some improvement shown in the last 6\"\n              break;\n              case five === six && six < ten:\n                text = \"Poor recent form with a dip in the last 6\"\n                break;\n                case five === six && six === ten:\n                  text = \"Consistently poor form over the last 10\"\n                  break;\n                  case five < six && six === ten:\n                    text = \"Poor recent form, slightly worsening in the last 5\"\n                    break;\n                    case five < six && six > ten:\n                      text = \"Poor recent form, slightly fluctuating over the last 10\"\n                      break;\n                      case five < six && six < ten:\n                        text = \"Poor recent form, declining consistently\"\n                        break;\n          default:\n            text = \"Poor recent form\"\n            break;\n        }\n      } else if (five < 0.5){\n        switch (true) {\n          case five > six && six > ten:\n            text = \"Terrible recent form with gradual improvement over last 10 games\"\n            break;\n            case five > six && six < ten:\n              text = \"Terrible recent form with a slight improvement in the last 5\"\n              break;\n            case five === six && six > ten:\n              text = \"Terrible recent form but improving slightly in the last 6\"\n              break;\n              case five === six && six < ten:\n                text = \"Terrible recent form with a dip in the last 6\"\n                break;\n                case five === six && six === ten:\n                  text = \"Consistently terrible form over the last 10\"\n                  break;\n                  case five < six && six === ten:\n                    text = \"Terrible recent form, worsening further in the last 5\"\n                    break;\n                    case five < six && six > ten:\n                      text = \"Terrible recent form, slightly fluctuating over the last 10\"\n                      break;\n                      case five < six && six < ten:\n                        text = \"Terrible recent form, declining consistently\"\n                        break;\n          default:\n            break;\n        }\n      } \n      return text\n    }\n\n\n\n    let homeFormTrend = await compareFormTrend(homeFiveGameAverage, homeSixGameAverage, homeTenGameAverage)\n    let awayFormTrend = await compareFormTrend(awayFiveGameAverage, awaySixGameAverage, awayTenGameAverage)\n    let homeLastGame = await getLastGameResult(gameStats.home[index].LastFiveForm[4])\n    let awayLastGame = await getLastGameResult(gameStats.away[index].LastFiveForm[4])\n\n\n    console.log(homeFormTrend)\n    console.log(awayFormTrend)\n\n\n    const formDataMatch = [];\n\n    formDataMatch.push({\n      btts: game.btts_potential,\n    });\n\n    const formDataHome = [];\n\n    formDataHome.push({\n      name: game.homeTeam,\n      Last5: gameStats.home[index].LastFiveForm,\n      AverageGoals: gameStats.home[index].ScoredAverage,\n      AverageConceeded: gameStats.home[index].ConcededAverage,\n      AverageXG: gameStats.home[index].XG,\n      AverageXGConceded: gameStats.home[index].XGAgainstAverage,\n      AveragePossession: gameStats.home[index].AveragePossession,\n      AverageShotsOnTarget: gameStats.home[index].AverageShotsOnTarget,\n      AverageDangerousAttacks: gameStats.home[index].AverageDangerousAttacks,\n      homeOrAway: \"Home\",\n      leaguePosition: gameStats.home[index].LeaguePosition,\n      Last5PPG: gameStats.home[index].PPG,\n      SeasonPPG: gameStats.home[index].SeasonPPG,\n      formTrend: homeFormTrend,\n      lastGame: homeLastGame,\n    });\n\n    const formDataAway = [];\n\n    formDataAway.push({\n      name: game.awayTeam,\n      Last5: gameStats.away[index].LastFiveForm,\n      AverageGoals: gameStats.away[index].ScoredAverage,\n      AverageConceeded: gameStats.away[index].ConcededAverage,\n      AverageXG: gameStats.away[index].XG,\n      AverageXGConceded: gameStats.away[index].XGAgainstAverage,\n      AveragePossession: gameStats.away[index].AveragePossession,\n      AverageShotsOnTarget: gameStats.away[index].AverageShotsOnTarget,\n      AverageDangerousAttacks: gameStats.away[index].AverageDangerousAttacks,\n      homeOrAway: \"Away\",\n      leaguePosition: gameStats.away[index].LeaguePosition,\n      Last5PPG: gameStats.away[index].PPG,\n      SeasonPPG: gameStats.away[index].SeasonPPG,\n      formTrend: awayFormTrend,\n      lastGame: awayLastGame,\n    });\n    ReactDOM.render(\n      <div style={style}>\n        <Div className=\"MatchTime\" text={\"Kick off: \" + time}></Div>\n      </div>,\n      document.getElementById(\"stats\" + homeTeam)\n    );\n\n    ReactDOM.render(\n      <div style={style}>\n        <div className=\"H2HStats\" id={`H2HStats${game.id}`}></div>\n        <div className=\"TrendsHome\" id={`TrendsHome${game.id}`}></div>\n        <div className=\"TrendsAway\" id={`TrendsAway${game.id}`}></div>\n      </div>,\n      document.getElementById(\"history\" + homeTeam)\n    );\n\n    ReactDOM.render(\n      <Stats\n        style={style}\n        gameCount={divider}\n        key={formDataHome[0].name}\n        last5={formDataHome[0].Last5}\n        className={formDataHome[0].homeOrAway}\n        name={formDataHome[0].name}\n        goals={formDataHome[0].AverageGoals}\n        conceeded={formDataHome[0].AverageConceeded}\n        XG={formDataHome[0].AverageXG}\n        XGConceded={formDataHome[0].AverageXGConceded}\n        possession={formDataHome[0].AveragePossession}\n        sot={formDataHome[0].AverageShotsOnTarget}\n        dangerousAttacks={formDataHome[0].AverageDangerousAttacks}\n        leaguePosition={formDataHome[0].leaguePosition}\n        ppg={formDataHome[0].SeasonPPG}\n        formTrend={[homeTenGameAverage.toFixed(2), homeSixGameAverage.toFixed(2), homeFiveGameAverage.toFixed(2)]}\n        lastGame={homeLastGame}\n      />,\n      document.getElementById(\"home\" + homeTeam)\n    );\n\n    ReactDOM.render(\n      <Stats\n        style={style}\n        gameCount={divider}\n        key={formDataAway[0].name}\n        last5={formDataAway[0].Last5}\n        className={formDataAway[0].homeOrAway}\n        name={formDataAway[0].name}\n        goals={formDataAway[0].AverageGoals}\n        conceeded={formDataAway[0].AverageConceeded}\n        XG={formDataAway[0].AverageXG}\n        XGConceded={formDataAway[0].AverageXGConceded}\n        possession={formDataAway[0].AveragePossession}\n        sot={formDataAway[0].AverageShotsOnTarget}\n        dangerousAttacks={formDataAway[0].AverageDangerousAttacks}\n        leaguePosition={formDataAway[0].leaguePosition}\n        ppg={formDataAway[0].SeasonPPG}\n        formTrend={[awayTenGameAverage.toFixed(2), awaySixGameAverage.toFixed(2), awayFiveGameAverage.toFixed(2)]}\n        lastGame={awayLastGame}\n      />,\n      document.getElementById(\"away\" + awayTeam)\n    );\n\n\n    ReactDOM.render(\n      <Button\n        className=\"MoreStats\"\n        style={style}\n        onClickEvent={() => getTeamStats(game.id, game.homeTeam, game.awayTeam)}\n        text={\"More detail\"}\n      ></Button>,\n      document.getElementById(`H2HStats${game.id}`)\n    );\n  }\n}\n","/Users/gregdorward/Development/football-predictions/src/components/Div.js",[],"/Users/gregdorward/Development/football-predictions/src/components/Fixture.js",["151"],"import React, { Fragment } from \"react\";\nimport { CreateBadge } from \"./createBadge\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { createStatsDiv } from \"../logic/getStats\";\n\nlet resultValue;\nlet leagueName;\nconst text =\n  \"XG Tipping formulates predictions based on recent form data ranging from points per game to each teams attacking potency\\n Expected Goals in previous matches are used to determine whether teams might be over or underperforming and predictions are weighted as such\\n Once all fixtures have loaded, click on “Get Predictions”\\n Predictions are displayed on the right and the results on the left\\n Click on an individual fixture for detailed stats for both teams.\";\n\nfunction GetDivider(fixture) {\n  const matchStatus = fixture.status;\n  const isPrediction = resultValue;\n\n  if (isPrediction === false && matchStatus !== \"complete\") {\n    return (\n      <div className=\"divider\" data-cy={\"divider-\" + fixture.fixture.id}\n      >\n        {\"V\"}\n      </div>\n    );\n  } else if (isPrediction === false && matchStatus === \"complete\") {\n    return (\n      <div\n        className=\"Result\"\n        data-cy={\"result-\" + fixture.fixture.id}\n      >{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n    );\n  } else if (isPrediction === true && matchStatus === \"complete\") {\n    let outcome;\n    let prediction;\n\n    switch (true) {\n      case fixture.fixture.homeGoals > fixture.fixture.awayGoals:\n        outcome = 0;\n        fixture.fixture.winner = fixture.fixture.homeTeam;\n        fixture.fixture.outcome = \"homeWin\";\n        break;\n      case fixture.fixture.homeGoals === fixture.fixture.awayGoals:\n        outcome = 1;\n        fixture.fixture.winner = \"draw\";\n        fixture.fixture.outcome = \"draw\";\n\n        break;\n      case fixture.fixture.homeGoals < fixture.fixture.awayGoals:\n        outcome = 2;\n        fixture.fixture.winner = fixture.fixture.awayTeam;\n        fixture.fixture.outcome = \"awayWin\";\n\n        break;\n      default:\n        break;\n    }\n\n    // console.log(`match.status ${fixture.fixture.status} match.prediction ${fixture.fixture.prediction} match.outcome ${fixture.fixture.outcome}`)\n\n    switch (true) {\n      case fixture.fixture.goalsA > fixture.fixture.goalsB:\n        prediction = 0;\n        break;\n      case fixture.fixture.goalsA === fixture.fixture.goalsB:\n        prediction = 1;\n        break;\n      case fixture.fixture.goalsA < fixture.fixture.goalsB:\n        prediction = 2;\n        break;\n      default:\n        break;\n    }\n\n    if (fixture.fixture.homeGoals > 0 && fixture.fixture.awayGoals > 0) {\n      fixture.fixture.bttsOutcome = \"bttsWon\";\n    } else {\n      fixture.fixture.bttsOutcome = \"bttsLost\";\n    }\n\n    if (outcome === prediction) {\n      // console.log(fixture.fixture.game);\n      switch (true) {\n        case outcome === 0:\n          fixture.fixture.profit = fixture.fixture.homeOdds;\n          break;\n        case outcome === 1:\n          fixture.fixture.profit = fixture.fixture.drawOdds;\n          break;\n        case outcome === 2:\n          fixture.fixture.profit = fixture.fixture.awayOdds;\n          break;\n        default:\n          break;\n      }\n      // console.log(`profit ${fixture.fixture.profit}`);\n\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"CorrectScore\"\n            key={fixture.fixture.homeTeam}\n            data-cy={\"score-\" + fixture.fixture.id}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    } else if (outcome !== prediction) {\n      fixture.fixture.profit = 0;\n      // console.log(fixture.fixture.game);\n      // console.log(`profit ${fixture.fixture.profit}`);\n\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"IncorrectScore\"\n            key={fixture.fixture.awayTeam}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    }\n  } else {\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  }\n}\n\nfunction getStyle(bool) {\n\n    return \"individualFixture\";\n}\n\nconst SingleFixture = ({ fixture }) => (\n  <div>\n  <div className=\"leagueName\">{fixture.leagueName}</div>\n    <li\n      className={getStyle(fixture.btts)}\n      key={fixture.id}\n      onClick={() => createStatsDiv(fixture)}\n      data-cy={fixture.id}\n    >\n      <div className=\"HomeOdds\">{fixture.fractionHome}</div>\n      <div className=\"homeTeam\">{fixture.homeTeam}</div>\n      <GetDivider\n        result={resultValue}\n        status={fixture.status}\n        fixture={fixture}\n      />\n      {/* <div className=\"divider\">{\"V\"}</div> */}\n      <div className=\"awayTeam\">{fixture.awayTeam}</div>\n      <CreateBadge\n        image={fixture.homeBadge}\n        ClassName=\"HomeBadge\"\n        alt=\"Home team badge\"\n        flexShrink={5}\n      />\n      <CreateBadge\n        image={fixture.awayBadge}\n        ClassName=\"AwayBadge\"\n        alt=\"Away team badge\"\n      />\n      <div className=\"AwayOdds\">{fixture.fractionAway}</div>\n    </li>\n    <div className=\"StatsDiv\">\n      <div id={\"stats\" + fixture.homeTeam}></div>\n      <Fragment>\n        <div\n          className=\"StatsContainer\"\n          data-cy={\"StatsContainer-\" + fixture.id}\n        >\n          <div className=\"HomeStats\" id={\"home\" + fixture.homeTeam}></div>\n          <div className=\"AwayStats\" id={\"away\" + fixture.awayTeam}></div>\n        </div>\n      </Fragment>\n      <div className=\"MatchHistory\" id={\"history\" + fixture.homeTeam}></div>\n    </div>\n  </div>\n);\n\nlet newText = text.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nconst List = ({ fixtures }) => (\n  <div>\n    <Fragment>\n      <Collapsable className={\"HowToUse\"} buttonText={\"Show / Hide help\"} text={newText} />\n    </Fragment>\n    <div id=\"Headers\"></div>\n    <ul className=\"FixtureList\" id=\"FixtureList\">\n      {fixtures.map((fixture, i) => (\n        <SingleFixture fixture={fixture}/>\n      ))}\n    </ul>\n  </div>\n);\n\nexport function Fixture(props) {\n  resultValue = props.result;\n\n  return <List fixtures={props.fixtures} result={resultValue}/>;\n}\n","/Users/gregdorward/Development/football-predictions/src/components/CollapsableDiv.js",[],"/Users/gregdorward/Development/football-predictions/src/components/Increment.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/getBTTSPotential.js",[],"/Users/gregdorward/Development/football-predictions/src/components/OddsRadio.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/getTeamStats.js",["152","153","154"],"import ReactDOM from \"react-dom\";\nimport HeadToHead from \"../components/HeadToHead\";\nimport BulletList from \"../components/BulletList\";\nimport { Fragment } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport CustomizedTables from \"../components/Table\";\nimport { matches } from \"./getFixtures\";\n\nexport async function getTeamStats(id, home, away) {\n  console.log(\"EXECUTED\");\n  let identifier = id;\n  let match = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}match/${identifier}`\n  );\n  await match.json().then((match) => {\n    console.log(match.data)\n    ReactDOM.render(\n      <Fragment>\n        <h3>Fixture history</h3>\n        <HeadToHead\n          className={\"PreviousMatchStats\"}\n          homeTeam={home}\n          awayTeam={away}\n          stadium={match.data.stadium_name}\n          matches={match.data.h2h.previous_matches_results.totalMatches}\n          homeWins={match.data.h2h.previous_matches_results.team_a_wins}\n          awayWins={match.data.h2h.previous_matches_results.team_b_wins}\n          draws={match.data.h2h.previous_matches_results.draw}\n          averageGoals={match.data.h2h.betting_stats.avg_goals}\n        ></HeadToHead>\n        <CustomizedTables\n          o15Stat={match.data.h2h.betting_stats.over15Percentage}\n          o15Forecast={match.data.o15_potential}\n          o15Odds={match.data.odds_ft_over15}\n          o25Stat={match.data.h2h.betting_stats.over25Percentage}\n          o25Forecast={match.data.o25_potential}\n          o25Odds={match.data.odds_ft_over25}\n          BTTSStat={match.data.h2h.betting_stats.bttsPercentage}\n          BTTSForecast={match.data.btts_potential}\n          BTTSOdds={match.data.odds_btts_yes}\n          CornersStat={\"–\"}\n          CornersForecast={match.data.corners_potential}\n          CornersOdds={match.data.odds_corners_over_105}\n        />\n      </Fragment>,\n      document.getElementById(`H2HStats${identifier}`)\n    );\n  });\n}\n","/Users/gregdorward/Development/football-predictions/src/components/HeadToHead.js",[],"/Users/gregdorward/Development/football-predictions/src/components/BulletList.js",[],"/Users/gregdorward/Development/football-predictions/src/components/Table.js",["155"],"import React from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n    padding: 5,\n    textAlign: \"center\",\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n  },\n  body: {\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    padding: 10,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\n\nexport default function CustomizedTables(props) {\n\n\n  return (\n    <TableContainer component={Paper} className=\"StatsTable\">\n      <Table aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Stats (from footystats.org)</StyledTableCell>\n            <StyledTableCell>H2H history</StyledTableCell>\n            <StyledTableCell>Forecast</StyledTableCell>\n            <StyledTableCell>Odds</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <StyledTableRow key=\"O15\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 1.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o15Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{`${props.o15Forecast}%`}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o15Odds}</StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow key=\"O25\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 2.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o25Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{`${props.o25Forecast}%`}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o25Odds}</StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow key=\"BTTS\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              BTTS %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.BTTSStat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{`${props.BTTSForecast}%`}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSOdds}</StyledTableCell>\n          </StyledTableRow>\n\n          <StyledTableRow key=\"Corners\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 10.5 Corners\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.CornersStat}`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.CornersForecast}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.CornersOdds}</StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n",{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":4,"column":8,"nodeType":"162","messageId":"163","endLine":4,"endColumn":13},{"ruleId":"160","severity":1,"message":"164","line":10,"column":3,"nodeType":"162","messageId":"163","endLine":10,"endColumn":8},{"ruleId":"160","severity":1,"message":"165","line":12,"column":3,"nodeType":"162","messageId":"163","endLine":12,"endColumn":24},{"ruleId":"160","severity":1,"message":"166","line":13,"column":3,"nodeType":"162","messageId":"163","endLine":13,"endColumn":11},{"ruleId":"160","severity":1,"message":"167","line":14,"column":3,"nodeType":"162","messageId":"163","endLine":14,"endColumn":12},{"ruleId":"160","severity":1,"message":"168","line":17,"column":8,"nodeType":"162","messageId":"163","endLine":17,"endColumn":17},{"ruleId":"160","severity":1,"message":"169","line":3,"column":26,"nodeType":"162","messageId":"163","endLine":3,"endColumn":34},{"ruleId":"160","severity":1,"message":"169","line":1,"column":10,"nodeType":"162","messageId":"163","endLine":1,"endColumn":18},{"ruleId":"160","severity":1,"message":"170","line":3,"column":7,"nodeType":"162","messageId":"163","endLine":3,"endColumn":18},{"ruleId":"160","severity":1,"message":"171","line":438,"column":7,"nodeType":"162","messageId":"163","endLine":438,"endColumn":25},{"ruleId":"160","severity":1,"message":"172","line":599,"column":19,"nodeType":"162","messageId":"163","endLine":599,"endColumn":23},{"ruleId":"160","severity":1,"message":"173","line":946,"column":13,"nodeType":"162","messageId":"163","endLine":946,"endColumn":31},{"ruleId":"160","severity":1,"message":"174","line":947,"column":13,"nodeType":"162","messageId":"163","endLine":947,"endColumn":35},{"ruleId":"160","severity":1,"message":"175","line":948,"column":13,"nodeType":"162","messageId":"163","endLine":948,"endColumn":28},{"ruleId":"160","severity":1,"message":"176","line":949,"column":13,"nodeType":"162","messageId":"163","endLine":949,"endColumn":32},{"ruleId":"160","severity":1,"message":"177","line":1150,"column":11,"nodeType":"162","messageId":"163","endLine":1150,"endColumn":30},{"ruleId":"160","severity":1,"message":"178","line":1152,"column":11,"nodeType":"162","messageId":"163","endLine":1152,"endColumn":30},{"ruleId":"160","severity":1,"message":"179","line":1167,"column":9,"nodeType":"162","messageId":"163","endLine":1167,"endColumn":27},{"ruleId":"160","severity":1,"message":"180","line":1171,"column":9,"nodeType":"162","messageId":"163","endLine":1171,"endColumn":27},{"ruleId":"160","severity":1,"message":"181","line":1178,"column":9,"nodeType":"162","messageId":"163","endLine":1178,"endColumn":29},{"ruleId":"160","severity":1,"message":"182","line":1181,"column":9,"nodeType":"162","messageId":"163","endLine":1181,"endColumn":29},{"ruleId":"160","severity":1,"message":"183","line":1185,"column":9,"nodeType":"162","messageId":"163","endLine":1185,"endColumn":27},{"ruleId":"160","severity":1,"message":"184","line":1188,"column":9,"nodeType":"162","messageId":"163","endLine":1188,"endColumn":27},{"ruleId":"160","severity":1,"message":"185","line":1205,"column":9,"nodeType":"162","messageId":"163","endLine":1205,"endColumn":22},{"ruleId":"160","severity":1,"message":"186","line":1224,"column":9,"nodeType":"162","messageId":"163","endLine":1224,"endColumn":22},{"ruleId":"160","severity":1,"message":"187","line":1246,"column":9,"nodeType":"162","messageId":"163","endLine":1246,"endColumn":14},{"ruleId":"160","severity":1,"message":"188","line":1319,"column":9,"nodeType":"162","messageId":"163","endLine":1319,"endColumn":20},{"ruleId":"160","severity":1,"message":"189","line":1324,"column":9,"nodeType":"162","messageId":"163","endLine":1324,"endColumn":20},{"ruleId":"160","severity":1,"message":"190","line":1518,"column":7,"nodeType":"162","messageId":"163","endLine":1518,"endColumn":14},{"ruleId":"160","severity":1,"message":"191","line":1557,"column":7,"nodeType":"162","messageId":"163","endLine":1557,"endColumn":20},{"ruleId":"160","severity":1,"message":"192","line":5,"column":10,"nodeType":"162","messageId":"163","endLine":5,"endColumn":24},{"ruleId":"160","severity":1,"message":"193","line":6,"column":19,"nodeType":"162","messageId":"163","endLine":6,"endColumn":30},{"ruleId":"160","severity":1,"message":"194","line":7,"column":5,"nodeType":"162","messageId":"163","endLine":7,"endColumn":15},{"ruleId":"160","severity":1,"message":"195","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":18},{"ruleId":"160","severity":1,"message":"196","line":5,"column":8,"nodeType":"162","messageId":"163","endLine":5,"endColumn":13},{"ruleId":"160","severity":1,"message":"197","line":7,"column":10,"nodeType":"162","messageId":"163","endLine":7,"endColumn":17},{"ruleId":"160","severity":1,"message":"198","line":2,"column":22,"nodeType":"162","messageId":"163","endLine":2,"endColumn":32},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"no-unused-vars","'Radio' is defined but never used.","Identifier","unusedVar","'today' is defined but never used.","'generatePriorFixtures' is defined but never used.","'tomorrow' is defined but never used.","'yesterday' is defined but never used.","'TextBlock' is defined but never used.","'proxyurl' is defined but never used.","'allTeamForm' is assigned a value but never used.","'gameTotalWeighting' is assigned a value but never used.","'text' is assigned a value but never used.","'goalsForComparison' is assigned a value but never used.","'goalsAgainstComparison' is assigned a value but never used.","'XGForComparison' is assigned a value but never used.","'XGAgainstComparison' is assigned a value but never used.","'XGAdjustedHomeGoals' is assigned a value but never used.","'XGAdjustedAwayGoals' is assigned a value but never used.","'goalsBasedOnHomeXG' is assigned a value but never used.","'goalsBasedOnAwayXG' is assigned a value but never used.","'homeGoalsBasedOnOdds' is assigned a value but never used.","'awayGoalsBasedOnOdds' is assigned a value but never used.","'homeGoalsBasedOnDA' is assigned a value but never used.","'awayGoalsBasedOnDA' is assigned a value but never used.","'factorTwoHome' is assigned a value but never used.","'factorTwoAway' is assigned a value but never used.","'split' is assigned a value but never used.","'XGGoalsHome' is assigned a value but never used.","'XGGoalsAway' is assigned a value but never used.","'sumLoss' is assigned a value but never used.","'radioSelected' is assigned a value but never used.","'selectedOption' is defined but never used.","'leagueArray' is defined but never used.","'leagueName' is defined but never used.","'BulletList' is defined but never used.","'Table' is defined but never used.","'matches' is defined but never used.","'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation"]