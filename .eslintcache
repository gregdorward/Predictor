[{"/Users/greg/Development/Predictor/src/index.js":"1","/Users/greg/Development/Predictor/src/reportWebVitals.js":"2","/Users/greg/Development/Predictor/src/App.js":"3","/Users/greg/Development/Predictor/src/components/Success.js":"4","/Users/greg/Development/Predictor/src/components/PasswordReset.js":"5","/Users/greg/Development/Predictor/src/components/Under25.js":"6","/Users/greg/Development/Predictor/src/components/Over25.js":"7","/Users/greg/Development/Predictor/src/components/BTTSFixtures.js":"8","/Users/greg/Development/Predictor/src/components/CancelSubscription.js":"9","/Users/greg/Development/Predictor/src/components/HighestScoringTeams.js":"10","/Users/greg/Development/Predictor/src/components/Cancel.js":"11","/Users/greg/Development/Predictor/src/components/Team.js":"12","/Users/greg/Development/Predictor/src/components/BTTSTeams.js":"13","/Users/greg/Development/Predictor/src/components/HighestScoringFixtures.js":"14","/Users/greg/Development/Predictor/src/logic/store.js":"15","/Users/greg/Development/Predictor/src/components/OddsRadio.js":"16","/Users/greg/Development/Predictor/src/components/Button.js":"17","/Users/greg/Development/Predictor/src/components/Logo.js":"18","/Users/greg/Development/Predictor/src/components/Fixture.js":"19","/Users/greg/Development/Predictor/src/components/Contact.js":"20","/Users/greg/Development/Predictor/src/components/ProtectedContent.js":"21","/Users/greg/Development/Predictor/src/components/DarkModeToggle.js":"22","/Users/greg/Development/Predictor/src/components/Login.js":"23","/Users/greg/Development/Predictor/src/logic/hasUserPaid.js":"24","/Users/greg/Development/Predictor/src/logic/authProvider.js":"25","/Users/greg/Development/Predictor/src/components/CollapsableElement.js":"26","/Users/greg/Development/Predictor/src/logic/getFixtures.js":"27","/Users/greg/Development/Predictor/src/firebase.js":"28","/Users/greg/Development/Predictor/src/logic/getStatsInsights.js":"29","/Users/greg/Development/Predictor/src/components/createBadge.js":"30","/Users/greg/Development/Predictor/src/logic/dataSlice.js":"31","/Users/greg/Development/Predictor/src/components/LeagueName.js":"32","/Users/greg/Development/Predictor/src/components/GameStats.js":"33","/Users/greg/Development/Predictor/src/logic/getScorePredictions.js":"34","/Users/greg/Development/Predictor/src/components/Slider.js":"35","/Users/greg/Development/Predictor/src/components/SliderDiff.js":"36","/Users/greg/Development/Predictor/src/logic/getForm.js":"37","/Users/greg/Development/Predictor/src/components/LeagueTable.js":"38","/Users/greg/Development/Predictor/src/components/TeamOfTheSeason.js":"39","/Users/greg/Development/Predictor/src/logic/getStats.js":"40","/Users/greg/Development/Predictor/src/components/StatTable.js":"41","/Users/greg/Development/Predictor/src/logic/compareFormTrend.js":"42","/Users/greg/Development/Predictor/src/components/Carousel.js":"43","/Users/greg/Development/Predictor/src/logic/getBTTSPotential.js":"44","/Users/greg/Development/Predictor/src/components/Increment.js":"45","/Users/greg/Development/Predictor/src/components/PlayerStatsList.js":"46","/Users/greg/Development/Predictor/src/components/StreakStats.js":"47","/Users/greg/Development/Predictor/src/components/CollapsableStats.js":"48","/Users/greg/Development/Predictor/src/components/MissingPlayersList.js":"49","/Users/greg/Development/Predictor/src/components/TeamRankingsFlexView.js":"50","/Users/greg/Development/Predictor/src/components/MultitypeChart.js":"51","/Users/greg/Development/Predictor/src/components/Div.js":"52","/Users/greg/Development/Predictor/src/components/SofaScore.js":"53","/Users/greg/Development/Predictor/src/components/createStatsDiv.js":"54","/Users/greg/Development/Predictor/src/components/CarouselXGChart.js":"55","/Users/greg/Development/Predictor/src/components/Chart.js":"56","/Users/greg/Development/Predictor/src/components/RankingsSection.js":"57","/Users/greg/Development/Predictor/src/components/HamburgerMenu.js":"58","/Users/greg/Development/Predictor/src/components/SeasonPreview.js":"59","/Users/greg/Development/Predictor/src/components/PrivacyPolicy.js":"60","/Users/greg/Development/Predictor/src/components/StarRating.js":"61","/Users/greg/Development/Predictor/src/components/PredictionTypeRadio.js":"62","/Users/greg/Development/Predictor/src/components/PlayerStatTable.js":"63","/Users/greg/Development/Predictor/src/components/FutureFixture.js":"64","/Users/greg/Development/Predictor/src/components/FutureFixturesSideBySide.js":"65","/Users/greg/Development/Predictor/src/components/ShareShortlistButton.js":"66"},{"size":2343,"mtime":1752699525168,"results":"67","hashOfConfig":"68"},{"size":362,"mtime":1748355148688,"results":"69","hashOfConfig":"68"},{"size":25468,"mtime":1759395363726,"results":"70","hashOfConfig":"68"},{"size":398,"mtime":1748355148684,"results":"71","hashOfConfig":"68"},{"size":1142,"mtime":1748355148683,"results":"72","hashOfConfig":"68"},{"size":3307,"mtime":1752663428915,"results":"73","hashOfConfig":"68"},{"size":3314,"mtime":1757272359066,"results":"74","hashOfConfig":"68"},{"size":3478,"mtime":1752662854798,"results":"75","hashOfConfig":"68"},{"size":2718,"mtime":1748355148682,"results":"76","hashOfConfig":"68"},{"size":3417,"mtime":1752663394707,"results":"77","hashOfConfig":"68"},{"size":346,"mtime":1748355148682,"results":"78","hashOfConfig":"68"},{"size":20106,"mtime":1748355148684,"results":"79","hashOfConfig":"68"},{"size":3708,"mtime":1752662983814,"results":"80","hashOfConfig":"68"},{"size":3511,"mtime":1752663382481,"results":"81","hashOfConfig":"68"},{"size":283,"mtime":1748355148688,"results":"82","hashOfConfig":"68"},{"size":963,"mtime":1748355148683,"results":"83","hashOfConfig":"68"},{"size":319,"mtime":1748355148681,"results":"84","hashOfConfig":"68"},{"size":393,"mtime":1756998191029,"results":"85","hashOfConfig":"68"},{"size":22973,"mtime":1759604696905,"results":"86","hashOfConfig":"68"},{"size":2398,"mtime":1755784641697,"results":"87","hashOfConfig":"68"},{"size":555,"mtime":1748355148683,"results":"88","hashOfConfig":"68"},{"size":1234,"mtime":1748355148682,"results":"89","hashOfConfig":"68"},{"size":3721,"mtime":1759228931953,"results":"90","hashOfConfig":"68"},{"size":375,"mtime":1748355148688,"results":"91","hashOfConfig":"68"},{"size":1902,"mtime":1748355148687,"results":"92","hashOfConfig":"68"},{"size":1114,"mtime":1749236036588,"results":"93","hashOfConfig":"68"},{"size":58907,"mtime":1759767378770,"results":"94","hashOfConfig":"68"},{"size":692,"mtime":1748355148687,"results":"95","hashOfConfig":"68"},{"size":5954,"mtime":1748355148688,"results":"96","hashOfConfig":"68"},{"size":373,"mtime":1748618155494,"results":"97","hashOfConfig":"68"},{"size":848,"mtime":1748355148687,"results":"98","hashOfConfig":"68"},{"size":4207,"mtime":1759395368129,"results":"99","hashOfConfig":"68"},{"size":152617,"mtime":1759690677478,"results":"100","hashOfConfig":"68"},{"size":164313,"mtime":1759767369024,"results":"101","hashOfConfig":"68"},{"size":1495,"mtime":1748355148684,"results":"102","hashOfConfig":"68"},{"size":1096,"mtime":1748355148684,"results":"103","hashOfConfig":"68"},{"size":476,"mtime":1748355148687,"results":"104","hashOfConfig":"68"},{"size":25109,"mtime":1759395371467,"results":"105","hashOfConfig":"68"},{"size":8295,"mtime":1759395375062,"results":"106","hashOfConfig":"68"},{"size":60029,"mtime":1759762657995,"results":"107","hashOfConfig":"68"},{"size":2935,"mtime":1758794249035,"results":"108","hashOfConfig":"68"},{"size":10575,"mtime":1748355148687,"results":"109","hashOfConfig":"68"},{"size":917,"mtime":1748355148682,"results":"110","hashOfConfig":"68"},{"size":1044,"mtime":1758826090396,"results":"111","hashOfConfig":"68"},{"size":1347,"mtime":1748355148683,"results":"112","hashOfConfig":"68"},{"size":3821,"mtime":1749477462148,"results":"113","hashOfConfig":"68"},{"size":2171,"mtime":1748355148684,"results":"114","hashOfConfig":"68"},{"size":467,"mtime":1748355148682,"results":"115","hashOfConfig":"68"},{"size":682,"mtime":1748355148683,"results":"116","hashOfConfig":"68"},{"size":2609,"mtime":1748355148684,"results":"117","hashOfConfig":"68"},{"size":1955,"mtime":1753454484686,"results":"118","hashOfConfig":"68"},{"size":203,"mtime":1748355148682,"results":"119","hashOfConfig":"68"},{"size":3088,"mtime":1754557227663,"results":"120","hashOfConfig":"68"},{"size":22104,"mtime":1755090061910,"results":"121","hashOfConfig":"68"},{"size":1159,"mtime":1748355148682,"results":"122","hashOfConfig":"68"},{"size":17287,"mtime":1753816596430,"results":"123","hashOfConfig":"68"},{"size":1278,"mtime":1748355148683,"results":"124","hashOfConfig":"68"},{"size":1853,"mtime":1754470705978,"results":"125","hashOfConfig":"68"},{"size":3838,"mtime":1752742821779,"results":"126","hashOfConfig":"68"},{"size":4184,"mtime":1753208989729,"results":"127","hashOfConfig":"68"},{"size":715,"mtime":1753906092591,"results":"128","hashOfConfig":"68"},{"size":990,"mtime":1755688283204,"results":"129","hashOfConfig":"68"},{"size":3334,"mtime":1758799521002,"results":"130","hashOfConfig":"68"},{"size":493,"mtime":1758901081000,"results":"131","hashOfConfig":"68"},{"size":2715,"mtime":1758900048089,"results":"132","hashOfConfig":"68"},{"size":1651,"mtime":1759145818119,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"137"},"10md9h3",{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"137"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"137"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"137"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"137"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"137"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":54,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"137"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"137"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"137"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"137"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"137"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"137"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"137"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"137"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},"/Users/greg/Development/Predictor/src/index.js",["281"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router, Route, Routes, HashRouter } from \"react-router-dom\";\nimport TeamPage from \"./components/Team\";\nimport {SuccessPage} from \"./components/Success\"\nimport {CancelPage} from \"./components/Cancel\"\nimport PasswordReset from \"./components/PasswordReset\";\nimport { Provider } from \"react-redux\";\nimport store from \"./logic/store\"; // Import your Redux store\nimport CancelSubscription from \"./components/CancelSubscription\"\nimport Over25 from \"./components/Over25\"\nimport Under25 from \"./components/Under25\"\nimport HighestScoringTeams from \"./components/HighestScoringTeams\"\nimport HighestScoringFixtures from \"./components/HighestScoringFixtures\";\nimport BTTSFixtures from \"./components/BTTSFixtures\";\nimport BTTSTeams from \"./components/BTTSTeams\";\nimport SeasonPreview from \"./components/SeasonPreview\";\n\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n    <HashRouter>\n        <Routes>\n          <Route path=\"/fixture\" element={<TeamPage />} />\n          <Route path=\"/success\" element={<SuccessPage />} />\n          <Route path=\"/cancel\" element={<CancelPage />} />\n          <Route path=\"/reset\" element={<PasswordReset />} />\n          <Route path=\"/o25\" element={<Over25 />} />\n          <Route path=\"/u25\" element={<Under25 />} />\n          <Route path=\"/teamshigh\" element={<HighestScoringTeams />} />\n          <Route path=\"/fixtureshigh\" element={<HighestScoringFixtures />} />\n          <Route path=\"/bttsfixtures\" element={<BTTSFixtures />} />\n          <Route path=\"/bttsteams\" element={<BTTSTeams />} />\n          <Route path=\"/cancelsubscription\" element={<CancelSubscription/>} />\n          <Route path=\"/\" exact element={<App />} />\n          <Route path=\"/seasonpreviews\" element={<SeasonPreview />} />\n          {/* <Route path=\"/\" element={<Fixture />} /> */}\n        </Routes>\n        </HashRouter>\n    </Provider>\n    ,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["282","283"],"/Users/greg/Development/Predictor/src/reportWebVitals.js",[],"/Users/greg/Development/Predictor/src/App.js",["284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Button } from \"./components/Button\";\nimport OddsRadio from \"./components/OddsRadio\";\nimport PredictionTypeRadio from \"./components/PredictionTypeRadio\";\nimport { Fixture } from \"./components/Fixture\";\nimport mockedFixtures from \"./data/mockedFixtures.json\";\nimport ThemeToggle from \"./components/DarkModeToggle\";\nimport { selectedOdds } from \"./components/OddsRadio\";\nimport Collapsable from \"./components/CollapsableElement\";\nimport StripePolicies from \"./components/Contact\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { AuthProvider, useAuth } from \"./logic/authProvider\";\nimport { getAuth } from \"firebase/auth\";\nimport Login from \"./components/Login\";\nimport { getCurrentUser } from \"./components/ProtectedContent\";\nimport { userDetail } from \"./logic/authProvider\";\nimport { checkUserPaidStatus } from \"./logic/hasUserPaid\";\nimport HamburgerMenu from \"./components/HamburgerMenu\";\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  RedditShareButton,\n  RedditIcon,\n  TelegramShareButton,\n  TelegramIcon,\n  TwitterShareButton,\n  TwitterIcon,\n  WhatsappShareButton,\n  WhatsappIcon,\n} from \"react-share\";\nimport { generateFixtures } from \"./logic/getFixtures\";\nimport { ThreeDots } from \"react-loading-icons\";\nimport Logo from \"./components/Logo\";\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\nimport PrivacyPolicy from \"./components/PrivacyPolicy\";\n\nexport const proxyurl = \"https://safe-caverns-99679.herokuapp.com/\";\nexport var fixtureList = [];\nexport let allLeagueData = [];\n\nexport const availableLeagues = [];\nexport var orderedLeagues = [];\n\nlet loggedIn;\nexport let paid = false;\n\nconst menuItems = ['Home', 'bttsteams', 'Services', 'Contact'];\n\nconst leagueOrder = [\n  15050, //premier league 25 12325\n  14930, //championship 25 12451\n  14934, //league 1 25 12446\n  14935, //league 2 25 12422\n  15657, //National league 25 12622\n  15845, //National league north 25\n  15844, //National league south 25\n  14956, //La Liga 25 12316\n  15000, //Scottish Prem 25 12455\n  14968, //Bundesliga 25 12529\n  15068, //Serie A 25 12530\n  14932, //French Prem 25 12337\n  15115, //Portagul Prem 25 12931\n  14936, //Dutch Prem 25 12322\n  14937, //Belgian Pro League 25 12137\n  16263, //sweden 25\n  15055, //Danish Prem 24/25 12132\n  16260, //Norway Prem 25\n  14923, //Austrian Prem 25 12472\n  15163, //Greek Prem 25 12734\n  14972, //turkey 25 12641\n  15031, //Polish prem 25 12120\n  15047, //Swiss prem 25 12326\n  15053, //Croatia 25 12121\n  14973, //Czecjh 25 12336\n  14089, // Finland 25 14089\n  // 14951, // Ulraine 25 12483\n  // 15065, // Serbia 25 12138\n  // 15063, // Slovenia 25 12476\n  // 14933, // Slovakia 25 12944\n  13952, //Irish Prem 25\n  15066, //Spanish secunda 25 12467\n  15632, //Italy serie B 24 12621\n  14931, //Bundesliga 2 25 12528\n  14954, //French League 2 25 12338\n  14987, //Dutch League 2 25\n  15061, //Scottish Championship 25 12456\n  14943, //Scottish league 1 25 12474\n  15209, //Scottish league 2 25 12453\n  15478, //Women's prem 25 12827\n  13973, //MLS 25,\n  13967, // USL Championship 25\n  14226, // US Open Cup 25\n  14236, //Canada 25\n  14231, //Brazil prem 25\n  14305, // Brazil Serie B 25\n  15746, //Argentina prem 23 15310\n  // 14086, // Columbia 25\n  // 14116, // Chile 25\n  // 14626, // Uraguay 25\n  15234, //Mexico prem 25 12136\n  12933, //National league North and South 24\n  13703, //Australian A league 24/25\n  16243, //S Korea 25,\n  16242, //Japan 25\n  12772, //Saudi 24/25\n  13964, // WC Qual Europe 26,\n  10121, // WC Qual SA 26,\n  // 11426, // WC Qual ConCaf 26\n  // 12801, // WC Qual Aus 26,\n  14056, // Womens Euros 25\n  13734, //Nations league 24\n  14924, // Champs league 25 12321\n  15002, //Europa 25 12327\n  14904, //Europa Conference 25 12278\n  16261, // Copa Libertadores 25\n];\n\n// const sofaScoreIds = [\n//   {\n//     15050: 17, //EPL\n//   },\n//   {\n//     14930: 18 //Championship\n//   },\n//   {\n//     14934: 24 //League 1\n//   },\n//   {\n//     14935: 25 //League 2\n//   },\n//   {\n//     12622: 173 //Conference\n//   },\n//   {\n//     14956:\n//   },\n//   {},\n//   {},\n//   {},\n//   {},\n//   {},\n//   {},\n//   {},\n//   {},\n//   {},\n//   {},\n//   {},\n//   {},\n//   {},\n//   {},\n//   {},\n//   {},\n//   {},\n//   {},\n//   // 13734, //Nations league 24/25\n//   15050, //premier league 22/23\n//   14930, //championship 22/23\n//   14934, //league 1 22/23\n//   14935, //league 2 22/23\n//   12622, //National league 22/23\n//   14956, //La Liga 22/23\n//   15000, //Scottish Prem 22/23\n//   14968, //Bundesliga 22/23\n//   15068, //Serie A 22/23\n//   14932, //French Prem 22/23\n//   15115, //Portagul Prem 22/23\n//   14936, //Dutch Prem 22/23\n//   14937, //Belgian Pro League 22/23\n//   16263, //sweden 24\n//   15055, //Danish Prem 24/25\n//   16260, //Norway Prem 23\n//   14923, //Austrian Prem 22/23\n//   15163, //Greek Prem 22/23\n//   14972, //turkey\n//   15031, //Polish prem 22/23\n//   15047, //Swiss prem 22/23\n//   15053, //Croatia 24/25\n//   14973, //Czecjh 24/25\n//   13952, //Irish Prem 23\n//   14924, // Champs league\n//   15002, //Europa\n//   15066, //Spanish secunda 22/23\n//   12621, //Italy serie B 22/23\n//   14931, //Bundesliga 2 22/23\n//   // 12623, //German 3rd tier 22/23\n//   14954, //French League 2 22/23\n//   15061, //Scottish Championship 22/23\n//   14943, //Scottish league 1 22/23\n//   15209, //Scottish league 2 22/23\n//   12827, //Women's prem 23/24\n//   13973, //MLS 25,\n//   14236, //Canada 25\n//   14231, //Brazil prem 24\n//   15310, //Argentina prem 23\n//   15234, //Mexico prem 23/24\n//   12933, //National league North and South 22/23\n//   13703, //Australian A league 24/25\n//   16243, //S Korea 25,\n//   16242, //Japan 25\n//   12772, //Saudi 24/25\n//   13964, // WC Qual Europe,\n//   10121, // WC Qual SA,\n//   11426, // WC Qual ConCaf\n//   12801, // WC Qual Aus,\n// ];\n\nlet today;\nlet todayFootyStats;\nlet todaySS;\nlet tomorrow;\nlet tomorrowFootyStats;\nlet tomorrowSS;\nexport let date;\nlet dateSS;\nlet dateFootyStats;\nlet yesterday;\nlet yesterdayFootyStats;\nlet yesterdaySS;\nlet lastSaturday;\nlet lastSaturdayFootyStats;\nlet historic;\nlet historicFootyStats;\nlet historicSS;\nlet historicDate;\nlet string;\nlet dateString;\nlet dateString2;\nlet dateUnformatted;\nlet todaysDateUnformatted;\nlet tomorrowsDateUnformatted;\nlet yesterdaysDateUnformatted;\nlet saturdayDateUnformatted;\n\n\n// let matches = [];\n// let fixtureArray = [];\n// let dynamicDate = unformattedDate;\n\n// // Fire all fetches at the same time\n// const [matchesRes, formRes, leagueRes] = await Promise.all([\n//   fetch(url),\n//   fetch(formUrl),\n//   fetch(leagueUrl),\n// ]);\n\n// // Parse JSON (in parallel too)\n// const [matchesData, formData, leagueData] = await Promise.all([\n//   matchesRes.json(),\n//   formRes.json(),\n//   leagueRes.json(),\n// ]);\n\n\nasync function calculateDate(dateString) {\n  const day = dateString.getDate();\n  const month = dateString.getMonth() + 1;\n  const year = dateString.getFullYear();\n  return [`${month}${day}${year}`, `${year}-${month}-${day}`];\n}\n\nasync function convertTimestampForSofaScore(timestamp) {\n  let newDate = new Date(timestamp);\n\n  let year = newDate.getFullYear();\n  let month = String(newDate.getMonth() + 1).padStart(2, \"0\"); // Adding 1 to month because it is zero-based\n  let day = String(newDate.getDate()).padStart(2, \"0\");\n\n  let converted = `${year}-${month}-${day}`;\n\n  return converted;\n}\n\n(async function fetchLeagueData() {\n  let leagueList;\n  if (userDetail) {\n    paid = await checkUserPaidStatus(userDetail.uid);\n  } else {\n    paid = false;\n  }\n  let now = new Date();\n  let dateNow = await calculateDate(now);\n  console.log(dateNow)\n  leagueList = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}leagueList/${dateNow[0]}`\n  );\n\n  let leagueArray;\n  await leagueList.json().then((leagues) => {\n    leagueArray = Array.from(leagues.data);\n  });\n\n  console.log(leagueArray)\n  for (let i = 0; i < leagueArray.length; i++) {\n    const league = leagueArray[i];\n    const name = leagueArray[i].name;\n\n    for (let x = 0; x < league.season.length; x++) {\n      const element = league.season[x];\n\n      if (\n        element.year === 2025 ||\n        element.year === 20252026 ||\n        element.year === 2026 ||\n        element.year === -1\n      ) {\n        if (\n          element.id !== 5874 &&\n          element.id !== 12623\n        ) {\n          availableLeagues.push({ name: name, element });\n        }\n      }\n    }\n\n    async function mapOrder(array, order, key) {\n      array.sort(function (a, b) {\n        var A = a.element[key],\n          B = b.element[key];\n\n        if (order.indexOf(A) > order.indexOf(B)) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n      return array;\n    }\n    //leagues ordered by id\n    orderedLeagues = await mapOrder(availableLeagues, leagueOrder, \"id\");\n  }\n  return orderedLeagues;\n})();\n\nexport async function getLeagueList() {\n  let i = 0;\n  date = new Date();\n  string = \"Today\";\n  loggedIn = await getCurrentUser();\n\n\n  async function decrementDate(num, date) {\n    i = i - num;\n    console.log(i);\n    if (i > -120) {\n      date.setDate(date.getDate() - num);\n      dateUnformatted = date;\n      dateSS = await convertTimestampForSofaScore(date);\n      [date, dateFootyStats] = await calculateDate(date);\n      string = dateFootyStats;\n      dateString = date;\n      await renderButtons();\n    }\n  }\n\n  async function incrementDateV2(num, date) {\n    i = i + num;\n    console.log(i);\n    if (i <= 4) {\n      date.setDate(date.getDate() + num);\n      dateUnformatted = date;\n      dateSS = await convertTimestampForSofaScore(date);\n      [date, dateFootyStats] = await calculateDate(date);\n      string = dateFootyStats;\n      dateString = date;\n      console.log(dateString);\n      await renderButtons();\n    }\n  }\n\n  const todayRaw = new Date();\n  const tomorrowsDate = new Date(todayRaw);\n  tomorrowsDate.setDate(todayRaw.getDate() + 1);\n\n  const yesterdaysDate = new Date(todayRaw);\n  yesterdaysDate.setDate(todayRaw.getDate() - 1);\n\n  const saturdayDate = new Date(todayRaw);\n  saturdayDate.setDate(todayRaw.getDate() - ((saturdayDate.getDay() + 6) % 7) - 2);\n\n  const historicDate = new Date(todayRaw);\n  historicDate.setDate(todayRaw.getDate() - ((historicDate.getDay() + 6) % 7) - 9);\n\n  // Run calculateDate on all in parallel\n  const [\n    [today, todayFootyStats],\n    [lastSaturday, lastSaturdayFootyStats],\n  ] = await Promise.all([\n    calculateDate(todayRaw),\n    calculateDate(saturdayDate),\n  ]);\n\n  const [\n    todaySS,\n    lastSaturdaySS,\n  ] = await Promise.all([\n    convertTimestampForSofaScore(new Date()),\n    convertTimestampForSofaScore(saturdayDate),\n  ]);\n\n  const text =\n    \"Select a day you would like to retrieve fixtures for from the options above\\n A list of games will be returned once the data has loaded\\n Once all fixtures have loaded, click on “Get Predictions and Stats” to see our forecasted outcomes for every game\\n If a game has completed, the predictions is displayed on the right and the actual result on the left\\n Each individual fixture is tappable/clickable. By doing so, you can access a range of detailed stats, from comparative charts, granular performance measures to previous meetings.\\n All games are subject to the same automated prediction algorithm with the outcome being a score prediction. Factors that determine the tip include the following, amongst others:\\n - Goal differentials\\n - Expected goal differentials \\n - Attack/Defence performance\\n - Form trends over time\\n - Home/Away records\\n - WDL records\\n - Points per game \\n - A range of other comparative factors\\n  –\\n\";\n\n  const text2 =\n    \"A range of tools are available should you wish to use them\\n Build a multi - Use the '+' or '-' buttons to add or remove a game deemed to be one of our highest confidence tips from the day\\n Exotic of the day: A pre-built exotic multi comprising of our highest confidence tips\\n BTTS games: Games where both teams to score is deemed a likely outcome\\n Over 2.5 goals tips: Games where over 2.5 goals are most likely to be scored\\n SSH Tips: Comprises only games where the expected goal differentials between each team are at their greatest. We believe this shows a true disparity in the form of the two opposing teams\\n Tap the 'How to use' option to hide this text\";\n\n  let textJoined = text.concat(text2);\n\n  let newText = textJoined.split(\"\\n\").map((i) => {\n    return <p>{i}</p>;\n  });\n\n  async function renderButtons(loginStatus) {\n    ReactDOM.render(\n      <div className=\"FixtureButtons\">\n        <h6>{loginStatus}</h6>\n        <Button\n          text={`<`}\n          className=\"FixturesButtonAmend\"\n          onClickEvent={async () => await decrementDate(1, date)}\n        />\n        <Button\n          text={dateFootyStats !== undefined ? dateFootyStats : date}\n          className=\"FixturesButtonToday\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"todaysFixtures\",\n                dateString,\n                selectedOdds,\n                dateFootyStats,\n                false,\n                today,\n                dateSS,\n                dateUnformatted\n              )\n            )\n          }\n        />\n        <Button\n          text={`>`}\n          className=\"FixturesButtonAmend\"\n          onClickEvent={async () => await incrementDateV2(1, date)}\n        />\n      </div>,\n      document.getElementById(\"Buttons\")\n    );\n  }\n\n  ReactDOM.render(\n    <div className=\"FixtureButtons\">\n      <Button\n        text={`<`}\n        className=\"FixturesButtonAmend\"\n        onClickEvent={async () => await decrementDate(1, date)}\n      />\n      <Button\n        text={`${string}`}\n        className=\"FixturesButtonToday\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"todaysFixtures\",\n              today,\n              selectedOdds,\n              todayFootyStats,\n              true,\n              today,\n              todaySS,\n              todaysDateUnformatted\n            )\n          )\n        }\n      />\n      <Button\n        text={`>`}\n        className=\"FixturesButtonAmend\"\n        onClickEvent={async () => await incrementDateV2(1, date)}\n      />\n    </div>,\n    document.getElementById(\"Buttons\")\n  );\n  ReactDOM.render(\n    <div className=\"OddsRadios\">\n      <OddsRadio value=\"Fractional odds\"></OddsRadio>\n      <OddsRadio value=\"Decimal odds\"></OddsRadio>\n    </div>,\n    document.getElementById(\"Checkbox\")\n  );\n  ReactDOM.render(\n    <><h6 className=\"PredictionTypeText\">Prediction algorithm type</h6>\n      <div className=\"PredictionRadios\">\n        <PredictionTypeRadio value=\"SSH Tips\"></PredictionTypeRadio>\n        <PredictionTypeRadio value=\"AI Tips\"></PredictionTypeRadio>\n      </div></>,\n    document.getElementById(\"CheckboxTwo\")\n  );\n  ReactDOM.render(\n    <Fragment>\n      <Collapsable\n        // className={\"HowToUse\"}\n        buttonText={\"How to use\"}\n        element={newText}\n      />\n    </Fragment>,\n    document.getElementById(\"XGDiff\")\n  );\n\n  if (loggedIn) {\n    ReactDOM.render(\n      <><div className=\"WelcomeBack\">Welcome back {loggedIn.email}</div></>,\n      document.getElementById(\"Email\")\n    );\n  } else {\n    ReactDOM.render(\n      <>\n        <h3 className=\"MembersGetMore\">Discover the most in depth stats and tips available</h3>\n        <div><p className=\"MembersGetMore\">Join as a free user or upgrade to premium for as little as £1/week, cancel anytime</p></div>\n        <Login />\n      </>\n      , document.getElementById(\"Email\"));\n  }\n}\n\n// Replace with your own Stripe public key\nexport const stripePromise = loadStripe(\n  \"pk_live_51QojxLBrqiWlVPadBxhtoj499YzoC8YjFUIVQwCcTe8B7ZUG47NbYAam2wvNox2mUmzd0WgQh4PWKaIQaxKxubig00yEzjNuVQ\"\n);\n\nexport const handleCheckout = async (priceId) => {\n  const stripe = await stripePromise;\n  const auth = getAuth();\n  const user = auth.currentUser;\n\n  if (!user) {\n    alert(\"Please sign-up or login before purchasing\");\n    return;\n  }\n\n  const response = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}create-checkout-session`,\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ priceId, uid: user.uid }), // Send uid\n    }\n  );\n\n  const session = await response.json();\n\n  const result = await stripe.redirectToCheckout({ sessionId: session.id });\n\n  if (result.error) {\n    console.error(\"Checkout error:\", result.error.message);\n  }\n};\n\nconst welcomeTextUnsplitOne = `The ultimate football resource. Comprehensive stats, analysis and transparent tips for 40+ leagues and cups.\\n `;\nlet welcomeTextOne = welcomeTextUnsplitOne.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nfunction AppContent() {\n  const { user, isPaidUser } = useAuth();\n\n  const [data, setData] = useState({\n    loading: true,\n  });\n\n  useEffect(() => {\n    async function fetchData() {\n      let now = new Date();\n      let dateNow = await calculateDate(now);\n      const [\n        todaySS,\n      ] = await Promise.all([\n        convertTimestampForSofaScore(new Date())]);\n\n\n      fixtureList.push(\n        await generateFixtures(\n          \"todaysFixtures\",\n          dateNow[0],\n          selectedOdds,\n          dateNow[1],\n          true,\n          dateNow[0],\n          todaySS,\n          new Date()\n        ))\n\n\n      // Update the component state with the fetched data\n      setData({\n        loading: false,\n      });\n    }\n\n    fetchData();\n  }, []); // The empty dependency array ensures this runs only o\n\n  getLeagueList();\n\n  return (\n    <div className=\"App\">\n      <div className=\"DarkMode\">\n        <Logo />\n        <ThemeToggle />\n      </div>\n      <HamburgerMenu />\n      <nav className=\"hidden md:flex gap-6\">\n        {menuItems.map((item) => (\n          <a\n            key={item}\n            href={`#${item.toLowerCase()}`}\n            className=\"text-lg font-semibold hover:text-blue-500\"\n          >\n            {item}\n          </a>\n        ))}\n      </nav>\n      <div id=\"LoadingContainer\" className=\"LoadingContainer\" />\n      <div id=\"RadioContainer\" className=\"RadioContainer\">\n        <div id=\"RadioText\" />\n        <div id=\"RadioButtons\" />\n      </div>\n      <div id=\"Email\" className=\"Email\"></div>\n      <div id=\"Day\" />\n\n\n      <div id=\"ExplainerText\" />\n      <div id=\"Loading\" className=\"Loading\"></div>\n      <div id=\"Buttons\" className=\"Buttons\">\n      </div>\n      <Collapsable buttonText={\"Options \\u{2630}\"} className={\"Options\"} element={\n        <><div id=\"Checkbox\" /><div id=\"CheckboxTwo\" className=\"CheckboxTwo\" /></>\n      }>\n      </Collapsable>\n\n      {user ? (\n        isPaidUser ? (\n          // If the user is logged in and is a paying customer, show the cancel button\n          <div />\n        ) : (\n          // If the user is logged in but is NOT a paying customer, show subscribe buttons\n          <div className=\"SubscribeContainer\">\n            <span className=\"MembershipInfo\">\n              Full fixtures and multis are restricted to premium\n              members. Memberships can be cancelled at any time and prices will\n              differ in currencies other than GBP. Payments are securely hosted\n              by Stripe.\n            </span>\n            <button\n              onClick={() => handleCheckout(\"price_1QrQ4ZBrqiWlVPadCkhLhtiZ\")}\n              className=\"SubscribeButton\"\n            >\n              Subscribe for £1/week\n            </button>\n            <button\n              onClick={() => handleCheckout(\"price_1QrQ5NBrqiWlVPadFBuBKKSM\")}\n              className=\"SubscribeButton\"\n            >\n              Subscribe for £3/month\n            </button>\n            <button\n              onClick={() => handleCheckout(\"price_1QrQ75BrqiWlVPadEML30BoJ\")}\n              className=\"SubscribeButton\"\n            >\n              Subscribe for £30/year\n            </button>\n          </div>\n        )\n      ) : (\n        // If the user is not logged in, show nothing\n        <div></div>\n      )}\n\n      <div id=\"GeneratePredictions\" className=\"GeneratePredictions\" />\n      <div id=\"MultiPlaceholder\" className=\"MultiPlaceholder\" />\n      <div id=\"shortlistRender\" />\n      <Collapsable buttonText={\"ROI\"} className={\"ROI\"} element={<div id=\"successMeasure2\" />} />\n      <div id=\"highLowLeagues\" className=\"HighLowLeagues\" />\n      <div id=\"risk\" />\n      <div id=\"successMeasure\" />\n      <div id=\"tables\" />\n      <div id=\"homeBadge\" />\n      <div id=\"FixtureContainerHeaders\"></div>\n\n      <div id=\"FixtureContainer\">\n        <h6 className=\"WelcomeText\">{welcomeTextOne}</h6>\n        <div>\n          <h6 className=\"WelcomeText\">\n            <ul className=\"AllLeagues\" key=\"league-list\">\n              <li className=\"League\" key=\"premier-league\">\n                Premier League\n              </li>\n              <li className=\"League\" key=\"english-football-league\">\n                English Football League\n              </li>\n              <li className=\"League\" key=\"la-liga\">\n                La Liga\n              </li>\n              <li className=\"League\" key=\"serie-a\">\n                Serie A\n              </li>\n              <li className=\"League\" key=\"bundesliga\">\n                Bundesliga\n              </li>\n              <li className=\"League\" key=\"ligue-1\">\n                Ligue 1\n              </li>\n              <li className=\"League\" key=\"mls\">\n                MLS\n              </li>\n              <li className=\"League\" key=\"primeira-liga\">\n                Primeira Liga\n              </li>\n              <li className=\"League\" key=\"champions-league\">\n                UEFA Champions League\n              </li>\n              <li className=\"League\" key=\"loads-more\">\n                Loads more...\n              </li>\n            </ul>\n            <a\n              className=\"SocialLink\"\n              href=\"https://www.reddit.com/r/xgtipping/\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              r/xgtipping\n            </a>\n          </h6>\n        </div>\n        <h6 className=\"GetMatchStatText\">\n          Games shown below for illustrative purposes only\n        </h6>\n        {/* <div id=\"Checkbox\" /> */}\n        {/* <div id=\"CheckboxTwo\" className=\"CheckboxTwo\" /> */}\n        {/* <div className=\"ExplainerContainer\">\n          <span className=\"oddsHomeExplainer\">Home odds</span>\n          <span className=\"emptyHomeTeam\"></span>\n          <span className=\"scoreExplainer\">Result / KO Time</span>\n          <span className=\"predictionExplainer\">Our Prediction</span>\n          <span className=\"emptyAwayTeam\"></span>\n          <span className=\"oddsAwayExplainer\">Away odds</span>\n        </div> */}\n\n        <Fixture\n          fixtures={mockedFixtures.matches}\n          mock={true}\n          className={\"individualFixture\"}\n        />\n      </div>\n      <div id=\"XGDiff\" />\n\n      {user ? (\n        isPaidUser ? (\n          // If the user is logged in and is a paying customer, show the cancel button\n          <button\n            onClick={() => {\n              window.location.href =\n                \"https://www.soccerstatshub.com/#/cancelsubscription\";\n            }}\n            className=\"CancelButton\"\n          >\n            Cancel Subscription\n          </button>\n        ) : (\n          <div />\n        )\n      ) : (\n        // If the user is not logged in, show nothing\n        <div></div>\n      )}\n      <div className=\"bitcoin\" id=\"bitcoin\">\n        <a\n          href=\"https://www.ko-fi.com/xgtipping\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Donations\n        </a>\n        <span className=\"bitcoinSymbol\">&#x20bf;itcoin address</span>\n        <span className=\"bitcoinAddress\">\n          bc1q7j62txkvhfu0dt3l0s07saze6pjnyzs26wfgp0\n        </span>\n      </div>\n      <div className=\"Social\">\n        <TwitterShareButton\n          url={\"www.soccerstatshub.com\"}\n          title={\"#SoccerStatsHub\"}\n          className=\"ShareButton\"\n        >\n          <TwitterIcon size={\"3em\"} round={true} />\n        </TwitterShareButton>\n        <RedditShareButton\n          url={\"www.soccerstatshub.com\"}\n          title={\"Soccer Stats Hub\"}\n          className=\"ShareButton\"\n        >\n          <RedditIcon size={\"3em\"} round={true} />\n        </RedditShareButton>\n        <FacebookShareButton\n          url={\"www.soccerstatshub.com\"}\n          quote={\"SoccerStatsHub - data-driven football predictions\"}\n          className=\"ShareButton\"\n        >\n          <FacebookIcon size={\"3em\"} round={true} />\n        </FacebookShareButton>\n        <WhatsappShareButton\n          url={\"www.soccerstatshub.com\"}\n          title={\"SoccerStatsHub\"}\n          separator=\": \"\n          className=\"ShareButton\"\n        >\n          <WhatsappIcon size={\"3em\"} round={true} />\n        </WhatsappShareButton>\n        <TelegramShareButton\n          url={\"SoccerStatsHub\"}\n          title={\"Soccer Stats Hub\"}\n          className=\"ShareButton\"\n        >\n          <TelegramIcon size={\"3em\"} round={true} />\n        </TelegramShareButton>\n      </div>\n\n      <Collapsable buttonText={\"Terms and Conditions\"} element={<StripePolicies />} />\n      <Collapsable buttonText={\"Privacy Policy\"} element={<PrivacyPolicy />} />\n    </div>\n  );\n}\n\nexport default function App() {\n  return (\n    <AuthProvider>\n      <Routes>\n        <Route path=\"/\" element={<AppContent />} />\n      </Routes>\n    </AuthProvider>\n  );\n}\n","/Users/greg/Development/Predictor/src/components/Success.js",[],"/Users/greg/Development/Predictor/src/components/PasswordReset.js",[],"/Users/greg/Development/Predictor/src/components/Under25.js",[],"/Users/greg/Development/Predictor/src/components/Over25.js",[],"/Users/greg/Development/Predictor/src/components/BTTSFixtures.js",[],"/Users/greg/Development/Predictor/src/components/CancelSubscription.js",[],"/Users/greg/Development/Predictor/src/components/HighestScoringTeams.js",[],"/Users/greg/Development/Predictor/src/components/Cancel.js",[],"/Users/greg/Development/Predictor/src/components/Team.js",["310"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CreateBadge } from \"./createBadge\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction TeamPage() {\n  const [dataState, setData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const responseHome = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}team/${storedFixtureDetailsJson.homeId}`\n      );\n      const resultHome = await responseHome.json();\n\n      const responseAway = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}team/${storedFixtureDetailsJson.awayId}`\n      );\n      const resultAway = await responseAway.json();\n      // setData(result.data.stadium_name);\n\n      let indexHome = resultHome.data.findIndex(\n        (x) => x.season_format === \"Domestic League\"\n      );\n      let indexAway = resultAway.data.findIndex(\n        (x) => x.season_format === \"Domestic League\"\n      );\n\n      if (resultHome.data[indexHome].stats.seasonScoredNum_overall) {\n        setData((test) => ({\n          ...test,\n          scoredOverallHome:\n            resultHome.data[indexHome].stats.seasonScoredNum_overall,\n          playedHomeOnly:\n            resultHome.data[indexHome].stats.seasonMatchesPlayed_home,\n          scoredOverallHomeOnly:\n            resultHome.data[indexHome].stats.seasonScoredNum_home,\n          conceededOverallHome:\n            resultHome.data[indexHome].stats.seasonConcededNum_overall,\n          conceededOverallHomeOnly:\n            resultHome.data[indexHome].stats.seasonConcededNum_home,\n\n          PPGOverallHome: resultHome.data[indexHome].stats.seasonPPG_overall,\n          PPGOverallHomeOnly: resultHome.data[indexHome].stats.seasonPPG_home,\n          leaguePosition_overallHome:\n            resultHome.data[indexHome].stats.leaguePosition_overall,\n          leaguePosition_HomeOnly:\n            resultHome.data[indexHome].stats.leaguePosition_home,\n          averageAttendance:\n            resultHome.data[indexHome].stats.average_attendance_home,\n          BTTSPercentage_overallHome:\n            resultHome.data[indexHome].stats.seasonBTTSPercentage_overall,\n          BTTSAndWinPercentage_Home:\n            resultHome.data[indexHome].stats.BTTS_and_win_percentage_overall,\n          BTTSAndLosePercentage_Home:\n            resultHome.data[indexHome].stats.BTTS_and_lose_percentage_overall,\n          BTTSBothHalvesHome:\n            resultHome.data[indexHome].stats\n              .BTTS_both_halves_percentage_overall,\n          GoalDifferenceHT_overall_Home:\n            resultHome.data[indexHome].stats.GoalDifferenceHT_overall,\n          GD_2hg_overall_Home: resultHome.data[indexHome].stats.gd_2hg_overall,\n          leadingAtHTPercentage_overallHome:\n            resultHome.data[indexHome].stats.leadingAtHTPercentage_overall,\n          seasonOver15Percentage_overallHome:\n            resultHome.data[indexHome].stats.seasonOver15Percentage_overall,\n          seasonOver25Percentage_overallHome:\n            resultHome.data[indexHome].stats.seasonOver25Percentage_overall,\n          seasonOver35Percentage_overallHome:\n            resultHome.data[indexHome].stats.seasonOver35Percentage_overall,\n          seasonOver45Percentage_overallHome:\n            resultHome.data[indexHome].stats.seasonOver45Percentage_overall,\n          scoredBothHalvesPercentage_overallHome:\n            resultHome.data[indexHome].stats.scoredBothHalvesPercentage_overall,\n          shots_on_target_per_goals_scored_overallHome:\n            resultHome.data[indexHome].stats.additional_info\n              .shots_on_target_per_goals_scored_overall,\n          cornersTotalAVG_overallHome:\n            resultHome.data[indexHome].stats.cornersTotalAVG_overall,\n          cardsAVG_overallHome:\n            resultHome.data[indexHome].stats.cardsAVG_overall,\n          foulsAVG_overallHome:\n            resultHome.data[indexHome].stats.foulsAVG_overall,\n          penalties_won_per_match_overallHome:\n            resultHome.data[indexHome].stats.additional_info\n              .penalties_won_per_match_overall,\n          penalty_in_a_match_percentage_overallHome:\n            resultHome.data[indexHome].stats.additional_info\n              .penalty_in_a_match_percentage_overall,\n\n          scoredOverallAway:\n            resultAway.data[indexAway].stats.seasonScoredNum_overall,\n          playedAwayOnly:\n            resultAway.data[indexAway].stats.seasonMatchesPlayed_away,\n          scoredOverallAwayOnly:\n            resultAway.data[indexAway].stats.seasonScoredNum_away,\n          conceededOverallAway:\n            resultAway.data[indexAway].stats.seasonConcededNum_overall,\n          conceededOverallAwayOnly:\n            resultAway.data[indexAway].stats.seasonConcededNum_away,\n\n          PPGOverallAway: resultAway.data[indexAway].stats.seasonPPG_overall,\n          PPGOverallAwayOnly: resultAway.data[indexAway].stats.seasonPPG_away,\n          leaguePosition_overallAway:\n            resultAway.data[indexAway].stats.leaguePosition_overall,\n          leaguePosition_AwayOnly:\n            resultAway.data[indexAway].stats.leaguePosition_away,\n          BTTSPercentage_overallAway:\n            resultAway.data[indexAway].stats.seasonBTTSPercentage_overall,\n          BTTSAndWinPercentage_Away:\n            resultAway.data[indexAway].stats.BTTS_and_win_percentage_overall,\n          BTTSAndLosePercentage_Away:\n            resultAway.data[indexAway].stats.BTTS_and_lose_percentage_overall,\n          BTTSBothHalvesAway:\n            resultAway.data[indexAway].stats\n              .BTTS_both_halves_percentage_overall,\n          GoalDifferenceHT_overall_Away:\n            resultAway.data[indexAway].stats.GoalDifferenceHT_overall,\n          GD_2hg_overall_Away: resultAway.data[indexAway].stats.gd_2hg_overall,\n          leadingAtHTPercentage_overallAway:\n            resultAway.data[indexAway].stats.leadingAtHTPercentage_overall,\n          seasonOver15Percentage_overallAway:\n            resultAway.data[indexAway].stats.seasonOver15Percentage_overall,\n          seasonOver25Percentage_overallAway:\n            resultAway.data[indexAway].stats.seasonOver25Percentage_overall,\n          seasonOver35Percentage_overallAway:\n            resultAway.data[indexAway].stats.seasonOver35Percentage_overall,\n          seasonOver45Percentage_overallAway:\n            resultAway.data[indexAway].stats.seasonOver45Percentage_overall,\n          scoredBothHalvesPercentage_overallAway:\n            resultAway.data[indexAway].stats.scoredBothHalvesPercentage_overall,\n          shots_on_target_per_goals_scored_overallAway:\n            resultAway.data[indexAway].stats.additional_info\n              .shots_on_target_per_goals_scored_overall,\n\n          cornersTotalAVG_overallAway:\n            resultAway.data[indexAway].stats.cornersTotalAVG_overall,\n          cardsAVG_overallAway:\n            resultAway.data[indexAway].stats.cardsAVG_overall,\n          foulsAVG_overallAway:\n            resultAway.data[indexAway].stats.foulsAVG_overall,\n          penalties_won_per_match_overallAway:\n            resultAway.data[indexAway].stats.additional_info\n              .penalties_won_per_match_overall,\n          penalty_in_a_match_percentage_overallAway:\n            resultAway.data[indexAway].stats.additional_info\n              .penalty_in_a_match_percentage_overall,\n        }));\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  const storedDataHome = useSelector((state) => state.data.dataHome);\n  const jsonDataHome = JSON.parse(storedDataHome);\n  const propertyNamesHome = Object.entries(jsonDataHome);\n\n  const storedDataHomeDef = useSelector((state) => state.data.dataHomeDef);\n  const jsonDataHomeDef = JSON.parse(storedDataHomeDef);\n  const propertyNamesHomeDef = Object.entries(jsonDataHomeDef);\n\n  const storedDataallTeamResultsHome = useSelector(\n    (state) => state.data.allTeamResultsHome\n  );\n  const jsonDataallTeamResultsHome = JSON.parse(storedDataallTeamResultsHome);\n  const propertyNamesallTeamResultsHome = Object.values(\n    jsonDataallTeamResultsHome\n  );\n\n  const homeDetails = useSelector((state) => state.data.homeDetails);\n  const jsonHomeDetails = JSON.parse(homeDetails);\n\n  const storedDataAway = useSelector((state) => state.data.dataAway);\n  const jsonDataAway = JSON.parse(storedDataAway);\n  const propertyNamesAway = Object.entries(jsonDataAway);\n\n  const storedDataAwayDef = useSelector((state) => state.data.dataAwayDef);\n  const jsonDataAwayDef = JSON.parse(storedDataAwayDef);\n  const propertyNamesAwayDef = Object.entries(jsonDataAwayDef);\n\n  const storedDataallTeamResultsAway = useSelector(\n    (state) => state.data.allTeamResultsAway\n  );\n  const jsonDataallTeamResultsAway = JSON.parse(storedDataallTeamResultsAway);\n  const propertyNamesallTeamResultsAway = Object.values(\n    jsonDataallTeamResultsAway\n  );\n\n  const awayDetails = useSelector((state) => state.data.awayDetails);\n  const jsonAwayDetails = JSON.parse(awayDetails);\n\n  const storedFixtureDetails = useSelector(\n    (state) => state.data.fixtureDetails\n  );\n  const storedFixtureDetailsJson = JSON.parse(storedFixtureDetails);\n  console.log(jsonAwayDetails);\n\n  const options = {\n    plugins: {\n      title: {\n        display: true,\n        text: \"Team comparison\",\n      },\n    },\n    aspectRatio: 0.5,\n    maintainAspectRatio: true,\n    responsive: true,\n    scales: {\n      x: {\n        stacked: true,\n      },\n      y: {\n        stacked: true,\n        display: false,\n      },\n    },\n  };\n  const labels = [\n    storedFixtureDetailsJson.homeTeamName,\n    storedFixtureDetailsJson.awayTeamName,\n  ];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        data: [\n          jsonHomeDetails[\"Attacking Strength\"],\n          jsonAwayDetails[\"Attacking Strength\"],\n        ],\n        label: \"Attacking Strength\",\n        backgroundColor: \"#030061\",\n      },\n      {\n        data: [\n          jsonHomeDetails[\"Defensive Strength\"],\n          jsonAwayDetails[\"Defensive Strength\"],\n        ],\n        label: \"Defensive Strength\",\n        backgroundColor: \"#CC3314\",\n      },\n    ],\n  };\n\n  return (\n    <div className=\"TeamStatsContainer\">\n      <div className=\"FixtureHeadingContiner\">\n        <CreateBadge\n          image={storedFixtureDetailsJson.homeTeamBadge}\n          ClassName=\"HomeTeamBadge\"\n          alt=\"Home team badge\"\n        ></CreateBadge>\n        {`${storedFixtureDetailsJson.homeTeamName} v ${storedFixtureDetailsJson.awayTeamName}`}\n        <CreateBadge\n          image={storedFixtureDetailsJson.awayTeamBadge}\n          ClassName=\"AwayTeamBadge\"\n          alt=\"Away team badge\"\n        ></CreateBadge>\n      </div>\n      <h3>\n        {storedFixtureDetailsJson.stadium} KO: {storedFixtureDetailsJson.time} |\n        Average Attendance: {dataState.averageAttendance}\n      </h3>\n      <h3>\n        Soccer Stats Hub Prediction: {storedFixtureDetailsJson.homeGoals} -{\" \"}\n        {storedFixtureDetailsJson.awayGoals}\n      </h3>\n      <div className=\"TeamStats\">\n        <ul className=\"HomeTeamStats\">\n          <iframe\n            title=\"HomeTeamStats\"\n            src={`https://footystats.org/api/club?id=${storedFixtureDetailsJson.homeId}`}\n            height=\"100%\"\n            width=\"100%\"\n            style={{\n              height: \"420px\",\n              width: \"100%\",\n              border: \"0.1em solid #030061\",\n            }}\n          ></iframe>\n          <h3>{storedFixtureDetailsJson.homeTeamName}</h3>\n          {propertyNamesHome.map(([key, value], index) => (\n            <li key={index}>\n              <strong>{key}:</strong>{\" \"}\n              {typeof value === \"object\" ? JSON.stringify(value) : value}\n            </li>\n          ))}\n          <ul className=\"HomeTeamStats\">\n            {propertyNamesHomeDef.map(([key, value], index) => (\n              <li key={index}>\n                <strong>{key}:</strong>{\" \"}\n                {typeof value === \"object\" ? JSON.stringify(value) : value}\n              </li>\n            ))}\n          </ul>\n          <li>Scored overall: {dataState.scoredOverallHome}</li>\n          <li>Conceeded overall: {dataState.conceededOverallHome}</li>\n          <li>\n            Average scored home only:{\" \"}\n            {(\n              dataState.scoredOverallHomeOnly / dataState.playedHomeOnly\n            ).toFixed(2)}\n          </li>\n          <li>\n            Average conceeded home only:{\" \"}\n            {(\n              dataState.conceededOverallHomeOnly / dataState.playedHomeOnly\n            ).toFixed(2)}\n          </li>\n          <li>PPG overall: {dataState.PPGOverallHome}</li>\n          <li>PPG home only: {dataState.PPGOverallHomeOnly}</li>\n          <li>League position: {dataState.leaguePosition_overallHome}</li>\n          <li>\n            League position home only: {dataState.leaguePosition_HomeOnly}\n          </li>\n          <li>BTTS {dataState.BTTSPercentage_overallHome}%</li>\n          <li>BTTS and win: {dataState.BTTSAndWinPercentage_Home}%</li>\n          <li>BTTS and lose: {dataState.BTTSAndLosePercentage_Home}%</li>\n          <li>BTTS both halves: {dataState.BTTSBothHalvesHome}%</li>\n          <li>\n            Goal diff 1st half only: {dataState.GoalDifferenceHT_overall_Home}\n          </li>\n          <li>Goal diff 2nd half only: {dataState.GD_2hg_overall_Home}</li>\n          <li>\n            Leading at half time: {dataState.leadingAtHTPercentage_overallHome}%\n          </li>\n          <li>\n            Over 1.5 goals in games:{\" \"}\n            {dataState.seasonOver15Percentage_overallHome}%\n          </li>\n          <li>\n            Over 2.5 goals in games:{\" \"}\n            {dataState.seasonOver25Percentage_overallHome}%\n          </li>\n          <li>\n            Over 3.5 goals in games:{\" \"}\n            {dataState.seasonOver35Percentage_overallHome}%\n          </li>\n          <li>\n            Over 4.5 goals in games:{\" \"}\n            {dataState.seasonOver45Percentage_overallHome}%\n          </li>\n          <li>\n            Scored both halves:{\" \"}\n            {dataState.scoredBothHalvesPercentage_overallHome}%\n          </li>\n          <li>\n            SOTs per goal:{\" \"}\n            {dataState.shots_on_target_per_goals_scored_overallHome}\n          </li>\n          <li>Corners in game avg: {dataState.cornersTotalAVG_overallHome}</li>\n          <li>Cards avg: {dataState.cardsAVG_overallHome}</li>\n          <li>Fouls against avg: {dataState.foulsAVG_overallHome}</li>\n          <li>\n            Penalties won avg: {dataState.penalties_won_per_match_overallHome}\n          </li>\n          <li>\n            Penalties in match:{\" \"}\n            {dataState.penalty_in_a_match_percentage_overallHome}%\n          </li>\n        </ul>\n        <ul className=\"AwayTeamStats\">\n          <iframe\n            title=\"AwayTeamStats\"\n            src={`https://footystats.org/api/club?id=${storedFixtureDetailsJson.awayId}`}\n            height=\"100%\"\n            width=\"100%\"\n            style={{\n              height: \"420px\",\n              width: \"100%\",\n              color: \"#030061\",\n              border: \"0.1em solid #030061\",\n            }}\n          ></iframe>\n          <h3>{storedFixtureDetailsJson.awayTeamName}</h3>\n          {propertyNamesAway.map(([key, value], index) => (\n            <li key={index}>\n              <strong>{key}:</strong>{\" \"}\n              {typeof value === \"object\" ? JSON.stringify(value) : value}\n            </li>\n          ))}\n          <ul className=\"AwayTeamStats\">\n            {propertyNamesAwayDef.map(([key, value], index) => (\n              <li key={index}>\n                <strong>{key}:</strong>{\" \"}\n                {typeof value === \"object\" ? JSON.stringify(value) : value}\n              </li>\n            ))}\n          </ul>\n          <li>Scored overall: {dataState.scoredOverallAway}</li>\n          <li>Conceeded overall: {dataState.conceededOverallAway}</li>\n          <li>\n            Average scored away only:{\" \"}\n            {(\n              dataState.scoredOverallAwayOnly / dataState.playedAwayOnly\n            ).toFixed(2)}\n          </li>\n          <li>\n            Average conceeded away only:{\" \"}\n            {(\n              dataState.conceededOverallAwayOnly / dataState.playedAwayOnly\n            ).toFixed(2)}\n          </li>\n          <li>PPG overall: {dataState.PPGOverallAway}</li>\n          <li>PPG away only: {dataState.PPGOverallAwayOnly}</li>\n          <li>League position: {dataState.leaguePosition_overallAway}</li>\n          <li>\n            League position away only: {dataState.leaguePosition_AwayOnly}\n          </li>\n          <li>BTTS: {dataState.BTTSPercentage_overallAway}%</li>\n          <li>BTTS and win: {dataState.BTTSAndWinPercentage_Away}%</li>\n          <li>BTTS and lose: {dataState.BTTSAndLosePercentage_Away}%</li>\n          <li>BTTS both halves: {dataState.BTTSBothHalvesAway}%</li>\n          <li>\n            Goal diff 1st half only: {dataState.GoalDifferenceHT_overall_Away}\n          </li>\n          <li>Goal diff 2nd half only: {dataState.GD_2hg_overall_Away}</li>\n          <li>\n            Leading at half time: {dataState.leadingAtHTPercentage_overallAway}%\n          </li>\n          <li>\n            Over 1.5 goals in games:{\" \"}\n            {dataState.seasonOver15Percentage_overallAway}%\n          </li>\n          <li>\n            Over 2.5 goals in games:{\" \"}\n            {dataState.seasonOver25Percentage_overallAway}%\n          </li>\n          <li>\n            Over 3.5 goals in games:{\" \"}\n            {dataState.seasonOver35Percentage_overallAway}%\n          </li>\n          <li>\n            Over 4.5 goals in games:{\" \"}\n            {dataState.seasonOver45Percentage_overallAway}%\n          </li>\n          <li>\n            Scored both halves:{\" \"}\n            {dataState.scoredBothHalvesPercentage_overallAway}%\n          </li>\n          <li>\n            SOTs per goal:{\" \"}\n            {dataState.shots_on_target_per_goals_scored_overallAway}\n          </li>\n          <li>Corners in game avg: {dataState.cornersTotalAVG_overallAway}</li>\n          <li>Cards avg: {dataState.cardsAVG_overallAway}</li>\n          <li>Fouls against avg: {dataState.foulsAVG_overallAway}</li>\n          <li>\n            Penalties won avg: {dataState.penalties_won_per_match_overallAway}\n          </li>\n          <li>\n            Penalties in match:{\" \"}\n            {dataState.penalty_in_a_match_percentage_overallAway}%\n          </li>\n        </ul>\n        <div className=\"ChartContainer\">\n          <span className=\"Spacer\"></span>\n          <Bar options={options} data={data} className=\"ComparisonBar\" />\n          <span className=\"Spacer\"></span>\n        </div>\n        <ul className=\"HomeTeamResults\">\n          {propertyNamesallTeamResultsHome.map((match, index) => (\n            <>\n              <div className=\"MatchDate\">{match.date}</div>\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{match.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {match.homeGoals} : {match.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{match.awayTeam}</div>\n              </div>\n            </>\n          ))}\n        </ul>\n        <ul className=\"AwayTeamResults\">\n          {propertyNamesallTeamResultsAway.map((match, index) => (\n            <>\n              <div className=\"MatchDate\">{match.date}</div>\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{match.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {match.homeGoals} : {match.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{match.awayTeam}</div>\n              </div>\n            </>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default TeamPage;\n","/Users/greg/Development/Predictor/src/components/BTTSTeams.js",[],"/Users/greg/Development/Predictor/src/components/HighestScoringFixtures.js",[],"/Users/greg/Development/Predictor/src/logic/store.js",[],"/Users/greg/Development/Predictor/src/components/OddsRadio.js",[],"/Users/greg/Development/Predictor/src/components/Button.js",[],"/Users/greg/Development/Predictor/src/components/Logo.js",[],"/Users/greg/Development/Predictor/src/components/Fixture.js",["311","312","313","314","315","316","317"],"import React, { Fragment, useState, useEffect, useRef } from \"react\";\nimport { CreateBadge } from \"./createBadge\";\nimport { useDispatch } from \"react-redux\";\nimport { setData } from \"../logic/dataSlice\";\nimport { Provider } from \"react-redux\";\nimport store from \"../logic/store\"; // Import your Redux store\nimport { clicked } from \"../logic/getScorePredictions\";\nimport { userDetail } from \"../logic/authProvider\";\nimport { checkUserPaidStatus } from \"../logic/hasUserPaid\";\nimport GameStats from \"./GameStats\";\nimport { userTips } from \"./GameStats\";\nimport { leagueStatsArray } from \"../logic/getScorePredictions\";\nimport LeagueName from './LeagueName';\nimport ShareShortlistButton from \"./ShareShortlistButton\";\n\nlet resultValue;\nlet paid;\nvar count;\nlet mockValue;\nvar setCount;\nfunction toggle(bool) {\n  count = !bool;\n  return count;\n}\n\nlet tipOutcome = undefined;\n\nfunction GetDivider(fixture, mock) {\n  const matchStatus = fixture.status;\n  let isPrediction = resultValue;\n\n  if (fixture.fixture.omit === true && matchStatus !== \"complete\") {\n    isPrediction = true;\n    return (\n      <div className=\"KOAndPrediction\">\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n      </div>\n    );\n  } else if (mockValue === true && matchStatus === \"complete\") {\n    isPrediction = false;\n    return (\n      <div className=\"KOAndPrediction\">\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n      </div>\n    );\n  } else if (mockValue === true && matchStatus !== \"complete\") {\n    isPrediction = true;\n    return (\n      <div className=\"KOAndPrediction\">\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n      </div>\n    );\n  } else if (isPrediction === false && matchStatus !== \"complete\") {\n    return (\n      <div className=\"KOAndPrediction\">\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n      </div>\n    );\n  } else if (isPrediction === false && matchStatus === \"complete\") {\n    return (\n      <div className=\"KOAndPrediction\">\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n      </div>\n    );\n  } else if (isPrediction === true && matchStatus === \"complete\") {\n    let outcome;\n    let prediction;\n\n    switch (true) {\n      case fixture.fixture.homeGoals > fixture.fixture.awayGoals:\n        outcome = 0;\n        fixture.fixture.winner = fixture.fixture.homeTeam;\n        fixture.fixture.outcome = \"homeWin\";\n        break;\n      case fixture.fixture.homeGoals === fixture.fixture.awayGoals:\n        outcome = 1;\n        fixture.fixture.winner = \"draw\";\n        fixture.fixture.outcome = \"draw\";\n\n        break;\n      case fixture.fixture.homeGoals < fixture.fixture.awayGoals:\n        outcome = 2;\n        fixture.fixture.winner = fixture.fixture.awayTeam;\n        fixture.fixture.outcome = \"awayWin\";\n\n        break;\n      default:\n        break;\n    }\n\n    switch (true) {\n      case fixture.fixture.goalsA > fixture.fixture.goalsB:\n        prediction = 0;\n        break;\n      case fixture.fixture.goalsA === fixture.fixture.goalsB:\n        prediction = 1;\n        break;\n      case fixture.fixture.goalsA < fixture.fixture.goalsB:\n        prediction = 2;\n        break;\n      default:\n        break;\n    }\n\n    if (fixture.fixture.omit === true) {\n      return (\n        <Fragment>\n          <div\n            className=\"Omitted\"\n            key={fixture.fixture.homeTeam}\n            data-cy={\"score-\" + fixture.fixture.id}\n          ></div>\n        </Fragment>\n      );\n    } else if (outcome === prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        switch (true) {\n          case outcome === 0:\n            fixture.fixture.profit = fixture.fixture.homeOdds;\n            break;\n          case outcome === 1:\n            fixture.fixture.profit = fixture.fixture.drawOdds;\n            break;\n          case outcome === 2:\n            fixture.fixture.profit = fixture.fixture.awayOdds;\n            break;\n          default:\n            break;\n        }\n      } else fixture.fixture.profit = 1;\n\n      if (\n        fixture.fixture.goalsA === fixture.fixture.homeGoals &&\n        fixture.fixture.goalsB === fixture.fixture.awayGoals\n      ) {\n        fixture.fixture.exactScore = true;\n        tipOutcome = \"exact\";\n        return null;\n      } else {\n        fixture.fixture.exactScore = false;\n        tipOutcome = \"correct\";\n        return null;\n      }\n    } else if (outcome !== prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        fixture.fixture.profit = 0;\n      } else {\n        fixture.fixture.profit = 1;\n      }\n      // fixture.fixture.exactScore = false;\n      tipOutcome = \"incorrect\";\n      return null;\n    }\n  } else {\n    return (\n      <div className=\"KOAndPrediction\">\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n      </div>\n    );\n  }\n}\n\nconst downArrow = \"\\u{2630}\";\nconst rightArrow = \"\\u{29C9}\";\n\nexport let testing;\n\nfunction SingleFixture({\n  fixture,\n  count,\n  mock,\n  checked,\n  onToggle,\n  showShortlist,\n}) {\n  const dispatch = useDispatch();\n  const [showGameStats, setShowGameStats] = useState(false);\n  const [isLoadingGameStats, setIsLoadingGameStats] = useState(false); // New loading state\n\n  function StoreData() {\n    const fixtureDetails = {\n      id: fixture.id,\n      homeTeamName: fixture.homeTeam,\n      homeId: fixture.homeId,\n      homeTeamBadge: fixture.homeBadge,\n      awayTeamName: fixture.awayTeam,\n      awayId: fixture.awayId,\n      awayTeamBadge: fixture.awayBadge,\n      stadium: fixture.stadium,\n      time: fixture.time,\n      homeGoals: fixture.goalsA,\n      awayGoals: fixture.goalsB,\n    };\n\n    const homeDetails = {\n      \"Attacking Strength\": fixture.formHome.attackingStrength,\n      \"Defensive Strength\": fixture.formHome.defensiveStrength,\n    };\n\n    const awayDetails = {\n      \"Attacking Strength\": fixture.formAway.attackingStrength,\n      \"Defensive Strength\": fixture.formAway.defensiveStrength,\n    };\n\n    const dataToSend = {\n      key1: \"value1\",\n      key2: \"value2\",\n    };\n    fixture.formHome.defensiveMetrics[\"Clean Sheet Percentage\"] =\n      fixture.formHome.CleanSheetPercentage;\n    fixture.formAway.defensiveMetrics[\"Clean Sheet Percentage\"] =\n      fixture.formAway.CleanSheetPercentage;\n\n    localStorage.setItem(\n      \"homeForm\",\n      JSON.stringify(fixture.formHome.attackingMetrics)\n    );\n    localStorage.setItem(\n      \"homeFormDef\",\n      JSON.stringify(fixture.formHome.defensiveMetrics)\n    );\n    localStorage.setItem(\n      \"allTeamResultsHome\",\n      JSON.stringify(fixture.formHome.allTeamResults)\n    );\n    localStorage.setItem(\"homeDetails\", JSON.stringify(homeDetails));\n\n    localStorage.setItem(\n      \"awayForm\",\n      JSON.stringify(fixture.formAway.attackingMetrics)\n    );\n    localStorage.setItem(\n      \"awayFormDef\",\n      JSON.stringify(fixture.formAway.defensiveMetrics)\n    );\n    localStorage.setItem(\n      \"allTeamResultsAway\",\n      JSON.stringify(fixture.formAway.allTeamResults)\n    );\n    localStorage.setItem(\"awayDetails\", JSON.stringify(awayDetails));\n\n    localStorage.setItem(\"fixtureDetails\", JSON.stringify(fixtureDetails));\n\n    dispatch(setData(dataToSend));\n    dispatch(setData({ key1: \"value1\", key2: \"value2\" }));\n  }\n\n  async function handleButtonClick() {\n    if (userDetail) {\n      paid = await checkUserPaidStatus(userDetail.uid);\n      if (clicked === true && paid) {\n        StoreData();\n        window.open(\"/#/fixture\");\n      } else {\n        alert(\"Premium feature only\");\n      }\n    } else {\n      paid = false;\n    }\n  }\n\n  function styleForm(formIndicator) {\n    let className;\n    if (formIndicator === \"W\") {\n      className = \"winSmall\";\n    } else if (formIndicator === \"D\") {\n      className = \"drawSmall\";\n    } else if (formIndicator === \"L\") {\n      className = \"lossSmall\";\n    }\n    return className;\n  }\n\n  const handleGameStatsClick = () => {\n    if (!clicked) {\n      alert(\"Tap Get Predictions to fetch all game stats first\");\n      return;\n    }\n    setIsLoadingGameStats(true);\n    StoreData();\n    setTimeout(() => {\n      setShowGameStats(!showGameStats);\n      setIsLoadingGameStats(false); // Set loading to false after \"loading\"\n    }, 1);\n  };\n\n  return (\n    <div key={fixture.game}>\n      <LeagueName fixture={fixture} mock={mock} showShortlist={showShortlist} />\n      <div className={`individualFixtureContainerfalse`}>\n        <li\n          className={`individualFixture${fixture.omit}`}\n          key={fixture.id}\n          data-cy={fixture.id}\n        // onClick={handleGameStatsClick}\n        // onClick={onToggle} // Toggle checked state on click\n        // style={{ display: checked ? \"lightblue\" : \"white\" }} // Change background when checked\n        >\n          <div className=\"MatchDetail\">\n            <GetDivider\n              result={resultValue}\n              status={fixture.status}\n              fixture={fixture}\n            />\n            <input\n              type=\"checkbox\"\n              checked={checked}\n              onChange={onToggle}\n              className=\"star\"\n              id={`shortlist-${fixture.id}`} // Unique ID for label association\n            />\n          </div>\n          <div className={`HomeAndAwayContainer${fixture.predictionOutcome}`}>\n            <div className=\"HomeContainer\">\n              <div className=\"HomeOdds\">{fixture.fractionHome}</div>\n              <CreateBadge\n                image={fixture.homeBadge}\n                ClassName=\"HomeBadge\"\n                alt=\"Home team badge\"\n                flexShrink={5}\n              />\n              <div className=\"homeTeam\">\n                {\" \"}\n                {fixture.homeTeam}{\" \"}\n                {fixture.formHome ? `(${fixture.formHome.LeaguePosition})` : \"\"}\n              </div>\n              <div className=\"score\" key={fixture.homeTeam}>\n                {fixture.goalsA !== undefined ? `${fixture.goalsA}` : `-`}\n              </div>\n              <div className={`result`}>\n                {fixture.status === \"complete\" ? `${fixture.homeGoals}` : `-`}\n              </div>\n              <div className={`Last5`}>\n                {fixture.formHome && (\n                  <>\n                    <span\n                      className={styleForm(\n                        fixture.formHome.resultsAll[4] || \"\"\n                      )}\n                    ></span>\n                    <span\n                      className={styleForm(\n                        fixture.formHome.resultsAll[3] || \"\"\n                      )}\n                    ></span>\n                    <span\n                      className={styleForm(\n                        fixture.formHome.resultsAll[2] || \"\"\n                      )}\n                    ></span>\n                    <span\n                      className={styleForm(\n                        fixture.formHome.resultsAll[1] || \"\"\n                      )}\n                    ></span>\n                    <span\n                      className={styleForm(\n                        fixture.formHome.resultsAll[0] || \"\"\n                      )}\n                    ></span>\n                  </>\n                )}\n              </div>\n              <button className=\"GameStatsTwo\" onClick={handleButtonClick}>\n                {rightArrow}\n              </button>\n            </div>\n            <div className=\"AwayContainer\">\n              <div className=\"AwayOdds\">{fixture.fractionAway}</div>\n              <CreateBadge\n                image={fixture.awayBadge}\n                ClassName=\"AwayBadge\"\n                alt=\"Away team badge\"\n              />\n              <div className=\"awayTeam\">\n                {fixture.awayTeam}{\" \"}\n                {fixture.formAway ? `(${fixture.formAway.LeaguePosition})` : \"\"}\n              </div>\n              <div className=\"score\" key={fixture.awayTeam}>\n                {fixture.goalsB !== undefined ? `${fixture.goalsB}` : `-`}\n              </div>\n              <div className=\"result\">\n                {fixture.status === \"complete\" ? `${fixture.awayGoals}` : `-`}\n              </div>\n              <div className={`Last5`}>\n                {fixture.formAway && (\n                  <>\n                    <span\n                      className={styleForm(\n                        fixture.formAway.resultsAll[4] || \"\"\n                      )}\n                    ></span>\n                    <span\n                      className={styleForm(\n                        fixture.formAway.resultsAll[3] || \"\"\n                      )}\n                    ></span>\n                    <span\n                      className={styleForm(\n                        fixture.formAway.resultsAll[2] || \"\"\n                      )}\n                    ></span>\n                    <span\n                      className={styleForm(\n                        fixture.formAway.resultsAll[1] || \"\"\n                      )}\n                    ></span>\n                    <span\n                      className={styleForm(\n                        fixture.formAway.resultsAll[0] || \"\"\n                      )}\n                    ></span>\n                  </>\n                )}\n              </div>\n              <button className=\"GameStats\" onClick={handleGameStatsClick}>\n                {downArrow}\n              </button>\n            </div>\n            {/* <div className=\"ActionButtons\">\n              <input\n                type=\"checkbox\"\n                checked={checked}\n                onChange={onToggle}\n                className=\"star\"\n                id={`shortlist-${fixture.id}`} // Unique ID for label association\n              />\n            </div> */}\n          </div>\n        </li>\n      </div>\n      {isLoadingGameStats && <div>Loading Game Stats...</div>}{\" \"}\n      {/* Show loading message */}\n      {showGameStats && !isLoadingGameStats && (\n        <GameStats\n          game={fixture}\n          displayBool={true}\n          stats={leagueStatsArray[`leagueStats${fixture.leagueID}`]}\n        />\n      )}\n    </div>\n  );\n}\n\nasync function submitTips() {\n  if (userDetail?.uid && userTips) {\n    await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}tips`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userTips),\n    });\n    alert(\"Tips submitted\");\n  } else {\n    return;\n  }\n\n  localStorage.removeItem(\"userTips\");\n  userTips.length = 0;\n}\n\nconst List = ({ \n  fixtures, \n  mock, \n  showShortlist, \n  setShowShortlist, \n  // You may also want to accept fullUncappedFixtures here if that was part of your final solution\n}) => {\n  // ⭐️ showShortlist state is now received via props, not local state ⭐️\n  const [selectedFixtures, setSelectedFixtures] = useState([]);\n  \n  // You need to resolve this variable being undefined if it's not a prop or local state\n  // console.log(showShortlist); \n\n  const isInitialMount = useRef(true);\n\n  // 1. URL READING EFFECT (Loads shortlist from URL for persistence and sets initial view state)\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const shortlistParam = params.get('shortlist');\n    const viewParam = params.get('view');\n\n    // Use the fixtures prop for reading, as Fixture is now passing the correct source dynamically \n    // (or, if needed, you'd use a dedicated fullUncappedFixtures prop here)\n    if (fixtures && fixtures.length > 0) {\n\n      if (shortlistParam) {\n        const sharedFixtureIds = shortlistParam.split(',').map(id => parseInt(id, 10));\n        \n        // Use the fixtures prop for filtering. Assuming Fixture passes the FULL list \n        // on the second render, the initial set here might still be capped if the timing is tight.\n        // For production, you MUST use the uncapped list here (e.g., props.fullUncappedFixtures)\n        const sharedShortlist = fixtures.filter(fixture =>\n          sharedFixtureIds.includes(fixture.id)\n        );\n\n        if (sharedShortlist.length > 0) {\n          setSelectedFixtures(sharedShortlist);\n\n          // ⭐️ Use the prop setter for initial state ⭐️\n          if (viewParam === 'shortlist') {\n            setShowShortlist(true);\n          } else if (showShortlist) {\n            // If the view was active but the URL no longer requests it, turn it off.\n            setShowShortlist(false); \n          }\n\n          isInitialMount.current = false;\n          return;\n        }\n      }\n\n      isInitialMount.current = false;\n    }\n\n  }, [fixtures, setSelectedFixtures, setShowShortlist, showShortlist]); \n  // Note: Added 'showShortlist' to dependencies to allow the else if branch to work on re-renders\n\n  // ----------------------------------------------------------------------\n\n  // 2. URL WRITING EFFECT (Persists user changes to URL) - UNCHANGED\n  useEffect(() => {\n    if (isInitialMount.current) {\n      return;\n    }\n\n    const pathname = window.location.pathname;\n    const params = new URLSearchParams(window.location.search);\n    const hasInitialShortlist = params.get('shortlist') !== null;\n    \n    if (hasInitialShortlist && selectedFixtures.length === 0) {\n      return;\n    }\n\n    if (selectedFixtures.length > 0) {\n      const selectedFixtureIds = selectedFixtures.map(f => f.id).join(',');\n      params.set('shortlist', selectedFixtureIds);\n    } else {\n      params.delete('shortlist');\n    }\n\n    const newSearchParams = params.toString();\n\n    if (newSearchParams === '') {\n      window.history.replaceState(null, '', pathname);\n    } else {\n      const newUrl = `${pathname}?${newSearchParams}`;\n      window.history.replaceState(null, '', newUrl);\n    }\n\n  }, [selectedFixtures]);\n\n  // Function to handle the toggle button click\n  const handleToggleShortlistView = () => {\n    const newState = !showShortlist;\n\n    // ⭐️ Use the prop setter for dynamic state change ⭐️\n    setShowShortlist(newState);\n\n    // Modify the URL parameters based on the new state\n    const params = new URLSearchParams(window.location.search);\n\n    if (newState === true) {\n      params.set('view', 'shortlist');\n    } else {\n      params.delete('view');\n    }\n\n    const newUrl = `${window.location.pathname}?${params.toString()}`;\n\n    if (params.toString() === '') {\n      window.history.replaceState(null, '', window.location.pathname);\n    } else {\n      window.history.replaceState(null, '', newUrl);\n    }\n  };\n\n  const handleToggle = (fixture) => {\n    setSelectedFixtures((prev) => {\n      const index = prev.findIndex((f) => f.id === fixture.id);\n      if (index !== -1) {\n        return prev.filter((_, i) => i !== index);\n      } else {\n        return [...prev, fixture];\n      }\n    });\n  };\n\n  // Convert array into an indexed object\n  const shortlist = Object.fromEntries(\n    selectedFixtures.map((fixture, i) => [i, fixture])\n  );\n\n\n  const selectedFixtureIds = selectedFixtures.map(fixture => fixture.id);\n  const baseUrl = window.location.origin + window.location.pathname;\n\n  // Assume fixtureIdsString is already defined (e.g., \"101,205\")\n  const fixtureIdsString = selectedFixtures.map(fixture => fixture.id).join(',');\n\n  // Append the 'view' parameter to indicate the shortlist view should be active\n  const shareableLink = `${baseUrl}?shortlist=${fixtureIdsString}&view=shortlist`;\n\n\n  return mock === true ? (\n    <>\n      <div>\n        <div id=\"Headers\"></div>\n        <ul className=\"FixtureList\" id=\"FixtureList\">\n          {/* Note: Check your original rendering logic here - it seems slightly off. \n             If !showShortlist is true, you render selectedFixtures? That's unusual.\n             Assuming the non-mock version is correct: (showShortlist ? selectedFixtures : fixtures) \n          */}\n          {(showShortlist ? selectedFixtures : fixtures).map((fixture) => (\n            <SingleFixture\n              shortlist={shortlist}\n              showShortlist={showShortlist}\n              fixture={fixture}\n              key={fixture.id}\n              mock={mock}\n              checked={selectedFixtures.some((f) => f.id === fixture.id)}\n              onToggle={() => handleToggle(fixture)}\n            />\n          ))}\n        </ul>\n      </div>\n    </>\n  ) : (\n    <>\n      <ShortlistButton\n        toggleShortlist={handleToggleShortlistView}\n        showShortlist={showShortlist}\n      />\n      <ShareShortlistButton selectedFixtures={selectedFixtures} />\n      <SubmitTipsButton submit={() => submitTips()} />\n      <div>\n        <div id=\"Headers\"></div>\n        <ul className=\"FixtureList\" id=\"FixtureList\">\n          {/* Renders shortlist when toggle is ON, full list (which is the source list) when OFF */}\n          {(showShortlist ? selectedFixtures : fixtures).map((fixture) => (\n            <SingleFixture\n              shortlist={shortlist}\n              showShortlist={showShortlist}\n              fixture={fixture}\n              key={fixture.id}\n              mock={mock}\n              checked={selectedFixtures.some((f) => f.id === fixture.id)}\n              onToggle={() => handleToggle(fixture)}\n            />\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nfunction ShortlistButton({ toggleShortlist, showShortlist }) {\n  // Conditionally set the text and class based on the state\n  const buttonText = showShortlist\n    ? \"Disable Shortlist\"  // Unicode for up arrow\n    : \"Show Shortlist \\u272A\"; // Unicode for star\n\n  const buttonClass = showShortlist\n    ? \"ShortlistButton active\"\n    : \"ShortlistButton\";\n\n  return (\n    <button\n      onClick={toggleShortlist}\n      className={buttonClass}\n    >\n      {buttonText}\n    </button>\n  );\n}\n\nfunction SubmitTipsButton({ submit }) {\n  return (\n    <button\n      className=\"SubmitTipsButton\"\n      onClick={submit}\n    >\n      Submit My Tips\n    </button>\n  );\n}\n\nexport function Fixture(props) {\n  const [count, setCount] = useState(false);\n  // ⭐️ Re-introduce state here to control the view ⭐️\n  const [showShortlist, setShowShortlist] = useState(false);\n  resultValue = props.result;\n\n  // Dynamically choose the list source based on the toggle state\n  const listSource = showShortlist\n    ? props.uncappedFixtures // Full list when toggle is ON\n    : props.fixtures;         // Capped list when toggle is OFF\n\n  // The cap text logic\n  const showCapText = !props.paid && props.capped === true && !showShortlist;\n\n  return (\n    <Provider store={store}>\n      <List\n        fixtures={listSource}\n        // ⭐️ Pass state and setter DOWN ⭐️\n        showShortlist={showShortlist}\n        setShowShortlist={setShowShortlist}\n\n        result={resultValue}\n        count={count}\n        mock={props.mock}\n      />\n      {!props.paid && props.capped === true && (\n        <>\n          <div className=\"LockIcon\">🔒</div>\n          <div className=\"LockText\">\n            {props.originalLength} games have been capped at {props.newLength} for free users\n            with full stats available for those returned - sign up for access to\n            50 leagues and cups\n          </div>\n        </>\n      )}{\" \"}\n    </Provider>\n  );\n}\n","/Users/greg/Development/Predictor/src/components/Contact.js",[],"/Users/greg/Development/Predictor/src/components/ProtectedContent.js",[],"/Users/greg/Development/Predictor/src/components/DarkModeToggle.js",[],"/Users/greg/Development/Predictor/src/components/Login.js",["318","319"],"import { useState } from \"react\";\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { Eye, EyeOff } from \"lucide-react\"; // Eye icons for toggling password visibility\nimport { auth, db } from \"../firebase\"; // Adjust the path as needed\n\nexport let userIsPaid = false;\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false); // State for toggling password visibility\n\n  const handleAuth = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n    try {\n      let userCredential;\n      if (isLogin) {\n        userCredential = await signInWithEmailAndPassword(auth, email, password);\n      } else {\n        userCredential = await createUserWithEmailAndPassword(auth, email, password);\n        // Create Firestore user document with default isPaidUser set to false\n        await setDoc(doc(db, \"users\", userCredential.user.uid), {\n          email: userCredential.user.email,\n          isPaidUser: false,\n        });\n      }\n\n      // Fetch user subscription data from Firestore\n      const userRef = doc(db, \"users\", userCredential.user.uid);\n      const userSnap = await getDoc(userRef);\n\n      if (userSnap.exists()) {\n        const data = userSnap.data();\n        // Update the global variable\n        userIsPaid = data.isPaidUser;\n        console.log(\"User isPaid status:\", userIsPaid);\n      } else {\n        console.error(\"User document not found in Firestore\");\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n     <div>\n      <button className=\"SignUp\" onClick={() => setIsLogin(!isLogin)}>\n        {isLogin ? \"Need an account? Sign up\" : \"Enter your details below. Already have an account? Click to switch to login\"}\n      </button>\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      \n      {/* ⭐️ LoginForm: Main Flex Container ⭐️ */}\n      <form onSubmit={handleAuth} className=\"LoginForm\">\n        \n        {/* ⭐️ InputGroup: Groups and stacks the inputs on the left ⭐️ */}\n        <div className=\"InputGroup\">\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n            className=\"LoginInput1\"\n          />\n\n          {/* Password Input with Toggle Button */}\n          <div className=\"PasswordContainer\">\n            <input\n              type={showPassword ? \"text\" : \"password\"}\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n              className=\"LoginInput2\"\n            />\n            <button\n              type=\"button\"\n              onClick={() => setShowPassword(!showPassword)}\n              className=\"TogglePasswordButton\"\n            >\n              {/* Replace with your actual icon components */}\n              {showPassword ? '👁️' : '🔒'} \n            </button>\n          </div>\n        </div>\n\n        {/* ⭐️ LoginSignUp: Submit button aligned to the right ⭐️ */}\n        <button type=\"submit\" className=\"LoginSignUp\">\n          {isLogin ? \"Login\" : \"Sign Up\"}\n        </button>\n        \n        <button\n          className=\"ResetPasswordLink\"\n          onClick={() => {\n            window.location.href = \"https://www.soccerstatshub.com/#/reset\";\n          }}\n        >\n          Reset password\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/greg/Development/Predictor/src/logic/hasUserPaid.js",[],"/Users/greg/Development/Predictor/src/logic/authProvider.js",[],"/Users/greg/Development/Predictor/src/components/CollapsableElement.js",[],"/Users/greg/Development/Predictor/src/logic/getFixtures.js",["320","321","322"],"/Users/greg/Development/Predictor/src/firebase.js",[],"/Users/greg/Development/Predictor/src/logic/getStatsInsights.js",[],"/Users/greg/Development/Predictor/src/components/createBadge.js",[],"/Users/greg/Development/Predictor/src/logic/dataSlice.js",[],"/Users/greg/Development/Predictor/src/components/LeagueName.js",["323"],"import { useState, useEffect } from \"react\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport { renderTable } from \"../logic/getFixtures\";\n\n\nconst sofaScoreIds = [\n  { 15050: 17 }, //EPL\n  { 14930: 18 }, //Championship\n  { 14934: 24 }, //League 1\n  { 14935: 25 }, //League 2\n  { 14968: 35 }, //Bundesliga\n  { 14956: 8 }, //La Liga\n  { 14924: 7 }, //Champions League\n  { 13734: 10783 }, //Nations league 24/25\n  { 13878: 357 }, // Club World Cup 25\n    { 16261: 384 }, // Copa Libertadores 25\n\n  { 15068: 23 }, //Serie A\n\n  { 14932: 34 }, //Ligue 1,\n  { 15000: 36 }, //Scottish Prem\n  { 15115: 44 }, //Portugal\n  { 14936: 35 }, //Dutch\n  { 14937: 38 }, //Belgium\n  { 16263: 40 }, //Sweden\n  { 15055: 39 }, //Denmark\n  { 16260: 20 }, //Norway\n  { 14923: 45 }, //Austrian Prem 22/23\n  { 15163: 185 }, //Greek Prem 22/23\n  { 14972: 52 }, //turkey\n  { 15031: 202 }, //Polish prem 22/23\n  { 15047: 215 }, //Swiss prem 22/23\n  { 15053: 170 }, //Croatia 24/25\n  { 14973: 172 }, //Czecjh 24/25\n\n  { 14089: 41 }, // Finland 25\n  { 14951: 218 }, // Ulraine 25\n  { 15065: 210 }, // Serbia 25\n  { 15063: 212 }, // Slovenia 25\n  { 14933: 211 }, // Slovakia 25\n\n  { 13952: 192 }, //Irish Prem\n  { 13703: 136 }, //Aus A League\n  { 15002: 679 }, //Europa\n  { 14904: 17015 }, //Europa Conference\n  { 15066: 54 }, //Spanish secunda 22/23\n  { 15632: 53 }, //Italy serie B 22/23\n  { 14931: 44 }, //Bundesliga 2 22/23\n  { 14954: 182 }, //French League 2 22/23\n  { 14987: 131 }, //Dutch League 2 25\n  { 15061: 206 }, //Scottish Championship 22/23\n  { 14943: 207 }, //Scottish league 1 22/23\n  { 15209: 209 }, //Scottish league 2 22/23\n    { 13973: 242 }, //MLS\n  { 13967: 13363 }, // USL\n  { 14236: 13470 }, //Canada 25\n  { 14231: 325 }, //Brazil prem 24\n  { 15746: 155 }, //Argentina prem 23\n  { 14086: 11539}, //Colombia 25\n    { 14626: 278}, //Uraguay 25\n\n  { 15234: 11621 }, //Mexico prem 23/24\n  { 15657: 173 }, //National league\n  { 15845: 176 }, //National league north 25\n  { 15844: 174 }, //National league south 25\n  { 16243: 410 }, //S Korea 25,\n  { 16242: 196 }, //Japan 25\n  { 12772: 955 }, //Saudi 24/25\n  { 13964: 11}, // World Cup 26 EU Qualifiers\n  { 10121: 295 }, // World Cup 26 SA Qualifiers\n\n  // 11426, // WC Qual ConCaf\n  // 12801\n];\n\n\nexport default function LeagueName({ fixture, mock, showShortlist }) {\n  const [logoUrl, setLogoUrl] = useState(null);\n\nconst name = showShortlist ? fixture.leagueDesc : fixture.leagueName; \n const id =\n    allLeagueResultsArrayOfObjects.length > 0\n      ? allLeagueResultsArrayOfObjects[fixture.leagueIndex].id\n      : null;\n\n  useEffect(() => {\n    async function fetchLogo() {\n      const found = sofaScoreIds.find((obj) => obj[id] !== undefined);\n      const value = found ? found[id] : null;\n      if (!value) return;\n\n      const logoPath = `${process.env.REACT_APP_EXPRESS_SERVER}logo/${value}`;\n      try {\n        // Optionally verify it loads first\n        const response = await fetch(logoPath);\n        if (response.ok) {\n          setLogoUrl(logoPath); // Use the URL directly\n        } else {\n          console.error(\"Failed to fetch logo URL:\", response.status);\n        }\n      } catch (error) {\n        console.error(\"Error fetching logo URL:\", error);\n      }\n      fixture.sofaScoreId = value\n    }\n\n    fetchLogo();\n  }, [id]);\n\n  if (mock === true || name === null) {\n    return <div></div>;\n  }\n\n  return (\n    <div>\n      <div\n        className=\"leagueName\"\n        id={`league${id}`}\n        key={`leagueName${id}div`}\n        onClick={() =>\n          renderTable(\n            fixture.leagueIndex,\n            allLeagueResultsArrayOfObjects[fixture.leagueIndex],\n            id\n          )\n        }\n        style={{ display: \"flex\", alignItems: \"center\" }}\n      >\n        <div className=\"LeagueAndLogo\">\n          {logoUrl && (\n            <img\n              className=\"LeagueLogo\"\n              src={logoUrl}\n              alt={`${name} Logo`}\n            />\n          )}\n          {showShortlist ? fixture.leagueDesc : fixture.leagueName} &#9776;\n        </div>\n      </div>\n\n      <div\n        className=\"LeagueTable\"\n        key={`leagueName${id}`}\n        id={`leagueName${id}`}\n      ></div>\n    </div>\n  );\n}\n","/Users/greg/Development/Predictor/src/components/GameStats.js",["324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377"],"/Users/greg/Development/Predictor/src/logic/getScorePredictions.js",["378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397"],"/Users/greg/Development/Predictor/src/components/Slider.js",[],"/Users/greg/Development/Predictor/src/components/SliderDiff.js",[],"/Users/greg/Development/Predictor/src/logic/getForm.js",[],"/Users/greg/Development/Predictor/src/components/LeagueTable.js",[],"/Users/greg/Development/Predictor/src/components/TeamOfTheSeason.js",["398","399"],"import React, { useState, useEffect } from \"react\";\n//tournaments/search (Deprecated)\n//Use ID to call tournaments/get-seasons\n\n// const footyStatsToSofaScore = [\n//   {\n//     //Prem 25\n//     15050: {\n//       id: 17,\n//       season: 76986,\n//     },\n//     //Championship 25\n//     14930: {\n//       id: 18,\n//       season: 77347,\n//     },\n//     //League 1\n//     14934: {\n//       id: 24,\n//       season: 77352,\n//     },\n//     //League 2\n//     14935: {\n//       id: 25,\n//       season: 77351,\n//     },\n//     12622: {\n//       id: 173,\n//       season: 63807, // Conference 24/25\n//     },\n//     //Bundesliga\n//     14968: {\n//       id: 35,\n//       season: 77333,\n//     },\n//     //La Liga 25\n//     14956: {\n//       id: 8,\n//       season: 77559,\n//     },\n//     15000: {\n//       id: 36,\n//       season: 77128, // Scottish Premiership 25\n//     },\n//     //Champions league 25\n//     14924: {\n//       id: 7,\n//       season: 76953,\n//     },\n//     //Serie A 25\n//     15068: {\n//       id: 23,\n//       season: 76457,\n//     },\n//     //MLS\n//     13973: {\n//       id: 242,\n//       season: 70158,\n//     },\n//     //Ligue 1 25\n//     14932: {\n//       id: 34,\n//       season: 77356,\n//     },\n//     15115: {\n//       id: 238,\n//       season: 77806, // Portuguese Primeira Liga 25\n//     },\n//     16261: {\n//       id: 384,\n//       season: 70083, // Copa Libertadores\n//     },\n//     14936: {\n//       id: 37,\n//       season: 77012, // Eredivisie\n//     },\n//     14937: {\n//       id: 9,\n//       season: 77849, // Belgian Pro League\n//     },\n//     16263: {\n//       id: 40,\n//       season: 69956, // Scottish Premiership\n//     },\n//     15055: {\n//       id: 39,\n//       season: 76491, // Danish Superliga\n//     },\n//     16260: {\n//       id: 20,\n//       season: 70174, // Norwegian Eliteserien\n//     },\n//     14923: {\n//       id: 45,\n//       season: 77382, // Austrian Bundesliga\n//     },\n//     15163: {\n//       id: 185,\n//       season: 78175, // Greek Super League\n//     },\n//     14972: {\n//       id: 52, // Turkish Super Lig\n//       season: 78175,\n//     },\n//     15031: {\n//       id: 202,\n//       season: 76477, // Ekstraklasa\n//     },\n//     15066: {\n//       id: 54,\n//       season: 77558, // Spanish Segunda Division\n//     },\n//     14931: {\n//       id: 44,\n//       season: 77354, // Bundesliga 2\n//     },\n//     14954: {\n//       id: 182,\n//       season: 77357, // French Ligue 2\n//     },\n//     15061: {\n//       id: 206,\n//       season: 77037, // Scottish Championship 25\n//     },\n//     15062: {\n//       id: 207,\n//       season: 77037, // Scottish League One 25\n//     },\n//     15064: {\n//       id: 209,\n//       season: 77045, // Scottish League Two 25\n//     },\n//     15047: {\n//       id: 215,\n//       season: 77152, // Swiss Super League\n//     },\n//     15053: {\n//       id: 170,\n//       season: 77152, // Croatian First League\n//     },\n//     14973: {\n//       id: 172,\n//       season: 77019, // Czech First League\n//     },\n//     14089: {\n//       id: 41,\n//       season: 70853, // Finnish Veikkausliiga\n//     },\n//     14951: {\n//       id: 218,\n//       season: 77625, // Ukrainian Premier League\n//     },\n//     15063: {\n//       id: 212,\n//       season: 62660, // Slovenian Prva Liga\n//     },\n//     14933: {\n//       id: 211,\n//       season: 77154, // Slovak Super Liga\n//     },\n//     15065: {\n//       id: 210,\n//       season: 77625, // Serbian SuperLiga \n//     },\n//     15234: {\n//       id: 11621,\n//       season: 76500, // Liga MX 25\n//     },\n//     14231: {\n//       id: 325,\n//       season: 72034, // Brazil Serie A\n//     },\n//     14305: {\n//       id: 390,\n//       season: 72603, // Brazil Serie B\n//     },\n//     13878: {\n//       id: 357,\n//       season: 69619, // Club World Cup\n//     },\n//     13734: {\n//       id: 10783,\n//       season: 58337, // UEFA Nations League 25\n//     },\n//     14086: {\n//       id: 11539,\n//       season: 70681, // Colombian Liga BetPlay 25\n//     },\n//     14626: {\n//       id: 278,\n//       season: 71306, // Uruguayan Primera Division 25\n//     },\n//     15310: {\n//       id: 155,\n//       season: 70268, // Argentina Primera Division 25\n//     },\n//     16242: {\n//       id: 196,\n//       season: 69871, // J League 25\n//     },\n//     16243: {\n//       id: 410,\n//       season: 70830, // K League 25\n//     },\n//     12772: {\n//       id: 955,\n//       season: 63998, // Saudi Pro League 24/25\n//     },\n//     13967: {\n//       id: 13363,\n//       season: 70263 // USL 25\n//     },\n//     14236: {\n//       id: 13470,\n//       season: 72315 // Canadian Premier League 25\n//     },\n//     13964: {\n//       id: 11,\n//       season: 69427, // World Cup EU 2026\n//     },\n//     10121: {\n//       id: 295,\n//       season: 53820, // World Cup SA 2026\n//     },\n//     13952: {\n//       id: 192,\n//       season: 69981, // Ireland 24/25\n//     },\n//     13703: {\n//       id: 136,\n//       season: 64864, // A League 24/25\n//     },\n//     15002: {\n//       id: 679,\n//       season: 76984, // UEFA Europa League 25\n//     },\n//     14904: {\n//       id: 17015,\n//       season: 76960, // UEFA Europa Conference League 24/25\n//     },\n//   },\n// ];\n\n\nexport const rounds = [\n  {\n    17: 76986,\n    18: 77347,\n    24: 77352,\n    25: 77351,\n    173: 63807,\n    174: 78227,\n    176: 78282,\n    35: 77333,\n    8: 77559,\n    36: 77128,\n    7: 76953,\n    23: 76457,\n    242: 70158,\n    34: 77356,\n    238: 77806,\n    384: 70083,\n    37: 77012,\n    9: 77849,\n    40: 69956,\n    39: 76491,\n    20: 70174,\n    45: 77382,\n    185: 78175,\n    52: 78175,\n    202: 76477,\n    54: 77558,\n    44: 77354,\n    182: 77357,\n    206: 77037,\n    207: 77037,\n    209: 77045,\n    215: 77152,\n    170: 77152,\n    172: 77019,\n    41: 70853,\n    218: 77625,\n    212: 62660,\n    131: 77156,\n    211: 77154,\n    210: 77625,\n    11621: 76500,\n    325: 72034,\n    390: 72603,\n    357: 69619,\n    10783: 58337,\n    11539: 70681,\n    278: 71306,\n    155: 70268,\n    196: 69871,\n    410: 70830,\n    955: 63998,\n    13363: 70263,\n    13470: 72315,\n    11: 69427,\n    295: 53820,\n    192: 69981,\n    136: 64864,\n    679: 76984,\n    17015: 76960,\n  },\n];\n\n\nconst TeamOfTheSeason = (props) => {\n  const [roundId, setRoundId] = useState(null);\n  const seasonId = 61627; // Update this dynamically if needed\n  const id = props.id\n  //WILL NEED TO BE UPDATED NEXT SEASON\n\n  const baseUrl = `https://widgets.sofascore.com/embed/unique-tournament/${id}`;\n\n  const derivedRoundId = (() => {\n    for (const mapping of rounds) {\n      if (mapping.hasOwnProperty(id)) {\n        return mapping[id];\n      }\n    }\n    console.warn(`No matching media ID found for ID: ${id}`);\n    return null;\n  })();\n\n  console.log(id)\n  console.log(derivedRoundId)\n\n  useEffect(() => {\n    const fetchRoundId = async () => {\n      try {\n        // Fetch rounds data to get the correct round ID\n        const roundsResponse = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}round/${id}/${derivedRoundId}`\n        );\n        let roundsData = await roundsResponse.json();\n\n        // Get the round ID from the first round in the data\n        if (roundsData.rounds?.length > 0) {\n          const firstRoundId = roundsData.rounds[0]?.id; // Grabbing the id from index 0\n          setRoundId(firstRoundId); // Set the roundId state\n        } else {\n          console.error(\"No rounds data found.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching SofaScore API:\", error);\n      }\n    };\n\n    fetchRoundId();\n  }, [id, roundId]);\n\n  return (\n    <div className=\"TeamOfTheSeason\">\n      {derivedRoundId ? (\n        <iframe\n          width=\"100%\"\n          height=\"700\"\n          // style={{ display: 'block', maxWidth: '700px' }}\n          src={`${baseUrl}/season/${derivedRoundId}/round/${roundId}/teamOfTheWeek?widgetBackground=Gray&showCompetitionLogo=true&v=2`}\n          frameBorder=\"0\"\n          scrolling=\"no\"\n          title=\"SofaScore Team of the Week\"\n        ></iframe>\n      ) : (\n        <p>Loading Team of the Week...</p>\n      )}\n      <div\n        style={{\n          fontSize: \"12px\",\n          fontFamily: \"Arial, sans-serif\",\n          textAlign: \"left\",\n        }}\n      >\n      </div>\n    </div>\n  );\n};\n\nexport default TeamOfTheSeason;\n","/Users/greg/Development/Predictor/src/logic/getStats.js",["400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425"],"/Users/greg/Development/Predictor/src/components/StatTable.js",["426"],"import React, { useState } from \"react\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@mui/material\";\n\n// Utility to convert camelCase or mixedCase to \"Proper Case With Spaces\"\nconst formatLabel = (key) =>\n  key\n    .replace(/([A-Z])/g, \" $1\") // Add space before capital letters\n    .replace(/^./, (str) => str.toUpperCase()); // Capitalize first letter\n\nconst RankingTable = ({ rankingStats }) => {\n  const statKeys = Object.keys(rankingStats);\n  const [selectedStat, setSelectedStat] = useState(statKeys[0]);\n    console.log(rankingStats)\n  const handleChange = (e) => {\n    setSelectedStat(e.target.value);\n  };\n\n  const data = rankingStats[selectedStat];\n\n  return (\n    <div className=\"LeagueStatsTable\">\n      <FormControl\n        sx={{\n          marginBottom: 2,\n          marginTop: 1,\n          width: \"90%\",\n          \"& .MuiOutlinedInput-root\": {\n            backgroundColor: \"#f0f0f0\",\n            fontSize: \"1.25em\",\n            width: \"50%\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            fontFamily: \"'Open Sans', sans-serif\",\n            height: \"2em\",\n            color: \"#fe8c00\",\n            borderRadius: 2,\n            \"& .MuiSelect-icon\": {\n              color: \"#fe8c00\",\n            },\n            \"& fieldset\": {\n              borderColor: \"#ccc !important\",\n              borderWidth: \"0px\",\n            },\n            \"&:hover fieldset\": {\n              borderWidth: \"0px\",\n            },\n            \"&.Mui-focused fieldset\": {\n              borderWidth: \"0px\",\n            },\n          },\n        }}\n      >\n        <Select\n          labelId=\"stat-select-label\"\n          id=\"stat-select\"\n          value={selectedStat}\n          label=\"Choose a stat\"\n          onChange={handleChange}\n          displayEmpty\n        >\n          {statKeys.map((key) => (\n            <MenuItem key={key} value={key}>\n              {formatLabel(key)}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <table\n        style={{ marginTop: \"1em\", borderCollapse: \"collapse\", width: \"95%\" }}\n      >\n        <thead>\n          <tr>\n            <th>Rank</th>\n            <th>Team</th>\n            <th>Matches</th>\n            <th>{formatLabel(selectedStat)}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map(({ team, statistics }, index) => (\n            <tr key={team.id}>\n              <td>{index + 1}</td>\n              <td>{team.name}</td>\n              <td>{statistics.matches}</td>\n              <td>\n                {typeof statistics[selectedStat] === \"number\"\n                  ? Number.isInteger(statistics[selectedStat])\n                    ? statistics[selectedStat]\n                    : statistics[selectedStat].toFixed(2)\n                  : statistics[selectedStat] ?? \"N/A\"}\n              </td>{\" \"}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default RankingTable;\n","/Users/greg/Development/Predictor/src/logic/compareFormTrend.js",[],"/Users/greg/Development/Predictor/src/components/Carousel.js",[],"/Users/greg/Development/Predictor/src/logic/getBTTSPotential.js",[],"/Users/greg/Development/Predictor/src/components/Increment.js",[],"/Users/greg/Development/Predictor/src/components/PlayerStatsList.js",[],"/Users/greg/Development/Predictor/src/components/StreakStats.js",[],"/Users/greg/Development/Predictor/src/components/CollapsableStats.js",[],"/Users/greg/Development/Predictor/src/components/MissingPlayersList.js",[],"/Users/greg/Development/Predictor/src/components/TeamRankingsFlexView.js",[],"/Users/greg/Development/Predictor/src/components/MultitypeChart.js",["427"],"import React from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Bar, Line } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst MultiTypeChart = ({ dataArray, text }) => {\n  // 1. Process the Data: Calculate the difference and labels\n  const labels = dataArray.map((_, index) => `Game ${index + 1}`); // Create labels like \"Index 1\", \"Index 2\", etc.\n  const barData = dataArray.map((item) => item[0] - item[1]); // Calculate the difference\n\n  // Create an array of colors based on the sign of the bar data\n  const backgroundColors = barData.map((value) =>\n    value >= 0 ? \"#01a501\" : \"#ae1001ff\"\n  );\n\n  // 2. Chart Data Structure:\n  const data = {\n    labels: labels,\n    datasets: [\n      {\n        type: \"bar\",\n        label: \"XG Difference\",\n        data: barData,\n        backgroundColor: backgroundColors, // Use the dynamic colors\n        borderColor: backgroundColors, // Match the border color\n        borderWidth: 0,\n      },\n    ],\n  };\n\n  // 3. Chart Options (customize as needed):\n  const options = {\n    responsive: true,\n    aspectRatio: 1.2,\n    maintainAspectRatio: true,\n    plugins: {\n      title: {\n        display: true,\n        text: text,\n        color: \"#fe8c00\"\n      },\n      legend: {\n        // Add this legend configuration\n        display: false, // Set display to false to hide the legend\n      },\n    },\n    scales: {\n      y: {\n        beginAtZero: true, // Start y-axis at 0\n        suggestedMin: -1.5,\n        suggestedMax: 1.5,\n        ticks: {\n          color: \"#fe8c00\",\n        }\n      },\n      x: {\n        ticks: {\n          color: \"#fe8c00\",\n        }\n      },\n    },\n  };\n\n  return <Bar data={data} options={options} className=\"BarChart\" />;\n};\n\nexport default MultiTypeChart;\n","/Users/greg/Development/Predictor/src/components/Div.js",[],"/Users/greg/Development/Predictor/src/components/SofaScore.js",["428"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SofaLineupsWidget = ({\n  id,\n  team1,\n  team2,\n  time,\n  homeGoals,\n  awayGoals,\n}) => {\n  console.log(team1)\n  const iframeSrc = `https://widgets.sofascore.com/embed/lineups?id=${id}&widgetTheme=light`;\n\n  let differenceInSeconds, minutes;\n  const currentTime = new Date().getTime() / 1000;\n  // Calculate the difference in seconds\n  if (time > 0) {\n    differenceInSeconds = time - currentTime;\n    minutes = Math.floor(differenceInSeconds / 60);\n  } else {\n    minutes = -99999999;\n  }\n\n  if (team1 === \"N/A\") {\n    return <h6>No lineups available for this match yet</h6>;\n  } else if (minutes > 60) {\n    return (\n      <div>\n        <h6>Predicted lineups</h6>\n        <iframe\n          id={`sofa-lineups-embed-${id}`}\n          src={iframeSrc}\n          style={{\n            height: \"786px\",\n            maxWidth: \"800px\",\n            width: \"100%\",\n            border: \"0\",\n          }}\n          scrolling=\"no\"\n          title=\"SofaScore Lineups\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n      </div>\n    );\n  } else if (minutes < 60 && minutes > 0) {\n    return (\n      <div>\n        <h6>Lineups</h6>\n        <iframe\n          id={`sofa-lineups-embed-${id}`}\n          src={iframeSrc}\n          style={{\n            height: \"786px\",\n            maxWidth: \"800px\",\n            width: \"100%\",\n            border: \"0\",\n          }}\n          scrolling=\"no\"\n          title=\"SofaScore Lineups\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n      </div>\n    );\n  } else if (minutes < 0) {\n    return (\n      <div>\n        <div className=\"CurrentScore\">\n          Score: {`${team1}: ${homeGoals} - ${team2}: ${awayGoals}`}\n        </div>\n        <span>Score not live updated</span>\n        <h6 className=\"AttackingMomentum\">Live attacking momentum and goals</h6>\n        <iframe\n          width=\"100%\"\n          height=\"286\"\n          src={`https://widgets.sofascore.com/embed/attackMomentum?id=${id}&widgetTheme=light`}\n          frameborder=\"0\"\n          scrolling=\"no\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n        <h6>Lineups and in-play ratings</h6>\n        <iframe\n          id={`sofa-lineups-embed-${id}`}\n          src={iframeSrc}\n          style={{\n            height: \"786px\",\n            maxWidth: \"800px\",\n            width: \"100%\",\n            border: \"0\",\n          }}\n          scrolling=\"no\"\n          title=\"SofaScore Lineups\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n      </div>\n    );\n  } else {\n    return <h6>{`Lineups coming in approximately ${minutes - 60} minutes`}</h6>;\n  }\n};\n\nSofaLineupsWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  team1: PropTypes.string.isRequired,\n  team2: PropTypes.string.isRequired,\n};\n\nexport default SofaLineupsWidget;\n","/Users/greg/Development/Predictor/src/components/createStatsDiv.js",["429"],"import React, { Fragment } from \"react\";\nimport { CreateBadge } from \"./createBadge\";\n\nfunction Stats(props) {\n  let shouldOpen = props.clicked;\n\n  function styleForm(formIndicator) {\n    let className;\n    if (formIndicator === \"W\") {\n      className = \"win\";\n    } else if (formIndicator === \"D\") {\n      className = \"draw\";\n    } else if (formIndicator === \"L\") {\n      className = \"loss\";\n    }\n    return className;\n  }\n\n  function styleBTTS(BTTSBoolean) {\n    let className;\n    if (BTTSBoolean === \"\\u2714\") {\n      className = \"BTTSTrue\";\n    } else if (BTTSBoolean === \"\\u2718\") {\n      className = \"BTTSFalse\";\n    }\n    return className;\n  }\n\n  if (props.games === \"all\") {\n    return (\n      <Fragment>\n        <ul className={props.className ? props.className : \"\"} style={props.style ? props.style : {}}>\n          <CreateBadge image={props.badge} alt=\"Team badge\" ClassName={\"ColumnBadge\"} />\n          <li className=\"FormHeader\">League results (most recent on right)</li>\n          <li key={`last5League`} className=\"last5League\">\n            <span className={styleForm(props.Results && props.Results[5] ? props.Results[5] : \"\")}>\n              {props.Results && props.Results[5] ? props.Results[5] : \"\"}\n            </span>\n            <span className={styleForm(props.Results && props.Results[4] ? props.Results[4] : \"\")}>\n              {props.Results && props.Results[4] ? props.Results[4] : \"\"}\n            </span>\n            <span className={styleForm(props.Results && props.Results[3] ? props.Results[3] : \"\")}>\n              {props.Results && props.Results[3] ? props.Results[3] : \"\"}\n            </span>\n            <span className={styleForm(props.Results && props.Results[2] ? props.Results[2] : \"\")}>\n              {props.Results && props.Results[2] ? props.Results[2] : \"\"}\n            </span>\n            <span className={styleForm(props.Results && props.Results[1] ? props.Results[1] : \"\")}>\n              {props.Results && props.Results[1] ? props.Results[1] : \"\"}\n            </span>\n            <span className={styleForm(props.Results && props.Results[0] ? props.Results[0] : \"\")}>\n              {props.Results && props.Results[0] ? props.Results[0] : \"\"}\n            </span>\n          </li>\n          <li className=\"FormHeader\">\n            {props.homeOrAway ? props.homeOrAway : \"N/A\"} form (most recent on right)\n          </li>\n          <li key={`last5${props.homeOrAwayResults ? props.homeOrAwayResults : \"default\"}`} className=\"FormHomeOrAway\">\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[5] ? props.ResultsHorA[5] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[5] ? props.ResultsHorA[5] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[4] ? props.ResultsHorA[4] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[4] ? props.ResultsHorA[4] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[3] ? props.ResultsHorA[3] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[3] ? props.ResultsHorA[3] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[2] ? props.ResultsHorA[2] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[2] ? props.ResultsHorA[2] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[1] ? props.ResultsHorA[1] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[1] ? props.ResultsHorA[1] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[0] ? props.ResultsHorA[0] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[0] ? props.ResultsHorA[0] : \"\"}\n            </span>\n          </li>\n          <li\n            key=\"BTTSArrayHomeOrAway\"\n            className=\"BTTSArrayHomeOrAway\"\n            data-cy={props.name ? props.name + \"BTTSArrayHomeOrAway\" : \"BTTSArrayHomeOrAway\"}\n          >\n            <div className=\"BTTSResults\">{props.BTTSArray ? `BTTS` : ``}</div>\n            <span className={styleBTTS(props.BTTSArray && props.BTTSArray[5] ? props.BTTSArray[5] : \"\")}>\n              {props.BTTSArray && props.BTTSArray[5] ? props.BTTSArray[5] : \"\"}\n            </span>\n            <span className={styleBTTS(props.BTTSArray && props.BTTSArray[4] ? props.BTTSArray[4] : \"\")}>\n              {props.BTTSArray && props.BTTSArray[4] ? props.BTTSArray[4] : \"\"}\n            </span>\n            <span className={styleBTTS(props.BTTSArray && props.BTTSArray[3] ? props.BTTSArray[3] : \"\")}>\n              {props.BTTSArray && props.BTTSArray[3] ? props.BTTSArray[3] : \"\"}\n            </span>\n            <span className={styleBTTS(props.BTTSArray && props.BTTSArray[2] ? props.BTTSArray[2] : \"\")}>\n              {props.BTTSArray && props.BTTSArray[2] ? props.BTTSArray[2] : \"\"}\n            </span>\n            <span className={styleBTTS(props.BTTSArray && props.BTTSArray[1] ? props.BTTSArray[1] : \"\")}>\n              {props.BTTSArray && props.BTTSArray[1] ? props.BTTSArray[1] : \"\"}\n            </span>\n            <span className={styleBTTS(props.BTTSArray && props.BTTSArray[0] ? props.BTTSArray[0] : \"\")}>\n              {props.BTTSArray && props.BTTSArray[0] ? props.BTTSArray[0] : \"\"}\n            </span>\n          </li>\n          <div className=\"FormSummaries\">\n            <li className=\"FormSummaryHome\">{props.FormTextString ? props.FormTextString : \"\"}</li>\n            <li className=\"StyleOfPlay\">{`Style - ${props.StyleOfPlay ? props.StyleOfPlay : \"N/A\"}`}</li>\n            <li className=\"StyleOfPlay\">{`${props.homeOrAway ? props.homeOrAway : \"N/A\"} style - ${props.StyleOfPlayHomeOrAway ? props.StyleOfPlayHomeOrAway : \"N/A\"}`}</li>\n            {/* <li className=\"FavouriteSummaryHome\">{props.FavouriteRecord ? props.FavouriteRecord : \"Graphs also only available to paying customers\"}</li> */}\n          </div>\n          <div className=\"AllStats\">\n            <li\n              key=\"TeamScored\"\n              className=\"TeamScored\"\n              data-cy={props.name ? props.name + \"teamScored\" : \"teamScored\"}\n            >\n              {`Avg goals scored - ${props.goals !== undefined ? props.goals : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamConceeded\"\n              className=\"TeamConceeded\"\n              data-cy={props.name ? props.name + \"teamConceded\" : \"teamConceded\"}\n            >\n              {`Avg goals conceeded - ${props.conceeded !== undefined ? props.conceeded : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamPossession\"\n              className=\"TeamPossession\"\n              data-cy={props.name ? props.name + \"teamPossession\" : \"teamPossession\"}\n            >\n              {`Avg possession - ${props.possession !== undefined ? props.possession : \"N/A\"}%`}\n            </li>\n            <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name ? props.name + \"teamXG\" : \"teamXG\"}>\n              {`Avg XG - ${props.XG !== undefined ? props.XG : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamXGConceded\"\n              className=\"TeamXGConceded\"\n              data-cy={props.name ? props.name + \"teamXGConceded\" : \"teamXGConceded\"}\n            >\n              {`Avg XG conceded - ${props.XGConceded !== undefined ? props.XGConceded : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamXGSwing\"\n              className=\"TeamXGSwing\"\n              data-cy={props.name ? props.name + \"teamXGSwing\" : \"teamXGSwing\"}\n            >\n              {`XG difference swing (last 5): ${props.XGSwing !== undefined ? props.XGSwing?.toFixed(2) : \"N/A\"\n                }`}\n            </li>\n            <li\n              key=\"goalDifference\"\n              className=\"goalDifference\"\n              data-cy={props.name ? props.name + \"goalDifference\" : \"goalDifference\"}\n            >\n              {`Goal difference : `}\n              <span>{props.goalDifference !== undefined ? props.goalDifference : \"N/A\"}</span>\n            </li>\n            <li\n              key=\"goalDifferenceHorA\"\n              className=\"goalDifferenceHorA\"\n              data-cy={props.name ? props.name + \"goalDifference\" : \"goalDifference\"}\n            >\n              {`Goal difference ${props.homeOrAway ? props.homeOrAway : \"N/A\"} : ${props.goalDifferenceHomeOrAway !== undefined ? props.goalDifferenceHomeOrAway : \"N/A\"\n                }`}\n            </li>\n            <li\n              key=\"AverageShots\"\n              className=\"AverageShots\"\n              data-cy={props.name ? props.name + \"AverageShots\" : \"AverageShots\"}\n            >\n              {`Avg shots - ${props.shots !== undefined ? props.shots : \"N/A\"}`}\n            </li>\n            <li\n              key=\"AverageSOT\"\n              className=\"AverageSOT\"\n              data-cy={props.name ? props.name + \"averageSOT\" : \"averageSOT\"}\n            >\n              {`Avg shots on target - ${props.sot !== undefined ? props.sot : \"N/A\"}`}\n            </li>\n            <li\n              key=\"DangerousAttacks\"\n              className=\"DangerousAttacks\"\n              data-cy={props.name ? props.name + \"dangerousAttacks\" : \"dangerousAttacks\"}\n            >\n              {`Avg dangerous attacks - ${props.dangerousAttacks !== undefined ? props.dangerousAttacks : \"N/A\"}`}\n            </li>\n            <li\n              key=\"LeaguePosition\"\n              className=\"LeaguePosition\"\n              data-cy={props.name ? props.name + \"leaguePosition\" : \"leaguePosition\"}\n            >\n              {`League position - ${props.leaguePosition !== undefined ? props.leaguePosition : \"N/A\"\n                }`}\n            </li>\n            <li\n              key=\"WinPercentage\"\n              className=\"WinPercentage\"\n              data-cy={props.name ? props.name + \"WinPercentage\" : \"WinPercentage\"}\n            >\n              {props.homeOrAway && props.winPercentage !== undefined && props.winPercentage !== \"N/A\" ? `${props.homeOrAway} PPG - ${props.winPercentage.toFixed(2)}` : \"N/A\"}\n            </li>\n            <li key=\"PPG\" className=\"PPG\" data-cy={props.name ? props.name + \"PPG\" : \"PPG\"}>\n              {`Season PPG - ${props.ppg !== undefined ? props.ppg : \"N/A\"}`}\n            </li>\n            <li\n              key=\"FormTrend10a\"\n              className=\"FormTrend\"\n              data-cy={props.name ? props.name + \"FormTrend10\" : \"FormTrend10\"}\n            >\n              {`Last 10 PPG: ${props.formTrend && props.formTrend[0] !== undefined ? props.formTrend[0] : \"N/A\"}`}\n            </li>\n            <li\n              key=\"FormTrend10b\"\n              className=\"FormTrend\"\n              data-cy={props.name ? props.name + \"FormTrend10\" : \"FormTrend10\"}\n            >\n              {`Last 6 PPG: ${props.formTrend && props.formTrend[1] !== undefined ? props.formTrend[1] : \"N/A\"}`}\n            </li>\n            <li\n              key=\"FormTrend10c\"\n              className=\"FormTrend\"\n              data-cy={props.name ? props.name + \"FormTrend10\" : \"FormTrend10\"}\n            >\n              {`Last 5 PPG: ${props.formTrend && props.formTrend[2] !== undefined ? props.formTrend[2] : \"N/A\"}.`}\n            </li>\n            <li\n              key=\"CardsTotal\"\n              className=\"CardsTotal\"\n              data-cy={props.name ? props.name + \"CardsTotal\" : \"CardsTotal\"}\n            >\n              {`Cards total: ${props.CardsTotal !== undefined ? props.CardsTotal : \"N/A\"}`}\n            </li>\n            <li\n              key=\"CornersAverage\"\n              className=\"CornersAverage\"\n              data-cy={props.name ? props.name + \"CornersAverage\" : \"CornersAverage\"}\n            >\n              {`Corners average: ${props.CornersAverage !== undefined ? props.CornersAverage : \"N/A\"}`}\n            </li>\n          </div>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  } else if (props.games === \"hOrA\") {\n    return (\n      <Fragment>\n        <ul className={props.className ? props.className : \"\"} style={props.style ? props.style : {}}>\n          <CreateBadge image={props.badge} alt=\"Team badge\" ClassName={\"ColumnBadge\"} />\n\n          <li className=\"FormHeader\">League results (most recent on right)</li>\n          <li key={`last5${props.homeOrAwayResults ? props.homeOrAwayResults : \"default\"}`} className=\"FormHomeOrAway\">\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[5] ? props.ResultsHorA[5] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[5] ? props.ResultsHorA[5] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[4] ? props.ResultsHorA[4] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[4] ? props.ResultsHorA[4] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[3] ? props.ResultsHorA[3] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[3] ? props.ResultsHorA[3] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[2] ? props.ResultsHorA[2] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[2] ? props.ResultsHorA[2] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[1] ? props.ResultsHorA[1] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[1] ? props.ResultsHorA[1] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[0] ? props.ResultsHorA[0] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[0] ? props.ResultsHorA[0] : \"\"}\n            </span>\n          </li>\n          <div className=\"AllStats\">\n            <div className=\"FormSummaries\">\n              <li className=\"StyleOfPlay\">{`${props.homeOrAway ? props.homeOrAway : \"N/A\"} style - ${props.StyleOfPlayHomeOrAway ? props.StyleOfPlayHomeOrAway : \"N/A\"}`}</li>\n            </div>\n            <li\n              key=\"TeamScored\"\n              className=\"TeamScored\"\n              data-cy={props.name ? props.name + \"teamScored\" : \"teamScored\"}\n            >\n              {`Avg goals scored - ${props.goals !== undefined ? props.goals : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamConceeded\"\n              className=\"TeamConceeded\"\n              data-cy={props.name ? props.name + \"teamConceded\" : \"teamConceded\"}\n            >\n              {`Avg goals conceeded - ${props.conceeded !== undefined ? props.conceeded : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamPossession\"\n              className=\"TeamPossession\"\n              data-cy={props.name ? props.name + \"teamPossession\" : \"teamPossession\"}\n            >\n              {`Avg possession - ${props.possession !== undefined ? props.possession : \"N/A\"}%`}\n            </li>\n            <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name ? props.name + \"teamXG\" : \"teamXG\"}>\n              {`Avg XG - ${props.XG !== undefined ? props.XG : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamXGConceded\"\n              className=\"TeamXGConceded\"\n              data-cy={props.name ? props.name + \"teamXGConceded\" : \"teamXGConceded\"}\n            >\n              {`Avg XG conceded - ${props.XGConceded !== undefined ? props.XGConceded : \"N/A\"}`}\n            </li>\n            <li\n              key=\"goalDifferenceHorA\"\n              className=\"goalDifferenceHorA\"\n              data-cy={props.name ? props.name + \"goalDifference\" : \"goalDifference\"}\n            >\n              {`Goal difference ${props.homeOrAway ? props.homeOrAway : \"N/A\"} : ${props.goalDifferenceHomeOrAway !== undefined ? props.goalDifferenceHomeOrAway : \"N/A\"\n                }`}\n            </li>\n            <li\n              key=\"AverageShots\"\n              className=\"AverageShots\"\n              data-cy={props.name ? props.name + \"AverageShots\" : \"AverageShots\"}\n            >\n              {`Avg shots - ${props.shots !== undefined ? props.shots : \"N/A\"}`}\n            </li>\n            <li\n              key=\"AverageSOT\"\n              className=\"AverageSOT\"\n              data-cy={props.name ? props.name + \"averageSOT\" : \"averageSOT\"}\n            >\n              {`Avg shots on target - ${props.sot !== undefined ? props.sot : \"N/A\"}`}\n            </li>\n            <li\n              key=\"DangerousAttacks\"\n              className=\"DangerousAttacks\"\n              data-cy={props.name ? props.name + \"dangerousAttacks\" : \"dangerousAttacks\"}\n            >\n              {`Avg dangerous attacks - ${props.dangerousAttacks !== undefined ? props.dangerousAttacks : \"N/A\"}`}\n            </li>\n            <li\n              key=\"WinPercentage\"\n              className=\"WinPercentage\"\n              data-cy={props.name ? props.name + \"WinPercentage\" : \"WinPercentage\"}\n            >\n              {props.homeOrAway && props.winPercentage !== undefined && props.winPercentage !== \"N/A\" ? `${props.homeOrAway} PPG - ${props.winPercentage.toFixed(2)}` : \"N/A\"}\n            </li>\n            <li\n              key=\"CornersAverage\"\n              className=\"CornersAverage\"\n              data-cy={props.name ? props.name + \"CornersAverage\" : \"CornersAverage\"}\n            >\n              {`Corners average: ${props.CornersAverage !== undefined ? props.CornersAverage : \"N/A\"}`}\n            </li>\n          </div>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  } else if (props.games === \"last5\") {\n    return (\n      <Fragment>\n        <ul className={props.className ? props.className : \"\"} style={props.style ? props.style : {}}>\n          <CreateBadge image={props.badge} alt=\"Team badge\" ClassName={\"ColumnBadge\"} />\n          <li className=\"FormHeader\">\n            Last 5 games (All)\n          </li>\n          <li key={`last5League`} className=\"last5League\">\n            <span className={styleForm(props.Results && props.Results[4] ? props.Results[4] : \"\")}>\n              {props.Results && props.Results[4] ? props.Results[4] : \"\"}\n            </span>\n            <span className={styleForm(props.Results && props.Results[3] ? props.Results[3] : \"\")}>\n              {props.Results && props.Results[3] ? props.Results[3] : \"\"}\n            </span>\n            <span className={styleForm(props.Results && props.Results[2] ? props.Results[2] : \"\")}>\n              {props.Results && props.Results[2] ? props.Results[2] : \"\"}\n            </span>\n            <span className={styleForm(props.Results && props.Results[1] ? props.Results[1] : \"\")}>\n              {props.Results && props.Results[1] ? props.Results[1] : \"\"}\n            </span>\n            <span className={styleForm(props.Results && props.Results[0] ? props.Results[0] : \"\")}>\n              {props.Results && props.Results[0] ? props.Results[0] : \"\"}\n            </span>\n          </li>\n          <div className=\"AllStats\">\n            <li\n              key=\"TeamScored\"\n              className=\"TeamScored\"\n              data-cy={props.name ? props.name + \"teamScored\" : \"teamScored\"}\n            >\n              {`Avg goals scored - ${props.goals !== undefined ? props.goals : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamConceeded\"\n              className=\"TeamConceeded\"\n              data-cy={props.name ? props.name + \"teamConceded\" : \"teamConceded\"}\n            >\n              {`Avg goals conceeded - ${props.conceeded !== undefined ? props.conceeded : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamPossession\"\n              className=\"TeamPossession\"\n              data-cy={props.name ? props.name + \"teamPossession\" : \"teamPossession\"}\n            >\n              {`Avg possession - ${props.possession !== undefined ? props.possession : \"N/A\"}%`}\n            </li>\n            <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name ? props.name + \"teamXG\" : \"teamXG\"}>\n              {`Avg XG - ${props.XG !== undefined ? props.XG : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamXGConceded\"\n              className=\"TeamXGConceded\"\n              data-cy={props.name ? props.name + \"teamXGConceded\" : \"teamXGConceded\"}\n            >\n              {`Avg XG conceded - ${props.XGConceded !== undefined ? props.XGConceded : \"N/A\"}`}\n            </li>\n            <li\n              key=\"goalDifference\"\n              className=\"goalDifference\"\n              data-cy={props.name ? props.name + \"goalDifference\" : \"goalDifference\"}\n            >\n              {`Goal difference : `}\n              <span>{props.goalDifference !== undefined ? props.goalDifference : \"N/A\"}</span>\n            </li>\n            <li\n              key=\"AverageShots\"\n              className=\"AverageShots\"\n              data-cy={props.name ? props.name + \"AverageShots\" : \"AverageShots\"}\n            >\n              {`Avg shots - ${props.shots !== undefined ? props.shots : \"N/A\"}`}\n            </li>\n            <li\n              key=\"AverageSOT\"\n              className=\"AverageSOT\"\n              data-cy={props.name ? props.name + \"averageSOT\" : \"averageSOT\"}\n            >\n              {`Avg shots on target - ${props.sot !== undefined ? props.sot : \"N/A\"}`}\n            </li>\n            <li\n              key=\"DangerousAttacks\"\n              className=\"DangerousAttacks\"\n              data-cy={props.name ? props.name + \"dangerousAttacks\" : \"dangerousAttacks\"}\n            >\n              {`Avg dangerous attacks - ${props.dangerousAttacks !== undefined ? props.dangerousAttacks : \"N/A\"}`}\n            </li>\n            <li key=\"PPG\" className=\"PPG\" data-cy={props.name ? props.name + \"PPG\" : \"PPG\"}>\n              {`Last 5 PPG - ${props.ppg !== undefined ? props.ppg : \"N/A\"}`}\n            </li>\n            <li\n              key=\"CornersAverage\"\n              className=\"CornersAverage\"\n              data-cy={props.name ? props.name + \"CornersAverage\" : \"CornersAverage\"}\n            >\n              {`Corners average: ${props.CornersAverage !== undefined ? props.CornersAverage : \"N/A\"}`}\n            </li>\n          </div>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Stats;\n","/Users/greg/Development/Predictor/src/components/CarouselXGChart.js",[],"/Users/greg/Development/Predictor/src/components/Chart.js",["430","431","432"],"// import { light } from \"@material-ui/core/styles/createPalette\";\n// import { toBePartiallyChecked } from \"@testing-library/jest-dom/dist/matchers\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  ArcElement,\n  LineElement,\n  Filler,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  SubTitle,\n} from \"chart.js\";\nimport { Line, Radar, Bar, Doughnut, PolarArea } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  ArcElement,\n  Filler,\n  BarElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  SubTitle,\n\n);\n\nexport function Chart(props) {\n  let length;\n  let depth;\n\n  if (props.type === \"Points over time\") {\n    length = props.data1.length * 3;\n    depth = 0;\n  } else if (props.type === \"Rolling average points over last 10\") {\n    length = Math.abs(props.height);\n    depth = 0;\n  } else if (Math.abs(props.height) > Math.abs(props.depth)) {\n    length = Math.abs(props.height);\n    depth = -Math.abs(props.height);\n  } else if (Math.abs(props.height) < Math.abs(props.depth)) {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  } else {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  }\n\n  const options = {\n    color: \"#fe8c00\",\n    responsive: true,\n    aspectRatio: 1.2,\n    maintainAspectRatio: true,\n    layout: {\n      padding: 3,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    scales: {\n      y: {\n        suggestedMin: depth,\n        suggestedMax: length,\n        // suggestedMax: Math.max(...props.data1) > 3 ? Math.max(...props.data1) : 3,\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          font: {\n            size: 12,\n          },\n          color: \"#fe8c00\",\n        },\n      },\n      x: {\n        title: {\n          display: false,\n          text: \"Last X Games\",\n          font: {\n            size: 14,\n          },\n        },\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          display: false,\n          font: {\n            size: 14,\n          },\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 5,\n        },\n      },\n      title: {\n        display: true,\n        text: props.type,\n        color: \"#fe8c00\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  const labels = Array.from(props.data1.keys());\n\n  let data = {\n    labels,\n    datasets: [\n      {\n        label: props.team1,\n        font: {\n          color: \"#fe8c00\",\n        },\n        data: props.data1,\n        borderColor: \"#01a501\",\n        borderWidth: 3,\n        backgroundColor: \"#01a501\",\n        tension: props.tension,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        borderColor: \"#ae1001ff\",\n        borderWidth: 3,\n        backgroundColor: \"#ae1001ff\",\n        tension: props.tension,\n      },\n    ],\n  };\n\n  return <Line options={options} data={data} />;\n}\n\nexport function MultilineChart(props) {\n  let length;\n  let depth;\n\n  if (props.type === \"Points over time\") {\n    length = props.data1.length * 3;\n    depth = 0;\n  } else if (props.type === \"Rolling average points over last 10\") {\n    length = Math.abs(props.height);\n    depth = 0;\n  } else if (Math.abs(props.height) > Math.abs(props.depth)) {\n    length = Math.abs(props.height);\n    depth = -Math.abs(props.height);\n  } else if (Math.abs(props.height) < Math.abs(props.depth)) {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  } else {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  }\n\n  const options = {\n    color: \"#fe8c00\",\n    responsive: true,\n    aspectRatio: 1.2,\n    maintainAspectRatio: true,\n    layout: {\n      padding: 3,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    scales: {\n      y: {\n        suggestedMin: depth,\n        suggestedMax: length,\n        // suggestedMax: Math.max(...props.data1) > 3 ? Math.max(...props.data1) : 3,\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          font: {\n            size: 12,\n          },\n          color: \"#fe8c00\",\n        },\n      },\n      x: {\n        title: {\n          display: false,\n          text: \"Last X Games\",\n          font: {\n            size: 14,\n          },\n        },\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          display: false,\n          font: {\n            size: 14,\n          },\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 5,\n        },\n      },\n      title: {\n        display: true,\n        text: props.type,\n        color: \"#fe8c00\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  const labels = Array.from(props.data1.keys());\n\n  let data = {\n    labels,\n    datasets: [\n      {\n        label: props.team1,\n        font: {\n          color: \"#fe8c00\",\n        },\n        data: props.data1,\n        borderColor: \"#01a501\",\n        borderWidth: 3,\n        backgroundColor: \"#01a501\",\n        tension: props.tension,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        borderColor: \"#ae1001ff\",\n        borderWidth: 3,\n        backgroundColor: \"#ae1001ff\",\n        tension: props.tension,\n      },\n      {\n        label: `${props.team1} XG Diff`,\n        font: {\n          color: \"white\",\n        },\n        data: props.data3,\n        borderColor: \"#01a50182\",\n        borderWidth: 3,\n        backgroundColor: \"#01a50182\",\n        tension: props.tension,\n        hidden: true,\n      },\n      {\n        label: `${props.team2} XG Diff`,\n        font: {\n          color: \"#fe8c00\",\n        },\n        data: props.data4,\n        borderColor: \"#ae0f018d\",\n        borderWidth: 3,\n        backgroundColor: \"#ae0f018d\",\n        tension: props.tension,\n        hidden: true,\n      },\n    ],\n  };\n\n  return <Line options={options} data={data} />;\n}\n\nexport const DoughnutChart = ({ labels, values, colors, label = 'Dataset', chartTitle = ''\n}) => {\n  const data = {\n    labels,\n    datasets: [{\n      label,\n      data: values,\n      backgroundColor: colors,\n      hoverOffset: 4\n    }]\n  };\n\n  const options = {\n    rotation: 270,\n    circumference: 180,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: !!chartTitle,\n        text: chartTitle,\n        font: {\n          size: 12\n        }\n      }\n    }\n  };\n\n    return<Doughnut className=\"DoughnutChart\" data = { data } options = { options } />;\n};\n\n\n\nexport function RadarChart(props) {\n  const options = {\n    color: \"white\",\n    scales: {\n      r: {\n        ticks: {\n          stepSize: 20, // Adjust this to space out ticks more (default is 10)\n          display: false,\n        },\n        grid: {\n          // circular: true,\n          color: \"#f57701\",\n        },\n        pointLabels: {\n          color: \"#f57701\",\n          font: {\n            size: 12\n          },\n        },\n        min: 0,\n        max: props.max, // Set this according to your chart's range\n      }\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 10,\n          color: \"#f57701\",\n          font: {\n            size: 14\n          },\n        },\n      },\n      title: {\n        display: true,\n        text: props.title,\n        color: \"#f57701\",\n        backgroundColor: \"black\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  let data = {\n    labels: props.labels,\n    datasets: [\n      {\n        label: props.team1,\n        data: props.data,\n        fill: true,\n        backgroundColor: \"#01a50141\",\n        borderColor: \"#01a501\",\n        pointBackgroundColor: \"#01a501\",\n        pointBorderColor: \"#01a501\",\n        pointHoverBackgroundColor: \"#01a501\",\n        pointHoverBorderColor: \"#007900ff\",\n        borderWidth: 2,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        fill: true,\n        backgroundColor: \"#ae0f0141\",\n        borderColor: \"#ae1001ff\",\n        pointBackgroundColor: \"#ae1001ff\",\n        pointBorderColor: \"#ae1001ff\",\n        pointHoverBackgroundColor: \"#ae1001ff\",\n        pointHoverBorderColor: \"#ae1001ff\",\n        borderWidth: 2,\n      },\n    ],\n  };\n\n  return <Radar options={options} data={data} />;\n}\n\nexport function BarChartLeagueStats({\n  title,\n  teamAData,\n  teamBData,\n  teamALabel,\n  teamBLabel,\n  maxRank,\n}) {\n  const labels = [\n    \"Avg Rating\",\n    \"Goals Scored\",\n    \"Goals Conceded\",\n    \"Big Chances\",\n    \"Big Chances Missed\",\n    \"Hit Woodwork\",\n    \"Yellow Cards\",\n    \"Red Cards\",\n    \"Possession\",\n    \"Accurate Passes\",\n    \"Long Balls\",\n    \"Crosses\",\n    \"Shots\",\n    \"Shots on Target\",\n    \"Dribbles\",\n    \"Tackles\",\n    \"Interceptions\",\n    \"Clearances\",\n    \"Corners\",\n    \"Fouls\",\n    \"Pen Goals\",\n    \"Pen Goals Conceded\",\n    \"Clean Sheets\",\n  ];\n\n  const statKeys = Object.keys(teamAData);\n\n  // Invert rank so that a lower rank (1 = best) becomes a higher bar\n  const invertRank = (rank) => maxRank - rank + 1;\n\n  // Preprocess data\n  const teamAInverted = statKeys.map((key) => invertRank(teamAData[key]));\n  const teamBInverted = statKeys.map((key) => invertRank(teamBData[key]));\n\n  const data = {\n    labels: statKeys.map((key) =>\n      key.replace(/([A-Z])/g, \" $1\").replace(/^./, (str) => str.toUpperCase())\n    ),\n    datasets: [\n      {\n        label: teamALabel,\n        data: teamAInverted,\n        backgroundColor: \"rgba(255, 99, 132, 0.7)\",\n        borderRadius: 2,\n        barThickness: 6,             // Fixed thickness\n        categoryPercentage: 0.1,      // Reduce this for more space between rows\n        barPercentage: 1.0\n      },\n      {\n        label: teamBLabel,\n        data: teamBInverted,\n        backgroundColor: \"rgba(255, 255, 102, 0.7)\",\n        borderRadius: 2,\n        barThickness: 6,             // Fixed thickness\n        categoryPercentage: 0.1,      // Reduce this for more space between rows\n        barPercentage: 1.0\n      },\n    ],\n  };\n\n  const options = {\n    indexAxis: \"y\",\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        reverse: true, // ⬅️ This flips the axis direction\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Relative Rank (Lower = Better)',\n        },\n        ticks: {\n          stepSize: 5,\n        },\n      },\n      y: {\n        ticks: {\n          autoSkip: false,\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n        labels: {\n          boxWidth: 20,\n        },\n      },\n    },\n    layout: {\n      padding: {\n        top: 10,\n        bottom: 10,\n      },\n    },\n  };\n\n  return <Bar data={data} options={options} className=\"LeagueStatsBar\" />;\n}\n\nexport function RadarChartLeagueStats({\n  title,\n  teamAData,\n  teamBData,\n  teamALabel = \"Team A\",\n  teamBLabel = \"Team B\",\n  maxRank = 30,\n}) {\n  const labels = Object.keys(teamAData).map((key) =>\n    key.replace(/([A-Z])/g, \" $1\").replace(/^./, (str) => str.toUpperCase())\n  );\n\n  const teamAValues = Object.values(teamAData).map(Number);\n  const teamBValues = Object.values(teamBData).map(Number);\n\n  const chartData = {\n    labels,\n    datasets: [\n      {\n        label: teamALabel,\n        data: teamAValues,\n        fill: true,\n        borderColor: \"red\",\n        pointBackgroundColor: \"red\",\n        pointBorderColor: \"red\",\n        pointHoverBackgroundColor: \"#fff\",\n        pointHoverBorderColor: \"rgba(255, 99, 133, 0)\",\n        borderWidth: 1,\n      },\n      // {\n      //   label: teamBLabel,\n      //   data: teamBValues,\n      //   fill: true,\n      //   borderColor: \"yellow\",\n      //   pointBackgroundColor: \"yellow\",\n      //   pointBorderColor: \"yellow\",\n      //   pointHoverBackgroundColor: \"#fff\",\n      //   pointHoverBorderColor: \"yellow\",\n      //   borderWidth: 2,\n      // },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    color: \"#fe8c00\",\n    maintainAspectRatio: true,\n    scales: {\n      r: {\n        min: 1,\n        max: maxRank,\n        reverse: true,\n        angleLines: {\n          display: true,\n        },\n        grid: {\n          circular: true,\n          // color: \"transparent\", // or use a solid border color if you want the lines only\n        },\n        ticks: {\n          display: true,\n          backdropColor: \"transparent\",\n        },\n        pointLabels: {\n          color: \"#fe8c00\",\n          font: {\n            size: 10,\n          },\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n        labels: {\n          boxHeight: 10,\n          color: \"#fe8c00\",\n        },\n      },\n      title: {\n        display: true,\n        text: title || \"Team Comparison by League Ranking\",\n        color: \"#fe8c00\",\n        font: {\n          size: 14,\n        },\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            return `${context.dataset.label}: Rank ${context.formattedValue}`;\n          },\n        },\n      },\n    },\n  };\n\n  return (\n    <PolarArea className=\"LeagueStatsRadar\" data={chartData} options={options} />\n  );\n}\n\nexport function BarChart(props) {\n  const datasetOne = props.data1;\n  const datasetTwo = props.data2;\n  const sum = datasetTwo.map(function (num, idx) {\n    return num - datasetOne[idx];\n  });\n\n  const max = Math.max(...sum);\n  const min = Math.min(...sum);\n\n  const largest = findLargestNum(max, min);\n\n  function findLargestNum(numOne, numTwo) {\n    const tempArr = [];\n    const firstNum = Math.abs(numOne);\n    const secondNum = Math.abs(numTwo);\n    tempArr.push(firstNum, secondNum);\n\n    return Math.max(...tempArr) + 1;\n  }\n\n  const options = {\n    color: \"#fe8c00\",\n    indexAxis: \"y\",\n    // Elements options apply to all of the options unless overridden in a dataset\n    // In this case, we are setting the border of each horizontal bar to be 2px wide\n    aspectRatio: 1.2,\n    elements: {\n      bar: {\n        borderWidth: 2,\n      },\n    },\n    scales: {\n      x: {\n        min: -8,\n        max: 8,\n        ticks: {\n          display: false,\n        },\n      },\n      y: {\n        ticks: {\n          font: {\n            size: 11,\n          },\n          color: \"#fe8c00\",\n        },\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: false,\n      },\n      title: {\n        display: true,\n        text: props.text,\n        color: \"#fe8c00\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  const labels = [\n    \"Highest Goals\",\n    \"Fewest Conceeded\",\n    \"PPG\",\n    \"Highest XGF\",\n    \"Fewest XGA\",\n    \"SoT\",\n    \"Dangerous Attacks\",\n    \"Av. Possession\",\n    \"Home/Away Goal Diff\",\n    \"Corners\",\n  ];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        // label: 'Dataset 1',\n        legend: {\n          display: false,\n        },\n        data: sum,\n        backgroundColor(context) {\n          const index = context.dataIndex;\n          const value = context.dataset.data[index];\n          return value < 0 ? \"#01a501\" : \"#ae1001ff\";\n        },\n      },\n    ],\n  };\n\n  return <Bar options={options} data={data} />;\n}\n\nexport function BarChartTwo(props) {\n  const dataset = [props.data1, props.data2];\n\n  const options = {\n    color: \"#fe8c00\",\n    indexAxis: \"x\",\n    // Elements options apply to all of the options unless overridden in a dataset\n    // In this case, we are setting the border of each horizontal bar to be 2px wide\n    aspectRatio: 1.2,\n    elements: {\n      bar: {\n        borderWidth: 2,\n      },\n    },\n    scales: {\n      y: {\n        min: -0.8,\n        max: 0.8,\n        ticks: {\n          display: true,\n          font: {\n            size: 10,\n          },\n          color: \"#fe8c00\",\n        },\n      },\n      // y: {\n      //   suggestedMin: -0.8,\n      //   suggestedMax: 0.8,\n      //   ticks: {\n      //     font: {\n      //       size: 10,\n      //     },\n      //   },\n      // },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: true,\n      },\n      title: {\n        display: true,\n        text: [props.text],\n        color: \"#fe8c00\",\n        font: {\n          size: 14,\n        },\n      },\n      subtitle: {\n        display: true,\n        text: \"Green - Improving | Red - Worsening\",\n        color: \"#fe8c00\",\n        font: {\n          size: 12,\n        },\n        padding: {\n          bottom: 10,\n        },\n      },\n    },\n  };\n\n  const labels = [props.homeTeam, props.awayTeam];\n\n  const data = {\n    labels: labels,\n    datasets: [\n      {\n        legend: {\n          display: false,\n        },\n        // label: \"XG Recent Swing\",\n        data: dataset,\n        ticks: {\n          font: {\n            size: 14,\n          },\n        },\n        barThickness: 120,\n        backgroundColor(context) {\n          const index = context.dataIndex;\n          const value = context.dataset.data[index];\n          return value < 0 ? \"#730a00\" : \"#016001\";\n        },\n      },\n    ],\n  };\n\n  return <Bar options={options} data={data} />;\n}\n","/Users/greg/Development/Predictor/src/components/RankingsSection.js",[],"/Users/greg/Development/Predictor/src/components/HamburgerMenu.js",[],"/Users/greg/Development/Predictor/src/components/SeasonPreview.js",[],"/Users/greg/Development/Predictor/src/components/PrivacyPolicy.js",[],"/Users/greg/Development/Predictor/src/components/StarRating.js",[],"/Users/greg/Development/Predictor/src/components/PredictionTypeRadio.js",[],"/Users/greg/Development/Predictor/src/components/PlayerStatTable.js",["433"],"import React, { useState } from \"react\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@mui/material\";\n\n// Utility to convert camelCase or mixedCase to \"Proper Case With Spaces\"\nconst formatLabel = (key) =>\n  key\n    .replace(/([A-Z])/g, \" $1\") // Add space before capital letters\n    .replace(/^./, (str) => str.toUpperCase()); // Capitalize first letter\n\nconst PlayerRankingTable = ({ rankingStats }) => {\n  const statKeys = Object.keys(rankingStats);\n  const [selectedStat, setSelectedStat] = useState(statKeys[0]);\n\n  // <-- Added mapping to handle aliases that point to the same statistics property\n  const fieldMap = {\n    leastConceded: \"goalsConceded\",\n    mostConceded: \"goalsConceded\",\n    // add other aliases here if required\n  };\n  const statField = fieldMap[selectedStat] ?? selectedStat;\n  // -->\n\n  const handleChange = (e) => {\n    setSelectedStat(e.target.value);\n  };\n\n  const data = rankingStats[selectedStat];\n\n  return (\n    <div className=\"LeagueStatsTable\">\n      <FormControl\n        sx={{\n          marginBottom: 2,\n          marginTop: 1,\n          width: \"90%\",\n          \"& .MuiOutlinedInput-root\": {\n            backgroundColor: \"#f0f0f0\",\n            fontSize: \"1.25em\",\n            width: \"50%\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            fontFamily: \"'Open Sans', sans-serif\",\n            height: \"2em\",\n            color: \"#fe8c00\",\n            borderRadius: 2,\n            \"& .MuiSelect-icon\": {\n              color: \"#fe8c00\",\n            },\n            \"& fieldset\": {\n              borderColor: \"#ccc !important\",\n              borderWidth: \"0px\",\n            },\n            \"&:hover fieldset\": {\n              borderWidth: \"0px\",\n            },\n            \"&.Mui-focused fieldset\": {\n              borderWidth: \"0px\",\n            },\n          },\n        }}\n      >\n        <Select\n          labelId=\"stat-select-label\"\n          id=\"stat-select\"\n          value={selectedStat}\n          label=\"Choose a stat\"\n          onChange={handleChange}\n          displayEmpty\n        >\n          {statKeys.map((key) => (\n            <MenuItem key={key} value={key}>\n              {formatLabel(key)}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <table\n        style={{ marginTop: \"1em\", borderCollapse: \"collapse\", width: \"95%\" }}\n      >\n        <thead>\n          <tr>\n            <th>Rank</th>\n            <th>Player</th>\n            <th>Team</th>\n            <th>Games</th>\n            <th>{formatLabel(selectedStat)}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map(({ player, team, statistics }, index) => {\n            const rawValue = statistics?.[statField];\n            const displayValue =\n              typeof rawValue === \"number\"\n                ? Number.isInteger(rawValue)\n                  ? rawValue\n                  : rawValue.toFixed(2)\n                : rawValue ?? \"N/A\";\n\n            return (\n              <tr key={player.id}>\n                <td>{index + 1}</td>\n                <td>{player.name}</td>\n                <td>{team.name}</td>\n                <td>{statistics.appearances}</td>\n                <td>{displayValue}</td>{\" \"}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default PlayerRankingTable;\n","/Users/greg/Development/Predictor/src/components/FutureFixture.js",[],"/Users/greg/Development/Predictor/src/components/FutureFixturesSideBySide.js",["434"],"import React from \"react\";\nimport Collapsable from \"./CollapsableElement\"; // adjust import path if needed\nimport { FutureFixture } from \"./FutureFixture\"; // adjust import path if needed\n\nexport default function FutureFixturesSideBySide({\n    loadingFutureFixtures,\n    futureFixturesHome = [],\n    futureFixturesAway = [],\n}) {\n    // if still loading or both empty, render the same empty <div></div> logic you used\n    if (loadingFutureFixtures || (futureFixturesHome.length === 0 && futureFixturesAway.length === 0)) {\n        return <div></div>;\n    }\n\n    return (\n\n        <div\n            className=\"FutureFixturesSideBySide\"\n        >\n            {/* Home column */}\n            <div\n                className=\"FutureFixturesColumn FutureFixturesHome\"\n            >\n                {futureFixturesHome.length === 0 ? (\n                    <div>No upcoming fixtures</div>\n                ) : (\n                    <div className=\"FutureFixtures\">\n                        {futureFixturesHome.map((fixture, index) => (\n                            <FutureFixture\n                                key={fixture.id ?? index}\n                                competition={fixture.tournamentName}\n                                homeTeam={fixture.homeTeam}\n                                awayTeam={fixture.awayTeam}\n                                date={fixture.date}\n                                time={fixture.time}\n                                colourOne={fixture.colourOne}\n                                colourTwo={fixture.colourTwo}\n                            />\n                        ))}\n                    </div>\n                )}\n            </div>\n\n            {/* Away column */}\n            <div\n                className=\"FutureFixturesColumn FutureFixturesAway\"\n            >\n                {futureFixturesAway.length === 0 ? (\n                    <div>No upcoming fixtures</div>\n                ) : (\n                    <div className=\"FutureFixtures\">\n                        {futureFixturesAway.map((fixture, index) => (\n                            <FutureFixture\n                                key={fixture.id ?? index}\n                                competition={fixture.tournamentName}\n                                homeTeam={fixture.homeTeam}\n                                awayTeam={fixture.awayTeam}\n                                date={fixture.date}\n                                time={fixture.time}\n                                colourOne={fixture.colourOne}\n                                colourTwo={fixture.colourTwo}\n                            />\n                        ))}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n","/Users/greg/Development/Predictor/src/components/ShareShortlistButton.js",[],{"ruleId":"435","severity":1,"message":"436","line":6,"column":27,"nodeType":"437","messageId":"438","endLine":6,"endColumn":33},{"ruleId":"439","replacedBy":"440"},{"ruleId":"441","replacedBy":"442"},{"ruleId":"435","severity":1,"message":"443","line":33,"column":10,"nodeType":"437","messageId":"438","endLine":33,"endColumn":19},{"ruleId":"435","severity":1,"message":"436","line":35,"column":27,"nodeType":"437","messageId":"438","endLine":35,"endColumn":33},{"ruleId":"435","severity":1,"message":"444","line":35,"column":50,"nodeType":"437","messageId":"438","endLine":35,"endColumn":54},{"ruleId":"435","severity":1,"message":"445","line":208,"column":5,"nodeType":"437","messageId":"438","endLine":208,"endColumn":10},{"ruleId":"435","severity":1,"message":"446","line":209,"column":5,"nodeType":"437","messageId":"438","endLine":209,"endColumn":20},{"ruleId":"435","severity":1,"message":"447","line":210,"column":5,"nodeType":"437","messageId":"438","endLine":210,"endColumn":12},{"ruleId":"435","severity":1,"message":"448","line":211,"column":5,"nodeType":"437","messageId":"438","endLine":211,"endColumn":13},{"ruleId":"435","severity":1,"message":"449","line":212,"column":5,"nodeType":"437","messageId":"438","endLine":212,"endColumn":23},{"ruleId":"435","severity":1,"message":"450","line":213,"column":5,"nodeType":"437","messageId":"438","endLine":213,"endColumn":15},{"ruleId":"435","severity":1,"message":"451","line":217,"column":5,"nodeType":"437","messageId":"438","endLine":217,"endColumn":14},{"ruleId":"435","severity":1,"message":"452","line":218,"column":5,"nodeType":"437","messageId":"438","endLine":218,"endColumn":24},{"ruleId":"435","severity":1,"message":"453","line":219,"column":5,"nodeType":"437","messageId":"438","endLine":219,"endColumn":16},{"ruleId":"435","severity":1,"message":"454","line":220,"column":5,"nodeType":"437","messageId":"438","endLine":220,"endColumn":17},{"ruleId":"435","severity":1,"message":"455","line":221,"column":5,"nodeType":"437","messageId":"438","endLine":221,"endColumn":27},{"ruleId":"435","severity":1,"message":"456","line":222,"column":5,"nodeType":"437","messageId":"438","endLine":222,"endColumn":13},{"ruleId":"435","severity":1,"message":"457","line":223,"column":5,"nodeType":"437","messageId":"438","endLine":223,"endColumn":23},{"ruleId":"435","severity":1,"message":"458","line":224,"column":5,"nodeType":"437","messageId":"438","endLine":224,"endColumn":15},{"ruleId":"435","severity":1,"message":"459","line":225,"column":5,"nodeType":"437","messageId":"438","endLine":225,"endColumn":17},{"ruleId":"435","severity":1,"message":"460","line":228,"column":5,"nodeType":"437","messageId":"438","endLine":228,"endColumn":16},{"ruleId":"435","severity":1,"message":"461","line":231,"column":5,"nodeType":"437","messageId":"438","endLine":231,"endColumn":29},{"ruleId":"435","severity":1,"message":"462","line":232,"column":5,"nodeType":"437","messageId":"438","endLine":232,"endColumn":30},{"ruleId":"435","severity":1,"message":"463","line":233,"column":5,"nodeType":"437","messageId":"438","endLine":233,"endColumn":28},{"ruleId":"435","severity":1,"message":"464","line":387,"column":6,"nodeType":"437","messageId":"438","endLine":387,"endColumn":18},{"ruleId":"435","severity":1,"message":"465","line":387,"column":20,"nodeType":"437","messageId":"438","endLine":387,"endColumn":42},{"ruleId":"435","severity":1,"message":"466","line":395,"column":5,"nodeType":"437","messageId":"438","endLine":395,"endColumn":19},{"ruleId":"435","severity":1,"message":"467","line":568,"column":10,"nodeType":"437","messageId":"438","endLine":568,"endColumn":14},{"ruleId":"468","severity":1,"message":"469","line":28,"column":6,"nodeType":"470","endLine":28,"endColumn":8,"suggestions":"471"},{"ruleId":"435","severity":1,"message":"472","line":20,"column":5,"nodeType":"437","messageId":"438","endLine":20,"endColumn":13},{"ruleId":"435","severity":1,"message":"473","line":21,"column":10,"nodeType":"437","messageId":"438","endLine":21,"endColumn":16},{"ruleId":"435","severity":1,"message":"474","line":26,"column":5,"nodeType":"437","messageId":"438","endLine":26,"endColumn":15},{"ruleId":"435","severity":1,"message":"475","line":597,"column":9,"nodeType":"437","messageId":"438","endLine":597,"endColumn":27},{"ruleId":"435","severity":1,"message":"476","line":604,"column":9,"nodeType":"437","messageId":"438","endLine":604,"endColumn":22},{"ruleId":"435","severity":1,"message":"477","line":691,"column":17,"nodeType":"437","messageId":"438","endLine":691,"endColumn":25},{"ruleId":"435","severity":1,"message":"478","line":702,"column":9,"nodeType":"437","messageId":"438","endLine":702,"endColumn":20},{"ruleId":"435","severity":1,"message":"479","line":4,"column":10,"nodeType":"437","messageId":"438","endLine":4,"endColumn":13},{"ruleId":"435","severity":1,"message":"480","line":4,"column":15,"nodeType":"437","messageId":"438","endLine":4,"endColumn":21},{"ruleId":"435","severity":1,"message":"481","line":55,"column":5,"nodeType":"437","messageId":"438","endLine":55,"endColumn":9},{"ruleId":"435","severity":1,"message":"482","line":273,"column":10,"nodeType":"437","messageId":"438","endLine":273,"endColumn":25},{"ruleId":"435","severity":1,"message":"483","line":891,"column":14,"nodeType":"437","messageId":"438","endLine":891,"endColumn":37},{"ruleId":"468","severity":1,"message":"484","line":108,"column":6,"nodeType":"470","endLine":108,"endColumn":10,"suggestions":"485"},{"ruleId":"435","severity":1,"message":"486","line":19,"column":3,"nodeType":"437","messageId":"438","endLine":19,"endColumn":16},{"ruleId":"435","severity":1,"message":"487","line":45,"column":10,"nodeType":"437","messageId":"438","endLine":45,"endColumn":21},{"ruleId":"435","severity":1,"message":"488","line":47,"column":10,"nodeType":"437","messageId":"438","endLine":47,"endColumn":18},{"ruleId":"435","severity":1,"message":"489","line":49,"column":26,"nodeType":"437","messageId":"438","endLine":49,"endColumn":39},{"ruleId":"435","severity":1,"message":"490","line":85,"column":10,"nodeType":"437","messageId":"438","endLine":85,"endColumn":26},{"ruleId":"435","severity":1,"message":"491","line":87,"column":10,"nodeType":"437","messageId":"438","endLine":87,"endColumn":36},{"ruleId":"435","severity":1,"message":"492","line":87,"column":38,"nodeType":"437","messageId":"438","endLine":87,"endColumn":67},{"ruleId":"435","severity":1,"message":"493","line":91,"column":10,"nodeType":"437","messageId":"438","endLine":91,"endColumn":21},{"ruleId":"435","severity":1,"message":"494","line":94,"column":33,"nodeType":"437","messageId":"438","endLine":94,"endColumn":56},{"ruleId":"435","severity":1,"message":"495","line":95,"column":33,"nodeType":"437","messageId":"438","endLine":95,"endColumn":56},{"ruleId":"435","severity":1,"message":"496","line":96,"column":43,"nodeType":"437","messageId":"438","endLine":96,"endColumn":76},{"ruleId":"435","severity":1,"message":"497","line":97,"column":43,"nodeType":"437","messageId":"438","endLine":97,"endColumn":76},{"ruleId":"468","severity":1,"message":"498","line":107,"column":6,"nodeType":"470","endLine":107,"endColumn":16,"suggestions":"499"},{"ruleId":"435","severity":1,"message":"500","line":113,"column":10,"nodeType":"437","messageId":"438","endLine":113,"endColumn":25},{"ruleId":"435","severity":1,"message":"501","line":128,"column":10,"nodeType":"437","messageId":"438","endLine":128,"endColumn":22},{"ruleId":"435","severity":1,"message":"502","line":128,"column":24,"nodeType":"437","messageId":"438","endLine":128,"endColumn":39},{"ruleId":"435","severity":1,"message":"503","line":129,"column":10,"nodeType":"437","messageId":"438","endLine":129,"endColumn":22},{"ruleId":"435","severity":1,"message":"504","line":129,"column":24,"nodeType":"437","messageId":"438","endLine":129,"endColumn":39},{"ruleId":"435","severity":1,"message":"505","line":149,"column":10,"nodeType":"437","messageId":"438","endLine":149,"endColumn":33},{"ruleId":"435","severity":1,"message":"506","line":149,"column":35,"nodeType":"437","messageId":"438","endLine":149,"endColumn":61},{"ruleId":"435","severity":1,"message":"507","line":150,"column":10,"nodeType":"437","messageId":"438","endLine":150,"endColumn":26},{"ruleId":"435","severity":1,"message":"508","line":150,"column":28,"nodeType":"437","messageId":"438","endLine":150,"endColumn":47},{"ruleId":"435","severity":1,"message":"509","line":151,"column":10,"nodeType":"437","messageId":"438","endLine":151,"endColumn":26},{"ruleId":"435","severity":1,"message":"510","line":151,"column":28,"nodeType":"437","messageId":"438","endLine":151,"endColumn":47},{"ruleId":"435","severity":1,"message":"511","line":176,"column":34,"nodeType":"437","messageId":"438","endLine":176,"endColumn":59},{"ruleId":"435","severity":1,"message":"512","line":179,"column":33,"nodeType":"437","messageId":"438","endLine":179,"endColumn":57},{"ruleId":"435","severity":1,"message":"513","line":182,"column":38,"nodeType":"437","messageId":"438","endLine":182,"endColumn":67},{"ruleId":"435","severity":1,"message":"514","line":185,"column":37,"nodeType":"437","messageId":"438","endLine":185,"endColumn":65},{"ruleId":"435","severity":1,"message":"515","line":188,"column":39,"nodeType":"437","messageId":"438","endLine":188,"endColumn":69},{"ruleId":"435","severity":1,"message":"516","line":190,"column":38,"nodeType":"437","messageId":"438","endLine":190,"endColumn":67},{"ruleId":"435","severity":1,"message":"517","line":216,"column":34,"nodeType":"437","messageId":"438","endLine":216,"endColumn":59},{"ruleId":"435","severity":1,"message":"518","line":219,"column":33,"nodeType":"437","messageId":"438","endLine":219,"endColumn":57},{"ruleId":"435","severity":1,"message":"519","line":222,"column":38,"nodeType":"437","messageId":"438","endLine":222,"endColumn":67},{"ruleId":"435","severity":1,"message":"520","line":225,"column":37,"nodeType":"437","messageId":"438","endLine":225,"endColumn":65},{"ruleId":"435","severity":1,"message":"521","line":228,"column":39,"nodeType":"437","messageId":"438","endLine":228,"endColumn":69},{"ruleId":"435","severity":1,"message":"522","line":230,"column":38,"nodeType":"437","messageId":"438","endLine":230,"endColumn":67},{"ruleId":"435","severity":1,"message":"523","line":240,"column":38,"nodeType":"437","messageId":"438","endLine":240,"endColumn":67},{"ruleId":"435","severity":1,"message":"524","line":243,"column":38,"nodeType":"437","messageId":"438","endLine":243,"endColumn":67},{"ruleId":"435","severity":1,"message":"525","line":406,"column":19,"nodeType":"437","messageId":"438","endLine":406,"endColumn":29},{"ruleId":"468","severity":1,"message":"526","line":526,"column":6,"nodeType":"470","endLine":526,"endColumn":33,"suggestions":"527"},{"ruleId":"468","severity":1,"message":"526","line":533,"column":6,"nodeType":"470","endLine":533,"endColumn":33,"suggestions":"528"},{"ruleId":"435","severity":1,"message":"529","line":890,"column":18,"nodeType":"437","messageId":"438","endLine":890,"endColumn":29},{"ruleId":"468","severity":1,"message":"530","line":1068,"column":6,"nodeType":"470","endLine":1068,"endColumn":32,"suggestions":"531"},{"ruleId":"468","severity":1,"message":"532","line":1467,"column":6,"nodeType":"470","endLine":1467,"endColumn":15,"suggestions":"533"},{"ruleId":"435","severity":1,"message":"534","line":2129,"column":7,"nodeType":"437","messageId":"438","endLine":2129,"endColumn":11},{"ruleId":"435","severity":1,"message":"535","line":2166,"column":17,"nodeType":"437","messageId":"438","endLine":2166,"endColumn":30},{"ruleId":"435","severity":1,"message":"536","line":2203,"column":15,"nodeType":"437","messageId":"438","endLine":2203,"endColumn":25},{"ruleId":"435","severity":1,"message":"537","line":2209,"column":15,"nodeType":"437","messageId":"438","endLine":2209,"endColumn":29},{"ruleId":"435","severity":1,"message":"538","line":2212,"column":15,"nodeType":"437","messageId":"438","endLine":2212,"endColumn":25},{"ruleId":"435","severity":1,"message":"539","line":2218,"column":15,"nodeType":"437","messageId":"438","endLine":2218,"endColumn":29},{"ruleId":"468","severity":1,"message":"540","line":2686,"column":6,"nodeType":"470","endLine":2695,"endColumn":4,"suggestions":"541"},{"ruleId":"435","severity":1,"message":"542","line":2782,"column":11,"nodeType":"437","messageId":"438","endLine":2782,"endColumn":15},{"ruleId":"435","severity":1,"message":"543","line":3014,"column":24,"nodeType":"437","messageId":"438","endLine":3014,"endColumn":37},{"ruleId":"435","severity":1,"message":"544","line":3017,"column":24,"nodeType":"437","messageId":"438","endLine":3017,"endColumn":37},{"ruleId":"435","severity":1,"message":"545","line":30,"column":8,"nodeType":"437","messageId":"438","endLine":30,"endColumn":27},{"ruleId":"435","severity":1,"message":"546","line":960,"column":11,"nodeType":"437","messageId":"438","endLine":960,"endColumn":16},{"ruleId":"435","severity":1,"message":"547","line":961,"column":11,"nodeType":"437","messageId":"438","endLine":961,"endColumn":15},{"ruleId":"435","severity":1,"message":"548","line":1041,"column":11,"nodeType":"437","messageId":"438","endLine":1041,"endColumn":38},{"ruleId":"435","severity":1,"message":"549","line":1046,"column":11,"nodeType":"437","messageId":"438","endLine":1046,"endColumn":38},{"ruleId":"435","severity":1,"message":"550","line":1051,"column":14,"nodeType":"437","messageId":"438","endLine":1051,"endColumn":21},{"ruleId":"435","severity":1,"message":"551","line":1224,"column":11,"nodeType":"437","messageId":"438","endLine":1224,"endColumn":37},{"ruleId":"435","severity":1,"message":"552","line":1549,"column":16,"nodeType":"437","messageId":"438","endLine":1549,"endColumn":35},{"ruleId":"435","severity":1,"message":"553","line":1586,"column":16,"nodeType":"437","messageId":"438","endLine":1586,"endColumn":28},{"ruleId":"435","severity":1,"message":"554","line":1692,"column":16,"nodeType":"437","messageId":"438","endLine":1692,"endColumn":35},{"ruleId":"435","severity":1,"message":"555","line":1735,"column":7,"nodeType":"437","messageId":"438","endLine":1735,"endColumn":17},{"ruleId":"435","severity":1,"message":"556","line":1748,"column":9,"nodeType":"437","messageId":"438","endLine":1748,"endColumn":43},{"ruleId":"435","severity":1,"message":"557","line":1753,"column":9,"nodeType":"437","messageId":"438","endLine":1753,"endColumn":43},{"ruleId":"435","severity":1,"message":"558","line":1776,"column":9,"nodeType":"437","messageId":"438","endLine":1776,"endColumn":29},{"ruleId":"435","severity":1,"message":"559","line":1781,"column":9,"nodeType":"437","messageId":"438","endLine":1781,"endColumn":29},{"ruleId":"435","severity":1,"message":"560","line":1815,"column":9,"nodeType":"437","messageId":"438","endLine":1815,"endColumn":36},{"ruleId":"435","severity":1,"message":"561","line":1820,"column":9,"nodeType":"437","messageId":"438","endLine":1820,"endColumn":36},{"ruleId":"435","severity":1,"message":"562","line":1999,"column":5,"nodeType":"437","messageId":"438","endLine":1999,"endColumn":6},{"ruleId":"435","severity":1,"message":"563","line":2936,"column":7,"nodeType":"437","messageId":"438","endLine":2936,"endColumn":30},{"ruleId":"435","severity":1,"message":"564","line":2937,"column":7,"nodeType":"437","messageId":"438","endLine":2937,"endColumn":30},{"ruleId":"435","severity":1,"message":"565","line":312,"column":9,"nodeType":"437","messageId":"438","endLine":312,"endColumn":17},{"ruleId":"468","severity":1,"message":"566","line":353,"column":6,"nodeType":"470","endLine":353,"endColumn":19,"suggestions":"567"},{"ruleId":"435","severity":1,"message":"568","line":6,"column":8,"nodeType":"437","messageId":"438","endLine":6,"endColumn":19},{"ruleId":"435","severity":1,"message":"569","line":210,"column":11,"nodeType":"437","messageId":"438","endLine":210,"endColumn":18},{"ruleId":"435","severity":1,"message":"570","line":217,"column":11,"nodeType":"437","messageId":"438","endLine":217,"endColumn":28},{"ruleId":"435","severity":1,"message":"571","line":219,"column":11,"nodeType":"437","messageId":"438","endLine":219,"endColumn":26},{"ruleId":"435","severity":1,"message":"572","line":221,"column":11,"nodeType":"437","messageId":"438","endLine":221,"endColumn":27},{"ruleId":"435","severity":1,"message":"573","line":514,"column":9,"nodeType":"437","messageId":"438","endLine":514,"endColumn":26},{"ruleId":"435","severity":1,"message":"574","line":518,"column":9,"nodeType":"437","messageId":"438","endLine":518,"endColumn":24},{"ruleId":"435","severity":1,"message":"575","line":523,"column":9,"nodeType":"437","messageId":"438","endLine":523,"endColumn":25},{"ruleId":"435","severity":1,"message":"576","line":536,"column":11,"nodeType":"437","messageId":"438","endLine":536,"endColumn":19},{"ruleId":"435","severity":1,"message":"534","line":538,"column":11,"nodeType":"437","messageId":"438","endLine":538,"endColumn":15},{"ruleId":"435","severity":1,"message":"577","line":569,"column":11,"nodeType":"437","messageId":"438","endLine":569,"endColumn":29},{"ruleId":"435","severity":1,"message":"578","line":587,"column":11,"nodeType":"437","messageId":"438","endLine":587,"endColumn":29},{"ruleId":"435","severity":1,"message":"481","line":602,"column":9,"nodeType":"437","messageId":"438","endLine":602,"endColumn":13},{"ruleId":"435","severity":1,"message":"579","line":623,"column":22,"nodeType":"437","messageId":"438","endLine":623,"endColumn":39},{"ruleId":"435","severity":1,"message":"580","line":641,"column":11,"nodeType":"437","messageId":"438","endLine":641,"endColumn":24},{"ruleId":"435","severity":1,"message":"581","line":646,"column":11,"nodeType":"437","messageId":"438","endLine":646,"endColumn":24},{"ruleId":"435","severity":1,"message":"582","line":774,"column":13,"nodeType":"437","messageId":"438","endLine":774,"endColumn":33},{"ruleId":"435","severity":1,"message":"583","line":787,"column":13,"nodeType":"437","messageId":"438","endLine":787,"endColumn":33},{"ruleId":"435","severity":1,"message":"584","line":801,"column":13,"nodeType":"437","messageId":"438","endLine":801,"endColumn":33},{"ruleId":"435","severity":1,"message":"585","line":814,"column":13,"nodeType":"437","messageId":"438","endLine":814,"endColumn":33},{"ruleId":"435","severity":1,"message":"586","line":829,"column":12,"nodeType":"437","messageId":"438","endLine":829,"endColumn":26},{"ruleId":"435","severity":1,"message":"543","line":829,"column":28,"nodeType":"437","messageId":"438","endLine":829,"endColumn":41},{"ruleId":"435","severity":1,"message":"587","line":832,"column":12,"nodeType":"437","messageId":"438","endLine":832,"endColumn":26},{"ruleId":"435","severity":1,"message":"544","line":832,"column":28,"nodeType":"437","messageId":"438","endLine":832,"endColumn":41},{"ruleId":"435","severity":1,"message":"588","line":836,"column":11,"nodeType":"437","messageId":"438","endLine":836,"endColumn":30},{"ruleId":"435","severity":1,"message":"589","line":845,"column":11,"nodeType":"437","messageId":"438","endLine":845,"endColumn":30},{"ruleId":"435","severity":1,"message":"590","line":2,"column":23,"nodeType":"437","messageId":"438","endLine":2,"endColumn":33},{"ruleId":"435","severity":1,"message":"591","line":13,"column":15,"nodeType":"437","messageId":"438","endLine":13,"endColumn":19},{"ruleId":"592","severity":1,"message":"593","line":77,"column":9,"nodeType":"594","endLine":83,"endColumn":10},{"ruleId":"435","severity":1,"message":"595","line":5,"column":7,"nodeType":"437","messageId":"438","endLine":5,"endColumn":17},{"ruleId":"435","severity":1,"message":"596","line":420,"column":9,"nodeType":"437","messageId":"438","endLine":420,"endColumn":15},{"ruleId":"435","severity":1,"message":"597","line":534,"column":9,"nodeType":"437","messageId":"438","endLine":534,"endColumn":20},{"ruleId":"435","severity":1,"message":"598","line":633,"column":9,"nodeType":"437","messageId":"438","endLine":633,"endColumn":16},{"ruleId":"435","severity":1,"message":"590","line":2,"column":23,"nodeType":"437","messageId":"438","endLine":2,"endColumn":33},{"ruleId":"435","severity":1,"message":"568","line":2,"column":8,"nodeType":"437","messageId":"438","endLine":2,"endColumn":19},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["599"],"no-negated-in-lhs",["600"],"'ThreeDots' is defined but never used.","'Link' is defined but never used.","'today' is defined but never used.","'todayFootyStats' is defined but never used.","'todaySS' is defined but never used.","'tomorrow' is defined but never used.","'tomorrowFootyStats' is defined but never used.","'tomorrowSS' is defined but never used.","'yesterday' is defined but never used.","'yesterdayFootyStats' is defined but never used.","'yesterdaySS' is defined but never used.","'lastSaturday' is defined but never used.","'lastSaturdayFootyStats' is defined but never used.","'historic' is defined but never used.","'historicFootyStats' is defined but never used.","'historicSS' is defined but never used.","'historicDate' is defined but never used.","'dateString2' is defined but never used.","'tomorrowsDateUnformatted' is defined but never used.","'yesterdaysDateUnformatted' is defined but never used.","'saturdayDateUnformatted' is defined but never used.","'lastSaturday' is assigned a value but never used.","'lastSaturdayFootyStats' is assigned a value but never used.","'lastSaturdaySS' is assigned a value but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["601"],"'setCount' is defined but never used.","'toggle' is defined but never used.","'tipOutcome' is assigned a value but never used.","'selectedFixtureIds' is assigned a value but never used.","'shareableLink' is assigned a value but never used.","'setCount' is assigned a value but never used.","'showCapText' is assigned a value but never used.","'Eye' is defined but never used.","'EyeOff' is defined but never used.","'paid' is assigned a value but never used.","'isWithin48Hours' is defined but never used.","'getLeagueInstanceLength' is defined but never used.","React Hook useEffect has a missing dependency: 'fixture'. Either include it or remove the dependency array.",["602"],"'DoughnutChart' is defined but never used.","'dynamicDate' is defined but never used.","'Doughnut' is defined but never used.","'stripePromise' is defined but never used.","'loadingTeamStats' is assigned a value but never used.","'loadingKeyPlayerComparison' is assigned a value but never used.","'setLoadingKeyPlayerComparison' is assigned a value but never used.","'loadingOdds' is assigned a value but never used.","'setHomePlayerAttributes' is assigned a value but never used.","'setAwayPlayerAttributes' is assigned a value but never used.","'setHomePlayerAttributesComparison' is assigned a value but never used.","'setAwayPlayerAttributesComparison' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'userTips'. Either exclude it or remove the dependency array. Outer scope values like 'userTips' aren't valid dependencies because mutating them doesn't re-render the component.",["603"],"'hasCompleteData' is assigned a value but never used.","'homeXGRating' is assigned a value but never used.","'setHomeXGRating' is assigned a value but never used.","'awayXGRating' is assigned a value but never used.","'setAwayXGRating' is assigned a value but never used.","'rollingSOTDiffTotalHome' is assigned a value but never used.","'setRollingSOTDiffTotalHome' is assigned a value but never used.","'similarGamesHome' is assigned a value but never used.","'setSimilarGamesHome' is assigned a value but never used.","'similarGamesAway' is assigned a value but never used.","'setSimilarGamesAway' is assigned a value but never used.","'setHomeXGForStrengthLast5' is assigned a value but never used.","'setHomeOnlyXGForStrength' is assigned a value but never used.","'setHomeXGAgainstStrengthLast5' is assigned a value but never used.","'setHomeOnlyXGAgainstStrength' is assigned a value but never used.","'setHomeDirectnessStrengthLast5' is assigned a value but never used.","'setHomeOnlyDirectnessStrength' is assigned a value but never used.","'setAwayXGForStrengthLast5' is assigned a value but never used.","'setAwayOnlyXGForStrength' is assigned a value but never used.","'setAwayXGAgainstStrengthLast5' is assigned a value but never used.","'setAwayOnlyXGAgainstStrength' is assigned a value but never used.","'setAwayDirectnessStrengthLast5' is assigned a value but never used.","'setAwayOnlyDirectnessStrength' is assigned a value but never used.","'setGameArrayHomeTeamHomeGames' is assigned a value but never used.","'setGameArrayAwayTeamAwayGames' is assigned a value but never used.","'setDivider' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTeamRanksFromTopTeamsWithPartialMatch'. Either include it or remove the dependency array.",["604"],["605"],"'getRefStats' is defined but never used.","React Hook useMemo has an unnecessary dependency: 'rounds'. Either exclude it or remove the dependency array. Outer scope values like 'rounds' aren't valid dependencies because mutating them doesn't re-render the component.",["606"],"React Hook useEffect has missing dependencies: 'derivedRoundId', 'extractMissingPlayers', 'findGameByPartialMatch', 'game.awayTeam', 'game.date', 'game.homeTeam', 'game.sofaScoreId', 'getGameIdByAwayTeam', 'getGameIdByHomeTeam', 'getMappedTeamName', and 'week'. Either include them or remove the dependency array.",["607"],"'time' is assigned a value but never used.","'paymentStatus' is assigned a value but never used.","'resultHome' is assigned a value but never used.","'resultHomeOnly' is assigned a value but never used.","'resultAway' is assigned a value but never used.","'resultAwayOnly' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'game.matches_completed_minimum'. Either include it or remove the dependency array.",["608"],"'type' is defined but never used.","'testArrayHome' is assigned a value but never used.","'testArrayAway' is assigned a value but never used.","'PredictionTypeRadio' is defined but never used.","'alpha' is assigned a value but never used.","'beta' is assigned a value but never used.","'teamGoalsHomeRollingAverage' is assigned a value but never used.","'teamGoalsAwayRollingAverage' is assigned a value but never used.","'roundXG' is defined but never used.","'teamGoalsAllRollingAverage' is assigned a value but never used.","'normalizeDifference' is defined but never used.","'predictScore' is defined but never used.","'findClosestProperty' is defined but never used.","'finalScore' is assigned a value but never used.","'homeOverallVsAwayOverallComparison' is assigned a value but never used.","'awayOverallVsHomeOverallComparison' is assigned a value but never used.","'pointsComparisonHome' is assigned a value but never used.","'pointsComparisonAway' is assigned a value but never used.","'weighedPointsComparisonHome' is assigned a value but never used.","'weighedPointsComparisonAway' is assigned a value but never used.","'i' is assigned a value but never used.","'homeComparisonWeighting' is assigned a value but never used.","'awayComparisonWeighting' is assigned a value but never used.","'seasonId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'derivedRoundId'. Either include it or remove the dependency array.",["609"],"'Collapsable' is defined but never used.","'divider' is assigned a value but never used.","'goalDiffArrayHome' is defined but never used.","'xgDiffArrayHome' is defined but never used.","'sotDiffArrayHome' is defined but never used.","'goalDiffArrayAway' is assigned a value but never used.","'xgDiffArrayAway' is assigned a value but never used.","'sotDiffArrayAway' is assigned a value but never used.","'awayTeam' is assigned a value but never used.","'homeSixGameAverage' is assigned a value but never used.","'awaySixGameAverage' is assigned a value but never used.","'getLastGameResult' is defined but never used.","'homeFormTrend' is assigned a value but never used.","'awayFormTrend' is assigned a value but never used.","'attackingMetricsHome' is assigned a value but never used.","'attackingMetricsAway' is assigned a value but never used.","'defensiveMetricsHome' is assigned a value but never used.","'defensiveMetricsAway' is assigned a value but never used.","'formPointsHome' is assigned a value but never used.","'formPointsAway' is assigned a value but never used.","'rollingGoalDiffHome' is assigned a value but never used.","'rollingGoalDiffAway' is assigned a value but never used.","'InputLabel' is defined but never used.","'Line' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'shouldOpen' is assigned a value but never used.","'labels' is assigned a value but never used.","'teamBValues' is assigned a value but never used.","'largest' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"610","fix":"611"},{"desc":"612","fix":"613"},{"desc":"614","fix":"615"},{"desc":"616","fix":"617"},{"desc":"618","fix":"619"},{"desc":"620","fix":"621"},{"desc":"622","fix":"623"},{"desc":"624","fix":"625"},{"desc":"626","fix":"627"},"Update the dependencies array to be: [fetchData]",{"range":"628","text":"629"},"Update the dependencies array to be: [fixture, id]",{"range":"630","text":"631"},"Update the dependencies array to be: []",{"range":"632","text":"633"},"Update the dependencies array to be: [stats, homeForm.teamName, getTeamRanksFromTopTeamsWithPartialMatch]",{"range":"634","text":"635"},"Update the dependencies array to be: [stats, awayForm.teamName, getTeamRanksFromTopTeamsWithPartialMatch]",{"range":"636","text":"637"},"Update the dependencies array to be: [game.sofaScoreId]",{"range":"638","text":"639"},"Update the dependencies array to be: [derivedRoundId, extractMissingPlayers, findGameByPartialMatch, game.awayTeam, game.date, game.homeTeam, game.id, game.sofaScoreId, getGameIdByAwayTeam, getGameIdByHomeTeam, getMappedTeamName, week]",{"range":"640","text":"641"},"Update the dependencies array to be: [awayFiveGameAverage, firstRenderDone, awayTenGameAverage, game.completeData, game.id, game.status, homeFiveGameAverage, homeTenGameAverage, game.matches_completed_minimum]",{"range":"642","text":"643"},"Update the dependencies array to be: [derivedRoundId, id, roundId]",{"range":"644","text":"645"},[510,512],"[fetchData]",[3306,3310],"[fixture, id]",[4644,4654],"[]",[19147,19174],"[stats, homeForm.teamName, getTeamRanksFromTopTeamsWithPartialMatch]",[19363,19390],"[stats, awayForm.teamName, getTeamRanksFromTopTeamsWithPartialMatch]",[37045,37071],"[game.sofaScoreId]",[54416,54425],"[derivedRoundId, extractMissingPlayers, findGameByPartialMatch, game.awayTeam, game.date, game.homeTeam, game.id, game.sofaScoreId, getGameIdByAwayTeam, getGameIdByHomeTeam, getMappedTeamName, week]",[102085,102262],"[awayFiveGameAverage, firstRenderDone, awayTenGameAverage, game.completeData, game.id, game.status, homeFiveGameAverage, homeTenGameAverage, game.matches_completed_minimum]",[7553,7566],"[derivedRoundId, id, roundId]"]