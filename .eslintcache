[{"/Users/gregdorward/Development/football-predictions/src/index.js":"1","/Users/gregdorward/Development/football-predictions/src/App.js":"2","/Users/gregdorward/Development/football-predictions/src/reportWebVitals.js":"3","/Users/gregdorward/Development/football-predictions/src/components/spinner.js":"4","/Users/gregdorward/Development/football-predictions/src/components/showCardPotential.js":"5","/Users/gregdorward/Development/football-predictions/src/components/createBadge.js":"6","/Users/gregdorward/Development/football-predictions/src/components/showBttsData.js":"7","/Users/gregdorward/Development/football-predictions/src/components/radio.js":"8","/Users/gregdorward/Development/football-predictions/src/components/Header.js":"9","/Users/gregdorward/Development/football-predictions/src/logic/getFixtures.js":"10","/Users/gregdorward/Development/football-predictions/src/components/createStatsDiv.js":"11","/Users/gregdorward/Development/football-predictions/src/logic/getForm.js":"12","/Users/gregdorward/Development/football-predictions/src/components/Button.js":"13","/Users/gregdorward/Development/football-predictions/src/logic/getScorePredictions.js":"14","/Users/gregdorward/Development/football-predictions/src/components/FixtureList.js":"15","/Users/gregdorward/Development/football-predictions/src/components/CollapsableElement.js":"16","/Users/gregdorward/Development/football-predictions/src/components/TextSection.js":"17","/Users/gregdorward/Development/football-predictions/src/logic/getStats.js":"18","/Users/gregdorward/Development/football-predictions/src/components/Div.js":"19"},{"size":500,"mtime":1611941270161,"results":"20","hashOfConfig":"21"},{"size":3795,"mtime":1612133008271,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1611941270164,"results":"23","hashOfConfig":"21"},{"size":297,"mtime":1611654841360,"results":"24","hashOfConfig":"21"},{"size":0,"mtime":1611654832610,"results":"25","hashOfConfig":"21"},{"size":252,"mtime":1611941270155,"results":"26","hashOfConfig":"21"},{"size":0,"mtime":1611654828618,"results":"27","hashOfConfig":"21"},{"size":922,"mtime":1611941270159,"results":"28","hashOfConfig":"21"},{"size":136,"mtime":1611941270155,"results":"29","hashOfConfig":"21"},{"size":3961,"mtime":1612137920756,"results":"30","hashOfConfig":"21"},{"size":647,"mtime":1612134335446,"results":"31","hashOfConfig":"21"},{"size":3831,"mtime":1611941270162,"results":"32","hashOfConfig":"21"},{"size":224,"mtime":1612130477009,"results":"33","hashOfConfig":"21"},{"size":2894,"mtime":1611941270163,"results":"34","hashOfConfig":"21"},{"size":4186,"mtime":1612135755164,"results":"35","hashOfConfig":"21"},{"size":810,"mtime":1611941270155,"results":"36","hashOfConfig":"21"},{"size":180,"mtime":1611941270155,"results":"37","hashOfConfig":"21"},{"size":2576,"mtime":1612137915853,"results":"38","hashOfConfig":"21"},{"size":145,"mtime":1612136055425,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f0e5p2",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/gregdorward/Development/football-predictions/src/index.js",[],"/Users/gregdorward/Development/football-predictions/src/App.js",[],"/Users/gregdorward/Development/football-predictions/src/reportWebVitals.js",[],"/Users/gregdorward/Development/football-predictions/src/components/spinner.js",[],"/Users/gregdorward/Development/football-predictions/src/components/showCardPotential.js",[],"/Users/gregdorward/Development/football-predictions/src/components/createBadge.js",[],["81","82"],"/Users/gregdorward/Development/football-predictions/src/components/showBttsData.js",[],"/Users/gregdorward/Development/football-predictions/src/components/radio.js",[],"/Users/gregdorward/Development/football-predictions/src/components/Header.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/getFixtures.js",["83"],"/Users/gregdorward/Development/football-predictions/src/components/createStatsDiv.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/getForm.js",["84","85"],"import { proxyurl } from \"../App\";\nvar divider;\nexport const allForm = [];\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nexport async function applyColour(value) {\n  let colour;\n  switch (true) {\n    case value < 0.49:\n      colour = \"#CD5C5C\";\n      break;\n    case value >= 0.5 && value <= 1:\n      colour = \"#F08080\";\n      break;\n    case value >= 1.01 && value <= 1.25:\n      colour = \"#FFA07A\";\n      break;\n    case value >= 1.26 && value <= 1.5:\n      colour = \"#FFFFE0\";\n      break;\n    case value >= 1.51 && value <= 2:\n      colour = \"#CFDBC5\";\n      break;\n    case value >= 2.01 && value <= 2.5:\n      colour = \"#8AA37B\";\n      break;\n    case value >= 2.51 && value <= 3:\n      colour = \"#3F6826\";\n      break;\n    default:\n      colour = \"white\";\n      break;\n  }\n  return colour;\n}\n\nexport async function getForm(teamId, homeOrAway, radio) {\n  let form = {};\n  let radioValue = parseInt(radio);\n\n  let index;\n  if (radioValue === 5) {\n    index = 0;\n    divider = 5;\n  } else if (radioValue === 6) {\n    index = 1;\n    divider = 6;\n  } else if (radioValue === 10) {\n    index = 2;\n    divider = 10;\n  }\n\n  let response = await fetch(\n    proxyurl +\n      `https://api.footystats.org/lastx?key=${process.env.REACT_APP_API_KEY}&team_id=` +\n      teamId\n  );\n  await response.json().then((data) => {\n    let defenceScore;\n\n    form.averageXGConceded = data.data[index].stats.xg_against_avg_overall;\n    form.name = data.data[index].name;\n    if (homeOrAway === \"home\") {\n      form.averageXG = data.data[index].stats.xg_for_avg_home;\n      form.averageGoals = data.data[index].stats.seasonScoredAVG_home;\n      form.bttsPercentage = data.data[index].stats.seasonBTTSPercentage_home;\n      form.possessionAVG = data.data[index].stats.possessionAVG_home;\n      form.shotsAVG = data.data[index].stats.shotsAVG_home;\n\n      form.averageGoalsConceded =\n        data.data[index].stats.seasonConceded_overall / divider;\n\n      defenceScore = parseInt(data.data[index].stats.seasonCSPercentage_home);\n    } else if (homeOrAway === \"away\") {\n      form.averageXG = data.data[index].stats.xg_for_avg_away;\n      form.averageGoals = data.data[index].stats.seasonScoredAVG_away;\n      form.bttsPercentage = data.data[index].stats.seasonBTTSPercentage_away;\n      form.possessionAVG = data.data[index].stats.possessionAVG_away;\n      form.shotsAVG = data.data[index].stats.shotsAVG_away;\n\n      form.averageGoalsConceded =\n        data.data[index].stats.seasonConceded_overall / divider;\n\n      defenceScore = parseInt(data.data[index].stats.seasonCSPercentage_away);\n    }\n\n    if (parseFloat(form.averageXG).toFixed(2) != 0.0) {\n      form.finishingScore = parseFloat(\n        (form.averageGoals / form.averageXG).toFixed(2)\n      );\n    } else {\n      form.finishingScore = 0.0;\n    }\n\n    if (parseFloat(form.averageGoalsConceded).toFixed(2) != 0.0) {\n      form.goalieRating = parseFloat(\n        (form.averageXGConceded / form.averageGoalsConceded).toFixed(2)\n      );\n    } else {\n      form.goalieRating = 2;\n    }\n\n    form.forecastedXG = form.averageXG * form.finishingScore;\n\n    switch (true) {\n      case defenceScore < 20:\n        form.defenceRating = 0;\n        break;\n      case defenceScore >= 20 && defenceScore < 40:\n        form.defenceRating = 0.2;\n        break;\n      case defenceScore >= 40 && defenceScore < 60:\n        form.defenceRating = 0.4;\n        break;\n      case defenceScore >= 60 && defenceScore < 80:\n        form.defenceRating = 0.8;\n        break;\n      case defenceScore >= 80:\n        form.defenceRating = 1;\n        break;\n      default:\n        break;\n    }\n  });\n  form.finalFinishingScore = parseFloat(await diff(form.finishingScore, 1));\n\n  form.finalGoalieRating = parseFloat(await diff(form.goalieRating, 1));\n\n  allForm.push(form);\n  return form;\n}\n","/Users/gregdorward/Development/football-predictions/src/components/Button.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/getScorePredictions.js",["86","87"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { diff } from \"./getForm\";\nimport { matches } from \"./getFixtures\";\nimport { FixtureList } from \"../components/FixtureList\";\n\n//Calculates scores based on prior XG figures, weighted by odds\nexport async function calculateScore(match) {\n  let homeRaw;\n  let awayRaw;\n  if (match.homeOdds == 0 && match.awayOdds == 0) {\n    homeRaw = 0.0;\n    awayRaw = 0.0;\n  } else {\n    homeRaw = (1 / match.homeOdds).toFixed(2);\n    awayRaw = (1 / match.awayOdds).toFixed(2);\n  }\n\n  let formHome = match.homeTeamForm;\n  let formAway = match.awayTeamForm;\n\n  let accuracyHome = formHome.finalFinishingScore;\n  let defenceHome = parseFloat(formHome.defenceRating);\n  let goalieHome = formHome.finalGoalieRating;\n  let forecastedXGHome = formHome.forecastedXG;\n  let defenceScoreHome = (defenceHome + goalieHome) / 2;\n\n  let accuracyAway = formAway.finalFinishingScore;\n  let defenceAway = parseFloat(formAway.defenceRating);\n  let goalieAway = formAway.finalGoalieRating;\n  let forecastedXGAway = formAway.forecastedXG;\n\n  let defenceScoreAway = (defenceAway + goalieAway) / 2;\n\n  let expectedHomeGoals = parseFloat(match.homeXG);\n  let expectedAwayGoals = parseFloat(match.awayXG);\n\n  let calculatedXGHome = (forecastedXGHome + expectedHomeGoals) / 2;\n  let calculatedXGAway = (forecastedXGAway + expectedAwayGoals) / 2;\n\n  let oddsWeightingHome = parseFloat(homeRaw);\n  let oddsWeightingAway = parseFloat(awayRaw);\n\n  let homeWeighting = (\n    (await diff(oddsWeightingHome, oddsWeightingAway)) * 1\n  ).toFixed(2);\n  let awayWeighting = (\n    (await diff(oddsWeightingAway, oddsWeightingHome)) * 1\n  ).toFixed(2);\n\n  let homeCalculation =\n    parseFloat(homeWeighting + accuracyHome) - defenceScoreAway;\n  let awayCalculation =\n    parseFloat(awayWeighting + accuracyAway) - defenceScoreHome;\n\n  //if home calculation is less than 0 -> add this value to the away team goals and vice versa.\n  //also set a baseline calculation score so it cannot go below 0\n\n  if (homeCalculation < -1) {\n    awayCalculation -= homeCalculation / 2;\n    homeCalculation = -1;\n  }\n\n  if (awayCalculation < -1) {\n    homeCalculation -= awayCalculation / 2;\n    awayCalculation = -1;\n  }\n\n  let homeGoals = Math.round(parseFloat(calculatedXGHome) + homeCalculation);\n  let awayGoals = Math.round(parseFloat(calculatedXGAway) + awayCalculation);\n\n  return [homeGoals, awayGoals];\n}\n\nexport async function getScorePrediction() {\n  await Promise.all(\n    matches.map(async (match) => {\n      let [goalsA, goalsB] = await calculateScore(match);\n      match.goalsA = goalsA;\n      match.goalsB = goalsB;\n      if (match.status === \"suspended\") {\n        goalsA = \"P\";\n        goalsB = \"P\";\n      }\n\n      ReactDOM.render(\n        <FixtureList match={match} matches={matches} result={true} />,\n        document.getElementById(\"FixtureContainer\")\n      );\n    })\n  );\n}\n","/Users/gregdorward/Development/football-predictions/src/components/FixtureList.js",[],"/Users/gregdorward/Development/football-predictions/src/components/CollapsableElement.js",[],"/Users/gregdorward/Development/football-predictions/src/components/TextSection.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/getStats.js",[],"/Users/gregdorward/Development/football-predictions/src/components/Div.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":3,"column":8,"nodeType":"94","messageId":"95","endLine":3,"endColumn":22},{"ruleId":"96","severity":1,"message":"97","line":90,"column":47,"nodeType":"98","messageId":"99","endLine":90,"endColumn":49},{"ruleId":"96","severity":1,"message":"97","line":98,"column":58,"nodeType":"98","messageId":"99","endLine":98,"endColumn":60},{"ruleId":"96","severity":1,"message":"100","line":11,"column":22,"nodeType":"98","messageId":"99","endLine":11,"endColumn":24},{"ruleId":"96","severity":1,"message":"100","line":11,"column":45,"nodeType":"98","messageId":"99","endLine":11,"endColumn":47},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'createStatsDiv' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]