[{"/Users/gregdorward/Development/football-predictions/src/index.js":"1","/Users/gregdorward/Development/football-predictions/src/App.js":"2","/Users/gregdorward/Development/football-predictions/src/reportWebVitals.js":"3","/Users/gregdorward/Development/football-predictions/src/components/spinner.js":"4","/Users/gregdorward/Development/football-predictions/src/components/showCardPotential.js":"5","/Users/gregdorward/Development/football-predictions/src/components/createBadge.js":"6","/Users/gregdorward/Development/football-predictions/src/components/showBttsData.js":"7","/Users/gregdorward/Development/football-predictions/src/components/radio.js":"8","/Users/gregdorward/Development/football-predictions/src/components/Header.js":"9","/Users/gregdorward/Development/football-predictions/src/logic/getFixtures.js":"10","/Users/gregdorward/Development/football-predictions/src/components/createStatsDiv.js":"11","/Users/gregdorward/Development/football-predictions/src/logic/getForm.js":"12","/Users/gregdorward/Development/football-predictions/src/components/Button.js":"13","/Users/gregdorward/Development/football-predictions/src/logic/getScorePredictions.js":"14","/Users/gregdorward/Development/football-predictions/src/components/CollapsableElement.js":"15","/Users/gregdorward/Development/football-predictions/src/components/TextSection.js":"16","/Users/gregdorward/Development/football-predictions/src/logic/getStats.js":"17","/Users/gregdorward/Development/football-predictions/src/components/Div.js":"18","/Users/gregdorward/Development/football-predictions/src/components/CollapsableDiv.js":"19","/Users/gregdorward/Development/football-predictions/src/components/Increment.js":"20","/Users/gregdorward/Development/football-predictions/src/logic/getBTTSPotential.js":"21","/Users/gregdorward/Development/football-predictions/src/components/OddsRadio.js":"22","/Users/gregdorward/Development/football-predictions/src/logic/getTeamStats.js":"23","/Users/gregdorward/Development/football-predictions/src/components/HeadToHead.js":"24","/Users/gregdorward/Development/football-predictions/src/components/BulletList.js":"25","/Users/gregdorward/Development/football-predictions/src/components/Table.js":"26","/Users/gregdorward/Development/football-predictions/src/components/LeagueTable.js":"27","/Users/gregdorward/Development/football-predictions/src/components/Fixture.js":"28","/Users/gregdorward/Development/football-predictions/src/components/KofiButton.js":"29","/Users/gregdorward/Development/football-predictions/src/components/Chart.js":"30","/Users/gregdorward/Development/football-predictions/src/logic/compareFormTrend.js":"31","/Users/gregdorward/Development/football-predictions/src/components/Toggle.js":"32"},{"size":500,"mtime":1666184722125,"results":"33","hashOfConfig":"34"},{"size":17702,"mtime":1666797982023,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":1642008106594,"results":"36","hashOfConfig":"34"},{"size":297,"mtime":1611654841360,"results":"37","hashOfConfig":"38"},{"size":0,"mtime":1611654832610,"results":"39","hashOfConfig":"38"},{"size":373,"mtime":1657548030451,"results":"40","hashOfConfig":"34"},{"size":0,"mtime":1611654828618,"results":"41","hashOfConfig":"38"},{"size":963,"mtime":1642008106588,"results":"42","hashOfConfig":"34"},{"size":144,"mtime":1642008106581,"results":"43","hashOfConfig":"34"},{"size":49339,"mtime":1666627836252,"results":"44","hashOfConfig":"34"},{"size":12499,"mtime":1664291076693,"results":"45","hashOfConfig":"34"},{"size":504,"mtime":1664207323244,"results":"46","hashOfConfig":"34"},{"size":293,"mtime":1664526263212,"results":"47","hashOfConfig":"34"},{"size":67124,"mtime":1666799402730,"results":"48","hashOfConfig":"34"},{"size":744,"mtime":1666608861684,"results":"49","hashOfConfig":"34"},{"size":180,"mtime":1642008106585,"results":"50","hashOfConfig":"51"},{"size":37782,"mtime":1666799005425,"results":"52","hashOfConfig":"34"},{"size":203,"mtime":1642008106578,"results":"53","hashOfConfig":"34"},{"size":595,"mtime":1614865093901,"results":"54","hashOfConfig":"38"},{"size":1347,"mtime":1660318811896,"results":"55","hashOfConfig":"34"},{"size":1534,"mtime":1663945239232,"results":"56","hashOfConfig":"34"},{"size":960,"mtime":1659349970801,"results":"57","hashOfConfig":"34"},{"size":8078,"mtime":1660141079723,"results":"58","hashOfConfig":"34"},{"size":2202,"mtime":1647339036886,"results":"59","hashOfConfig":"34"},{"size":440,"mtime":1642008106576,"results":"60","hashOfConfig":"51"},{"size":4660,"mtime":1666353486032,"results":"61","hashOfConfig":"34"},{"size":16295,"mtime":1666693652151,"results":"62","hashOfConfig":"34"},{"size":7618,"mtime":1666604566973,"results":"63","hashOfConfig":"34"},{"size":187,"mtime":1666189515444,"results":"64","hashOfConfig":"34"},{"size":4386,"mtime":1665523978854,"results":"65","hashOfConfig":"34"},{"size":18879,"mtime":1666184722129,"results":"66","hashOfConfig":"34"},{"size":386,"mtime":1664378350858,"results":"67","hashOfConfig":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"awodw0",{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f0e5p2",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"71"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},"1eaajj",{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"71"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"71"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"71"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"71"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},"z32ji8","/Users/gregdorward/Development/football-predictions/src/index.js",[],["142","143"],"/Users/gregdorward/Development/football-predictions/src/App.js",["144"],"/Users/gregdorward/Development/football-predictions/src/reportWebVitals.js",[],"/Users/gregdorward/Development/football-predictions/src/components/spinner.js",[],"/Users/gregdorward/Development/football-predictions/src/components/showCardPotential.js",[],"/Users/gregdorward/Development/football-predictions/src/components/createBadge.js",[],"/Users/gregdorward/Development/football-predictions/src/components/showBttsData.js",[],"/Users/gregdorward/Development/football-predictions/src/components/radio.js",[],"/Users/gregdorward/Development/football-predictions/src/components/Header.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/getFixtures.js",[],"/Users/gregdorward/Development/football-predictions/src/components/createStatsDiv.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/getForm.js",[],"/Users/gregdorward/Development/football-predictions/src/components/Button.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/getScorePredictions.js",["145","146","147"],"/Users/gregdorward/Development/football-predictions/src/components/CollapsableElement.js",["148"],"import React, { Component } from \"react\";\nimport Collapsible from \"react-collapsible\";\n\nconst Collapsable = (props) => {\n  return (\n    <Collapsible transitionTime={300} trigger={<button className={props.classNameButton}>{props.buttonText}</button>} className={props.className? props.className: \"Collapsable\"}>\n      <div className={props.classNameFlex? props.classNameFlex: \"\"}>\n      <span className={props.classNameTwo? props.classNameTwo: props.buttonText} style={props.style} key={`123${props.buttonText}`}>{props.element}</span>\n      <span className={props.classNameThree? props.classNameTwo: props.buttonText} key={`456${props.buttonText}`}>{props.elementTwo}</span>\n      </div>\n    </Collapsible>\n  );\n};\n\n\nexport default Collapsable;","/Users/gregdorward/Development/football-predictions/src/components/TextSection.js",[],["149","150"],"/Users/gregdorward/Development/football-predictions/src/logic/getStats.js",["151","152","153","154","155","156","157","158","159","160","161"],"/Users/gregdorward/Development/football-predictions/src/components/Div.js",[],"/Users/gregdorward/Development/football-predictions/src/components/CollapsableDiv.js",[],"/Users/gregdorward/Development/football-predictions/src/components/Increment.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/getBTTSPotential.js",[],"/Users/gregdorward/Development/football-predictions/src/components/OddsRadio.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/getTeamStats.js",[],"/Users/gregdorward/Development/football-predictions/src/components/HeadToHead.js",[],"/Users/gregdorward/Development/football-predictions/src/components/BulletList.js",[],["162","163"],"/Users/gregdorward/Development/football-predictions/src/components/Table.js",["164"],"import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    // backgroundColor: \"#dedddd\",\n    padding: 10,\n    textAlign: \"center\",\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    border: \"none\",\n    margin: \"none\",\n    color: 'white',\n    lineHeight: '2em'\n  },\n  body: {\n    fontSize: \"2em\",\n    fontFamily: 'inherit',\n    padding: 10,\n    color: \"white\",\n    border: \"none\",\n    margin: \"none\",\n    // backgroundColor: '#e2e2e26c'\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#030061\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#030052\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\n\nexport default function CustomizedTables(props) {\n\n\n  return (\n    <TableContainer className=\"StatsTable\">\n      <Table aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Stat</StyledTableCell>\n            <StyledTableCell>H2H history</StyledTableCell>\n            <StyledTableCell>XGTipping forecast</StyledTableCell>\n            <StyledTableCell>Odds (yes)</StyledTableCell>\n            <StyledTableCell>Odds (no)</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        <StyledTableRow key=\"O05\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 0.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o05Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o05Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u05Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O15\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" padding=\"5\">\n              Over 1.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o15Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o15Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u15Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O25\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 2.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o25Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o25Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u25Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"O35\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              Over 3.5 Goals %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.o35Stat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{\"-\"}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.o35Odds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.u35Odds}</StyledTableCell>\n          </StyledTableRow>\n          <StyledTableRow key=\"BTTS\" className=\"BTTSStats\">\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              BTTS %\n            </StyledTableCell>\n            <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\n              {`${props.BTTSStat}%`}\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSForecast}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSOdds}</StyledTableCell>\n            <StyledTableCell align=\"center\">{props.BTTSOddsNo}</StyledTableCell>\n          </StyledTableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","/Users/gregdorward/Development/football-predictions/src/components/LeagueTable.js",["165"],"import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { CreateBadge } from \"./createBadge\";\n\nconst StyledTableCell2 = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#030061\",\n    color: \"white\",\n    padding: \"0.35em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    textAlign: \"left\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    fontSize: \"1.9em\",\n    textAlign: \"left\",\n    fontFamily: \"inherit\",\n    padding: \"0.35em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"white\",\n  },\n}))(TableCell);\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#030061\",\n    color: \"white\",\n    padding: \"0.35em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    textAlign: \"center\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    // backgroundColor: \"#030061\",\n    fontSize: \"1.9em\",\n    textAlign: \"center\",\n    fontFamily: \"inherit\",\n    padding: \"0.35em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"white\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#030061\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#030052\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\nfunction styleForm(formIndicator) {\n  let className;\n  if (formIndicator === \"W\") {\n    className = \"winLeague\";\n  } else if (formIndicator === \"D\") {\n    className = \"drawLeague\";\n  } else if (formIndicator === \"L\") {\n    className = \"lossLeague\";\n  }\n  return className;\n}\n\nexport default function LeagueTable(props) {\n  console.log(props);\n  let rows = props.Teams.map((team, i) => (\n    <StyledTableRow key={`${props.Key}row${i}`}>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Position}`}\n      </StyledTableCell>\n      <StyledTableCell2 component=\"th\" scope=\"row\">\n        {`${team.Name}`}\n      </StyledTableCell2>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Played}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Wins}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Draws}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Losses}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.For}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Against}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.GoalDifference}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Points}`}\n      </StyledTableCell>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ textAlign: \"center\" }}\n      >\n        <span className={styleForm(team.Form[0])}>\n          {team.Form[0] !== undefined ? team.Form[0] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[1])}>\n          {team.Form[1] !== undefined ? team.Form[1] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[2])}>\n          {team.Form[2] !== undefined ? team.Form[2] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[3])}>\n          {team.Form[3] !== undefined ? team.Form[3] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[4])}>\n          {team.Form[4] !== undefined ? team.Form[4] : \"\"}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  ));\n\n  const leagueResults = [];\n  let singleResult;\n  props.Results.forEach((result) => {\n    singleResult = (\n      <div>\n        <div className=\"ResultRow\">\n          <span className=\"column\">{result.team_a_xg}</span>\n          <span className=\"column\">XG</span>\n          <span className=\"column\">{result.team_b_xg}</span>\n        </div>\n        <div className=\"ResultRow\">\n          <span className=\"column\">{result.team_a_shots}</span>\n          <span className=\"column\">Shots</span>\n          <span className=\"column\">{result.team_b_shots}</span>\n        </div>\n        <div className=\"ResultRow\">\n          <span className=\"column\">{result.team_a_shotsOnTarget}</span>\n          <span className=\"column\">SOT</span>\n          <span className=\"column\">{result.team_b_shotsOnTarget}</span>\n        </div>\n        <div className=\"ResultRow\">\n          <span className=\"column\">{result.team_a_dangerous_attacks}</span>\n          <span className=\"column\">Dangerous Attacks</span>\n          <span className=\"column\">{result.team_b_dangerous_attacks}</span>\n        </div>\n        <div className=\"ResultRow\">\n          <span className=\"column\">{result.team_a_possession}%</span>\n          <span className=\"column\">Possession</span>\n          <span className=\"column\">{result.team_b_possession}%</span>\n        </div>\n        <div className=\"ResultRow\">\n          <span className=\"column\">{result.team_a_red_cards}</span>\n          <span className=\"column\">Red cards</span>\n          <span className=\"column\">{result.team_b_red_cards}</span>\n        </div>\n        <div className=\"ResultRow\">\n          <span className=\"column\">{result.odds_ft_1}</span>\n          <span className=\"column\">Odds (pre-match)</span>\n          <span className=\"column\">{result.odds_ft_2}</span>\n        </div>\n      </div>\n    );\n\n    leagueResults.push(\n      <Collapsable\n        classNameButton=\"ResultButton\"\n        buttonText={\n          <div className=\"ResultRowOverview\">\n            <div className=\"columnOverviewHome\">{result.home_name}</div>\n            <span className=\"columnOverviewScore\">\n              {result.homeGoalCount} : {result.awayGoalCount}\n            </span>\n            <div className=\"columnOverviewAway\">{result.away_name}</div>\n          </div>\n        }\n        element={singleResult}\n      />\n    );\n  });\n\n  const leagueResultsOlder = [];\n  props.LastWeeksResults.forEach((result) => {\n    singleResult = (\n      <div>\n        <div className=\"ResultRow\">\n          <span className=\"column\">{result.team_a_xg}</span>\n          <span className=\"column\">XG</span>\n          <span className=\"column\">{result.team_b_xg}</span>\n        </div>\n        <div className=\"ResultRow\">\n          <span className=\"column\">{result.team_a_shots}</span>\n          <span className=\"column\">Shots</span>\n          <span className=\"column\">{result.team_b_shots}</span>\n        </div>\n        <div className=\"ResultRow\">\n          <span className=\"column\">{result.team_a_shotsOnTarget}</span>\n          <span className=\"column\">SOT</span>\n          <span className=\"column\">{result.team_b_shotsOnTarget}</span>\n        </div>\n        <div className=\"ResultRow\">\n          <span className=\"column\">{result.team_a_dangerous_attacks}</span>\n          <span className=\"column\">Dangerous Attacks</span>\n          <span className=\"column\">{result.team_b_dangerous_attacks}</span>\n        </div>\n        <div className=\"ResultRow\">\n          <span className=\"column\">{result.team_a_possession}</span>\n          <span className=\"column\">Possession</span>\n          <span className=\"column\">{result.team_b_possession}</span>\n        </div>\n        <div className=\"ResultRow\">\n          <span className=\"column\">{result.team_a_red_cards}</span>\n          <span className=\"column\">Red cards</span>\n          <span className=\"column\">{result.team_b_red_cards}</span>\n        </div>\n        <div className=\"ResultRow\">\n          <span className=\"column\">{result.odds_ft_1}</span>\n          <span className=\"column\">Odds (pre-match)</span>\n          <span className=\"column\">{result.odds_ft_2}</span>\n        </div>\n      </div>\n    );\n\n    leagueResultsOlder.push(\n      <Collapsable\n        classNameButton=\"ResultButton\"\n        buttonText={\n          <div className=\"ResultRowOverview\">\n            <div className=\"columnOverviewHome\">{result.home_name}</div>\n            <span className=\"columnOverviewScore\">\n              {result.homeGoalCount} : {result.awayGoalCount}\n            </span>\n            <div className=\"columnOverviewAway\">{result.away_name}</div>\n          </div>\n        }\n        element={singleResult}\n      />\n    );\n  });\n\n  function getTopScorersTeam(id) {\n    let found = props.Teams.find((team) => team.ID === id);\n    return found.Name;\n  }\n\n  console.log(props);\n\n  if (\n    props.GamesPlayed > 3 &&\n    props.Teams[0].LeagueID !== 4340 &&\n    props.Teams[0].LeagueID !== 6969\n  ) {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table\n            className=\"Table\"\n            aria-label=\"customized table\"\n            key={props.Key}\n            style={{ marginTop: \"2em\", marginBottom: \"1em\" }}\n          >\n            <TableHead>\n              <TableRow>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <StyledTableCell>Pts</StyledTableCell>\n                <StyledTableCell style={{ textAlign: \"center\" }}>\n                  Last 5\n                </StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n          <h5>{`Gameweek ${props.mostRecentGameweek} results`}</h5>\n          <div className=\"ResultsList\" id=\"ResultsList\">\n            <ul>{leagueResults}</ul>\n          </div>\n          <h5>{`Gameweek ${props.mostRecentGameweek - 1} results`}</h5>\n          <div className=\"ResultsList\" id=\"ResultsList\">\n            <ul>{leagueResultsOlder}</ul>\n          </div>\n          <div className=\"LeagueStatisticsHeader\">League Statistics</div>\n          <div className=\"LeagueStatistics\">\n            <ul className=\"LeagueStatsColumn\">\n              <li>Average home goals: {props.Stats.seasonAVG_home}</li>\n              <li>Average away goals: {props.Stats.seasonAVG_away}</li>\n              <li>BTTS: {props.Stats.seasonBTTSPercentage}%</li>\n              <li>\n                Over 0.5 goals: {props.Stats.seasonOver05Percentage_overall}%\n              </li>\n              <li>\n                Over 1.5 goals: {props.Stats.seasonOver15Percentage_overall}%\n              </li>\n              <li>\n                Over 2.5 goals: {props.Stats.seasonOver25Percentage_overall}%\n              </li>\n              <li>\n                Over 3.5 goals: {props.Stats.seasonOver35Percentage_overall}%\n              </li>\n              <li>\n                Over 4.5 goals: {props.Stats.seasonOver45Percentage_overall}%\n              </li>\n            </ul>\n            <ul className=\"LeagueStatsColumn\">\n              <li>\n                Over 7.5 corners: {props.Stats.over75CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 8.5 corners: {props.Stats.over85CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 9.5 corners: {props.Stats.over95CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 10.5 corners:{\" \"}\n                {props.Stats.over105CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 11.5 corners:{\" \"}\n                {props.Stats.over115CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 12.5 corners:{\" \"}\n                {props.Stats.over125CornersPercentage_overall}%\n              </li>\n              <li>Corners average: {props.Stats.cornersAVG_overall}</li>\n              <li>Cards average: {props.Stats.cardsAVG_overall}</li>\n            </ul>\n            <ul className=\"TopScorersColumn\">\n              <h4>Top scorers</h4>\n              <li>\n                {props.Stats.top_scorers[0].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[0].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[0].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[1].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[1].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[1].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[2].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[2].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[2].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[3].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[3].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[3].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[4].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[4].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[4].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[5].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[5].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[5].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[6].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[6].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[6].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[7].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[7].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[7].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[8].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[8].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[8].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[9].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[9].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[9].goals_overall}\n              </li>\n            </ul>\n          </div>\n        </TableContainer>\n      );\n    }\n  } else if (props.Teams[0].LeagueID === 4340) {\n    return null;\n  } else {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table aria-label=\"customized table\" key={props.Key}>\n            <TableHead>\n              <TableRow>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <StyledTableCell>Pts</StyledTableCell>\n                <StyledTableCell style={{ textAlign: \"center\" }}>\n                  Form\n                </StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n        </TableContainer>\n      );\n    }\n  }\n}\n","/Users/gregdorward/Development/football-predictions/src/components/Fixture.js",["166","167"],"import React, { Fragment, useState } from \"react\";\nimport { CreateBadge } from \"./createBadge\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport { createStatsDiv } from \"../logic/getStats\";\nimport { renderTable } from \"../logic/getFixtures\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\"\n\nlet resultValue;\nvar count;\nvar setCount;\n\nfunction toggle(bool) {\n  count = !bool;\n  console.log(count);\n  return count;\n}\n\n// function stylying(bool){\n//   if (bool === true) {\n//     // set stats element to display flex\n//     return { display: \"block\" };\n//   } else {\n//     // set stats element to display none\n//     return { display: \"none\" };\n//   }\n// }\n\nfunction GetDivider(fixture) {\n  const matchStatus = fixture.status;\n  const isPrediction = resultValue;\n\n  if (isPrediction === false && matchStatus !== \"complete\") {\n    return (\n      <div className=\"divider\" data-cy={\"divider-\" + fixture.fixture.id}>\n        {\"V\"}\n      </div>\n    );\n  } else if (isPrediction === false && matchStatus === \"complete\") {\n    return (\n      <div\n        className=\"Result\"\n        data-cy={\"result-\" + fixture.fixture.id}\n      >{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n    );\n  } else if (isPrediction === true && matchStatus === \"complete\") {\n    let outcome;\n    let prediction;\n\n    switch (true) {\n      case fixture.fixture.homeGoals > fixture.fixture.awayGoals:\n        outcome = 0;\n        fixture.fixture.winner = fixture.fixture.homeTeam;\n        fixture.fixture.outcome = \"homeWin\";\n        break;\n      case fixture.fixture.homeGoals === fixture.fixture.awayGoals:\n        outcome = 1;\n        fixture.fixture.winner = \"draw\";\n        fixture.fixture.outcome = \"draw\";\n\n        break;\n      case fixture.fixture.homeGoals < fixture.fixture.awayGoals:\n        outcome = 2;\n        fixture.fixture.winner = fixture.fixture.awayTeam;\n        fixture.fixture.outcome = \"awayWin\";\n\n        break;\n      default:\n        break;\n    }\n\n    switch (true) {\n      case fixture.fixture.goalsA > fixture.fixture.goalsB:\n        prediction = 0;\n        break;\n      case fixture.fixture.goalsA === fixture.fixture.goalsB:\n        prediction = 1;\n        break;\n      case fixture.fixture.goalsA < fixture.fixture.goalsB:\n        prediction = 2;\n        break;\n      default:\n        break;\n    }\n\n    if (fixture.fixture.homeGoals > 0 && fixture.fixture.awayGoals > 0) {\n      fixture.fixture.bttsOutcome = \"bttsWon\";\n    } else {\n      fixture.fixture.bttsOutcome = \"bttsLost\";\n    }\n\n    if (outcome === prediction) {\n      // console.log(fixture.fixture.game);\n      if (fixture.fixture.homeOdds !== 0) {\n        switch (true) {\n          case outcome === 0:\n            fixture.fixture.profit = fixture.fixture.homeOdds;\n            break;\n          case outcome === 1:\n            fixture.fixture.profit = fixture.fixture.drawOdds;\n            break;\n          case outcome === 2:\n            fixture.fixture.profit = fixture.fixture.awayOdds;\n            break;\n          default:\n            break;\n        }\n      } else fixture.fixture.profit = 1;\n\n      if (\n        fixture.fixture.goalsA === fixture.fixture.homeGoals &&\n        fixture.fixture.goalsB === fixture.fixture.awayGoals\n      ) {\n        fixture.fixture.exactScore = true;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"ExactScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      } else {\n        fixture.fixture.exactScore = false;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"CorrectScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      }\n      // console.log(`profit ${fixture.fixture.profit}`);\n    } else if (outcome !== prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        fixture.fixture.profit = 0;\n      } else {\n        fixture.fixture.profit = 1;\n      }\n      // console.log(fixture.fixture.game);\n      // console.log(`profit ${fixture.fixture.profit}`);\n      fixture.fixture.exactScore = false;\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"IncorrectScore\"\n            key={fixture.fixture.awayTeam}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    }\n  } else {\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  }\n}\n\n// function getStyle(overUnderAchievingGap) {\n//   console.log(overUnderAchievingGap)\n// if(overUnderAchievingGap === true){\n//   return \"individualFixtureGap\"\n// } else {\n//   return \"individualFixture\";\n// }\n// }\n\nfunction renderLeagueName(fixture) {\n  let name = fixture.leagueName;\n  if (name === null) {\n    return <div></div>;\n  } else {\n    return (\n      <div>\n        <div\n          className=\"leagueName\"\n          key={`leagueName${fixture.leagueIndex}div`}\n          onClick={() => renderTable(fixture.leagueIndex, allLeagueResultsArrayOfObjects[fixture.leagueIndex])}\n        >\n          {fixture.leagueName} &#9776;\n        </div>\n        <div\n          className=\"LeagueTable\"\n          key={`leagueName${fixture.leagueIndex}`}\n          id={`leagueName${fixture.leagueIndex}`}\n        ></div>\n      </div>\n    );\n  }\n}\n\nconst SingleFixture = ({ fixture, count }) => (\n  <div key={fixture.game}>\n    {renderLeagueName(fixture)}\n    <li\n      className={\"individualFixture\"}\n      key={fixture.id}\n      onMouseDown={() => (count = toggle(count))}\n      onClick={() => createStatsDiv(fixture, count)}\n      data-cy={fixture.id}\n    >\n      <div className=\"HomeOdds\">{fixture.fractionHome}</div>\n      <div className=\"homeTeam\">{fixture.homeTeam}</div>\n      <GetDivider\n        result={resultValue}\n        status={fixture.status}\n        fixture={fixture}\n      />\n      {/* <div className=\"divider\">{\"V\"}</div> */}\n      <div className=\"awayTeam\">{fixture.awayTeam}</div>\n      <CreateBadge\n        image={fixture.homeBadge}\n        ClassName=\"HomeBadge\"\n        alt=\"Home team badge\"\n        flexShrink={5}\n      />\n      <CreateBadge\n        image={fixture.awayBadge}\n        ClassName=\"AwayBadge\"\n        alt=\"Away team badge\"\n      />\n      <div className=\"AwayOdds\">{fixture.fractionAway}</div>\n    </li>\n    <div id={\"stats\" + fixture.homeTeam}/>\n      <div className=\"MatchHistory\" id={\"history\" + fixture.homeTeam}/>\n  </div>\n);\n\nconst List = ({ fixtures }) => (\n  <div>\n    <div id=\"Headers\"></div>\n    <ul className=\"FixtureList\" id=\"FixtureList\">\n      {fixtures.map((fixture, i) => (\n        <SingleFixture fixture={fixture} key={fixture.game} count={count} />\n      ))}\n    </ul>\n  </div>\n);\n\nexport function Fixture(props) {\n  [count, setCount] = useState(false);\n  resultValue = props.result;\n  return <List fixtures={props.fixtures} result={resultValue} count={count} />;\n}\n","/Users/gregdorward/Development/football-predictions/src/components/KofiButton.js",[],"/Users/gregdorward/Development/football-predictions/src/components/Chart.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/compareFormTrend.js",["168"],"import { parse } from \"dotenv\";\n\nasync function getOverOrUnderText(xgSum) {\n  let overUnderAchievingSum = xgSum;\n  let text;\n  switch (true) {\n    case overUnderAchievingSum > 1.5:\n      text =\n        \"Underachieving drastically against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > 1.25 && overUnderAchievingSum <= 1.5:\n      text =\n        \"Underachieving to a large degree against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > 1 && overUnderAchievingSum <= 1.25:\n      text = \"Underachieving against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > 0.75 && overUnderAchievingSum <= 1:\n      text =\n        \"Underachieving to a small degree against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > 0.4 && overUnderAchievingSum <= 0.75:\n      text =\n        \"Underachieving slighly against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum > -0.4 && overUnderAchievingSum <= 0.4:\n      text =\n        \"Roughly tracking on par with their expected goal difference.\";\n      break;\n\n    case overUnderAchievingSum < -0.4 && overUnderAchievingSum >= -0.75:\n      text =\n        \"Overachieving slighly against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum < -0.75 && overUnderAchievingSum >= -1:\n      text =\n        \"Overachieving to a small degree against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum < -1 && overUnderAchievingSum >= -1.25:\n      text = \"Overachieving against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum < -1.25 && overUnderAchievingSum >= -1.5:\n      text =\n        \"Overachieving to a large degree against their expected goal difference.\";\n      break;\n    case overUnderAchievingSum < -1.5:\n      text =\n        \"Overachieving drastically against their expected goal difference.\";\n      break;\n    default:\n      text = \"\";\n      break;\n  }\n  return text;\n}\n\nexport async function diff(a, b) {\n  return parseFloat(a - b).toFixed(2);\n}\n\nasync function getXGDifferential(xgFor, xgAgainst, goalsFor, goalsAgainst) {\n  let xgDiff = xgFor - xgAgainst;\n  let goalDiff = goalsFor - goalsAgainst;\n  let compareXgAndGoalDiff = await diff(xgDiff, goalDiff);\n\n  return compareXgAndGoalDiff;\n}\n\nasync function getAttackingSummary(goalsRecent, goalsLongTerm) {\n\nconsole.log(goalsRecent)\nconsole.log(goalsLongTerm)\n\n\n  let text;\n  if (goalsRecent >= 3) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Free scoring and improving in front of goal recently.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Free scoring and consistent in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Free scoring but less so recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 3 && goalsRecent >= 2) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text =\n          \"Impressive scoring stats and improving in front of goal recently.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Impressive scoring stats and consistent in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Impressive scoring stats but less so recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 2 && goalsRecent >= 1) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Decent scoring stats and improving in front of goal recently.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Decent scoring stats and consistent in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Decent scoring stats but less so recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent < 1 && goalsRecent > 0) {\n    switch (true) {\n      case goalsRecent > goalsLongTerm:\n        text = \"Poor scoring stats but improving in front of goal recently.\";\n        break;\n      case goalsRecent === goalsLongTerm:\n        text = \"Poor scoring stats and consistently poor in front of goal.\";\n        break;\n      case goalsRecent < goalsLongTerm:\n        text = \"Poor scoring stats showing no signs of improvement.\";\n        break;\n      default:\n        break;\n    }\n  } else if (goalsRecent === 0) {\n    switch (true) {\n      case goalsRecent === 0:\n        text = \"Woeful goal stats in recent games.\";\n        break;\n      default:\n        text = \"\";\n        break;\n    }\n  }\n  return text;\n}\n\nasync function getDefenceSummary(cleansheetStat) {\n  let text;\n  switch (true) {\n    case cleansheetStat > 80:\n      text = `Incredibly strong defensively, with ${cleansheetStat}% of their games ending in a cleansheet`;\n      break;\n    case cleansheetStat > 60 && cleansheetStat <= 80:\n      text = `Very strong defensively, with ${cleansheetStat}% of their games ending in a cleansheet`;\n      break;\n    case cleansheetStat > 40 && cleansheetStat <= 60:\n      text = `Defensively impressive, with ${cleansheetStat}% of their games ending in a cleansheet`;\n      break;\n    case cleansheetStat > 20 && cleansheetStat <= 40:\n      text = `Defensively, ${cleansheetStat}% of their games have ended in a cleansheet`;\n      break;\n    case cleansheetStat > 1 && cleansheetStat <= 20:\n      text = `Defensively frail, with only ${cleansheetStat}% of their games ending in a cleansheet`;\n      break;\n      case cleansheetStat === 0:\n        text = `Defensively weak, with ${cleansheetStat}% of their games ending in a cleansheet`;\n        break;\n    default:\n      break;\n  }\n  return text;\n}\n\nasync function GenerateFormSummary(form, lastx, recentForm) {\n  console.log(form);\n  console.log(lastx);\n  let text;\n  let six = lastx[2];\n  let five = lastx[1];\n  let three = lastx[0];\n  console.log(three)\n  console.log(five)\n  console.log(six)\n\n  let xgSum = await getXGDifferential(\n    form.XGOverall,\n    form.XGAgainstAvgOverall,\n    form.ScoredOverall / 10,\n    form.ConcededOverall / 10\n  );\n  let xgText = await getOverOrUnderText(xgSum);\n  let attackString = await getAttackingSummary(\n    form.ScoredOverall / 10,\n    recentForm.ScoredOverall / 5\n  );\n  let defenceString = await getDefenceSummary(form.CleanSheetPercentage);\n  console.log(three);\n  console.log(five);\n  console.log(six)\n  let pointsAverageTotal =\n    (parseFloat(three) + parseFloat(five) + parseFloat(six)) / 3;\n\n  if (pointsAverageTotal > 2.2 && three >= 2.5) {\n    console.log(1);\n    switch (true) {\n      case three > five && five >= six:\n        text =\n          \"Outstanding recent form with solid improvement over last 6 games.\";\n        break;\n      case three > five && five < six:\n        text =\n          \"Outstanding recent form which has improved with some inconsistency over last 6 games.\";\n        break;\n      case three === five && five > six:\n        text = \"Outstanding recent form with most improvement in the last 5.\";\n        break;\n      case three === five && five < six:\n        text = \"Outstanding recent form with a slight dip in the last 5.\";\n        break;\n      case three === five && five === six:\n        text = \"Consistently outstanding form over the last 6.\";\n        break;\n      case three < five && five === six:\n        text =\n          \"Outstanding recent form but slightly worsening in most recent results.\";\n        break;\n      case three < five && five > six:\n        text =\n          \"Outstanding recent form but slightly fluctuating over the last 6.\";\n        break;\n      case three < five && five < six:\n        text = \"Outstanding recent form but beginning to worsen recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal <= 2.2 && three >= 2.5) {\n    console.log(2);\n    switch (true) {\n      case three > five && five >= six:\n        text =\n          \"Very good recent form with solid improvement over last 6 games.\";\n        break;\n      case three > five && five < six:\n        text =\n          \"Very good recent form which has improved with some inconsistency over last 6 games.\";\n        break;\n      case three === five && five > six:\n        text = \"Very good recent form with most improvement in the last 5.\";\n        break;\n      case three === five && five < six:\n        text = \"Very good recent form with a slight dip in the last 5.\";\n        break;\n      case three === five && five === six:\n        text = \"Consistently very good form over the last 6.\";\n        break;\n      case three < five && five === six:\n        text =\n          \"Very good recent form but slightly worsening in most recent results.\";\n        break;\n      case three < five && five > six:\n        text =\n          \"Very good recent form but slightly fluctuating over the last 6.\";\n        break;\n      case three < five && five < six:\n        text = \"Very good recent form but beginning to worsen recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal > 2 && three < 2.5 && three >= 2) {\n    console.log(3);\n    switch (true) {\n      case three > five && five >= six:\n        text =\n          \"Very good recent form with solid improvement over last 6 games.\";\n        break;\n      case three > five && five < six:\n        text =\n          \"Very good recent form which has improved with some inconsistency over last 6 games.\";\n        break;\n      case three === five && five > six:\n        text = \"Very good recent form with most improvement in the last 5.\";\n        break;\n      case three === five && five < six:\n        text = \"Very good recent form with a slight dip in the last 5.\";\n        break;\n      case three === five && five === six:\n        text = \"Very good form over the last 6.\";\n        break;\n      case three < five && five === six:\n        text =\n          \"Very good recent form but slightly worsening in most recent results.\";\n        break;\n      case three < five && five > six:\n        text =\n          \"Very good recent form but slightly fluctuating over the last 6.\";\n        break;\n      case three < five && five < six:\n        text = \"Very good recent form but beginning to worsen recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal <= 2 && three < 2.5 && three >= 2) {\n    console.log(4);\n    switch (true) {\n      case three > five && five >= six:\n        text = \"Good recent form with solid improvement over last 6 games.\";\n        break;\n      case three > five && five < six:\n        text =\n          \"Good recent form which has improved with some inconsistency over last 6 games.\";\n        break;\n      case three === five && five > six:\n        text = \"Good recent form with most improvement in the last 5.\";\n        break;\n      case three === five && five < six:\n        text = \"Good recent form with a slight dip in the last 5.\";\n        break;\n      case three === five && five === six:\n        text = \"Good form over the last 6.\";\n        break;\n      case three < five && five === six:\n        text =\n          \"Good recent form but slightly worsening in most recent results.\";\n        break;\n      case three < five && five > six:\n        text = \"Good recent form but slightly fluctuating over the last 6.\";\n        break;\n      case three < five && five < six:\n        text = \"Good recent form but beginning to worsen recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal > 2 && three < 2 && three >= 1.5) {\n    console.log(5);\n    switch (true) {\n      case three > five && five >= six:\n        text = \"Good recent form with solid improvement over last 6 games.\";\n        break;\n      case three > five && five < six:\n        text =\n          \"Good recent form which has improved with some inconsistency over last 6 games.\";\n        break;\n      case three === five && five > six:\n        text = \"Good recent form with most improvement in the last 5.\";\n        break;\n      case three === five && five < six:\n        text = \"Good recent form with a slight dip in the last 5.\";\n        break;\n      case three === five && five === six:\n        text = \"Good form over the last 6.\";\n        break;\n      case three < five && five === six:\n        text =\n          \"Good recent form but slightly worsening in most recent results.\";\n        break;\n      case three < five && five > six:\n        text = \"Good recent form but slightly fluctuating over the last 6.\";\n        break;\n      case three < five && five < six:\n        text = \"Good recent form but worsening recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal <= 2 && three < 2 && three >= 1.5) {\n    console.log(6);\n    switch (true) {\n      case three > five && five >= six:\n        text = \"Average recent form with solid improvement over last 6 games.\";\n        break;\n      case three > five && five < six:\n        text =\n          \"Average recent form which has improved with some inconsistency over last 6 games.\";\n        break;\n      case three === five && five > six:\n        text = \"Average recent form with some improvement in the last 5.\";\n        break;\n      case three === five && five < six:\n        text = \"Average recent form with a slight dip in the last 5.\";\n        break;\n      case three === five && five === six:\n        text = \"Average form over the last 6.\";\n        break;\n      case three < five && five === six:\n        text =\n          \"Average recent form but slightly worsening in most recent results.\";\n        break;\n      case three < five && five > six:\n        text = \"Average recent form, slightly fluctuating over the last 6.\";\n        break;\n      case three < five && five < six:\n        text = \"Average form but on the decline recently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (three < 1.5 && three >= 1) {\n    console.log(7);\n    switch (true) {\n      case three > five && five >= six:\n        text = \"Below average recent form with solid improvement over last 6 games.\";\n        break;\n      case three > five && five < six:\n        text =\n          \"Below average recent form which has improved with some inconsistency over last 6 games.\";\n        break;\n      case three === five && five > six:\n        text = \"Below average recent form with most improvement in the last 5.\";\n        break;\n      case three === five && five < six:\n        text = \"Below average recent form with a slight dip in the last 5.\";\n        break;\n      case three === five && five === six:\n        text = \"Consistently below average form over the last 6.\";\n        break;\n      case three < five && five === six:\n        text =\n          \"Below average recent form but slightly worsening in most recent results.\";\n        break;\n      case three < five && five > six:\n        text = \"Below average recent form, slightly fluctuating over the last 6.\";\n        break;\n      case three < five && five < six:\n        text = \"Below average recent form, declining consistently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (three < 1 && three >= 0.5) {\n    console.log(8);\n    switch (true) {\n      case three > five && five >= six:\n        text = \"Poor recent form with gradual improvement over last 6 games.\";\n        break;\n      case three > five && five < six:\n        text =\n          \"Poor recent form but improving with some inconsistency over last 6 games.\";\n        break;\n      case three === five && five > six:\n        text = \"Poor recent form with some improvement shown in the last 5.\";\n        break;\n      case three === five && five < six:\n        text = \"Poor recent form with a dip in the last 5.\";\n        break;\n      case three === five && five === six:\n        text = \"Consistently poor form over the last 6.\";\n        break;\n      case three < five && five === six:\n        text = \"Poor recent form, slightly worsening in most recent results.\";\n        break;\n      case three < five && five > six:\n        text = \"Poor recent form, slightly fluctuating over the last 6.\";\n        break;\n      case three < five && five < six:\n        text = \"Poor recent form, declining consistently.\";\n        break;\n      default:\n        text = \"Poor recent form.\";\n        break;\n    }\n  } else if (pointsAverageTotal > 1 && three < 0.5) {\n    console.log(9);\n    switch (true) {\n      case three > five && five >= six:\n        text = \"Poor recent form with gradual improvement over last 6 games.\";\n        break;\n      case three > five && five < six:\n        text = \"Poor recent form with a slight improvement in the last 5.\";\n        break;\n      case three === five && five > six:\n        text = \"Poor recent form but improving slightly in the last 5.\";\n        break;\n      case three === five && five < six:\n        text = \"Poor recent form with a dip in the last 5.\";\n        break;\n      case three === five && five === six:\n        text = \"Consistently poor form over the last 6.\";\n        break;\n      case three < five && five === six:\n        text = \"Poor recent form, worsening further in the last 5.\";\n        break;\n      case three < five && five > six:\n        text = \"Poor recent form, slightly fluctuating over the last 6.\";\n        break;\n      case three < five && five < six:\n        text = \"Poor recent form, declining consistently.\";\n        break;\n      default:\n        break;\n    }\n  } else if (pointsAverageTotal <= 1 && three < 0.5) {\n    console.log(10);\n    switch (true) {\n      case three > five && five >= six:\n        text =\n          \"Terrible recent form with gradual improvement over last 6 games.\";\n        break;\n      case three > five && five < six:\n        text = \"Terrible recent form with a slight improvement in the last 5.\";\n        break;\n      case three === five && five > six:\n        text = \"Terrible recent form but improving slightly in the last 5.\";\n        break;\n      case three === five && five < six:\n        text = \"Terrible recent form with a dip in the last 5.\";\n        break;\n      case three === five && five === six:\n        text = \"Consistently terrible form over the last 6.\";\n        break;\n      case three < five && five === six:\n        text = \"Terrible recent form, worsening further in the last 5.\";\n        break;\n      case three < five && five > six:\n        text = \"Terrible recent form, slightly fluctuating over the last 6.\";\n        break;\n      case three < five && five < six:\n        text = \"Terrible recent form, declining consistently.\";\n        break;\n      default:\n        text = \"\";\n        break;\n    }\n  } else {\n    console.log(11);\n    console.log(pointsAverageTotal);\n    console.log(three);\n    console.log(five);\n    console.log(six);\n  }\n  return text + ` ${xgText} ${attackString} ${defenceString}`;\n}\n\nexport default GenerateFormSummary;\n","/Users/gregdorward/Development/football-predictions/src/components/Toggle.js",[],["169","170"],{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":23,"column":10,"nodeType":"177","messageId":"178","endLine":23,"endColumn":24},{"ruleId":"175","severity":1,"message":"179","line":230,"column":10,"nodeType":"177","messageId":"178","endLine":230,"endColumn":29},{"ruleId":"175","severity":1,"message":"180","line":717,"column":7,"nodeType":"177","messageId":"178","endLine":717,"endColumn":16},{"ruleId":"175","severity":1,"message":"181","line":733,"column":5,"nodeType":"177","messageId":"178","endLine":733,"endColumn":6},{"ruleId":"175","severity":1,"message":"182","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":26},{"ruleId":"171","replacedBy":"183"},{"ruleId":"173","replacedBy":"184"},{"ruleId":"175","severity":1,"message":"185","line":5,"column":19,"nodeType":"177","messageId":"178","endLine":5,"endColumn":49},{"ruleId":"175","severity":1,"message":"186","line":8,"column":10,"nodeType":"177","messageId":"178","endLine":8,"endColumn":21},{"ruleId":"175","severity":1,"message":"187","line":9,"column":10,"nodeType":"177","messageId":"178","endLine":9,"endColumn":18},{"ruleId":"175","severity":1,"message":"188","line":208,"column":16,"nodeType":"177","messageId":"178","endLine":208,"endColumn":20},{"ruleId":"175","severity":1,"message":"189","line":239,"column":9,"nodeType":"177","messageId":"178","endLine":239,"endColumn":27},{"ruleId":"175","severity":1,"message":"190","line":240,"column":9,"nodeType":"177","messageId":"178","endLine":240,"endColumn":27},{"ruleId":"175","severity":1,"message":"191","line":432,"column":9,"nodeType":"177","messageId":"178","endLine":432,"endColumn":17},{"ruleId":"175","severity":1,"message":"192","line":616,"column":26,"nodeType":"177","messageId":"178","endLine":616,"endColumn":39},{"ruleId":"175","severity":1,"message":"193","line":619,"column":26,"nodeType":"177","messageId":"178","endLine":619,"endColumn":39},{"ruleId":"175","severity":1,"message":"194","line":623,"column":9,"nodeType":"177","messageId":"178","endLine":623,"endColumn":28},{"ruleId":"175","severity":1,"message":"195","line":630,"column":9,"nodeType":"177","messageId":"178","endLine":630,"endColumn":28},{"ruleId":"171","replacedBy":"196"},{"ruleId":"173","replacedBy":"197"},{"ruleId":"175","severity":1,"message":"198","line":9,"column":8,"nodeType":"177","messageId":"178","endLine":9,"endColumn":13},{"ruleId":"175","severity":1,"message":"186","line":11,"column":10,"nodeType":"177","messageId":"178","endLine":11,"endColumn":21},{"ruleId":"175","severity":1,"message":"199","line":3,"column":8,"nodeType":"177","messageId":"178","endLine":3,"endColumn":19},{"ruleId":"175","severity":1,"message":"200","line":10,"column":5,"nodeType":"177","messageId":"178","endLine":10,"endColumn":13},{"ruleId":"175","severity":1,"message":"201","line":1,"column":10,"nodeType":"177","messageId":"178","endLine":1,"endColumn":15},{"ruleId":"171","replacedBy":"202"},{"ruleId":"173","replacedBy":"203"},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"no-unused-vars","'selectedOption' is defined but never used.","Identifier","unusedVar","'simpleMovingAverage' is defined but never used.","'remainder' is assigned a value but never used.","'i' is assigned a value but never used.","'Component' is defined but never used.",["204"],["205"],"'allLeagueResultsArrayOfObjects' is defined but never used.","'CreateBadge' is defined but never used.","'Fragment' is defined but never used.","'diff' is defined but never used.","'latestHomeGoalDiff' is assigned a value but never used.","'latestAwayGoalDiff' is assigned a value but never used.","'awayTeam' is assigned a value but never used.","'testArrayHome' is assigned a value but never used.","'testArrayAway' is assigned a value but never used.","'rollingGoalDiffHome' is assigned a value but never used.","'rollingGoalDiffAway' is assigned a value but never used.",["204"],["205"],"'Paper' is defined but never used.","'Collapsable' is defined but never used.","'setCount' is assigned a value but never used.","'parse' is defined but never used.",["204"],["205"],"no-global-assign","no-unsafe-negation"]