[{"/Users/gregdorward/Development/football-predictions/src/index.js":"1","/Users/gregdorward/Development/football-predictions/src/App.js":"2","/Users/gregdorward/Development/football-predictions/src/reportWebVitals.js":"3","/Users/gregdorward/Development/football-predictions/src/components/spinner.js":"4","/Users/gregdorward/Development/football-predictions/src/components/showCardPotential.js":"5","/Users/gregdorward/Development/football-predictions/src/components/createBadge.js":"6","/Users/gregdorward/Development/football-predictions/src/components/showBttsData.js":"7","/Users/gregdorward/Development/football-predictions/src/components/radio.js":"8","/Users/gregdorward/Development/football-predictions/src/components/Header.js":"9","/Users/gregdorward/Development/football-predictions/src/logic/getFixtures.js":"10","/Users/gregdorward/Development/football-predictions/src/components/createStatsDiv.js":"11","/Users/gregdorward/Development/football-predictions/src/logic/getForm.js":"12","/Users/gregdorward/Development/football-predictions/src/components/Button.js":"13","/Users/gregdorward/Development/football-predictions/src/logic/getScorePredictions.js":"14","/Users/gregdorward/Development/football-predictions/src/components/CollapsableElement.js":"15","/Users/gregdorward/Development/football-predictions/src/components/TextSection.js":"16","/Users/gregdorward/Development/football-predictions/src/logic/getStats.js":"17","/Users/gregdorward/Development/football-predictions/src/components/Div.js":"18","/Users/gregdorward/Development/football-predictions/src/components/CollapsableDiv.js":"19","/Users/gregdorward/Development/football-predictions/src/components/Increment.js":"20","/Users/gregdorward/Development/football-predictions/src/logic/getBTTSPotential.js":"21","/Users/gregdorward/Development/football-predictions/src/components/OddsRadio.js":"22","/Users/gregdorward/Development/football-predictions/src/logic/getTeamStats.js":"23","/Users/gregdorward/Development/football-predictions/src/components/HeadToHead.js":"24","/Users/gregdorward/Development/football-predictions/src/components/BulletList.js":"25","/Users/gregdorward/Development/football-predictions/src/components/Table.js":"26","/Users/gregdorward/Development/football-predictions/src/components/LeagueTable.js":"27","/Users/gregdorward/Development/football-predictions/src/components/Fixture.js":"28","/Users/gregdorward/Development/football-predictions/src/components/KofiButton.js":"29","/Users/gregdorward/Development/football-predictions/src/components/Chart.js":"30","/Users/gregdorward/Development/football-predictions/src/logic/compareFormTrend.js":"31","/Users/gregdorward/Development/football-predictions/src/components/Toggle.js":"32","/Users/gregdorward/Development/football-predictions/src/components/Carousel.js":"33","/Users/gregdorward/Development/football-predictions/src/components/DayPicker.js":"34","/Users/gregdorward/Development/football-predictions/src/components/DateForm.js":"35","/Users/gregdorward/Development/football-predictions/src/logic/dataSlice.js":"36","/Users/gregdorward/Development/football-predictions/src/logic/store.js":"37","/Users/gregdorward/Development/football-predictions/src/components/Team.js":"38","/Users/gregdorward/Development/football-predictions/src/components/Checkbox.js":"39","/Users/gregdorward/Development/football-predictions/src/components/Slider.js":"40","/Users/gregdorward/Development/football-predictions/src/components/SliderDiff.js":"41","/Users/gregdorward/Development/football-predictions/src/components/Switch.js":"42","/Users/gregdorward/Development/football-predictions/src/components/SofaScore.js":"43","/Users/gregdorward/Development/football-predictions/src/components/TeamOfTheWeek.js":"44","/Users/gregdorward/Development/football-predictions/src/components/TeamOfTheSeason.js":"45","/Users/gregdorward/Development/football-predictions/src/components/Logo.js":"46","/Users/gregdorward/Development/football-predictions/src/components/PreviousGames.js":"47","/Users/gregdorward/Development/football-predictions/src/components/CollapsableStats.js":"48","/Users/gregdorward/Development/football-predictions/src/components/Contact.js":"49","/Users/gregdorward/Development/football-predictions/src/components/Success.js":"50","/Users/gregdorward/Development/football-predictions/src/components/Cancel.js":"51","/Users/gregdorward/Development/football-predictions/src/logic/authProvider.js":"52","/Users/gregdorward/Development/football-predictions/src/firebase.js":"53","/Users/gregdorward/Development/football-predictions/src/components/Login.js":"54","/Users/gregdorward/Development/football-predictions/src/logic/hasUserPaid.js":"55","/Users/gregdorward/Development/football-predictions/src/components/ProtectedContent.js":"56","/Users/gregdorward/Development/football-predictions/src/components/ResetPasswordPage.js":"57","/Users/gregdorward/Development/football-predictions/src/components/PasswordReset.js":"58","/Users/gregdorward/Development/football-predictions/src/components/CancelSubscription.js":"59","/Users/gregdorward/Development/football-predictions/src/components/Under25.js":"60","/Users/gregdorward/Development/football-predictions/src/components/Over25.js":"61","/Users/gregdorward/Development/football-predictions/src/logic/getStatsInsights.js":"62","/Users/gregdorward/Development/football-predictions/src/components/HighestScoringTeams.js":"63","/Users/gregdorward/Development/football-predictions/src/components/HighestScoringFixtures.js":"64","/Users/gregdorward/Development/football-predictions/src/components/BTTSFixtures.js":"65","/Users/gregdorward/Development/football-predictions/src/components/BTTSTeams.js":"66","/Users/gregdorward/Development/football-predictions/src/components/GameStats.js":"67","/Users/gregdorward/Development/football-predictions/src/logic/getAIStats.js":"68"},{"size":2216,"mtime":1740154014488,"results":"69","hashOfConfig":"70"},{"size":25194,"mtime":1741080388671,"results":"71","hashOfConfig":"70"},{"size":362,"mtime":1642008106594,"results":"72","hashOfConfig":"70"},{"size":297,"mtime":1611654841360,"results":"73","hashOfConfig":"74"},{"size":0,"mtime":1611654832610,"results":"75","hashOfConfig":"74"},{"size":376,"mtime":1741080695017,"results":"76","hashOfConfig":"70"},{"size":0,"mtime":1611654828618,"results":"77","hashOfConfig":"74"},{"size":967,"mtime":1707394671993,"results":"78","hashOfConfig":"79"},{"size":144,"mtime":1642008106581,"results":"80","hashOfConfig":"70"},{"size":65219,"mtime":1741080646749,"results":"81","hashOfConfig":"70"},{"size":17953,"mtime":1741080364294,"results":"82","hashOfConfig":"70"},{"size":476,"mtime":1701970028062,"results":"83","hashOfConfig":"70"},{"size":319,"mtime":1740678358252,"results":"84","hashOfConfig":"70"},{"size":178219,"mtime":1741103140481,"results":"85","hashOfConfig":"70"},{"size":729,"mtime":1740151753654,"results":"86","hashOfConfig":"70"},{"size":180,"mtime":1642008106585,"results":"87","hashOfConfig":"88"},{"size":83634,"mtime":1741098340227,"results":"89","hashOfConfig":"70"},{"size":203,"mtime":1642008106578,"results":"90","hashOfConfig":"70"},{"size":595,"mtime":1660119665169,"results":"91","hashOfConfig":"79"},{"size":1347,"mtime":1660318811896,"results":"92","hashOfConfig":"70"},{"size":1040,"mtime":1737127224302,"results":"93","hashOfConfig":"70"},{"size":963,"mtime":1738945715539,"results":"94","hashOfConfig":"70"},{"size":7045,"mtime":1740570614954,"results":"95","hashOfConfig":"70"},{"size":3151,"mtime":1722021414195,"results":"96","hashOfConfig":"70"},{"size":440,"mtime":1642008106576,"results":"97","hashOfConfig":"88"},{"size":4053,"mtime":1740391945355,"results":"98","hashOfConfig":"70"},{"size":21574,"mtime":1740774323191,"results":"99","hashOfConfig":"70"},{"size":12909,"mtime":1740767935323,"results":"100","hashOfConfig":"70"},{"size":202,"mtime":1667313223726,"results":"101","hashOfConfig":"102"},{"size":12516,"mtime":1741017069971,"results":"103","hashOfConfig":"70"},{"size":10575,"mtime":1739654383332,"results":"104","hashOfConfig":"70"},{"size":386,"mtime":1664378350858,"results":"105","hashOfConfig":"79"},{"size":981,"mtime":1707491534037,"results":"106","hashOfConfig":"70"},{"size":556,"mtime":1669391554973,"results":"107","hashOfConfig":"79"},{"size":225,"mtime":1669809056859,"results":"108","hashOfConfig":"79"},{"size":848,"mtime":1693584106618,"results":"109","hashOfConfig":"70"},{"size":283,"mtime":1693400578489,"results":"110","hashOfConfig":"70"},{"size":19999,"mtime":1729171160524,"results":"111","hashOfConfig":"70"},{"size":707,"mtime":1697730848306,"results":"112","hashOfConfig":"79"},{"size":1495,"mtime":1723118437909,"results":"113","hashOfConfig":"70"},{"size":1096,"mtime":1730478878964,"results":"114","hashOfConfig":"70"},{"size":772,"mtime":1709224525316,"results":"115","hashOfConfig":"79"},{"size":3051,"mtime":1720793440165,"results":"116","hashOfConfig":"70"},{"size":780,"mtime":1716280871888,"results":"117","hashOfConfig":"70"},{"size":1936,"mtime":1739565604404,"results":"118","hashOfConfig":"70"},{"size":295,"mtime":1721401642188,"results":"119","hashOfConfig":"70"},{"size":1603,"mtime":1722028250974,"results":"120","hashOfConfig":"70"},{"size":467,"mtime":1737492104137,"results":"121","hashOfConfig":"70"},{"size":2381,"mtime":1739305466822,"results":"122","hashOfConfig":"70"},{"size":386,"mtime":1739305068054,"results":"123","hashOfConfig":"70"},{"size":334,"mtime":1739304909214,"results":"124","hashOfConfig":"70"},{"size":1879,"mtime":1740044039071,"results":"125","hashOfConfig":"70"},{"size":784,"mtime":1739129617482,"results":"126","hashOfConfig":"70"},{"size":3319,"mtime":1739305061650,"results":"127","hashOfConfig":"70"},{"size":375,"mtime":1738921416092,"results":"128","hashOfConfig":"70"},{"size":555,"mtime":1738945031413,"results":"129","hashOfConfig":"70"},{"size":167,"mtime":1739129717410,"results":"130","hashOfConfig":"79"},{"size":1142,"mtime":1739290235668,"results":"131","hashOfConfig":"70"},{"size":2718,"mtime":1739654364126,"results":"132","hashOfConfig":"70"},{"size":3118,"mtime":1740391945356,"results":"133","hashOfConfig":"70"},{"size":3127,"mtime":1740391945354,"results":"134","hashOfConfig":"70"},{"size":5954,"mtime":1740155513388,"results":"135","hashOfConfig":"70"},{"size":3190,"mtime":1740391945353,"results":"136","hashOfConfig":"70"},{"size":3377,"mtime":1740391945353,"results":"137","hashOfConfig":"70"},{"size":3387,"mtime":1740391945350,"results":"138","hashOfConfig":"70"},{"size":3598,"mtime":1740391945351,"results":"139","hashOfConfig":"70"},{"size":60443,"mtime":1741103488623,"results":"140","hashOfConfig":"70"},{"size":3583,"mtime":1741005096548,"results":"141","hashOfConfig":"70"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"145"},"1kw2k2s",{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"145"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f0e5p2",{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},"z32ji8",{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"145"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},"1eaajj",{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"145"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"145"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"145"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},"1qf0ryt",{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"145"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"145"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"145"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":58,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"145"},"/Users/gregdorward/Development/football-predictions/src/index.js",["296"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router, Route, Routes, HashRouter } from \"react-router-dom\";\nimport TeamPage from \"./components/Team\";\nimport {SuccessPage} from \"./components/Success\"\nimport {CancelPage} from \"./components/Cancel\"\nimport PasswordReset from \"./components/PasswordReset\";\nimport { Provider } from \"react-redux\";\nimport store from \"./logic/store\"; // Import your Redux store\nimport CancelSubscription from \"./components/CancelSubscription\"\nimport Over25 from \"./components/Over25\"\nimport Under25 from \"./components/Under25\"\nimport HighestScoringTeams from \"./components/HighestScoringTeams\"\nimport HighestScoringFixtures from \"./components/HighestScoringFixtures\";\nimport BTTSFixtures from \"./components/BTTSFixtures\";\nimport BTTSTeams from \"./components/BTTSTeams\";\n\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n    <HashRouter>\n        <Routes>\n          <Route path=\"/fixture\" element={<TeamPage />} />\n          <Route path=\"/success\" element={<SuccessPage />} />\n          <Route path=\"/cancel\" element={<CancelPage />} />\n          <Route path=\"/reset\" element={<PasswordReset />} />\n          <Route path=\"/o25\" element={<Over25 />} />\n          <Route path=\"/u25\" element={<Under25 />} />\n          <Route path=\"/teamshigh\" element={<HighestScoringTeams />} />\n          <Route path=\"/fixtureshigh\" element={<HighestScoringFixtures />} />\n          <Route path=\"/bttsfixtures\" element={<BTTSFixtures />} />\n          <Route path=\"/bttsteams\" element={<BTTSTeams />} />\n          <Route path=\"/cancelsubscription\" element={<CancelSubscription/>} />\n          <Route path=\"/\" exact element={<App />} />\n          {/* <Route path=\"/\" element={<Fixture />} /> */}\n        </Routes>\n        </HashRouter>\n    </Provider>\n    ,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["297","298"],"/Users/gregdorward/Development/football-predictions/src/App.js",["299","300","301","302","303","304","305","306","307","308","309","310","311"],"import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./components/Header\";\nimport { Button } from \"./components/Button\";\nimport OddsRadio from \"./components/OddsRadio\";\nimport { Fixture } from \"./components/Fixture\";\nimport mockedFixtures from \"./data/mockedFixtures.json\";\nimport { selectedOdds } from \"./components/OddsRadio\";\nimport Collapsable from \"./components/CollapsableElement\";\nimport StripePolicies from \"./components/Contact\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { AuthProvider, useAuth } from \"./logic/authProvider\";\nimport { getAuth } from \"firebase/auth\";\nimport Login from \"./components/Login\";\nimport { getCurrentUser } from \"./components/ProtectedContent\";\nimport { userDetail } from \"./logic/authProvider\";\nimport { checkUserPaidStatus } from \"./logic/hasUserPaid\";\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  RedditShareButton,\n  RedditIcon,\n  TelegramShareButton,\n  TelegramIcon,\n  TwitterShareButton,\n  TwitterIcon,\n  WhatsappShareButton,\n  WhatsappIcon,\n} from \"react-share\";\nimport { generateFixtures } from \"./logic/getFixtures\";\nimport { ThreeDots } from \"react-loading-icons\";\nimport Logo from \"./components/Logo\";\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\n\nimport reactDom from \"react-dom\";\n// require(\"dotenv\").config();\n\nexport const proxyurl = \"https://safe-caverns-99679.herokuapp.com/\";\nexport var fixtureList = [];\nexport let allLeagueData = [];\n\nexport const availableLeagues = [];\nexport var orderedLeagues = [];\n\nlet loggedIn;\nexport let paid = false;\n\nconst leagueOrder = [\n  // 11084, //Euro 2024\n  // 7432, //World Cup 22\n  12325, //premier league 22/23\n  12451, //championship 22/23\n  12446, //league 1 22/23\n  12422, //league 2 22/23\n  12622, //National league 22/23\n  12316, //La Liga 22/23\n  12455, //Scottish Prem 22/23\n  12529, //Bundesliga 22/23\n  12530, //Serie A 22/23\n  12337, //French Prem 22/23\n  12931, //Portagul Prem 22/23\n  12322, //Dutch Prem 22/23\n  12137, //Belgian Pro League 22/23\n  12321, // Champs league\n  12327, //Europa\n  10969, //sweden 24\n  12132, //Danish Prem 24/25\n  10976, //Norway Prem 23\n  12472, //Austrian Prem 22/23\n  12734, //Greek Prem 22/23\n  12641, //turkey\n  12120, //Polish prem 22/23\n  12326, //Swiss prem 22/23\n  13952, //Irish Prem 23\n  12467, //Spanish secunda 22/23\n  12621, //Italy serie B 22/23\n  12528, //Bundesliga 2 22/23\n  12623, //German 3rd tier 22/23\n  12338, //French League 2 22/23\n  12456, //Scottish Championship 22/23\n  12474, //Scottish league 1 22/23\n  12453, //Scottish league 2 22/23\n  12827, //Women's prem 23/24\n  13973, //MLS 25\n  11321, //Brazil prem 24\n  14125, //Argentina prem 23\n  12136, //Mexico prem 23/24\n  12933, //National league North and South 22/23\n  // 13703, //Australian A league 23/24\n  14069, //S Korea 23\n];\n\nlet today;\nlet todayFootyStats;\nlet todaySS;\nlet tomorrow;\nlet tomorrowFootyStats;\nlet tomorrowSS;\nlet date;\nlet dateSS;\nlet dateFootyStats;\nlet yesterday;\nlet yesterdayFootyStats;\nlet yesterdaySS;\nlet lastSaturday;\nlet lastSaturdayFootyStats;\nlet lastSaturdaySS;\nlet historic;\nlet historicFootyStats;\nlet historicSS;\nlet tomorrowsDate;\nlet yesterdaysDate;\nlet saturdayDate;\nlet historicDate;\nlet string;\nlet dateString;\n\n(async function fetchLeagueData() {\n  let leagueList;\n  if (userDetail) {\n    paid = await checkUserPaidStatus(userDetail.uid);\n  } else {\n    paid = false;\n  }\n  leagueList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}leagueList`);\n\n  let leagueArray;\n  await leagueList.json().then((leagues) => {\n    leagueArray = Array.from(leagues.data);\n  });\n\n  for (let i = 0; i < leagueArray.length; i++) {\n    const league = leagueArray[i];\n    const name = leagueArray[i].name;\n\n    for (let x = 0; x < league.season.length; x++) {\n      const element = league.season[x];\n\n      if (element.year === 2025 || element.year === 20242025) {\n        if (\n          element.id !== 13703 &&\n          element.id !== 6935 &&\n          element.id !== 7061\n        ) {\n          availableLeagues.push({ name: name, element });\n        }\n      }\n    }\n\n    async function mapOrder(array, order, key) {\n      array.sort(function (a, b) {\n        var A = a.element[key],\n          B = b.element[key];\n\n        if (order.indexOf(A) > order.indexOf(B)) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n      return array;\n    }\n    //leagues ordered by id\n    orderedLeagues = await mapOrder(availableLeagues, leagueOrder, \"id\");\n  }\n  return orderedLeagues;\n})();\n\nexport async function getLeagueList() {\n  loggedIn = await getCurrentUser();\n  let i = 0;\n  date = new Date();\n  string = \"Today\";\n\n  async function incrementDate(num, date) {\n    i = i + num;\n    date.setDate(date.getDate() + num);\n    dateSS = await convertTimestampForSofaScore(date);\n\n    [date, dateFootyStats] = await calculateDate(date);\n    string = dateFootyStats;\n\n    await renderButtons();\n  }\n\n  async function decrementDate(num, date) {\n    i = i - num;\n    console.log(i);\n    if (i > -120) {\n      date.setDate(date.getDate() - num);\n      dateSS = await convertTimestampForSofaScore(date);\n      [date, dateFootyStats] = await calculateDate(date);\n      string = dateFootyStats;\n      dateString = date;\n      await renderButtons();\n    }\n  }\n\n  async function calculateDate(dateString) {\n    const day = dateString.getDate();\n    const month = dateString.getMonth() + 1;\n    const year = dateString.getFullYear();\n    return [`${month}${day}${year}`, `${year}-${month}-${day}`];\n  }\n\n  [today, todayFootyStats] = await calculateDate(new Date());\n\n  tomorrowsDate = new Date();\n  tomorrowsDate.setDate(tomorrowsDate.getDate() + 1);\n  [tomorrow, tomorrowFootyStats] = await calculateDate(tomorrowsDate);\n\n  yesterdaysDate = new Date();\n  yesterdaysDate.setDate(yesterdaysDate.getDate() - 1);\n  [yesterday, yesterdayFootyStats] = await calculateDate(yesterdaysDate);\n\n  saturdayDate = new Date();\n  saturdayDate.setDate(\n    saturdayDate.getDate() - ((saturdayDate.getDay() + 6) % 7)\n  );\n  saturdayDate.setDate(saturdayDate.getDate() - 2);\n  [lastSaturday, lastSaturdayFootyStats] = await calculateDate(saturdayDate);\n\n  historicDate = new Date();\n  historicDate.setDate(\n    historicDate.getDate() - ((historicDate.getDay() + 6) % 7)\n  );\n  historicDate.setDate(historicDate.getDate() - 9);\n  [historic, historicFootyStats] = await calculateDate(historicDate);\n\n  async function convertTimestampForSofaScore(timestamp) {\n    let newDate = new Date(timestamp);\n\n    let year = newDate.getFullYear();\n    let month = String(newDate.getMonth() + 1).padStart(2, \"0\"); // Adding 1 to month because it is zero-based\n    let day = String(newDate.getDate()).padStart(2, \"0\");\n\n    let converted = `${year}-${month}-${day}`;\n\n    return converted;\n  }\n\n  todaySS = await convertTimestampForSofaScore(new Date());\n  tomorrowSS = await convertTimestampForSofaScore(tomorrowsDate);\n  yesterdaySS = await convertTimestampForSofaScore(yesterdaysDate);\n  lastSaturdaySS = await convertTimestampForSofaScore(saturdayDate);\n  historicSS = await convertTimestampForSofaScore(historicDate);\n\n  const text =\n    \"Select a day you would like to retrieve fixtures for from the options above\\n A list of games will be returned once the data has loaded\\n Once all fixtures have loaded, click on “Get Predictions” to see XGTipping's forecasted outcomes for every game\\n If a game has completed, the predictions is displayed on the right and the actual result on the left\\n Each individual fixture is tappable/clickable. By doing so, you can access a range of detailed stats, from comparative charts, granular performance measures to previous meetings.\\n All games are subject to the same automated prediction algorithm with the outcome being a score prediction. Factors that determine the tip include the following, amongst others:\\n - Goal differentials\\n - Expected goal differentials \\n - Attack/Defence performance\\n - Form trends over time\\n - Home/Away records\\n - WDL records\\n - Points per game \\n - A range of other comparative factors\\n  –\\n\";\n\n  const text2 =\n    \"A range of tools are available should you wish to use them\\n Build a multi - Use the '+' or '-' buttons to add or remove a game deemed to be one of XGTIpping's highest confidence tips from the day\\n Exotic of the day: A pre-built exotic multi comprising of XGTipping's highest confidence tips\\n BTTS games: Games where both teams to score is deemed a likely outcome\\n Over 2.5 goals tips: Games where over 2.5 goals are most likely to be scored\\n XG tips: Comprises only games where the expected goal differentials between each team are at their greatest. We believe this shows a true disparity in the form of the two opposing teams\\n Tap the 'How to use' option to hide this text\";\n\n  let textJoined = text.concat(text2);\n\n  let newText = textJoined.split(\"\\n\").map((i) => {\n    return <p>{i}</p>;\n  });\n\n  async function renderButtons(loginStatus) {\n    ReactDOM.render(\n      <div className=\"FixtureButtons\">\n        <h6>{loginStatus}</h6>\n        <div className=\"historicResults\">\n          <Button\n            text={\"Last Saturday\"}\n            className=\"HistoricFixturesButton\"\n            onClickEvent={async () =>\n              fixtureList.push(\n                await generateFixtures(\n                  \"lastSaturday\",\n                  lastSaturday,\n                  selectedOdds,\n                  lastSaturdayFootyStats,\n                  false,\n                  today,\n                  lastSaturdaySS\n                )\n              )\n            }\n          />\n        </div>\n        <Button\n          text={`<`}\n          className=\"FixturesButton\"\n          onClickEvent={async () => await decrementDate(1, date)}\n        />\n        <Button\n          text={dateFootyStats !== undefined ? dateFootyStats : date}\n          className=\"FixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"todaysFixtures\",\n                dateString,\n                selectedOdds,\n                dateFootyStats,\n                false,\n                today,\n                dateSS\n              )\n            )\n          }\n        />\n        <Button\n          text={`Today`}\n          className=\"FixturesButtonToday\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"todaysFixtures\",\n                today,\n                selectedOdds,\n                todayFootyStats,\n                true,\n                today,\n                todaySS\n              )\n            )\n          }\n        />\n        <Button\n          text={\"Tomorrow\"}\n          className=\"FixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"tomorrowsFixtures\",\n                tomorrow,\n                selectedOdds,\n                tomorrowFootyStats,\n                true,\n                today,\n                tomorrowSS\n              )\n            )\n          }\n        />\n      </div>,\n      document.getElementById(\"Buttons\")\n    );\n  }\n\n  ReactDOM.render(\n    <div className=\"FixtureButtons\">\n      <div className=\"historicResults\">\n        <Button\n          text={\"Last Saturday\"}\n          className=\"HistoricFixturesButton\"\n          onClickEvent={async () =>\n            fixtureList.push(\n              await generateFixtures(\n                \"lastSaturday\",\n                lastSaturday,\n                selectedOdds,\n                lastSaturdayFootyStats,\n                false,\n                today,\n                lastSaturdaySS\n              )\n            )\n          }\n        />\n      </div>\n      <Button\n        text={`<`}\n        className=\"FixturesButton\"\n        onClickEvent={async () => await decrementDate(1, date)}\n      />\n      <Button\n        text={`${string}`}\n        className=\"FixturesButtonToday\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"todaysFixtures\",\n              today,\n              selectedOdds,\n              todayFootyStats,\n              true,\n              today,\n              todaySS\n            )\n          )\n        }\n      />\n      <Button\n        text={\"Tomorrow\"}\n        className=\"FixturesButton\"\n        onClickEvent={async () =>\n          fixtureList.push(\n            await generateFixtures(\n              \"tomorrowsFixtures\",\n              tomorrow,\n              selectedOdds,\n              tomorrowFootyStats,\n              true,\n              today,\n              tomorrowSS\n            )\n          )\n        }\n      />\n    </div>,\n    document.getElementById(\"Buttons\")\n  );\n  ReactDOM.render(\n    <div className=\"OddsRadios\">\n      <OddsRadio value=\"Fractional odds\"></OddsRadio>\n      <OddsRadio value=\"Decimal odds\"></OddsRadio>\n    </div>,\n    document.getElementById(\"Checkbox\")\n  );\n  ReactDOM.render(\n    <Fragment>\n      <Collapsable\n        // className={\"HowToUse\"}\n        buttonText={\"How to use\"}\n        element={newText}\n      />\n    </Fragment>,\n    document.getElementById(\"XGDiff\")\n  );\n\n  if (loggedIn) {\n    ReactDOM.render(\n      <h6>Welcome back {loggedIn.email}</h6>,\n      document.getElementById(\"Email\")\n    );\n  } else {\n    ReactDOM.render(<Login />, document.getElementById(\"Email\"));\n  }\n}\n\n// Replace with your own Stripe public key\nconst stripePromise = loadStripe(\n  \"pk_live_51QojxLBrqiWlVPadBxhtoj499YzoC8YjFUIVQwCcTe8B7ZUG47NbYAam2wvNox2mUmzd0WgQh4PWKaIQaxKxubig00yEzjNuVQ\"\n);\n\nconst handleCheckout = async (priceId) => {\n  const stripe = await stripePromise;\n  const auth = getAuth();\n  const user = auth.currentUser;\n\n  if (!user) {\n    alert(\"Please sign-up or login before purchasing\");\n    return;\n  }\n\n  const response = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}create-checkout-session`,\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ priceId, uid: user.uid }), // Send uid\n    }\n  );\n\n  const session = await response.json();\n\n  const result = await stripe.redirectToCheckout({ sessionId: session.id });\n\n  if (result.error) {\n    console.error(\"Checkout error:\", result.error.message);\n  }\n};\n\nasync function getHighestScoringLeagues() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}over25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    for (let index = 0; index < 215; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        over25Percentage:\n          leagues.data.top_leagues.data[index].seasonOver25Percentage_overall,\n        division: leagues.data.top_leagues.data[index].division,\n        leagueId: leagues.data.top_leagues.data[index].id,\n      };\n      arr.push(league);\n    }\n  });\n\n  const finalArray = arr.filter(\n    (league) =>\n      leagueOrder.find((element) => element === league.leagueId) &&\n      league.averageGoals >= 2.5\n  );\n\n  let sortedArray = finalArray.sort((a, b) => b.averageGoals - a.averageGoals);\n\n  return sortedArray;\n}\n\nasync function getLowestScoringLeagues() {\n  let teamsList = await fetch(`${process.env.REACT_APP_EXPRESS_SERVER}under25`);\n  let arr = [];\n  await teamsList.json().then(async (leagues) => {\n    for (let index = 0; index < 215; index++) {\n      const league = {\n        league: leagues.data.top_leagues.data[index].name,\n        leagueCountry: leagues.data.top_leagues.data[index].country,\n        averageGoals: leagues.data.top_leagues.data[index].seasonAVG_overall,\n        under25Percentage:\n          leagues.data.top_leagues.data[index].seasonUnder25Percentage_overall,\n        leagueId: leagues.data.top_leagues.data[index].id,\n      };\n      arr.push(league);\n    }\n  });\n\n  const finalArray = arr.filter(\n    (league) =>\n      leagueOrder.find((element) => element === league.leagueId) &&\n      league.averageGoals < 2.5\n  );\n\n  let sortedArray = finalArray.sort((a, b) => a.averageGoals - b.averageGoals);\n\n  return sortedArray;\n}\n\nconst welcomeTextUnsplitOne = `Welcome to XGTipping. Your go-to resource for all things football, from predictions, comprehensive head to head stats, results, xg scores, odds, league tables, form, and bespoke multi-builders underpinned by expected goal (XG) data.\\n `;\nlet welcomeTextOne = welcomeTextUnsplitOne.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nconst welcomeTextUnsplitTwo = `XGTipping is completely independent and free to use, relying on a donation model to support running costs. For feedback or feature ideas, get in touch at @TippingXg.`;\nlet welcomeTextTwo = welcomeTextUnsplitTwo.split(\"\\n\").map((i) => {\n  return <p>{i}</p>;\n});\n\nfunction AppContent() {\n  const { user, isPaidUser } = useAuth();\n  getLeagueList();\n\n  return (\n    <div className=\"App\">\n      <Logo />\n      <a\n        className=\"SocialLink\"\n        href=\"https://www.reddit.com/r/xgtipping/\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        r/xgtipping\n      </a>\n      <div id=\"LoadingContainer\" className=\"LoadingContainer\" />\n      <div id=\"RadioContainer\" className=\"RadioContainer\">\n        <div id=\"RadioText\" />\n        <div id=\"RadioButtons\" />\n      </div>\n      <div id=\"Email\" className=\"Email\"></div>\n      <div id=\"Day\" />\n      <div id=\"Checkbox\" />\n      <div id=\"ExplainerText\" />\n      <div id=\"Loading\" className=\"Loading\"></div>\n      <div id=\"Buttons\" className=\"Buttons\">\n        <ThreeDots className=\"MainLoading\" fill=\"#030061\" />\n        <div>Loading all fixture and form data...</div>\n      </div>\n\n      {user ? (\n        isPaidUser ? (\n          // If the user is logged in and is a paying customer, show the cancel button\n          <button\n            onClick={() => {\n              window.location.href =\n                \"https://www.xgtipping.com/#/cancelsubscription\";\n            }}\n            className=\"CancelButton\"\n          >\n            Cancel Subscription\n          </button>\n        ) : (\n          // If the user is logged in but is NOT a paying customer, show subscribe buttons\n          <div>\n            <span className=\"MembershipInfo\">\n              Full fixtures from all 40+ leagues and cups are restricted to\n              premium members. Memberships can be cancelled at any time and\n              prices will differ in currencies other than GBP. Payments are\n              securely hosted by Stripe\n            </span>\n            <h2 className=\"MembershipHeader\">\n              1 week free trial with code XGFREETRIAL when applied to the\n              £1/week subscription at the checkout\n            </h2>\n            <h3>\n              Subscription will be charged to payment card from week 2 but can\n              be cancelled at any time. Code expires 19/03/2025\n            </h3>\n            <h3>\n              New premium features released this week includes AI previews,\n              matches/leagues with the highest/lowest goals and more\n            </h3>\n            <button\n              onClick={() => handleCheckout(\"price_1QrQ4ZBrqiWlVPadCkhLhtiZ\")}\n              className=\"SubscribeButton\"\n            >\n              Subscribe for £1/week\n            </button>\n            <button\n              onClick={() => handleCheckout(\"price_1QrQ5NBrqiWlVPadFBuBKKSM\")}\n              className=\"SubscribeButton\"\n            >\n              Subscribe for £3/month\n            </button>\n            <button\n              onClick={() => handleCheckout(\"price_1QrQ75BrqiWlVPadEML30BoJ\")}\n              className=\"SubscribeButton\"\n            >\n              Subscribe for £30/year\n            </button>\n          </div>\n        )\n      ) : (\n        // If the user is not logged in, show nothing\n        <div></div>\n      )}\n\n      <div id=\"GeneratePredictions\" className=\"GeneratePredictions\" />\n      <Collapsable\n        buttonText={\"Multis\"}\n        element={\n          <Fragment>\n            <div id=\"bestPredictions\" className=\"bestPredictions\" />\n            <div id=\"exoticOfTheDay\" className=\"exoticOfTheDay\" />\n            {/* <div id=\"successMeasure2\" /> */}\n            <div id=\"RowOneContainer\" className=\"RowOneContainer\">\n              <div id=\"BTTS\" className=\"RowOne\" />\n              <div id=\"longShots\" className=\"RowOne\" />\n              <div id=\"draws\" className=\"RowOne\" />\n            </div>\n\n            <div id=\"insights\" />\n          </Fragment>\n        }\n      />\n      <div id=\"successMeasure2\" />\n      <div id=\"highLowLeagues\" className=\"HighLowLeagues\" />\n      <div id=\"risk\" />\n      <div id=\"successMeasure\" />\n      <div id=\"tables\" />\n      <div id=\"homeBadge\" />\n      <div id=\"FixtureContainerHeaders\"></div>\n\n      <div id=\"FixtureContainer\">\n        <h6 className=\"WelcomeText\">{welcomeTextOne}</h6>\n        <h6 className=\"GetMatchStatText\">\n          Below is an example of our tips/results overview for you to\n          familiarise yourself with. Get real fixtures using the date buttons\n          above. When loaded, tap on one to see full match stats.\n        </h6>\n\n        <div className=\"ExplainerContainer\">\n          <span className=\"oddsHomeExplainer\">Home odds</span>\n          <span className=\"emptyHomeTeam\"></span>\n          <span className=\"scoreExplainer\">Result / KO Time</span>\n          <span className=\"predictionExplainer\">Our Prediction</span>\n          <span className=\"emptyAwayTeam\"></span>\n          <span className=\"oddsAwayExplainer\">Away odds</span>\n        </div>\n\n        <Fixture\n          fixtures={mockedFixtures.matches}\n          mock={true}\n          className={\"individualFixture\"}\n        />\n\n        <div>\n          <h6 className=\"WelcomeText\">{welcomeTextTwo}</h6>\n          <h6 className=\"WelcomeText\">\n            We cover a range of leagues, including\n            <ul className=\"AllLeagues\">\n              <li className=\"League\" key=\"premier-league\">\n                Premier League\n              </li>\n              <li className=\"League\" key=\"english-football-league\">\n                English Football League\n              </li>\n              <li className=\"League\" key=\"la-liga\">\n                La Liga\n              </li>\n              <li className=\"League\" key=\"serie-a\">\n                Serie A\n              </li>\n              <li className=\"League\" key=\"bundesliga\">\n                Bundesliga\n              </li>\n              <li className=\"League\" key=\"ligue-1\">\n                Ligue 1\n              </li>\n              <li className=\"League\" key=\"mls\">\n                MLS\n              </li>\n              <li className=\"League\" key=\"primeira-liga\">\n                Primeira Liga\n              </li>\n              <li className=\"League\" key=\"loads-more\">\n                Loads more...\n              </li>\n            </ul>\n          </h6>\n        </div>\n\n        <div>\n          <div className=\"DataText\">Raw data from</div>\n          <a\n            className=\"DataLink\"\n            href=\"https://www.footystats.org\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            footystats.org\n          </a>\n        </div>\n        <div className=\"bitcoin\" id=\"bitcoin\">\n          <a\n            href=\"https://www.ko-fi.com/xgtipping\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Donations\n          </a>\n          <span className=\"bitcoinSymbol\">&#x20bf;itcoin address</span>\n          <span className=\"bitcoinAddress\">\n            bc1q7j62txkvhfu0dt3l0s07saze6pjnyzs26wfgp0\n          </span>\n        </div>\n      </div>\n      <div id=\"XGDiff\" />\n\n      <div className=\"Social\">\n        <TwitterShareButton\n          url={\"www.xgtipping.com\"}\n          title={\"#XGTipping\"}\n          className=\"ShareButton\"\n        >\n          <TwitterIcon size={\"3em\"} round={true} />\n        </TwitterShareButton>\n        <RedditShareButton\n          url={\"www.xgtipping.com\"}\n          title={\"XGTipping\"}\n          className=\"ShareButton\"\n        >\n          <RedditIcon size={\"3em\"} round={true} />\n        </RedditShareButton>\n        <FacebookShareButton\n          url={\"www.xgtipping.com\"}\n          quote={\"XGTipping - data-driven football predictions\"}\n          className=\"ShareButton\"\n        >\n          <FacebookIcon size={\"3em\"} round={true} />\n        </FacebookShareButton>\n        <WhatsappShareButton\n          url={\"www.xgtipping.com\"}\n          title={\"XGTipping\"}\n          separator=\": \"\n          className=\"ShareButton\"\n        >\n          <WhatsappIcon size={\"3em\"} round={true} />\n        </WhatsappShareButton>\n        <TelegramShareButton\n          url={\"XGTipping\"}\n          title={\"XGTipping\"}\n          className=\"ShareButton\"\n        >\n          <TelegramIcon size={\"3em\"} round={true} />\n        </TelegramShareButton>\n      </div>\n\n      <Collapsable buttonText={\"Contact\"} element={<StripePolicies />} />\n    </div>\n  );\n}\n\nexport default function App() {\n  return (\n    <AuthProvider>\n      <Routes>\n        <Route path=\"/\" element={<AppContent />} />\n      </Routes>\n    </AuthProvider>\n  );\n}\n","/Users/gregdorward/Development/football-predictions/src/reportWebVitals.js",[],"/Users/gregdorward/Development/football-predictions/src/components/spinner.js",[],"/Users/gregdorward/Development/football-predictions/src/components/showCardPotential.js",[],"/Users/gregdorward/Development/football-predictions/src/components/createBadge.js",[],"/Users/gregdorward/Development/football-predictions/src/components/showBttsData.js",[],"/Users/gregdorward/Development/football-predictions/src/components/radio.js",[],["312","313"],"/Users/gregdorward/Development/football-predictions/src/components/Header.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/getFixtures.js",["314","315","316","317"],"/Users/gregdorward/Development/football-predictions/src/components/createStatsDiv.js",["318"],"import React, { Fragment } from \"react\";\n\nfunction Stats(props) {\n  let shouldOpen = props.clicked;\n\n  function styleForm(formIndicator) {\n    let className;\n    if (formIndicator === \"W\") {\n      className = \"win\";\n    } else if (formIndicator === \"D\") {\n      className = \"draw\";\n    } else if (formIndicator === \"L\") {\n      className = \"loss\";\n    }\n    return className;\n  }\n\n  function styleBTTS(BTTSBoolean) {\n    let className;\n    if (BTTSBoolean === \"\\u2714\") {\n      className = \"BTTSTrue\";\n    } else if (BTTSBoolean === \"\\u2718\") {\n      className = \"BTTSFalse\";\n    }\n    return className;\n  }\n\n\n\n\n  if (props.formRun) {\n    return (\n      <Fragment>\n        <ul className={props.className ? props.className : \"\"} style={props.style ? props.style : {}}>\n          <li className=\"FormHeader\">League results (most recent on right)</li>\n          <li key={`last5League`} className=\"last5League\">\n            <span className={styleForm(props.Results && props.Results[0] ? props.Results[0] : \"\")}>\n              {props.Results && props.Results[0] ? props.Results[0] : \"\"}\n            </span>\n            <span className={styleForm(props.Results && props.Results[1] ? props.Results[1] : \"\")}>\n              {props.Results && props.Results[1] ? props.Results[1] : \"\"}\n            </span>\n            <span className={styleForm(props.Results && props.Results[2] ? props.Results[2] : \"\")}>\n              {props.Results && props.Results[2] ? props.Results[2] : \"\"}\n            </span>\n            <span className={styleForm(props.Results && props.Results[3] ? props.Results[3] : \"\")}>\n              {props.Results && props.Results[3] ? props.Results[3] : \"\"}\n            </span>\n            <span className={styleForm(props.Results && props.Results[4] ? props.Results[4] : \"\")}>\n              {props.Results && props.Results[4] ? props.Results[4] : \"\"}\n            </span>\n            <span className={styleForm(props.Results && props.Results[5] ? props.Results[5] : \"\")}>\n              {props.Results && props.Results[5] ? props.Results[5] : \"\"}\n            </span>\n          </li>\n          <li className=\"FormHeader\">\n            {props.homeOrAway ? props.homeOrAway : \"N/A\"} form (most recent on right)\n          </li>\n          <li key={`last5${props.homeOrAwayResults ? props.homeOrAwayResults : \"default\"}`} className=\"FormHomeOrAway\">\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[5] ? props.ResultsHorA[5] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[5] ? props.ResultsHorA[5] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[4] ? props.ResultsHorA[4] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[4] ? props.ResultsHorA[4] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[3] ? props.ResultsHorA[3] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[3] ? props.ResultsHorA[3] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[2] ? props.ResultsHorA[2] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[2] ? props.ResultsHorA[2] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[1] ? props.ResultsHorA[1] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[1] ? props.ResultsHorA[1] : \"\"}\n            </span>\n            <span className={styleForm(props.ResultsHorA && props.ResultsHorA[0] ? props.ResultsHorA[0] : \"\")}>\n              {props.ResultsHorA && props.ResultsHorA[0] ? props.ResultsHorA[0] : \"\"}\n            </span>\n          </li>\n          <li\n            key=\"BTTSArrayHomeOrAway\"\n            className=\"BTTSArrayHomeOrAway\"\n            data-cy={props.name ? props.name + \"BTTSArrayHomeOrAway\" : \"BTTSArrayHomeOrAway\"}\n          >\n            <div className=\"BTTSResults\">{props.BTTSArray ? `BTTS` : ``}</div>\n            <span className={styleBTTS(props.BTTSArray && props.BTTSArray[5] ? props.BTTSArray[5] : \"\")}>\n              {props.BTTSArray && props.BTTSArray[5] ? props.BTTSArray[5] : \"\"}\n            </span>\n            <span className={styleBTTS(props.BTTSArray && props.BTTSArray[4] ? props.BTTSArray[4] : \"\")}>\n              {props.BTTSArray && props.BTTSArray[4] ? props.BTTSArray[4] : \"\"}\n            </span>\n            <span className={styleBTTS(props.BTTSArray && props.BTTSArray[3] ? props.BTTSArray[3] : \"\")}>\n              {props.BTTSArray && props.BTTSArray[3] ? props.BTTSArray[3] : \"\"}\n            </span>\n            <span className={styleBTTS(props.BTTSArray && props.BTTSArray[2] ? props.BTTSArray[2] : \"\")}>\n              {props.BTTSArray && props.BTTSArray[2] ? props.BTTSArray[2] : \"\"}\n            </span>\n            <span className={styleBTTS(props.BTTSArray && props.BTTSArray[1] ? props.BTTSArray[1] : \"\")}>\n              {props.BTTSArray && props.BTTSArray[1] ? props.BTTSArray[1] : \"\"}\n            </span>\n            <span className={styleBTTS(props.BTTSArray && props.BTTSArray[0] ? props.BTTSArray[0] : \"\")}>\n              {props.BTTSArray && props.BTTSArray[0] ? props.BTTSArray[0] : \"\"}\n            </span>\n          </li>\n          <div className=\"FormSummaries\">\n            {/* <li className=\"FormSummaryHome\">{props.FormTextString ? props.FormTextString : \"The below stats are only available to paying customers\"}</li> */}\n            <li className=\"StyleOfPlay\">{`Style - ${props.StyleOfPlay ? props.StyleOfPlay : \"N/A\"}`}</li>\n            <li className=\"StyleOfPlay\">{`${props.homeOrAway ? props.homeOrAway : \"N/A\"} style - ${props.StyleOfPlayHomeOrAway ? props.StyleOfPlayHomeOrAway : \"N/A\"}`}</li>\n            {/* <li className=\"FavouriteSummaryHome\">{props.FavouriteRecord ? props.FavouriteRecord : \"Graphs also only available to paying customers\"}</li> */}\n          </div>\n          <div className=\"AllStats\">\n            <li\n              key=\"TeamScored\"\n              className=\"TeamScored\"\n              data-cy={props.name ? props.name + \"teamScored\" : \"teamScored\"}\n            >\n              {`Avg goals scored - ${props.goals !== undefined ? props.goals : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamConceeded\"\n              className=\"TeamConceeded\"\n              data-cy={props.name ? props.name + \"teamConceded\" : \"teamConceded\"}\n            >\n              {`Avg goals conceeded - ${props.conceeded !== undefined ? props.conceeded : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamPossession\"\n              className=\"TeamPossession\"\n              data-cy={props.name ? props.name + \"teamPossession\" : \"teamPossession\"}\n            >\n              {`Avg possession - ${props.possession !== undefined ? props.possession : \"N/A\"}%`}\n            </li>\n            <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name ? props.name + \"teamXG\" : \"teamXG\"}>\n              {`Avg XG - ${props.XG !== undefined ? props.XG : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamXGConceded\"\n              className=\"TeamXGConceded\"\n              data-cy={props.name ? props.name + \"teamXGConceded\" : \"teamXGConceded\"}\n            >\n              {`Avg XG conceded - ${props.XGConceded !== undefined ? props.XGConceded : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamXGSwing\"\n              className=\"TeamXGSwing\"\n              data-cy={props.name ? props.name + \"teamXGSwing\" : \"teamXGSwing\"}\n            >\n              {`XG difference swing (last 5): ${\n                props.XGSwing !== undefined ? props.XGSwing.toFixed(2) : \"N/A\"\n              }`}\n            </li>\n            <li\n              key=\"goalDifference\"\n              className=\"goalDifference\"\n              data-cy={props.name ? props.name + \"goalDifference\" : \"goalDifference\"}\n            >\n              {`Goal difference : `}\n              <span>{props.goalDifference !== undefined ? props.goalDifference : \"N/A\"}</span>\n            </li>\n            <li\n              key=\"goalDifferenceHorA\"\n              className=\"goalDifferenceHorA\"\n              data-cy={props.name ? props.name + \"goalDifference\" : \"goalDifference\"}\n            >\n              {`Goal difference ${props.homeOrAway ? props.homeOrAway : \"N/A\"} : ${\n                props.goalDifferenceHomeOrAway !== undefined ? props.goalDifferenceHomeOrAway : \"N/A\"\n              }`}\n            </li>\n            <li\n              key=\"AverageSOT\"\n              className=\"AverageSOT\"\n              data-cy={props.name ? props.name + \"averageSOT\" : \"averageSOT\"}\n            >\n              {`Avg shots on target - ${props.sot !== undefined ? props.sot : \"N/A\"}`}\n            </li>\n            <li\n              key=\"DangerousAttacks\"\n              className=\"DangerousAttacks\"\n              data-cy={props.name ? props.name + \"dangerousAttacks\" : \"dangerousAttacks\"}\n            >\n              {`Avg dangerous attacks - ${props.dangerousAttacks !== undefined ? props.dangerousAttacks : \"N/A\"}`}\n            </li>\n            <li\n              key=\"LeaguePosition\"\n              className=\"LeaguePosition\"\n              data-cy={props.name ? props.name + \"leaguePosition\" : \"leaguePosition\"}\n            >\n              {`League position - ${\n                props.leaguePosition !== undefined ? props.leaguePosition : \"N/A\"\n              }`}\n            </li>\n            <li\n              key=\"LeaguePositionHomeOrAway\"\n              className=\"LeaguePositionHomeOrAway\"\n              data-cy={props.name ? props.name + \"LeaguePositionHomeOrAway\" : \"LeaguePositionHomeOrAway\"}\n            >\n              {`Position (${props.homeOrAway ? props.homeOrAway : \"N/A\"} only) - ${\n                props.homeOrAwayLeaguePosition !== undefined ? props.homeOrAwayLeaguePosition : \"N/A\"\n              }`}\n            </li>\n            <li\n              key=\"WinPercentage\"\n              className=\"WinPercentage\"\n              data-cy={props.name ? props.name + \"WinPercentage\" : \"WinPercentage\"}\n            >\n              {props.homeOrAway && props.winPercentage !== undefined && props.winPercentage !== \"N/A\" ? `${props.homeOrAway} PPG - ${props.winPercentage.toFixed(2)}` : \"N/A\"}\n            </li>\n            <li key=\"PPG\" className=\"PPG\" data-cy={props.name ? props.name + \"PPG\" : \"PPG\"}>\n              {`Season PPG - ${props.ppg !== undefined ? props.ppg : \"N/A\"}`}\n            </li>\n            <li\n              key=\"FormTrend10a\"\n              className=\"FormTrend\"\n              data-cy={props.name ? props.name + \"FormTrend10\" : \"FormTrend10\"}\n            >\n              {`Last 10 PPG: ${props.formTrend && props.formTrend[0] !== undefined ? props.formTrend[0] : \"N/A\"}`}\n            </li>\n            <li\n              key=\"FormTrend10b\"\n              className=\"FormTrend\"\n              data-cy={props.name ? props.name + \"FormTrend10\" : \"FormTrend10\"}\n            >\n              {`Last 6 PPG: ${props.formTrend && props.formTrend[1] !== undefined ? props.formTrend[1] : \"N/A\"}`}\n            </li>\n            <li\n              key=\"FormTrend10c\"\n              className=\"FormTrend\"\n              data-cy={props.name ? props.name + \"FormTrend10\" : \"FormTrend10\"}\n            >\n              {`Last 5 PPG: ${props.formTrend && props.formTrend[2] !== undefined ? props.formTrend[2] : \"N/A\"}.`}\n            </li>\n            <li\n              key=\"CardsTotal\"\n              className=\"CardsTotal\"\n              data-cy={props.name ? props.name + \"CardsTotal\" : \"CardsTotal\"}\n            >\n              {`Cards total: ${props.CardsTotal !== undefined ? props.CardsTotal : \"N/A\"}`}\n            </li>\n            <li\n              key=\"CornersAverage\"\n              className=\"CornersAverage\"\n              data-cy={props.name ? props.name + \"CornersAverage\" : \"CornersAverage\"}\n            >\n              {`Corners average: ${props.CornersAverage !== undefined ? props.CornersAverage : \"N/A\"}`}\n            </li>\n          </div>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  } else {\n    return (\n      <Fragment>\n        <ul className={props.className ? props.className : \"\"} style={props.style ? props.style : {}}>\n          <div className=\"FormSummaries\">\n            {/* <li className=\"FormSummaryHome\">{props.FormTextString ? props.FormTextString : \"The below stats are available to paying customers only\"}</li> */}\n            {/* <li className=\"FavouriteSummaryAway\">{props.FavouriteRecord ? props.FavouriteRecord : \"Graphs also only available to paying customers\"}</li> */}\n          </div>\n          <div className=\"AllStats\">\n            <li\n              key=\"TeamScored\"\n              className=\"TeamScored\"\n              data-cy={props.name ? props.name + \"teamScored\" : \"teamScored\"}\n            >\n              {`Avg goals scored - ${props.goals !== undefined ? props.goals : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamConceeded\"\n              className=\"TeamConceeded\"\n              data-cy={props.name ? props.name + \"teamConceded\" : \"teamConceded\"}\n            >\n              {`Avg goals conceeded - ${props.conceeded !== undefined ? props.conceeded : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamPossession\"\n              className=\"TeamPossession\"\n              data-cy={props.name ? props.name + \"teamPossession\" : \"teamPossession\"}\n            >\n              {`Avg possession - ${props.possession !== undefined ? props.possession : \"N/A\"}%`}\n            </li>\n            <li key=\"TeamXG\" className=\"TeamXG\" data-cy={props.name ? props.name + \"teamXG\" : \"teamXG\"}>\n              {`Avg XG - ${props.XG !== undefined ? props.XG : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamXGConceded\"\n              className=\"TeamXGConceded\"\n              data-cy={props.name ? props.name + \"teamXGConceded\" : \"teamXGConceded\"}\n            >\n              {`Avg XG conceded - ${props.XGConceded !== undefined ? props.XGConceded : \"N/A\"}`}\n            </li>\n            <li\n              key=\"TeamXGSwing\"\n              className=\"TeamXGSwing\"\n              data-cy={props.name ? props.name + \"teamXGSwing\" : \"teamXGSwing\"}\n            >\n              {`XG difference swing (last 5): ${\n                props.XGSwing !== undefined ? props.XGSwing.toFixed(2) : \"N/A\"\n              }`}\n            </li>\n            <li\n              key=\"AverageSOT\"\n              className=\"AverageSOT\"\n              data-cy={props.name ? props.name + \"averageSOT\" : \"averageSOT\"}\n            >\n              {`Avg shots on target - ${props.sot !== undefined ? props.sot : \"N/A\"}`}\n            </li>\n            <li\n              key=\"DangerousAttacks\"\n              className=\"DangerousAttacks\"\n              data-cy={props.name ? props.name + \"dangerousAttacks\" : \"dangerousAttacks\"}\n            >\n              {`Avg dangerous attacks - ${props.dangerousAttacks !== undefined ? props.dangerousAttacks : \"N/A\"}`}\n            </li>\n            <li\n              key=\"LeaguePosition\"\n              className=\"LeaguePosition\"\n              data-cy={props.name ? props.name + \"leaguePosition\" : \"leaguePosition\"}\n            >\n              {`League position - ${\n                props.leaguePosition !== undefined ? props.leaguePosition : \"N/A\"\n              }`}\n            </li>\n            <li\n              key=\"LeaguePositionHomeOrAway\"\n              className=\"LeaguePositionHomeOrAway\"\n              data-cy={props.name ? props.name + \"LeaguePositionHomeOrAway\" : \"LeaguePositionHomeOrAway\"}\n            >\n              {`Position (${props.homeOrAway ? props.homeOrAway : \"N/A\"} only) - ${\n                props.homeOrAwayLeaguePosition !== undefined ? props.homeOrAwayLeaguePosition : \"N/A\"\n              }`}\n            </li>\n            <li\n              key=\"WinPercentage\"\n              className=\"WinPercentage\"\n              data-cy={props.name ? props.name + \"WinPercentage\" : \"WinPercentage\"}\n            >\n              {props.homeOrAway && props.winPercentage !== undefined\n                ? `${props.homeOrAway} PPG - ${props.winPercentage.toFixed(2)}`\n                : \"N/A\"}\n            </li>\n            <li key=\"PPG\" className=\"PPG\" data-cy={props.name ? props.name + \"PPG\" : \"PPG\"}>\n              {`Season PPG - ${props.ppg !== undefined ? props.ppg : \"N/A\"}`}\n            </li>\n            <li\n              key=\"FormTrend10a\"\n              className=\"FormTrend\"\n              data-cy={props.name ? props.name + \"FormTrend10\" : \"FormTrend10\"}\n            >\n              {`Last 10 PPG: ${props.formTrend && props.formTrend[0] !== undefined ? props.formTrend[0] : \"N/A\"}`}\n            </li>\n            <li\n              key=\"FormTrend10b\"\n              className=\"FormTrend\"\n              data-cy={props.name ? props.name + \"FormTrend10\" : \"FormTrend10\"}\n            >\n              {`Last 6 PPG: ${props.formTrend && props.formTrend[1] !== undefined ? props.formTrend[1] : \"N/A\"}`}\n            </li>\n            <li\n              key=\"FormTrend10c\"\n              className=\"FormTrend\"\n              data-cy={props.name ? props.name + \"FormTrend10\" : \"FormTrend10\"}\n            >\n              {`Last 5 PPG: ${props.formTrend && props.formTrend[2] !== undefined ? props.formTrend[2] : \"N/A\"}.`}\n            </li>\n            <li\n              key=\"CardsTotal\"\n              className=\"CardsTotal\"\n              data-cy={props.name ? props.name + \"CardsTotal\" : \"CardsTotal\"}\n            >\n              {`Cards total: ${props.CardsTotal !== undefined ? props.CardsTotal : \"N/A\"}`}\n            </li>\n            <li\n              key=\"CornersAverage\"\n              className=\"CornersAverage\"\n              data-cy={props.name ? props.name + \"CornersAverage\" : \"CornersAverage\"}\n            >\n              {`Corners average: ${props.CornersAverage !== undefined ? props.CornersAverage : \"N/A\"}`}\n            </li>\n          </div>\n        </ul>\n        <div id=\"h2hStats\"></div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Stats;\n","/Users/gregdorward/Development/football-predictions/src/logic/getForm.js",[],"/Users/gregdorward/Development/football-predictions/src/components/Button.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/getScorePredictions.js",["319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341"],"/Users/gregdorward/Development/football-predictions/src/components/CollapsableElement.js",[],"/Users/gregdorward/Development/football-predictions/src/components/TextSection.js",[],["342","343"],"/Users/gregdorward/Development/football-predictions/src/logic/getStats.js",["344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360"],"/Users/gregdorward/Development/football-predictions/src/components/Div.js",[],"/Users/gregdorward/Development/football-predictions/src/components/CollapsableDiv.js",[],["361","362"],"/Users/gregdorward/Development/football-predictions/src/components/Increment.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/getBTTSPotential.js",[],"/Users/gregdorward/Development/football-predictions/src/components/OddsRadio.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/getTeamStats.js",["363","364"],"import ReactDOM from \"react-dom\";\nimport HeadToHead from \"../components/HeadToHead\";\nimport { Fragment } from \"react\";\nimport CustomizedTables from \"../components/Table\";\nimport { userDetail } from \"./authProvider\";\n\n\nexport async function getTeamStats(\n  id,\n  home,\n  away,\n  homeBTTS,\n  homeOnlyBTTS,\n  awayBTTS,\n  awayOnlyBTTS\n) {\n  let identifier = id;\n  let bestHomeOdds;\n  let bestHomeOddsProvider;\n  let bestAwayOdds;\n  let bestAwayOddsProvider;\n\n  let match = await fetch(\n    `${process.env.REACT_APP_EXPRESS_SERVER}match/${identifier}`\n  );\n  await match.json().then(async (match) => {\n    const matchArr = match.data.h2h.previous_matches_ids;\n    const reducedMatchArr = matchArr.slice(0, 10);\n\n    let oddsComparisonHomeArray = [];\n    let oddsComparisonAwayArray = [];\n\n    if (match.data.odds_comparison) {\n      oddsComparisonHomeArray = match.data.odds_comparison[\"FT Result\"][1];\n      oddsComparisonAwayArray = match.data.odds_comparison[\"FT Result\"][2];\n\n      let sortedHomeOdds = Object.entries(oddsComparisonHomeArray).sort(\n        (a, b) => b[1] - a[1]\n      );\n      let sortedAwayOdds = Object.entries(oddsComparisonAwayArray).sort(\n        (a, b) => b[1] - a[1]\n      );\n\n      bestHomeOddsProvider = sortedHomeOdds[0][0];\n      bestHomeOdds = sortedHomeOdds[0][1];\n      bestAwayOddsProvider = sortedAwayOdds[0][0];\n      bestAwayOdds = sortedAwayOdds[0][1];\n    } else {\n      bestHomeOddsProvider = \"N/A\";\n      bestHomeOdds = \"N/A\";\n      bestAwayOddsProvider = \"N/A\";\n      bestAwayOdds = \"N/A\";\n    }\n\n    async function getBTTSPercentage(\n      homeToal,\n      home,\n      awayTotal,\n      away,\n      fixtureHistory\n    ) {\n      let total = homeToal + home + awayTotal + away + fixtureHistory;\n      return total / 5;\n    }\n\n    async function getFairOdds(impliedProbability) {\n      let impliedProbabilityDivided = impliedProbability / 100;\n      return (1 / impliedProbabilityDivided).toFixed(2);\n    }\n\n    if (match.data.h2h.previous_matches_results.totalMatches > 0) {\n      let homeTeam = match.data.home_name;\n      let awayTeam = match.data.away_name;\n\n      let teamMappings = {\n        [homeTeam]: match.data.homeID,\n        [awayTeam]: match.data.awayID,\n      };\n\n      reducedMatchArr.sort((a, b) => b.date_unix - a.date_unix);\n\n      let date;\n      // await previousMatch.json().then(async (game) => {\n      //   previousMatchDetails = game.data;\n      //   const unixTimestamp = previousMatchDetails.date_unix;\n      //   const milliseconds = unixTimestamp * 1000;\n      //   dateObject = new Date(milliseconds);\n      //   date = `${dateObject.getDate()}/${\n      //     dateObject.getMonth() + 1\n      //   }/${dateObject.getFullYear()}`;\n\n      //   let secondToPreviousMatch;\n      //   let dateObject2;\n\n      //   // if (secondMatchExists !== false) {\n      //   //   secondToPreviousMatch = await fetch(\n      //   //     `${process.env.REACT_APP_EXPRESS_SERVER}match/${secondToLastMatch}`\n      //   //   );\n      //   //   await secondToPreviousMatch.json().then((game) => {\n      //   //     secondToPreviousMatchDetails = game.data;\n      //   //     const unixTimestamp = secondToPreviousMatchDetails.date_unix;\n      //   //     const milliseconds = unixTimestamp * 1000;\n      //   //     dateObject2 = new Date(milliseconds);\n      //   //     date2 = `${dateObject2.getDate()}/${\n      //   //       dateObject2.getMonth() + 1\n      //   //     }/${dateObject2.getFullYear()}`;\n      //   //   });\n      //   // }\n      // });\n\n      const BTTSForecast = await getBTTSPercentage(\n        homeBTTS,\n        homeOnlyBTTS,\n        awayBTTS,\n        awayOnlyBTTS,\n        match.data.h2h.betting_stats.bttsPercentage\n      );\n      const fairOddsBTTSYes = await getFairOdds(BTTSForecast);\n      const fairOddsBTTSNo = await getFairOdds(100 - BTTSForecast);\n      console.log(match.data);\n      function stripLinks(htmlString) {\n        return htmlString.replace(/<a\\b[^>]*>(.*?)<\\/a>/gi, \"$1\");\n      }\n\n      function MatchPreview({ content }) {\n        return (\n          <div\n            className=\"AIOverview\"\n            dangerouslySetInnerHTML={{ __html: content }}\n          />\n        );\n      }\n\n      let paid\n      if (userDetail){\n        paid = userDetail.isPaid\n      } else {\n        paid = false;\n      }\n\n\n      ReactDOM.render(\n        <Fragment>\n          <h2>AI Preview</h2>\n          {paid ? (\n            <MatchPreview content={match.data.gpt_en} />\n          ) : (\n            // Move ':' to be inside the same parenthesis as '?'\n            <div>AI Previews are a paid feature</div>\n          )}\n          <span className=\"AIDisclaimer\">\n            Any predictions made by the AI do not reflect the opinion of\n            XGTipping\n          </span>\n          <HeadToHead\n            className={\"PreviousMatchStats\"}\n            homeTeam={home}\n            awayTeam={away}\n            reducedArr={reducedMatchArr}\n            teamObject={teamMappings}\n            stadium={match.data.stadium_name}\n            matches={match.data.h2h.previous_matches_results.totalMatches}\n            homeWins={match.data.h2h.previous_matches_results.team_a_wins}\n            awayWins={match.data.h2h.previous_matches_results.team_b_wins}\n            draws={match.data.h2h.previous_matches_results.draw}\n            averageGoals={match.data.h2h.betting_stats.avg_goals}\n            bestHomeOdds={`${bestHomeOddsProvider} - ${bestHomeOdds}`}\n            bestAwayOdds={`${bestAwayOddsProvider} - ${bestAwayOdds}`}\n          ></HeadToHead>\n          <CustomizedTables\n            o05Stat={match.data.h2h.betting_stats.over05Percentage}\n            o15Stat={match.data.h2h.betting_stats.over15Percentage}\n            o15Forecast={match.data.o15_potential}\n            o05Odds={match.data.odds_ft_over05}\n            u05Odds={match.data.odds_ft_under05}\n            o15Odds={match.data.odds_ft_over15}\n            u15Odds={match.data.odds_ft_under15}\n            o25Stat={match.data.h2h.betting_stats.over25Percentage}\n            o25Forecast={match.data.o25_potential}\n            o25Odds={match.data.odds_ft_over25}\n            u25Odds={match.data.odds_ft_under25}\n            o35Stat={match.data.h2h.betting_stats.over35Percentage}\n            o35Forecast={match.data.o35_potential}\n            o35Odds={match.data.odds_ft_over35}\n            u35Odds={match.data.odds_ft_under35}\n            BTTSStat={match.data.h2h.betting_stats.bttsPercentage}\n            BTTSForecast={`${BTTSForecast}%`}\n            BTTSOdds={`${match.data.odds_btts_yes}\\n Fair odds: ${fairOddsBTTSYes}`}\n            BTTSOddsNo={`${match.data.odds_btts_no}\\n Fair odds: ${fairOddsBTTSNo}`}\n            CornersStat={\"–\"}\n            CornersForecast={match.data.corners_potential}\n            CornersOdds={match.data.odds_corners_over_105}\n          />\n        </Fragment>,\n        document.getElementById(`H2HStats${identifier}`)\n      );\n    } else {\n      ReactDOM.render(\n        <div>No fixture history found</div>,\n        document.getElementById(`H2HStats${identifier}`)\n      );\n    }\n  });\n}\n","/Users/gregdorward/Development/football-predictions/src/components/HeadToHead.js",[],"/Users/gregdorward/Development/football-predictions/src/components/BulletList.js",[],["365","366"],"/Users/gregdorward/Development/football-predictions/src/components/Table.js",[],"/Users/gregdorward/Development/football-predictions/src/components/LeagueTable.js",["367"],"import React, { useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Collapsable from \"../components/CollapsableElement\";\nimport TeamOfTheWeek from \"../components/TeamOfTheWeek\";\nimport TeamOfTheSeason from \"../components/TeamOfTheSeason\";\n\nexport var toggleState = false;\nexport var setIsOff = false;\n\nconst upArrow = \"\\u{25B2}\";\n\nconst StyledTableCell2 = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"rgba(226, 226, 226, 1)\",\n    color: \"white\",\n    padding: \"0.35em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    textAlign: \"left\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    fontSize: \"1.9em\",\n    textAlign: \"left\",\n    fontFamily: \"inherit\",\n    padding: \"0.5em\",\n    paddingTop: \"0.75em\",\n    paddingBottom: \"0.75em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"#030061\",\n  },\n}))(TableCell);\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"white\",\n    color: \"#030061\",\n    padding: \"0.5em\",\n    paddingTop: \"1em\",\n    paddingBottom: \"1em\",\n    textAlign: \"center\",\n    fontSize: \"1.9em\",\n    fontFamily: \"inherit\",\n    // border: \"none\",\n    margin: \"none\",\n  },\n  body: {\n    // backgroundColor: \"#030061\",\n    fontSize: \"1.9em\",\n    textAlign: \"center\",\n    fontFamily: \"inherit\",\n    padding: \"0.35em\",\n    paddingTop: \"1em\",\n    paddingBottom: \"1em\",\n    // border: \"none\",\n    margin: \"none\",\n    color: \"#030061\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#rgba(226, 226, 226, 0.424)\",\n      textAlign: \"center\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#rgba(226, 226, 226, 1)\",\n      textAlign: \"center\",\n    },\n  },\n}))(TableRow);\n\nfunction styleForm(formIndicator) {\n  let className;\n  if (formIndicator === \"W\") {\n    className = \"winLeague\";\n  } else if (formIndicator === \"D\") {\n    className = \"drawLeague\";\n  } else if (formIndicator === \"L\") {\n    className = \"lossLeague\";\n  }\n  return className;\n}\n\nexport default function LeagueTable(props) {\n  [toggleState, setIsOff] = useState(false);\n  console.log(props)\n\n  let rows = props.Teams.map((team, i) => (\n    <StyledTableRow key={`${props.Key}row${i}`}>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${i + 1}`}\n      </StyledTableCell>\n      <StyledTableCell2 component=\"th\" scope=\"row\" style={{ width: \"15em\" }}>\n        {`${team.Name}`}\n      </StyledTableCell2>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Played}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Wins}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Draws}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Losses}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.For}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Against}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.GoalDifference}`}\n      </StyledTableCell>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {`${team.Points}`}\n      </StyledTableCell>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ textAlign: \"center\" }}\n      >\n        <span className={styleForm(team.Form[0])}>\n          {team.Form[0] !== undefined ? team.Form[0] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[1])}>\n          {team.Form[1] !== undefined ? team.Form[1] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[2])}>\n          {team.Form[2] !== undefined ? team.Form[2] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[3])}>\n          {team.Form[3] !== undefined ? team.Form[3] : \"\"}\n        </span>\n        <span className={styleForm(team.Form[4])}>\n          {team.Form[4] !== undefined ? team.Form[4] : \"\"}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  ));\n\n  const leagueResults = [];\n  let singleResult;\n  if (props.Results) {\n    props.Results.forEach((result) => {\n      singleResult = (\n        <div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_xg}</span>\n            <span className=\"column\">XG</span>\n            <span className=\"column\">{result.team_b_xg}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shots}</span>\n            <span className=\"column\">Shots</span>\n            <span className=\"column\">{result.team_b_shots}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shotsOnTarget}</span>\n            <span className=\"column\">SOT</span>\n            <span className=\"column\">{result.team_b_shotsOnTarget}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_dangerous_attacks}</span>\n            <span className=\"column\">Dangerous Attacks</span>\n            <span className=\"column\">{result.team_b_dangerous_attacks}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_possession}%</span>\n            <span className=\"column\">Possession</span>\n            <span className=\"column\">{result.team_b_possession}%</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_red_cards}</span>\n            <span className=\"column\">Red cards</span>\n            <span className=\"column\">{result.team_b_red_cards}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.odds_ft_1}</span>\n            <span className=\"column\">Odds (pre-match)</span>\n            <span className=\"column\">{result.odds_ft_2}</span>\n          </div>\n        </div>\n      );\n\n      leagueResults.push(\n        <Collapsable\n          classNameButton=\"ResultButton\"\n          buttonText={\n            <div className=\"ResultRowOverview\">\n              <div className=\"columnOverviewHome\">{result.home_name}</div>\n              <span className=\"columnOverviewScore\">\n                {result.homeGoalCount} : {result.awayGoalCount}\n              </span>\n              <div className=\"columnOverviewAway\">{result.away_name}</div>\n            </div>\n          }\n          element={singleResult}\n        />\n      );\n    });\n  }\n\n  const leagueResultsOlder = [];\n  if (props.LastWeeksResults) {\n    props.LastWeeksResults.forEach((result) => {\n      singleResult = (\n        <div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_xg}</span>\n            <span className=\"column\">XG</span>\n            <span className=\"column\">{result.team_b_xg}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shots}</span>\n            <span className=\"column\">Shots</span>\n            <span className=\"column\">{result.team_b_shots}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_shotsOnTarget}</span>\n            <span className=\"column\">SOT</span>\n            <span className=\"column\">{result.team_b_shotsOnTarget}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_dangerous_attacks}</span>\n            <span className=\"column\">Dangerous Attacks</span>\n            <span className=\"column\">{result.team_b_dangerous_attacks}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_possession}</span>\n            <span className=\"column\">Possession</span>\n            <span className=\"column\">{result.team_b_possession}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.team_a_red_cards}</span>\n            <span className=\"column\">Red cards</span>\n            <span className=\"column\">{result.team_b_red_cards}</span>\n          </div>\n          <div className=\"ResultRow\">\n            <span className=\"column\">{result.odds_ft_1}</span>\n            <span className=\"column\">Odds (pre-match)</span>\n            <span className=\"column\">{result.odds_ft_2}</span>\n          </div>\n        </div>\n      );\n\n      leagueResultsOlder.push(\n        <Collapsable\n          classNameButton=\"ResultButton\"\n          buttonText={\n            <div className=\"ResultRowOverview\">\n              <div className=\"columnOverviewHome\">{result.home_name}</div>\n              <span className=\"columnOverviewScore\">\n                {result.homeGoalCount} : {result.awayGoalCount}\n              </span>\n              <div className=\"columnOverviewAway\">{result.away_name}</div>\n            </div>\n          }\n          element={singleResult}\n        />\n      );\n    });\n  }\n\n  function getTopScorersTeam(id) {\n    let found = props.Teams.find((team) => team.ID === id);\n    return found.Name;\n  }\n\n  async function sorted(league, value, order) {\n    let sortedByForm;\n    if (order === \"desc\") {\n      sortedByForm = league.sort((a, b) => b[value] - a[value]);\n    } else {\n      sortedByForm = league.sort((a, b) => a[value] - b[value]);\n    }\n    setIsOff(!toggleState);\n    return sortedByForm;\n  }\n\n  if (\n    // props.GamesPlayed > 3 &&\n    props.Teams[0].LeagueID !== 13973 && //MLS\n    props.Teams[0].LeagueID !== 12933 &&//UKNorth&South\n    props.Teams[0].LeagueID !== 12327 && //Europa\n    props.Teams[0].LeagueID !== 12321 //ChampionsLeague\n\n  ) {\n    for (let i = 0; i < props.Teams.length; i++) {\n      console.log(rows)\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <Table\n            className=\"Table\"\n            aria-label=\"customized table\"\n            key={props.Key}\n            style={{ marginTop: \"2em\", marginBottom: \"1em\" }}\n          >\n            <TableHead>\n              <TableRow>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell>Pld</StyledTableCell>\n                <StyledTableCell>W</StyledTableCell>\n                <StyledTableCell>D</StyledTableCell>\n                <StyledTableCell>L</StyledTableCell>\n                <StyledTableCell>GF</StyledTableCell>\n                <StyledTableCell>GA</StyledTableCell>\n                <StyledTableCell>GD</StyledTableCell>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"Points\", \"desc\")}\n                  >\n                    Pts {upArrow}\n                  </button>\n                </td>\n                <td>\n                  <button\n                    className=\"SortedColumn\"\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => sorted(props.Teams, \"LastXPoints\", \"desc\")}\n                  >\n                    Last 5 {upArrow}\n                  </button>\n                </td>\n              </TableRow>\n            </TableHead>\n            <TableBody>{rows}</TableBody>\n          </Table>\n          <h5>{`${props.mostRecentGameweek} results`}</h5>\n          <div className=\"ResultsList\" id=\"ResultsList\">\n            <ul>{leagueResults}</ul>\n          </div>\n          {props.Teams[0].LeagueID === 12325 && <TeamOfTheSeason />} {/* Conditional render */}\n          <div className=\"LeagueStatisticsHeader\">League Statistics</div>\n          <div className=\"LeagueStatistics\">\n          <ul className=\"LeagueStatsColumn\">\n              <li>Average home goals: {props.Stats.seasonAVG_home}</li>\n              <li>Average away goals: {props.Stats.seasonAVG_away}</li>\n              <li>BTTS: {props.Stats.seasonBTTSPercentage}%</li>\n              <li>\n                Over 0.5 goals: {props.Stats.seasonOver05Percentage_overall}%\n              </li>\n              <li>\n                Over 1.5 goals: {props.Stats.seasonOver15Percentage_overall}%\n              </li>\n              <li>\n                Over 2.5 goals: {props.Stats.seasonOver25Percentage_overall}%\n              </li>\n              <li>\n                Over 3.5 goals: {props.Stats.seasonOver35Percentage_overall}%\n              </li>\n              <li>\n                Over 4.5 goals: {props.Stats.seasonOver45Percentage_overall}%\n              </li>\n            </ul>\n            <ul className=\"LeagueStatsColumn\">\n              <li>\n                Over 7.5 corners: {props.Stats.over75CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 8.5 corners: {props.Stats.over85CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 9.5 corners: {props.Stats.over95CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 10.5 corners:{\" \"}\n                {props.Stats.over105CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 11.5 corners:{\" \"}\n                {props.Stats.over115CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 12.5 corners:{\" \"}\n                {props.Stats.over125CornersPercentage_overall}%\n              </li>\n              <li>Corners average: {props.Stats.cornersAVG_overall}</li>\n              <li>Cards average: {props.Stats.cardsAVG_overall}</li>\n            </ul>\n            <ul className=\"TopScorersColumn\">\n              <h4>Top scorers</h4>\n              <li>\n                {props.Stats.top_scorers[0].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[0].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[0].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[1].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[1].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[1].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[2].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[2].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[2].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[3].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[3].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[3].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[4].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[4].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[4].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[5].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[5].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[5].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[6].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[6].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[6].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[7].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[7].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[7].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[8].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[8].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[8].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[9].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[9].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[9].goals_overall}\n              </li>\n            </ul>\n          </div>\n        </TableContainer>\n      );\n    }\n  } else if (props.Teams[0].LeagueID === 4340) {\n    return null;\n  } else if (\n    props.Teams[0].LeagueID === 13973 && //MLS\n    props.Teams[0].LeagueID === 12933 &&//UKNorth&South\n    props.Teams[0].LeagueID === 12327 && //Europa\n    props.Teams[0].LeagueID === 12321 //ChampionsLeague\n  ) {\n    for (let i = 0; i < props.Teams.length; i++) {\n      return (\n        <TableContainer component={Paper} className=\"StatsTable\">\n          <div className=\"LeagueStatisticsHeader\">League Statistics</div>\n          {/* <TeamOfTheWeek></TeamOfTheWeek>\n          <TeamOfTheSeason></TeamOfTheSeason> */}\n          <div className=\"LeagueStatistics\">\n            <ul className=\"LeagueStatsColumn\">\n              <li>Average home goals: {props.Stats.seasonAVG_home}</li>\n              <li>Average away goals: {props.Stats.seasonAVG_away}</li>\n              <li>BTTS: {props.Stats.seasonBTTSPercentage}%</li>\n              <li>\n                Over 0.5 goals: {props.Stats.seasonOver05Percentage_overall}%\n              </li>\n              <li>\n                Over 1.5 goals: {props.Stats.seasonOver15Percentage_overall}%\n              </li>\n              <li>\n                Over 2.5 goals: {props.Stats.seasonOver25Percentage_overall}%\n              </li>\n              <li>\n                Over 3.5 goals: {props.Stats.seasonOver35Percentage_overall}%\n              </li>\n              <li>\n                Over 4.5 goals: {props.Stats.seasonOver45Percentage_overall}%\n              </li>\n            </ul>\n            <ul className=\"LeagueStatsColumn\">\n              <li>\n                Over 7.5 corners: {props.Stats.over75CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 8.5 corners: {props.Stats.over85CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 9.5 corners: {props.Stats.over95CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 10.5 corners:{\" \"}\n                {props.Stats.over105CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 11.5 corners:{\" \"}\n                {props.Stats.over115CornersPercentage_overall}%\n              </li>\n              <li>\n                Over 12.5 corners:{\" \"}\n                {props.Stats.over125CornersPercentage_overall}%\n              </li>\n              <li>Corners average: {props.Stats.cornersAVG_overall}</li>\n              <li>Cards average: {props.Stats.cardsAVG_overall}</li>\n            </ul>\n            <ul className=\"TopScorersColumn\">\n              <h4>Top scorers</h4>\n              <li>\n                {props.Stats.top_scorers[0].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[0].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[0].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[1].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[1].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[1].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[2].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[2].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[2].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[3].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[3].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[3].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[4].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[4].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[4].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[5].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[5].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[5].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[6].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[6].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[6].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[7].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[7].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[7].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[8].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[8].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[8].goals_overall}\n              </li>\n              <li>\n                {props.Stats.top_scorers[9].known_as} (\n                {getTopScorersTeam(props.Stats.top_scorers[9].club_team_id)}):{\" \"}\n                {props.Stats.top_scorers[9].goals_overall}\n              </li>\n            </ul>\n          </div>\n        </TableContainer>\n      );\n    }\n  }\n}\n","/Users/gregdorward/Development/football-predictions/src/components/Fixture.js",["368","369"],"import React, { Fragment, useState } from \"react\";\nimport { CreateBadge } from \"./createBadge\";\nimport { createStatsDiv } from \"../logic/getStats\";\nimport { renderTable } from \"../logic/getFixtures\";\nimport { allLeagueResultsArrayOfObjects } from \"../logic/getFixtures\";\nimport { useDispatch } from \"react-redux\";\nimport { setData } from \"../logic/dataSlice\";\nimport { Provider } from \"react-redux\";\nimport store from \"../logic/store\"; // Import your Redux store\nimport { formObjectHome } from \"../logic/getScorePredictions\";\nimport { clicked } from \"../logic/getScorePredictions\";\nimport { userDetail } from \"../logic/authProvider\";\nimport { checkUserPaidStatus } from \"../logic/hasUserPaid\";\nimport GameStats from \"./GameStats\";\n\nlet resultValue;\nlet paid;\nvar count;\nlet mockValue;\nvar setCount;\nfunction toggle(bool) {\n  count = !bool;\n  return count;\n}\n\nfunction GetDivider(fixture, mock) {\n  const matchStatus = fixture.status;\n  let isPrediction = resultValue;\n\n  if (fixture.fixture.omit === true && matchStatus !== \"complete\") {\n    isPrediction = true;\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"Omitted\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (mockValue === true && matchStatus === \"complete\") {\n    isPrediction = false;\n    return (\n      <Fragment>\n        <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n        <div\n          className=\"CorrectScore\"\n          key={fixture.fixture.homeTeam}\n          data-cy={\"score-\" + fixture.fixture.id}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (mockValue === true && matchStatus !== \"complete\") {\n    isPrediction = true;\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  } else if (isPrediction === false && matchStatus !== \"complete\") {\n    return (\n      <div className=\"divider\" data-cy={\"divider-\" + fixture.fixture.id}>\n        {\"V\"}\n      </div>\n    );\n  } else if (isPrediction === false && matchStatus === \"complete\") {\n    return (\n      <div\n        className=\"Result\"\n        data-cy={\"result-\" + fixture.fixture.id}\n      >{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n    );\n  } else if (isPrediction === true && matchStatus === \"complete\") {\n    let outcome;\n    let prediction;\n\n    switch (true) {\n      case fixture.fixture.homeGoals > fixture.fixture.awayGoals:\n        outcome = 0;\n        fixture.fixture.winner = fixture.fixture.homeTeam;\n        fixture.fixture.outcome = \"homeWin\";\n        break;\n      case fixture.fixture.homeGoals === fixture.fixture.awayGoals:\n        outcome = 1;\n        fixture.fixture.winner = \"draw\";\n        fixture.fixture.outcome = \"draw\";\n\n        break;\n      case fixture.fixture.homeGoals < fixture.fixture.awayGoals:\n        outcome = 2;\n        fixture.fixture.winner = fixture.fixture.awayTeam;\n        fixture.fixture.outcome = \"awayWin\";\n\n        break;\n      default:\n        break;\n    }\n\n    switch (true) {\n      case fixture.fixture.goalsA > fixture.fixture.goalsB:\n        prediction = 0;\n        break;\n      case fixture.fixture.goalsA === fixture.fixture.goalsB:\n        prediction = 1;\n        break;\n      case fixture.fixture.goalsA < fixture.fixture.goalsB:\n        prediction = 2;\n        break;\n      default:\n        break;\n    }\n\n    if (fixture.fixture.omit === true) {\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"Omitted\"\n            key={fixture.fixture.homeTeam}\n            data-cy={\"score-\" + fixture.fixture.id}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    } else if (outcome === prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        switch (true) {\n          case outcome === 0:\n            fixture.fixture.profit = fixture.fixture.homeOdds;\n            break;\n          case outcome === 1:\n            fixture.fixture.profit = fixture.fixture.drawOdds;\n            break;\n          case outcome === 2:\n            fixture.fixture.profit = fixture.fixture.awayOdds;\n            break;\n          default:\n            break;\n        }\n      } else fixture.fixture.profit = 1;\n\n      if (\n        fixture.fixture.goalsA === fixture.fixture.homeGoals &&\n        fixture.fixture.goalsB === fixture.fixture.awayGoals\n      ) {\n        fixture.fixture.exactScore = true;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"ExactScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      } else {\n        fixture.fixture.exactScore = false;\n        return (\n          <Fragment>\n            <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n            <div\n              className=\"CorrectScore\"\n              key={fixture.fixture.homeTeam}\n              data-cy={\"score-\" + fixture.fixture.id}\n            >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n          </Fragment>\n        );\n      }\n    } else if (outcome !== prediction) {\n      if (fixture.fixture.homeOdds !== 0) {\n        fixture.fixture.profit = 0;\n      } else {\n        fixture.fixture.profit = 1;\n      }\n      fixture.fixture.exactScore = false;\n      return (\n        <Fragment>\n          <div className=\"Result\">{`${fixture.fixture.homeGoals} - ${fixture.fixture.awayGoals}`}</div>\n          <div\n            className=\"IncorrectScore\"\n            key={fixture.fixture.awayTeam}\n          >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n        </Fragment>\n      );\n    }\n  } else {\n    return (\n      <Fragment>\n        <div className=\"KOTime\">{`${fixture.fixture.time}`}</div>\n        <div\n          className=\"score\"\n          key={fixture.fixture.awayTeam}\n        >{`${fixture.fixture.goalsA} - ${fixture.fixture.goalsB}`}</div>\n      </Fragment>\n    );\n  }\n}\n\nfunction renderLeagueName(fixture, mock) {\n  mockValue = mock;\n\n  let name = fixture.leagueName;\n  let id =\n    allLeagueResultsArrayOfObjects.length > 0\n      ? allLeagueResultsArrayOfObjects[fixture.leagueIndex].id\n      : null;\n  if (name === null || mock === true) {\n    return <div></div>;\n  } else {\n    return (\n      <div>\n        <div\n          className=\"leagueName\"\n          id={`league${id}`}\n          key={`leagueName${id}div`}\n          onClick={() =>\n            renderTable(\n              fixture.leagueIndex,\n              allLeagueResultsArrayOfObjects[fixture.leagueIndex],\n              id\n            )\n          }\n        >\n          {fixture.leagueName} &#9776;\n        </div>\n        <div\n          className=\"LeagueTable\"\n          key={`leagueName${id}`}\n          id={`leagueName${id}`}\n        ></div>\n      </div>\n    );\n  }\n}\n\nconst downArrow = \"\\u{2195}\";\nconst rightArrow = \"\\u{29C9}\";\n\nexport let testing;\n\nfunction SingleFixture({ fixture, count, mock }) {\n  const dispatch = useDispatch();\n  const [showGameStats, setShowGameStats] = useState(false); // State to control GameStats visibility\n\n  function StoreData() {\n    const fixtureDetails = {\n      id: fixture.id,\n      homeTeamName: fixture.homeTeam,\n      homeId: fixture.homeId,\n      homeTeamBadge: fixture.homeBadge,\n      awayTeamName: fixture.awayTeam,\n      awayId: fixture.awayId,\n      awayTeamBadge: fixture.awayBadge,\n      stadium: fixture.stadium,\n      time: fixture.time,\n      homeGoals: fixture.goalsA,\n      awayGoals: fixture.goalsB,\n    };\n\n    const homeDetails = {\n      \"Attacking Strength\": fixture.formHome.attackingStrength,\n      \"Defensive Strength\": fixture.formHome.defensiveStrength,\n    };\n\n    const awayDetails = {\n      \"Attacking Strength\": fixture.formAway.attackingStrength,\n      \"Defensive Strength\": fixture.formAway.defensiveStrength,\n    };\n\n    const dataToSend = {\n      key1: \"value1\",\n      key2: \"value2\",\n    };\n    fixture.formHome.defensiveMetrics[\"Clean Sheet Percentage\"] =\n      fixture.formHome.CleanSheetPercentage;\n    fixture.formAway.defensiveMetrics[\"Clean Sheet Percentage\"] =\n      fixture.formAway.CleanSheetPercentage;\n\n    localStorage.setItem(\n      \"homeForm\",\n      JSON.stringify(fixture.formHome.attackingMetrics)\n    );\n    localStorage.setItem(\n      \"homeFormDef\",\n      JSON.stringify(fixture.formHome.defensiveMetrics)\n    );\n    localStorage.setItem(\n      \"allTeamResultsHome\",\n      JSON.stringify(fixture.formHome.allTeamResults)\n    );\n    localStorage.setItem(\"homeDetails\", JSON.stringify(homeDetails));\n\n    localStorage.setItem(\n      \"awayForm\",\n      JSON.stringify(fixture.formAway.attackingMetrics)\n    );\n    localStorage.setItem(\n      \"awayFormDef\",\n      JSON.stringify(fixture.formAway.defensiveMetrics)\n    );\n    localStorage.setItem(\n      \"allTeamResultsAway\",\n      JSON.stringify(fixture.formAway.allTeamResults)\n    );\n    localStorage.setItem(\"awayDetails\", JSON.stringify(awayDetails));\n\n    localStorage.setItem(\"fixtureDetails\", JSON.stringify(fixtureDetails));\n\n    dispatch(setData(dataToSend));\n  }\n\n  async function handleButtonClick(game) {\n    if(userDetail){\n      paid = await checkUserPaidStatus(userDetail.uid);\n      if (clicked === true && paid) {\n        StoreData(formObjectHome);\n        window.open(\"/#/fixture\");\n      } else {\n        alert(\"Premium feature only\");\n        return;\n      }\n    } else paid = false;\n    \n  }\n\n  const handleGameStatsClick = () => {\n    //Set show GameStats to true and set local storage\n    StoreData();\n    setShowGameStats(!showGameStats); // Toggle the GameStats visibility\n  };\n\n  return (\n    <div key={fixture.game}>\n      {renderLeagueName(fixture, mock)}\n      <div className={`individualFixtureContainer${fixture.omit}`}>\n        <li\n          className={`individualFixture${fixture.omit}`}\n          key={fixture.id}\n          data-cy={fixture.id}\n        >\n          <div className=\"HomeOdds\">{fixture.fractionHome}</div>\n          <div className=\"homeTeam\">{fixture.homeTeam}</div>\n          <GetDivider\n            result={resultValue}\n            status={fixture.status}\n            fixture={fixture}\n          />\n          {/* <div className=\"divider\">{\"V\"}</div> */}\n          <div className=\"awayTeam\">{fixture.awayTeam}</div>\n          <CreateBadge\n            image={fixture.homeBadge}\n            ClassName=\"HomeBadge\"\n            alt=\"Home team badge\"\n            flexShrink={5}\n          />\n          <CreateBadge\n            image={fixture.awayBadge}\n            ClassName=\"AwayBadge\"\n            alt=\"Away team badge\"\n          />\n          <div className=\"AwayOdds\">{fixture.fractionAway}</div>\n        </li>\n        <button\n          className=\"GameStats\"\n          onClick={handleGameStatsClick} // Update onClick\n          onMouseDown={() => (count = toggle(count))}\n        >\n          Game overview {downArrow}\n        </button>\n        <button\n          className=\"GameStatsTwo\"\n          onClick={() => handleButtonClick(fixture)}\n        >\n          More detail {rightArrow}\n        </button>\n        {/* <Checkbox/> */}\n      </div>\n      {showGameStats && (\n        <GameStats\n          game={fixture}\n          displayBool={true}\n        />\n      )}{\" \"}\n      <div id={\"stats\" + fixture.homeTeam} />\n      <div className=\"MatchHistory\" id={\"history\" + fixture.homeTeam} />\n    </div>\n  );\n}\n\nconst List = ({ fixtures, mock }) => (\n  <div>\n    <div id=\"Headers\"></div>\n    <ul className=\"FixtureList\" id=\"FixtureList\">\n      {fixtures.map((fixture, i) => (\n        <SingleFixture\n          fixture={fixture}\n          key={fixture.game}\n          count={count}\n          mock={mock}\n        />\n      ))}\n    </ul>\n  </div>\n);\n\nexport function Fixture(props) {\n  [count, setCount] = useState(false);\n  resultValue = props.result;\n  return (\n    <Provider store={store}>\n      <List\n        fixtures={props.fixtures}\n        result={resultValue}\n        count={count}\n        mock={props.mock}\n      />\n      {!props.paid && props.capped === true && (\n        <div>\n          {props.originalLength} games have been capped at 15 for free users\n          with full stats available for those returned - sign up for access to\n          40+ leagues and cups\n        </div>\n      )}{\" \"}\n    </Provider>\n  );\n}\n","/Users/gregdorward/Development/football-predictions/src/components/KofiButton.js",[],["370","371"],"/Users/gregdorward/Development/football-predictions/src/components/Chart.js",["372","373"],"// import { light } from \"@material-ui/core/styles/createPalette\";\n// import { toBePartiallyChecked } from \"@testing-library/jest-dom/dist/matchers\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  ArcElement,\n  LineElement,\n  Filler,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  SubTitle,\n} from \"chart.js\";\nimport { Line, Radar, Bar, Doughnut } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  ArcElement,\n  Filler,\n  BarElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  SubTitle\n);\n\nexport function Chart(props) {\n  let length;\n  let depth;\n\n  if (props.type === \"Points over time\") {\n    length = props.data1.length * 3;\n    depth = 0;\n  } else if (props.type === \"Rolling average points over last 10\") {\n    length = Math.abs(props.height);\n    depth = 0;\n  } else if (Math.abs(props.height) > Math.abs(props.depth)) {\n    length = Math.abs(props.height);\n    depth = -Math.abs(props.height);\n  } else if (Math.abs(props.height) < Math.abs(props.depth)) {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  } else {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  }\n\n  const options = {\n    color: \"#030061\",\n    responsive: true,\n    aspectRatio: 1.2,\n    maintainAspectRatio: true,\n    layout: {\n      padding: 3,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    scales: {\n      y: {\n        suggestedMin: depth,\n        suggestedMax: length,\n        // suggestedMax: Math.max(...props.data1) > 3 ? Math.max(...props.data1) : 3,\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          font: {\n            size: 12,\n          },\n        },\n      },\n      x: {\n        title: {\n          display: false,\n          text: \"Last X Games\",\n          font: {\n            size: 14,\n          },\n        },\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          display: false,\n          font: {\n            size: 14,\n          },\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 5,\n        },\n      },\n      title: {\n        display: true,\n        text: props.type,\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  const labels = Array.from(props.data1.keys());\n\n  let data = {\n    labels,\n    datasets: [\n      {\n        label: props.team1,\n        font: {\n          color: \"black\",\n        },\n        data: props.data1,\n        borderColor: \"#030061\",\n        borderWidth: 3,\n        backgroundColor: \"#030061\",\n        tension: props.tension,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        borderColor: \"#970d00\",\n        borderWidth: 3,\n        backgroundColor: \"#970d00\",\n        tension: props.tension,\n      }\n    ],\n  };\n\n  return <Line options={options} data={data} />;\n}\n\nexport function MultilineChart(props) {\n  let length;\n  let depth;\n\n  if (props.type === \"Points over time\") {\n    length = props.data1.length * 3;\n    depth = 0;\n  } else if (props.type === \"Rolling average points over last 10\") {\n    length = Math.abs(props.height);\n    depth = 0;\n  } else if (Math.abs(props.height) > Math.abs(props.depth)) {\n    length = Math.abs(props.height);\n    depth = -Math.abs(props.height);\n  } else if (Math.abs(props.height) < Math.abs(props.depth)) {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  } else {\n    length = Math.abs(props.depth);\n    depth = -Math.abs(props.depth);\n  }\n\n  const options = {\n    color: \"#030061\",\n    responsive: true,\n    aspectRatio: 1.2,\n    maintainAspectRatio: true,\n    layout: {\n      padding: 3,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    scales: {\n      y: {\n        suggestedMin: depth,\n        suggestedMax: length,\n        // suggestedMax: Math.max(...props.data1) > 3 ? Math.max(...props.data1) : 3,\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          font: {\n            size: 12,\n          },\n        },\n      },\n      x: {\n        title: {\n          display: false,\n          text: \"Last X Games\",\n          font: {\n            size: 14,\n          },\n        },\n        grid: {\n          borderWidth: 1,\n          borderColor: \"black\",\n        },\n        ticks: {\n          display: false,\n          font: {\n            size: 14,\n          },\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 5,\n        },\n      },\n      title: {\n        display: true,\n        text: props.type,\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  const labels = Array.from(props.data1.keys());\n\n  let data = {\n    labels,\n    datasets: [\n      {\n        label: props.team1,\n        font: {\n          color: \"black\",\n        },\n        data: props.data1,\n        borderColor: \"#030061\",\n        borderWidth: 3,\n        backgroundColor: \"#030061\",\n        tension: props.tension,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        borderColor: \"#970d00\",\n        borderWidth: 3,\n        backgroundColor: \"#970d00\",\n        tension: props.tension,\n      },\n      {\n        label: `${props.team1} XG Diff`,\n        font: {\n          color: \"black\",\n        },\n        data: props.data3,\n        borderColor: \"#0600d6\",\n        borderWidth: 3,\n        backgroundColor: \"#0600d6\",\n        tension: props.tension,\n        hidden: true,\n      },\n      {\n        label: `${props.team2} XG Diff`,\n        font: {\n          color: \"black\",\n        },\n        data: props.data4,\n        borderColor: \"#be1000\",\n        borderWidth: 3,\n        backgroundColor: \"#be1000\",\n        tension: props.tension,\n        hidden: true,\n      },\n    ],\n  };\n\n  return <Line options={options} data={data} />;\n}\n\n\nexport function DoughnutChart(props) {\n  const options = {\n    color: \"#030061\",\n\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 10,\n          color: \"#030061\",\n        },\n      },\n      title: {\n        display: true,\n        text: \"XG Tipping Form Comparison\",\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  const data = {\n    labels: [props.homeTeam, props.awayTeam],\n    datasets: [\n      {\n        data: props.data,\n        backgroundColor: [\"#030061\", \"#970d00\"],\n        rotation: 270,\n        hoverOffset: 4,\n        cutout: \"75%\",\n        circumference: 180,\n      },\n    ],\n  };\n\n  const config = {\n    type: \"doughnut\",\n    data: data,\n  };\n\n  return <Doughnut options={options} data={data} />;\n}\n\nexport function RadarChart(props) {\n  const options = {\n    color: \"#030061\",\n    scales: {\n      r: {\n        angleLines: {\n          display: false,\n        },\n        suggestedMin: 0,\n        suggestedMax: 1,\n        ticks: {\n          precision: 0,\n          display: false,\n        },\n        // grid: {\n        //     circular: true,\n        //   }\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n\n        labels: {\n          boxHeight: 10,\n          color: \"#030061\",\n        },\n      },\n      title: {\n        display: true,\n        text: props.title,\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  let data = {\n    labels: [\n      \"Attack rating\",\n      \"Defence rating\",\n      \"Ball retention\",\n      \"XG For\",\n      \"XG Against\",\n      \"Directness\",\n      \"Attacking precision\",\n    ],\n    datasets: [\n      {\n        label: props.team1,\n        data: props.data,\n        fill: true,\n        backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n        borderColor: \"#030061\",\n        pointBackgroundColor: \"#030061\",\n        pointBorderColor: \"#fff\",\n        pointHoverBackgroundColor: \"#fff\",\n        pointHoverBorderColor: \"rgb(255, 99, 132)\",\n        borderWidth: 2,\n      },\n      {\n        label: props.team2,\n        data: props.data2,\n        fill: true,\n        backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n        borderColor: \"#970d00\",\n        pointBackgroundColor: \"#970d00\",\n        pointBorderColor: \"#fff\",\n        pointHoverBackgroundColor: \"#fff\",\n        pointHoverBorderColor: \"rgb(54, 162, 235)\",\n        borderWidth: 2,\n      },\n    ],\n  };\n\n  return <Radar options={options} data={data} />;\n}\n\nexport function BarChart(props) {\n  const datasetOne = props.data1;\n  const datasetTwo = props.data2;\n  const sum = datasetTwo.map(function (num, idx) {\n    return num - datasetOne[idx];\n  });\n\n  const max = Math.max(...sum);\n  const min = Math.min(...sum);\n\n  const largest = findLargestNum(max, min);\n\n  function findLargestNum(numOne, numTwo) {\n    const tempArr = [];\n    const firstNum = Math.abs(numOne);\n    const secondNum = Math.abs(numTwo);\n    tempArr.push(firstNum, secondNum);\n\n    return Math.max(...tempArr);\n  }\n\n  const options = {\n    color: \"#030061\",\n    indexAxis: \"y\",\n    // Elements options apply to all of the options unless overridden in a dataset\n    // In this case, we are setting the border of each horizontal bar to be 2px wide\n    aspectRatio: 1.3,\n    elements: {\n      bar: {\n        borderWidth: 2,\n      },\n    },\n    scales: {\n      x: {\n        min: -4,\n        max: 4,\n        ticks: {\n          display: false,\n        },\n      },\n      y: {\n        ticks: {\n          font: {\n            size: 10,\n          },\n        },\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: false,\n      },\n      title: {\n        display: true,\n        text: props.text,\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n    },\n  };\n\n  const labels = [\n    \"Highest Goals\",\n    \"Fewest Conceeded\",\n    \"PPG\",\n    \"Highest XG\",\n    \"Fewest XG Conceeded\",\n    \"Shots On Target\",\n    \"Dangerous Attacks\",\n    \"Av. Possession\",\n    \"Home/Away Goal Diff\",\n    \"Corners\",\n  ];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        // label: 'Dataset 1',\n        legend: {\n          display: false,\n        },\n        data: sum,\n        backgroundColor(context) {\n          const index = context.dataIndex;\n          const value = context.dataset.data[index];\n          return value < 0 ? \"#030061\" : \"#970d00\";\n        },\n      },\n    ],\n  };\n\n  return <Bar options={options} data={data} />;\n}\n\nexport function BarChartTwo(props) {\n  const dataset = [props.data1, props.data2]\n\n  const options = {\n    color: \"#030061\",\n    indexAxis: \"x\",\n    // Elements options apply to all of the options unless overridden in a dataset\n    // In this case, we are setting the border of each horizontal bar to be 2px wide\n    aspectRatio: 1.3,\n    elements: {\n      bar: {\n        borderWidth: 2,\n      },\n    },\n    scales: {\n      y: {\n        min: -0.8,\n        max: 0.8,\n        ticks: {\n          display: true,\n          font: {\n            size: 10,\n          },\n        },\n      },\n      // y: {\n      //   suggestedMin: -0.8,\n      //   suggestedMax: 0.8,\n      //   ticks: {\n      //     font: {\n      //       size: 10,\n      //     },\n      //   },\n      // },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: true,\n      },\n      title: {\n        display: true,\n        text: [props.text],\n        color: \"#030061\",\n        font: {\n          size: 14,\n        },\n      },\n      subtitle: {\n        display: true,\n        text: \"Green - Improving | Red - Worsening\",\n        color: \"#030061\",\n        font: {\n          size: 12,\n        },\n        padding: {\n          bottom: 10,\n        },\n      },\n    },\n  };\n\n  const labels = [\n    props.homeTeam,\n    props.awayTeam,\n  ];\n\n  const data = {\n    labels: labels,\n    datasets: [\n      {\n        legend: {\n          display: false,\n        },\n        // label: \"XG Recent Swing\",\n        data: dataset,\n        ticks: {\n          font: {\n            size: 14,\n          },\n        },\n        barThickness: 120,\n        backgroundColor(context) {\n          const index = context.dataIndex;\n          const value = context.dataset.data[index];\n          return value < 0 ? \"#730a00\" : \"#016001\";\n        },\n      },\n    ],\n  };\n\n  return <Bar options={options} data={data} />;\n}\n","/Users/gregdorward/Development/football-predictions/src/logic/compareFormTrend.js",[],"/Users/gregdorward/Development/football-predictions/src/components/Toggle.js",[],["374","375"],"/Users/gregdorward/Development/football-predictions/src/components/Carousel.js",[],"/Users/gregdorward/Development/football-predictions/src/components/DayPicker.js",[],["376","377"],"/Users/gregdorward/Development/football-predictions/src/components/DateForm.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/dataSlice.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/store.js",[],"/Users/gregdorward/Development/football-predictions/src/components/Team.js",["378","379","380"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CreateBadge } from \"./createBadge\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction TeamPage() {\n  const [dataState, setData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const responseHome = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}team/${storedFixtureDetailsJson.homeId}`\n      );\n      const resultHome = await responseHome.json();\n\n      const responseAway = await fetch(\n        `${process.env.REACT_APP_EXPRESS_SERVER}team/${storedFixtureDetailsJson.awayId}`\n      );\n      const resultAway = await responseAway.json();\n      // setData(result.data.stadium_name);\n\n      let indexHome = resultHome.data.findIndex(\n        (x) => x.season_format === \"Domestic League\"\n      );\n      let indexAway = resultAway.data.findIndex(\n        (x) => x.season_format === \"Domestic League\"\n      );\n\n      if (resultHome.data[indexHome].stats.seasonScoredNum_overall) {\n        setData((test) => ({\n          ...test,\n          scoredOverallHome:\n            resultHome.data[indexHome].stats.seasonScoredNum_overall,\n          playedHomeOnly:\n            resultHome.data[indexHome].stats.seasonMatchesPlayed_home,\n          scoredOverallHomeOnly:\n            resultHome.data[indexHome].stats.seasonScoredNum_home,\n          conceededOverallHome:\n            resultHome.data[indexHome].stats.seasonConcededNum_overall,\n          conceededOverallHomeOnly:\n            resultHome.data[indexHome].stats.seasonConcededNum_home,\n\n          PPGOverallHome: resultHome.data[indexHome].stats.seasonPPG_overall,\n          PPGOverallHomeOnly: resultHome.data[indexHome].stats.seasonPPG_home,\n          leaguePosition_overallHome:\n            resultHome.data[indexHome].stats.leaguePosition_overall,\n          leaguePosition_HomeOnly:\n            resultHome.data[indexHome].stats.leaguePosition_home,\n          averageAttendance:\n            resultHome.data[indexHome].stats.average_attendance_home,\n          BTTSPercentage_overallHome:\n            resultHome.data[indexHome].stats.seasonBTTSPercentage_overall,\n          BTTSAndWinPercentage_Home:\n            resultHome.data[indexHome].stats.BTTS_and_win_percentage_overall,\n          BTTSAndLosePercentage_Home:\n            resultHome.data[indexHome].stats.BTTS_and_lose_percentage_overall,\n          BTTSBothHalvesHome:\n            resultHome.data[indexHome].stats\n              .BTTS_both_halves_percentage_overall,\n          GoalDifferenceHT_overall_Home:\n            resultHome.data[indexHome].stats.GoalDifferenceHT_overall,\n          GD_2hg_overall_Home: resultHome.data[indexHome].stats.gd_2hg_overall,\n          leadingAtHTPercentage_overallHome:\n            resultHome.data[indexHome].stats.leadingAtHTPercentage_overall,\n          seasonOver15Percentage_overallHome:\n            resultHome.data[indexHome].stats.seasonOver15Percentage_overall,\n          seasonOver25Percentage_overallHome:\n            resultHome.data[indexHome].stats.seasonOver25Percentage_overall,\n          seasonOver35Percentage_overallHome:\n            resultHome.data[indexHome].stats.seasonOver35Percentage_overall,\n          seasonOver45Percentage_overallHome:\n            resultHome.data[indexHome].stats.seasonOver45Percentage_overall,\n          scoredBothHalvesPercentage_overallHome:\n            resultHome.data[indexHome].stats.scoredBothHalvesPercentage_overall,\n          shots_on_target_per_goals_scored_overallHome:\n            resultHome.data[indexHome].stats.additional_info\n              .shots_on_target_per_goals_scored_overall,\n          cornersTotalAVG_overallHome:\n            resultHome.data[indexHome].stats.cornersTotalAVG_overall,\n          cardsAVG_overallHome:\n            resultHome.data[indexHome].stats.cardsAVG_overall,\n          foulsAVG_overallHome:\n            resultHome.data[indexHome].stats.foulsAVG_overall,\n          penalties_won_per_match_overallHome:\n            resultHome.data[indexHome].stats.additional_info\n              .penalties_won_per_match_overall,\n          penalty_in_a_match_percentage_overallHome:\n            resultHome.data[indexHome].stats.additional_info\n              .penalty_in_a_match_percentage_overall,\n\n          scoredOverallAway:\n            resultAway.data[indexAway].stats.seasonScoredNum_overall,\n          playedAwayOnly:\n            resultAway.data[indexAway].stats.seasonMatchesPlayed_away,\n          scoredOverallAwayOnly:\n            resultAway.data[indexAway].stats.seasonScoredNum_away,\n          conceededOverallAway:\n            resultAway.data[indexAway].stats.seasonConcededNum_overall,\n          conceededOverallAwayOnly:\n            resultAway.data[indexAway].stats.seasonConcededNum_away,\n\n          PPGOverallAway: resultAway.data[indexAway].stats.seasonPPG_overall,\n          PPGOverallAwayOnly: resultAway.data[indexAway].stats.seasonPPG_away,\n          leaguePosition_overallAway:\n            resultAway.data[indexAway].stats.leaguePosition_overall,\n          leaguePosition_AwayOnly:\n            resultAway.data[indexAway].stats.leaguePosition_away,\n          BTTSPercentage_overallAway:\n            resultAway.data[indexAway].stats.seasonBTTSPercentage_overall,\n          BTTSAndWinPercentage_Away:\n            resultAway.data[indexAway].stats.BTTS_and_win_percentage_overall,\n          BTTSAndLosePercentage_Away:\n            resultAway.data[indexAway].stats.BTTS_and_lose_percentage_overall,\n          BTTSBothHalvesAway:\n            resultAway.data[indexAway].stats\n              .BTTS_both_halves_percentage_overall,\n          GoalDifferenceHT_overall_Away:\n            resultAway.data[indexAway].stats.GoalDifferenceHT_overall,\n          GD_2hg_overall_Away: resultAway.data[indexAway].stats.gd_2hg_overall,\n          leadingAtHTPercentage_overallAway:\n            resultAway.data[indexAway].stats.leadingAtHTPercentage_overall,\n          seasonOver15Percentage_overallAway:\n            resultAway.data[indexAway].stats.seasonOver15Percentage_overall,\n          seasonOver25Percentage_overallAway:\n            resultAway.data[indexAway].stats.seasonOver25Percentage_overall,\n          seasonOver35Percentage_overallAway:\n            resultAway.data[indexAway].stats.seasonOver35Percentage_overall,\n          seasonOver45Percentage_overallAway:\n            resultAway.data[indexAway].stats.seasonOver45Percentage_overall,\n          scoredBothHalvesPercentage_overallAway:\n            resultAway.data[indexAway].stats.scoredBothHalvesPercentage_overall,\n          shots_on_target_per_goals_scored_overallAway:\n            resultAway.data[indexAway].stats.additional_info\n              .shots_on_target_per_goals_scored_overall,\n\n          cornersTotalAVG_overallAway:\n            resultAway.data[indexAway].stats.cornersTotalAVG_overall,\n          cardsAVG_overallAway:\n            resultAway.data[indexAway].stats.cardsAVG_overall,\n          foulsAVG_overallAway:\n            resultAway.data[indexAway].stats.foulsAVG_overall,\n          penalties_won_per_match_overallAway:\n            resultAway.data[indexAway].stats.additional_info\n              .penalties_won_per_match_overall,\n          penalty_in_a_match_percentage_overallAway:\n            resultAway.data[indexAway].stats.additional_info\n              .penalty_in_a_match_percentage_overall,\n        }));\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  const storedDataHome = useSelector((state) => state.data.dataHome);\n  const jsonDataHome = JSON.parse(storedDataHome);\n  const propertyNamesHome = Object.entries(jsonDataHome);\n\n  const storedDataHomeDef = useSelector((state) => state.data.dataHomeDef);\n  const jsonDataHomeDef = JSON.parse(storedDataHomeDef);\n  const propertyNamesHomeDef = Object.entries(jsonDataHomeDef);\n\n  const storedDataallTeamResultsHome = useSelector(\n    (state) => state.data.allTeamResultsHome\n  );\n  const jsonDataallTeamResultsHome = JSON.parse(storedDataallTeamResultsHome);\n  const propertyNamesallTeamResultsHome = Object.values(\n    jsonDataallTeamResultsHome\n  );\n\n  const homeDetails = useSelector((state) => state.data.homeDetails);\n  const jsonHomeDetails = JSON.parse(homeDetails);\n\n  const storedDataAway = useSelector((state) => state.data.dataAway);\n  const jsonDataAway = JSON.parse(storedDataAway);\n  const propertyNamesAway = Object.entries(jsonDataAway);\n\n  const storedDataAwayDef = useSelector((state) => state.data.dataAwayDef);\n  const jsonDataAwayDef = JSON.parse(storedDataAwayDef);\n  const propertyNamesAwayDef = Object.entries(jsonDataAwayDef);\n\n  const storedDataallTeamResultsAway = useSelector(\n    (state) => state.data.allTeamResultsAway\n  );\n  const jsonDataallTeamResultsAway = JSON.parse(storedDataallTeamResultsAway);\n  const propertyNamesallTeamResultsAway = Object.values(\n    jsonDataallTeamResultsAway\n  );\n\n  const awayDetails = useSelector((state) => state.data.awayDetails);\n  const jsonAwayDetails = JSON.parse(awayDetails);\n\n  const storedFixtureDetails = useSelector(\n    (state) => state.data.fixtureDetails\n  );\n  const storedFixtureDetailsJson = JSON.parse(storedFixtureDetails);\n\n  const options = {\n    plugins: {\n      title: {\n        display: true,\n        text: \"Team comparison\",\n      },\n    },\n    aspectRatio: 0.5,\n    maintainAspectRatio: true,\n    responsive: true,\n    scales: {\n      x: {\n        stacked: true,\n      },\n      y: {\n        stacked: true,\n        display: false,\n      },\n    },\n  };\n  const labels = [\n    storedFixtureDetailsJson.homeTeamName,\n    storedFixtureDetailsJson.awayTeamName,\n  ];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        data: [\n          jsonHomeDetails[\"Attacking Strength\"],\n          jsonAwayDetails[\"Attacking Strength\"],\n        ],\n        label: \"Attacking Strength\",\n        backgroundColor: \"#030061\",\n      },\n      {\n        data: [\n          jsonHomeDetails[\"Defensive Strength\"],\n          jsonAwayDetails[\"Defensive Strength\"],\n        ],\n        label: \"Defensive Strength\",\n        backgroundColor: \"#CC3314\",\n      },\n    ],\n  };\n\n  return (\n    <div className=\"TeamStatsContainer\">\n      <div className=\"FixtureHeadingContiner\">\n        <CreateBadge\n          image={storedFixtureDetailsJson.homeTeamBadge}\n          ClassName=\"HomeTeamBadge\"\n          alt=\"Home team badge\"\n        ></CreateBadge>\n        {`${storedFixtureDetailsJson.homeTeamName} v ${storedFixtureDetailsJson.awayTeamName}`}\n        <CreateBadge\n          image={storedFixtureDetailsJson.awayTeamBadge}\n          ClassName=\"AwayTeamBadge\"\n          alt=\"Away team badge\"\n        ></CreateBadge>\n      </div>\n      <h3>\n        {storedFixtureDetailsJson.stadium} KO: {storedFixtureDetailsJson.time} |\n        Average Attendance: {dataState.averageAttendance}\n      </h3>\n      <h3>\n        XGTipping Prediction: {storedFixtureDetailsJson.homeGoals} -{\" \"}\n        {storedFixtureDetailsJson.awayGoals}\n      </h3>\n      <div className=\"TeamStats\">\n        <ul className=\"HomeTeamStats\">\n          <iframe\n            src={`https://footystats.org/api/club?id=${storedFixtureDetailsJson.homeId}`}\n            height=\"100%\"\n            width=\"100%\"\n            style={{\n              height: \"420px\",\n              width: \"100%\",\n              border: \"0.1em solid #030061\",\n            }}\n          ></iframe>\n          <h3>{storedFixtureDetailsJson.homeTeamName}</h3>\n          {propertyNamesHome.map(([key, value], index) => (\n            <li key={index}>\n              <strong>{key}:</strong>{\" \"}\n              {typeof value === \"object\" ? JSON.stringify(value) : value}\n            </li>\n          ))}\n          <ul className=\"HomeTeamStats\">\n            {propertyNamesHomeDef.map(([key, value], index) => (\n              <li key={index}>\n                <strong>{key}:</strong>{\" \"}\n                {typeof value === \"object\" ? JSON.stringify(value) : value}\n              </li>\n            ))}\n          </ul>\n          <li>Scored overall: {dataState.scoredOverallHome}</li>\n          <li>Conceeded overall: {dataState.conceededOverallHome}</li>\n          <li>\n            Average scored home only:{\" \"}\n            {(\n              dataState.scoredOverallHomeOnly / dataState.playedHomeOnly\n            ).toFixed(2)}\n          </li>\n          <li>\n            Average conceeded home only:{\" \"}\n            {(\n              dataState.conceededOverallHomeOnly / dataState.playedHomeOnly\n            ).toFixed(2)}\n          </li>\n          <li>PPG overall: {dataState.PPGOverallHome}</li>\n          <li>PPG home only: {dataState.PPGOverallHomeOnly}</li>\n          <li>League position: {dataState.leaguePosition_overallHome}</li>\n          <li>\n            League position home only: {dataState.leaguePosition_HomeOnly}\n          </li>\n          <li>BTTS {dataState.BTTSPercentage_overallHome}%</li>\n          <li>BTTS and win: {dataState.BTTSAndWinPercentage_Home}%</li>\n          <li>BTTS and lose: {dataState.BTTSAndLosePercentage_Home}%</li>\n          <li>BTTS both halves: {dataState.BTTSBothHalvesHome}%</li>\n          <li>\n            Goal diff 1st half only: {dataState.GoalDifferenceHT_overall_Home}\n          </li>\n          <li>Goal diff 2nd half only: {dataState.GD_2hg_overall_Home}</li>\n          <li>\n            Leading at half time: {dataState.leadingAtHTPercentage_overallHome}%\n          </li>\n          <li>\n            Over 1.5 goals in games:{\" \"}\n            {dataState.seasonOver15Percentage_overallHome}%\n          </li>\n          <li>\n            Over 2.5 goals in games:{\" \"}\n            {dataState.seasonOver25Percentage_overallHome}%\n          </li>\n          <li>\n            Over 3.5 goals in games:{\" \"}\n            {dataState.seasonOver35Percentage_overallHome}%\n          </li>\n          <li>\n            Over 4.5 goals in games:{\" \"}\n            {dataState.seasonOver45Percentage_overallHome}%\n          </li>\n          <li>\n            Scored both halves:{\" \"}\n            {dataState.scoredBothHalvesPercentage_overallHome}%\n          </li>\n          <li>\n            SOTs per goal:{\" \"}\n            {dataState.shots_on_target_per_goals_scored_overallHome}\n          </li>\n          <li>Corners in game avg: {dataState.cornersTotalAVG_overallHome}</li>\n          <li>Cards avg: {dataState.cardsAVG_overallHome}</li>\n          <li>Fouls against avg: {dataState.foulsAVG_overallHome}</li>\n          <li>\n            Penalties won avg: {dataState.penalties_won_per_match_overallHome}\n          </li>\n          <li>\n            Penalties in match:{\" \"}\n            {dataState.penalty_in_a_match_percentage_overallHome}%\n          </li>\n        </ul>\n        <ul className=\"AwayTeamStats\">\n          <iframe\n            src={`https://footystats.org/api/club?id=${storedFixtureDetailsJson.awayId}`}\n            height=\"100%\"\n            width=\"100%\"\n            style={{\n              height: \"420px\",\n              width: \"100%\",\n              color: \"#030061\",\n              border: \"0.1em solid #030061\",\n            }}\n          ></iframe>\n          <h3>{storedFixtureDetailsJson.awayTeamName}</h3>\n          {propertyNamesAway.map(([key, value], index) => (\n            <li key={index}>\n              <strong>{key}:</strong>{\" \"}\n              {typeof value === \"object\" ? JSON.stringify(value) : value}\n            </li>\n          ))}\n          <ul className=\"AwayTeamStats\">\n            {propertyNamesAwayDef.map(([key, value], index) => (\n              <li key={index}>\n                <strong>{key}:</strong>{\" \"}\n                {typeof value === \"object\" ? JSON.stringify(value) : value}\n              </li>\n            ))}\n          </ul>\n          <li>Scored overall: {dataState.scoredOverallAway}</li>\n          <li>Conceeded overall: {dataState.conceededOverallAway}</li>\n          <li>\n            Average scored away only:{\" \"}\n            {(\n              dataState.scoredOverallAwayOnly / dataState.playedAwayOnly\n            ).toFixed(2)}\n          </li>\n          <li>\n            Average conceeded away only:{\" \"}\n            {(\n              dataState.conceededOverallAwayOnly / dataState.playedAwayOnly\n            ).toFixed(2)}\n          </li>\n          <li>PPG overall: {dataState.PPGOverallAway}</li>\n          <li>PPG away only: {dataState.PPGOverallAwayOnly}</li>\n          <li>League position: {dataState.leaguePosition_overallAway}</li>\n          <li>\n            League position away only: {dataState.leaguePosition_AwayOnly}\n          </li>\n          <li>BTTS: {dataState.BTTSPercentage_overallAway}%</li>\n          <li>BTTS and win: {dataState.BTTSAndWinPercentage_Away}%</li>\n          <li>BTTS and lose: {dataState.BTTSAndLosePercentage_Away}%</li>\n          <li>BTTS both halves: {dataState.BTTSBothHalvesAway}%</li>\n          <li>\n            Goal diff 1st half only: {dataState.GoalDifferenceHT_overall_Away}\n          </li>\n          <li>Goal diff 2nd half only: {dataState.GD_2hg_overall_Away}</li>\n          <li>\n            Leading at half time: {dataState.leadingAtHTPercentage_overallAway}%\n          </li>\n          <li>\n            Over 1.5 goals in games:{\" \"}\n            {dataState.seasonOver15Percentage_overallAway}%\n          </li>\n          <li>\n            Over 2.5 goals in games:{\" \"}\n            {dataState.seasonOver25Percentage_overallAway}%\n          </li>\n          <li>\n            Over 3.5 goals in games:{\" \"}\n            {dataState.seasonOver35Percentage_overallAway}%\n          </li>\n          <li>\n            Over 4.5 goals in games:{\" \"}\n            {dataState.seasonOver45Percentage_overallAway}%\n          </li>\n          <li>\n            Scored both halves:{\" \"}\n            {dataState.scoredBothHalvesPercentage_overallAway}%\n          </li>\n          <li>\n            SOTs per goal:{\" \"}\n            {dataState.shots_on_target_per_goals_scored_overallAway}\n          </li>\n          <li>Corners in game avg: {dataState.cornersTotalAVG_overallAway}</li>\n          <li>Cards avg: {dataState.cardsAVG_overallAway}</li>\n          <li>Fouls against avg: {dataState.foulsAVG_overallAway}</li>\n          <li>\n            Penalties won avg: {dataState.penalties_won_per_match_overallAway}\n          </li>\n          <li>\n            Penalties in match:{\" \"}\n            {dataState.penalty_in_a_match_percentage_overallAway}%\n          </li>\n        </ul>\n        <div className=\"ChartContainer\">\n          <span className=\"Spacer\"></span>\n          <Bar options={options} data={data} className=\"ComparisonBar\" />\n          <span className=\"Spacer\"></span>\n        </div>\n        <ul className=\"HomeTeamResults\">\n          {propertyNamesallTeamResultsHome.map((match, index) => (\n            <>\n              <div className=\"MatchDate\">{match.date}</div>\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{match.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {match.homeGoals} : {match.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{match.awayTeam}</div>\n              </div>\n            </>\n          ))}\n        </ul>\n        <ul className=\"AwayTeamResults\">\n          {propertyNamesallTeamResultsAway.map((match, index) => (\n            <>\n              <div className=\"MatchDate\">{match.date}</div>\n              <div className=\"ResultRowOverviewSmall\">\n                <div className=\"columnOverviewHomeSmall\">{match.homeTeam}</div>\n                <span className=\"columnOverviewScoreSmall\">\n                  {match.homeGoals} : {match.awayGoals}\n                </span>\n                <div className=\"columnOverviewAwaySmall\">{match.awayTeam}</div>\n              </div>\n            </>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default TeamPage;\n","/Users/gregdorward/Development/football-predictions/src/components/Checkbox.js",[],"/Users/gregdorward/Development/football-predictions/src/components/Slider.js",[],"/Users/gregdorward/Development/football-predictions/src/components/SliderDiff.js",[],"/Users/gregdorward/Development/football-predictions/src/components/Switch.js",[],"/Users/gregdorward/Development/football-predictions/src/components/SofaScore.js",["381"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SofaLineupsWidget = ({ id, team1, team2, time, homeGoals, awayGoals }) => {\n  const iframeSrc = `https://widgets.sofascore.com/embed/lineups?id=${id}&widgetTheme=light`;\n\n  let differenceInSeconds, minutes\n  const currentTime = new Date().getTime() / 1000;\n  // Calculate the difference in seconds\n    if(time > 0){\n        differenceInSeconds = time - currentTime;\n        minutes = Math.floor(differenceInSeconds / 60);\n    } else {\n        minutes = -99999999\n    }\n\n\n\n  if(team1 === \"N/A\") {\n    return <h6>No lineups available for this match yet</h6>\n  } else if (minutes > 60) {\n    return (\n      <div>\n        <h6>Predicted lineups</h6>\n        <iframe\n          id={`sofa-lineups-embed-${id}`}\n          src={iframeSrc}\n          style={{\n            height: \"786px\",\n            maxWidth: \"800px\",\n            width: \"100%\",\n            border: \"0\",\n          }}\n          scrolling=\"no\"\n          title=\"SofaScore Lineups\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n      </div>\n    );\n  } else if (minutes < 60 && minutes > 0) {\n    return (\n      <div>\n        <h6>Lineups</h6>\n        <iframe\n          id={`sofa-lineups-embed-${id}`}\n          src={iframeSrc}\n          style={{\n            height: \"786px\",\n            maxWidth: \"800px\",\n            width: \"100%\",\n            border: \"0\",\n          }}\n          scrolling=\"no\"\n          title=\"SofaScore Lineups\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n      </div>\n    );\n  } else if (minutes < 0) {\n    return (\n      <div>\n        <div className=\"CurrentScore\">Score: {`${team1}: ${homeGoals} - ${team2}: ${awayGoals}`}</div>\n        <span>Score not live updated</span>\n        <h6 className=\"AttackingMomentum\">Live attacking momentum and goals</h6>\n        <iframe\n          width=\"100%\"\n          height=\"286\"\n          src={`https://widgets.sofascore.com/embed/attackMomentum?id=${id}&widgetTheme=light`}\n          frameborder=\"0\"\n          scrolling=\"no\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n        <h6>Lineups and in-play ratings</h6>\n        <iframe\n          id={`sofa-lineups-embed-${id}`}\n          src={iframeSrc}\n          style={{\n            height: \"786px\",\n            maxWidth: \"800px\",\n            width: \"100%\",\n            border: \"0\",\n          }}\n          scrolling=\"no\"\n          title=\"SofaScore Lineups\"\n        ></iframe>\n        <div\n          style={{ fontSize: \"12px\", fontFamily: \"Open Sans, sans-serif\" }}\n        ></div>\n      </div>\n    );\n  }\n  else {\n    return <h6>{`Lineups coming in approximately ${minutes - 60} minutes`}</h6>;\n  }\n};\n\n\nSofaLineupsWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  team1: PropTypes.string.isRequired,\n  team2: PropTypes.string.isRequired,\n};\n\nexport default SofaLineupsWidget;\n","/Users/gregdorward/Development/football-predictions/src/components/TeamOfTheWeek.js",[],"/Users/gregdorward/Development/football-predictions/src/components/TeamOfTheSeason.js",[],"/Users/gregdorward/Development/football-predictions/src/components/Logo.js",[],"/Users/gregdorward/Development/football-predictions/src/components/PreviousGames.js",[],"/Users/gregdorward/Development/football-predictions/src/components/CollapsableStats.js",[],"/Users/gregdorward/Development/football-predictions/src/components/Contact.js",[],"/Users/gregdorward/Development/football-predictions/src/components/Success.js",[],"/Users/gregdorward/Development/football-predictions/src/components/Cancel.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/authProvider.js",[],"/Users/gregdorward/Development/football-predictions/src/firebase.js",[],"/Users/gregdorward/Development/football-predictions/src/components/Login.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/hasUserPaid.js",[],"/Users/gregdorward/Development/football-predictions/src/components/ProtectedContent.js",[],"/Users/gregdorward/Development/football-predictions/src/components/ResetPasswordPage.js",[],"/Users/gregdorward/Development/football-predictions/src/components/PasswordReset.js",[],"/Users/gregdorward/Development/football-predictions/src/components/CancelSubscription.js",[],"/Users/gregdorward/Development/football-predictions/src/components/Under25.js",[],"/Users/gregdorward/Development/football-predictions/src/components/Over25.js",[],"/Users/gregdorward/Development/football-predictions/src/logic/getStatsInsights.js",[],"/Users/gregdorward/Development/football-predictions/src/components/HighestScoringTeams.js",[],"/Users/gregdorward/Development/football-predictions/src/components/HighestScoringFixtures.js",[],"/Users/gregdorward/Development/football-predictions/src/components/BTTSFixtures.js",[],"/Users/gregdorward/Development/football-predictions/src/components/BTTSTeams.js",[],"/Users/gregdorward/Development/football-predictions/src/components/GameStats.js",["382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439"],"/Users/gregdorward/Development/football-predictions/src/logic/getAIStats.js",["440","441","442","443"],"import React, { useState, useEffect, Fragment, memo } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nasync function addNewlinesAfterPeriods(text) {\n    // This regex handles periods followed by a space and capital letter,\n    // or periods immediately followed by a capital letter.  It also\n    // avoids adding extra newlines.\n    const regex = /\\.(?=[A-Z]|\\s[A-Z])/g;\n  \n    const newText = text.replace(regex, \".\\n\");\n  \n    return newText;\n  }\n\nfunction AIInsights({ game, homeForm, awayForm }) {\n  const [aiMatchPreview, setAiMatchPreview] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchAIInsights = async () => {\n      setIsLoading(true); // Set loading state\n      setError(null); // Clear any previous errors\n\n      const AIPayload = {\n        league: game.leagueDesc,\n        gameweek: game.game_week,\n        homeTeamName: homeForm.teamName,\n        homeLeaguePosition: homeForm.LeaguePosition,\n        homeTeamResults: homeForm.allTeamResults,\n        awayTeamName: awayForm.teamName,\n        awayLeaguePosition: awayForm.LeaguePosition,\n        awayTeamResults: awayForm.allTeamResults,\n      };\n\n      try {\n        const response = await fetch(\n          `${process.env.REACT_APP_EXPRESS_SERVER}gemini/${game}`,\n          {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(AIPayload),\n          }\n        );\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        const jsonData = await response.json();\n        const formattedText = await addNewlinesAfterPeriods(\n          jsonData.matchPreview\n        );\n        setAiMatchPreview({ ...jsonData, matchPreview: formattedText });\n      } catch (err) {\n        setError(err);\n        console.error(\"Fetch error:\", err);\n      } finally {\n        setIsLoading(false); // Clear loading state\n      }\n    };\n\n    fetchAIInsights();\n  }, [JSON.stringify(game), JSON.stringify(homeForm), JSON.stringify(awayForm)]); // Dependencies: re-fetch when these change. Game and Home Form MUST be added as dependancies.\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  }\n\n  if (!aiMatchPreview) {\n    return null; // Or some placeholder content if no data yet\n  }\n\n//   game.AIHomeGoals = aiMatchPreview.homeGoalsPrediction\n//   game.AIAwayGoals = aiMatchPreview.awayGoalsPrediction\n\n  return (\n    <Fragment>\n      <h2>Preview</h2>\n      <div className=\"AIMatchPreview\">{aiMatchPreview.matchPreview}</div>\n      <h2>AI Prediction</h2>\n      <div className=\"AIMatchPreview\">\n        {aiMatchPreview.prediction} <i>(may not reflect the view of XGTipping)</i>\n      </div>\n      <div className=\"AIContainer\">\n        <div className=\"HomeAIInsights\">\n          <div>{aiMatchPreview.homeTeam.summary}</div>\n        </div>\n        <div className=\"AwayAIInsights\">\n          <div>{aiMatchPreview.awayTeam.summary}</div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nconst MemoizedAIInsights = memo(AIInsights);\n\n// Modified generateAIInsights function (now just renders the component)\nexport function generateAIInsights(game, homeForm, awayForm) {\n  ReactDOM.render(\n    <React.StrictMode>\n    <MemoizedAIInsights game={game} homeForm={homeForm} awayForm={awayForm} />\n    </React.StrictMode>,\n    document.getElementById(\"AIInsightsContainer\")\n  );\n}",{"ruleId":"444","severity":1,"message":"445","line":6,"column":27,"nodeType":"446","messageId":"447","endLine":6,"endColumn":33},{"ruleId":"448","replacedBy":"449"},{"ruleId":"450","replacedBy":"451"},{"ruleId":"444","severity":1,"message":"452","line":3,"column":8,"nodeType":"446","messageId":"447","endLine":3,"endColumn":14},{"ruleId":"444","severity":1,"message":"445","line":33,"column":27,"nodeType":"446","messageId":"447","endLine":33,"endColumn":33},{"ruleId":"444","severity":1,"message":"453","line":33,"column":50,"nodeType":"446","messageId":"447","endLine":33,"endColumn":54},{"ruleId":"444","severity":1,"message":"454","line":35,"column":8,"nodeType":"446","messageId":"447","endLine":35,"endColumn":16},{"ruleId":"444","severity":1,"message":"455","line":102,"column":5,"nodeType":"446","messageId":"447","endLine":102,"endColumn":14},{"ruleId":"444","severity":1,"message":"456","line":103,"column":5,"nodeType":"446","messageId":"447","endLine":103,"endColumn":24},{"ruleId":"444","severity":1,"message":"457","line":104,"column":5,"nodeType":"446","messageId":"447","endLine":104,"endColumn":16},{"ruleId":"444","severity":1,"message":"458","line":108,"column":5,"nodeType":"446","messageId":"447","endLine":108,"endColumn":13},{"ruleId":"444","severity":1,"message":"459","line":109,"column":5,"nodeType":"446","messageId":"447","endLine":109,"endColumn":23},{"ruleId":"444","severity":1,"message":"460","line":110,"column":5,"nodeType":"446","messageId":"447","endLine":110,"endColumn":15},{"ruleId":"444","severity":1,"message":"461","line":175,"column":18,"nodeType":"446","messageId":"447","endLine":175,"endColumn":31},{"ruleId":"444","severity":1,"message":"462","line":470,"column":16,"nodeType":"446","messageId":"447","endLine":470,"endColumn":40},{"ruleId":"444","severity":1,"message":"463","line":499,"column":16,"nodeType":"446","messageId":"447","endLine":499,"endColumn":39},{"ruleId":"448","replacedBy":"464"},{"ruleId":"450","replacedBy":"465"},{"ruleId":"444","severity":1,"message":"466","line":58,"column":5,"nodeType":"446","messageId":"447","endLine":58,"endColumn":9},{"ruleId":"467","severity":1,"message":"468","line":521,"column":47,"nodeType":"469","messageId":"470","endLine":521,"endColumn":49},{"ruleId":"467","severity":1,"message":"468","line":522,"column":47,"nodeType":"469","messageId":"470","endLine":522,"endColumn":49},{"ruleId":"444","severity":1,"message":"471","line":527,"column":13,"nodeType":"446","messageId":"447","endLine":527,"endColumn":29},{"ruleId":"444","severity":1,"message":"472","line":4,"column":7,"nodeType":"446","messageId":"447","endLine":4,"endColumn":17},{"ruleId":"444","severity":1,"message":"473","line":43,"column":5,"nodeType":"446","messageId":"447","endLine":43,"endColumn":22},{"ruleId":"444","severity":1,"message":"474","line":44,"column":5,"nodeType":"446","messageId":"447","endLine":44,"endColumn":22},{"ruleId":"444","severity":1,"message":"475","line":45,"column":5,"nodeType":"446","messageId":"447","endLine":45,"endColumn":22},{"ruleId":"444","severity":1,"message":"476","line":51,"column":5,"nodeType":"446","messageId":"447","endLine":51,"endColumn":16},{"ruleId":"444","severity":1,"message":"477","line":52,"column":5,"nodeType":"446","messageId":"447","endLine":52,"endColumn":17},{"ruleId":"444","severity":1,"message":"478","line":73,"column":5,"nodeType":"446","messageId":"447","endLine":73,"endColumn":15},{"ruleId":"444","severity":1,"message":"479","line":74,"column":5,"nodeType":"446","messageId":"447","endLine":74,"endColumn":22},{"ruleId":"444","severity":1,"message":"480","line":75,"column":5,"nodeType":"446","messageId":"447","endLine":75,"endColumn":18},{"ruleId":"444","severity":1,"message":"481","line":1523,"column":16,"nodeType":"446","messageId":"447","endLine":1523,"endColumn":35},{"ruleId":"444","severity":1,"message":"482","line":1560,"column":16,"nodeType":"446","messageId":"447","endLine":1560,"endColumn":28},{"ruleId":"444","severity":1,"message":"483","line":1673,"column":16,"nodeType":"446","messageId":"447","endLine":1673,"endColumn":35},{"ruleId":"444","severity":1,"message":"484","line":1705,"column":9,"nodeType":"446","messageId":"447","endLine":1705,"endColumn":43},{"ruleId":"444","severity":1,"message":"485","line":1710,"column":9,"nodeType":"446","messageId":"447","endLine":1710,"endColumn":43},{"ruleId":"444","severity":1,"message":"486","line":1733,"column":9,"nodeType":"446","messageId":"447","endLine":1733,"endColumn":29},{"ruleId":"444","severity":1,"message":"487","line":1738,"column":9,"nodeType":"446","messageId":"447","endLine":1738,"endColumn":29},{"ruleId":"444","severity":1,"message":"488","line":1772,"column":9,"nodeType":"446","messageId":"447","endLine":1772,"endColumn":36},{"ruleId":"444","severity":1,"message":"489","line":1777,"column":9,"nodeType":"446","messageId":"447","endLine":1777,"endColumn":36},{"ruleId":"444","severity":1,"message":"490","line":2273,"column":7,"nodeType":"446","messageId":"447","endLine":2273,"endColumn":16},{"ruleId":"444","severity":1,"message":"491","line":2338,"column":5,"nodeType":"446","messageId":"447","endLine":2338,"endColumn":6},{"ruleId":"444","severity":1,"message":"492","line":2489,"column":9,"nodeType":"446","messageId":"447","endLine":2489,"endColumn":23},{"ruleId":"444","severity":1,"message":"493","line":2490,"column":9,"nodeType":"446","messageId":"447","endLine":2490,"endColumn":23},{"ruleId":"444","severity":1,"message":"494","line":3444,"column":7,"nodeType":"446","messageId":"447","endLine":3444,"endColumn":30},{"ruleId":"444","severity":1,"message":"495","line":3445,"column":7,"nodeType":"446","messageId":"447","endLine":3445,"endColumn":30},{"ruleId":"448","replacedBy":"496"},{"ruleId":"450","replacedBy":"497"},{"ruleId":"444","severity":1,"message":"498","line":482,"column":5,"nodeType":"446","messageId":"447","endLine":482,"endColumn":28},{"ruleId":"444","severity":1,"message":"499","line":483,"column":5,"nodeType":"446","messageId":"447","endLine":483,"endColumn":28},{"ruleId":"444","severity":1,"message":"500","line":517,"column":11,"nodeType":"446","messageId":"447","endLine":517,"endColumn":29},{"ruleId":"444","severity":1,"message":"501","line":518,"column":11,"nodeType":"446","messageId":"447","endLine":518,"endColumn":29},{"ruleId":"444","severity":1,"message":"502","line":520,"column":11,"nodeType":"446","messageId":"447","endLine":520,"endColumn":17},{"ruleId":"444","severity":1,"message":"503","line":895,"column":13,"nodeType":"446","messageId":"447","endLine":895,"endColumn":29},{"ruleId":"444","severity":1,"message":"504","line":896,"column":13,"nodeType":"446","messageId":"447","endLine":896,"endColumn":29},{"ruleId":"444","severity":1,"message":"505","line":899,"column":11,"nodeType":"446","messageId":"447","endLine":899,"endColumn":19},{"ruleId":"444","severity":1,"message":"506","line":986,"column":22,"nodeType":"446","messageId":"447","endLine":986,"endColumn":39},{"ruleId":"444","severity":1,"message":"507","line":1004,"column":11,"nodeType":"446","messageId":"447","endLine":1004,"endColumn":24},{"ruleId":"444","severity":1,"message":"508","line":1009,"column":11,"nodeType":"446","messageId":"447","endLine":1009,"endColumn":24},{"ruleId":"444","severity":1,"message":"509","line":1236,"column":9,"nodeType":"446","messageId":"447","endLine":1236,"endColumn":21},{"ruleId":"444","severity":1,"message":"510","line":1237,"column":9,"nodeType":"446","messageId":"447","endLine":1237,"endColumn":21},{"ruleId":"444","severity":1,"message":"511","line":1343,"column":28,"nodeType":"446","messageId":"447","endLine":1343,"endColumn":41},{"ruleId":"444","severity":1,"message":"512","line":1346,"column":28,"nodeType":"446","messageId":"447","endLine":1346,"endColumn":41},{"ruleId":"444","severity":1,"message":"513","line":1350,"column":11,"nodeType":"446","messageId":"447","endLine":1350,"endColumn":30},{"ruleId":"444","severity":1,"message":"514","line":1359,"column":11,"nodeType":"446","messageId":"447","endLine":1359,"endColumn":30},{"ruleId":"448","replacedBy":"515"},{"ruleId":"450","replacedBy":"516"},{"ruleId":"444","severity":1,"message":"517","line":82,"column":11,"nodeType":"446","messageId":"447","endLine":82,"endColumn":15},{"ruleId":"444","severity":1,"message":"518","line":121,"column":16,"nodeType":"446","messageId":"447","endLine":121,"endColumn":26},{"ruleId":"448","replacedBy":"519"},{"ruleId":"450","replacedBy":"520"},{"ruleId":"444","severity":1,"message":"521","line":11,"column":8,"nodeType":"446","messageId":"447","endLine":11,"endColumn":21},{"ruleId":"444","severity":1,"message":"522","line":3,"column":10,"nodeType":"446","messageId":"447","endLine":3,"endColumn":24},{"ruleId":"444","severity":1,"message":"523","line":20,"column":5,"nodeType":"446","messageId":"447","endLine":20,"endColumn":13},{"ruleId":"448","replacedBy":"524"},{"ruleId":"450","replacedBy":"525"},{"ruleId":"444","severity":1,"message":"526","line":334,"column":9,"nodeType":"446","messageId":"447","endLine":334,"endColumn":15},{"ruleId":"444","severity":1,"message":"527","line":432,"column":9,"nodeType":"446","messageId":"447","endLine":432,"endColumn":16},{"ruleId":"448","replacedBy":"528"},{"ruleId":"450","replacedBy":"529"},{"ruleId":"448","replacedBy":"530"},{"ruleId":"450","replacedBy":"531"},{"ruleId":"532","severity":1,"message":"533","line":28,"column":6,"nodeType":"534","endLine":28,"endColumn":8,"suggestions":"535"},{"ruleId":"536","severity":1,"message":"537","line":291,"column":11,"nodeType":"538","endLine":300,"endColumn":12},{"ruleId":"536","severity":1,"message":"537","line":383,"column":11,"nodeType":"538","endLine":393,"endColumn":12},{"ruleId":"536","severity":1,"message":"537","line":69,"column":9,"nodeType":"538","endLine":75,"endColumn":10},{"ruleId":"444","severity":1,"message":"539","line":27,"column":10,"nodeType":"446","messageId":"447","endLine":27,"endColumn":22},{"ruleId":"444","severity":1,"message":"540","line":57,"column":10,"nodeType":"446","messageId":"447","endLine":57,"endColumn":25},{"ruleId":"444","severity":1,"message":"509","line":86,"column":10,"nodeType":"446","messageId":"447","endLine":86,"endColumn":22},{"ruleId":"444","severity":1,"message":"541","line":86,"column":24,"nodeType":"446","messageId":"447","endLine":86,"endColumn":39},{"ruleId":"444","severity":1,"message":"510","line":87,"column":10,"nodeType":"446","messageId":"447","endLine":87,"endColumn":22},{"ruleId":"444","severity":1,"message":"542","line":87,"column":24,"nodeType":"446","messageId":"447","endLine":87,"endColumn":39},{"ruleId":"444","severity":1,"message":"498","line":107,"column":10,"nodeType":"446","messageId":"447","endLine":107,"endColumn":33},{"ruleId":"444","severity":1,"message":"543","line":107,"column":35,"nodeType":"446","messageId":"447","endLine":107,"endColumn":61},{"ruleId":"444","severity":1,"message":"544","line":108,"column":10,"nodeType":"446","messageId":"447","endLine":108,"endColumn":26},{"ruleId":"444","severity":1,"message":"545","line":108,"column":28,"nodeType":"446","messageId":"447","endLine":108,"endColumn":47},{"ruleId":"444","severity":1,"message":"546","line":109,"column":10,"nodeType":"446","messageId":"447","endLine":109,"endColumn":26},{"ruleId":"444","severity":1,"message":"547","line":109,"column":28,"nodeType":"446","messageId":"447","endLine":109,"endColumn":47},{"ruleId":"444","severity":1,"message":"548","line":117,"column":35,"nodeType":"446","messageId":"447","endLine":117,"endColumn":61},{"ruleId":"444","severity":1,"message":"549","line":120,"column":34,"nodeType":"446","messageId":"447","endLine":120,"endColumn":59},{"ruleId":"444","severity":1,"message":"550","line":123,"column":36,"nodeType":"446","messageId":"447","endLine":123,"endColumn":63},{"ruleId":"444","severity":1,"message":"551","line":126,"column":35,"nodeType":"446","messageId":"447","endLine":126,"endColumn":61},{"ruleId":"444","severity":1,"message":"552","line":129,"column":39,"nodeType":"446","messageId":"447","endLine":129,"endColumn":69},{"ruleId":"444","severity":1,"message":"553","line":131,"column":38,"nodeType":"446","messageId":"447","endLine":131,"endColumn":67},{"ruleId":"444","severity":1,"message":"554","line":134,"column":34,"nodeType":"446","messageId":"447","endLine":134,"endColumn":59},{"ruleId":"444","severity":1,"message":"555","line":137,"column":33,"nodeType":"446","messageId":"447","endLine":137,"endColumn":57},{"ruleId":"444","severity":1,"message":"556","line":140,"column":38,"nodeType":"446","messageId":"447","endLine":140,"endColumn":67},{"ruleId":"444","severity":1,"message":"557","line":143,"column":37,"nodeType":"446","messageId":"447","endLine":143,"endColumn":65},{"ruleId":"444","severity":1,"message":"558","line":146,"column":39,"nodeType":"446","messageId":"447","endLine":146,"endColumn":69},{"ruleId":"444","severity":1,"message":"559","line":148,"column":38,"nodeType":"446","messageId":"447","endLine":148,"endColumn":67},{"ruleId":"444","severity":1,"message":"560","line":153,"column":5,"nodeType":"446","messageId":"447","endLine":153,"endColumn":40},{"ruleId":"444","severity":1,"message":"561","line":155,"column":43,"nodeType":"446","messageId":"447","endLine":155,"endColumn":77},{"ruleId":"444","severity":1,"message":"562","line":157,"column":35,"nodeType":"446","messageId":"447","endLine":157,"endColumn":61},{"ruleId":"444","severity":1,"message":"563","line":160,"column":34,"nodeType":"446","messageId":"447","endLine":160,"endColumn":59},{"ruleId":"444","severity":1,"message":"564","line":163,"column":36,"nodeType":"446","messageId":"447","endLine":163,"endColumn":63},{"ruleId":"444","severity":1,"message":"565","line":166,"column":35,"nodeType":"446","messageId":"447","endLine":166,"endColumn":61},{"ruleId":"444","severity":1,"message":"566","line":169,"column":39,"nodeType":"446","messageId":"447","endLine":169,"endColumn":69},{"ruleId":"444","severity":1,"message":"567","line":171,"column":38,"nodeType":"446","messageId":"447","endLine":171,"endColumn":67},{"ruleId":"444","severity":1,"message":"568","line":174,"column":34,"nodeType":"446","messageId":"447","endLine":174,"endColumn":59},{"ruleId":"444","severity":1,"message":"569","line":177,"column":33,"nodeType":"446","messageId":"447","endLine":177,"endColumn":57},{"ruleId":"444","severity":1,"message":"570","line":180,"column":38,"nodeType":"446","messageId":"447","endLine":180,"endColumn":67},{"ruleId":"444","severity":1,"message":"571","line":183,"column":37,"nodeType":"446","messageId":"447","endLine":183,"endColumn":65},{"ruleId":"444","severity":1,"message":"572","line":186,"column":39,"nodeType":"446","messageId":"447","endLine":186,"endColumn":69},{"ruleId":"444","severity":1,"message":"573","line":188,"column":38,"nodeType":"446","messageId":"447","endLine":188,"endColumn":67},{"ruleId":"444","severity":1,"message":"574","line":193,"column":5,"nodeType":"446","messageId":"447","endLine":193,"endColumn":40},{"ruleId":"444","severity":1,"message":"575","line":195,"column":43,"nodeType":"446","messageId":"447","endLine":195,"endColumn":77},{"ruleId":"444","severity":1,"message":"576","line":198,"column":38,"nodeType":"446","messageId":"447","endLine":198,"endColumn":67},{"ruleId":"444","severity":1,"message":"577","line":201,"column":38,"nodeType":"446","messageId":"447","endLine":201,"endColumn":67},{"ruleId":"444","severity":1,"message":"499","line":206,"column":10,"nodeType":"446","messageId":"447","endLine":206,"endColumn":33},{"ruleId":"444","severity":1,"message":"578","line":206,"column":35,"nodeType":"446","messageId":"447","endLine":206,"endColumn":61},{"ruleId":"444","severity":1,"message":"579","line":207,"column":19,"nodeType":"446","messageId":"447","endLine":207,"endColumn":29},{"ruleId":"444","severity":1,"message":"580","line":214,"column":7,"nodeType":"446","messageId":"447","endLine":214,"endColumn":23},{"ruleId":"444","severity":1,"message":"581","line":215,"column":7,"nodeType":"446","messageId":"447","endLine":215,"endColumn":23},{"ruleId":"444","severity":1,"message":"582","line":220,"column":7,"nodeType":"446","messageId":"447","endLine":220,"endColumn":10},{"ruleId":"532","severity":1,"message":"583","line":617,"column":6,"nodeType":"534","endLine":617,"endColumn":35,"suggestions":"584"},{"ruleId":"444","severity":1,"message":"585","line":679,"column":12,"nodeType":"446","messageId":"447","endLine":679,"endColumn":31},{"ruleId":"532","severity":1,"message":"586","line":1033,"column":6,"nodeType":"534","endLine":1033,"endColumn":18,"suggestions":"587"},{"ruleId":"444","severity":1,"message":"588","line":1061,"column":15,"nodeType":"446","messageId":"447","endLine":1061,"endColumn":25},{"ruleId":"444","severity":1,"message":"589","line":1067,"column":15,"nodeType":"446","messageId":"447","endLine":1067,"endColumn":29},{"ruleId":"444","severity":1,"message":"590","line":1070,"column":15,"nodeType":"446","messageId":"447","endLine":1070,"endColumn":25},{"ruleId":"444","severity":1,"message":"591","line":1076,"column":15,"nodeType":"446","messageId":"447","endLine":1076,"endColumn":29},{"ruleId":"532","severity":1,"message":"592","line":1293,"column":6,"nodeType":"534","endLine":1293,"endColumn":75,"suggestions":"593"},{"ruleId":"444","severity":1,"message":"511","line":1391,"column":24,"nodeType":"446","messageId":"447","endLine":1391,"endColumn":37},{"ruleId":"444","severity":1,"message":"512","line":1394,"column":24,"nodeType":"446","messageId":"447","endLine":1394,"endColumn":37},{"ruleId":"532","severity":1,"message":"594","line":67,"column":6,"nodeType":"534","endLine":67,"endColumn":80,"suggestions":"595"},{"ruleId":"532","severity":1,"message":"596","line":67,"column":7,"nodeType":"597","endLine":67,"endColumn":27},{"ruleId":"532","severity":1,"message":"596","line":67,"column":29,"nodeType":"597","endLine":67,"endColumn":53},{"ruleId":"532","severity":1,"message":"596","line":67,"column":55,"nodeType":"597","endLine":67,"endColumn":79},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["598"],"no-negated-in-lhs",["599"],"'Header' is defined but never used.","'Link' is defined but never used.","'reactDom' is defined but never used.","'yesterday' is assigned a value but never used.","'yesterdayFootyStats' is assigned a value but never used.","'yesterdaySS' is assigned a value but never used.","'historic' is assigned a value but never used.","'historicFootyStats' is assigned a value but never used.","'historicSS' is assigned a value but never used.","'incrementDate' is defined but never used.","'getHighestScoringLeagues' is defined but never used.","'getLowestScoringLeagues' is defined but never used.",["598"],["599"],"'paid' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'sofaScoreLeagues' is assigned a value but never used.","'shouldOpen' is assigned a value but never used.","'drawAIPredictions' is assigned a value but never used.","'homeAIPredictions' is assigned a value but never used.","'awayAIPredictions' is assigned a value but never used.","'AIwinAmount' is assigned a value but never used.","'AIlossAmount' is assigned a value but never used.","'totalAIROI' is assigned a value but never used.","'totalAIInvestment' is assigned a value but never used.","'totalAIProfit' is assigned a value but never used.","'normalizeDifference' is defined but never used.","'predictScore' is defined but never used.","'findClosestProperty' is defined but never used.","'homeOverallVsAwayOverallComparison' is assigned a value but never used.","'awayOverallVsHomeOverallComparison' is assigned a value but never used.","'pointsComparisonHome' is assigned a value but never used.","'pointsComparisonAway' is assigned a value but never used.","'weighedPointsComparisonHome' is assigned a value but never used.","'weighedPointsComparisonAway' is assigned a value but never used.","'remainder' is assigned a value but never used.","'i' is assigned a value but never used.","'homeTwoGameAvg' is assigned a value but never used.","'awayTwoGameAvg' is assigned a value but never used.","'homeComparisonWeighting' is assigned a value but never used.","'awayComparisonWeighting' is assigned a value but never used.",["598"],["599"],"'rollingSOTDiffTotalHome' is assigned a value but never used.","'rollingSOTDiffTotalAway' is assigned a value but never used.","'latestHomeGoalDiff' is defined but never used.","'latestAwayGoalDiff' is defined but never used.","'getEMA' is assigned a value but never used.","'resultsArrayHome' is assigned a value but never used.","'resultsArrayAway' is assigned a value but never used.","'awayTeam' is assigned a value but never used.","'getLastGameResult' is defined but never used.","'homeFormTrend' is assigned a value but never used.","'awayFormTrend' is assigned a value but never used.","'homeXGRating' is assigned a value but never used.","'awayXGRating' is assigned a value but never used.","'testArrayHome' is assigned a value but never used.","'testArrayAway' is assigned a value but never used.","'rollingGoalDiffHome' is assigned a value but never used.","'rollingGoalDiffAway' is assigned a value but never used.",["598"],["599"],"'date' is defined but never used.","'stripLinks' is defined but never used.",["598"],["599"],"'TeamOfTheWeek' is defined but never used.","'createStatsDiv' is defined but never used.","'setCount' is assigned a value but never used.",["598"],["599"],"'config' is assigned a value but never used.","'largest' is assigned a value but never used.",["598"],["599"],["598"],["599"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["600"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'getTeamStats' is defined but never used.","'hasCompleteData' is assigned a value but never used.","'setHomeXGRating' is assigned a value but never used.","'setAwayXGRating' is assigned a value but never used.","'setRollingSOTDiffTotalHome' is assigned a value but never used.","'similarGamesHome' is assigned a value but never used.","'setSimilarGamesHome' is assigned a value but never used.","'similarGamesAway' is assigned a value but never used.","'setSimilarGamesAway' is assigned a value but never used.","'setHomeAttackStrengthLast5' is assigned a value but never used.","'setHomeOnlyAttackStrength' is assigned a value but never used.","'setHomeDefenceStrengthLast5' is assigned a value but never used.","'setHomeOnlyDefenceStrength' is assigned a value but never used.","'setHomePossessionStrengthLast5' is assigned a value but never used.","'setHomeOnlyPossessionStrength' is assigned a value but never used.","'setHomeXGForStrengthLast5' is assigned a value but never used.","'setHomeOnlyXGForStrength' is assigned a value but never used.","'setHomeXGAgainstStrengthLast5' is assigned a value but never used.","'setHomeOnlyXGAgainstStrength' is assigned a value but never used.","'setHomeDirectnessStrengthLast5' is assigned a value but never used.","'setHomeOnlyDirectnessStrength' is assigned a value but never used.","'setHomeAccuracyOverallStrengthLast5' is assigned a value but never used.","'setHomeOnlyAccuracyOverallStrength' is assigned a value but never used.","'setAwayAttackStrengthLast5' is assigned a value but never used.","'setAwayOnlyAttackStrength' is assigned a value but never used.","'setAwayDefenceStrengthLast5' is assigned a value but never used.","'setAwayOnlyDefenceStrength' is assigned a value but never used.","'setAwayPossessionStrengthLast5' is assigned a value but never used.","'setAwayOnlyPossessionStrength' is assigned a value but never used.","'setAwayXGForStrengthLast5' is assigned a value but never used.","'setAwayOnlyXGForStrength' is assigned a value but never used.","'setAwayXGAgainstStrengthLast5' is assigned a value but never used.","'setAwayOnlyXGAgainstStrength' is assigned a value but never used.","'setAwayDirectnessStrengthLast5' is assigned a value but never used.","'setAwayOnlyDirectnessStrength' is assigned a value but never used.","'setAwayAccuracyOverallStrengthLast5' is assigned a value but never used.","'setAwayOnlyAccuracyOverallStrength' is assigned a value but never used.","'setGameArrayHomeTeamHomeGames' is assigned a value but never used.","'setGameArrayAwayTeamAwayGames' is assigned a value but never used.","'setRollingSOTDiffTotalAway' is assigned a value but never used.","'setDivider' is assigned a value but never used.","'sotDiffArrayHome' is defined but never used.","'sotDiffArrayAway' is defined but never used.","'ref' is defined but never used.","React Hook useEffect has an unnecessary dependency: 'arrayOfGames'. Either exclude it or remove the dependency array. Outer scope values like 'arrayOfGames' aren't valid dependencies because mutating them doesn't re-render the component.",["601"],"'singleSimilarResult' is defined but never used.","React Hook useEffect has an unnecessary dependency: 'userDetail'. Either exclude it or remove the dependency array. Outer scope values like 'userDetail' aren't valid dependencies because mutating them doesn't re-render the component.",["602"],"'resultHome' is assigned a value but never used.","'resultHomeOnly' is assigned a value but never used.","'resultAway' is assigned a value but never used.","'resultAwayOnly' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'awayFiveGameAverage', 'awayTenGameAverage', 'firstRenderDone', 'homeFiveGameAverage', and 'homeTenGameAverage'. Either include them or remove the dependency array. Outer scope values like 'allForm' aren't valid dependencies because mutating them doesn't re-render the component.",["603"],"React Hook useEffect has missing dependencies: 'awayForm.LeaguePosition', 'awayForm.allTeamResults', 'awayForm.teamName', 'game', 'homeForm.LeaguePosition', 'homeForm.allTeamResults', and 'homeForm.teamName'. Either include them or remove the dependency array.",["604"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","no-global-assign","no-unsafe-negation",{"desc":"605","fix":"606"},{"desc":"607","fix":"608"},{"desc":"609","fix":"610"},{"desc":"611","fix":"612"},{"desc":"613","fix":"614"},"Update the dependencies array to be: [fetchData]",{"range":"615","text":"616"},"Update the dependencies array to be: [game.homeTeam]",{"range":"617","text":"618"},"Update the dependencies array to be: []",{"range":"619","text":"620"},"Update the dependencies array to be: [game, displayBool, firstRenderDone, homeTenGameAverage, homeFiveGameAverage, awayTenGameAverage, awayFiveGameAverage]",{"range":"621","text":"622"},"Update the dependencies array to be: [awayForm.LeaguePosition, awayForm.allTeamResults, awayForm.teamName, game, homeForm.LeaguePosition, homeForm.allTeamResults, homeForm.teamName]",{"range":"623","text":"624"},[510,512],"[fetchData]",[22947,22976],"[game.homeTeam]",[38455,38467],"[]",[47503,47572],"[game, displayBool, firstRenderDone, homeTenGameAverage, homeFiveGameAverage, awayTenGameAverage, awayFiveGameAverage]",[2107,2181],"[awayForm.LeaguePosition, awayForm.allTeamResults, awayForm.teamName, game, homeForm.LeaguePosition, homeForm.allTeamResults, homeForm.teamName]"]